
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_fgCtr
                                    1-   18     	extern	_LedCtr2
                                    1-   19     	extern	_checkInAD
                                    1-   20     	extern	_PORTAbits
                                    1-   21     	extern	_PORTBbits
                                    1-   22     	extern	_PCONbits
                                    1-   23     	extern	_BWUCONbits
                                    1-   24     	extern	_ABPLCONbits
                                    1-   25     	extern	_BPHCONbits
                                    1-   26     	extern	_INTEbits
                                    1-   27     	extern	_INTFbits
                                    1-   28     	extern	_ADMDbits
                                    1-   29     	extern	_ADRbits
                                    1-   30     	extern	_ADVREFHbits
                                    1-   31     	extern	_ADCRbits
                                    1-   32     	extern	_AWUCONbits
                                    1-   33     	extern	_PACONbits
                                    1-   34     	extern	_INTEDGbits
                                    1-   35     	extern	_ANAENbits
                                    1-   36     	extern	_RFCbits
                                    1-   37     	extern	_INTE2bits
                                    1-   38     	extern	_INDF
                                    1-   39     	extern	_TMR0
                                    1-   40     	extern	_PCL
                                    1-   41     	extern	_STATUS
                                    1-   42     	extern	_FSR
                                    1-   43     	extern	_PORTA
                                    1-   44     	extern	_PORTB
                                    1-   45     	extern	_PCON
                                    1-   46     	extern	_BWUCON
                                    1-   47     	extern	_PCHBUF
                                    1-   48     	extern	_ABPLCON
                                    1-   49     	extern	_BPHCON
                                    1-   50     	extern	_INTE
                                    1-   51     	extern	_INTF
                                    1-   52     	extern	_ADMD
                                    1-   53     	extern	_ADR
                                    1-   54     	extern	_ADD
                                    1-   55     	extern	_ADVREFH
                                    1-   56     	extern	_ADCR
                                    1-   57     	extern	_AWUCON
                                    1-   58     	extern	_PACON
                                    1-   59     	extern	_INTEDG
                                    1-   60     	extern	_TMRH
                                    1-   61     	extern	_ANAEN
                                    1-   62     	extern	_RFC
                                    1-   63     	extern	_TM3RH
                                    1-   64     	extern	_INTE2
                                    1-   65     	extern	_TMR1
                                    1-   66     	extern	_T1CR1
                                    1-   67     	extern	_T1CR2
                                    1-   68     	extern	_PWM1DUTY
                                    1-   69     	extern	_PS1CV
                                    1-   70     	extern	_BZ1CR
                                    1-   71     	extern	_IRCR
                                    1-   72     	extern	_TBHP
                                    1-   73     	extern	_TBHD
                                    1-   74     	extern	_TMR2
                                    1-   75     	extern	_T2CR1
                                    1-   76     	extern	_T2CR2
                                    1-   77     	extern	_PWM2DUTY
                                    1-   78     	extern	_PS2CV
                                    1-   79     	extern	_BZ2CR
                                    1-   80     	extern	_OSCCR
                                    1-   81     	extern	_TMR3
                                    1-   82     	extern	_T3CR1
                                    1-   83     	extern	_T3CR2
                                    1-   84     	extern	_PWM3DUTY
                                    1-   85     	extern	_PS3CV
                                    1-   86     	extern	_BZ3CR
                                    1-   87     	extern	_IOSTA
                                    1-   88     	extern	_IOSTB
                                    1-   89     	extern	_APHCON
                                    1-   90     	extern	_PS0CV
                                    1-   91     	extern	_BODCON
                                    1-   92     	extern	_CMPCR
                                    1-   93     	extern	_PCON1
                                    1-   94     	extern	_T0MD
                                    1-   95     	extern	___sdcc_saved_fsr
                                    1-   96     	extern	___sdcc_saved_stk00
                                    1-   97     	extern	___sdcc_saved_stk01
                                    1-   98     	extern	__nyc_ny8_startup
                                    1-   99     ;--------------------------------------------------------
                                    1-  100     ; global declarations
                                    1-  101     ;--------------------------------------------------------
                                    1-  102     	extern	_F_wait_eoc
                                    1-  103     	extern	_F_AIN2_Convert
                                    1-  104     	extern	_F_AIN3_Convert
                                    1-  105     	extern	_F_AIN4_Convert
                                    1-  106     	extern	_checkOutA
                                    1-  107     	extern	_checkBatAD
                                    1-  108     	extern	_initAD
                                    1-  109     	extern	_delay
                                    1-  110     	extern	_chrgCtr
                                    1-  111     	extern	_keyRead
                                    1-  112     	extern	_gotoSleep
                                    1-  113     	extern	_pwmStop
                                    1-  114     	extern	_pwmInit
                                    1-  115     	extern	_pwm1Stop
                                    1-  116     	extern	_pwm1Init
                                    1-  117     	extern	_LED8ON
                                    1-  118     	extern	_LED7ON
                                    1-  119     	extern	_LED6ON
                                    1-  120     	extern	_LED5ON
                                    1-  121     	extern	_LED4ON
                                    1-  122     	extern	_LED3ON
                                    1-  123     	extern	_LED2ON
                                    1-  124     	extern	_LED1ON
                                    1-  125     	extern	_LedInput
                                    1-  126     	extern	_ledShow
                                    1-  127     	extern	_initSys
                                    1-  128     	extern	_powerOff
                                    1-  129     	extern	_keyCtr
                                    1-  130     	extern	_isr
                                    1-  131     	extern	_main
                                    1-  132     	extern	_Status
                                    1-  133     	extern	_duty
                                    1-  134     	extern	_intCount
                                    1-  135     	extern	_count500ms
                                    1-  136     	extern	_keyCount
                                    1-  137     	extern	_workStep
                                    1-  138     	extern	_ledStep
                                    1-  139     	extern	_fgCount
                                    1-  140     	extern	_fgPRD
                                    1-  141     	extern	_preFG
                                    1-  142     	extern	_maxDuty
                                    1-  143     	extern	_pwStep
                                    1-  144     	extern	_R_AIN4_DATA
                                    1-  145     	extern	_R_AIN4_DATA_LB
                                    1-  146     	extern	_R_AIN3_DATA
                                    1-  147     	extern	_R_AIN3_DATA_LB
                                    1-  148     	extern	_R_AIN2_DATA
                                    1-  149     	extern	_R_AIN2_DATA_LB
                                    1-  150     	extern	_chrgTime
                                    1-  151     	extern	_startStep
                                    1-  152     	extern	_sleepTime
                                    1-  153     	extern	_count200ms
                                    1-  154     	extern	_count1s
                                    1-  155     	extern	_count900s
                                    1-  156     	extern	_lowBatTime
                                    1-  157     	extern	_ledTime
                                    1-  158     	extern	_overCount
                                    1-  159     	extern	_chrgCount
                                    1-  160     	extern	_ledLightTime
                                    1-  161     	extern	_currentDuty
                                    1-  162     	extern	_fullCount
                                    1-  163     	extern	_shanshuoTime
                                    1-  164     	extern	_firstTime
                                    1-  165     	extern	_tempDuty
                                    1-  166     	extern	_lowCount
                                    1-  167     	extern	_longPressFlag
                                    1-  168     	extern	_IntFlag
                                    1-  169     	extern	_chrgFlag
                                    1-  170     	extern	_redLedFlag
                                    1-  171     	extern	_debug
                                    1-  173     	extern PSAVE
                                    1-  174     	extern SSAVE
                                    1-  175     	extern WSAVE
                                    1-  176     	extern STK02
                                    1-  177     	extern STK01
                                    1-  178     	extern STK00
                                    1-  180     .segment "uninit", 0x20000040
 20000040                           1-  181     PSAVE:
                                    1-  182     	.res 1
 20000041                           1-  183     SSAVE:
                                    1-  184     	.res 1
 20000042                           1-  185     WSAVE:
                                    1-  186     	.res 1
 20000043                           1-  187     STK02:
                                    1-  188     	.res 1
 20000044                           1-  189     STK01:
                                    1-  190     	.res 1
 20000045                           1-  191     STK00:
                                    1-  192     	.res 1
                                    1-  194     ;--------------------------------------------------------
                                    1-  195     ; global definitions
                                    1-  196     ;--------------------------------------------------------
                                    1-  197     .segment "uninit"
     0000                           1-  198     _R_AIN4_DATA:
                                    1-  199     	.res	2
                                    1-  202     .segment "uninit"
     0000                           1-  203     _R_AIN4_DATA_LB:
                                    1-  204     	.res	1
                                    1-  207     .segment "uninit"
     0000                           1-  208     _R_AIN3_DATA:
                                    1-  209     	.res	2
                                    1-  212     .segment "uninit"
     0000                           1-  213     _R_AIN3_DATA_LB:
                                    1-  214     	.res	1
                                    1-  217     .segment "uninit"
     0000                           1-  218     _R_AIN2_DATA:
                                    1-  219     	.res	2
                                    1-  222     .segment "uninit"
     0000                           1-  223     _R_AIN2_DATA_LB:
                                    1-  224     	.res	1
                                    1-  227     ;--------------------------------------------------------
                                    1-  228     ; absolute symbol definitions
                                    1-  229     ;--------------------------------------------------------
                                    1-  230     ;--------------------------------------------------------
                                    1-  231     ; compiler-defined variables
                                    1-  232     ;--------------------------------------------------------
                                    1-  233     .segment "uninit"
     0000                           1-  234     r0x1053:
                                    1-  235     	.res	1
                                    1-  236     .segment "uninit"
     0000                           1-  237     r0x1048:
                                    1-  238     	.res	1
                                    1-  239     .segment "uninit"
     0000                           1-  240     r0x1052:
                                    1-  241     	.res	1
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x1051:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x1050:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x104F:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x104E:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x104D:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x104C:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x104B:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x104A:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x1049:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1047:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1046:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x102A:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x102B:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x1044:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x1045:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x1040:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x1041:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x1038:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x1039:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x103A:
                                    1-  301     	.res	1
                                    1-  302     .segment "uninit"
     0000                           1-  303     r0x103D:
                                    1-  304     	.res	1
                                    1-  305     .segment "uninit"
     0000                           1-  306     r0x1032:
                                    1-  307     	.res	1
                                    1-  308     .segment "uninit"
     0000                           1-  309     r0x1033:
                                    1-  310     	.res	1
                                    1-  311     .segment "uninit"
     0000                           1-  312     r0x1034:
                                    1-  313     	.res	1
                                    1-  314     .segment "uninit"
     0000                           1-  315     r0x1037:
                                    1-  316     	.res	1
                                    1-  317     .segment "uninit"
     0000                           1-  318     r0x102C:
                                    1-  319     	.res	1
                                    1-  320     .segment "uninit"
     0000                           1-  321     r0x102D:
                                    1-  322     	.res	1
                                    1-  323     .segment "uninit"
     0000                           1-  324     r0x102E:
                                    1-  325     	.res	1
                                    1-  326     .segment "uninit"
     0000                           1-  327     r0x1031:
                                    1-  328     	.res	1
                                    1-  329     ;--------------------------------------------------------
                                    1-  330     ; initialized data
                                    1-  331     ;--------------------------------------------------------
                                    1-  333     .segment "idata"
     0000                           1-  334     _Status:
     0000 0000                      1-  335     	dw	0x00
                                    1-  339     .segment "idata"
     0000                           1-  340     _duty:
     0000 0000 0000                 1-  341     	dw	0x00, 0x00
                                    1-  345     .segment "idata"
     0000                           1-  346     _intCount:
     0000 0000                      1-  347     	dw	0x00
                                    1-  351     .segment "idata"
     0000                           1-  352     _count500ms:
     0000 0000                      1-  353     	dw	0x00
                                    1-  357     .segment "idata"
     0000                           1-  358     _keyCount:
     0000 0000                      1-  359     	dw	0x00
                                    1-  363     .segment "idata"
     0000                           1-  364     _workStep:
     0000 0000                      1-  365     	dw	0x00
                                    1-  369     .segment "idata"
     0000                           1-  370     _ledStep:
     0000 0000                      1-  371     	dw	0x00
                                    1-  375     .segment "idata"
     0000                           1-  376     _fgCount:
     0000 0000 0000                 1-  377     	dw	0x00, 0x00
                                    1-  381     .segment "idata"
     0000                           1-  382     _fgPRD:
     0000 0000 0000                 1-  383     	dw	0x00, 0x00
                                    1-  387     .segment "idata"
     0000                           1-  388     _preFG:
     0000 0000                      1-  389     	dw	0x00
                                    1-  393     .segment "idata"
     0000                           1-  394     _maxDuty:
     0000 0000                      1-  395     	dw	0x00
                                    1-  399     .segment "idata"
     0000                           1-  400     _pwStep:
     0000 0000                      1-  401     	dw	0x00
                                    1-  405     .segment "idata"
     0000                           1-  406     _chrgTime:
     0000 0000 0000                 1-  407     	dw	0x00, 0x00
                                    1-  411     .segment "idata"
     0000                           1-  412     _startStep:
     0000 0000                      1-  413     	dw	0x00
                                    1-  417     .segment "idata"
     0000                           1-  418     _sleepTime:
     0000 0000 0000                 1-  419     	dw	0x00, 0x00
                                    1-  423     .segment "idata"
     0000                           1-  424     _count200ms:
     0000 0000                      1-  425     	dw	0x00
                                    1-  429     .segment "idata"
     0000                           1-  430     _count1s:
     0000 0000                      1-  431     	dw	0x00
                                    1-  435     .segment "idata"
     0000                           1-  436     _count900s:
     0000 0000 0000                 1-  437     	dw	0x00, 0x00
                                    1-  441     .segment "idata"
     0000                           1-  442     _lowBatTime:
     0000 0000                      1-  443     	dw	0x00
                                    1-  447     .segment "idata"
     0000                           1-  448     _ledTime:
     0000 0000                      1-  449     	dw	0x00
                                    1-  453     .segment "idata"
     0000                           1-  454     _overCount:
     0000 0000                      1-  455     	dw	0x00
                                    1-  459     .segment "idata"
     0000                           1-  460     _chrgCount:
     0000 0000                      1-  461     	dw	0x00
                                    1-  465     .segment "idata"
     0000                           1-  466     _ledLightTime:
     0000 0000                      1-  467     	dw	0x00
                                    1-  471     .segment "idata"
     0000                           1-  472     _currentDuty:
     0000 0000                      1-  473     	dw	0x00
                                    1-  477     .segment "idata"
     0000                           1-  478     _fullCount:
     0000 0000                      1-  479     	dw	0x00
                                    1-  483     .segment "idata"
     0000                           1-  484     _shanshuoTime:
     0000 0000                      1-  485     	dw	0x00
                                    1-  489     .segment "idata"
     0000                           1-  490     _firstTime:
     0000 0000                      1-  491     	dw	0x00
                                    1-  495     .segment "idata"
     0000                           1-  496     _tempDuty:
     0000 0000                      1-  497     	dw	0x00
                                    1-  501     .segment "idata"
     0000                           1-  502     _lowCount:
     0000 0000                      1-  503     	dw	0x00
                                    1-  507     .segment "idata"
     0000                           1-  508     _longPressFlag:
     0000 0000                      1-  509     	dw	0x00
                                    1-  513     .segment "idata"
     0000                           1-  514     _IntFlag:
     0000 0000                      1-  515     	dw	0x00
                                    1-  519     .segment "idata"
     0000                           1-  520     _chrgFlag:
     0000 0000                      1-  521     	dw	0x00
                                    1-  525     .segment "idata"
     0000                           1-  526     _redLedFlag:
     0000 0000                      1-  527     	dw	0x00
                                    1-  531     .segment "idata"
     0000                           1-  532     _debug:
     0000 0000                      1-  533     	dw	0x00
                                    1-  536     ;--------------------------------------------------------
                                    1-  537     ; overlayable items in internal ram 
                                    1-  538     ;--------------------------------------------------------
                                    1-  539     ;	udata_ovr
                                    1-  540     ;--------------------------------------------------------
                                    1-  541     ; reset vector 
                                    1-  542     ;--------------------------------------------------------
                                    1-  543     ORG	0x0000
     0000 3rrr                      1-  544     	LGOTO	__nyc_ny8_startup
                                    1-  545     ;--------------------------------------------------------
                                    1-  546     ; interrupt and initialization code
                                    1-  547     ;--------------------------------------------------------
                                    1-  548     ORG 0x0008
                                    1-  549     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  551     .segment "code"
     0000                           1-  552     __sdcc_interrupt:
                                    1-  553     ;***
                                    1-  554     ;  pBlock Stats: dbName = I
                                    1-  555     ;***
                                    1-  556     ;2 compiler assigned registers:
                                    1-  557     ;   STK00
                                    1-  558     ;   STK01
                                    1-  559     ;; Starting pCode block
     0000                           1-  560     _isr:
                                    1-  561     ; 0 exit points
                                    1-  562     	.line	114, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  563     	MOVAR	WSAVE
     0001 1503                      1-  564     	SWAPR	STATUS,W
     0002 0283                      1-  565     	CLRR	STATUS
     0003 00rr                      1-  566     	MOVAR	SSAVE
     0004 010A                      1-  567     	MOVR	PCHBUF,W
     0005 028A                      1-  568     	CLRR	PCHBUF
     0006 00rr                      1-  569     	MOVAR	PSAVE
     0007 0104                      1-  570     	MOVR	FSR,W
                                    1-  571     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  572     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  573     	MOVR	STK00,W
                                    1-  574     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  575     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  576     	MOVR	STK01,W
                                    1-  577     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  578     	MOVAR	___sdcc_saved_stk01
                                    1-  579     	.line	116, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  580     	BTRSS	_INTFbits,0
                                    1-  581     	MGOTO	_00126_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  582     	.line	118, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  583     	MOVIA	0x37
     0013 03rr                      1-  584     	ADDAR	_TMR0,F
                                    1-  585     	.line	120, "main.c"; 	if(++intCount >= 100)
                                    1-  586     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  587     	INCR	_intCount,F
                                    1-  588     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  589     	MOVIA	0x64
     0017 04rr                      1-  590     	SUBAR	_intCount,W
     0018 0803                      1-  591     	BTRSS	STATUS,0
                                    1-  592     	MGOTO	_00126_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  593     	.line	122, "main.c"; 	IntFlag = 1;
     001A 2101                      1-  594     	MOVIA	0x01
                                    1-  595     	BANKSEL	_IntFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  596     	MOVAR	_IntFlag
                                    1-  597     	.line	123, "main.c"; 	intCount = 0;
                                    1-  598     	BANKSEL	_intCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  599     	CLRR	_intCount
                                    1-  600     	.line	124, "main.c"; 	if(workStep)
                                    1-  601     	BANKSEL	_workStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 01rr                      1-  602     	MOVR	_workStep,W
     0021 0D03                      1-  603     	BTRSC	STATUS,2
                                    1-  604     	MGOTO	_00106_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  605     	.line	125, "main.c"; 	++fgCount;
                                    1-  606     	BANKSEL	_fgCount
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 05rr                      1-  607     	INCR	_fgCount,F
     0025 0D03                      1-  608     	BTRSC	STATUS,2
     0026 05rr                      1-  609     	INCR	(_fgCount + 1),F
     0027                           1-  610     _00106_DS_:
                                    1-  611     	.line	126, "main.c"; 	if(++count500ms >= 60)
                                    1-  612     	BANKSEL	_count500ms
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 05rr                      1-  613     	INCR	_count500ms,F
                                    1-  614     ;;unsigned compare: left < lit (0x3C=60), size=1
     0029 213C                      1-  615     	MOVIA	0x3c
     002A 04rr                      1-  616     	SUBAR	_count500ms,W
     002B 0C03                      1-  617     	BTRSC	STATUS,0
                                    1-  618     	.line	127, "main.c"; 	count500ms = 0;
     002C 02rr                      1-  619     	CLRR	_count500ms
                                    1-  620     	.line	128, "main.c"; 	if(++count200ms >= 20)
                                    1-  621     	BANKSEL	_count200ms
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 05rr                      1-  622     	INCR	_count200ms,F
     002F 2114                      1-  623     	MOVIA	0x14
     0030 04rr                      1-  624     	SUBAR	_count200ms,W
     0031 0C03                      1-  625     	BTRSC	STATUS,0
                                    1-  626     	.line	129, "main.c"; 	count200ms = 0;
     0032 02rr                      1-  627     	CLRR	_count200ms
                                    1-  628     	.line	130, "main.c"; 	if(++count1s >= 100)
                                    1-  629     	BANKSEL	_count1s
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 05rr                      1-  630     	INCR	_count1s,F
     0035 2164                      1-  631     	MOVIA	0x64
     0036 04rr                      1-  632     	SUBAR	_count1s,W
     0037 0803                      1-  633     	BTRSS	STATUS,0
                                    1-  634     	MGOTO	_00126_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  635     	.line	132, "main.c"; 	count1s = 0;
     0039 02rr                      1-  636     	CLRR	_count1s
                                    1-  637     	.line	133, "main.c"; 	if(chrgFlag == 1 && pwStep == 8)
                                    1-  638     	BANKSEL	_chrgFlag
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1-  639     	MOVR	_chrgFlag,W
     003C 2401                      1-  640     	XORIA	0x01
     003D 0903                      1-  641     	BTRSS	STATUS,2
                                    1-  642     	MGOTO	_00112_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  643     	BANKSEL	_pwStep
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 01rr                      1-  644     	MOVR	_pwStep,W
     0041 2408                      1-  645     	XORIA	0x08
     0042 0903                      1-  646     	BTRSS	STATUS,2
                                    1-  647     	MGOTO	_00112_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  648     	.line	135, "main.c"; 	++chrgTime;
                                    1-  649     	BANKSEL	_chrgTime
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 05rr                      1-  650     	INCR	_chrgTime,F
     0046 0D03                      1-  651     	BTRSC	STATUS,2
     0047 05rr                      1-  652     	INCR	(_chrgTime + 1),F
     0048                           1-  653     _00112_DS_:
                                    1-  654     	.line	137, "main.c"; 	if(ledLightTime > 0)
                                    1-  655     	BANKSEL	_ledLightTime
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 01rr                      1-  656     	MOVR	_ledLightTime,W
     004A 0903                      1-  657     	BTRSS	STATUS,2
                                    1-  658     	.line	138, "main.c"; 	--ledLightTime;
     004B 06rr                      1-  659     	DECR	_ledLightTime,F
                                    1-  660     	.line	139, "main.c"; 	if(shanshuoTime > 0)
                                    1-  661     	BANKSEL	_shanshuoTime
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 01rr                      1-  662     	MOVR	_shanshuoTime,W
     004E 0903                      1-  663     	BTRSS	STATUS,2
                                    1-  664     	.line	140, "main.c"; 	--shanshuoTime;
     004F 06rr                      1-  665     	DECR	_shanshuoTime,F
                                    1-  666     	.line	141, "main.c"; 	if(workStep)
                                    1-  667     	BANKSEL	_workStep
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 01rr                      1-  668     	MOVR	_workStep,W
     0052 0D03                      1-  669     	BTRSC	STATUS,2
                                    1-  670     	MGOTO	_00119_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  671     	.line	143, "main.c"; 	++count900s;
                                    1-  672     	BANKSEL	_count900s
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 05rr                      1-  673     	INCR	_count900s,F
     0056 0D03                      1-  674     	BTRSC	STATUS,2
     0057 05rr                      1-  675     	INCR	(_count900s + 1),F
                                    1-  676     	MGOTO	_00126_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
     0059                           1-  677     _00119_DS_:
                                    1-  678     	.line	147, "main.c"; 	count900s = 0;
                                    1-  679     	BANKSEL	_count900s
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 02rr                      1-  680     	CLRR	_count900s
     005B 02rr                      1-  681     	CLRR	(_count900s + 1)
     005C                           1-  682     _00126_DS_:
                                    1-  683     	.line	156, "main.c"; 	if(INTFbits.PABIF)
     005C 08rr                      1-  684     	BTRSS	_INTFbits,1
                                    1-  685     	MGOTO	_00128_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  686     	.line	158, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     005E 21FD                      1-  687     	MOVIA	0xfd
     005F 00rr                      1-  688     	MOVAR	_INTF
     0060                           1-  689     _00128_DS_:
                                    1-  690     	.line	161, "main.c"; 	INTF = 0;
     0060 02rr                      1-  691     	CLRR	_INTF
                                    1-  692     	.line	163, "main.c"; 	}
                                    1-  693     	BANKSEL	___sdcc_saved_stk01
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1-  694     	MOVR	___sdcc_saved_stk01,W
     0063 00rr                      1-  695     	MOVAR	STK01
                                    1-  696     	BANKSEL	___sdcc_saved_stk00
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1-  697     	MOVR	___sdcc_saved_stk00,W
     0066 00rr                      1-  698     	MOVAR	STK00
                                    1-  699     	BANKSEL	___sdcc_saved_fsr
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 01rr                      1-  700     	MOVR	___sdcc_saved_fsr,W
     0069 0084                      1-  701     	MOVAR	FSR
     006A 01rr                      1-  702     	MOVR	PSAVE,W
     006B 008A                      1-  703     	MOVAR	PCHBUF
     006C 0283                      1-  704     	CLRR	STATUS
     006D 15rr                      1-  705     	SWAPR	SSAVE,W
     006E 0083                      1-  706     	MOVAR	STATUS
     006F 15rr                      1-  707     	SWAPR	WSAVE,F
     0070 15rr                      1-  708     	SWAPR	WSAVE,W
     0071                           1-  709     END_OF_INTERRUPT:
     0071 0011                      1-  710     	RETIE	
                                    1-  712     ;--------------------------------------------------------
                                    1-  713     ; code
                                    1-  714     ;--------------------------------------------------------
                                    1-  715     ;***
                                    1-  716     ;  pBlock Stats: dbName = M
                                    1-  717     ;***
                                    1-  718     ;has an exit
                                    1-  719     ;functions called:
                                    1-  720     ;   _initSys
                                    1-  721     ;   _initAD
                                    1-  722     ;   _ledShow
                                    1-  723     ;   _keyCtr
                                    1-  724     ;   _checkBatAD
                                    1-  725     ;   _checkOutA
                                    1-  726     ;   _chrgCtr
                                    1-  727     ;   _gotoSleep
                                    1-  728     ;   _powerOff
                                    1-  729     ;   _initSys
                                    1-  730     ;   _initAD
                                    1-  731     ;   _ledShow
                                    1-  732     ;   _keyCtr
                                    1-  733     ;   _checkBatAD
                                    1-  734     ;   _checkOutA
                                    1-  735     ;   _chrgCtr
                                    1-  736     ;   _gotoSleep
                                    1-  737     ;   _powerOff
                                    1-  738     ;; Starting pCode block
                                    1-  739     .segment "code"; module=main, function=_main
     0000                           1-  741     _main:
                                    1-  742     ; 2 exit points
                                    1-  743     	.line	167, "main.c"; 	initSys();
                                    1-  744     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  745     	.line	168, "main.c"; 	initAD();
                                    1-  746     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  747     _00156_DS_:
                                    1-  748     	.line	171, "main.c"; 	CLRWDT();
     0002 0002                      1-  749     	clrwdt
                                    1-  750     	.line	172, "main.c"; 	ledShow();
                                    1-  751     	MCALL	_ledShow
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  752     	.line	173, "main.c"; 	if(!IntFlag)
                                    1-  753     	BANKSEL	_IntFlag
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  754     	MOVR	_IntFlag,W
     0006 0D03                      1-  755     	BTRSC	STATUS,2
                                    1-  756     	MGOTO	_00156_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  757     	.line	175, "main.c"; 	IntFlag = 0;
     0008 02rr                      1-  758     	CLRR	_IntFlag
                                    1-  759     	.line	176, "main.c"; 	if(chrgFlag == 0)
                                    1-  760     	BANKSEL	_chrgFlag
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 01rr                      1-  761     	MOVR	_chrgFlag,W
     000B 0D03                      1-  762     	BTRSC	STATUS,2
                                    1-  763     	.line	177, "main.c"; 	keyCtr();
                                    1-  764     	MCALL	_keyCtr
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  765     	.line	178, "main.c"; 	if(count200ms < 5)
     000D 2105                      1-  766     	MOVIA	0x05
                                    1-  767     	BANKSEL	_count200ms
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 04rr                      1-  768     	SUBAR	_count200ms,W
     0010 0C03                      1-  769     	BTRSC	STATUS,0
                                    1-  770     	MGOTO	_00141_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  771     	.line	180, "main.c"; 	checkBatAD();
                                    1-  772     	MCALL	_checkBatAD
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  773     	MGOTO	_00142_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  774     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  775     ;;unsigned compare: left >= lit (0x9=9), size=1
     0014                           1-  776     _00141_DS_:
                                    1-  777     	.line	182, "main.c"; 	else if(count200ms > 8 && count200ms < 11)
     0014 2109                      1-  778     	MOVIA	0x09
                                    1-  779     	BANKSEL	_count200ms
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 04rr                      1-  780     	SUBAR	_count200ms,W
     0017 0803                      1-  781     	BTRSS	STATUS,0
                                    1-  782     	MGOTO	_00142_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  783     ;;unsigned compare: left < lit (0xB=11), size=1
     0019 210B                      1-  784     	MOVIA	0x0b
     001A 04rr                      1-  785     	SUBAR	_count200ms,W
     001B 0803                      1-  786     	BTRSS	STATUS,0
                                    1-  787     	.line	184, "main.c"; 	checkOutA();
                                    1-  788     	MCALL	_checkOutA
     001C 2rrr                      3-   66 m1      LCALL rom_address
     001D                           1-  789     _00142_DS_:
                                    1-  790     	.line	186, "main.c"; 	chrgCtr();
                                    1-  791     	MCALL	_chrgCtr
     001D 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  792     	.line	188, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  793     	BANKSEL	_workStep
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 01rr                      1-  794     	MOVR	_workStep,W
     0020 0D03                      1-  795     	BTRSC	STATUS,2
                                    1-  796     	MGOTO	_00144_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  797     	BANKSEL	_currentDuty
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1-  798     	MOVR	_currentDuty,W
                                    1-  799     	BANKSEL	_maxDuty
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 04rr                      1-  800     	SUBAR	_maxDuty,W
     0026 0C03                      1-  801     	BTRSC	STATUS,0
                                    1-  802     	MGOTO	_00144_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  803     	.line	190, "main.c"; 	currentDuty = currentDuty - 10;
     0028 21F6                      1-  804     	MOVIA	0xf6
                                    1-  805     	BANKSEL	_currentDuty
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 03rr                      1-  806     	ADDAR	_currentDuty,F
                                    1-  807     	.line	191, "main.c"; 	PWM2DUTY = currentDuty;
     002B 01rr                      1-  808     	MOVR	_currentDuty,W
     002C 00rr                      1-  809     	SFUN	_PWM2DUTY
     002D                           1-  810     _00144_DS_:
                                    1-  811     	.line	193, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x20) == 0 && ledLightTime == 0)
                                    1-  812     	BANKSEL	_workStep
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 01rr                      1-  813     	MOVR	_workStep,W
     002F 0903                      1-  814     	BTRSS	STATUS,2
                                    1-  815     	MGOTO	_00149_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  816     	BANKSEL	_keyCount
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1-  817     	MOVR	_keyCount,W
     0033 0903                      1-  818     	BTRSS	STATUS,2
                                    1-  819     	MGOTO	_00149_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  820     	BANKSEL	_PORTA
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 0Err                      1-  821     	BTRSC	_PORTA,5
                                    1-  822     	MGOTO	_00149_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  823     	BANKSEL	_ledLightTime
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 01rr                      1-  824     	MOVR	_ledLightTime,W
     003A 0903                      1-  825     	BTRSS	STATUS,2
                                    1-  826     	MGOTO	_00149_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  827     	.line	195, "main.c"; 	if(++sleepTime > 300)
                                    1-  828     	BANKSEL	_sleepTime
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 05rr                      1-  829     	INCR	_sleepTime,F
     003E 0D03                      1-  830     	BTRSC	STATUS,2
     003F 05rr                      1-  831     	INCR	(_sleepTime + 1),F
                                    1-  832     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  833     ;;unsigned compare: left >= lit (0x12D=301), size=2
     0040 2101                      1-  834     	MOVIA	0x01
     0041 04rr                      1-  835     	SUBAR	(_sleepTime + 1),W
     0042 0903                      1-  836     	BTRSS	STATUS,2
                                    1-  837     	MGOTO	_00206_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
     0044 212D                      1-  838     	MOVIA	0x2d
     0045 04rr                      1-  839     	SUBAR	_sleepTime,W
     0046                           1-  840     _00206_DS_:
     0046 0803                      1-  841     	BTRSS	STATUS,0
                                    1-  842     	MGOTO	_00149_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  843     	.line	197, "main.c"; 	gotoSleep();
                                    1-  844     	MCALL	_gotoSleep
     0048 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  845     ;;unsigned compare: left < lit (0x384=900), size=2
     0049                           1-  846     _00149_DS_:
                                    1-  847     	.line	201, "main.c"; 	if(count900s >= 900)
     0049 2103                      1-  848     	MOVIA	0x03
                                    1-  849     	BANKSEL	_count900s
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 04rr                      1-  850     	SUBAR	(_count900s + 1),W
     004C 0903                      1-  851     	BTRSS	STATUS,2
                                    1-  852     	MGOTO	_00207_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
     004E 2184                      1-  853     	MOVIA	0x84
     004F 04rr                      1-  854     	SUBAR	_count900s,W
     0050                           1-  855     _00207_DS_:
     0050 0803                      1-  856     	BTRSS	STATUS,0
                                    1-  857     	MGOTO	_00156_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  858     	.line	203, "main.c"; 	powerOff();
                                    1-  859     	MCALL	_powerOff
     0052 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  860     	MGOTO	_00156_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  861     	.line	207, "main.c"; 	}
                                    1-  862     	RETURN	
     0054 0010                      3-   40 m1      ret
                                    1-  863     ; exit point of _main
                                    1-  865     ;***
                                    1-  866     ;  pBlock Stats: dbName = C
                                    1-  867     ;***
                                    1-  868     ;has an exit
                                    1-  869     ;; Starting pCode block
                                    1-  870     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  872     _F_wait_eoc:
                                    1-  873     ; 2 exit points
     0000                           1-  874     _00936_DS_:
                                    1-  875     	.line	993, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  876     	BTRSS	_ADMDbits,5
                                    1-  877     	MGOTO	_00936_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  878     	.line	995, "main.c"; 	}
                                    1-  879     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1-  880     ; exit point of _F_wait_eoc
                                    1-  882     ;***
                                    1-  883     ;  pBlock Stats: dbName = C
                                    1-  884     ;***
                                    1-  885     ;has an exit
                                    1-  886     ;functions called:
                                    1-  887     ;   _delay
                                    1-  888     ;   _F_wait_eoc
                                    1-  889     ;   _delay
                                    1-  890     ;   _F_wait_eoc
                                    1-  891     ;6 compiler assigned registers:
                                    1-  892     ;   r0x102C
                                    1-  893     ;   r0x102D
                                    1-  894     ;   r0x102E
                                    1-  895     ;   r0x102F
                                    1-  896     ;   r0x1030
                                    1-  897     ;   r0x1031
                                    1-  898     ;; Starting pCode block
                                    1-  899     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1-  901     ;local variable name mapping:
     0000                           1-  904     _F_AIN2_Convert:
                                    1-  905     ; 2 exit points
                                    1-  906     	.line	976, "main.c"; 	void F_AIN2_Convert(char count)
                                    1-  907     	BANKSEL	r0x102C
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  908     	MOVAR	r0x102C
                                    1-  909     	.line	978, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1-  910     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  911     	CLRR	_R_AIN2_DATA_LB
                                    1-  912     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1-  913     	CLRR	_R_AIN2_DATA
     0006 02rr                      1-  914     	CLRR	(_R_AIN2_DATA + 1)
                                    1-  915     	.line	980, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1-  916     	MOVIA	0x92
     0008 00rr                      1-  917     	MOVAR	_ADMD
                                    1-  918     	.line	981, "main.c"; 	delay(200);	
     0009 21C8                      1-  919     	MOVIA	0xc8
                                    1-  920     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  921     	.line	982, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1-  922     	MOVIA	0x01
                                    1-  923     	BANKSEL	r0x102D
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1-  924     	MOVAR	r0x102D
     000E                           1-  925     _00929_DS_:
                                    1-  926     	BANKSEL	r0x102D
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1-  927     	MOVR	r0x102D,W
                                    1-  928     	BANKSEL	r0x102C
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1-  929     	SUBAR	r0x102C,W
     0012 0803                      1-  930     	BTRSS	STATUS,0
                                    1-  931     	MGOTO	_00931_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  932     	.line	984, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1-  933     	BSR	_ADMDbits,6
                                    1-  934     	.line	985, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1-  935     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  936     	.line	986, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1-  937     	MOVIA	0x0f
     0017 10rr                      1-  938     	ANDAR	_ADR,W
                                    1-  939     ;;3	MOVAR	r0x102E
                                    1-  940     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1-  941     	ADDAR	_R_AIN2_DATA_LB,F
                                    1-  942     	.line	987, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1-  943     	MOVR	_ADD,W
                                    1-  944     	BANKSEL	r0x102E
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  945     	MOVAR	r0x102E
                                    1-  946     ;;1	CLRR	r0x102F
                                    1-  947     ;;109	MOVR	r0x102E,W
                                    1-  948     ;;107	MOVAR	r0x1030
     001D 2100                      1-  949     	MOVIA	0x00
                                    1-  950     	BANKSEL	r0x1031
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1-  951     	MOVAR	r0x1031
                                    1-  952     ;;108	MOVR	r0x1030,W
                                    1-  953     	BANKSEL	r0x102E
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1-  954     	MOVR	r0x102E,W
                                    1-  955     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1-  956     	ADDAR	_R_AIN2_DATA,F
                                    1-  957     	BANKSEL	r0x1031
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1-  958     	MOVR	r0x1031,W
     0026 0C03                      1-  959     	BTRSC	STATUS,0
     0027 05rr                      1-  960     	INCR	r0x1031,W
     0028 0D03                      1-  961     	BTRSC	STATUS,2
                                    1-  962     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  963     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1-  964     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1-  965     _00001_DS_:
                                    1-  966     	.line	982, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  967     	BANKSEL	r0x102D
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1-  968     	INCR	r0x102D,F
                                    1-  969     	MGOTO	_00929_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1-  970     _00931_DS_:
                                    1-  971     	.line	989, "main.c"; 	}
                                    1-  972     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1-  973     ; exit point of _F_AIN2_Convert
                                    1-  975     ;***
                                    1-  976     ;  pBlock Stats: dbName = C
                                    1-  977     ;***
                                    1-  978     ;has an exit
                                    1-  979     ;functions called:
                                    1-  980     ;   _delay
                                    1-  981     ;   _F_wait_eoc
                                    1-  982     ;   _delay
                                    1-  983     ;   _F_wait_eoc
                                    1-  984     ;6 compiler assigned registers:
                                    1-  985     ;   r0x1032
                                    1-  986     ;   r0x1033
                                    1-  987     ;   r0x1034
                                    1-  988     ;   r0x1035
                                    1-  989     ;   r0x1036
                                    1-  990     ;   r0x1037
                                    1-  991     ;; Starting pCode block
                                    1-  992     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1-  994     ;local variable name mapping:
     0000                           1-  997     _F_AIN3_Convert:
                                    1-  998     ; 2 exit points
                                    1-  999     	.line	961, "main.c"; 	void F_AIN3_Convert(char count)
                                    1- 1000     	BANKSEL	r0x1032
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1001     	MOVAR	r0x1032
                                    1- 1002     	.line	963, "main.c"; 	R_AIN3_DATA=R_AIN3_DATA_LB=0x00;   
                                    1- 1003     	BANKSEL	_R_AIN3_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1004     	CLRR	_R_AIN3_DATA_LB
                                    1- 1005     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1006     	CLRR	_R_AIN3_DATA
     0006 02rr                      1- 1007     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1008     	.line	965, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0007 2193                      1- 1009     	MOVIA	0x93
     0008 00rr                      1- 1010     	MOVAR	_ADMD
                                    1- 1011     	.line	966, "main.c"; 	delay(200);	
     0009 21C8                      1- 1012     	MOVIA	0xc8
                                    1- 1013     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1014     	.line	967, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1015     	MOVIA	0x01
                                    1- 1016     	BANKSEL	r0x1033
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1017     	MOVAR	r0x1033
     000E                           1- 1018     _00920_DS_:
                                    1- 1019     	BANKSEL	r0x1033
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1020     	MOVR	r0x1033,W
                                    1- 1021     	BANKSEL	r0x1032
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1022     	SUBAR	r0x1032,W
     0012 0803                      1- 1023     	BTRSS	STATUS,0
                                    1- 1024     	MGOTO	_00922_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1025     	.line	969, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1026     	BSR	_ADMDbits,6
                                    1- 1027     	.line	970, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1028     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1029     	.line	971, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1030     	MOVIA	0x0f
     0017 10rr                      1- 1031     	ANDAR	_ADR,W
                                    1- 1032     ;;3	MOVAR	r0x1034
                                    1- 1033     	BANKSEL	_R_AIN3_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1034     	ADDAR	_R_AIN3_DATA_LB,F
                                    1- 1035     	.line	972, "main.c"; 	R_AIN3_DATA    += ADD; 
     001A 01rr                      1- 1036     	MOVR	_ADD,W
                                    1- 1037     	BANKSEL	r0x1034
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1038     	MOVAR	r0x1034
                                    1- 1039     ;;1	CLRR	r0x1035
                                    1- 1040     ;;106	MOVR	r0x1034,W
                                    1- 1041     ;;104	MOVAR	r0x1036
     001D 2100                      1- 1042     	MOVIA	0x00
                                    1- 1043     	BANKSEL	r0x1037
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1044     	MOVAR	r0x1037
                                    1- 1045     ;;105	MOVR	r0x1036,W
                                    1- 1046     	BANKSEL	r0x1034
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1047     	MOVR	r0x1034,W
                                    1- 1048     	BANKSEL	_R_AIN3_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1049     	ADDAR	_R_AIN3_DATA,F
                                    1- 1050     	BANKSEL	r0x1037
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1051     	MOVR	r0x1037,W
     0026 0C03                      1- 1052     	BTRSC	STATUS,0
     0027 05rr                      1- 1053     	INCR	r0x1037,W
     0028 0D03                      1- 1054     	BTRSC	STATUS,2
                                    1- 1055     	MGOTO	_00002_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1056     	BANKSEL	_R_AIN3_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1057     	ADDAR	(_R_AIN3_DATA + 1),F
     002C                           1- 1058     _00002_DS_:
                                    1- 1059     	.line	967, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1060     	BANKSEL	r0x1033
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1061     	INCR	r0x1033,F
                                    1- 1062     	MGOTO	_00920_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1063     _00922_DS_:
                                    1- 1064     	.line	974, "main.c"; 	}
                                    1- 1065     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1066     ; exit point of _F_AIN3_Convert
                                    1- 1068     ;***
                                    1- 1069     ;  pBlock Stats: dbName = C
                                    1- 1070     ;***
                                    1- 1071     ;has an exit
                                    1- 1072     ;functions called:
                                    1- 1073     ;   _delay
                                    1- 1074     ;   _F_wait_eoc
                                    1- 1075     ;   _delay
                                    1- 1076     ;   _F_wait_eoc
                                    1- 1077     ;6 compiler assigned registers:
                                    1- 1078     ;   r0x1038
                                    1- 1079     ;   r0x1039
                                    1- 1080     ;   r0x103A
                                    1- 1081     ;   r0x103B
                                    1- 1082     ;   r0x103C
                                    1- 1083     ;   r0x103D
                                    1- 1084     ;; Starting pCode block
                                    1- 1085     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1087     ;local variable name mapping:
     0000                           1- 1090     _F_AIN4_Convert:
                                    1- 1091     ; 2 exit points
                                    1- 1092     	.line	946, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1093     	BANKSEL	r0x1038
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1094     	MOVAR	r0x1038
                                    1- 1095     	.line	948, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1096     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1097     	CLRR	_R_AIN4_DATA_LB
                                    1- 1098     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1099     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1100     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1101     	.line	950, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1102     	MOVIA	0x94
     0008 00rr                      1- 1103     	MOVAR	_ADMD
                                    1- 1104     	.line	951, "main.c"; 	delay(200);	
     0009 21C8                      1- 1105     	MOVIA	0xc8
                                    1- 1106     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1107     	.line	952, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1108     	MOVIA	0x01
                                    1- 1109     	BANKSEL	r0x1039
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1110     	MOVAR	r0x1039
     000E                           1- 1111     _00911_DS_:
                                    1- 1112     	BANKSEL	r0x1039
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1113     	MOVR	r0x1039,W
                                    1- 1114     	BANKSEL	r0x1038
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1115     	SUBAR	r0x1038,W
     0012 0803                      1- 1116     	BTRSS	STATUS,0
                                    1- 1117     	MGOTO	_00913_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1118     	.line	954, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1119     	BSR	_ADMDbits,6
                                    1- 1120     	.line	955, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1121     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1122     	.line	956, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1123     	MOVIA	0x0f
     0017 10rr                      1- 1124     	ANDAR	_ADR,W
                                    1- 1125     ;;3	MOVAR	r0x103A
                                    1- 1126     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1127     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1128     	.line	957, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1129     	MOVR	_ADD,W
                                    1- 1130     	BANKSEL	r0x103A
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1131     	MOVAR	r0x103A
                                    1- 1132     ;;1	CLRR	r0x103B
                                    1- 1133     ;;103	MOVR	r0x103A,W
                                    1- 1134     ;;101	MOVAR	r0x103C
     001D 2100                      1- 1135     	MOVIA	0x00
                                    1- 1136     	BANKSEL	r0x103D
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1137     	MOVAR	r0x103D
                                    1- 1138     ;;102	MOVR	r0x103C,W
                                    1- 1139     	BANKSEL	r0x103A
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1140     	MOVR	r0x103A,W
                                    1- 1141     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1142     	ADDAR	_R_AIN4_DATA,F
                                    1- 1143     	BANKSEL	r0x103D
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1144     	MOVR	r0x103D,W
     0026 0C03                      1- 1145     	BTRSC	STATUS,0
     0027 05rr                      1- 1146     	INCR	r0x103D,W
     0028 0D03                      1- 1147     	BTRSC	STATUS,2
                                    1- 1148     	MGOTO	_00003_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1149     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1150     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1151     _00003_DS_:
                                    1- 1152     	.line	952, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1153     	BANKSEL	r0x1039
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1154     	INCR	r0x1039,F
                                    1- 1155     	MGOTO	_00911_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1156     _00913_DS_:
                                    1- 1157     	.line	959, "main.c"; 	}
                                    1- 1158     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1159     ; exit point of _F_AIN4_Convert
                                    1- 1161     ;***
                                    1- 1162     ;  pBlock Stats: dbName = C
                                    1- 1163     ;***
                                    1- 1164     ;has an exit
                                    1- 1165     ;functions called:
                                    1- 1166     ;   _F_AIN3_Convert
                                    1- 1167     ;   _F_AIN3_Convert
                                    1- 1168     ;4 compiler assigned registers:
                                    1- 1169     ;   r0x103E
                                    1- 1170     ;   r0x103F
                                    1- 1171     ;   r0x1040
                                    1- 1172     ;   r0x1041
                                    1- 1173     ;; Starting pCode block
                                    1- 1174     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1176     _checkOutA:
                                    1- 1177     ; 2 exit points
                                    1- 1178     	.line	840, "main.c"; 	R_AIN3_DATA = R_AIN3_DATA_LB = 0x00;
                                    1- 1179     	BANKSEL	_R_AIN3_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1180     	CLRR	_R_AIN3_DATA_LB
                                    1- 1181     	BANKSEL	_R_AIN3_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1182     	CLRR	_R_AIN3_DATA
     0004 02rr                      1- 1183     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1184     	.line	841, "main.c"; 	F_AIN3_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1185     	MOVIA	0x08
                                    1- 1186     	MCALL	_F_AIN3_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1187     	.line	842, "main.c"; 	R_AIN3_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1188     	BANKSEL	_R_AIN3_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1189     	SWAPR	(_R_AIN3_DATA + 1),W
     0009 22F0                      1- 1190     	ANDIA	0xf0
     000A 00rr                      1- 1191     	MOVAR	(_R_AIN3_DATA + 1)
     000B 15rr                      1- 1192     	SWAPR	_R_AIN3_DATA,W
     000C 00rr                      1- 1193     	MOVAR	_R_AIN3_DATA
     000D 220F                      1- 1194     	ANDIA	0x0f
     000E 11rr                      1- 1195     	IORAR	(_R_AIN3_DATA + 1),F
     000F 12rr                      1- 1196     	XORAR	_R_AIN3_DATA,F
                                    1- 1197     	.line	843, "main.c"; 	R_AIN3_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1198     	MOVIA	0xf0
                                    1- 1199     	BANKSEL	_R_AIN3_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1200     	ANDAR	_R_AIN3_DATA_LB,F
                                    1- 1201     	.line	844, "main.c"; 	R_AIN3_DATA += R_AIN3_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1202     	MOVR	_R_AIN3_DATA_LB,W
                                    1- 1203     	BANKSEL	r0x1040
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1204     	MOVAR	r0x1040
                                    1- 1205     ;;1	MOVAR	r0x103E
                                    1- 1206     ;;1	CLRR	r0x103F
                                    1- 1207     ;;100	MOVR	r0x103E,W
     0016 2100                      1- 1208     	MOVIA	0x00
                                    1- 1209     	BANKSEL	r0x1041
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1210     	MOVAR	r0x1041
                                    1- 1211     	BANKSEL	r0x1040
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1212     	MOVR	r0x1040,W
                                    1- 1213     	BANKSEL	_R_AIN3_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1214     	ADDAR	_R_AIN3_DATA,F
                                    1- 1215     	BANKSEL	r0x1041
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1216     	MOVR	r0x1041,W
     001F 0C03                      1- 1217     	BTRSC	STATUS,0
     0020 05rr                      1- 1218     	INCR	r0x1041,W
     0021 0D03                      1- 1219     	BTRSC	STATUS,2
                                    1- 1220     	MGOTO	_00004_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1221     	BANKSEL	_R_AIN3_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1222     	ADDAR	(_R_AIN3_DATA + 1),F
                                    1- 1223     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1224     _00004_DS_:
                                    1- 1225     	.line	845, "main.c"; 	R_AIN3_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1226     	BCR	STATUS,0
                                    1- 1227     	BANKSEL	_R_AIN3_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1228     	RRR	(_R_AIN3_DATA + 1),F
     0028 13rr                      1- 1229     	RRR	_R_AIN3_DATA,F
                                    1- 1230     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1231     	BCR	STATUS,0
     002A 13rr                      1- 1232     	RRR	(_R_AIN3_DATA + 1),F
     002B 13rr                      1- 1233     	RRR	_R_AIN3_DATA,F
                                    1- 1234     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1235     	BCR	STATUS,0
     002D 13rr                      1- 1236     	RRR	(_R_AIN3_DATA + 1),F
     002E 13rr                      1- 1237     	RRR	_R_AIN3_DATA,F
                                    1- 1238     	.line	846, "main.c"; 	if(debug)
                                    1- 1239     	BANKSEL	_debug
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1240     	MOVR	_debug,W
     0031 0D03                      1- 1241     	BTRSC	STATUS,2
                                    1- 1242     	MGOTO	_00769_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1243     	.line	847, "main.c"; 	R_AIN3_DATA = OUTA;
     0033 212D                      1- 1244     	MOVIA	0x2d
                                    1- 1245     	BANKSEL	_R_AIN3_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1246     	MOVAR	_R_AIN3_DATA
     0036 2101                      1- 1247     	MOVIA	0x01
     0037 00rr                      1- 1248     	MOVAR	(_R_AIN3_DATA + 1)
                                    1- 1249     ;;unsigned compare: left < lit (0x6=6), size=1
     0038                           1- 1250     _00769_DS_:
                                    1- 1251     	.line	848, "main.c"; 	if(workStep < 6 && R_AIN3_DATA > 200)
     0038 2106                      1- 1252     	MOVIA	0x06
                                    1- 1253     	BANKSEL	_workStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1254     	SUBAR	_workStep,W
     003B 0C03                      1- 1255     	BTRSC	STATUS,0
                                    1- 1256     	MGOTO	_00822_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1257     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1258     ;;unsigned compare: left >= lit (0xC9=201), size=2
     003D 2100                      1- 1259     	MOVIA	0x00
                                    1- 1260     	BANKSEL	_R_AIN3_DATA
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 04rr                      1- 1261     	SUBAR	(_R_AIN3_DATA + 1),W
     0040 0903                      1- 1262     	BTRSS	STATUS,2
                                    1- 1263     	MGOTO	_00897_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042 21C9                      1- 1264     	MOVIA	0xc9
     0043 04rr                      1- 1265     	SUBAR	_R_AIN3_DATA,W
     0044                           1- 1266     _00897_DS_:
     0044 0803                      1- 1267     	BTRSS	STATUS,0
                                    1- 1268     	MGOTO	_00822_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1269     	.line	850, "main.c"; 	if(++overCount > 5)
                                    1- 1270     	BANKSEL	_overCount
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 05rr                      1- 1271     	INCR	_overCount,F
                                    1- 1272     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1273     ;;unsigned compare: left >= lit (0x6=6), size=1
     0048 2106                      1- 1274     	MOVIA	0x06
     0049 04rr                      1- 1275     	SUBAR	_overCount,W
     004A 0803                      1- 1276     	BTRSS	STATUS,0
                                    1- 1277     	MGOTO	_00825_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1278     	.line	852, "main.c"; 	overCount = 5;
     004C 2105                      1- 1279     	MOVIA	0x05
     004D 00rr                      1- 1280     	MOVAR	_overCount
                                    1- 1281     	MGOTO	_00825_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1282     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1283     ;;unsigned compare: left >= lit (0x191=401), size=2
     004F                           1- 1284     _00822_DS_:
                                    1- 1285     	.line	855, "main.c"; 	else if(R_AIN3_DATA > 400)
     004F 2101                      1- 1286     	MOVIA	0x01
                                    1- 1287     	BANKSEL	_R_AIN3_DATA
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 04rr                      1- 1288     	SUBAR	(_R_AIN3_DATA + 1),W
     0052 0903                      1- 1289     	BTRSS	STATUS,2
                                    1- 1290     	MGOTO	_00899_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
     0054 2191                      1- 1291     	MOVIA	0x91
     0055 04rr                      1- 1292     	SUBAR	_R_AIN3_DATA,W
     0056                           1- 1293     _00899_DS_:
     0056 0803                      1- 1294     	BTRSS	STATUS,0
                                    1- 1295     	MGOTO	_00819_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1296     	.line	857, "main.c"; 	if(++overCount > 5)
                                    1- 1297     	BANKSEL	_overCount
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 05rr                      1- 1298     	INCR	_overCount,F
                                    1- 1299     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1300     ;;unsigned compare: left >= lit (0x6=6), size=1
     005A 2106                      1- 1301     	MOVIA	0x06
     005B 04rr                      1- 1302     	SUBAR	_overCount,W
     005C 0803                      1- 1303     	BTRSS	STATUS,0
                                    1- 1304     	MGOTO	_00825_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1305     	.line	859, "main.c"; 	overCount = 5;
     005E 2105                      1- 1306     	MOVIA	0x05
     005F 00rr                      1- 1307     	MOVAR	_overCount
                                    1- 1308     	MGOTO	_00825_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1309     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1310     ;;unsigned compare: left >= lit (0x51=81), size=2
     0061                           1- 1311     _00819_DS_:
                                    1- 1312     	.line	867, "main.c"; 	else if(R_AIN3_DATA > 80)
     0061 2100                      1- 1313     	MOVIA	0x00
                                    1- 1314     	BANKSEL	_R_AIN3_DATA
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 04rr                      1- 1315     	SUBAR	(_R_AIN3_DATA + 1),W
     0064 0903                      1- 1316     	BTRSS	STATUS,2
                                    1- 1317     	MGOTO	_00901_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
     0066 2151                      1- 1318     	MOVIA	0x51
     0067 04rr                      1- 1319     	SUBAR	_R_AIN3_DATA,W
     0068                           1- 1320     _00901_DS_:
     0068 0803                      1- 1321     	BTRSS	STATUS,0
                                    1- 1322     	MGOTO	_00816_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1323     	.line	869, "main.c"; 	if(overCount > 0)
                                    1- 1324     	BANKSEL	_overCount
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 01rr                      1- 1325     	MOVR	_overCount,W
     006C 0903                      1- 1326     	BTRSS	STATUS,2
                                    1- 1327     	.line	871, "main.c"; 	overCount--;
     006D 06rr                      1- 1328     	DECR	_overCount,F
                                    1- 1329     	.line	874, "main.c"; 	if(workStep == 1)
                                    1- 1330     	BANKSEL	_workStep
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 01rr                      1- 1331     	MOVR	_workStep,W
     0070 2401                      1- 1332     	XORIA	0x01
     0071 0903                      1- 1333     	BTRSS	STATUS,2
                                    1- 1334     	MGOTO	_00795_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1335     	.line	876, "main.c"; 	tempDuty = 106;
     0073 216A                      1- 1336     	MOVIA	0x6a
                                    1- 1337     	BANKSEL	_tempDuty
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 00rr                      1- 1338     	MOVAR	_tempDuty
                                    1- 1339     	MGOTO	_00796_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
     0077                           1- 1340     _00795_DS_:
                                    1- 1341     	.line	878, "main.c"; 	else if(workStep == 2)
                                    1- 1342     	BANKSEL	_workStep
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 01rr                      1- 1343     	MOVR	_workStep,W
     0079 2402                      1- 1344     	XORIA	0x02
     007A 0903                      1- 1345     	BTRSS	STATUS,2
                                    1- 1346     	MGOTO	_00792_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1347     	.line	880, "main.c"; 	tempDuty = 109;
     007C 216D                      1- 1348     	MOVIA	0x6d
                                    1- 1349     	BANKSEL	_tempDuty
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 00rr                      1- 1350     	MOVAR	_tempDuty
                                    1- 1351     	MGOTO	_00796_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
     0080                           1- 1352     _00792_DS_:
                                    1- 1353     	.line	882, "main.c"; 	else if(workStep == 3)
                                    1- 1354     	BANKSEL	_workStep
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 01rr                      1- 1355     	MOVR	_workStep,W
     0082 2403                      1- 1356     	XORIA	0x03
     0083 0903                      1- 1357     	BTRSS	STATUS,2
                                    1- 1358     	MGOTO	_00789_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1359     	.line	884, "main.c"; 	tempDuty = 112;
     0085 2170                      1- 1360     	MOVIA	0x70
                                    1- 1361     	BANKSEL	_tempDuty
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 00rr                      1- 1362     	MOVAR	_tempDuty
                                    1- 1363     	MGOTO	_00796_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
     0089                           1- 1364     _00789_DS_:
                                    1- 1365     	.line	886, "main.c"; 	else if(workStep == 4)
                                    1- 1366     	BANKSEL	_workStep
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 01rr                      1- 1367     	MOVR	_workStep,W
     008B 2404                      1- 1368     	XORIA	0x04
     008C 0903                      1- 1369     	BTRSS	STATUS,2
                                    1- 1370     	MGOTO	_00786_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1371     	.line	888, "main.c"; 	tempDuty = 115;
     008E 2173                      1- 1372     	MOVIA	0x73
                                    1- 1373     	BANKSEL	_tempDuty
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 00rr                      1- 1374     	MOVAR	_tempDuty
                                    1- 1375     	MGOTO	_00796_DS_
     0091 3rrr                      3-   63 m1      LGOTO rom_address
     0092                           1- 1376     _00786_DS_:
                                    1- 1377     	.line	890, "main.c"; 	else if(workStep == 5)
                                    1- 1378     	BANKSEL	_workStep
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 01rr                      1- 1379     	MOVR	_workStep,W
     0094 2405                      1- 1380     	XORIA	0x05
     0095 0903                      1- 1381     	BTRSS	STATUS,2
                                    1- 1382     	MGOTO	_00783_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1383     	.line	892, "main.c"; 	tempDuty = 119;
     0097 2177                      1- 1384     	MOVIA	0x77
                                    1- 1385     	BANKSEL	_tempDuty
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 00rr                      1- 1386     	MOVAR	_tempDuty
                                    1- 1387     	MGOTO	_00796_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
     009B                           1- 1388     _00783_DS_:
                                    1- 1389     	.line	894, "main.c"; 	else if(workStep == 6)
                                    1- 1390     	BANKSEL	_workStep
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 01rr                      1- 1391     	MOVR	_workStep,W
     009D 2406                      1- 1392     	XORIA	0x06
     009E 0903                      1- 1393     	BTRSS	STATUS,2
                                    1- 1394     	MGOTO	_00780_DS_
     009F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1395     	.line	896, "main.c"; 	tempDuty = 122;
     00A0 217A                      1- 1396     	MOVIA	0x7a
                                    1- 1397     	BANKSEL	_tempDuty
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 00rr                      1- 1398     	MOVAR	_tempDuty
                                    1- 1399     	MGOTO	_00796_DS_
     00A3 3rrr                      3-   63 m1      LGOTO rom_address
     00A4                           1- 1400     _00780_DS_:
                                    1- 1401     	.line	898, "main.c"; 	else if(workStep == 7)
                                    1- 1402     	BANKSEL	_workStep
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 01rr                      1- 1403     	MOVR	_workStep,W
     00A6 2407                      1- 1404     	XORIA	0x07
     00A7 0903                      1- 1405     	BTRSS	STATUS,2
                                    1- 1406     	MGOTO	_00777_DS_
     00A8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1407     	.line	900, "main.c"; 	tempDuty = 125;
     00A9 217D                      1- 1408     	MOVIA	0x7d
                                    1- 1409     	BANKSEL	_tempDuty
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 00rr                      1- 1410     	MOVAR	_tempDuty
                                    1- 1411     	MGOTO	_00796_DS_
     00AC 3rrr                      3-   63 m1      LGOTO rom_address
     00AD                           1- 1412     _00777_DS_:
                                    1- 1413     	.line	904, "main.c"; 	tempDuty = 128;
     00AD 2180                      1- 1414     	MOVIA	0x80
                                    1- 1415     	BANKSEL	_tempDuty
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 00rr                      1- 1416     	MOVAR	_tempDuty
     00B0                           1- 1417     _00796_DS_:
                                    1- 1418     	.line	907, "main.c"; 	PWM2DUTY = tempDuty;
                                    1- 1419     	BANKSEL	_tempDuty
     00B0 rrrr                      3-  110 m1      .banksel ram_address
     00B1 01rr                      1- 1420     	MOVR	_tempDuty,W
     00B2 00rr                      1- 1421     	SFUN	_PWM2DUTY
                                    1- 1422     	MGOTO	_00825_DS_
     00B3 3rrr                      3-   63 m1      LGOTO rom_address
     00B4                           1- 1423     _00816_DS_:
                                    1- 1424     	.line	911, "main.c"; 	if(overCount > 0)
                                    1- 1425     	BANKSEL	_overCount
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 01rr                      1- 1426     	MOVR	_overCount,W
     00B6 0903                      1- 1427     	BTRSS	STATUS,2
                                    1- 1428     	.line	913, "main.c"; 	overCount--;
     00B7 06rr                      1- 1429     	DECR	_overCount,F
                                    1- 1430     	.line	915, "main.c"; 	if(R_AIN3_DATA > 60 && workStep < 4)
     00B8 2100                      1- 1431     	MOVIA	0x00
                                    1- 1432     	BANKSEL	_R_AIN3_DATA
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 04rr                      1- 1433     	SUBAR	(_R_AIN3_DATA + 1),W
     00BB 0903                      1- 1434     	BTRSS	STATUS,2
                                    1- 1435     	MGOTO	_00902_DS_
     00BC 3rrr                      3-   63 m1      LGOTO rom_address
     00BD 213D                      1- 1436     	MOVIA	0x3d
     00BE 04rr                      1- 1437     	SUBAR	_R_AIN3_DATA,W
     00BF                           1- 1438     _00902_DS_:
     00BF 0803                      1- 1439     	BTRSS	STATUS,0
                                    1- 1440     	MGOTO	_00810_DS_
     00C0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1441     ;;unsigned compare: left < lit (0x4=4), size=1
     00C1 2104                      1- 1442     	MOVIA	0x04
                                    1- 1443     	BANKSEL	_workStep
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 04rr                      1- 1444     	SUBAR	_workStep,W
     00C4 0C03                      1- 1445     	BTRSC	STATUS,0
                                    1- 1446     	MGOTO	_00810_DS_
     00C5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1447     	.line	917, "main.c"; 	if(workStep == 1)
     00C6 01rr                      1- 1448     	MOVR	_workStep,W
     00C7 2401                      1- 1449     	XORIA	0x01
     00C8 0903                      1- 1450     	BTRSS	STATUS,2
                                    1- 1451     	MGOTO	_00805_DS_
     00C9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1452     	.line	919, "main.c"; 	tempDuty = 106;
     00CA 216A                      1- 1453     	MOVIA	0x6a
                                    1- 1454     	BANKSEL	_tempDuty
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 00rr                      1- 1455     	MOVAR	_tempDuty
                                    1- 1456     	MGOTO	_00806_DS_
     00CD 3rrr                      3-   63 m1      LGOTO rom_address
     00CE                           1- 1457     _00805_DS_:
                                    1- 1458     	.line	921, "main.c"; 	else if(workStep == 2)
                                    1- 1459     	BANKSEL	_workStep
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 01rr                      1- 1460     	MOVR	_workStep,W
     00D0 2402                      1- 1461     	XORIA	0x02
     00D1 0903                      1- 1462     	BTRSS	STATUS,2
                                    1- 1463     	MGOTO	_00802_DS_
     00D2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1464     	.line	923, "main.c"; 	tempDuty = 109;
     00D3 216D                      1- 1465     	MOVIA	0x6d
                                    1- 1466     	BANKSEL	_tempDuty
     00D4 rrrr                      3-  110 m1      .banksel ram_address
     00D5 00rr                      1- 1467     	MOVAR	_tempDuty
                                    1- 1468     	MGOTO	_00806_DS_
     00D6 3rrr                      3-   63 m1      LGOTO rom_address
     00D7                           1- 1469     _00802_DS_:
                                    1- 1470     	.line	925, "main.c"; 	else if(workStep == 3)
                                    1- 1471     	BANKSEL	_workStep
     00D7 rrrr                      3-  110 m1      .banksel ram_address
     00D8 01rr                      1- 1472     	MOVR	_workStep,W
     00D9 2403                      1- 1473     	XORIA	0x03
     00DA 0903                      1- 1474     	BTRSS	STATUS,2
                                    1- 1475     	MGOTO	_00806_DS_
     00DB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1476     	.line	927, "main.c"; 	tempDuty = 112;
     00DC 2170                      1- 1477     	MOVIA	0x70
                                    1- 1478     	BANKSEL	_tempDuty
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 00rr                      1- 1479     	MOVAR	_tempDuty
     00DF                           1- 1480     _00806_DS_:
                                    1- 1481     	.line	929, "main.c"; 	PWM2DUTY = tempDuty;
                                    1- 1482     	BANKSEL	_tempDuty
     00DF rrrr                      3-  110 m1      .banksel ram_address
     00E0 01rr                      1- 1483     	MOVR	_tempDuty,W
     00E1 00rr                      1- 1484     	SFUN	_PWM2DUTY
                                    1- 1485     	MGOTO	_00811_DS_
     00E2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1486     ;;unsigned compare: left < lit (0x46=70), size=2
     00E3                           1- 1487     _00810_DS_:
                                    1- 1488     	.line	931, "main.c"; 	else if(R_AIN3_DATA < 70)
     00E3 2100                      1- 1489     	MOVIA	0x00
                                    1- 1490     	BANKSEL	_R_AIN3_DATA
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 04rr                      1- 1491     	SUBAR	(_R_AIN3_DATA + 1),W
     00E6 0903                      1- 1492     	BTRSS	STATUS,2
                                    1- 1493     	MGOTO	_00904_DS_
     00E7 3rrr                      3-   63 m1      LGOTO rom_address
     00E8 2146                      1- 1494     	MOVIA	0x46
     00E9 04rr                      1- 1495     	SUBAR	_R_AIN3_DATA,W
     00EA                           1- 1496     _00904_DS_:
     00EA 0C03                      1- 1497     	BTRSC	STATUS,0
                                    1- 1498     	MGOTO	_00811_DS_
     00EB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1499     	.line	933, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 1500     	BANKSEL	_maxDuty
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 01rr                      1- 1501     	MOVR	_maxDuty,W
     00EE 00rr                      1- 1502     	SFUN	_PWM2DUTY
     00EF                           1- 1503     _00811_DS_:
                                    1- 1504     	.line	935, "main.c"; 	if(workStep > 0)
                                    1- 1505     	BANKSEL	_workStep
     00EF rrrr                      3-  110 m1      .banksel ram_address
     00F0 01rr                      1- 1506     	MOVR	_workStep,W
     00F1 0D03                      1- 1507     	BTRSC	STATUS,2
                                    1- 1508     	MGOTO	_00825_DS_
     00F2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1509     	.line	936, "main.c"; 	ledStep = workStep;
     00F3 01rr                      1- 1510     	MOVR	_workStep,W
                                    1- 1511     	BANKSEL	_ledStep
     00F4 rrrr                      3-  110 m1      .banksel ram_address
     00F5 00rr                      1- 1512     	MOVAR	_ledStep
     00F6                           1- 1513     _00825_DS_:
                                    1- 1514     	.line	940, "main.c"; 	}
                                    1- 1515     	RETURN	
     00F6 0010                      3-   40 m1      ret
                                    1- 1516     ; exit point of _checkOutA
                                    1- 1518     ;***
                                    1- 1519     ;  pBlock Stats: dbName = C
                                    1- 1520     ;***
                                    1- 1521     ;has an exit
                                    1- 1522     ;functions called:
                                    1- 1523     ;   _F_AIN4_Convert
                                    1- 1524     ;   _F_AIN4_Convert
                                    1- 1525     ;4 compiler assigned registers:
                                    1- 1526     ;   r0x1042
                                    1- 1527     ;   r0x1043
                                    1- 1528     ;   r0x1044
                                    1- 1529     ;   r0x1045
                                    1- 1530     ;; Starting pCode block
                                    1- 1531     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1533     _checkBatAD:
                                    1- 1534     ; 2 exit points
                                    1- 1535     	.line	656, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1536     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1537     	CLRR	_R_AIN4_DATA_LB
                                    1- 1538     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1539     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1540     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1541     	.line	657, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1542     	MOVIA	0x08
                                    1- 1543     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1544     	.line	658, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1545     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1546     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1547     	ANDIA	0xf0
     000A 00rr                      1- 1548     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1549     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1550     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1551     	ANDIA	0x0f
     000E 11rr                      1- 1552     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1553     	XORAR	_R_AIN4_DATA,F
                                    1- 1554     	.line	659, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1555     	MOVIA	0xf0
                                    1- 1556     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1557     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1558     	.line	660, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1559     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1560     	BANKSEL	r0x1044
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1561     	MOVAR	r0x1044
                                    1- 1562     ;;1	MOVAR	r0x1042
                                    1- 1563     ;;1	CLRR	r0x1043
                                    1- 1564     ;;99	MOVR	r0x1042,W
     0016 2100                      1- 1565     	MOVIA	0x00
                                    1- 1566     	BANKSEL	r0x1045
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1567     	MOVAR	r0x1045
                                    1- 1568     	BANKSEL	r0x1044
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1569     	MOVR	r0x1044,W
                                    1- 1570     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1571     	ADDAR	_R_AIN4_DATA,F
                                    1- 1572     	BANKSEL	r0x1045
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1573     	MOVR	r0x1045,W
     001F 0C03                      1- 1574     	BTRSC	STATUS,0
     0020 05rr                      1- 1575     	INCR	r0x1045,W
     0021 0D03                      1- 1576     	BTRSC	STATUS,2
                                    1- 1577     	MGOTO	_00005_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1578     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1579     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1580     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1581     _00005_DS_:
                                    1- 1582     	.line	661, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1583     	BCR	STATUS,0
                                    1- 1584     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1585     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1586     	RRR	_R_AIN4_DATA,F
                                    1- 1587     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1588     	BCR	STATUS,0
     002A 13rr                      1- 1589     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1590     	RRR	_R_AIN4_DATA,F
                                    1- 1591     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1592     	BCR	STATUS,0
     002D 13rr                      1- 1593     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1594     	RRR	_R_AIN4_DATA,F
                                    1- 1595     	.line	662, "main.c"; 	if(debug)
                                    1- 1596     	BANKSEL	_debug
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1597     	MOVR	_debug,W
     0031 0D03                      1- 1598     	BTRSC	STATUS,2
                                    1- 1599     	MGOTO	_00467_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1600     	.line	663, "main.c"; 	R_AIN4_DATA = BATTLE;
     0033 210E                      1- 1601     	MOVIA	0x0e
                                    1- 1602     	BANKSEL	_R_AIN4_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1603     	MOVAR	_R_AIN4_DATA
     0036 2106                      1- 1604     	MOVIA	0x06
     0037 00rr                      1- 1605     	MOVAR	(_R_AIN4_DATA + 1)
                                    1- 1606     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1607     ;;unsigned compare: left >= lit (0x5F6=1526), size=2
     0038                           1- 1608     _00467_DS_:
                                    1- 1609     	.line	665, "main.c"; 	if(R_AIN4_DATA > 1525)
     0038 2105                      1- 1610     	MOVIA	0x05
                                    1- 1611     	BANKSEL	_R_AIN4_DATA
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1612     	SUBAR	(_R_AIN4_DATA + 1),W
     003B 0903                      1- 1613     	BTRSS	STATUS,2
                                    1- 1614     	MGOTO	_00727_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 21F6                      1- 1615     	MOVIA	0xf6
     003E 04rr                      1- 1616     	SUBAR	_R_AIN4_DATA,W
     003F                           1- 1617     _00727_DS_:
     003F 0803                      1- 1618     	BTRSS	STATUS,0
                                    1- 1619     	MGOTO	_00479_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1620     	.line	668, "main.c"; 	lowCount = 0;
                                    1- 1621     	BANKSEL	_lowCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 1622     	CLRR	_lowCount
                                    1- 1623     	MGOTO	_00480_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1624     ;;unsigned compare: left < lit (0x451=1105), size=2
     0044                           1- 1625     _00479_DS_:
                                    1- 1626     	.line	670, "main.c"; 	else if(R_AIN4_DATA < 1105)
     0044 2104                      1- 1627     	MOVIA	0x04
                                    1- 1628     	BANKSEL	_R_AIN4_DATA
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 04rr                      1- 1629     	SUBAR	(_R_AIN4_DATA + 1),W
     0047 0903                      1- 1630     	BTRSS	STATUS,2
                                    1- 1631     	MGOTO	_00728_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 2151                      1- 1632     	MOVIA	0x51
     004A 04rr                      1- 1633     	SUBAR	_R_AIN4_DATA,W
     004B                           1- 1634     _00728_DS_:
     004B 0C03                      1- 1635     	BTRSC	STATUS,0
                                    1- 1636     	MGOTO	_00476_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1637     	.line	672, "main.c"; 	if(++lowCount < 10)
                                    1- 1638     	BANKSEL	_lowCount
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 05rr                      1- 1639     	INCR	_lowCount,F
                                    1- 1640     ;;unsigned compare: left < lit (0xA=10), size=1
     004F 210A                      1- 1641     	MOVIA	0x0a
     0050 04rr                      1- 1642     	SUBAR	_lowCount,W
     0051 0803                      1- 1643     	BTRSS	STATUS,0
                                    1- 1644     	.line	673, "main.c"; 	return;
                                    1- 1645     	MGOTO	_00578_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1646     	.line	674, "main.c"; 	lowCount = 10;
     0053 210A                      1- 1647     	MOVIA	0x0a
     0054 00rr                      1- 1648     	MOVAR	_lowCount
                                    1- 1649     	.line	675, "main.c"; 	pwStep = 0;
                                    1- 1650     	BANKSEL	_pwStep
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 02rr                      1- 1651     	CLRR	_pwStep
                                    1- 1652     	.line	676, "main.c"; 	R_AIN4_DATA = 1105;
     0057 2151                      1- 1653     	MOVIA	0x51
                                    1- 1654     	BANKSEL	_R_AIN4_DATA
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 00rr                      1- 1655     	MOVAR	_R_AIN4_DATA
     005A 2104                      1- 1656     	MOVIA	0x04
     005B 00rr                      1- 1657     	MOVAR	(_R_AIN4_DATA + 1)
                                    1- 1658     	.line	678, "main.c"; 	if(workStep > 0 && ++firstTime == 10)
                                    1- 1659     	BANKSEL	_workStep
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 01rr                      1- 1660     	MOVR	_workStep,W
     005E 0D03                      1- 1661     	BTRSC	STATUS,2
                                    1- 1662     	MGOTO	_00471_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1663     	BANKSEL	_firstTime
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 05rr                      1- 1664     	INCR	_firstTime,F
     0062 01rr                      1- 1665     	MOVR	_firstTime,W
     0063 240A                      1- 1666     	XORIA	0x0a
     0064 0903                      1- 1667     	BTRSS	STATUS,2
                                    1- 1668     	MGOTO	_00471_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1669     	.line	680, "main.c"; 	shanshuoTime = 16;
     0066 2110                      1- 1670     	MOVIA	0x10
                                    1- 1671     	BANKSEL	_shanshuoTime
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 00rr                      1- 1672     	MOVAR	_shanshuoTime
                                    1- 1673     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1674     ;;unsigned compare: left >= lit (0xC=12), size=1
     0069                           1- 1675     _00471_DS_:
                                    1- 1676     	.line	683, "main.c"; 	if(firstTime > 11)
     0069 210C                      1- 1677     	MOVIA	0x0c
                                    1- 1678     	BANKSEL	_firstTime
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 04rr                      1- 1679     	SUBAR	_firstTime,W
     006C 0803                      1- 1680     	BTRSS	STATUS,0
                                    1- 1681     	MGOTO	_00480_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1682     	.line	684, "main.c"; 	firstTime = 11;
     006E 210B                      1- 1683     	MOVIA	0x0b
     006F 00rr                      1- 1684     	MOVAR	_firstTime
                                    1- 1685     	MGOTO	_00480_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
     0071                           1- 1686     _00476_DS_:
                                    1- 1687     	.line	688, "main.c"; 	lowCount = 0;
                                    1- 1688     	BANKSEL	_lowCount
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 02rr                      1- 1689     	CLRR	_lowCount
                                    1- 1690     	.line	689, "main.c"; 	firstTime = 0;
                                    1- 1691     	BANKSEL	_firstTime
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 02rr                      1- 1692     	CLRR	_firstTime
     0075                           1- 1693     _00480_DS_:
                                    1- 1694     	.line	691, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA - 1105;
     0075 21AF                      1- 1695     	MOVIA	0xaf
                                    1- 1696     	BANKSEL	_R_AIN4_DATA
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 03rr                      1- 1697     	ADDAR	_R_AIN4_DATA,F
     0078 21FB                      1- 1698     	MOVIA	0xfb
     0079 0C03                      1- 1699     	BTRSC	STATUS,0
     007A 21FC                      1- 1700     	MOVIA	0xfc
     007B 03rr                      1- 1701     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1702     ;;unsigned compare: left < lit (0x1A4=420), size=2
                                    1- 1703     	.line	693, "main.c"; 	if(R_AIN4_DATA >= 420)
     007C 2101                      1- 1704     	MOVIA	0x01
     007D 04rr                      1- 1705     	SUBAR	(_R_AIN4_DATA + 1),W
     007E 0903                      1- 1706     	BTRSS	STATUS,2
                                    1- 1707     	MGOTO	_00731_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
     0080 21A4                      1- 1708     	MOVIA	0xa4
     0081 04rr                      1- 1709     	SUBAR	_R_AIN4_DATA,W
     0082                           1- 1710     _00731_DS_:
     0082 0803                      1- 1711     	BTRSS	STATUS,0
                                    1- 1712     	MGOTO	_00576_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1713     	.line	695, "main.c"; 	pwStep = 9;
     0084 2109                      1- 1714     	MOVIA	0x09
                                    1- 1715     	BANKSEL	_pwStep
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 00rr                      1- 1716     	MOVAR	_pwStep
                                    1- 1717     	MGOTO	_00578_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1718     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1719     ;;unsigned compare: left >= lit (0x18C=396), size=2
     0088                           1- 1720     _00576_DS_:
                                    1- 1721     	.line	697, "main.c"; 	else if(R_AIN4_DATA > 395)
     0088 2101                      1- 1722     	MOVIA	0x01
                                    1- 1723     	BANKSEL	_R_AIN4_DATA
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 04rr                      1- 1724     	SUBAR	(_R_AIN4_DATA + 1),W
     008B 0903                      1- 1725     	BTRSS	STATUS,2
                                    1- 1726     	MGOTO	_00732_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
     008D 218C                      1- 1727     	MOVIA	0x8c
     008E 04rr                      1- 1728     	SUBAR	_R_AIN4_DATA,W
     008F                           1- 1729     _00732_DS_:
     008F 0803                      1- 1730     	BTRSS	STATUS,0
                                    1- 1731     	MGOTO	_00573_DS_
     0090 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1732     	.line	699, "main.c"; 	fullCount = 0;
                                    1- 1733     	BANKSEL	_fullCount
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 02rr                      1- 1734     	CLRR	_fullCount
                                    1- 1735     ;;unsigned compare: left < lit (0x8=8), size=1
                                    1- 1736     	.line	700, "main.c"; 	if(pwStep < 8)
     0093 2108                      1- 1737     	MOVIA	0x08
                                    1- 1738     	BANKSEL	_pwStep
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 04rr                      1- 1739     	SUBAR	_pwStep,W
     0096 0C03                      1- 1740     	BTRSC	STATUS,0
                                    1- 1741     	MGOTO	_00487_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1742     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1743     ;;unsigned compare: left >= lit (0x191=401), size=2
                                    1- 1744     	.line	702, "main.c"; 	if(R_AIN4_DATA > 400)
     0098 2101                      1- 1745     	MOVIA	0x01
                                    1- 1746     	BANKSEL	_R_AIN4_DATA
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 04rr                      1- 1747     	SUBAR	(_R_AIN4_DATA + 1),W
     009B 0903                      1- 1748     	BTRSS	STATUS,2
                                    1- 1749     	MGOTO	_00734_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
     009D 2191                      1- 1750     	MOVIA	0x91
     009E 04rr                      1- 1751     	SUBAR	_R_AIN4_DATA,W
     009F                           1- 1752     _00734_DS_:
     009F 0803                      1- 1753     	BTRSS	STATUS,0
                                    1- 1754     	MGOTO	_00488_DS_
     00A0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1755     	.line	703, "main.c"; 	pwStep = 8;
     00A1 2108                      1- 1756     	MOVIA	0x08
                                    1- 1757     	BANKSEL	_pwStep
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 00rr                      1- 1758     	MOVAR	_pwStep
                                    1- 1759     	MGOTO	_00488_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
     00A5                           1- 1760     _00487_DS_:
                                    1- 1761     	.line	705, "main.c"; 	else if(chrgTime == 0 && R_AIN4_DATA < 405)
                                    1- 1762     	BANKSEL	_chrgTime
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 01rr                      1- 1763     	MOVR	_chrgTime,W
     00A7 11rr                      1- 1764     	IORAR	(_chrgTime + 1),W
     00A8 0903                      1- 1765     	BTRSS	STATUS,2
                                    1- 1766     	MGOTO	_00488_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1767     ;;unsigned compare: left < lit (0x195=405), size=2
     00AA 2101                      1- 1768     	MOVIA	0x01
                                    1- 1769     	BANKSEL	_R_AIN4_DATA
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 04rr                      1- 1770     	SUBAR	(_R_AIN4_DATA + 1),W
     00AD 0903                      1- 1771     	BTRSS	STATUS,2
                                    1- 1772     	MGOTO	_00735_DS_
     00AE 3rrr                      3-   63 m1      LGOTO rom_address
     00AF 2195                      1- 1773     	MOVIA	0x95
     00B0 04rr                      1- 1774     	SUBAR	_R_AIN4_DATA,W
     00B1                           1- 1775     _00735_DS_:
     00B1 0C03                      1- 1776     	BTRSC	STATUS,0
                                    1- 1777     	MGOTO	_00488_DS_
     00B2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1778     	.line	707, "main.c"; 	pwStep = 8;
     00B3 2108                      1- 1779     	MOVIA	0x08
                                    1- 1780     	BANKSEL	_pwStep
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 00rr                      1- 1781     	MOVAR	_pwStep
     00B6                           1- 1782     _00488_DS_:
                                    1- 1783     	.line	711, "main.c"; 	if(chrgTime > 0 && R_AIN4_DATA > 415 && chrgTime > 600)
                                    1- 1784     	BANKSEL	_chrgTime
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 01rr                      1- 1785     	MOVR	_chrgTime,W
     00B8 11rr                      1- 1786     	IORAR	(_chrgTime + 1),W
     00B9 0D03                      1- 1787     	BTRSC	STATUS,2
                                    1- 1788     	MGOTO	_00578_DS_
     00BA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1789     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1790     ;;unsigned compare: left >= lit (0x1A0=416), size=2
     00BB 2101                      1- 1791     	MOVIA	0x01
                                    1- 1792     	BANKSEL	_R_AIN4_DATA
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 04rr                      1- 1793     	SUBAR	(_R_AIN4_DATA + 1),W
     00BE 0903                      1- 1794     	BTRSS	STATUS,2
                                    1- 1795     	MGOTO	_00736_DS_
     00BF 3rrr                      3-   63 m1      LGOTO rom_address
     00C0 21A0                      1- 1796     	MOVIA	0xa0
     00C1 04rr                      1- 1797     	SUBAR	_R_AIN4_DATA,W
     00C2                           1- 1798     _00736_DS_:
     00C2 0803                      1- 1799     	BTRSS	STATUS,0
                                    1- 1800     	MGOTO	_00578_DS_
     00C3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1801     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1802     ;;unsigned compare: left >= lit (0x259=601), size=2
     00C4 2102                      1- 1803     	MOVIA	0x02
                                    1- 1804     	BANKSEL	_chrgTime
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 04rr                      1- 1805     	SUBAR	(_chrgTime + 1),W
     00C7 0903                      1- 1806     	BTRSS	STATUS,2
                                    1- 1807     	MGOTO	_00737_DS_
     00C8 3rrr                      3-   63 m1      LGOTO rom_address
     00C9 2159                      1- 1808     	MOVIA	0x59
     00CA 04rr                      1- 1809     	SUBAR	_chrgTime,W
     00CB                           1- 1810     _00737_DS_:
     00CB 0803                      1- 1811     	BTRSS	STATUS,0
                                    1- 1812     	MGOTO	_00578_DS_
     00CC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1813     	.line	713, "main.c"; 	chrgTime = 600;
     00CD 2158                      1- 1814     	MOVIA	0x58
                                    1- 1815     	BANKSEL	_chrgTime
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 00rr                      1- 1816     	MOVAR	_chrgTime
     00D0 2102                      1- 1817     	MOVIA	0x02
     00D1 00rr                      1- 1818     	MOVAR	(_chrgTime + 1)
                                    1- 1819     	.line	714, "main.c"; 	pwStep = 9;
     00D2 2109                      1- 1820     	MOVIA	0x09
                                    1- 1821     	BANKSEL	_pwStep
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 00rr                      1- 1822     	MOVAR	_pwStep
                                    1- 1823     	MGOTO	_00578_DS_
     00D5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1824     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1825     ;;unsigned compare: left >= lit (0x17D=381), size=2
     00D6                           1- 1826     _00573_DS_:
                                    1- 1827     	.line	717, "main.c"; 	else if(R_AIN4_DATA > 380)
     00D6 2101                      1- 1828     	MOVIA	0x01
                                    1- 1829     	BANKSEL	_R_AIN4_DATA
     00D7 rrrr                      3-  110 m1      .banksel ram_address
     00D8 04rr                      1- 1830     	SUBAR	(_R_AIN4_DATA + 1),W
     00D9 0903                      1- 1831     	BTRSS	STATUS,2
                                    1- 1832     	MGOTO	_00738_DS_
     00DA 3rrr                      3-   63 m1      LGOTO rom_address
     00DB 217D                      1- 1833     	MOVIA	0x7d
     00DC 04rr                      1- 1834     	SUBAR	_R_AIN4_DATA,W
     00DD                           1- 1835     _00738_DS_:
     00DD 0803                      1- 1836     	BTRSS	STATUS,0
                                    1- 1837     	MGOTO	_00570_DS_
     00DE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1838     	.line	720, "main.c"; 	if(pwStep == 6)
                                    1- 1839     	BANKSEL	_pwStep
     00DF rrrr                      3-  110 m1      .banksel ram_address
     00E0 01rr                      1- 1840     	MOVR	_pwStep,W
     00E1 2406                      1- 1841     	XORIA	0x06
     00E2 0903                      1- 1842     	BTRSS	STATUS,2
                                    1- 1843     	MGOTO	_00496_DS_
     00E3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1844     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1845     ;;unsigned compare: left >= lit (0x182=386), size=2
                                    1- 1846     	.line	722, "main.c"; 	if(R_AIN4_DATA > 385)
     00E4 2101                      1- 1847     	MOVIA	0x01
                                    1- 1848     	BANKSEL	_R_AIN4_DATA
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 04rr                      1- 1849     	SUBAR	(_R_AIN4_DATA + 1),W
     00E7 0903                      1- 1850     	BTRSS	STATUS,2
                                    1- 1851     	MGOTO	_00739_DS_
     00E8 3rrr                      3-   63 m1      LGOTO rom_address
     00E9 2182                      1- 1852     	MOVIA	0x82
     00EA 04rr                      1- 1853     	SUBAR	_R_AIN4_DATA,W
     00EB                           1- 1854     _00739_DS_:
     00EB 0803                      1- 1855     	BTRSS	STATUS,0
                                    1- 1856     	MGOTO	_00496_DS_
     00EC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1857     	.line	723, "main.c"; 	pwStep = 7;
     00ED 2107                      1- 1858     	MOVIA	0x07
                                    1- 1859     	BANKSEL	_pwStep
     00EE rrrr                      3-  110 m1      .banksel ram_address
     00EF 00rr                      1- 1860     	MOVAR	_pwStep
                                    1- 1861     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1862     ;;unsigned compare: left >= lit (0x8=8), size=1
     00F0                           1- 1863     _00496_DS_:
                                    1- 1864     	.line	725, "main.c"; 	if(pwStep > 7)
     00F0 2108                      1- 1865     	MOVIA	0x08
                                    1- 1866     	BANKSEL	_pwStep
     00F1 rrrr                      3-  110 m1      .banksel ram_address
     00F2 04rr                      1- 1867     	SUBAR	_pwStep,W
     00F3 0803                      1- 1868     	BTRSS	STATUS,0
                                    1- 1869     	MGOTO	_00500_DS_
     00F4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1870     ;;unsigned compare: left < lit (0x186=390), size=2
                                    1- 1871     	.line	727, "main.c"; 	if(R_AIN4_DATA < 390)
     00F5 2101                      1- 1872     	MOVIA	0x01
                                    1- 1873     	BANKSEL	_R_AIN4_DATA
     00F6 rrrr                      3-  110 m1      .banksel ram_address
     00F7 04rr                      1- 1874     	SUBAR	(_R_AIN4_DATA + 1),W
     00F8 0903                      1- 1875     	BTRSS	STATUS,2
                                    1- 1876     	MGOTO	_00741_DS_
     00F9 3rrr                      3-   63 m1      LGOTO rom_address
     00FA 2186                      1- 1877     	MOVIA	0x86
     00FB 04rr                      1- 1878     	SUBAR	_R_AIN4_DATA,W
     00FC                           1- 1879     _00741_DS_:
     00FC 0C03                      1- 1880     	BTRSC	STATUS,0
                                    1- 1881     	MGOTO	_00501_DS_
     00FD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1882     	.line	728, "main.c"; 	pwStep = 7;
     00FE 2107                      1- 1883     	MOVIA	0x07
                                    1- 1884     	BANKSEL	_pwStep
     00FF rrrr                      3-  110 m1      .banksel ram_address
     0100 00rr                      1- 1885     	MOVAR	_pwStep
                                    1- 1886     	MGOTO	_00501_DS_
     0101 3rrr                      3-   63 m1      LGOTO rom_address
     0102                           1- 1887     _00500_DS_:
                                    1- 1888     	.line	731, "main.c"; 	pwStep = 7;
     0102 2107                      1- 1889     	MOVIA	0x07
                                    1- 1890     	BANKSEL	_pwStep
     0103 rrrr                      3-  110 m1      .banksel ram_address
     0104 00rr                      1- 1891     	MOVAR	_pwStep
     0105                           1- 1892     _00501_DS_:
                                    1- 1893     	.line	732, "main.c"; 	chrgTime = 0;
                                    1- 1894     	BANKSEL	_chrgTime
     0105 rrrr                      3-  110 m1      .banksel ram_address
     0106 02rr                      1- 1895     	CLRR	_chrgTime
     0107 02rr                      1- 1896     	CLRR	(_chrgTime + 1)
                                    1- 1897     	MGOTO	_00578_DS_
     0108 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1898     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1899     ;;unsigned compare: left >= lit (0x15A=346), size=2
     0109                           1- 1900     _00570_DS_:
                                    1- 1901     	.line	734, "main.c"; 	else if(R_AIN4_DATA > 345)
     0109 2101                      1- 1902     	MOVIA	0x01
                                    1- 1903     	BANKSEL	_R_AIN4_DATA
     010A rrrr                      3-  110 m1      .banksel ram_address
     010B 04rr                      1- 1904     	SUBAR	(_R_AIN4_DATA + 1),W
     010C 0903                      1- 1905     	BTRSS	STATUS,2
                                    1- 1906     	MGOTO	_00742_DS_
     010D 3rrr                      3-   63 m1      LGOTO rom_address
     010E 215A                      1- 1907     	MOVIA	0x5a
     010F 04rr                      1- 1908     	SUBAR	_R_AIN4_DATA,W
     0110                           1- 1909     _00742_DS_:
     0110 0803                      1- 1910     	BTRSS	STATUS,0
                                    1- 1911     	MGOTO	_00567_DS_
     0111 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1912     	.line	737, "main.c"; 	if(pwStep == 5)
                                    1- 1913     	BANKSEL	_pwStep
     0112 rrrr                      3-  110 m1      .banksel ram_address
     0113 01rr                      1- 1914     	MOVR	_pwStep,W
     0114 2405                      1- 1915     	XORIA	0x05
     0115 0903                      1- 1916     	BTRSS	STATUS,2
                                    1- 1917     	MGOTO	_00505_DS_
     0116 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1918     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1919     ;;unsigned compare: left >= lit (0x15F=351), size=2
                                    1- 1920     	.line	739, "main.c"; 	if(R_AIN4_DATA > 350)
     0117 2101                      1- 1921     	MOVIA	0x01
                                    1- 1922     	BANKSEL	_R_AIN4_DATA
     0118 rrrr                      3-  110 m1      .banksel ram_address
     0119 04rr                      1- 1923     	SUBAR	(_R_AIN4_DATA + 1),W
     011A 0903                      1- 1924     	BTRSS	STATUS,2
                                    1- 1925     	MGOTO	_00743_DS_
     011B 3rrr                      3-   63 m1      LGOTO rom_address
     011C 215F                      1- 1926     	MOVIA	0x5f
     011D 04rr                      1- 1927     	SUBAR	_R_AIN4_DATA,W
     011E                           1- 1928     _00743_DS_:
     011E 0803                      1- 1929     	BTRSS	STATUS,0
                                    1- 1930     	MGOTO	_00505_DS_
     011F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1931     	.line	740, "main.c"; 	pwStep = 6;
     0120 2106                      1- 1932     	MOVIA	0x06
                                    1- 1933     	BANKSEL	_pwStep
     0121 rrrr                      3-  110 m1      .banksel ram_address
     0122 00rr                      1- 1934     	MOVAR	_pwStep
                                    1- 1935     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1936     ;;unsigned compare: left >= lit (0x7=7), size=1
     0123                           1- 1937     _00505_DS_:
                                    1- 1938     	.line	742, "main.c"; 	if(pwStep > 6)
     0123 2107                      1- 1939     	MOVIA	0x07
                                    1- 1940     	BANKSEL	_pwStep
     0124 rrrr                      3-  110 m1      .banksel ram_address
     0125 04rr                      1- 1941     	SUBAR	_pwStep,W
     0126 0803                      1- 1942     	BTRSS	STATUS,0
                                    1- 1943     	MGOTO	_00509_DS_
     0127 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1944     ;;unsigned compare: left < lit (0x177=375), size=2
                                    1- 1945     	.line	744, "main.c"; 	if(R_AIN4_DATA < 375)
     0128 2101                      1- 1946     	MOVIA	0x01
                                    1- 1947     	BANKSEL	_R_AIN4_DATA
     0129 rrrr                      3-  110 m1      .banksel ram_address
     012A 04rr                      1- 1948     	SUBAR	(_R_AIN4_DATA + 1),W
     012B 0903                      1- 1949     	BTRSS	STATUS,2
                                    1- 1950     	MGOTO	_00745_DS_
     012C 3rrr                      3-   63 m1      LGOTO rom_address
     012D 2177                      1- 1951     	MOVIA	0x77
     012E 04rr                      1- 1952     	SUBAR	_R_AIN4_DATA,W
     012F                           1- 1953     _00745_DS_:
     012F 0C03                      1- 1954     	BTRSC	STATUS,0
                                    1- 1955     	MGOTO	_00510_DS_
     0130 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1956     	.line	745, "main.c"; 	pwStep = 6;
     0131 2106                      1- 1957     	MOVIA	0x06
                                    1- 1958     	BANKSEL	_pwStep
     0132 rrrr                      3-  110 m1      .banksel ram_address
     0133 00rr                      1- 1959     	MOVAR	_pwStep
                                    1- 1960     	MGOTO	_00510_DS_
     0134 3rrr                      3-   63 m1      LGOTO rom_address
     0135                           1- 1961     _00509_DS_:
                                    1- 1962     	.line	748, "main.c"; 	pwStep = 6;
     0135 2106                      1- 1963     	MOVIA	0x06
                                    1- 1964     	BANKSEL	_pwStep
     0136 rrrr                      3-  110 m1      .banksel ram_address
     0137 00rr                      1- 1965     	MOVAR	_pwStep
     0138                           1- 1966     _00510_DS_:
                                    1- 1967     	.line	749, "main.c"; 	chrgTime = 0;
                                    1- 1968     	BANKSEL	_chrgTime
     0138 rrrr                      3-  110 m1      .banksel ram_address
     0139 02rr                      1- 1969     	CLRR	_chrgTime
     013A 02rr                      1- 1970     	CLRR	(_chrgTime + 1)
                                    1- 1971     	MGOTO	_00578_DS_
     013B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1972     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1973     ;;unsigned compare: left >= lit (0x132=306), size=2
     013C                           1- 1974     _00567_DS_:
                                    1- 1975     	.line	751, "main.c"; 	else if(R_AIN4_DATA > 305)
     013C 2101                      1- 1976     	MOVIA	0x01
                                    1- 1977     	BANKSEL	_R_AIN4_DATA
     013D rrrr                      3-  110 m1      .banksel ram_address
     013E 04rr                      1- 1978     	SUBAR	(_R_AIN4_DATA + 1),W
     013F 0903                      1- 1979     	BTRSS	STATUS,2
                                    1- 1980     	MGOTO	_00746_DS_
     0140 3rrr                      3-   63 m1      LGOTO rom_address
     0141 2132                      1- 1981     	MOVIA	0x32
     0142 04rr                      1- 1982     	SUBAR	_R_AIN4_DATA,W
     0143                           1- 1983     _00746_DS_:
     0143 0803                      1- 1984     	BTRSS	STATUS,0
                                    1- 1985     	MGOTO	_00564_DS_
     0144 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1986     	.line	754, "main.c"; 	if(pwStep == 4)
                                    1- 1987     	BANKSEL	_pwStep
     0145 rrrr                      3-  110 m1      .banksel ram_address
     0146 01rr                      1- 1988     	MOVR	_pwStep,W
     0147 2404                      1- 1989     	XORIA	0x04
     0148 0903                      1- 1990     	BTRSS	STATUS,2
                                    1- 1991     	MGOTO	_00514_DS_
     0149 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1992     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1993     ;;unsigned compare: left >= lit (0x137=311), size=2
                                    1- 1994     	.line	756, "main.c"; 	if(R_AIN4_DATA > 310)
     014A 2101                      1- 1995     	MOVIA	0x01
                                    1- 1996     	BANKSEL	_R_AIN4_DATA
     014B rrrr                      3-  110 m1      .banksel ram_address
     014C 04rr                      1- 1997     	SUBAR	(_R_AIN4_DATA + 1),W
     014D 0903                      1- 1998     	BTRSS	STATUS,2
                                    1- 1999     	MGOTO	_00747_DS_
     014E 3rrr                      3-   63 m1      LGOTO rom_address
     014F 2137                      1- 2000     	MOVIA	0x37
     0150 04rr                      1- 2001     	SUBAR	_R_AIN4_DATA,W
     0151                           1- 2002     _00747_DS_:
     0151 0803                      1- 2003     	BTRSS	STATUS,0
                                    1- 2004     	MGOTO	_00514_DS_
     0152 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2005     	.line	757, "main.c"; 	pwStep = 5;
     0153 2105                      1- 2006     	MOVIA	0x05
                                    1- 2007     	BANKSEL	_pwStep
     0154 rrrr                      3-  110 m1      .banksel ram_address
     0155 00rr                      1- 2008     	MOVAR	_pwStep
                                    1- 2009     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2010     ;;unsigned compare: left >= lit (0x6=6), size=1
     0156                           1- 2011     _00514_DS_:
                                    1- 2012     	.line	759, "main.c"; 	if(pwStep > 5)
     0156 2106                      1- 2013     	MOVIA	0x06
                                    1- 2014     	BANKSEL	_pwStep
     0157 rrrr                      3-  110 m1      .banksel ram_address
     0158 04rr                      1- 2015     	SUBAR	_pwStep,W
     0159 0803                      1- 2016     	BTRSS	STATUS,0
                                    1- 2017     	MGOTO	_00518_DS_
     015A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2018     ;;unsigned compare: left < lit (0x154=340), size=2
                                    1- 2019     	.line	761, "main.c"; 	if(R_AIN4_DATA < 340)
     015B 2101                      1- 2020     	MOVIA	0x01
                                    1- 2021     	BANKSEL	_R_AIN4_DATA
     015C rrrr                      3-  110 m1      .banksel ram_address
     015D 04rr                      1- 2022     	SUBAR	(_R_AIN4_DATA + 1),W
     015E 0903                      1- 2023     	BTRSS	STATUS,2
                                    1- 2024     	MGOTO	_00749_DS_
     015F 3rrr                      3-   63 m1      LGOTO rom_address
     0160 2154                      1- 2025     	MOVIA	0x54
     0161 04rr                      1- 2026     	SUBAR	_R_AIN4_DATA,W
     0162                           1- 2027     _00749_DS_:
     0162 0C03                      1- 2028     	BTRSC	STATUS,0
                                    1- 2029     	MGOTO	_00519_DS_
     0163 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2030     	.line	762, "main.c"; 	pwStep = 5;
     0164 2105                      1- 2031     	MOVIA	0x05
                                    1- 2032     	BANKSEL	_pwStep
     0165 rrrr                      3-  110 m1      .banksel ram_address
     0166 00rr                      1- 2033     	MOVAR	_pwStep
                                    1- 2034     	MGOTO	_00519_DS_
     0167 3rrr                      3-   63 m1      LGOTO rom_address
     0168                           1- 2035     _00518_DS_:
                                    1- 2036     	.line	765, "main.c"; 	pwStep = 5;
     0168 2105                      1- 2037     	MOVIA	0x05
                                    1- 2038     	BANKSEL	_pwStep
     0169 rrrr                      3-  110 m1      .banksel ram_address
     016A 00rr                      1- 2039     	MOVAR	_pwStep
     016B                           1- 2040     _00519_DS_:
                                    1- 2041     	.line	766, "main.c"; 	chrgTime = 0;
                                    1- 2042     	BANKSEL	_chrgTime
     016B rrrr                      3-  110 m1      .banksel ram_address
     016C 02rr                      1- 2043     	CLRR	_chrgTime
     016D 02rr                      1- 2044     	CLRR	(_chrgTime + 1)
                                    1- 2045     	MGOTO	_00578_DS_
     016E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2046     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2047     ;;unsigned compare: left >= lit (0xF1=241), size=2
     016F                           1- 2048     _00564_DS_:
                                    1- 2049     	.line	768, "main.c"; 	else if(R_AIN4_DATA > 240)
     016F 2100                      1- 2050     	MOVIA	0x00
                                    1- 2051     	BANKSEL	_R_AIN4_DATA
     0170 rrrr                      3-  110 m1      .banksel ram_address
     0171 04rr                      1- 2052     	SUBAR	(_R_AIN4_DATA + 1),W
     0172 0903                      1- 2053     	BTRSS	STATUS,2
                                    1- 2054     	MGOTO	_00750_DS_
     0173 3rrr                      3-   63 m1      LGOTO rom_address
     0174 21F1                      1- 2055     	MOVIA	0xf1
     0175 04rr                      1- 2056     	SUBAR	_R_AIN4_DATA,W
     0176                           1- 2057     _00750_DS_:
     0176 0803                      1- 2058     	BTRSS	STATUS,0
                                    1- 2059     	MGOTO	_00561_DS_
     0177 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2060     	.line	770, "main.c"; 	if(pwStep == 3)
                                    1- 2061     	BANKSEL	_pwStep
     0178 rrrr                      3-  110 m1      .banksel ram_address
     0179 01rr                      1- 2062     	MOVR	_pwStep,W
     017A 2403                      1- 2063     	XORIA	0x03
     017B 0903                      1- 2064     	BTRSS	STATUS,2
                                    1- 2065     	MGOTO	_00523_DS_
     017C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2066     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2067     ;;unsigned compare: left >= lit (0xF6=246), size=2
                                    1- 2068     	.line	772, "main.c"; 	if(R_AIN4_DATA > 245)
     017D 2100                      1- 2069     	MOVIA	0x00
                                    1- 2070     	BANKSEL	_R_AIN4_DATA
     017E rrrr                      3-  110 m1      .banksel ram_address
     017F 04rr                      1- 2071     	SUBAR	(_R_AIN4_DATA + 1),W
     0180 0903                      1- 2072     	BTRSS	STATUS,2
                                    1- 2073     	MGOTO	_00751_DS_
     0181 3rrr                      3-   63 m1      LGOTO rom_address
     0182 21F6                      1- 2074     	MOVIA	0xf6
     0183 04rr                      1- 2075     	SUBAR	_R_AIN4_DATA,W
     0184                           1- 2076     _00751_DS_:
     0184 0803                      1- 2077     	BTRSS	STATUS,0
                                    1- 2078     	MGOTO	_00523_DS_
     0185 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2079     	.line	773, "main.c"; 	pwStep = 4;
     0186 2104                      1- 2080     	MOVIA	0x04
                                    1- 2081     	BANKSEL	_pwStep
     0187 rrrr                      3-  110 m1      .banksel ram_address
     0188 00rr                      1- 2082     	MOVAR	_pwStep
                                    1- 2083     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2084     ;;unsigned compare: left >= lit (0x5=5), size=1
     0189                           1- 2085     _00523_DS_:
                                    1- 2086     	.line	775, "main.c"; 	if(pwStep > 4)
     0189 2105                      1- 2087     	MOVIA	0x05
                                    1- 2088     	BANKSEL	_pwStep
     018A rrrr                      3-  110 m1      .banksel ram_address
     018B 04rr                      1- 2089     	SUBAR	_pwStep,W
     018C 0803                      1- 2090     	BTRSS	STATUS,0
                                    1- 2091     	MGOTO	_00527_DS_
     018D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2092     ;;unsigned compare: left < lit (0x12C=300), size=2
                                    1- 2093     	.line	777, "main.c"; 	if(R_AIN4_DATA < 300)
     018E 2101                      1- 2094     	MOVIA	0x01
                                    1- 2095     	BANKSEL	_R_AIN4_DATA
     018F rrrr                      3-  110 m1      .banksel ram_address
     0190 04rr                      1- 2096     	SUBAR	(_R_AIN4_DATA + 1),W
     0191 0903                      1- 2097     	BTRSS	STATUS,2
                                    1- 2098     	MGOTO	_00753_DS_
     0192 3rrr                      3-   63 m1      LGOTO rom_address
     0193 212C                      1- 2099     	MOVIA	0x2c
     0194 04rr                      1- 2100     	SUBAR	_R_AIN4_DATA,W
     0195                           1- 2101     _00753_DS_:
     0195 0C03                      1- 2102     	BTRSC	STATUS,0
                                    1- 2103     	MGOTO	_00528_DS_
     0196 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2104     	.line	778, "main.c"; 	pwStep = 4;
     0197 2104                      1- 2105     	MOVIA	0x04
                                    1- 2106     	BANKSEL	_pwStep
     0198 rrrr                      3-  110 m1      .banksel ram_address
     0199 00rr                      1- 2107     	MOVAR	_pwStep
                                    1- 2108     	MGOTO	_00528_DS_
     019A 3rrr                      3-   63 m1      LGOTO rom_address
     019B                           1- 2109     _00527_DS_:
                                    1- 2110     	.line	781, "main.c"; 	pwStep = 4;
     019B 2104                      1- 2111     	MOVIA	0x04
                                    1- 2112     	BANKSEL	_pwStep
     019C rrrr                      3-  110 m1      .banksel ram_address
     019D 00rr                      1- 2113     	MOVAR	_pwStep
     019E                           1- 2114     _00528_DS_:
                                    1- 2115     	.line	782, "main.c"; 	chrgTime = 0;
                                    1- 2116     	BANKSEL	_chrgTime
     019E rrrr                      3-  110 m1      .banksel ram_address
     019F 02rr                      1- 2117     	CLRR	_chrgTime
     01A0 02rr                      1- 2118     	CLRR	(_chrgTime + 1)
                                    1- 2119     	MGOTO	_00578_DS_
     01A1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2120     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2121     ;;unsigned compare: left >= lit (0xC9=201), size=2
     01A2                           1- 2122     _00561_DS_:
                                    1- 2123     	.line	784, "main.c"; 	else if(R_AIN4_DATA > 200)
     01A2 2100                      1- 2124     	MOVIA	0x00
                                    1- 2125     	BANKSEL	_R_AIN4_DATA
     01A3 rrrr                      3-  110 m1      .banksel ram_address
     01A4 04rr                      1- 2126     	SUBAR	(_R_AIN4_DATA + 1),W
     01A5 0903                      1- 2127     	BTRSS	STATUS,2
                                    1- 2128     	MGOTO	_00754_DS_
     01A6 3rrr                      3-   63 m1      LGOTO rom_address
     01A7 21C9                      1- 2129     	MOVIA	0xc9
     01A8 04rr                      1- 2130     	SUBAR	_R_AIN4_DATA,W
     01A9                           1- 2131     _00754_DS_:
     01A9 0803                      1- 2132     	BTRSS	STATUS,0
                                    1- 2133     	MGOTO	_00558_DS_
     01AA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2134     	.line	786, "main.c"; 	if(pwStep == 2)
                                    1- 2135     	BANKSEL	_pwStep
     01AB rrrr                      3-  110 m1      .banksel ram_address
     01AC 01rr                      1- 2136     	MOVR	_pwStep,W
     01AD 2402                      1- 2137     	XORIA	0x02
     01AE 0903                      1- 2138     	BTRSS	STATUS,2
                                    1- 2139     	MGOTO	_00532_DS_
     01AF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2140     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2141     ;;unsigned compare: left >= lit (0xD3=211), size=2
                                    1- 2142     	.line	788, "main.c"; 	if(R_AIN4_DATA > 210)
     01B0 2100                      1- 2143     	MOVIA	0x00
                                    1- 2144     	BANKSEL	_R_AIN4_DATA
     01B1 rrrr                      3-  110 m1      .banksel ram_address
     01B2 04rr                      1- 2145     	SUBAR	(_R_AIN4_DATA + 1),W
     01B3 0903                      1- 2146     	BTRSS	STATUS,2
                                    1- 2147     	MGOTO	_00755_DS_
     01B4 3rrr                      3-   63 m1      LGOTO rom_address
     01B5 21D3                      1- 2148     	MOVIA	0xd3
     01B6 04rr                      1- 2149     	SUBAR	_R_AIN4_DATA,W
     01B7                           1- 2150     _00755_DS_:
     01B7 0803                      1- 2151     	BTRSS	STATUS,0
                                    1- 2152     	MGOTO	_00532_DS_
     01B8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2153     	.line	789, "main.c"; 	pwStep = 3;
     01B9 2103                      1- 2154     	MOVIA	0x03
                                    1- 2155     	BANKSEL	_pwStep
     01BA rrrr                      3-  110 m1      .banksel ram_address
     01BB 00rr                      1- 2156     	MOVAR	_pwStep
                                    1- 2157     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2158     ;;unsigned compare: left >= lit (0x4=4), size=1
     01BC                           1- 2159     _00532_DS_:
                                    1- 2160     	.line	791, "main.c"; 	if(pwStep > 3)
     01BC 2104                      1- 2161     	MOVIA	0x04
                                    1- 2162     	BANKSEL	_pwStep
     01BD rrrr                      3-  110 m1      .banksel ram_address
     01BE 04rr                      1- 2163     	SUBAR	_pwStep,W
     01BF 0803                      1- 2164     	BTRSS	STATUS,0
                                    1- 2165     	MGOTO	_00536_DS_
     01C0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2166     ;;unsigned compare: left < lit (0xEB=235), size=2
                                    1- 2167     	.line	793, "main.c"; 	if(R_AIN4_DATA < 235)
     01C1 2100                      1- 2168     	MOVIA	0x00
                                    1- 2169     	BANKSEL	_R_AIN4_DATA
     01C2 rrrr                      3-  110 m1      .banksel ram_address
     01C3 04rr                      1- 2170     	SUBAR	(_R_AIN4_DATA + 1),W
     01C4 0903                      1- 2171     	BTRSS	STATUS,2
                                    1- 2172     	MGOTO	_00757_DS_
     01C5 3rrr                      3-   63 m1      LGOTO rom_address
     01C6 21EB                      1- 2173     	MOVIA	0xeb
     01C7 04rr                      1- 2174     	SUBAR	_R_AIN4_DATA,W
     01C8                           1- 2175     _00757_DS_:
     01C8 0C03                      1- 2176     	BTRSC	STATUS,0
                                    1- 2177     	MGOTO	_00537_DS_
     01C9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2178     	.line	794, "main.c"; 	pwStep = 3;
     01CA 2103                      1- 2179     	MOVIA	0x03
                                    1- 2180     	BANKSEL	_pwStep
     01CB rrrr                      3-  110 m1      .banksel ram_address
     01CC 00rr                      1- 2181     	MOVAR	_pwStep
                                    1- 2182     	MGOTO	_00537_DS_
     01CD 3rrr                      3-   63 m1      LGOTO rom_address
     01CE                           1- 2183     _00536_DS_:
                                    1- 2184     	.line	797, "main.c"; 	pwStep = 3;
     01CE 2103                      1- 2185     	MOVIA	0x03
                                    1- 2186     	BANKSEL	_pwStep
     01CF rrrr                      3-  110 m1      .banksel ram_address
     01D0 00rr                      1- 2187     	MOVAR	_pwStep
     01D1                           1- 2188     _00537_DS_:
                                    1- 2189     	.line	798, "main.c"; 	chrgTime = 0;
                                    1- 2190     	BANKSEL	_chrgTime
     01D1 rrrr                      3-  110 m1      .banksel ram_address
     01D2 02rr                      1- 2191     	CLRR	_chrgTime
     01D3 02rr                      1- 2192     	CLRR	(_chrgTime + 1)
                                    1- 2193     	MGOTO	_00578_DS_
     01D4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2194     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2195     ;;unsigned compare: left >= lit (0x65=101), size=2
     01D5                           1- 2196     _00558_DS_:
                                    1- 2197     	.line	800, "main.c"; 	else if(R_AIN4_DATA > 100)
     01D5 2100                      1- 2198     	MOVIA	0x00
                                    1- 2199     	BANKSEL	_R_AIN4_DATA
     01D6 rrrr                      3-  110 m1      .banksel ram_address
     01D7 04rr                      1- 2200     	SUBAR	(_R_AIN4_DATA + 1),W
     01D8 0903                      1- 2201     	BTRSS	STATUS,2
                                    1- 2202     	MGOTO	_00758_DS_
     01D9 3rrr                      3-   63 m1      LGOTO rom_address
     01DA 2165                      1- 2203     	MOVIA	0x65
     01DB 04rr                      1- 2204     	SUBAR	_R_AIN4_DATA,W
     01DC                           1- 2205     _00758_DS_:
     01DC 0803                      1- 2206     	BTRSS	STATUS,0
                                    1- 2207     	MGOTO	_00555_DS_
     01DD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2208     	.line	803, "main.c"; 	if(pwStep == 1)
                                    1- 2209     	BANKSEL	_pwStep
     01DE rrrr                      3-  110 m1      .banksel ram_address
     01DF 01rr                      1- 2210     	MOVR	_pwStep,W
     01E0 2401                      1- 2211     	XORIA	0x01
     01E1 0903                      1- 2212     	BTRSS	STATUS,2
                                    1- 2213     	MGOTO	_00541_DS_
     01E2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2214     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2215     ;;unsigned compare: left >= lit (0x6F=111), size=2
                                    1- 2216     	.line	805, "main.c"; 	if(R_AIN4_DATA > 110)
     01E3 2100                      1- 2217     	MOVIA	0x00
                                    1- 2218     	BANKSEL	_R_AIN4_DATA
     01E4 rrrr                      3-  110 m1      .banksel ram_address
     01E5 04rr                      1- 2219     	SUBAR	(_R_AIN4_DATA + 1),W
     01E6 0903                      1- 2220     	BTRSS	STATUS,2
                                    1- 2221     	MGOTO	_00759_DS_
     01E7 3rrr                      3-   63 m1      LGOTO rom_address
     01E8 216F                      1- 2222     	MOVIA	0x6f
     01E9 04rr                      1- 2223     	SUBAR	_R_AIN4_DATA,W
     01EA                           1- 2224     _00759_DS_:
     01EA 0803                      1- 2225     	BTRSS	STATUS,0
                                    1- 2226     	MGOTO	_00541_DS_
     01EB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2227     	.line	806, "main.c"; 	pwStep = 2;
     01EC 2102                      1- 2228     	MOVIA	0x02
                                    1- 2229     	BANKSEL	_pwStep
     01ED rrrr                      3-  110 m1      .banksel ram_address
     01EE 00rr                      1- 2230     	MOVAR	_pwStep
                                    1- 2231     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2232     ;;unsigned compare: left >= lit (0x3=3), size=1
     01EF                           1- 2233     _00541_DS_:
                                    1- 2234     	.line	808, "main.c"; 	if(pwStep > 2)
     01EF 2103                      1- 2235     	MOVIA	0x03
                                    1- 2236     	BANKSEL	_pwStep
     01F0 rrrr                      3-  110 m1      .banksel ram_address
     01F1 04rr                      1- 2237     	SUBAR	_pwStep,W
     01F2 0803                      1- 2238     	BTRSS	STATUS,0
                                    1- 2239     	MGOTO	_00545_DS_
     01F3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2240     ;;unsigned compare: left < lit (0xBE=190), size=2
                                    1- 2241     	.line	810, "main.c"; 	if(R_AIN4_DATA < 190)
     01F4 2100                      1- 2242     	MOVIA	0x00
                                    1- 2243     	BANKSEL	_R_AIN4_DATA
     01F5 rrrr                      3-  110 m1      .banksel ram_address
     01F6 04rr                      1- 2244     	SUBAR	(_R_AIN4_DATA + 1),W
     01F7 0903                      1- 2245     	BTRSS	STATUS,2
                                    1- 2246     	MGOTO	_00761_DS_
     01F8 3rrr                      3-   63 m1      LGOTO rom_address
     01F9 21BE                      1- 2247     	MOVIA	0xbe
     01FA 04rr                      1- 2248     	SUBAR	_R_AIN4_DATA,W
     01FB                           1- 2249     _00761_DS_:
     01FB 0C03                      1- 2250     	BTRSC	STATUS,0
                                    1- 2251     	MGOTO	_00546_DS_
     01FC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2252     	.line	811, "main.c"; 	pwStep = 2;
     01FD 2102                      1- 2253     	MOVIA	0x02
                                    1- 2254     	BANKSEL	_pwStep
     01FE rrrr                      3-  110 m1      .banksel ram_address
     01FF 00rr                      1- 2255     	MOVAR	_pwStep
                                    1- 2256     	MGOTO	_00546_DS_
     0200 3rrr                      3-   63 m1      LGOTO rom_address
     0201                           1- 2257     _00545_DS_:
                                    1- 2258     	.line	814, "main.c"; 	pwStep = 2;
     0201 2102                      1- 2259     	MOVIA	0x02
                                    1- 2260     	BANKSEL	_pwStep
     0202 rrrr                      3-  110 m1      .banksel ram_address
     0203 00rr                      1- 2261     	MOVAR	_pwStep
     0204                           1- 2262     _00546_DS_:
                                    1- 2263     	.line	815, "main.c"; 	chrgTime = 0;
                                    1- 2264     	BANKSEL	_chrgTime
     0204 rrrr                      3-  110 m1      .banksel ram_address
     0205 02rr                      1- 2265     	CLRR	_chrgTime
     0206 02rr                      1- 2266     	CLRR	(_chrgTime + 1)
                                    1- 2267     	MGOTO	_00578_DS_
     0207 3rrr                      3-   63 m1      LGOTO rom_address
     0208                           1- 2268     _00555_DS_:
                                    1- 2269     	.line	817, "main.c"; 	else  if(R_AIN4_DATA > 0)
                                    1- 2270     	BANKSEL	_R_AIN4_DATA
     0208 rrrr                      3-  110 m1      .banksel ram_address
     0209 01rr                      1- 2271     	MOVR	_R_AIN4_DATA,W
     020A 11rr                      1- 2272     	IORAR	(_R_AIN4_DATA + 1),W
     020B 0D03                      1- 2273     	BTRSC	STATUS,2
                                    1- 2274     	MGOTO	_00578_DS_
     020C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2275     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2276     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 2277     	.line	820, "main.c"; 	if(pwStep > 1)
     020D 2102                      1- 2278     	MOVIA	0x02
                                    1- 2279     	BANKSEL	_pwStep
     020E rrrr                      3-  110 m1      .banksel ram_address
     020F 04rr                      1- 2280     	SUBAR	_pwStep,W
     0210 0803                      1- 2281     	BTRSS	STATUS,0
                                    1- 2282     	MGOTO	_00550_DS_
     0211 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2283     ;;unsigned compare: left < lit (0x5A=90), size=2
                                    1- 2284     	.line	822, "main.c"; 	if(R_AIN4_DATA < 90)
     0212 2100                      1- 2285     	MOVIA	0x00
                                    1- 2286     	BANKSEL	_R_AIN4_DATA
     0213 rrrr                      3-  110 m1      .banksel ram_address
     0214 04rr                      1- 2287     	SUBAR	(_R_AIN4_DATA + 1),W
     0215 0903                      1- 2288     	BTRSS	STATUS,2
                                    1- 2289     	MGOTO	_00763_DS_
     0216 3rrr                      3-   63 m1      LGOTO rom_address
     0217 215A                      1- 2290     	MOVIA	0x5a
     0218 04rr                      1- 2291     	SUBAR	_R_AIN4_DATA,W
     0219                           1- 2292     _00763_DS_:
     0219 0C03                      1- 2293     	BTRSC	STATUS,0
                                    1- 2294     	MGOTO	_00551_DS_
     021A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2295     	.line	823, "main.c"; 	pwStep = 1;
     021B 2101                      1- 2296     	MOVIA	0x01
                                    1- 2297     	BANKSEL	_pwStep
     021C rrrr                      3-  110 m1      .banksel ram_address
     021D 00rr                      1- 2298     	MOVAR	_pwStep
                                    1- 2299     	MGOTO	_00551_DS_
     021E 3rrr                      3-   63 m1      LGOTO rom_address
     021F                           1- 2300     _00550_DS_:
                                    1- 2301     	.line	826, "main.c"; 	pwStep = 1;
     021F 2101                      1- 2302     	MOVIA	0x01
                                    1- 2303     	BANKSEL	_pwStep
     0220 rrrr                      3-  110 m1      .banksel ram_address
     0221 00rr                      1- 2304     	MOVAR	_pwStep
     0222                           1- 2305     _00551_DS_:
                                    1- 2306     	.line	827, "main.c"; 	chrgTime = 0;
                                    1- 2307     	BANKSEL	_chrgTime
     0222 rrrr                      3-  110 m1      .banksel ram_address
     0223 02rr                      1- 2308     	CLRR	_chrgTime
     0224 02rr                      1- 2309     	CLRR	(_chrgTime + 1)
     0225                           1- 2310     _00578_DS_:
                                    1- 2311     	.line	831, "main.c"; 	}
                                    1- 2312     	RETURN	
     0225 0010                      3-   40 m1      ret
                                    1- 2313     ; exit point of _checkBatAD
                                    1- 2315     ;***
                                    1- 2316     ;  pBlock Stats: dbName = C
                                    1- 2317     ;***
                                    1- 2318     ;has an exit
                                    1- 2319     ;functions called:
                                    1- 2320     ;   _delay
                                    1- 2321     ;   _delay
                                    1- 2322     ;; Starting pCode block
                                    1- 2323     .segment "code"; module=main, function=_initAD
     0000                           1- 2325     _initAD:
                                    1- 2326     ; 2 exit points
                                    1- 2327     	.line	632, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 2328     	MOVIA	0x84
     0001 00rr                      1- 2329     	MOVAR	_ADMD
                                    1- 2330     	.line	637, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 2331     	CLRR	_ADVREFH
                                    1- 2332     	.line	642, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 2333     	MOVIA	0x10
     0004 00rr                      1- 2334     	MOVAR	_ADR
                                    1- 2335     	.line	644, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 2336     	MOVIA	0x03
     0006 00rr                      1- 2337     	MOVAR	_ADCR
                                    1- 2338     	.line	647, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 2339     	BSR	_ADMDbits,4
                                    1- 2340     	.line	648, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 2341     	MOVIA	0x64
                                    1- 2342     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2343     	.line	651, "main.c"; 	}
                                    1- 2344     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 2345     ; exit point of _initAD
                                    1- 2347     ;***
                                    1- 2348     ;  pBlock Stats: dbName = C
                                    1- 2349     ;***
                                    1- 2350     ;has an exit
                                    1- 2351     ;2 compiler assigned registers:
                                    1- 2352     ;   r0x102A
                                    1- 2353     ;   r0x102B
                                    1- 2354     ;; Starting pCode block
                                    1- 2355     .segment "code"; module=main, function=_delay
                                    1- 2357     ;local variable name mapping:
     0000                           1- 2360     _delay:
                                    1- 2361     ; 2 exit points
                                    1- 2362     	.line	622, "main.c"; 	void delay(u8t time)
                                    1- 2363     	BANKSEL	r0x102A
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2364     	MOVAR	r0x102A
                                    1- 2365     	.line	624, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2366     	BANKSEL	r0x102B
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2367     	CLRR	r0x102B
     0004                           1- 2368     _00455_DS_:
                                    1- 2369     	BANKSEL	r0x102A
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 2370     	MOVR	r0x102A,W
                                    1- 2371     	BANKSEL	r0x102B
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1- 2372     	SUBAR	r0x102B,W
     0008 0C03                      1- 2373     	BTRSC	STATUS,0
                                    1- 2374     	MGOTO	_00457_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2375     	.line	625, "main.c"; 	NOP();
     000A 0000                      1- 2376     	nop
                                    1- 2377     	.line	624, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2378     	BANKSEL	r0x102B
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 2379     	INCR	r0x102B,F
                                    1- 2380     	MGOTO	_00455_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 2381     _00457_DS_:
                                    1- 2382     	.line	626, "main.c"; 	}
                                    1- 2383     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2384     ; exit point of _delay
                                    1- 2386     ;***
                                    1- 2387     ;  pBlock Stats: dbName = C
                                    1- 2388     ;***
                                    1- 2389     ;has an exit
                                    1- 2390     ;functions called:
                                    1- 2391     ;   _pwmStop
                                    1- 2392     ;   _pwmStop
                                    1- 2393     ;1 compiler assigned register :
                                    1- 2394     ;   r0x1046
                                    1- 2395     ;; Starting pCode block
                                    1- 2396     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2398     _chrgCtr:
                                    1- 2399     ; 2 exit points
                                    1- 2400     	.line	565, "main.c"; 	if(PORTA & 0x20)
                                    1- 2401     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Arr                      1- 2402     	BTRSS	_PORTA,5
                                    1- 2403     	MGOTO	_00446_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2404     	.line	568, "main.c"; 	chrgFlag = 1;
     0003 2101                      1- 2405     	MOVIA	0x01
                                    1- 2406     	BANKSEL	_chrgFlag
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 00rr                      1- 2407     	MOVAR	_chrgFlag
                                    1- 2408     	.line	569, "main.c"; 	workStep = 0;
                                    1- 2409     	BANKSEL	_workStep
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2410     	CLRR	_workStep
                                    1- 2411     	.line	570, "main.c"; 	ledLightTime = 0;
                                    1- 2412     	BANKSEL	_ledLightTime
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 2413     	CLRR	_ledLightTime
                                    1- 2414     	.line	571, "main.c"; 	pwmStop();
                                    1- 2415     	MCALL	_pwmStop
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2416     	.line	573, "main.c"; 	if(pwStep == 9)
                                    1- 2417     	BANKSEL	_pwStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 01rr                      1- 2418     	MOVR	_pwStep,W
     000D 2409                      1- 2419     	XORIA	0x09
     000E 0903                      1- 2420     	BTRSS	STATUS,2
                                    1- 2421     	MGOTO	_00441_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2422     	.line	576, "main.c"; 	ledStep = 8;
     0010 2108                      1- 2423     	MOVIA	0x08
                                    1- 2424     	BANKSEL	_ledStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1- 2425     	MOVAR	_ledStep
                                    1- 2426     	.line	577, "main.c"; 	if(++fullCount > 100)
                                    1- 2427     	BANKSEL	_fullCount
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 05rr                      1- 2428     	INCR	_fullCount,F
                                    1- 2429     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2430     ;;unsigned compare: left >= lit (0x65=101), size=1
     0015 2165                      1- 2431     	MOVIA	0x65
     0016 04rr                      1- 2432     	SUBAR	_fullCount,W
     0017 0803                      1- 2433     	BTRSS	STATUS,0
                                    1- 2434     	MGOTO	_00432_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2435     	.line	578, "main.c"; 	IOSTA |= 0x01;
     0019 001r                      1- 2436     	IOSTR	_IOSTA
                                    1- 2437     	BANKSEL	r0x1046
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 00rr                      1- 2438     	MOVAR	r0x1046
     001C 18rr                      1- 2439     	BSR	r0x1046,0
     001D 01rr                      1- 2440     	MOVR	r0x1046,W
     001E 000r                      1- 2441     	IOST	_IOSTA
     001F                           1- 2442     _00432_DS_:
                                    1- 2443     	.line	580, "main.c"; 	PORTA |= 0x04;		//打开充满提示灯
                                    1- 2444     	BANKSEL	_PORTA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 19rr                      1- 2445     	BSR	_PORTA,2
                                    1- 2446     	MGOTO	_00448_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
     0022                           1- 2447     _00441_DS_:
                                    1- 2448     	.line	585, "main.c"; 	PORTA &= 0xFB;		//关闭充满提示灯
                                    1- 2449     	BANKSEL	_PORTA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 1Drr                      1- 2450     	BCR	_PORTA,2
                                    1- 2451     	.line	587, "main.c"; 	if(count500ms == 0)
                                    1- 2452     	BANKSEL	_count500ms
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 2453     	MOVR	_count500ms,W
     0026 0903                      1- 2454     	BTRSS	STATUS,2
                                    1- 2455     	MGOTO	_00436_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2456     	.line	589, "main.c"; 	if(++ledStep > 8)
                                    1- 2457     	BANKSEL	_ledStep
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 05rr                      1- 2458     	INCR	_ledStep,F
                                    1- 2459     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2460     ;;unsigned compare: left >= lit (0x9=9), size=1
     002A 2109                      1- 2461     	MOVIA	0x09
     002B 04rr                      1- 2462     	SUBAR	_ledStep,W
     002C 0803                      1- 2463     	BTRSS	STATUS,0
                                    1- 2464     	MGOTO	_00436_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2465     	.line	590, "main.c"; 	ledStep = pwStep - 1;
                                    1- 2466     	BANKSEL	_pwStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 06rr                      1- 2467     	DECR	_pwStep,W
                                    1- 2468     	BANKSEL	_ledStep
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 00rr                      1- 2469     	MOVAR	_ledStep
                                    1- 2470     ;;unsigned compare: left < lit (0x1E=30), size=1
     0032                           1- 2471     _00436_DS_:
                                    1- 2472     	.line	592, "main.c"; 	if(count500ms < 30)
     0032 211E                      1- 2473     	MOVIA	0x1e
                                    1- 2474     	BANKSEL	_count500ms
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 04rr                      1- 2475     	SUBAR	_count500ms,W
     0035 0C03                      1- 2476     	BTRSC	STATUS,0
                                    1- 2477     	MGOTO	_00438_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2478     	.line	594, "main.c"; 	PORTA |= 0x02;		//打开充电灯
                                    1- 2479     	BANKSEL	_PORTA
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 18rr                      1- 2480     	BSR	_PORTA,1
                                    1- 2481     	MGOTO	_00439_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
     003A                           1- 2482     _00438_DS_:
                                    1- 2483     	.line	598, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
                                    1- 2484     	BANKSEL	_PORTA
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 1Crr                      1- 2485     	BCR	_PORTA,1
     003C                           1- 2486     _00439_DS_:
                                    1- 2487     	.line	601, "main.c"; 	IOSTA &= 0xFE;
     003C 001r                      1- 2488     	IOSTR	_IOSTA
                                    1- 2489     	BANKSEL	r0x1046
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 00rr                      1- 2490     	MOVAR	r0x1046
     003F 1Crr                      1- 2491     	BCR	r0x1046,0
     0040 01rr                      1- 2492     	MOVR	r0x1046,W
     0041 000r                      1- 2493     	IOST	_IOSTA
                                    1- 2494     	.line	602, "main.c"; 	PORTA |= 0x01;			//打开充电
                                    1- 2495     	BANKSEL	_PORTA
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 18rr                      1- 2496     	BSR	_PORTA,0
                                    1- 2497     	MGOTO	_00448_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
     0045                           1- 2498     _00446_DS_:
                                    1- 2499     	.line	608, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
                                    1- 2500     	BANKSEL	_PORTA
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 1Crr                      1- 2501     	BCR	_PORTA,1
                                    1- 2502     	.line	609, "main.c"; 	PORTA &= 0xFB;		//关闭充满提示灯
     0047 1Drr                      1- 2503     	BCR	_PORTA,2
                                    1- 2504     	.line	610, "main.c"; 	IOSTA |= 0x01;
     0048 001r                      1- 2505     	IOSTR	_IOSTA
                                    1- 2506     	BANKSEL	r0x1046
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 2507     	MOVAR	r0x1046
     004B 18rr                      1- 2508     	BSR	r0x1046,0
     004C 01rr                      1- 2509     	MOVR	r0x1046,W
     004D 000r                      1- 2510     	IOST	_IOSTA
                                    1- 2511     	.line	611, "main.c"; 	chrgTime = 0;
                                    1- 2512     	BANKSEL	_chrgTime
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 02rr                      1- 2513     	CLRR	_chrgTime
     0050 02rr                      1- 2514     	CLRR	(_chrgTime + 1)
                                    1- 2515     	.line	613, "main.c"; 	if(workStep == 0)
                                    1- 2516     	BANKSEL	_workStep
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 01rr                      1- 2517     	MOVR	_workStep,W
     0053 0903                      1- 2518     	BTRSS	STATUS,2
                                    1- 2519     	MGOTO	_00006_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2520     	.line	614, "main.c"; 	ledStep = 0;
                                    1- 2521     	BANKSEL	_ledStep
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 02rr                      1- 2522     	CLRR	_ledStep
     0057                           1- 2523     _00006_DS_:
                                    1- 2524     	.line	615, "main.c"; 	chrgFlag = 0;
                                    1- 2525     	BANKSEL	_chrgFlag
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 02rr                      1- 2526     	CLRR	_chrgFlag
                                    1- 2527     	.line	616, "main.c"; 	chrgTime = 0;	//重置充电计数
                                    1- 2528     	BANKSEL	_chrgTime
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 02rr                      1- 2529     	CLRR	_chrgTime
     005B 02rr                      1- 2530     	CLRR	(_chrgTime + 1)
     005C                           1- 2531     _00448_DS_:
                                    1- 2532     	.line	619, "main.c"; 	}
                                    1- 2533     	RETURN	
     005C 0010                      3-   40 m1      ret
                                    1- 2534     ; exit point of _chrgCtr
                                    1- 2536     ;***
                                    1- 2537     ;  pBlock Stats: dbName = C
                                    1- 2538     ;***
                                    1- 2539     ;has an exit
                                    1- 2540     ;1 compiler assigned register :
                                    1- 2541     ;   r0x1047
                                    1- 2542     ;; Starting pCode block
                                    1- 2543     .segment "code"; module=main, function=_keyRead
                                    1- 2545     ;local variable name mapping:
     0000                           1- 2547     _keyRead:
                                    1- 2548     ; 2 exit points
                                    1- 2549     	.line	528, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2550     	BANKSEL	r0x1047
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2551     	MOVAR	r0x1047
                                    1- 2552     	.line	530, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2553     	MOVR	r0x1047,W
     0003 0D03                      1- 2554     	BTRSC	STATUS,2
                                    1- 2555     	MGOTO	_00424_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2556     	.line	532, "main.c"; 	keyCount++;
                                    1- 2557     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2558     	INCR	_keyCount,F
                                    1- 2559     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 2560     	.line	533, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 2561     	MOVIA	0x64
     0008 04rr                      1- 2562     	SUBAR	_keyCount,W
     0009 0803                      1- 2563     	BTRSS	STATUS,0
                                    1- 2564     	MGOTO	_00425_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2565     	.line	535, "main.c"; 	keyCount = 100;
     000B 2164                      1- 2566     	MOVIA	0x64
     000C 00rr                      1- 2567     	MOVAR	_keyCount
                                    1- 2568     	.line	536, "main.c"; 	if(!longPressFlag)
                                    1- 2569     	BANKSEL	_longPressFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2570     	MOVR	_longPressFlag,W
     000F 0903                      1- 2571     	BTRSS	STATUS,2
                                    1- 2572     	MGOTO	_00425_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2573     	.line	538, "main.c"; 	longPressFlag = 1;
     0011 2101                      1- 2574     	MOVIA	0x01
     0012 00rr                      1- 2575     	MOVAR	_longPressFlag
                                    1- 2576     	.line	539, "main.c"; 	return 2;
     0013 2102                      1- 2577     	MOVIA	0x02
                                    1- 2578     	MGOTO	_00426_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2579     ;;unsigned compare: left < lit (0x64=100), size=1
     0015                           1- 2580     _00424_DS_:
                                    1- 2581     	.line	545, "main.c"; 	if(keyCount >= 100)
     0015 2164                      1- 2582     	MOVIA	0x64
                                    1- 2583     	BANKSEL	_keyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1- 2584     	SUBAR	_keyCount,W
     0018 0803                      1- 2585     	BTRSS	STATUS,0
                                    1- 2586     	MGOTO	_00421_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2587     	.line	547, "main.c"; 	keyCount = 0;
     001A 02rr                      1- 2588     	CLRR	_keyCount
                                    1- 2589     	.line	548, "main.c"; 	longPressFlag = 0;
                                    1- 2590     	BANKSEL	_longPressFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 2591     	CLRR	_longPressFlag
                                    1- 2592     	.line	549, "main.c"; 	return	0;
     001D 2100                      1- 2593     	MOVIA	0x00
                                    1- 2594     	MGOTO	_00426_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2595     ;;unsigned compare: left < lit (0x8=8), size=1
     001F                           1- 2596     _00421_DS_:
                                    1- 2597     	.line	551, "main.c"; 	else if(keyCount >= 8)
     001F 2108                      1- 2598     	MOVIA	0x08
                                    1- 2599     	BANKSEL	_keyCount
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 2600     	SUBAR	_keyCount,W
     0022 0803                      1- 2601     	BTRSS	STATUS,0
                                    1- 2602     	MGOTO	_00422_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2603     	.line	553, "main.c"; 	keyCount = 0;
     0024 02rr                      1- 2604     	CLRR	_keyCount
                                    1- 2605     	.line	554, "main.c"; 	return	1;
     0025 2101                      1- 2606     	MOVIA	0x01
                                    1- 2607     	MGOTO	_00426_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 2608     _00422_DS_:
                                    1- 2609     	.line	556, "main.c"; 	keyCount = 0;
                                    1- 2610     	BANKSEL	_keyCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 2611     	CLRR	_keyCount
     0029                           1- 2612     _00425_DS_:
                                    1- 2613     	.line	558, "main.c"; 	return 0;
     0029 2100                      1- 2614     	MOVIA	0x00
     002A                           1- 2615     _00426_DS_:
                                    1- 2616     	.line	559, "main.c"; 	}
                                    1- 2617     	RETURN	
     002A 0010                      3-   40 m1      ret
                                    1- 2618     ; exit point of _keyRead
                                    1- 2620     ;***
                                    1- 2621     ;  pBlock Stats: dbName = C
                                    1- 2622     ;***
                                    1- 2623     ;has an exit
                                    1- 2624     ;functions called:
                                    1- 2625     ;   _LedInput
                                    1- 2626     ;   _pwmStop
                                    1- 2627     ;   _LedInput
                                    1- 2628     ;   _pwmStop
                                    1- 2629     ;; Starting pCode block
                                    1- 2630     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2632     _gotoSleep:
                                    1- 2633     ; 2 exit points
                                    1- 2634     	.line	505, "main.c"; 	PORTB = 0x00;
     0000 02rr                      1- 2635     	CLRR	_PORTB
                                    1- 2636     	.line	506, "main.c"; 	PORTA = 0x00;
                                    1- 2637     	BANKSEL	_PORTA
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 02rr                      1- 2638     	CLRR	_PORTA
                                    1- 2639     	.line	507, "main.c"; 	LedInput();
                                    1- 2640     	MCALL	_LedInput
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2641     	.line	508, "main.c"; 	sleepTime = 0;
                                    1- 2642     	BANKSEL	_sleepTime
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 2643     	CLRR	_sleepTime
     0006 02rr                      1- 2644     	CLRR	(_sleepTime + 1)
                                    1- 2645     	.line	510, "main.c"; 	pwmStop();
                                    1- 2646     	MCALL	_pwmStop
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2647     	.line	511, "main.c"; 	workStep = 0;
                                    1- 2648     	BANKSEL	_workStep
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 2649     	CLRR	_workStep
                                    1- 2650     	.line	512, "main.c"; 	AWUCON = 0x60;
     000A 2160                      1- 2651     	MOVIA	0x60
     000B 00rr                      1- 2652     	MOVAR	_AWUCON
                                    1- 2653     	.line	513, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     000C 210B                      1- 2654     	MOVIA	0x0b
     000D 00rr                      1- 2655     	MOVAR	_INTE
                                    1- 2656     	.line	514, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     000E 2118                      1- 2657     	MOVIA	0x18
     000F 00rr                      1- 2658     	MOVAR	_PCON
                                    1- 2659     	.line	515, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0010 02rr                      1- 2660     	CLRR	_INTF
                                    1- 2661     	.line	516, "main.c"; 	CLRWDT();
     0011 0002                      1- 2662     	clrwdt
                                    1- 2663     	.line	517, "main.c"; 	ENI();
     0012 0004                      1- 2664     	ENI
                                    1- 2665     	.line	518, "main.c"; 	SLEEP();
     0013 0001                      1- 2666     	sleep
                                    1- 2667     	.line	519, "main.c"; 	AWUCON = 0x00;
     0014 02rr                      1- 2668     	CLRR	_AWUCON
                                    1- 2669     	.line	520, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0015 2101                      1- 2670     	MOVIA	0x01
     0016 00rr                      1- 2671     	MOVAR	_INTE
                                    1- 2672     	.line	521, "main.c"; 	INTF = 0;
     0017 02rr                      1- 2673     	CLRR	_INTF
                                    1- 2674     	.line	523, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0018 21B8                      1- 2675     	MOVIA	0xb8
     0019 00rr                      1- 2676     	MOVAR	_PCON
                                    1- 2677     	.line	525, "main.c"; 	}
                                    1- 2678     	RETURN	
     001A 0010                      3-   40 m1      ret
                                    1- 2679     ; exit point of _gotoSleep
                                    1- 2681     ;***
                                    1- 2682     ;  pBlock Stats: dbName = C
                                    1- 2683     ;***
                                    1- 2684     ;has an exit
                                    1- 2685     ;; Starting pCode block
                                    1- 2686     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2688     _pwmStop:
                                    1- 2689     ; 2 exit points
                                    1- 2690     	.line	499, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2691     	CLRA	
     0001 00rr                      1- 2692     	SFUN	_T2CR1
                                    1- 2693     	.line	500, "main.c"; 	}
                                    1- 2694     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2695     ; exit point of _pwmStop
                                    1- 2697     ;***
                                    1- 2698     ;  pBlock Stats: dbName = C
                                    1- 2699     ;***
                                    1- 2700     ;has an exit
                                    1- 2701     ;1 compiler assigned register :
                                    1- 2702     ;   r0x1049
                                    1- 2703     ;; Starting pCode block
                                    1- 2704     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2706     _pwmInit:
                                    1- 2707     ; 2 exit points
                                    1- 2708     	.line	487, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2709     	SFUNR	_T2CR1
                                    1- 2710     	BANKSEL	r0x1049
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2711     	MOVAR	r0x1049
     0003 0Frr                      1- 2712     	BTRSC	r0x1049,7
                                    1- 2713     	.line	488, "main.c"; 	return;
                                    1- 2714     	MGOTO	_00401_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2715     	.line	489, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2716     	CLRR	_TMRH
                                    1- 2717     	.line	490, "main.c"; 	TMR2 = 128;							//频率为110K
     0006 2180                      1- 2718     	MOVIA	0x80
     0007 00rr                      1- 2719     	SFUN	_TMR2
                                    1- 2720     	.line	493, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2721     	CLRA	
     0009 00rr                      1- 2722     	SFUN	_T2CR2
                                    1- 2723     	.line	494, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2724     	MOVIA	0x83
     000B 00rr                      1- 2725     	SFUN	_T2CR1
     000C                           1- 2726     _00401_DS_:
                                    1- 2727     	.line	495, "main.c"; 	}
                                    1- 2728     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2729     ; exit point of _pwmInit
                                    1- 2731     ;***
                                    1- 2732     ;  pBlock Stats: dbName = C
                                    1- 2733     ;***
                                    1- 2734     ;has an exit
                                    1- 2735     ;; Starting pCode block
                                    1- 2736     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2738     _pwm1Stop:
                                    1- 2739     ; 2 exit points
                                    1- 2740     	.line	480, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2741     	CLRA	
     0001 00rr                      1- 2742     	SFUN	_T1CR1
                                    1- 2743     	.line	481, "main.c"; 	}
                                    1- 2744     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2745     ; exit point of _pwm1Stop
                                    1- 2747     ;***
                                    1- 2748     ;  pBlock Stats: dbName = C
                                    1- 2749     ;***
                                    1- 2750     ;has an exit
                                    1- 2751     ;1 compiler assigned register :
                                    1- 2752     ;   r0x104A
                                    1- 2753     ;; Starting pCode block
                                    1- 2754     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2756     _pwm1Init:
                                    1- 2757     ; 2 exit points
                                    1- 2758     	.line	468, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2759     	SFUNR	_T1CR1
                                    1- 2760     	BANKSEL	r0x104A
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2761     	MOVAR	r0x104A
     0003 0Frr                      1- 2762     	BTRSC	r0x104A,7
                                    1- 2763     	.line	469, "main.c"; 	return;
                                    1- 2764     	MGOTO	_00390_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2765     	.line	470, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2766     	CLRR	_TMRH
                                    1- 2767     	.line	471, "main.c"; 	TMR1 = 12;							//频率为110K
     0006 210C                      1- 2768     	MOVIA	0x0c
     0007 00rr                      1- 2769     	SFUN	_TMR1
                                    1- 2770     	.line	474, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2771     	CLRA	
     0009 00rr                      1- 2772     	SFUN	_T1CR2
                                    1- 2773     	.line	475, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2774     	MOVIA	0x83
     000B 00rr                      1- 2775     	SFUN	_T1CR1
     000C                           1- 2776     _00390_DS_:
                                    1- 2777     	.line	476, "main.c"; 	}
                                    1- 2778     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2779     ; exit point of _pwm1Init
                                    1- 2781     ;***
                                    1- 2782     ;  pBlock Stats: dbName = C
                                    1- 2783     ;***
                                    1- 2784     ;has an exit
                                    1- 2785     ;functions called:
                                    1- 2786     ;   _delay
                                    1- 2787     ;   _LedInput
                                    1- 2788     ;   _delay
                                    1- 2789     ;   _LedInput
                                    1- 2790     ;1 compiler assigned register :
                                    1- 2791     ;   r0x104B
                                    1- 2792     ;; Starting pCode block
                                    1- 2793     .segment "code"; module=main, function=_LED8ON
     0000                           1- 2795     _LED8ON:
                                    1- 2796     ; 2 exit points
                                    1- 2797     	.line	458, "main.c"; 	L4OUT;
     0000 001r                      1- 2798     	IOSTR	_IOSTB
                                    1- 2799     	BANKSEL	r0x104B
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2800     	MOVAR	r0x104B
     0003 1Crr                      1- 2801     	BCR	r0x104B,0
     0004 01rr                      1- 2802     	MOVR	r0x104B,W
     0005 000r                      1- 2803     	IOST	_IOSTB
                                    1- 2804     	.line	459, "main.c"; 	L2OUT;
     0006 001r                      1- 2805     	IOSTR	_IOSTB
     0007 00rr                      1- 2806     	MOVAR	r0x104B
     0008 1Drr                      1- 2807     	BCR	r0x104B,3
     0009 01rr                      1- 2808     	MOVR	r0x104B,W
     000A 000r                      1- 2809     	IOST	_IOSTB
                                    1- 2810     	.line	460, "main.c"; 	L4H;
     000B 18rr                      1- 2811     	BSR	_PORTB,0
                                    1- 2812     	.line	461, "main.c"; 	L2L;
     000C 1Drr                      1- 2813     	BCR	_PORTB,3
                                    1- 2814     	.line	462, "main.c"; 	delay(100);
     000D 2164                      1- 2815     	MOVIA	0x64
                                    1- 2816     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2817     	.line	463, "main.c"; 	LedInput();
                                    1- 2818     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2819     	.line	464, "main.c"; 	}
                                    1- 2820     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2821     ; exit point of _LED8ON
                                    1- 2823     ;***
                                    1- 2824     ;  pBlock Stats: dbName = C
                                    1- 2825     ;***
                                    1- 2826     ;has an exit
                                    1- 2827     ;functions called:
                                    1- 2828     ;   _delay
                                    1- 2829     ;   _LedInput
                                    1- 2830     ;   _delay
                                    1- 2831     ;   _LedInput
                                    1- 2832     ;1 compiler assigned register :
                                    1- 2833     ;   r0x104C
                                    1- 2834     ;; Starting pCode block
                                    1- 2835     .segment "code"; module=main, function=_LED7ON
     0000                           1- 2837     _LED7ON:
                                    1- 2838     ; 2 exit points
                                    1- 2839     	.line	448, "main.c"; 	L4OUT;
     0000 001r                      1- 2840     	IOSTR	_IOSTB
                                    1- 2841     	BANKSEL	r0x104C
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2842     	MOVAR	r0x104C
     0003 1Crr                      1- 2843     	BCR	r0x104C,0
     0004 01rr                      1- 2844     	MOVR	r0x104C,W
     0005 000r                      1- 2845     	IOST	_IOSTB
                                    1- 2846     	.line	449, "main.c"; 	L2OUT;
     0006 001r                      1- 2847     	IOSTR	_IOSTB
     0007 00rr                      1- 2848     	MOVAR	r0x104C
     0008 1Drr                      1- 2849     	BCR	r0x104C,3
     0009 01rr                      1- 2850     	MOVR	r0x104C,W
     000A 000r                      1- 2851     	IOST	_IOSTB
                                    1- 2852     	.line	450, "main.c"; 	L2H;
     000B 19rr                      1- 2853     	BSR	_PORTB,3
                                    1- 2854     	.line	451, "main.c"; 	L4L;
     000C 1Crr                      1- 2855     	BCR	_PORTB,0
                                    1- 2856     	.line	452, "main.c"; 	delay(100);
     000D 2164                      1- 2857     	MOVIA	0x64
                                    1- 2858     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2859     	.line	453, "main.c"; 	LedInput();
                                    1- 2860     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2861     	.line	454, "main.c"; 	}
                                    1- 2862     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2863     ; exit point of _LED7ON
                                    1- 2865     ;***
                                    1- 2866     ;  pBlock Stats: dbName = C
                                    1- 2867     ;***
                                    1- 2868     ;has an exit
                                    1- 2869     ;functions called:
                                    1- 2870     ;   _delay
                                    1- 2871     ;   _LedInput
                                    1- 2872     ;   _delay
                                    1- 2873     ;   _LedInput
                                    1- 2874     ;1 compiler assigned register :
                                    1- 2875     ;   r0x104D
                                    1- 2876     ;; Starting pCode block
                                    1- 2877     .segment "code"; module=main, function=_LED6ON
     0000                           1- 2879     _LED6ON:
                                    1- 2880     ; 2 exit points
                                    1- 2881     	.line	438, "main.c"; 	L4OUT;
     0000 001r                      1- 2882     	IOSTR	_IOSTB
                                    1- 2883     	BANKSEL	r0x104D
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2884     	MOVAR	r0x104D
     0003 1Crr                      1- 2885     	BCR	r0x104D,0
     0004 01rr                      1- 2886     	MOVR	r0x104D,W
     0005 000r                      1- 2887     	IOST	_IOSTB
                                    1- 2888     	.line	439, "main.c"; 	L1OUT;
     0006 001r                      1- 2889     	IOSTR	_IOSTA
     0007 00rr                      1- 2890     	MOVAR	r0x104D
     0008 1Frr                      1- 2891     	BCR	r0x104D,7
     0009 01rr                      1- 2892     	MOVR	r0x104D,W
     000A 000r                      1- 2893     	IOST	_IOSTA
                                    1- 2894     	.line	440, "main.c"; 	L1H;
                                    1- 2895     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 1Brr                      1- 2896     	BSR	_PORTA,7
                                    1- 2897     	.line	441, "main.c"; 	L4L;
     000D 1Crr                      1- 2898     	BCR	_PORTB,0
                                    1- 2899     	.line	442, "main.c"; 	delay(100);
     000E 2164                      1- 2900     	MOVIA	0x64
                                    1- 2901     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2902     	.line	443, "main.c"; 	LedInput();
                                    1- 2903     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2904     	.line	444, "main.c"; 	}
                                    1- 2905     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2906     ; exit point of _LED6ON
                                    1- 2908     ;***
                                    1- 2909     ;  pBlock Stats: dbName = C
                                    1- 2910     ;***
                                    1- 2911     ;has an exit
                                    1- 2912     ;functions called:
                                    1- 2913     ;   _delay
                                    1- 2914     ;   _LedInput
                                    1- 2915     ;   _delay
                                    1- 2916     ;   _LedInput
                                    1- 2917     ;1 compiler assigned register :
                                    1- 2918     ;   r0x104E
                                    1- 2919     ;; Starting pCode block
                                    1- 2920     .segment "code"; module=main, function=_LED5ON
     0000                           1- 2922     _LED5ON:
                                    1- 2923     ; 2 exit points
                                    1- 2924     	.line	427, "main.c"; 	L4OUT;
     0000 001r                      1- 2925     	IOSTR	_IOSTB
                                    1- 2926     	BANKSEL	r0x104E
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2927     	MOVAR	r0x104E
     0003 1Crr                      1- 2928     	BCR	r0x104E,0
     0004 01rr                      1- 2929     	MOVR	r0x104E,W
     0005 000r                      1- 2930     	IOST	_IOSTB
                                    1- 2931     	.line	428, "main.c"; 	L1OUT;
     0006 001r                      1- 2932     	IOSTR	_IOSTA
     0007 00rr                      1- 2933     	MOVAR	r0x104E
     0008 1Frr                      1- 2934     	BCR	r0x104E,7
     0009 01rr                      1- 2935     	MOVR	r0x104E,W
     000A 000r                      1- 2936     	IOST	_IOSTA
                                    1- 2937     	.line	429, "main.c"; 	L4H;
     000B 18rr                      1- 2938     	BSR	_PORTB,0
                                    1- 2939     	.line	430, "main.c"; 	L1L;
                                    1- 2940     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Frr                      1- 2941     	BCR	_PORTA,7
                                    1- 2942     	.line	431, "main.c"; 	delay(100);
     000E 2164                      1- 2943     	MOVIA	0x64
                                    1- 2944     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2945     	.line	432, "main.c"; 	LedInput();
                                    1- 2946     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2947     	.line	433, "main.c"; 	}
                                    1- 2948     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2949     ; exit point of _LED5ON
                                    1- 2951     ;***
                                    1- 2952     ;  pBlock Stats: dbName = C
                                    1- 2953     ;***
                                    1- 2954     ;has an exit
                                    1- 2955     ;functions called:
                                    1- 2956     ;   _delay
                                    1- 2957     ;   _LedInput
                                    1- 2958     ;   _delay
                                    1- 2959     ;   _LedInput
                                    1- 2960     ;1 compiler assigned register :
                                    1- 2961     ;   r0x104F
                                    1- 2962     ;; Starting pCode block
                                    1- 2963     .segment "code"; module=main, function=_LED4ON
     0000                           1- 2965     _LED4ON:
                                    1- 2966     ; 2 exit points
                                    1- 2967     	.line	417, "main.c"; 	L3OUT;
     0000 001r                      1- 2968     	IOSTR	_IOSTB
                                    1- 2969     	BANKSEL	r0x104F
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2970     	MOVAR	r0x104F
     0003 1Crr                      1- 2971     	BCR	r0x104F,1
     0004 01rr                      1- 2972     	MOVR	r0x104F,W
     0005 000r                      1- 2973     	IOST	_IOSTB
                                    1- 2974     	.line	418, "main.c"; 	L2OUT;
     0006 001r                      1- 2975     	IOSTR	_IOSTB
     0007 00rr                      1- 2976     	MOVAR	r0x104F
     0008 1Drr                      1- 2977     	BCR	r0x104F,3
     0009 01rr                      1- 2978     	MOVR	r0x104F,W
     000A 000r                      1- 2979     	IOST	_IOSTB
                                    1- 2980     	.line	419, "main.c"; 	L3H;
     000B 18rr                      1- 2981     	BSR	_PORTB,1
                                    1- 2982     	.line	420, "main.c"; 	L2L;
     000C 1Drr                      1- 2983     	BCR	_PORTB,3
                                    1- 2984     	.line	421, "main.c"; 	delay(100);
     000D 2164                      1- 2985     	MOVIA	0x64
                                    1- 2986     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2987     	.line	422, "main.c"; 	LedInput();
                                    1- 2988     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2989     	.line	423, "main.c"; 	}
                                    1- 2990     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2991     ; exit point of _LED4ON
                                    1- 2993     ;***
                                    1- 2994     ;  pBlock Stats: dbName = C
                                    1- 2995     ;***
                                    1- 2996     ;has an exit
                                    1- 2997     ;functions called:
                                    1- 2998     ;   _delay
                                    1- 2999     ;   _LedInput
                                    1- 3000     ;   _delay
                                    1- 3001     ;   _LedInput
                                    1- 3002     ;1 compiler assigned register :
                                    1- 3003     ;   r0x1050
                                    1- 3004     ;; Starting pCode block
                                    1- 3005     .segment "code"; module=main, function=_LED3ON
     0000                           1- 3007     _LED3ON:
                                    1- 3008     ; 2 exit points
                                    1- 3009     	.line	407, "main.c"; 	L3OUT;
     0000 001r                      1- 3010     	IOSTR	_IOSTB
                                    1- 3011     	BANKSEL	r0x1050
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3012     	MOVAR	r0x1050
     0003 1Crr                      1- 3013     	BCR	r0x1050,1
     0004 01rr                      1- 3014     	MOVR	r0x1050,W
     0005 000r                      1- 3015     	IOST	_IOSTB
                                    1- 3016     	.line	408, "main.c"; 	L2OUT;
     0006 001r                      1- 3017     	IOSTR	_IOSTB
     0007 00rr                      1- 3018     	MOVAR	r0x1050
     0008 1Drr                      1- 3019     	BCR	r0x1050,3
     0009 01rr                      1- 3020     	MOVR	r0x1050,W
     000A 000r                      1- 3021     	IOST	_IOSTB
                                    1- 3022     	.line	409, "main.c"; 	L2H;
     000B 19rr                      1- 3023     	BSR	_PORTB,3
                                    1- 3024     	.line	410, "main.c"; 	L3L;
     000C 1Crr                      1- 3025     	BCR	_PORTB,1
                                    1- 3026     	.line	411, "main.c"; 	delay(100);
     000D 2164                      1- 3027     	MOVIA	0x64
                                    1- 3028     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3029     	.line	412, "main.c"; 	LedInput();
                                    1- 3030     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3031     	.line	413, "main.c"; 	}
                                    1- 3032     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3033     ; exit point of _LED3ON
                                    1- 3035     ;***
                                    1- 3036     ;  pBlock Stats: dbName = C
                                    1- 3037     ;***
                                    1- 3038     ;has an exit
                                    1- 3039     ;functions called:
                                    1- 3040     ;   _delay
                                    1- 3041     ;   _LedInput
                                    1- 3042     ;   _delay
                                    1- 3043     ;   _LedInput
                                    1- 3044     ;1 compiler assigned register :
                                    1- 3045     ;   r0x1051
                                    1- 3046     ;; Starting pCode block
                                    1- 3047     .segment "code"; module=main, function=_LED2ON
     0000                           1- 3049     _LED2ON:
                                    1- 3050     ; 2 exit points
                                    1- 3051     	.line	397, "main.c"; 	L1OUT;
     0000 001r                      1- 3052     	IOSTR	_IOSTA
                                    1- 3053     	BANKSEL	r0x1051
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3054     	MOVAR	r0x1051
     0003 1Frr                      1- 3055     	BCR	r0x1051,7
     0004 01rr                      1- 3056     	MOVR	r0x1051,W
     0005 000r                      1- 3057     	IOST	_IOSTA
                                    1- 3058     	.line	398, "main.c"; 	L3OUT;
     0006 001r                      1- 3059     	IOSTR	_IOSTB
     0007 00rr                      1- 3060     	MOVAR	r0x1051
     0008 1Crr                      1- 3061     	BCR	r0x1051,1
     0009 01rr                      1- 3062     	MOVR	r0x1051,W
     000A 000r                      1- 3063     	IOST	_IOSTB
                                    1- 3064     	.line	399, "main.c"; 	L3H;
     000B 18rr                      1- 3065     	BSR	_PORTB,1
                                    1- 3066     	.line	400, "main.c"; 	L1L;
                                    1- 3067     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Frr                      1- 3068     	BCR	_PORTA,7
                                    1- 3069     	.line	401, "main.c"; 	delay(100);
     000E 2164                      1- 3070     	MOVIA	0x64
                                    1- 3071     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3072     	.line	402, "main.c"; 	LedInput();
                                    1- 3073     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3074     	.line	403, "main.c"; 	}
                                    1- 3075     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3076     ; exit point of _LED2ON
                                    1- 3078     ;***
                                    1- 3079     ;  pBlock Stats: dbName = C
                                    1- 3080     ;***
                                    1- 3081     ;has an exit
                                    1- 3082     ;functions called:
                                    1- 3083     ;   _delay
                                    1- 3084     ;   _LedInput
                                    1- 3085     ;   _delay
                                    1- 3086     ;   _LedInput
                                    1- 3087     ;1 compiler assigned register :
                                    1- 3088     ;   r0x1052
                                    1- 3089     ;; Starting pCode block
                                    1- 3090     .segment "code"; module=main, function=_LED1ON
     0000                           1- 3092     _LED1ON:
                                    1- 3093     ; 2 exit points
                                    1- 3094     	.line	387, "main.c"; 	L3OUT;
     0000 001r                      1- 3095     	IOSTR	_IOSTB
                                    1- 3096     	BANKSEL	r0x1052
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3097     	MOVAR	r0x1052
     0003 1Crr                      1- 3098     	BCR	r0x1052,1
     0004 01rr                      1- 3099     	MOVR	r0x1052,W
     0005 000r                      1- 3100     	IOST	_IOSTB
                                    1- 3101     	.line	388, "main.c"; 	L1OUT;
     0006 001r                      1- 3102     	IOSTR	_IOSTA
     0007 00rr                      1- 3103     	MOVAR	r0x1052
     0008 1Frr                      1- 3104     	BCR	r0x1052,7
     0009 01rr                      1- 3105     	MOVR	r0x1052,W
     000A 000r                      1- 3106     	IOST	_IOSTA
                                    1- 3107     	.line	389, "main.c"; 	L1H;
                                    1- 3108     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 1Brr                      1- 3109     	BSR	_PORTA,7
                                    1- 3110     	.line	390, "main.c"; 	L3L;
     000D 1Crr                      1- 3111     	BCR	_PORTB,1
                                    1- 3112     	.line	391, "main.c"; 	delay(100);
     000E 2164                      1- 3113     	MOVIA	0x64
                                    1- 3114     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3115     	.line	392, "main.c"; 	LedInput();
                                    1- 3116     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3117     	.line	393, "main.c"; 	}
                                    1- 3118     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3119     ; exit point of _LED1ON
                                    1- 3121     ;***
                                    1- 3122     ;  pBlock Stats: dbName = C
                                    1- 3123     ;***
                                    1- 3124     ;has an exit
                                    1- 3125     ;1 compiler assigned register :
                                    1- 3126     ;   r0x1048
                                    1- 3127     ;; Starting pCode block
                                    1- 3128     .segment "code"; module=main, function=_LedInput
     0000                           1- 3130     _LedInput:
                                    1- 3131     ; 2 exit points
                                    1- 3132     	.line	379, "main.c"; 	IOSTA |= 0x80;
     0000 001r                      1- 3133     	IOSTR	_IOSTA
                                    1- 3134     	BANKSEL	r0x1048
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3135     	MOVAR	r0x1048
     0003 1Brr                      1- 3136     	BSR	r0x1048,7
     0004 01rr                      1- 3137     	MOVR	r0x1048,W
     0005 000r                      1- 3138     	IOST	_IOSTA
                                    1- 3139     	.line	380, "main.c"; 	IOSTB |= 0x0B;
     0006 001r                      1- 3140     	IOSTR	_IOSTB
     0007 00rr                      1- 3141     	MOVAR	r0x1048
     0008 210B                      1- 3142     	MOVIA	0x0b
     0009 11rr                      1- 3143     	IORAR	r0x1048,F
     000A 01rr                      1- 3144     	MOVR	r0x1048,W
     000B 000r                      1- 3145     	IOST	_IOSTB
                                    1- 3146     	.line	381, "main.c"; 	PORTA &= 0x7F;
                                    1- 3147     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Frr                      1- 3148     	BCR	_PORTA,7
                                    1- 3149     	.line	382, "main.c"; 	PORTB &= 0xF4;
     000E 21F4                      1- 3150     	MOVIA	0xf4
     000F 10rr                      1- 3151     	ANDAR	_PORTB,F
                                    1- 3152     	.line	383, "main.c"; 	}
                                    1- 3153     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3154     ; exit point of _LedInput
                                    1- 3156     ;***
                                    1- 3157     ;  pBlock Stats: dbName = C
                                    1- 3158     ;***
                                    1- 3159     ;has an exit
                                    1- 3160     ;functions called:
                                    1- 3161     ;   _pwmStop
                                    1- 3162     ;   _LedInput
                                    1- 3163     ;   _LedInput
                                    1- 3164     ;   _LED8ON
                                    1- 3165     ;   _LED7ON
                                    1- 3166     ;   _LED6ON
                                    1- 3167     ;   _LED5ON
                                    1- 3168     ;   _LED4ON
                                    1- 3169     ;   _LED3ON
                                    1- 3170     ;   _LED2ON
                                    1- 3171     ;   _LED1ON
                                    1- 3172     ;   _pwmStop
                                    1- 3173     ;   _LedInput
                                    1- 3174     ;   _LedInput
                                    1- 3175     ;   _LED8ON
                                    1- 3176     ;   _LED7ON
                                    1- 3177     ;   _LED6ON
                                    1- 3178     ;   _LED5ON
                                    1- 3179     ;   _LED4ON
                                    1- 3180     ;   _LED3ON
                                    1- 3181     ;   _LED2ON
                                    1- 3182     ;   _LED1ON
                                    1- 3183     ;; Starting pCode block
                                    1- 3184     .segment "code"; module=main, function=_ledShow
     0000                           1- 3186     _ledShow:
                                    1- 3187     ; 2 exit points
                                    1- 3188     ;;unsigned compare: left < lit (0x5=5), size=1
                                    1- 3189     	.line	319, "main.c"; 	if(overCount >= 5 && workStep > 0)
     0000 2105                      1- 3190     	MOVIA	0x05
                                    1- 3191     	BANKSEL	_overCount
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 3192     	SUBAR	_overCount,W
     0003 0803                      1- 3193     	BTRSS	STATUS,0
                                    1- 3194     	MGOTO	_00268_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3195     	BANKSEL	_workStep
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 01rr                      1- 3196     	MOVR	_workStep,W
     0007 0D03                      1- 3197     	BTRSC	STATUS,2
                                    1- 3198     	MGOTO	_00268_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3199     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 3200     	.line	321, "main.c"; 	if(count1s < 50)
     0009 2132                      1- 3201     	MOVIA	0x32
                                    1- 3202     	BANKSEL	_count1s
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 04rr                      1- 3203     	SUBAR	_count1s,W
     000C 0C03                      1- 3204     	BTRSC	STATUS,0
                                    1- 3205     	MGOTO	_00265_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3206     	.line	322, "main.c"; 	ledStep = workStep;
                                    1- 3207     	BANKSEL	_workStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 3208     	MOVR	_workStep,W
                                    1- 3209     	BANKSEL	_ledStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 3210     	MOVAR	_ledStep
                                    1- 3211     	MGOTO	_00268_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
     0013                           1- 3212     _00265_DS_:
                                    1- 3213     	.line	324, "main.c"; 	ledStep = 0;
                                    1- 3214     	BANKSEL	_ledStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 02rr                      1- 3215     	CLRR	_ledStep
     0015                           1- 3216     _00268_DS_:
                                    1- 3217     	.line	326, "main.c"; 	if(ledLightTime > 0 && pwStep > 0)
                                    1- 3218     	BANKSEL	_ledLightTime
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 01rr                      1- 3219     	MOVR	_ledLightTime,W
     0017 0D03                      1- 3220     	BTRSC	STATUS,2
                                    1- 3221     	MGOTO	_00276_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3222     	BANKSEL	_pwStep
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 3223     	MOVR	_pwStep,W
     001B 0D03                      1- 3224     	BTRSC	STATUS,2
                                    1- 3225     	MGOTO	_00276_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3226     	.line	328, "main.c"; 	if(ledLightTime == 2)
                                    1- 3227     	BANKSEL	_ledLightTime
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 3228     	MOVR	_ledLightTime,W
     001F 2402                      1- 3229     	XORIA	0x02
     0020 0903                      1- 3230     	BTRSS	STATUS,2
                                    1- 3231     	MGOTO	_00276_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3232     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3233     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 3234     	.line	330, "main.c"; 	if(pwStep > 8 )
     0022 2109                      1- 3235     	MOVIA	0x09
                                    1- 3236     	BANKSEL	_pwStep
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 04rr                      1- 3237     	SUBAR	_pwStep,W
     0025 0803                      1- 3238     	BTRSS	STATUS,0
                                    1- 3239     	MGOTO	_00271_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3240     	.line	331, "main.c"; 	ledStep = 8;
     0027 2108                      1- 3241     	MOVIA	0x08
                                    1- 3242     	BANKSEL	_ledStep
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 00rr                      1- 3243     	MOVAR	_ledStep
                                    1- 3244     	MGOTO	_00276_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
     002B                           1- 3245     _00271_DS_:
                                    1- 3246     	.line	333, "main.c"; 	ledStep = pwStep;
                                    1- 3247     	BANKSEL	_pwStep
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1- 3248     	MOVR	_pwStep,W
                                    1- 3249     	BANKSEL	_ledStep
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 00rr                      1- 3250     	MOVAR	_ledStep
     002F                           1- 3251     _00276_DS_:
                                    1- 3252     	.line	336, "main.c"; 	if(shanshuoTime > 0 && workStep > 0 && pwStep == 0)
                                    1- 3253     	BANKSEL	_shanshuoTime
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 3254     	MOVR	_shanshuoTime,W
     0031 0D03                      1- 3255     	BTRSC	STATUS,2
                                    1- 3256     	MGOTO	_00282_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3257     	BANKSEL	_workStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 3258     	MOVR	_workStep,W
     0035 0D03                      1- 3259     	BTRSC	STATUS,2
                                    1- 3260     	MGOTO	_00282_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3261     	BANKSEL	_pwStep
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 01rr                      1- 3262     	MOVR	_pwStep,W
     0039 0903                      1- 3263     	BTRSS	STATUS,2
                                    1- 3264     	MGOTO	_00282_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3265     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 3266     	.line	338, "main.c"; 	if(count1s < 50)
     003B 2132                      1- 3267     	MOVIA	0x32
                                    1- 3268     	BANKSEL	_count1s
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 04rr                      1- 3269     	SUBAR	_count1s,W
     003E 0C03                      1- 3270     	BTRSC	STATUS,0
                                    1- 3271     	MGOTO	_00279_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3272     	.line	339, "main.c"; 	ledStep = workStep;
                                    1- 3273     	BANKSEL	_workStep
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 01rr                      1- 3274     	MOVR	_workStep,W
                                    1- 3275     	BANKSEL	_ledStep
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1- 3276     	MOVAR	_ledStep
                                    1- 3277     	MGOTO	_00282_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
     0045                           1- 3278     _00279_DS_:
                                    1- 3279     	.line	341, "main.c"; 	ledStep = 0;
                                    1- 3280     	BANKSEL	_ledStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 02rr                      1- 3281     	CLRR	_ledStep
     0047                           1- 3282     _00282_DS_:
                                    1- 3283     	.line	343, "main.c"; 	if(shanshuoTime == 0 && pwStep == 0)
                                    1- 3284     	BANKSEL	_shanshuoTime
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 01rr                      1- 3285     	MOVR	_shanshuoTime,W
     0049 0903                      1- 3286     	BTRSS	STATUS,2
                                    1- 3287     	MGOTO	_00286_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3288     	BANKSEL	_pwStep
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 01rr                      1- 3289     	MOVR	_pwStep,W
     004D 0903                      1- 3290     	BTRSS	STATUS,2
                                    1- 3291     	MGOTO	_00286_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3292     	.line	345, "main.c"; 	workStep = 0;
                                    1- 3293     	BANKSEL	_workStep
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 02rr                      1- 3294     	CLRR	_workStep
                                    1- 3295     	.line	346, "main.c"; 	ledStep = 0;
                                    1- 3296     	BANKSEL	_ledStep
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 02rr                      1- 3297     	CLRR	_ledStep
                                    1- 3298     	.line	347, "main.c"; 	pwmStop();
                                    1- 3299     	MCALL	_pwmStop
     0053 2rrr                      3-   66 m1      LCALL rom_address
     0054                           1- 3300     _00286_DS_:
                                    1- 3301     	.line	349, "main.c"; 	LedInput();
                                    1- 3302     	MCALL	_LedInput
     0054 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3303     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3304     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 3305     	.line	350, "main.c"; 	switch(ledStep)
     0055 2109                      1- 3306     	MOVIA	0x09
                                    1- 3307     	BANKSEL	_ledStep
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 04rr                      1- 3308     	SUBAR	_ledStep,W
     0058 0C03                      1- 3309     	BTRSC	STATUS,0
                                    1- 3310     	MGOTO	_00298_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
     005A 21rr                      1- 3311     	MOVIA	((_00347_DS_ >> 8) & 0xff)
     005B 008A                      1- 3312     	MOVAR	PCHBUF
     005C 01rr                      1- 3313     	MOVR	_ledStep,W
     005D 25rr                      1- 3314     	ADDIA	_00347_DS_
     005E 0C03                      1- 3315     	BTRSC	STATUS,0
     005F 058A                      1- 3316     	INCR	PCHBUF,F
     0060 0082                      1- 3317     	MOVAR	PCL
     0061                           1- 3318     _00347_DS_:
                                    1- 3319     	MGOTO	_00288_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3320     	MGOTO	_00296_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3321     	MGOTO	_00295_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3322     	MGOTO	_00294_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3323     	MGOTO	_00293_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3324     	MGOTO	_00292_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3325     	MGOTO	_00291_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3326     	MGOTO	_00290_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3327     	MGOTO	_00289_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
     006A                           1- 3328     _00288_DS_:
                                    1- 3329     	.line	353, "main.c"; 	LedInput();
                                    1- 3330     	MCALL	_LedInput
     006A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3331     	.line	354, "main.c"; 	break;
                                    1- 3332     	MGOTO	_00298_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
     006C                           1- 3333     _00289_DS_:
                                    1- 3334     	.line	356, "main.c"; 	LED8ON();
                                    1- 3335     	MCALL	_LED8ON
     006C 2rrr                      3-   66 m1      LCALL rom_address
     006D                           1- 3336     _00290_DS_:
                                    1- 3337     	.line	358, "main.c"; 	LED7ON();
                                    1- 3338     	MCALL	_LED7ON
     006D 2rrr                      3-   66 m1      LCALL rom_address
     006E                           1- 3339     _00291_DS_:
                                    1- 3340     	.line	360, "main.c"; 	LED6ON();
                                    1- 3341     	MCALL	_LED6ON
     006E 2rrr                      3-   66 m1      LCALL rom_address
     006F                           1- 3342     _00292_DS_:
                                    1- 3343     	.line	362, "main.c"; 	LED5ON();
                                    1- 3344     	MCALL	_LED5ON
     006F 2rrr                      3-   66 m1      LCALL rom_address
     0070                           1- 3345     _00293_DS_:
                                    1- 3346     	.line	364, "main.c"; 	LED4ON();
                                    1- 3347     	MCALL	_LED4ON
     0070 2rrr                      3-   66 m1      LCALL rom_address
     0071                           1- 3348     _00294_DS_:
                                    1- 3349     	.line	366, "main.c"; 	LED3ON();
                                    1- 3350     	MCALL	_LED3ON
     0071 2rrr                      3-   66 m1      LCALL rom_address
     0072                           1- 3351     _00295_DS_:
                                    1- 3352     	.line	368, "main.c"; 	LED2ON();
                                    1- 3353     	MCALL	_LED2ON
     0072 2rrr                      3-   66 m1      LCALL rom_address
     0073                           1- 3354     _00296_DS_:
                                    1- 3355     	.line	370, "main.c"; 	LED1ON();
                                    1- 3356     	MCALL	_LED1ON
     0073 2rrr                      3-   66 m1      LCALL rom_address
     0074                           1- 3357     _00298_DS_:
                                    1- 3358     	.line	373, "main.c"; 	}
                                    1- 3359     	RETURN	
     0074 0010                      3-   40 m1      ret
                                    1- 3360     ; exit point of _ledShow
                                    1- 3362     ;***
                                    1- 3363     ;  pBlock Stats: dbName = C
                                    1- 3364     ;***
                                    1- 3365     ;has an exit
                                    1- 3366     ;functions called:
                                    1- 3367     ;   _LedInput
                                    1- 3368     ;   _LedInput
                                    1- 3369     ;; Starting pCode block
                                    1- 3370     .segment "code"; module=main, function=_initSys
     0000                           1- 3372     _initSys:
                                    1- 3373     ; 2 exit points
                                    1- 3374     	.line	287, "main.c"; 	DISI();
     0000 0013                      1- 3375     	DISI
                                    1- 3376     	.line	288, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input ;
     0001 2178                      1- 3377     	MOVIA	0x78
     0002 000r                      1- 3378     	IOST	_IOSTA
                                    1- 3379     	.line	289, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 3380     	CLRA	
     0004 000r                      1- 3381     	IOST	_IOSTB
                                    1- 3382     	.line	290, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 3383     	CLRR	_PORTB
                                    1- 3384     	.line	291, "main.c"; 	PORTA = 0x00;
                                    1- 3385     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 3386     	CLRR	_PORTA
                                    1- 3387     	.line	292, "main.c"; 	LedInput();
                                    1- 3388     	MCALL	_LedInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3389     	.line	293, "main.c"; 	APHCON = 0xBF;
     0009 21BF                      1- 3390     	MOVIA	0xbf
     000A 000r                      1- 3391     	IOST	_APHCON
                                    1- 3392     	.line	294, "main.c"; 	BPHCON = 0xFF;
     000B 21FF                      1- 3393     	MOVIA	0xff
     000C 00rr                      1- 3394     	MOVAR	_BPHCON
                                    1- 3395     	.line	295, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 3396     	MOVAR	_ABPLCON
                                    1- 3397     	.line	297, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1- 3398     	MOVIA	0x01
     000F 00rr                      1- 3399     	MOVAR	_INTE
                                    1- 3400     	.line	299, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 3401     	CLRA	
     0011 000r                      1- 3402     	IOST	_PCON1
                                    1- 3403     	.line	301, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 3404     	MOVIA	0x37
     0013 00rr                      1- 3405     	MOVAR	_TMR0
                                    1- 3406     	.line	302, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0014 0200                      1- 3407     	CLRA	
     0015 0003                      1- 3408     	T0MD	
                                    1- 3409     	.line	304, "main.c"; 	PCON1 = C_TMR0_En;
     0016 2101                      1- 3410     	MOVIA	0x01
     0017 000r                      1- 3411     	IOST	_PCON1
                                    1- 3412     	.line	307, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0018 2198                      1- 3413     	MOVIA	0x98
     0019 00rr                      1- 3414     	MOVAR	_PCON
                                    1- 3415     	.line	310, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001A 2101                      1- 3416     	MOVIA	0x01
     001B 000r                      1- 3417     	IOST	_PCON1
                                    1- 3418     	.line	311, "main.c"; 	ENI();
     001C 0004                      1- 3419     	ENI
                                    1- 3420     	.line	312, "main.c"; 	}
                                    1- 3421     	RETURN	
     001D 0010                      3-   40 m1      ret
                                    1- 3422     ; exit point of _initSys
                                    1- 3424     ;***
                                    1- 3425     ;  pBlock Stats: dbName = C
                                    1- 3426     ;***
                                    1- 3427     ;has an exit
                                    1- 3428     ;functions called:
                                    1- 3429     ;   _pwmStop
                                    1- 3430     ;   _pwmStop
                                    1- 3431     ;; Starting pCode block
                                    1- 3432     .segment "code"; module=main, function=_powerOff
     0000                           1- 3434     _powerOff:
                                    1- 3435     ; 2 exit points
                                    1- 3436     	.line	278, "main.c"; 	workStep = 0;
                                    1- 3437     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 3438     	CLRR	_workStep
                                    1- 3439     	.line	279, "main.c"; 	pwmStop();
                                    1- 3440     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3441     	.line	280, "main.c"; 	ledStep = 0;
                                    1- 3442     	BANKSEL	_ledStep
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 3443     	CLRR	_ledStep
                                    1- 3444     	.line	281, "main.c"; 	}
                                    1- 3445     	RETURN	
     0005 0010                      3-   40 m1      ret
                                    1- 3446     ; exit point of _powerOff
                                    1- 3448     ;***
                                    1- 3449     ;  pBlock Stats: dbName = C
                                    1- 3450     ;***
                                    1- 3451     ;has an exit
                                    1- 3452     ;functions called:
                                    1- 3453     ;   _keyRead
                                    1- 3454     ;   _pwmInit
                                    1- 3455     ;   _powerOff
                                    1- 3456     ;   _pwmInit
                                    1- 3457     ;   _keyRead
                                    1- 3458     ;   _pwmInit
                                    1- 3459     ;   _powerOff
                                    1- 3460     ;   _pwmInit
                                    1- 3461     ;1 compiler assigned register :
                                    1- 3462     ;   r0x1053
                                    1- 3463     ;; Starting pCode block
                                    1- 3464     .segment "code"; module=main, function=_keyCtr
                                    1- 3466     ;local variable name mapping:
     0000                           1- 3468     _keyCtr:
                                    1- 3469     ; 2 exit points
                                    1- 3470     	.line	212, "main.c"; 	char kclick = keyRead(0x40 & (~PORTA));
                                    1- 3471     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 3472     	COMR	_PORTA,W
                                    1- 3473     	BANKSEL	r0x1053
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 3474     	MOVAR	r0x1053
     0004 2140                      1- 3475     	MOVIA	0x40
     0005 10rr                      1- 3476     	ANDAR	r0x1053,F
     0006 01rr                      1- 3477     	MOVR	r0x1053,W
                                    1- 3478     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3479     	BANKSEL	r0x1053
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 3480     	MOVAR	r0x1053
                                    1- 3481     	.line	213, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 3482     	XORIA	0x01
     000B 0903                      1- 3483     	BTRSS	STATUS,2
                                    1- 3484     	MGOTO	_00249_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3485     	.line	215, "main.c"; 	count500ms = 0;
                                    1- 3486     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 3487     	CLRR	_count500ms
                                    1- 3488     	.line	216, "main.c"; 	ledLightTime = 0;
                                    1- 3489     	BANKSEL	_ledLightTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 3490     	CLRR	_ledLightTime
                                    1- 3491     	.line	217, "main.c"; 	if(workStep == 0)
                                    1- 3492     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 3493     	MOVR	_workStep,W
     0013 0903                      1- 3494     	BTRSS	STATUS,2
                                    1- 3495     	MGOTO	_00213_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3496     	.line	219, "main.c"; 	count1s = 0;
                                    1- 3497     	BANKSEL	_count1s
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 3498     	CLRR	_count1s
                                    1- 3499     	.line	220, "main.c"; 	ledLightTime = 2;
     0017 2102                      1- 3500     	MOVIA	0x02
                                    1- 3501     	BANKSEL	_ledLightTime
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 00rr                      1- 3502     	MOVAR	_ledLightTime
                                    1- 3503     	.line	221, "main.c"; 	return;
                                    1- 3504     	MGOTO	_00251_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
     001B                           1- 3505     _00213_DS_:
                                    1- 3506     	.line	223, "main.c"; 	ledTime = 0;
                                    1- 3507     	BANKSEL	_ledTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 3508     	CLRR	_ledTime
                                    1- 3509     	.line	224, "main.c"; 	if(++workStep > 8)
                                    1- 3510     	BANKSEL	_workStep
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 05rr                      1- 3511     	INCR	_workStep,F
                                    1- 3512     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3513     ;;unsigned compare: left >= lit (0x9=9), size=1
     001F 2109                      1- 3514     	MOVIA	0x09
     0020 04rr                      1- 3515     	SUBAR	_workStep,W
     0021 0803                      1- 3516     	BTRSS	STATUS,0
                                    1- 3517     	MGOTO	_00215_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3518     	.line	225, "main.c"; 	workStep = 1;
     0023 2101                      1- 3519     	MOVIA	0x01
     0024 00rr                      1- 3520     	MOVAR	_workStep
     0025                           1- 3521     _00215_DS_:
                                    1- 3522     	.line	226, "main.c"; 	shanshuoTime = 6;
     0025 2106                      1- 3523     	MOVIA	0x06
                                    1- 3524     	BANKSEL	_shanshuoTime
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 00rr                      1- 3525     	MOVAR	_shanshuoTime
                                    1- 3526     	.line	227, "main.c"; 	if(workStep == 1)
                                    1- 3527     	BANKSEL	_workStep
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 01rr                      1- 3528     	MOVR	_workStep,W
     002A 2401                      1- 3529     	XORIA	0x01
     002B 0903                      1- 3530     	BTRSS	STATUS,2
                                    1- 3531     	MGOTO	_00237_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3532     	.line	228, "main.c"; 	maxDuty = 51;
     002D 2133                      1- 3533     	MOVIA	0x33
                                    1- 3534     	BANKSEL	_maxDuty
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1- 3535     	MOVAR	_maxDuty
                                    1- 3536     	MGOTO	_00238_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 3537     _00237_DS_:
                                    1- 3538     	.line	229, "main.c"; 	else if(workStep == 2)
                                    1- 3539     	BANKSEL	_workStep
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1- 3540     	MOVR	_workStep,W
     0033 2402                      1- 3541     	XORIA	0x02
     0034 0903                      1- 3542     	BTRSS	STATUS,2
                                    1- 3543     	MGOTO	_00234_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3544     	.line	230, "main.c"; 	maxDuty = 54;
     0036 2136                      1- 3545     	MOVIA	0x36
                                    1- 3546     	BANKSEL	_maxDuty
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 00rr                      1- 3547     	MOVAR	_maxDuty
                                    1- 3548     	MGOTO	_00238_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
     003A                           1- 3549     _00234_DS_:
                                    1- 3550     	.line	231, "main.c"; 	else if(workStep == 3)
                                    1- 3551     	BANKSEL	_workStep
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1- 3552     	MOVR	_workStep,W
     003C 2403                      1- 3553     	XORIA	0x03
     003D 0903                      1- 3554     	BTRSS	STATUS,2
                                    1- 3555     	MGOTO	_00231_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3556     	.line	232, "main.c"; 	maxDuty = 56;
     003F 2138                      1- 3557     	MOVIA	0x38
                                    1- 3558     	BANKSEL	_maxDuty
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 00rr                      1- 3559     	MOVAR	_maxDuty
                                    1- 3560     	MGOTO	_00238_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
     0043                           1- 3561     _00231_DS_:
                                    1- 3562     	.line	233, "main.c"; 	else if(workStep == 4)
                                    1- 3563     	BANKSEL	_workStep
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1- 3564     	MOVR	_workStep,W
     0045 2404                      1- 3565     	XORIA	0x04
     0046 0903                      1- 3566     	BTRSS	STATUS,2
                                    1- 3567     	MGOTO	_00228_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3568     	.line	234, "main.c"; 	maxDuty = 59;
     0048 213B                      1- 3569     	MOVIA	0x3b
                                    1- 3570     	BANKSEL	_maxDuty
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 3571     	MOVAR	_maxDuty
                                    1- 3572     	MGOTO	_00238_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C                           1- 3573     _00228_DS_:
                                    1- 3574     	.line	235, "main.c"; 	else if(workStep == 5)
                                    1- 3575     	BANKSEL	_workStep
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 01rr                      1- 3576     	MOVR	_workStep,W
     004E 2405                      1- 3577     	XORIA	0x05
     004F 0903                      1- 3578     	BTRSS	STATUS,2
                                    1- 3579     	MGOTO	_00225_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3580     	.line	236, "main.c"; 	maxDuty = 61;
     0051 213D                      1- 3581     	MOVIA	0x3d
                                    1- 3582     	BANKSEL	_maxDuty
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 00rr                      1- 3583     	MOVAR	_maxDuty
                                    1- 3584     	MGOTO	_00238_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
     0055                           1- 3585     _00225_DS_:
                                    1- 3586     	.line	237, "main.c"; 	else if(workStep == 6)
                                    1- 3587     	BANKSEL	_workStep
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 01rr                      1- 3588     	MOVR	_workStep,W
     0057 2406                      1- 3589     	XORIA	0x06
     0058 0903                      1- 3590     	BTRSS	STATUS,2
                                    1- 3591     	MGOTO	_00222_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3592     	.line	238, "main.c"; 	maxDuty = 63;
     005A 213F                      1- 3593     	MOVIA	0x3f
                                    1- 3594     	BANKSEL	_maxDuty
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 00rr                      1- 3595     	MOVAR	_maxDuty
                                    1- 3596     	MGOTO	_00238_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
     005E                           1- 3597     _00222_DS_:
                                    1- 3598     	.line	239, "main.c"; 	else if(workStep == 7)
                                    1- 3599     	BANKSEL	_workStep
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 01rr                      1- 3600     	MOVR	_workStep,W
     0060 2407                      1- 3601     	XORIA	0x07
     0061 0903                      1- 3602     	BTRSS	STATUS,2
                                    1- 3603     	MGOTO	_00219_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3604     	.line	240, "main.c"; 	maxDuty = 65;
     0063 2141                      1- 3605     	MOVIA	0x41
                                    1- 3606     	BANKSEL	_maxDuty
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 00rr                      1- 3607     	MOVAR	_maxDuty
                                    1- 3608     	MGOTO	_00238_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
     0067                           1- 3609     _00219_DS_:
                                    1- 3610     	.line	241, "main.c"; 	else if(workStep == 8)
                                    1- 3611     	BANKSEL	_workStep
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 01rr                      1- 3612     	MOVR	_workStep,W
     0069 2408                      1- 3613     	XORIA	0x08
     006A 0903                      1- 3614     	BTRSS	STATUS,2
                                    1- 3615     	MGOTO	_00238_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3616     	.line	242, "main.c"; 	maxDuty = 68;
     006C 2144                      1- 3617     	MOVIA	0x44
                                    1- 3618     	BANKSEL	_maxDuty
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 00rr                      1- 3619     	MOVAR	_maxDuty
     006F                           1- 3620     _00238_DS_:
                                    1- 3621     	.line	243, "main.c"; 	if(workStep > 0)
                                    1- 3622     	BANKSEL	_workStep
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 01rr                      1- 3623     	MOVR	_workStep,W
     0071 0D03                      1- 3624     	BTRSC	STATUS,2
                                    1- 3625     	MGOTO	_00240_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3626     	.line	245, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 3627     	BANKSEL	_maxDuty
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 01rr                      1- 3628     	MOVR	_maxDuty,W
     0075 00rr                      1- 3629     	SFUN	_PWM2DUTY
                                    1- 3630     	.line	246, "main.c"; 	pwmInit();
                                    1- 3631     	MCALL	_pwmInit
     0076 2rrr                      3-   66 m1      LCALL rom_address
     0077                           1- 3632     _00240_DS_:
                                    1- 3633     	.line	248, "main.c"; 	ledStep = workStep;
                                    1- 3634     	BANKSEL	_workStep
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 01rr                      1- 3635     	MOVR	_workStep,W
                                    1- 3636     	BANKSEL	_ledStep
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 00rr                      1- 3637     	MOVAR	_ledStep
                                    1- 3638     	MGOTO	_00251_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
     007C                           1- 3639     _00249_DS_:
                                    1- 3640     	.line	250, "main.c"; 	else if(kclick == 2)
                                    1- 3641     	BANKSEL	r0x1053
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 01rr                      1- 3642     	MOVR	r0x1053,W
     007E 2402                      1- 3643     	XORIA	0x02
     007F 0903                      1- 3644     	BTRSS	STATUS,2
                                    1- 3645     	MGOTO	_00251_DS_
     0080 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3646     	.line	252, "main.c"; 	if(workStep > 0)
                                    1- 3647     	BANKSEL	_workStep
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 01rr                      1- 3648     	MOVR	_workStep,W
     0083 0D03                      1- 3649     	BTRSC	STATUS,2
                                    1- 3650     	MGOTO	_00244_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3651     	.line	254, "main.c"; 	powerOff();
                                    1- 3652     	MCALL	_powerOff
     0085 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3653     	MGOTO	_00245_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
     0087                           1- 3654     _00244_DS_:
                                    1- 3655     	.line	258, "main.c"; 	if(pwStep == 10)
                                    1- 3656     	BANKSEL	_pwStep
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 01rr                      1- 3657     	MOVR	_pwStep,W
     0089 240A                      1- 3658     	XORIA	0x0a
     008A 0903                      1- 3659     	BTRSS	STATUS,2
                                    1- 3660     	MGOTO	_00242_DS_
     008B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3661     	.line	260, "main.c"; 	sleepTime = 0;
                                    1- 3662     	BANKSEL	_sleepTime
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 02rr                      1- 3663     	CLRR	_sleepTime
     008E 02rr                      1- 3664     	CLRR	(_sleepTime + 1)
                                    1- 3665     	.line	261, "main.c"; 	return;
                                    1- 3666     	MGOTO	_00251_DS_
     008F 3rrr                      3-   63 m1      LGOTO rom_address
     0090                           1- 3667     _00242_DS_:
                                    1- 3668     	.line	263, "main.c"; 	workStep = 1;
     0090 2101                      1- 3669     	MOVIA	0x01
                                    1- 3670     	BANKSEL	_workStep
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 00rr                      1- 3671     	MOVAR	_workStep
                                    1- 3672     	.line	264, "main.c"; 	PWM2DUTY = 100;
     0093 2164                      1- 3673     	MOVIA	0x64
     0094 00rr                      1- 3674     	SFUN	_PWM2DUTY
                                    1- 3675     	.line	265, "main.c"; 	currentDuty = 100;
                                    1- 3676     	BANKSEL	_currentDuty
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 00rr                      1- 3677     	MOVAR	_currentDuty
                                    1- 3678     	.line	266, "main.c"; 	maxDuty = 50;
     0097 2132                      1- 3679     	MOVIA	0x32
                                    1- 3680     	BANKSEL	_maxDuty
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 00rr                      1- 3681     	MOVAR	_maxDuty
                                    1- 3682     	.line	267, "main.c"; 	pwmInit();
                                    1- 3683     	MCALL	_pwmInit
     009A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3684     	.line	268, "main.c"; 	shanshuoTime = 16;
     009B 2110                      1- 3685     	MOVIA	0x10
                                    1- 3686     	BANKSEL	_shanshuoTime
     009C rrrr                      3-  110 m1      .banksel ram_address
     009D 00rr                      1- 3687     	MOVAR	_shanshuoTime
     009E                           1- 3688     _00245_DS_:
                                    1- 3689     	.line	271, "main.c"; 	ledStep = workStep;
                                    1- 3690     	BANKSEL	_workStep
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 01rr                      1- 3691     	MOVR	_workStep,W
                                    1- 3692     	BANKSEL	_ledStep
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 00rr                      1- 3693     	MOVAR	_ledStep
     00A2                           1- 3694     _00251_DS_:
                                    1- 3695     	.line	273, "main.c"; 	}
                                    1- 3696     	RETURN	
     00A2 0010                      3-   40 m1      ret
                                    1- 3697     ; exit point of _keyCtr
                                    1- 3700     ;	code size estimation:
                                    1- 3701     ;	 1477+  353 =  1830 instructions ( 4366 byte)
                                    1- 3703     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
