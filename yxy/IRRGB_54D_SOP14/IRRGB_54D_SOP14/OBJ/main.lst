
                    Nyquest Technology Co., Ltd.

NYASM 2.30

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A054E,c=on
                                    1-    9     	#include "ny8a054e.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_irwork
                                    1-   15     	extern	_irpros
                                    1-   16     	extern	_setPWMduty
                                    1-   17     	extern	_keyCallBack
                                    1-   18     	extern	__divuchar
                                    1-   19     	extern	_PORTAbits
                                    1-   20     	extern	_PORTBbits
                                    1-   21     	extern	_PCONbits
                                    1-   22     	extern	_BWUCONbits
                                    1-   23     	extern	_ABPLCONbits
                                    1-   24     	extern	_BPHCONbits
                                    1-   25     	extern	_INTEbits
                                    1-   26     	extern	_INTFbits
                                    1-   27     	extern	_AWUCONbits
                                    1-   28     	extern	_INTEDGbits
                                    1-   29     	extern	_RFCbits
                                    1-   30     	extern	_INTE2bits
                                    1-   31     	extern	_INDF
                                    1-   32     	extern	_TMR0
                                    1-   33     	extern	_PCL
                                    1-   34     	extern	_STATUS
                                    1-   35     	extern	_FSR
                                    1-   36     	extern	_PORTA
                                    1-   37     	extern	_PORTB
                                    1-   38     	extern	_PCON
                                    1-   39     	extern	_BWUCON
                                    1-   40     	extern	_PCHBUF
                                    1-   41     	extern	_ABPLCON
                                    1-   42     	extern	_BPHCON
                                    1-   43     	extern	_INTE
                                    1-   44     	extern	_INTF
                                    1-   45     	extern	_AWUCON
                                    1-   46     	extern	_INTEDG
                                    1-   47     	extern	_TMRH
                                    1-   48     	extern	_RFC
                                    1-   49     	extern	_TM34RH
                                    1-   50     	extern	_INTE2
                                    1-   51     	extern	_TMR1
                                    1-   52     	extern	_T1CR1
                                    1-   53     	extern	_T1CR2
                                    1-   54     	extern	_PWM1DUTY
                                    1-   55     	extern	_PS1CV
                                    1-   56     	extern	_BZ1CR
                                    1-   57     	extern	_IRCR
                                    1-   58     	extern	_TBHP
                                    1-   59     	extern	_TBHD
                                    1-   60     	extern	_P2CR1
                                    1-   61     	extern	_PWM2DUTY
                                    1-   62     	extern	_OSCCR
                                    1-   63     	extern	_TMR3
                                    1-   64     	extern	_T3CR1
                                    1-   65     	extern	_T3CR2
                                    1-   66     	extern	_PWM3DUTY
                                    1-   67     	extern	_PS3CV
                                    1-   68     	extern	_P4CR1
                                    1-   69     	extern	_PWM4DUTY
                                    1-   70     	extern	_P5CR1
                                    1-   71     	extern	_PWM5DUTY
                                    1-   72     	extern	_PWM5RH
                                    1-   73     	extern	_IOSTA
                                    1-   74     	extern	_IOSTB
                                    1-   75     	extern	_APHCON
                                    1-   76     	extern	_PS0CV
                                    1-   77     	extern	_BODCON
                                    1-   78     	extern	_CMPCR
                                    1-   79     	extern	_PCON1
                                    1-   80     	extern	_T0MD
                                    1-   81     	extern	___sdcc_saved_fsr
                                    1-   82     	extern	___sdcc_saved_stk00
                                    1-   83     	extern	___sdcc_saved_stk01
                                    1-   84     	extern	__mulchar
                                    1-   85     	extern	__nyc_ny8_startup
                                    1-   86     ;--------------------------------------------------------
                                    1-   87     ; global declarations
                                    1-   88     ;--------------------------------------------------------
                                    1-   89     	extern	_rainbow
                                    1-   90     	extern	_colorChange
                                    1-   91     	extern	_keyCtr
                                    1-   92     	extern	_keyRead
                                    1-   93     	extern	_workCtr
                                    1-   94     	extern	_showRGB
                                    1-   95     	extern	_gotoSleep
                                    1-   96     	extern	_proData
                                    1-   97     	extern	_GetOneByte
                                    1-   98     	extern	_proLow
                                    1-   99     	extern	_proHight
                                    1-  100     	extern	_cleanData
                                    1-  101     	extern	_isr
                                    1-  102     	extern	_main
                                    1-  103     	extern	_IntFlag
                                    1-  104     	extern	_count
                                    1-  105     	extern	_bitIndex
                                    1-  106     	extern	_data1
                                    1-  107     	extern	_data2
                                    1-  108     	extern	_data3
                                    1-  109     	extern	_data4
                                    1-  110     	extern	_irCode
                                    1-  111     	extern	_irCode2
                                    1-  112     	extern	_value
                                    1-  113     	extern	_sleepFlag
                                    1-  114     	extern	_sleepCount
                                    1-  115     	extern	_ledFlag
                                    1-  116     	extern	_ledCount
                                    1-  117     	extern	_lowTime
                                    1-  118     	extern	_Status
                                    1-  119     	extern	_proTime
                                    1-  120     	extern	_red
                                    1-  121     	extern	_green
                                    1-  122     	extern	_blue
                                    1-  123     	extern	_white
                                    1-  124     	extern	_workStep
                                    1-  125     	extern	_count1s
                                    1-  126     	extern	_light
                                    1-  127     	extern	_lightValue
                                    1-  128     	extern	_keyCount
                                    1-  129     	extern	_colorStep
                                    1-  130     	extern	_lastRed
                                    1-  131     	extern	_lastGreen
                                    1-  132     	extern	_lastBlue
                                    1-  133     	extern	_T1Counter
                                    1-  134     	extern	_accTimeH
                                    1-  136     	extern PSAVE
                                    1-  137     	extern SSAVE
                                    1-  138     	extern WSAVE
                                    1-  139     	extern STK02
                                    1-  140     	extern STK01
                                    1-  141     	extern STK00
                                    1-  143     .segment "uninit", 0x20000040
 20000040                           1-  144     PSAVE:
                                    1-  145     	.res 1
 20000041                           1-  146     SSAVE:
                                    1-  147     	.res 1
 20000042                           1-  148     WSAVE:
                                    1-  149     	.res 1
 20000043                           1-  150     STK02:
                                    1-  151     	.res 1
 20000044                           1-  152     STK01:
                                    1-  153     	.res 1
 20000045                           1-  154     STK00:
                                    1-  155     	.res 1
                                    1-  157     ;--------------------------------------------------------
                                    1-  158     ; global definitions
                                    1-  159     ;--------------------------------------------------------
                                    1-  160     .segment "uninit"
     0000                           1-  161     _IntFlag:
                                    1-  162     	.res	1
                                    1-  165     .segment "uninit"
     0000                           1-  166     _count:
                                    1-  167     	.res	1
                                    1-  170     .segment "uninit"
     0000                           1-  171     _data1:
                                    1-  172     	.res	1
                                    1-  175     .segment "uninit"
     0000                           1-  176     _data2:
                                    1-  177     	.res	1
                                    1-  180     .segment "uninit"
     0000                           1-  181     _data3:
                                    1-  182     	.res	1
                                    1-  185     .segment "uninit"
     0000                           1-  186     _data4:
                                    1-  187     	.res	1
                                    1-  190     .segment "uninit"
     0000                           1-  191     _irCode:
                                    1-  192     	.res	1
                                    1-  195     .segment "uninit"
     0000                           1-  196     _irCode2:
                                    1-  197     	.res	1
                                    1-  200     .segment "uninit"
     0000                           1-  201     _value:
                                    1-  202     	.res	1
                                    1-  205     .segment "uninit"
     0000                           1-  206     _lastRed:
                                    1-  207     	.res	1
                                    1-  210     .segment "uninit"
     0000                           1-  211     _lastGreen:
                                    1-  212     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     _lastBlue:
                                    1-  217     	.res	1
                                    1-  220     .segment "uninit"
     0000                           1-  221     _T1Counter:
                                    1-  222     	.res	2
                                    1-  225     ;--------------------------------------------------------
                                    1-  226     ; absolute symbol definitions
                                    1-  227     ;--------------------------------------------------------
                                    1-  228     ;--------------------------------------------------------
                                    1-  229     ; compiler-defined variables
                                    1-  230     ;--------------------------------------------------------
                                    1-  231     .segment "uninit"
     0000                           1-  232     r0x1027:
                                    1-  233     	.res	1
                                    1-  234     .segment "uninit"
     0000                           1-  235     r0x1028:
                                    1-  236     	.res	1
                                    1-  237     .segment "uninit"
     0000                           1-  238     r0x1029:
                                    1-  239     	.res	1
                                    1-  240     .segment "uninit"
     0000                           1-  241     r0x1026:
                                    1-  242     	.res	1
                                    1-  243     .segment "uninit"
     0000                           1-  244     r0x1024:
                                    1-  245     	.res	1
                                    1-  246     .segment "uninit"
     0000                           1-  247     r0x1025:
                                    1-  248     	.res	1
                                    1-  249     .segment "uninit"
     0000                           1-  250     r0x1023:
                                    1-  251     	.res	1
                                    1-  252     ;--------------------------------------------------------
                                    1-  253     ; initialized data
                                    1-  254     ;--------------------------------------------------------
                                    1-  256     .segment "idata"
     0000                           1-  257     _bitIndex:
     0000 0000                      1-  258     	dw	0x00
                                    1-  262     .segment "idata"
     0000                           1-  263     _sleepFlag:
     0000 0000                      1-  264     	dw	0x00
                                    1-  268     .segment "idata"
     0000                           1-  269     _sleepCount:
     0000 0000 0000                 1-  270     	dw	0x00, 0x00
                                    1-  274     .segment "idata"
     0000                           1-  275     _ledFlag:
     0000 0000                      1-  276     	dw	0x00
                                    1-  280     .segment "idata"
     0000                           1-  281     _ledCount:
     0000 0000                      1-  282     	dw	0x00
                                    1-  286     .segment "idata"
     0000                           1-  287     _lowTime:
     0000 0000 0000                 1-  288     	dw	0x00, 0x00
                                    1-  292     .segment "idata"
     0000                           1-  293     _Status:
     0000 0000                      1-  294     	dw	0x00
                                    1-  298     .segment "idata"
     0000                           1-  299     _proTime:
     0000 0000                      1-  300     	dw	0x00
                                    1-  304     .segment "idata"
     0000                           1-  305     _red:
     0000 0000                      1-  306     	dw	0x00
                                    1-  310     .segment "idata"
     0000                           1-  311     _green:
     0000 0000                      1-  312     	dw	0x00
                                    1-  316     .segment "idata"
     0000                           1-  317     _blue:
     0000 0000                      1-  318     	dw	0x00
                                    1-  322     .segment "idata"
     0000                           1-  323     _white:
     0000 0000                      1-  324     	dw	0x00
                                    1-  328     .segment "idata"
     0000                           1-  329     _workStep:
     0000 0000                      1-  330     	dw	0x00
                                    1-  334     .segment "idata"
     0000                           1-  335     _count1s:
     0000 0000                      1-  336     	dw	0x00
                                    1-  340     .segment "idata"
     0000                           1-  341     _light:
     0000 0000                      1-  342     	dw	0x00
                                    1-  346     .segment "idata"
     0000                           1-  347     _lightValue:
     0000 0000                      1-  348     	dw	0x00
                                    1-  352     .segment "idata"
     0000                           1-  353     _keyCount:
     0000 0000                      1-  354     	dw	0x00
                                    1-  358     .segment "idata"
     0000                           1-  359     _colorStep:
     0000 0000                      1-  360     	dw	0x00
                                    1-  364     .segment "idata"
     0000                           1-  365     _accTimeH:
     0000 0000                      1-  366     	dw	0x00
                                    1-  369     ;--------------------------------------------------------
                                    1-  370     ; overlayable items in internal ram 
                                    1-  371     ;--------------------------------------------------------
                                    1-  372     ;	udata_ovr
                                    1-  373     ;--------------------------------------------------------
                                    1-  374     ; reset vector 
                                    1-  375     ;--------------------------------------------------------
                                    1-  376     ORG	0x0000
     0000 3rrr                      1-  377     	LGOTO	__nyc_ny8_startup
                                    1-  378     ;--------------------------------------------------------
                                    1-  379     ; interrupt and initialization code
                                    1-  380     ;--------------------------------------------------------
                                    1-  381     ORG 0x0008
                                    1-  382     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  384     .segment "code"
     0000                           1-  385     __sdcc_interrupt:
                                    1-  386     ;***
                                    1-  387     ;  pBlock Stats: dbName = I
                                    1-  388     ;***
                                    1-  389     ;2 compiler assigned registers:
                                    1-  390     ;   STK00
                                    1-  391     ;   STK01
                                    1-  392     ;; Starting pCode block
     0000                           1-  393     _isr:
                                    1-  394     ; 0 exit points
                                    1-  395     	.line	86, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  396     	MOVAR	WSAVE
     0001 1503                      1-  397     	SWAPR	STATUS,W
     0002 0283                      1-  398     	CLRR	STATUS
     0003 00rr                      1-  399     	MOVAR	SSAVE
     0004 010A                      1-  400     	MOVR	PCHBUF,W
     0005 028A                      1-  401     	CLRR	PCHBUF
     0006 00rr                      1-  402     	MOVAR	PSAVE
     0007 0104                      1-  403     	MOVR	FSR,W
                                    1-  404     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  405     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  406     	MOVR	STK00,W
                                    1-  407     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  408     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  409     	MOVR	STK01,W
                                    1-  410     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  411     	MOVAR	___sdcc_saved_stk01
                                    1-  412     	.line	88, "main.c"; 	if(INTFbits.T1IF)
     0010 09rr                      1-  413     	BTRSS	_INTFbits,3
                                    1-  414     	MGOTO	_00106_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  415     	.line	90, "main.c"; 	accTimeH++;		//0.256ms执行一次
                                    1-  416     	BANKSEL	_accTimeH
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 05rr                      1-  417     	INCR	_accTimeH,F
                                    1-  418     	.line	92, "main.c"; 	INTF= (unsigned char)~(C_INT_TMR1);	// Clear T1IF flag bit	
     0014 21F7                      1-  419     	MOVIA	0xf7
     0015 00rr                      1-  420     	MOVAR	_INTF
     0016                           1-  421     _00106_DS_:
                                    1-  422     	.line	95, "main.c"; 	if(INTFbits.T0IF)
     0016 08rr                      1-  423     	BTRSS	_INTFbits,0
                                    1-  424     	MGOTO	_00110_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  425     	.line	97, "main.c"; 	TMR0 += 56;
     0018 2138                      1-  426     	MOVIA	0x38
     0019 03rr                      1-  427     	ADDAR	_TMR0,F
                                    1-  428     	.line	98, "main.c"; 	if(++count == 100)
                                    1-  429     	BANKSEL	_count
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 05rr                      1-  430     	INCR	_count,F
     001C 01rr                      1-  431     	MOVR	_count,W
     001D 2464                      1-  432     	XORIA	0x64
     001E 0903                      1-  433     	BTRSS	STATUS,2
                                    1-  434     	MGOTO	_00110_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  435     	.line	100, "main.c"; 	count = 0;
     0020 02rr                      1-  436     	CLRR	_count
                                    1-  437     	.line	101, "main.c"; 	IntFlag = 1;
     0021 2101                      1-  438     	MOVIA	0x01
                                    1-  439     	BANKSEL	_IntFlag
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 00rr                      1-  440     	MOVAR	_IntFlag
     0024                           1-  441     _00110_DS_:
                                    1-  442     	.line	105, "main.c"; 	if(INTFbits.PABIF)
     0024 08rr                      1-  443     	BTRSS	_INTFbits,1
                                    1-  444     	MGOTO	_00112_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  445     	.line	107, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);
     0026 21FD                      1-  446     	MOVIA	0xfd
     0027 00rr                      1-  447     	MOVAR	_INTF
     0028                           1-  448     _00112_DS_:
                                    1-  449     	.line	110, "main.c"; 	INTF = 0;
     0028 02rr                      1-  450     	CLRR	_INTF
                                    1-  451     	.line	113, "main.c"; 	}
                                    1-  452     	BANKSEL	___sdcc_saved_stk01
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 01rr                      1-  453     	MOVR	___sdcc_saved_stk01,W
     002B 00rr                      1-  454     	MOVAR	STK01
                                    1-  455     	BANKSEL	___sdcc_saved_stk00
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 01rr                      1-  456     	MOVR	___sdcc_saved_stk00,W
     002E 00rr                      1-  457     	MOVAR	STK00
                                    1-  458     	BANKSEL	___sdcc_saved_fsr
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1-  459     	MOVR	___sdcc_saved_fsr,W
     0031 0084                      1-  460     	MOVAR	FSR
     0032 01rr                      1-  461     	MOVR	PSAVE,W
     0033 008A                      1-  462     	MOVAR	PCHBUF
     0034 0283                      1-  463     	CLRR	STATUS
     0035 15rr                      1-  464     	SWAPR	SSAVE,W
     0036 0083                      1-  465     	MOVAR	STATUS
     0037 15rr                      1-  466     	SWAPR	WSAVE,F
     0038 15rr                      1-  467     	SWAPR	WSAVE,W
     0039                           1-  468     END_OF_INTERRUPT:
     0039 0011                      1-  469     	RETIE	
                                    1-  471     ;--------------------------------------------------------
                                    1-  472     ; code
                                    1-  473     ;--------------------------------------------------------
                                    1-  474     ;***
                                    1-  475     ;  pBlock Stats: dbName = M
                                    1-  476     ;***
                                    1-  477     ;has an exit
                                    1-  478     ;functions called:
                                    1-  479     ;   _proData
                                    1-  480     ;   _proLow
                                    1-  481     ;   _proHight
                                    1-  482     ;   _showRGB
                                    1-  483     ;   _keyCtr
                                    1-  484     ;   _workCtr
                                    1-  485     ;   _gotoSleep
                                    1-  486     ;   _proData
                                    1-  487     ;   _proLow
                                    1-  488     ;   _proHight
                                    1-  489     ;   _showRGB
                                    1-  490     ;   _keyCtr
                                    1-  491     ;   _workCtr
                                    1-  492     ;   _gotoSleep
                                    1-  493     ;; Starting pCode block
                                    1-  494     .segment "code"; module=main, function=_main
     0000                           1-  496     _main:
                                    1-  497     ; 2 exit points
                                    1-  498     	.line	394, "main.c"; 	IOSTA =   C_PA2_Input | C_PA4_Input | C_PA5_Input; 
     0000 2134                      1-  499     	MOVIA	0x34
     0001 000r                      1-  500     	IOST	_IOSTA
                                    1-  501     	.line	395, "main.c"; 	IOSTB =   0x00;     // Set PB0 & PB1 to input mode,others set to output mode
     0002 0200                      1-  502     	CLRA	
     0003 000r                      1-  503     	IOST	_IOSTB
                                    1-  504     	.line	396, "main.c"; 	APHCON = 0xEB;
     0004 21EB                      1-  505     	MOVIA	0xeb
     0005 000r                      1-  506     	IOST	_APHCON
                                    1-  507     	.line	397, "main.c"; 	BPHCON = 0xFF;
     0006 21FF                      1-  508     	MOVIA	0xff
     0007 00rr                      1-  509     	MOVAR	_BPHCON
                                    1-  510     	.line	398, "main.c"; 	ABPLCON = 0xFF;
     0008 00rr                      1-  511     	MOVAR	_ABPLCON
                                    1-  512     	.line	399, "main.c"; 	PORTA = 0x00;    
     0009 02rr                      1-  513     	CLRR	_PORTA
                                    1-  514     	.line	400, "main.c"; 	PORTB = 0x00;                           // PB0、PB1 & PB2 are output High
     000A 02rr                      1-  515     	CLRR	_PORTB
                                    1-  516     	.line	401, "main.c"; 	DISI();
     000B 0013                      1-  517     	DISI
                                    1-  518     	.line	403, "main.c"; 	PCON1 = C_TMR0_Dis;						// Disable Timer0
     000C 0200                      1-  519     	CLRA	
     000D 000r                      1-  520     	IOST	_PCON1
                                    1-  521     	.line	407, "main.c"; 	TMR1 = 0xFF;
     000E 21FF                      1-  522     	MOVIA	0xff
     000F 00rr                      1-  523     	SFUN	_TMR1
                                    1-  524     	.line	408, "main.c"; 	T1CR2 = C_PS1_Div64 | C_PS1_EN | C_TMR1_ClkSrc_Inst;
     0010 2105                      1-  525     	MOVIA	0x05
     0011 00rr                      1-  526     	SFUN	_T1CR2
                                    1-  527     	.line	409, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload;
     0012 2103                      1-  528     	MOVIA	0x03
     0013 00rr                      1-  529     	SFUN	_T1CR1
                                    1-  530     	.line	412, "main.c"; 	INT1Level = 1;
                                    1-  531     	BANKSEL	_Status
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 1Arr                      1-  532     	BSR	_Status,5
                                    1-  533     	.line	415, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;	// Enable Timer0、Timer1、WDT overflow interrupt
     0016 210B                      1-  534     	MOVIA	0x0b
     0017 00rr                      1-  535     	MOVAR	_INTE
                                    1-  536     	.line	417, "main.c"; 	TMR0 = 55;
     0018 2137                      1-  537     	MOVIA	0x37
     0019 00rr                      1-  538     	MOVAR	_TMR0
                                    1-  539     	.line	418, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     001A 0200                      1-  540     	CLRA	
     001B 0003                      1-  541     	T0MD	
                                    1-  542     	.line	421, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     001C 2188                      1-  543     	MOVIA	0x88
     001D 00rr                      1-  544     	MOVAR	_PCON
                                    1-  545     	.line	424, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001E 2101                      1-  546     	MOVIA	0x01
     001F 000r                      1-  547     	IOST	_PCON1
                                    1-  548     	.line	425, "main.c"; 	ENI();									// Enable all unmasked interrupts			
     0020 0004                      1-  549     	ENI
                                    1-  550     	.line	426, "main.c"; 	data1 = data2 = data3 = data4 = 0;
                                    1-  551     	BANKSEL	_data4
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 02rr                      1-  552     	CLRR	_data4
                                    1-  553     	BANKSEL	_data3
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 02rr                      1-  554     	CLRR	_data3
                                    1-  555     	BANKSEL	_data2
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1-  556     	CLRR	_data2
                                    1-  557     	BANKSEL	_data1
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1-  558     	CLRR	_data1
     0029                           1-  559     _00370_DS_:
                                    1-  560     	.line	429, "main.c"; 	if(ReadOver)
                                    1-  561     	BANKSEL	_Status
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 0Err                      1-  562     	BTRSC	_Status,4
                                    1-  563     	.line	431, "main.c"; 	proData();
                                    1-  564     	MCALL	_proData
     002B 2rrr                      3-   66 m1      LCALL rom_address
     002C                           1-  565     _00343_DS_:
                                    1-  566     	.line	433, "main.c"; 	if(INT1Level && (PORTA & 0x04))
                                    1-  567     	BANKSEL	_Status
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 0Arr                      1-  568     	BTRSS	_Status,5
                                    1-  569     	MGOTO	_00348_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F 09rr                      1-  570     	BTRSS	_PORTA,2
                                    1-  571     	MGOTO	_00348_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  572     	.line	435, "main.c"; 	INT1Level = 0;
     0031 1Err                      1-  573     	BCR	_Status,5
                                    1-  574     	.line	436, "main.c"; 	proLow();
                                    1-  575     	MCALL	_proLow
     0032 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  576     	MGOTO	_00349_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
     0034                           1-  577     _00348_DS_:
                                    1-  578     	.line	438, "main.c"; 	else if(INT1Level == 0 && (PORTA & 0x04) == 0)
                                    1-  579     	BANKSEL	_Status
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 0Err                      1-  580     	BTRSC	_Status,5
                                    1-  581     	MGOTO	_00349_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037 0Drr                      1-  582     	BTRSC	_PORTA,2
                                    1-  583     	MGOTO	_00349_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  584     	.line	441, "main.c"; 	INT1Level = 1;
     0039 1Arr                      1-  585     	BSR	_Status,5
                                    1-  586     	.line	442, "main.c"; 	proHight();
                                    1-  587     	MCALL	_proHight
     003A 2rrr                      3-   66 m1      LCALL rom_address
     003B                           1-  588     _00349_DS_:
                                    1-  589     	.line	444, "main.c"; 	if(workStep == 0)
                                    1-  590     	BANKSEL	_workStep
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 01rr                      1-  591     	MOVR	_workStep,W
     003D 0903                      1-  592     	BTRSS	STATUS,2
                                    1-  593     	MGOTO	_00352_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  594     	.line	445, "main.c"; 	red = green = blue = white = 0;
                                    1-  595     	BANKSEL	_white
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 02rr                      1-  596     	CLRR	_white
                                    1-  597     	BANKSEL	_blue
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1-  598     	CLRR	_blue
                                    1-  599     	BANKSEL	_green
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 02rr                      1-  600     	CLRR	_green
                                    1-  601     	BANKSEL	_red
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 02rr                      1-  602     	CLRR	_red
     0047                           1-  603     _00352_DS_:
                                    1-  604     	.line	446, "main.c"; 	showRGB();
                                    1-  605     	MCALL	_showRGB
     0047 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  606     	.line	447, "main.c"; 	CLRWDT();
     0048 0002                      1-  607     	clrwdt
                                    1-  608     	.line	448, "main.c"; 	if(!IntFlag)
                                    1-  609     	BANKSEL	_IntFlag
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 01rr                      1-  610     	MOVR	_IntFlag,W
     004B 0D03                      1-  611     	BTRSC	STATUS,2
                                    1-  612     	MGOTO	_00370_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  613     	.line	450, "main.c"; 	IntFlag = 0;		//10ms执行一次
     004D 02rr                      1-  614     	CLRR	_IntFlag
                                    1-  615     	.line	451, "main.c"; 	keyCtr();
                                    1-  616     	MCALL	_keyCtr
     004E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  617     	.line	452, "main.c"; 	if(workStep > 0)
                                    1-  618     	BANKSEL	_workStep
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 01rr                      1-  619     	MOVR	_workStep,W
     0051 0903                      1-  620     	BTRSS	STATUS,2
                                    1-  621     	.line	453, "main.c"; 	workCtr();
                                    1-  622     	MCALL	_workCtr
     0052 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  623     	.line	454, "main.c"; 	if(bitIndex == 0 &&  keyCount == 0 && workStep == 0 && ++sleepCount >= 250)
                                    1-  624     	BANKSEL	_bitIndex
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 01rr                      1-  625     	MOVR	_bitIndex,W
     0055 0903                      1-  626     	BTRSS	STATUS,2
                                    1-  627     	MGOTO	_00358_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  628     	BANKSEL	_keyCount
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 01rr                      1-  629     	MOVR	_keyCount,W
     0059 0903                      1-  630     	BTRSS	STATUS,2
                                    1-  631     	MGOTO	_00358_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  632     	BANKSEL	_workStep
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 01rr                      1-  633     	MOVR	_workStep,W
     005D 0903                      1-  634     	BTRSS	STATUS,2
                                    1-  635     	MGOTO	_00358_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  636     	BANKSEL	_sleepCount
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 05rr                      1-  637     	INCR	_sleepCount,F
     0061 0D03                      1-  638     	BTRSC	STATUS,2
     0062 05rr                      1-  639     	INCR	(_sleepCount + 1),F
                                    1-  640     ;;unsigned compare: left < lit (0xFA=250), size=2
     0063 2100                      1-  641     	MOVIA	0x00
     0064 04rr                      1-  642     	SUBAR	(_sleepCount + 1),W
     0065 0903                      1-  643     	BTRSS	STATUS,2
                                    1-  644     	MGOTO	_00422_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
     0067 21FA                      1-  645     	MOVIA	0xfa
     0068 04rr                      1-  646     	SUBAR	_sleepCount,W
     0069                           1-  647     _00422_DS_:
     0069 0803                      1-  648     	BTRSS	STATUS,0
                                    1-  649     	MGOTO	_00358_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  650     	.line	456, "main.c"; 	gotoSleep();
                                    1-  651     	MCALL	_gotoSleep
     006B 2rrr                      3-   66 m1      LCALL rom_address
     006C                           1-  652     _00358_DS_:
                                    1-  653     	.line	458, "main.c"; 	if(++count1s > 100)
                                    1-  654     	BANKSEL	_count1s
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 05rr                      1-  655     	INCR	_count1s,F
                                    1-  656     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  657     ;;unsigned compare: left >= lit (0x65=101), size=1
     006E 2165                      1-  658     	MOVIA	0x65
     006F 04rr                      1-  659     	SUBAR	_count1s,W
     0070 0803                      1-  660     	BTRSS	STATUS,0
                                    1-  661     	MGOTO	_00370_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  662     	.line	460, "main.c"; 	count1s = 0;
     0072 02rr                      1-  663     	CLRR	_count1s
                                    1-  664     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  665     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1-  666     	.line	461, "main.c"; 	if(workStep > 4)
     0073 2105                      1-  667     	MOVIA	0x05
                                    1-  668     	BANKSEL	_workStep
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 04rr                      1-  669     	SUBAR	_workStep,W
     0076 0803                      1-  670     	BTRSS	STATUS,0
                                    1-  671     	MGOTO	_00370_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  672     	.line	464, "main.c"; 	if(lowTime > 0)
                                    1-  673     	BANKSEL	_lowTime
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 01rr                      1-  674     	MOVR	_lowTime,W
     007A 11rr                      1-  675     	IORAR	(_lowTime + 1),W
     007B 0D03                      1-  676     	BTRSC	STATUS,2
                                    1-  677     	MGOTO	_00363_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  678     	.line	466, "main.c"; 	--lowTime;
     007D 21FF                      1-  679     	MOVIA	0xff
     007E 03rr                      1-  680     	ADDAR	_lowTime,F
     007F 0803                      1-  681     	BTRSS	STATUS,0
     0080 06rr                      1-  682     	DECR	(_lowTime + 1),F
                                    1-  683     	MGOTO	_00370_DS_
     0081 3rrr                      3-   63 m1      LGOTO rom_address
     0082                           1-  684     _00363_DS_:
                                    1-  685     	.line	470, "main.c"; 	sleepFlag = 1;
     0082 2101                      1-  686     	MOVIA	0x01
                                    1-  687     	BANKSEL	_sleepFlag
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 00rr                      1-  688     	MOVAR	_sleepFlag
                                    1-  689     	.line	471, "main.c"; 	workStep = 0;
                                    1-  690     	BANKSEL	_workStep
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 02rr                      1-  691     	CLRR	_workStep
                                    1-  692     	MGOTO	_00370_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  693     	.line	479, "main.c"; 	}
                                    1-  694     	RETURN	
     0088 0010                      3-   40 m1      ret
                                    1-  695     ; exit point of _main
                                    1-  697     ;***
                                    1-  698     ;  pBlock Stats: dbName = C
                                    1-  699     ;***
                                    1-  700     ;has an exit
                                    1-  701     ;; Starting pCode block
                                    1-  702     .segment "code"; module=main, function=_rainbow
     0000                           1-  704     _rainbow:
                                    1-  705     ; 2 exit points
                                    1-  706     	.line	729, "main.c"; 	if(colorStep == 1)
                                    1-  707     	BANKSEL	_colorStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1-  708     	MOVR	_colorStep,W
     0002 2401                      1-  709     	XORIA	0x01
     0003 0903                      1-  710     	BTRSS	STATUS,2
                                    1-  711     	MGOTO	_00586_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  712     	.line	731, "main.c"; 	lastRed = 250;
     0005 21FA                      1-  713     	MOVIA	0xfa
                                    1-  714     	BANKSEL	_lastRed
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1-  715     	MOVAR	_lastRed
                                    1-  716     	.line	732, "main.c"; 	lastGreen = 0;
                                    1-  717     	BANKSEL	_lastGreen
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1-  718     	CLRR	_lastGreen
                                    1-  719     	.line	733, "main.c"; 	lastBlue = 0;
                                    1-  720     	BANKSEL	_lastBlue
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 02rr                      1-  721     	CLRR	_lastBlue
                                    1-  722     	MGOTO	_00587_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
     000D                           1-  723     _00586_DS_:
                                    1-  724     	.line	735, "main.c"; 	else if(colorStep == 2)
                                    1-  725     	BANKSEL	_colorStep
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1-  726     	MOVR	_colorStep,W
     000F 2402                      1-  727     	XORIA	0x02
     0010 0903                      1-  728     	BTRSS	STATUS,2
                                    1-  729     	MGOTO	_00583_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  730     	.line	737, "main.c"; 	lastRed = 250;
     0012 21FA                      1-  731     	MOVIA	0xfa
                                    1-  732     	BANKSEL	_lastRed
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 00rr                      1-  733     	MOVAR	_lastRed
                                    1-  734     	.line	738, "main.c"; 	lastGreen = 150;
     0015 2196                      1-  735     	MOVIA	0x96
                                    1-  736     	BANKSEL	_lastGreen
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1-  737     	MOVAR	_lastGreen
                                    1-  738     	.line	739, "main.c"; 	lastBlue = 0;
                                    1-  739     	BANKSEL	_lastBlue
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1-  740     	CLRR	_lastBlue
                                    1-  741     	MGOTO	_00587_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
     001B                           1-  742     _00583_DS_:
                                    1-  743     	.line	741, "main.c"; 	else if(colorStep == 3)
                                    1-  744     	BANKSEL	_colorStep
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1-  745     	MOVR	_colorStep,W
     001D 2403                      1-  746     	XORIA	0x03
     001E 0903                      1-  747     	BTRSS	STATUS,2
                                    1-  748     	MGOTO	_00580_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  749     	.line	743, "main.c"; 	lastRed = 250;
     0020 21FA                      1-  750     	MOVIA	0xfa
                                    1-  751     	BANKSEL	_lastRed
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 00rr                      1-  752     	MOVAR	_lastRed
                                    1-  753     	.line	744, "main.c"; 	lastGreen = 250;
                                    1-  754     	BANKSEL	_lastGreen
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1-  755     	MOVAR	_lastGreen
                                    1-  756     	.line	745, "main.c"; 	lastBlue = 0;
                                    1-  757     	BANKSEL	_lastBlue
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1-  758     	CLRR	_lastBlue
                                    1-  759     	MGOTO	_00587_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1-  760     _00580_DS_:
                                    1-  761     	.line	747, "main.c"; 	else if(colorStep == 4)
                                    1-  762     	BANKSEL	_colorStep
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 01rr                      1-  763     	MOVR	_colorStep,W
     002A 2404                      1-  764     	XORIA	0x04
     002B 0903                      1-  765     	BTRSS	STATUS,2
                                    1-  766     	MGOTO	_00577_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  767     	.line	749, "main.c"; 	lastRed = 0;
                                    1-  768     	BANKSEL	_lastRed
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 02rr                      1-  769     	CLRR	_lastRed
                                    1-  770     	.line	750, "main.c"; 	lastGreen = 250;
     002F 21FA                      1-  771     	MOVIA	0xfa
                                    1-  772     	BANKSEL	_lastGreen
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 00rr                      1-  773     	MOVAR	_lastGreen
                                    1-  774     	.line	751, "main.c"; 	lastBlue = 0;
                                    1-  775     	BANKSEL	_lastBlue
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 02rr                      1-  776     	CLRR	_lastBlue
                                    1-  777     	MGOTO	_00587_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
     0035                           1-  778     _00577_DS_:
                                    1-  779     	.line	753, "main.c"; 	else if(colorStep == 5)
                                    1-  780     	BANKSEL	_colorStep
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 01rr                      1-  781     	MOVR	_colorStep,W
     0037 2405                      1-  782     	XORIA	0x05
     0038 0903                      1-  783     	BTRSS	STATUS,2
                                    1-  784     	MGOTO	_00574_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  785     	.line	755, "main.c"; 	lastRed = 0;
                                    1-  786     	BANKSEL	_lastRed
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 02rr                      1-  787     	CLRR	_lastRed
                                    1-  788     	.line	756, "main.c"; 	lastGreen = 250;
     003C 21FA                      1-  789     	MOVIA	0xfa
                                    1-  790     	BANKSEL	_lastGreen
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 00rr                      1-  791     	MOVAR	_lastGreen
                                    1-  792     	.line	757, "main.c"; 	lastBlue = 250;
                                    1-  793     	BANKSEL	_lastBlue
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 00rr                      1-  794     	MOVAR	_lastBlue
                                    1-  795     	MGOTO	_00587_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042                           1-  796     _00574_DS_:
                                    1-  797     	.line	759, "main.c"; 	else if(colorStep == 6)
                                    1-  798     	BANKSEL	_colorStep
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1-  799     	MOVR	_colorStep,W
     0044 2406                      1-  800     	XORIA	0x06
     0045 0903                      1-  801     	BTRSS	STATUS,2
                                    1-  802     	MGOTO	_00571_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  803     	.line	761, "main.c"; 	lastRed = 0;
                                    1-  804     	BANKSEL	_lastRed
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 02rr                      1-  805     	CLRR	_lastRed
                                    1-  806     	.line	762, "main.c"; 	lastGreen = 0;
                                    1-  807     	BANKSEL	_lastGreen
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 02rr                      1-  808     	CLRR	_lastGreen
                                    1-  809     	.line	763, "main.c"; 	lastBlue = 250;
     004B 21FA                      1-  810     	MOVIA	0xfa
                                    1-  811     	BANKSEL	_lastBlue
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 00rr                      1-  812     	MOVAR	_lastBlue
                                    1-  813     	MGOTO	_00587_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
     004F                           1-  814     _00571_DS_:
                                    1-  815     	.line	765, "main.c"; 	else if(colorStep == 7)
                                    1-  816     	BANKSEL	_colorStep
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 01rr                      1-  817     	MOVR	_colorStep,W
     0051 2407                      1-  818     	XORIA	0x07
     0052 0903                      1-  819     	BTRSS	STATUS,2
                                    1-  820     	MGOTO	_00587_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  821     	.line	767, "main.c"; 	lastRed = 150;
     0054 2196                      1-  822     	MOVIA	0x96
                                    1-  823     	BANKSEL	_lastRed
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 00rr                      1-  824     	MOVAR	_lastRed
                                    1-  825     	.line	768, "main.c"; 	lastGreen = 0;
                                    1-  826     	BANKSEL	_lastGreen
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 02rr                      1-  827     	CLRR	_lastGreen
                                    1-  828     	.line	769, "main.c"; 	lastBlue = 250;
     0059 21FA                      1-  829     	MOVIA	0xfa
                                    1-  830     	BANKSEL	_lastBlue
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 00rr                      1-  831     	MOVAR	_lastBlue
     005C                           1-  832     _00587_DS_:
                                    1-  833     	.line	772, "main.c"; 	if(red > lastRed)
                                    1-  834     	BANKSEL	_red
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 01rr                      1-  835     	MOVR	_red,W
                                    1-  836     	BANKSEL	_lastRed
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 04rr                      1-  837     	SUBAR	_lastRed,W
     0060 0C03                      1-  838     	BTRSC	STATUS,0
                                    1-  839     	MGOTO	_00001_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  840     	.line	773, "main.c"; 	red--;
                                    1-  841     	BANKSEL	_red
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 06rr                      1-  842     	DECR	_red,F
     0064                           1-  843     _00001_DS_:
                                    1-  844     	.line	774, "main.c"; 	if(green > lastGreen)
                                    1-  845     	BANKSEL	_green
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1-  846     	MOVR	_green,W
                                    1-  847     	BANKSEL	_lastGreen
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 04rr                      1-  848     	SUBAR	_lastGreen,W
     0068 0C03                      1-  849     	BTRSC	STATUS,0
                                    1-  850     	MGOTO	_00002_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  851     	.line	775, "main.c"; 	green--;
                                    1-  852     	BANKSEL	_green
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 06rr                      1-  853     	DECR	_green,F
     006C                           1-  854     _00002_DS_:
                                    1-  855     	.line	776, "main.c"; 	if(blue > lastBlue)
                                    1-  856     	BANKSEL	_blue
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 01rr                      1-  857     	MOVR	_blue,W
                                    1-  858     	BANKSEL	_lastBlue
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 04rr                      1-  859     	SUBAR	_lastBlue,W
     0070 0C03                      1-  860     	BTRSC	STATUS,0
                                    1-  861     	MGOTO	_00003_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  862     	.line	777, "main.c"; 	blue--;
                                    1-  863     	BANKSEL	_blue
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 06rr                      1-  864     	DECR	_blue,F
     0074                           1-  865     _00003_DS_:
                                    1-  866     	.line	778, "main.c"; 	if(red < lastRed)
                                    1-  867     	BANKSEL	_lastRed
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 01rr                      1-  868     	MOVR	_lastRed,W
                                    1-  869     	BANKSEL	_red
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 04rr                      1-  870     	SUBAR	_red,W
     0078 0803                      1-  871     	BTRSS	STATUS,0
                                    1-  872     	.line	779, "main.c"; 	red++;
     0079 05rr                      1-  873     	INCR	_red,F
                                    1-  874     	.line	780, "main.c"; 	if(green < lastGreen)
                                    1-  875     	BANKSEL	_lastGreen
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 01rr                      1-  876     	MOVR	_lastGreen,W
                                    1-  877     	BANKSEL	_green
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 04rr                      1-  878     	SUBAR	_green,W
     007E 0803                      1-  879     	BTRSS	STATUS,0
                                    1-  880     	.line	781, "main.c"; 	green++;
     007F 05rr                      1-  881     	INCR	_green,F
                                    1-  882     	.line	782, "main.c"; 	if(blue < lastBlue)
                                    1-  883     	BANKSEL	_lastBlue
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 01rr                      1-  884     	MOVR	_lastBlue,W
                                    1-  885     	BANKSEL	_blue
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 04rr                      1-  886     	SUBAR	_blue,W
     0084 0803                      1-  887     	BTRSS	STATUS,0
                                    1-  888     	.line	783, "main.c"; 	blue++;
     0085 05rr                      1-  889     	INCR	_blue,F
                                    1-  890     	.line	785, "main.c"; 	if(red == lastRed && blue == lastBlue && green == lastGreen)
                                    1-  891     	BANKSEL	_lastRed
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 01rr                      1-  892     	MOVR	_lastRed,W
                                    1-  893     	BANKSEL	_red
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 12rr                      1-  894     	XORAR	_red,W
     008A 0903                      1-  895     	BTRSS	STATUS,2
                                    1-  896     	MGOTO	_00606_DS_
     008B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  897     	BANKSEL	_lastBlue
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 01rr                      1-  898     	MOVR	_lastBlue,W
                                    1-  899     	BANKSEL	_blue
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 12rr                      1-  900     	XORAR	_blue,W
     0090 0903                      1-  901     	BTRSS	STATUS,2
                                    1-  902     	MGOTO	_00606_DS_
     0091 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  903     	BANKSEL	_lastGreen
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 01rr                      1-  904     	MOVR	_lastGreen,W
                                    1-  905     	BANKSEL	_green
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 12rr                      1-  906     	XORAR	_green,W
     0096 0903                      1-  907     	BTRSS	STATUS,2
                                    1-  908     	MGOTO	_00606_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  909     	.line	787, "main.c"; 	if(++colorStep > 7)
                                    1-  910     	BANKSEL	_colorStep
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 05rr                      1-  911     	INCR	_colorStep,F
                                    1-  912     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  913     ;;unsigned compare: left >= lit (0x8=8), size=1
     009A 2108                      1-  914     	MOVIA	0x08
     009B 04rr                      1-  915     	SUBAR	_colorStep,W
     009C 0803                      1-  916     	BTRSS	STATUS,0
                                    1-  917     	MGOTO	_00606_DS_
     009D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  918     	.line	788, "main.c"; 	colorStep = 1;
     009E 2101                      1-  919     	MOVIA	0x01
     009F 00rr                      1-  920     	MOVAR	_colorStep
     00A0                           1-  921     _00606_DS_:
                                    1-  922     	.line	790, "main.c"; 	}
                                    1-  923     	RETURN	
     00A0 0010                      3-   40 m1      ret
                                    1-  924     ; exit point of _rainbow
                                    1-  926     ;***
                                    1-  927     ;  pBlock Stats: dbName = C
                                    1-  928     ;***
                                    1-  929     ;has an exit
                                    1-  930     ;1 compiler assigned register :
                                    1-  931     ;   r0x1023
                                    1-  932     ;; Starting pCode block
                                    1-  933     .segment "code"; module=main, function=_colorChange
     0000                           1-  935     _colorChange:
                                    1-  936     ; 2 exit points
                                    1-  937     	.line	661, "main.c"; 	if(++colorStep > 16)
                                    1-  938     	BANKSEL	_colorStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 05rr                      1-  939     	INCR	_colorStep,F
                                    1-  940     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  941     ;;unsigned compare: left >= lit (0x11=17), size=1
     0002 2111                      1-  942     	MOVIA	0x11
     0003 04rr                      1-  943     	SUBAR	_colorStep,W
     0004 0803                      1-  944     	BTRSS	STATUS,0
                                    1-  945     	MGOTO	_00531_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  946     	.line	662, "main.c"; 	colorStep = 1;
     0006 2101                      1-  947     	MOVIA	0x01
     0007 00rr                      1-  948     	MOVAR	_colorStep
     0008                           1-  949     _00531_DS_:
                                    1-  950     	.line	663, "main.c"; 	white = red = green = blue = 0;
                                    1-  951     	BANKSEL	_blue
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1-  952     	CLRR	_blue
                                    1-  953     	BANKSEL	_green
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 02rr                      1-  954     	CLRR	_green
                                    1-  955     	BANKSEL	_red
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 02rr                      1-  956     	CLRR	_red
                                    1-  957     	BANKSEL	_white
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1-  958     	CLRR	_white
                                    1-  959     ;;unsigned compare: left < lit (0x1=1), size=1
                                    1-  960     	.line	664, "main.c"; 	switch(colorStep)
     0010 2101                      1-  961     	MOVIA	0x01
                                    1-  962     	BANKSEL	_colorStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 04rr                      1-  963     	SUBAR	_colorStep,W
     0013 0803                      1-  964     	BTRSS	STATUS,0
                                    1-  965     	MGOTO	_00549_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  966     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  967     ;;unsigned compare: left >= lit (0x11=17), size=1
     0015 2111                      1-  968     	MOVIA	0x11
     0016 04rr                      1-  969     	SUBAR	_colorStep,W
     0017 0C03                      1-  970     	BTRSC	STATUS,0
                                    1-  971     	MGOTO	_00549_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
     0019 06rr                      1-  972     	DECR	_colorStep,W
                                    1-  973     	BANKSEL	r0x1023
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 00rr                      1-  974     	MOVAR	r0x1023
     001C 21rr                      1-  975     	MOVIA	((_00563_DS_ >> 8) & 0xff)
     001D 008A                      1-  976     	MOVAR	PCHBUF
     001E 01rr                      1-  977     	MOVR	r0x1023,W
     001F 25rr                      1-  978     	ADDIA	_00563_DS_
     0020 0C03                      1-  979     	BTRSC	STATUS,0
     0021 058A                      1-  980     	INCR	PCHBUF,F
     0022 0082                      1-  981     	MOVAR	PCL
     0023                           1-  982     _00563_DS_:
                                    1-  983     	MGOTO	_00532_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  984     	MGOTO	_00533_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  985     	MGOTO	_00534_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  986     	MGOTO	_00535_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  987     	MGOTO	_00536_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  988     	MGOTO	_00537_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  989     	MGOTO	_00538_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  990     	MGOTO	_00539_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  991     	MGOTO	_00540_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  992     	MGOTO	_00541_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  993     	MGOTO	_00542_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  994     	MGOTO	_00543_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  995     	MGOTO	_00544_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  996     	MGOTO	_00545_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  997     	MGOTO	_00546_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  998     	MGOTO	_00547_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033                           1-  999     _00532_DS_:
                                    1- 1000     	.line	667, "main.c"; 	red = 250;
     0033 21FA                      1- 1001     	MOVIA	0xfa
                                    1- 1002     	BANKSEL	_red
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1003     	MOVAR	_red
                                    1- 1004     	.line	668, "main.c"; 	break;
                                    1- 1005     	MGOTO	_00549_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037                           1- 1006     _00533_DS_:
                                    1- 1007     	.line	670, "main.c"; 	green = 250;
     0037 21FA                      1- 1008     	MOVIA	0xfa
                                    1- 1009     	BANKSEL	_green
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 00rr                      1- 1010     	MOVAR	_green
                                    1- 1011     	.line	671, "main.c"; 	break;
                                    1- 1012     	MGOTO	_00549_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
     003B                           1- 1013     _00534_DS_:
                                    1- 1014     	.line	673, "main.c"; 	blue = 250;
     003B 21FA                      1- 1015     	MOVIA	0xfa
                                    1- 1016     	BANKSEL	_blue
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 00rr                      1- 1017     	MOVAR	_blue
                                    1- 1018     	.line	674, "main.c"; 	break;
                                    1- 1019     	MGOTO	_00549_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
     003F                           1- 1020     _00535_DS_:
                                    1- 1021     	.line	676, "main.c"; 	white = 250;
     003F 21FA                      1- 1022     	MOVIA	0xfa
                                    1- 1023     	BANKSEL	_white
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 00rr                      1- 1024     	MOVAR	_white
                                    1- 1025     	.line	677, "main.c"; 	break;
                                    1- 1026     	MGOTO	_00549_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
     0043                           1- 1027     _00536_DS_:
                                    1- 1028     	.line	679, "main.c"; 	red = green = 250;
     0043 21FA                      1- 1029     	MOVIA	0xfa
                                    1- 1030     	BANKSEL	_green
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 1031     	MOVAR	_green
                                    1- 1032     	BANKSEL	_red
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1- 1033     	MOVAR	_red
                                    1- 1034     	.line	680, "main.c"; 	break;
                                    1- 1035     	MGOTO	_00549_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049                           1- 1036     _00537_DS_:
                                    1- 1037     	.line	682, "main.c"; 	green = blue = 250;
     0049 21FA                      1- 1038     	MOVIA	0xfa
                                    1- 1039     	BANKSEL	_blue
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 00rr                      1- 1040     	MOVAR	_blue
                                    1- 1041     	BANKSEL	_green
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 00rr                      1- 1042     	MOVAR	_green
                                    1- 1043     	.line	683, "main.c"; 	break;
                                    1- 1044     	MGOTO	_00549_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
     004F                           1- 1045     _00538_DS_:
                                    1- 1046     	.line	685, "main.c"; 	red = blue = 250;
     004F 21FA                      1- 1047     	MOVIA	0xfa
                                    1- 1048     	BANKSEL	_blue
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 00rr                      1- 1049     	MOVAR	_blue
                                    1- 1050     	BANKSEL	_red
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 00rr                      1- 1051     	MOVAR	_red
                                    1- 1052     	.line	686, "main.c"; 	break;
                                    1- 1053     	MGOTO	_00549_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
     0055                           1- 1054     _00539_DS_:
                                    1- 1055     	.line	688, "main.c"; 	red =  250;
     0055 21FA                      1- 1056     	MOVIA	0xfa
                                    1- 1057     	BANKSEL	_red
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 00rr                      1- 1058     	MOVAR	_red
                                    1- 1059     	.line	689, "main.c"; 	green = 100;
     0058 2164                      1- 1060     	MOVIA	0x64
                                    1- 1061     	BANKSEL	_green
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 00rr                      1- 1062     	MOVAR	_green
                                    1- 1063     	.line	690, "main.c"; 	break;
                                    1- 1064     	MGOTO	_00549_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
     005C                           1- 1065     _00540_DS_:
                                    1- 1066     	.line	692, "main.c"; 	green = 100;
     005C 2164                      1- 1067     	MOVIA	0x64
                                    1- 1068     	BANKSEL	_green
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 00rr                      1- 1069     	MOVAR	_green
                                    1- 1070     	.line	693, "main.c"; 	blue = 250;
     005F 21FA                      1- 1071     	MOVIA	0xfa
                                    1- 1072     	BANKSEL	_blue
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 00rr                      1- 1073     	MOVAR	_blue
                                    1- 1074     	.line	694, "main.c"; 	break;
                                    1- 1075     	MGOTO	_00549_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
     0063                           1- 1076     _00541_DS_:
                                    1- 1077     	.line	696, "main.c"; 	red = 100;
     0063 2164                      1- 1078     	MOVIA	0x64
                                    1- 1079     	BANKSEL	_red
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 00rr                      1- 1080     	MOVAR	_red
                                    1- 1081     	.line	697, "main.c"; 	blue = 250;
     0066 21FA                      1- 1082     	MOVIA	0xfa
                                    1- 1083     	BANKSEL	_blue
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 00rr                      1- 1084     	MOVAR	_blue
                                    1- 1085     	.line	698, "main.c"; 	break;
                                    1- 1086     	MGOTO	_00549_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
     006A                           1- 1087     _00542_DS_:
                                    1- 1088     	.line	700, "main.c"; 	red =  100;
     006A 2164                      1- 1089     	MOVIA	0x64
                                    1- 1090     	BANKSEL	_red
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 00rr                      1- 1091     	MOVAR	_red
                                    1- 1092     	.line	701, "main.c"; 	green = 250;
     006D 21FA                      1- 1093     	MOVIA	0xfa
                                    1- 1094     	BANKSEL	_green
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 00rr                      1- 1095     	MOVAR	_green
                                    1- 1096     	.line	702, "main.c"; 	break;
                                    1- 1097     	MGOTO	_00549_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
     0071                           1- 1098     _00543_DS_:
                                    1- 1099     	.line	704, "main.c"; 	green = 250;
     0071 21FA                      1- 1100     	MOVIA	0xfa
                                    1- 1101     	BANKSEL	_green
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 00rr                      1- 1102     	MOVAR	_green
                                    1- 1103     	.line	705, "main.c"; 	blue = 100;
     0074 2164                      1- 1104     	MOVIA	0x64
                                    1- 1105     	BANKSEL	_blue
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 00rr                      1- 1106     	MOVAR	_blue
                                    1- 1107     	.line	706, "main.c"; 	break;
                                    1- 1108     	MGOTO	_00549_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
     0078                           1- 1109     _00544_DS_:
                                    1- 1110     	.line	708, "main.c"; 	red = 250;
     0078 21FA                      1- 1111     	MOVIA	0xfa
                                    1- 1112     	BANKSEL	_red
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 00rr                      1- 1113     	MOVAR	_red
                                    1- 1114     	.line	709, "main.c"; 	blue = 100;
     007B 2164                      1- 1115     	MOVIA	0x64
                                    1- 1116     	BANKSEL	_blue
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 00rr                      1- 1117     	MOVAR	_blue
                                    1- 1118     	.line	710, "main.c"; 	break;
                                    1- 1119     	MGOTO	_00549_DS_
     007E 3rrr                      3-   63 m1      LGOTO rom_address
     007F                           1- 1120     _00545_DS_:
                                    1- 1121     	.line	712, "main.c"; 	red =  50;
     007F 2132                      1- 1122     	MOVIA	0x32
                                    1- 1123     	BANKSEL	_red
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 00rr                      1- 1124     	MOVAR	_red
                                    1- 1125     	.line	713, "main.c"; 	green = 250;
     0082 21FA                      1- 1126     	MOVIA	0xfa
                                    1- 1127     	BANKSEL	_green
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 00rr                      1- 1128     	MOVAR	_green
                                    1- 1129     	.line	714, "main.c"; 	break;
                                    1- 1130     	MGOTO	_00549_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
     0086                           1- 1131     _00546_DS_:
                                    1- 1132     	.line	716, "main.c"; 	green = 250;
     0086 21FA                      1- 1133     	MOVIA	0xfa
                                    1- 1134     	BANKSEL	_green
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 00rr                      1- 1135     	MOVAR	_green
                                    1- 1136     	.line	717, "main.c"; 	blue = 50;
     0089 2132                      1- 1137     	MOVIA	0x32
                                    1- 1138     	BANKSEL	_blue
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 00rr                      1- 1139     	MOVAR	_blue
                                    1- 1140     	.line	718, "main.c"; 	break;
                                    1- 1141     	MGOTO	_00549_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
     008D                           1- 1142     _00547_DS_:
                                    1- 1143     	.line	720, "main.c"; 	red = 250;
     008D 21FA                      1- 1144     	MOVIA	0xfa
                                    1- 1145     	BANKSEL	_red
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 00rr                      1- 1146     	MOVAR	_red
                                    1- 1147     	.line	721, "main.c"; 	blue = 50;
     0090 2132                      1- 1148     	MOVIA	0x32
                                    1- 1149     	BANKSEL	_blue
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 00rr                      1- 1150     	MOVAR	_blue
     0093                           1- 1151     _00549_DS_:
                                    1- 1152     	.line	724, "main.c"; 	}
                                    1- 1153     	RETURN	
     0093 0010                      3-   40 m1      ret
                                    1- 1154     ; exit point of _colorChange
                                    1- 1156     ;***
                                    1- 1157     ;  pBlock Stats: dbName = C
                                    1- 1158     ;***
                                    1- 1159     ;has an exit
                                    1- 1160     ;functions called:
                                    1- 1161     ;   _keyRead
                                    1- 1162     ;   _keyRead
                                    1- 1163     ;1 compiler assigned register :
                                    1- 1164     ;   r0x1025
                                    1- 1165     ;; Starting pCode block
                                    1- 1166     .segment "code"; module=main, function=_keyCtr
                                    1- 1168     ;local variable name mapping:
     0000                           1- 1170     _keyCtr:
                                    1- 1171     ; 2 exit points
                                    1- 1172     	.line	638, "main.c"; 	char kclick = keyRead(0x30 & (~PORTA));
     0000 07rr                      1- 1173     	COMR	_PORTA,W
                                    1- 1174     	BANKSEL	r0x1025
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1175     	MOVAR	r0x1025
     0003 2130                      1- 1176     	MOVIA	0x30
     0004 10rr                      1- 1177     	ANDAR	r0x1025,F
     0005 01rr                      1- 1178     	MOVR	r0x1025,W
                                    1- 1179     	MCALL	_keyRead
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1180     	BANKSEL	r0x1025
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 00rr                      1- 1181     	MOVAR	r0x1025
                                    1- 1182     	.line	639, "main.c"; 	if(kclick == 1)
     0009 2401                      1- 1183     	XORIA	0x01
     000A 0903                      1- 1184     	BTRSS	STATUS,2
                                    1- 1185     	MGOTO	_00525_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1186     	.line	641, "main.c"; 	if(++workStep > 5)
                                    1- 1187     	BANKSEL	_workStep
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 05rr                      1- 1188     	INCR	_workStep,F
                                    1- 1189     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1190     ;;unsigned compare: left >= lit (0x6=6), size=1
     000E 2106                      1- 1191     	MOVIA	0x06
     000F 04rr                      1- 1192     	SUBAR	_workStep,W
     0010 0C03                      1- 1193     	BTRSC	STATUS,0
                                    1- 1194     	.line	642, "main.c"; 	workStep = 0;
     0011 02rr                      1- 1195     	CLRR	_workStep
                                    1- 1196     	.line	643, "main.c"; 	ledFlag = 1;
     0012 2101                      1- 1197     	MOVIA	0x01
                                    1- 1198     	BANKSEL	_ledFlag
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 00rr                      1- 1199     	MOVAR	_ledFlag
                                    1- 1200     	.line	644, "main.c"; 	if(workStep == 1)
                                    1- 1201     	BANKSEL	_workStep
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 01rr                      1- 1202     	MOVR	_workStep,W
     0017 2401                      1- 1203     	XORIA	0x01
     0018 0903                      1- 1204     	BTRSS	STATUS,2
                                    1- 1205     	MGOTO	_00521_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1206     	.line	646, "main.c"; 	light = 5;
     001A 2105                      1- 1207     	MOVIA	0x05
                                    1- 1208     	BANKSEL	_light
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1209     	MOVAR	_light
                                    1- 1210     	.line	647, "main.c"; 	lightValue = 25*light;
     001D 217D                      1- 1211     	MOVIA	0x7d
                                    1- 1212     	BANKSEL	_lightValue
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1213     	MOVAR	_lightValue
                                    1- 1214     	.line	648, "main.c"; 	colorStep = 0;
                                    1- 1215     	BANKSEL	_colorStep
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 02rr                      1- 1216     	CLRR	_colorStep
                                    1- 1217     	MGOTO	_00525_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023                           1- 1218     _00521_DS_:
                                    1- 1219     	.line	650, "main.c"; 	else if(workStep == 5)
                                    1- 1220     	BANKSEL	_workStep
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 01rr                      1- 1221     	MOVR	_workStep,W
     0025 2405                      1- 1222     	XORIA	0x05
     0026 0903                      1- 1223     	BTRSS	STATUS,2
                                    1- 1224     	MGOTO	_00525_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1225     	.line	652, "main.c"; 	lowTime = 600;
     0028 2158                      1- 1226     	MOVIA	0x58
                                    1- 1227     	BANKSEL	_lowTime
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 1228     	MOVAR	_lowTime
     002B 2102                      1- 1229     	MOVIA	0x02
     002C 00rr                      1- 1230     	MOVAR	(_lowTime + 1)
     002D                           1- 1231     _00525_DS_:
                                    1- 1232     	.line	656, "main.c"; 	}
                                    1- 1233     	RETURN	
     002D 0010                      3-   40 m1      ret
                                    1- 1234     ; exit point of _keyCtr
                                    1- 1236     ;***
                                    1- 1237     ;  pBlock Stats: dbName = C
                                    1- 1238     ;***
                                    1- 1239     ;has an exit
                                    1- 1240     ;functions called:
                                    1- 1241     ;   __divuchar
                                    1- 1242     ;   __divuchar
                                    1- 1243     ;   __divuchar
                                    1- 1244     ;   __divuchar
                                    1- 1245     ;2 compiler assigned registers:
                                    1- 1246     ;   r0x1024
                                    1- 1247     ;   STK00
                                    1- 1248     ;; Starting pCode block
                                    1- 1249     .segment "code"; module=main, function=_keyRead
                                    1- 1251     ;local variable name mapping:
     0000                           1- 1253     _keyRead:
                                    1- 1254     ; 2 exit points
                                    1- 1255     	.line	588, "main.c"; 	char keyRead(uint8 keyStatus)	
                                    1- 1256     	BANKSEL	r0x1024
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1257     	MOVAR	r0x1024
                                    1- 1258     	.line	590, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 1259     	MOVR	r0x1024,W
     0003 0D03                      1- 1260     	BTRSC	STATUS,2
                                    1- 1261     	MGOTO	_00509_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1262     	.line	592, "main.c"; 	keyCount++;
                                    1- 1263     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 1264     	INCR	_keyCount,F
                                    1- 1265     	.line	593, "main.c"; 	sleepCount = 0;
                                    1- 1266     	BANKSEL	_sleepCount
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1- 1267     	CLRR	_sleepCount
     0009 02rr                      1- 1268     	CLRR	(_sleepCount + 1)
                                    1- 1269     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 1270     	.line	594, "main.c"; 	if(keyCount >= 200)
     000A 21C8                      1- 1271     	MOVIA	0xc8
                                    1- 1272     	BANKSEL	_keyCount
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 04rr                      1- 1273     	SUBAR	_keyCount,W
     000D 0803                      1- 1274     	BTRSS	STATUS,0
                                    1- 1275     	MGOTO	_00510_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1276     	.line	596, "main.c"; 	keyCount = 200;
     000F 21C8                      1- 1277     	MOVIA	0xc8
     0010 00rr                      1- 1278     	MOVAR	_keyCount
                                    1- 1279     	.line	597, "main.c"; 	if(keyStatus & 0x10)
                                    1- 1280     	BANKSEL	r0x1024
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 0Arr                      1- 1281     	BTRSS	r0x1024,4
                                    1- 1282     	MGOTO	_00497_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1283     	.line	599, "main.c"; 	if(++lightValue > 250)
                                    1- 1284     	BANKSEL	_lightValue
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1- 1285     	INCR	_lightValue,F
                                    1- 1286     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1287     ;;unsigned compare: left >= lit (0xFB=251), size=1
     0016 21FB                      1- 1288     	MOVIA	0xfb
     0017 04rr                      1- 1289     	SUBAR	_lightValue,W
     0018 0803                      1- 1290     	BTRSS	STATUS,0
                                    1- 1291     	MGOTO	_00491_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1292     	.line	600, "main.c"; 	lightValue = 250;
     001A 21FA                      1- 1293     	MOVIA	0xfa
     001B 00rr                      1- 1294     	MOVAR	_lightValue
     001C                           1- 1295     _00491_DS_:
                                    1- 1296     	.line	601, "main.c"; 	light = lightValue/25;
     001C 2119                      1- 1297     	MOVIA	0x19
     001D 00rr                      1- 1298     	MOVAR	STK00
                                    1- 1299     	BANKSEL	_lightValue
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 01rr                      1- 1300     	MOVR	_lightValue,W
                                    1- 1301     	MCALL	__divuchar
     0020 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1302     	BANKSEL	_light
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 00rr                      1- 1303     	MOVAR	_light
                                    1- 1304     	MGOTO	_00498_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
     0024                           1- 1305     _00497_DS_:
                                    1- 1306     	.line	603, "main.c"; 	else if(keyStatus &= 0x20)
                                    1- 1307     	BANKSEL	r0x1024
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 0Arr                      1- 1308     	BTRSS	r0x1024,5
                                    1- 1309     	MGOTO	_00498_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1310     	.line	605, "main.c"; 	if(--lightValue < 25)
                                    1- 1311     	BANKSEL	_lightValue
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 06rr                      1- 1312     	DECR	_lightValue,F
                                    1- 1313     ;;unsigned compare: left < lit (0x19=25), size=1
     0029 2119                      1- 1314     	MOVIA	0x19
     002A 04rr                      1- 1315     	SUBAR	_lightValue,W
     002B 0C03                      1- 1316     	BTRSC	STATUS,0
                                    1- 1317     	MGOTO	_00493_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1318     	.line	606, "main.c"; 	lightValue = 25;
     002D 2119                      1- 1319     	MOVIA	0x19
     002E 00rr                      1- 1320     	MOVAR	_lightValue
     002F                           1- 1321     _00493_DS_:
                                    1- 1322     	.line	607, "main.c"; 	light = lightValue/25;
     002F 2119                      1- 1323     	MOVIA	0x19
     0030 00rr                      1- 1324     	MOVAR	STK00
                                    1- 1325     	BANKSEL	_lightValue
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1- 1326     	MOVR	_lightValue,W
                                    1- 1327     	MCALL	__divuchar
     0033 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1328     	BANKSEL	_light
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1329     	MOVAR	_light
     0036                           1- 1330     _00498_DS_:
                                    1- 1331     	.line	609, "main.c"; 	if(!longPressFlag)
                                    1- 1332     	BANKSEL	_Status
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 0Frr                      1- 1333     	BTRSC	_Status,6
                                    1- 1334     	MGOTO	_00510_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1335     	.line	611, "main.c"; 	longPressFlag = 1;
     0039 1Brr                      1- 1336     	BSR	_Status,6
                                    1- 1337     	.line	612, "main.c"; 	return 2;
     003A 2102                      1- 1338     	MOVIA	0x02
                                    1- 1339     	MGOTO	_00511_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1340     ;;unsigned compare: left < lit (0xC8=200), size=1
     003C                           1- 1341     _00509_DS_:
                                    1- 1342     	.line	618, "main.c"; 	if(keyCount >= 200)
     003C 21C8                      1- 1343     	MOVIA	0xc8
                                    1- 1344     	BANKSEL	_keyCount
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 04rr                      1- 1345     	SUBAR	_keyCount,W
     003F 0803                      1- 1346     	BTRSS	STATUS,0
                                    1- 1347     	MGOTO	_00506_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1348     	.line	620, "main.c"; 	keyCount = 0;
     0041 02rr                      1- 1349     	CLRR	_keyCount
                                    1- 1350     	.line	621, "main.c"; 	longPressFlag = 0;
                                    1- 1351     	BANKSEL	_Status
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 1Frr                      1- 1352     	BCR	_Status,6
                                    1- 1353     	.line	622, "main.c"; 	return	0;
     0044 2100                      1- 1354     	MOVIA	0x00
                                    1- 1355     	MGOTO	_00511_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1356     ;;unsigned compare: left < lit (0x8=8), size=1
     0046                           1- 1357     _00506_DS_:
                                    1- 1358     	.line	624, "main.c"; 	else if(keyCount >= 8)
     0046 2108                      1- 1359     	MOVIA	0x08
                                    1- 1360     	BANKSEL	_keyCount
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 04rr                      1- 1361     	SUBAR	_keyCount,W
     0049 0803                      1- 1362     	BTRSS	STATUS,0
                                    1- 1363     	MGOTO	_00507_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1364     	.line	626, "main.c"; 	keyCount = 0;
     004B 02rr                      1- 1365     	CLRR	_keyCount
                                    1- 1366     	.line	627, "main.c"; 	return	1;
     004C 2101                      1- 1367     	MOVIA	0x01
                                    1- 1368     	MGOTO	_00511_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
     004E                           1- 1369     _00507_DS_:
                                    1- 1370     	.line	629, "main.c"; 	keyCount = 0;
                                    1- 1371     	BANKSEL	_keyCount
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 02rr                      1- 1372     	CLRR	_keyCount
     0050                           1- 1373     _00510_DS_:
                                    1- 1374     	.line	631, "main.c"; 	return 0;
     0050 2100                      1- 1375     	MOVIA	0x00
     0051                           1- 1376     _00511_DS_:
                                    1- 1377     	.line	632, "main.c"; 	}
                                    1- 1378     	RETURN	
     0051 0010                      3-   40 m1      ret
                                    1- 1379     ; exit point of _keyRead
                                    1- 1381     ;***
                                    1- 1382     ;  pBlock Stats: dbName = C
                                    1- 1383     ;***
                                    1- 1384     ;functions called:
                                    1- 1385     ;   __mulchar
                                    1- 1386     ;   _colorChange
                                    1- 1387     ;   _colorChange
                                    1- 1388     ;   _rainbow
                                    1- 1389     ;   _rainbow
                                    1- 1390     ;   __mulchar
                                    1- 1391     ;   _colorChange
                                    1- 1392     ;   _colorChange
                                    1- 1393     ;   _rainbow
                                    1- 1394     ;   _rainbow
                                    1- 1395     ;1 compiler assigned register :
                                    1- 1396     ;   STK00
                                    1- 1397     ;; Starting pCode block
                                    1- 1398     .segment "code"; module=main, function=_workCtr
     0000                           1- 1400     _workCtr:
                                    1- 1401     ; 0 exit points
                                    1- 1402     	.line	531, "main.c"; 	if(lightValue == 0)
                                    1- 1403     	BANKSEL	_lightValue
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 1404     	MOVR	_lightValue,W
     0002 0903                      1- 1405     	BTRSS	STATUS,2
                                    1- 1406     	MGOTO	_00449_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1407     	.line	532, "main.c"; 	lightValue = 25*light;
     0004 2119                      1- 1408     	MOVIA	0x19
     0005 00rr                      1- 1409     	MOVAR	STK00
                                    1- 1410     	BANKSEL	_light
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 01rr                      1- 1411     	MOVR	_light,W
                                    1- 1412     	MCALL	__mulchar
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1413     	BANKSEL	_lightValue
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 00rr                      1- 1414     	MOVAR	_lightValue
     000B                           1- 1415     _00449_DS_:
                                    1- 1416     	.line	533, "main.c"; 	if(workStep == 0)
                                    1- 1417     	BANKSEL	_workStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 01rr                      1- 1418     	MOVR	_workStep,W
     000D 0903                      1- 1419     	BTRSS	STATUS,2
                                    1- 1420     	MGOTO	_00483_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1421     	.line	535, "main.c"; 	white = red = green = blue = 0;
                                    1- 1422     	BANKSEL	_blue
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 1423     	CLRR	_blue
                                    1- 1424     	BANKSEL	_green
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 02rr                      1- 1425     	CLRR	_green
                                    1- 1426     	BANKSEL	_red
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 02rr                      1- 1427     	CLRR	_red
                                    1- 1428     	BANKSEL	_white
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 1429     	CLRR	_white
                                    1- 1430     	.line	536, "main.c"; 	PORTB &= 0xBE;
     0017 21BE                      1- 1431     	MOVIA	0xbe
     0018 10rr                      1- 1432     	ANDAR	_PORTB,F
                                    1- 1433     	.line	537, "main.c"; 	PORTA &= 0xFC;
     0019 21FC                      1- 1434     	MOVIA	0xfc
     001A 10rr                      1- 1435     	ANDAR	_PORTA,F
                                    1- 1436     	MGOTO	_00485_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
     001C                           1- 1437     _00483_DS_:
                                    1- 1438     	.line	539, "main.c"; 	else if(workStep == 1)
                                    1- 1439     	BANKSEL	_workStep
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 01rr                      1- 1440     	MOVR	_workStep,W
     001E 2401                      1- 1441     	XORIA	0x01
     001F 0903                      1- 1442     	BTRSS	STATUS,2
                                    1- 1443     	MGOTO	_00480_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1444     	.line	541, "main.c"; 	white = lightValue;
                                    1- 1445     	BANKSEL	_lightValue
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1446     	MOVR	_lightValue,W
                                    1- 1447     	BANKSEL	_white
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 1448     	MOVAR	_white
                                    1- 1449     	.line	542, "main.c"; 	red = green = blue = 0;
                                    1- 1450     	BANKSEL	_blue
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 1451     	CLRR	_blue
                                    1- 1452     	BANKSEL	_green
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 1453     	CLRR	_green
                                    1- 1454     	BANKSEL	_red
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 02rr                      1- 1455     	CLRR	_red
                                    1- 1456     	MGOTO	_00485_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C                           1- 1457     _00480_DS_:
                                    1- 1458     	.line	544, "main.c"; 	else if(workStep == 2)
                                    1- 1459     	BANKSEL	_workStep
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 01rr                      1- 1460     	MOVR	_workStep,W
     002E 2402                      1- 1461     	XORIA	0x02
     002F 0903                      1- 1462     	BTRSS	STATUS,2
                                    1- 1463     	MGOTO	_00477_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1464     	.line	546, "main.c"; 	red = lightValue;
                                    1- 1465     	BANKSEL	_lightValue
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1- 1466     	MOVR	_lightValue,W
                                    1- 1467     	BANKSEL	_red
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 00rr                      1- 1468     	MOVAR	_red
                                    1- 1469     	.line	547, "main.c"; 	white = green = blue = 0;
                                    1- 1470     	BANKSEL	_blue
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 02rr                      1- 1471     	CLRR	_blue
                                    1- 1472     	BANKSEL	_green
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 02rr                      1- 1473     	CLRR	_green
                                    1- 1474     	BANKSEL	_white
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 02rr                      1- 1475     	CLRR	_white
                                    1- 1476     	MGOTO	_00485_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
     003C                           1- 1477     _00477_DS_:
                                    1- 1478     	.line	549, "main.c"; 	else if(workStep == 3)
                                    1- 1479     	BANKSEL	_workStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 1480     	MOVR	_workStep,W
     003E 2403                      1- 1481     	XORIA	0x03
     003F 0903                      1- 1482     	BTRSS	STATUS,2
                                    1- 1483     	MGOTO	_00474_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1484     	.line	551, "main.c"; 	green = lightValue;
                                    1- 1485     	BANKSEL	_lightValue
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 01rr                      1- 1486     	MOVR	_lightValue,W
                                    1- 1487     	BANKSEL	_green
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 00rr                      1- 1488     	MOVAR	_green
                                    1- 1489     	.line	552, "main.c"; 	white = red = blue = 0;
                                    1- 1490     	BANKSEL	_blue
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 02rr                      1- 1491     	CLRR	_blue
                                    1- 1492     	BANKSEL	_red
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 02rr                      1- 1493     	CLRR	_red
                                    1- 1494     	BANKSEL	_white
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 02rr                      1- 1495     	CLRR	_white
                                    1- 1496     	MGOTO	_00485_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C                           1- 1497     _00474_DS_:
                                    1- 1498     	.line	554, "main.c"; 	else if(workStep == 4)
                                    1- 1499     	BANKSEL	_workStep
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 01rr                      1- 1500     	MOVR	_workStep,W
     004E 2404                      1- 1501     	XORIA	0x04
     004F 0903                      1- 1502     	BTRSS	STATUS,2
                                    1- 1503     	MGOTO	_00471_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1504     	.line	556, "main.c"; 	blue = lightValue;
                                    1- 1505     	BANKSEL	_lightValue
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 01rr                      1- 1506     	MOVR	_lightValue,W
                                    1- 1507     	BANKSEL	_blue
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 00rr                      1- 1508     	MOVAR	_blue
                                    1- 1509     	.line	557, "main.c"; 	white = green = red = 0;
                                    1- 1510     	BANKSEL	_red
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 02rr                      1- 1511     	CLRR	_red
                                    1- 1512     	BANKSEL	_green
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 02rr                      1- 1513     	CLRR	_green
                                    1- 1514     	BANKSEL	_white
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 02rr                      1- 1515     	CLRR	_white
                                    1- 1516     	MGOTO	_00485_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
     005C                           1- 1517     _00471_DS_:
                                    1- 1518     	.line	559, "main.c"; 	else if(workStep == 5)
                                    1- 1519     	BANKSEL	_workStep
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 01rr                      1- 1520     	MOVR	_workStep,W
     005E 2405                      1- 1521     	XORIA	0x05
     005F 0903                      1- 1522     	BTRSS	STATUS,2
                                    1- 1523     	MGOTO	_00468_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1524     	.line	561, "main.c"; 	if(count1s == 0)
                                    1- 1525     	BANKSEL	_count1s
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1- 1526     	MOVR	_count1s,W
     0063 0903                      1- 1527     	BTRSS	STATUS,2
                                    1- 1528     	MGOTO	_00485_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1529     	.line	562, "main.c"; 	colorChange();
                                    1- 1530     	MCALL	_colorChange
     0065 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1531     	MGOTO	_00485_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
     0067                           1- 1532     _00468_DS_:
                                    1- 1533     	.line	564, "main.c"; 	else if(workStep == 6)
                                    1- 1534     	BANKSEL	_workStep
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 01rr                      1- 1535     	MOVR	_workStep,W
     0069 2406                      1- 1536     	XORIA	0x06
     006A 0903                      1- 1537     	BTRSS	STATUS,2
                                    1- 1538     	MGOTO	_00465_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1539     	.line	566, "main.c"; 	if(count1s == 0)
                                    1- 1540     	BANKSEL	_count1s
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 01rr                      1- 1541     	MOVR	_count1s,W
     006E 0903                      1- 1542     	BTRSS	STATUS,2
                                    1- 1543     	MGOTO	_00455_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1544     	.line	568, "main.c"; 	ledFlag = 1;
     0070 2101                      1- 1545     	MOVIA	0x01
                                    1- 1546     	BANKSEL	_ledFlag
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 00rr                      1- 1547     	MOVAR	_ledFlag
                                    1- 1548     	.line	569, "main.c"; 	colorChange();
                                    1- 1549     	MCALL	_colorChange
     0073 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1550     	MGOTO	_00485_DS_
     0074 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1551     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1552     ;;unsigned compare: left >= lit (0x33=51), size=1
     0075                           1- 1553     _00455_DS_:
                                    1- 1554     	.line	571, "main.c"; 	else if(count1s > 50)
     0075 2133                      1- 1555     	MOVIA	0x33
                                    1- 1556     	BANKSEL	_count1s
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 04rr                      1- 1557     	SUBAR	_count1s,W
     0078 0803                      1- 1558     	BTRSS	STATUS,0
                                    1- 1559     	MGOTO	_00485_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1560     	.line	573, "main.c"; 	ledFlag = 0;
                                    1- 1561     	BANKSEL	_ledFlag
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 02rr                      1- 1562     	CLRR	_ledFlag
                                    1- 1563     	MGOTO	_00485_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
     007D                           1- 1564     _00465_DS_:
                                    1- 1565     	.line	576, "main.c"; 	else if(workStep == 7)
                                    1- 1566     	BANKSEL	_workStep
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 01rr                      1- 1567     	MOVR	_workStep,W
     007F 2407                      1- 1568     	XORIA	0x07
     0080 0903                      1- 1569     	BTRSS	STATUS,2
                                    1- 1570     	MGOTO	_00462_DS_
     0081 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1571     	.line	578, "main.c"; 	if(count1s %2 == 0)
                                    1- 1572     	BANKSEL	_count1s
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 0Crr                      1- 1573     	BTRSC	_count1s,0
                                    1- 1574     	MGOTO	_00485_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1575     	.line	579, "main.c"; 	rainbow();
                                    1- 1576     	MCALL	_rainbow
     0085 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1577     	MGOTO	_00485_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
     0087                           1- 1578     _00462_DS_:
                                    1- 1579     	.line	581, "main.c"; 	else if(workStep == 8)
                                    1- 1580     	BANKSEL	_workStep
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 01rr                      1- 1581     	MOVR	_workStep,W
     0089 2408                      1- 1582     	XORIA	0x08
     008A 0D03                      1- 1583     	BTRSC	STATUS,2
                                    1- 1584     	.line	583, "main.c"; 	rainbow();
                                    1- 1585     	MCALL	_rainbow
     008B 2rrr                      3-   66 m1      LCALL rom_address
     008C                           1- 1586     _00485_DS_:
                                    1- 1587     	.line	585, "main.c"; 	}
                                    1- 1588     	RETURN	
     008C 0010                      3-   40 m1      ret
                                    1- 1590     ;***
                                    1- 1591     ;  pBlock Stats: dbName = C
                                    1- 1592     ;***
                                    1- 1593     ;; Starting pCode block
                                    1- 1594     .segment "code"; module=main, function=_showRGB
     0000                           1- 1596     _showRGB:
                                    1- 1597     ; 0 exit points
                                    1- 1598     	.line	484, "main.c"; 	if(ledFlag == 0)
                                    1- 1599     	BANKSEL	_ledFlag
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 1600     	MOVR	_ledFlag,W
     0002 0903                      1- 1601     	BTRSS	STATUS,2
                                    1- 1602     	MGOTO	_00428_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1603     	.line	486, "main.c"; 	PORTB &= 0xDE;
     0004 21DE                      1- 1604     	MOVIA	0xde
     0005 10rr                      1- 1605     	ANDAR	_PORTB,F
                                    1- 1606     	.line	487, "main.c"; 	PORTA &= 0xFC;
     0006 21FC                      1- 1607     	MOVIA	0xfc
     0007 10rr                      1- 1608     	ANDAR	_PORTA,F
                                    1- 1609     	.line	488, "main.c"; 	return;
                                    1- 1610     	MGOTO	_00443_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
     0009                           1- 1611     _00428_DS_:
                                    1- 1612     	.line	490, "main.c"; 	if(white > ledCount)
                                    1- 1613     	BANKSEL	_white
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 01rr                      1- 1614     	MOVR	_white,W
                                    1- 1615     	BANKSEL	_ledCount
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 04rr                      1- 1616     	SUBAR	_ledCount,W
     000D 0C03                      1- 1617     	BTRSC	STATUS,0
                                    1- 1618     	MGOTO	_00430_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1619     	.line	492, "main.c"; 	PORTB |= 0x20;
     000F 1Arr                      1- 1620     	BSR	_PORTB,5
                                    1- 1621     	MGOTO	_00431_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
     0011                           1- 1622     _00430_DS_:
                                    1- 1623     	.line	496, "main.c"; 	PORTB &= 0xDF;
     0011 1Err                      1- 1624     	BCR	_PORTB,5
     0012                           1- 1625     _00431_DS_:
                                    1- 1626     	.line	499, "main.c"; 	if(blue > ledCount)
                                    1- 1627     	BANKSEL	_blue
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 1628     	MOVR	_blue,W
                                    1- 1629     	BANKSEL	_ledCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 1630     	SUBAR	_ledCount,W
     0016 0C03                      1- 1631     	BTRSC	STATUS,0
                                    1- 1632     	MGOTO	_00433_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1633     	.line	501, "main.c"; 	PORTA |= 0x01;
     0018 18rr                      1- 1634     	BSR	_PORTA,0
                                    1- 1635     	MGOTO	_00434_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
     001A                           1- 1636     _00433_DS_:
                                    1- 1637     	.line	505, "main.c"; 	PORTA &= 0xFE;
     001A 1Crr                      1- 1638     	BCR	_PORTA,0
     001B                           1- 1639     _00434_DS_:
                                    1- 1640     	.line	508, "main.c"; 	if(green > ledCount)
                                    1- 1641     	BANKSEL	_green
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1- 1642     	MOVR	_green,W
                                    1- 1643     	BANKSEL	_ledCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 04rr                      1- 1644     	SUBAR	_ledCount,W
     001F 0C03                      1- 1645     	BTRSC	STATUS,0
                                    1- 1646     	MGOTO	_00436_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1647     	.line	510, "main.c"; 	PORTA |= 0x02;
     0021 18rr                      1- 1648     	BSR	_PORTA,1
                                    1- 1649     	MGOTO	_00437_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023                           1- 1650     _00436_DS_:
                                    1- 1651     	.line	514, "main.c"; 	PORTA &= 0xFD;
     0023 1Crr                      1- 1652     	BCR	_PORTA,1
     0024                           1- 1653     _00437_DS_:
                                    1- 1654     	.line	517, "main.c"; 	if(red > ledCount)
                                    1- 1655     	BANKSEL	_red
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1656     	MOVR	_red,W
                                    1- 1657     	BANKSEL	_ledCount
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 04rr                      1- 1658     	SUBAR	_ledCount,W
     0028 0C03                      1- 1659     	BTRSC	STATUS,0
                                    1- 1660     	MGOTO	_00439_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1661     	.line	519, "main.c"; 	PORTB |= 0x01;
     002A 18rr                      1- 1662     	BSR	_PORTB,0
                                    1- 1663     	MGOTO	_00440_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C                           1- 1664     _00439_DS_:
                                    1- 1665     	.line	523, "main.c"; 	PORTB &= 0xFE;
     002C 1Crr                      1- 1666     	BCR	_PORTB,0
     002D                           1- 1667     _00440_DS_:
                                    1- 1668     	.line	525, "main.c"; 	if(++ledCount > 254)
                                    1- 1669     	BANKSEL	_ledCount
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 05rr                      1- 1670     	INCR	_ledCount,F
                                    1- 1671     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1672     ;;unsigned compare: left >= lit (0xFF=255), size=1
     002F 21FF                      1- 1673     	MOVIA	0xff
     0030 04rr                      1- 1674     	SUBAR	_ledCount,W
     0031 0C03                      1- 1675     	BTRSC	STATUS,0
                                    1- 1676     	.line	526, "main.c"; 	ledCount = 0;
     0032 02rr                      1- 1677     	CLRR	_ledCount
     0033                           1- 1678     _00443_DS_:
                                    1- 1679     	.line	527, "main.c"; 	}
                                    1- 1680     	RETURN	
     0033 0010                      3-   40 m1      ret
                                    1- 1682     ;***
                                    1- 1683     ;  pBlock Stats: dbName = C
                                    1- 1684     ;***
                                    1- 1685     ;has an exit
                                    1- 1686     ;; Starting pCode block
                                    1- 1687     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1689     _gotoSleep:
                                    1- 1690     ; 2 exit points
                                    1- 1691     	.line	372, "main.c"; 	sleepCount = 0;
                                    1- 1692     	BANKSEL	_sleepCount
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1693     	CLRR	_sleepCount
     0002 02rr                      1- 1694     	CLRR	(_sleepCount + 1)
                                    1- 1695     	.line	373, "main.c"; 	workStep = 0;
                                    1- 1696     	BANKSEL	_workStep
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 1697     	CLRR	_workStep
                                    1- 1698     	.line	374, "main.c"; 	AWUCON = 0x34;
     0005 2134                      1- 1699     	MOVIA	0x34
     0006 00rr                      1- 1700     	MOVAR	_AWUCON
                                    1- 1701     	.line	375, "main.c"; 	BWUCON = 0X00;
     0007 02rr                      1- 1702     	CLRR	_BWUCON
                                    1- 1703     	.line	376, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0008 210B                      1- 1704     	MOVIA	0x0b
     0009 00rr                      1- 1705     	MOVAR	_INTE
                                    1- 1706     	.line	377, "main.c"; 	PCON =  C_LVR_En;	
     000A 2108                      1- 1707     	MOVIA	0x08
     000B 00rr                      1- 1708     	MOVAR	_PCON
                                    1- 1709     	.line	378, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     000C 02rr                      1- 1710     	CLRR	_INTF
                                    1- 1711     	.line	379, "main.c"; 	CLRWDT();
     000D 0002                      1- 1712     	clrwdt
                                    1- 1713     	.line	380, "main.c"; 	SLEEP();
     000E 0001                      1- 1714     	sleep
                                    1- 1715     	.line	381, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;	// Enable Timer0、Timer1、WDT overflow interrupt
     000F 210B                      1- 1716     	MOVIA	0x0b
     0010 00rr                      1- 1717     	MOVAR	_INTE
                                    1- 1718     	.line	382, "main.c"; 	INTF = 0;
     0011 02rr                      1- 1719     	CLRR	_INTF
                                    1- 1720     	.line	384, "main.c"; 	PCON = C_WDT_En;				// Enable WDT ,  Enable LVR
     0012 2180                      1- 1721     	MOVIA	0x80
     0013 00rr                      1- 1722     	MOVAR	_PCON
                                    1- 1723     	.line	385, "main.c"; 	sleepFlag = 0;
                                    1- 1724     	BANKSEL	_sleepFlag
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 02rr                      1- 1725     	CLRR	_sleepFlag
                                    1- 1726     	.line	386, "main.c"; 	bitIndex = 0;
                                    1- 1727     	BANKSEL	_bitIndex
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 02rr                      1- 1728     	CLRR	_bitIndex
                                    1- 1729     	.line	387, "main.c"; 	value = 0;
                                    1- 1730     	BANKSEL	_value
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1731     	CLRR	_value
                                    1- 1732     	.line	388, "main.c"; 	}
                                    1- 1733     	RETURN	
     001A 0010                      3-   40 m1      ret
                                    1- 1734     ; exit point of _gotoSleep
                                    1- 1736     ;***
                                    1- 1737     ;  pBlock Stats: dbName = C
                                    1- 1738     ;***
                                    1- 1739     ;has an exit
                                    1- 1740     ;functions called:
                                    1- 1741     ;   __mulchar
                                    1- 1742     ;   __mulchar
                                    1- 1743     ;   __mulchar
                                    1- 1744     ;   __mulchar
                                    1- 1745     ;1 compiler assigned register :
                                    1- 1746     ;   STK00
                                    1- 1747     ;; Starting pCode block
                                    1- 1748     .segment "code"; module=main, function=_proData
     0000                           1- 1750     _proData:
                                    1- 1751     ; 2 exit points
                                    1- 1752     	.line	287, "main.c"; 	irCode = (uint8)(~data4);
                                    1- 1753     	BANKSEL	_data4
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 1754     	COMR	_data4,W
                                    1- 1755     	BANKSEL	_irCode
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 1756     	MOVAR	_irCode
                                    1- 1757     	.line	288, "main.c"; 	if(irCode == data3)
                                    1- 1758     	BANKSEL	_data3
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 12rr                      1- 1759     	XORAR	_data3,W
     0006 0903                      1- 1760     	BTRSS	STATUS,2
                                    1- 1761     	MGOTO	_00264_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1762     	.line	290, "main.c"; 	ledFlag = 1;
     0008 2101                      1- 1763     	MOVIA	0x01
                                    1- 1764     	BANKSEL	_ledFlag
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 00rr                      1- 1765     	MOVAR	_ledFlag
                                    1- 1766     	.line	291, "main.c"; 	colorStep = 0;
                                    1- 1767     	BANKSEL	_colorStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 02rr                      1- 1768     	CLRR	_colorStep
                                    1- 1769     	.line	292, "main.c"; 	if(workStep == 0 && irCode > 1)	//遥控失效
                                    1- 1770     	BANKSEL	_workStep
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 1771     	MOVR	_workStep,W
     000F 0903                      1- 1772     	BTRSS	STATUS,2
                                    1- 1773     	MGOTO	_00242_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1774     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1775     ;;unsigned compare: left >= lit (0x2=2), size=1
     0011 2102                      1- 1776     	MOVIA	0x02
                                    1- 1777     	BANKSEL	_irCode
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1778     	SUBAR	_irCode,W
     0014 0803                      1- 1779     	BTRSS	STATUS,0
                                    1- 1780     	MGOTO	_00242_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1781     	.line	294, "main.c"; 	ReadOver = 0;
                                    1- 1782     	BANKSEL	_Status
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 1Err                      1- 1783     	BCR	_Status,4
                                    1- 1784     	.line	295, "main.c"; 	return;
                                    1- 1785     	MGOTO	_00265_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
     0019                           1- 1786     _00242_DS_:
                                    1- 1787     	.line	297, "main.c"; 	switch(irCode)
                                    1- 1788     	BANKSEL	_irCode
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1789     	MOVR	_irCode,W
     001B 0D03                      1- 1790     	BTRSC	STATUS,2
                                    1- 1791     	MGOTO	_00247_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
     001D 01rr                      1- 1792     	MOVR	_irCode,W
     001E 2401                      1- 1793     	XORIA	0x01
     001F 0D03                      1- 1794     	BTRSC	STATUS,2
                                    1- 1795     	MGOTO	_00244_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
     0021 01rr                      1- 1796     	MOVR	_irCode,W
     0022 2406                      1- 1797     	XORIA	0x06
     0023 0D03                      1- 1798     	BTRSC	STATUS,2
                                    1- 1799     	MGOTO	_00260_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025 01rr                      1- 1800     	MOVR	_irCode,W
     0026 2408                      1- 1801     	XORIA	0x08
     0027 0D03                      1- 1802     	BTRSC	STATUS,2
                                    1- 1803     	MGOTO	_00261_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
     0029 01rr                      1- 1804     	MOVR	_irCode,W
     002A 2409                      1- 1805     	XORIA	0x09
     002B 0D03                      1- 1806     	BTRSC	STATUS,2
                                    1- 1807     	MGOTO	_00251_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
     002D 01rr                      1- 1808     	MOVR	_irCode,W
     002E 240A                      1- 1809     	XORIA	0x0a
     002F 0D03                      1- 1810     	BTRSC	STATUS,2
                                    1- 1811     	MGOTO	_00254_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031 01rr                      1- 1812     	MOVR	_irCode,W
     0032 240C                      1- 1813     	XORIA	0x0c
     0033 0D03                      1- 1814     	BTRSC	STATUS,2
                                    1- 1815     	MGOTO	_00248_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
     0035 01rr                      1- 1816     	MOVR	_irCode,W
     0036 240D                      1- 1817     	XORIA	0x0d
     0037 0D03                      1- 1818     	BTRSC	STATUS,2
                                    1- 1819     	MGOTO	_00257_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
     0039 01rr                      1- 1820     	MOVR	_irCode,W
     003A 240E                      1- 1821     	XORIA	0x0e
     003B 0D03                      1- 1822     	BTRSC	STATUS,2
                                    1- 1823     	MGOTO	_00258_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 01rr                      1- 1824     	MOVR	_irCode,W
     003E 2414                      1- 1825     	XORIA	0x14
     003F 0D03                      1- 1826     	BTRSC	STATUS,2
                                    1- 1827     	MGOTO	_00259_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041 01rr                      1- 1828     	MOVR	_irCode,W
     0042 2415                      1- 1829     	XORIA	0x15
     0043 0D03                      1- 1830     	BTRSC	STATUS,2
                                    1- 1831     	MGOTO	_00255_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
     0045 01rr                      1- 1832     	MOVR	_irCode,W
     0046 2416                      1- 1833     	XORIA	0x16
     0047 0D03                      1- 1834     	BTRSC	STATUS,2
                                    1- 1835     	MGOTO	_00256_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1836     	MGOTO	_00264_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
     004A                           1- 1837     _00244_DS_:
                                    1- 1838     	.line	300, "main.c"; 	if(workStep == 0)
                                    1- 1839     	BANKSEL	_workStep
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1- 1840     	MOVR	_workStep,W
     004C 0903                      1- 1841     	BTRSS	STATUS,2
                                    1- 1842     	MGOTO	_00264_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1843     	.line	302, "main.c"; 	workStep = 1;
     004E 2101                      1- 1844     	MOVIA	0x01
     004F 00rr                      1- 1845     	MOVAR	_workStep
                                    1- 1846     	.line	303, "main.c"; 	light = 5;
     0050 2105                      1- 1847     	MOVIA	0x05
                                    1- 1848     	BANKSEL	_light
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 00rr                      1- 1849     	MOVAR	_light
                                    1- 1850     	.line	304, "main.c"; 	lightValue = 25*light;
     0053 217D                      1- 1851     	MOVIA	0x7d
                                    1- 1852     	BANKSEL	_lightValue
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 00rr                      1- 1853     	MOVAR	_lightValue
                                    1- 1854     	.line	306, "main.c"; 	break;
                                    1- 1855     	MGOTO	_00264_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
     0057                           1- 1856     _00247_DS_:
                                    1- 1857     	.line	308, "main.c"; 	workStep = 0;
                                    1- 1858     	BANKSEL	_workStep
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 02rr                      1- 1859     	CLRR	_workStep
                                    1- 1860     	.line	310, "main.c"; 	break;
                                    1- 1861     	MGOTO	_00264_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
     005A                           1- 1862     _00248_DS_:
                                    1- 1863     	.line	312, "main.c"; 	if(++light > 10)
                                    1- 1864     	BANKSEL	_light
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 05rr                      1- 1865     	INCR	_light,F
                                    1- 1866     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1867     ;;unsigned compare: left >= lit (0xB=11), size=1
     005C 210B                      1- 1868     	MOVIA	0x0b
     005D 04rr                      1- 1869     	SUBAR	_light,W
     005E 0803                      1- 1870     	BTRSS	STATUS,0
                                    1- 1871     	MGOTO	_00250_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1872     	.line	314, "main.c"; 	light = 10;
     0060 210A                      1- 1873     	MOVIA	0x0a
     0061 00rr                      1- 1874     	MOVAR	_light
     0062                           1- 1875     _00250_DS_:
                                    1- 1876     	.line	316, "main.c"; 	lightValue = 25*light;
     0062 2119                      1- 1877     	MOVIA	0x19
     0063 00rr                      1- 1878     	MOVAR	STK00
                                    1- 1879     	BANKSEL	_light
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1- 1880     	MOVR	_light,W
                                    1- 1881     	MCALL	__mulchar
     0066 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1882     	BANKSEL	_lightValue
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 00rr                      1- 1883     	MOVAR	_lightValue
                                    1- 1884     	.line	317, "main.c"; 	break;
                                    1- 1885     	MGOTO	_00264_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
     006A                           1- 1886     _00251_DS_:
                                    1- 1887     	.line	319, "main.c"; 	if(--light < 1)
                                    1- 1888     	BANKSEL	_light
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 06rr                      1- 1889     	DECR	_light,F
                                    1- 1890     ;;unsigned compare: left < lit (0x1=1), size=1
     006C 2101                      1- 1891     	MOVIA	0x01
     006D 04rr                      1- 1892     	SUBAR	_light,W
     006E 0C03                      1- 1893     	BTRSC	STATUS,0
                                    1- 1894     	MGOTO	_00253_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1895     	.line	321, "main.c"; 	light = 1;
     0070 2101                      1- 1896     	MOVIA	0x01
     0071 00rr                      1- 1897     	MOVAR	_light
     0072                           1- 1898     _00253_DS_:
                                    1- 1899     	.line	323, "main.c"; 	lightValue = 25*light;
     0072 2119                      1- 1900     	MOVIA	0x19
     0073 00rr                      1- 1901     	MOVAR	STK00
                                    1- 1902     	BANKSEL	_light
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 01rr                      1- 1903     	MOVR	_light,W
                                    1- 1904     	MCALL	__mulchar
     0076 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1905     	BANKSEL	_lightValue
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 00rr                      1- 1906     	MOVAR	_lightValue
                                    1- 1907     	.line	324, "main.c"; 	break;
                                    1- 1908     	MGOTO	_00264_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
     007A                           1- 1909     _00254_DS_:
                                    1- 1910     	.line	326, "main.c"; 	workStep = 1;
     007A 2101                      1- 1911     	MOVIA	0x01
                                    1- 1912     	BANKSEL	_workStep
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 00rr                      1- 1913     	MOVAR	_workStep
                                    1- 1914     	.line	327, "main.c"; 	break;
                                    1- 1915     	MGOTO	_00264_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
     007E                           1- 1916     _00255_DS_:
                                    1- 1917     	.line	329, "main.c"; 	workStep = 2;
     007E 2102                      1- 1918     	MOVIA	0x02
                                    1- 1919     	BANKSEL	_workStep
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 00rr                      1- 1920     	MOVAR	_workStep
                                    1- 1921     	.line	330, "main.c"; 	break;
                                    1- 1922     	MGOTO	_00264_DS_
     0081 3rrr                      3-   63 m1      LGOTO rom_address
     0082                           1- 1923     _00256_DS_:
                                    1- 1924     	.line	332, "main.c"; 	workStep = 3;
     0082 2103                      1- 1925     	MOVIA	0x03
                                    1- 1926     	BANKSEL	_workStep
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 00rr                      1- 1927     	MOVAR	_workStep
                                    1- 1928     	.line	333, "main.c"; 	break;
                                    1- 1929     	MGOTO	_00264_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
     0086                           1- 1930     _00257_DS_:
                                    1- 1931     	.line	335, "main.c"; 	workStep = 4;
     0086 2104                      1- 1932     	MOVIA	0x04
                                    1- 1933     	BANKSEL	_workStep
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 00rr                      1- 1934     	MOVAR	_workStep
                                    1- 1935     	.line	336, "main.c"; 	break;
                                    1- 1936     	MGOTO	_00264_DS_
     0089 3rrr                      3-   63 m1      LGOTO rom_address
     008A                           1- 1937     _00258_DS_:
                                    1- 1938     	.line	338, "main.c"; 	workStep = 5;
     008A 2105                      1- 1939     	MOVIA	0x05
                                    1- 1940     	BANKSEL	_workStep
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 00rr                      1- 1941     	MOVAR	_workStep
                                    1- 1942     	.line	339, "main.c"; 	lowTime = 600;
     008D 2158                      1- 1943     	MOVIA	0x58
                                    1- 1944     	BANKSEL	_lowTime
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 00rr                      1- 1945     	MOVAR	_lowTime
     0090 2102                      1- 1946     	MOVIA	0x02
     0091 00rr                      1- 1947     	MOVAR	(_lowTime + 1)
                                    1- 1948     	.line	340, "main.c"; 	break;
                                    1- 1949     	MGOTO	_00264_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
     0093                           1- 1950     _00259_DS_:
                                    1- 1951     	.line	342, "main.c"; 	workStep = 6;
     0093 2106                      1- 1952     	MOVIA	0x06
                                    1- 1953     	BANKSEL	_workStep
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 00rr                      1- 1954     	MOVAR	_workStep
                                    1- 1955     	.line	343, "main.c"; 	lowTime = 1800;
     0096 2108                      1- 1956     	MOVIA	0x08
                                    1- 1957     	BANKSEL	_lowTime
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 00rr                      1- 1958     	MOVAR	_lowTime
     0099 2107                      1- 1959     	MOVIA	0x07
     009A 00rr                      1- 1960     	MOVAR	(_lowTime + 1)
                                    1- 1961     	.line	344, "main.c"; 	break;
                                    1- 1962     	MGOTO	_00264_DS_
     009B 3rrr                      3-   63 m1      LGOTO rom_address
     009C                           1- 1963     _00260_DS_:
                                    1- 1964     	.line	346, "main.c"; 	colorStep = 1;
     009C 2101                      1- 1965     	MOVIA	0x01
                                    1- 1966     	BANKSEL	_colorStep
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 00rr                      1- 1967     	MOVAR	_colorStep
                                    1- 1968     	.line	347, "main.c"; 	white = red = green = blue = 0;
                                    1- 1969     	BANKSEL	_blue
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 02rr                      1- 1970     	CLRR	_blue
                                    1- 1971     	BANKSEL	_green
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 02rr                      1- 1972     	CLRR	_green
                                    1- 1973     	BANKSEL	_white
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 02rr                      1- 1974     	CLRR	_white
                                    1- 1975     	.line	348, "main.c"; 	red = 250;
     00A5 21FA                      1- 1976     	MOVIA	0xfa
                                    1- 1977     	BANKSEL	_red
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 00rr                      1- 1978     	MOVAR	_red
                                    1- 1979     	.line	349, "main.c"; 	workStep = 7;
     00A8 2107                      1- 1980     	MOVIA	0x07
                                    1- 1981     	BANKSEL	_workStep
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 00rr                      1- 1982     	MOVAR	_workStep
                                    1- 1983     	.line	350, "main.c"; 	lowTime = 3600;
     00AB 2110                      1- 1984     	MOVIA	0x10
                                    1- 1985     	BANKSEL	_lowTime
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 00rr                      1- 1986     	MOVAR	_lowTime
     00AE 210E                      1- 1987     	MOVIA	0x0e
     00AF 00rr                      1- 1988     	MOVAR	(_lowTime + 1)
                                    1- 1989     	.line	351, "main.c"; 	break;
                                    1- 1990     	MGOTO	_00264_DS_
     00B0 3rrr                      3-   63 m1      LGOTO rom_address
     00B1                           1- 1991     _00261_DS_:
                                    1- 1992     	.line	353, "main.c"; 	colorStep = 1;
     00B1 2101                      1- 1993     	MOVIA	0x01
                                    1- 1994     	BANKSEL	_colorStep
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 00rr                      1- 1995     	MOVAR	_colorStep
                                    1- 1996     	.line	354, "main.c"; 	white = red = green = blue = 0;
                                    1- 1997     	BANKSEL	_blue
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 02rr                      1- 1998     	CLRR	_blue
                                    1- 1999     	BANKSEL	_green
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 02rr                      1- 2000     	CLRR	_green
                                    1- 2001     	BANKSEL	_white
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 02rr                      1- 2002     	CLRR	_white
                                    1- 2003     	.line	355, "main.c"; 	red = 250;
     00BA 21FA                      1- 2004     	MOVIA	0xfa
                                    1- 2005     	BANKSEL	_red
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 00rr                      1- 2006     	MOVAR	_red
                                    1- 2007     	.line	356, "main.c"; 	workStep = 8;
     00BD 2108                      1- 2008     	MOVIA	0x08
                                    1- 2009     	BANKSEL	_workStep
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 00rr                      1- 2010     	MOVAR	_workStep
                                    1- 2011     	.line	357, "main.c"; 	lowTime = 7200;
     00C0 2120                      1- 2012     	MOVIA	0x20
                                    1- 2013     	BANKSEL	_lowTime
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 00rr                      1- 2014     	MOVAR	_lowTime
     00C3 211C                      1- 2015     	MOVIA	0x1c
     00C4 00rr                      1- 2016     	MOVAR	(_lowTime + 1)
     00C5                           1- 2017     _00264_DS_:
                                    1- 2018     	.line	361, "main.c"; 	ReadOver = 0;
                                    1- 2019     	BANKSEL	_Status
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 1Err                      1- 2020     	BCR	_Status,4
     00C7                           1- 2021     _00265_DS_:
                                    1- 2022     	.line	362, "main.c"; 	}
                                    1- 2023     	RETURN	
     00C7 0010                      3-   40 m1      ret
                                    1- 2024     ; exit point of _proData
                                    1- 2026     ;***
                                    1- 2027     ;  pBlock Stats: dbName = C
                                    1- 2028     ;***
                                    1- 2029     ;has an exit
                                    1- 2030     ;1 compiler assigned register :
                                    1- 2031     ;   r0x1026
                                    1- 2032     ;; Starting pCode block
                                    1- 2033     .segment "code"; module=main, function=_GetOneByte
                                    1- 2035     ;local variable name mapping:
     0000                           1- 2037     _GetOneByte:
                                    1- 2038     ; 2 exit points
                                    1- 2039     	.line	240, "main.c"; 	void GetOneByte(uint8 bitNub)
                                    1- 2040     	BANKSEL	r0x1026
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2041     	MOVAR	r0x1026
                                    1- 2042     	.line	242, "main.c"; 	if(RemoteStart)
                                    1- 2043     	BANKSEL	_Status
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 09rr                      1- 2044     	BTRSS	_Status,3
                                    1- 2045     	MGOTO	_00236_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2046     	.line	244, "main.c"; 	if(bitIndex == 0)
                                    1- 2047     	BANKSEL	_bitIndex
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 01rr                      1- 2048     	MOVR	_bitIndex,W
     0007 0903                      1- 2049     	BTRSS	STATUS,2
                                    1- 2050     	MGOTO	_00220_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2051     	.line	246, "main.c"; 	bitIndex = 0;
     0009 02rr                      1- 2052     	CLRR	_bitIndex
                                    1- 2053     	.line	247, "main.c"; 	value = 0;
                                    1- 2054     	BANKSEL	_value
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 02rr                      1- 2055     	CLRR	_value
                                    1- 2056     	.line	248, "main.c"; 	data1 = data2 = data3 = data4 = 0;
                                    1- 2057     	BANKSEL	_data4
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 02rr                      1- 2058     	CLRR	_data4
                                    1- 2059     	BANKSEL	_data3
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1- 2060     	CLRR	_data3
                                    1- 2061     	BANKSEL	_data2
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 02rr                      1- 2062     	CLRR	_data2
                                    1- 2063     	BANKSEL	_data1
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 02rr                      1- 2064     	CLRR	_data1
     0014                           1- 2065     _00220_DS_:
                                    1- 2066     	.line	250, "main.c"; 	++bitIndex;
                                    1- 2067     	BANKSEL	_bitIndex
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1- 2068     	INCR	_bitIndex,F
                                    1- 2069     	.line	251, "main.c"; 	if(bitNub)
                                    1- 2070     	BANKSEL	r0x1026
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 2071     	MOVR	r0x1026,W
     0018 0D03                      1- 2072     	BTRSC	STATUS,2
                                    1- 2073     	MGOTO	_00004_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2074     	.line	253, "main.c"; 	value |= 0x80;
                                    1- 2075     	BANKSEL	_value
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 1Brr                      1- 2076     	BSR	_value,7
     001C                           1- 2077     _00004_DS_:
                                    1- 2078     	.line	256, "main.c"; 	if(bitIndex == 8)
                                    1- 2079     	BANKSEL	_bitIndex
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 01rr                      1- 2080     	MOVR	_bitIndex,W
     001E 2408                      1- 2081     	XORIA	0x08
     001F 0903                      1- 2082     	BTRSS	STATUS,2
                                    1- 2083     	MGOTO	_00232_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2084     	.line	258, "main.c"; 	data1 = value;
                                    1- 2085     	BANKSEL	_value
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 2086     	MOVR	_value,W
                                    1- 2087     	BANKSEL	_data1
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 2088     	MOVAR	_data1
                                    1- 2089     	MGOTO	_00233_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
     0026                           1- 2090     _00232_DS_:
                                    1- 2091     	.line	260, "main.c"; 	else if(bitIndex == 16)
                                    1- 2092     	BANKSEL	_bitIndex
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 2093     	MOVR	_bitIndex,W
     0028 2410                      1- 2094     	XORIA	0x10
     0029 0903                      1- 2095     	BTRSS	STATUS,2
                                    1- 2096     	MGOTO	_00229_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2097     	.line	262, "main.c"; 	data2 = value;
                                    1- 2098     	BANKSEL	_value
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1- 2099     	MOVR	_value,W
                                    1- 2100     	BANKSEL	_data2
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 00rr                      1- 2101     	MOVAR	_data2
                                    1- 2102     	MGOTO	_00233_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
     0030                           1- 2103     _00229_DS_:
                                    1- 2104     	.line	265, "main.c"; 	else if(bitIndex == 24)
                                    1- 2105     	BANKSEL	_bitIndex
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1- 2106     	MOVR	_bitIndex,W
     0032 2418                      1- 2107     	XORIA	0x18
     0033 0903                      1- 2108     	BTRSS	STATUS,2
                                    1- 2109     	MGOTO	_00226_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2110     	.line	267, "main.c"; 	data3 = value;
                                    1- 2111     	BANKSEL	_value
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 01rr                      1- 2112     	MOVR	_value,W
                                    1- 2113     	BANKSEL	_data3
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 00rr                      1- 2114     	MOVAR	_data3
                                    1- 2115     	MGOTO	_00233_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
     003A                           1- 2116     _00226_DS_:
                                    1- 2117     	.line	270, "main.c"; 	else if(bitIndex == 32)
                                    1- 2118     	BANKSEL	_bitIndex
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1- 2119     	MOVR	_bitIndex,W
     003C 2420                      1- 2120     	XORIA	0x20
     003D 0903                      1- 2121     	BTRSS	STATUS,2
                                    1- 2122     	MGOTO	_00233_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2123     	.line	272, "main.c"; 	data4 = value;
                                    1- 2124     	BANKSEL	_value
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 01rr                      1- 2125     	MOVR	_value,W
                                    1- 2126     	BANKSEL	_data4
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 00rr                      1- 2127     	MOVAR	_data4
                                    1- 2128     	.line	273, "main.c"; 	ReadOver = 1;
                                    1- 2129     	BANKSEL	_Status
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 1Arr                      1- 2130     	BSR	_Status,4
                                    1- 2131     	.line	274, "main.c"; 	OneCode = 0;
     0045 1Crr                      1- 2132     	BCR	_Status,1
                                    1- 2133     	.line	275, "main.c"; 	ZeroCode = 0;
     0046 1Crr                      1- 2134     	BCR	_Status,0
                                    1- 2135     	.line	276, "main.c"; 	RemoteStart = 0;
     0047 1Drr                      1- 2136     	BCR	_Status,3
                                    1- 2137     	.line	277, "main.c"; 	bitIndex = 0;
                                    1- 2138     	BANKSEL	_bitIndex
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 02rr                      1- 2139     	CLRR	_bitIndex
                                    1- 2140     	.line	278, "main.c"; 	sleepCount = 0;
                                    1- 2141     	BANKSEL	_sleepCount
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 02rr                      1- 2142     	CLRR	_sleepCount
     004C 02rr                      1- 2143     	CLRR	(_sleepCount + 1)
                                    1- 2144     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=1, sign=0, same=1, offr=0
     004D                           1- 2145     _00233_DS_:
                                    1- 2146     	.line	281, "main.c"; 	value = value >> 1;
     004D 1C03                      1- 2147     	BCR	STATUS,0
                                    1- 2148     	BANKSEL	_value
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 13rr                      1- 2149     	RRR	_value,F
     0050                           1- 2150     _00236_DS_:
                                    1- 2151     	.line	283, "main.c"; 	}
                                    1- 2152     	RETURN	
     0050 0010                      3-   40 m1      ret
                                    1- 2153     ; exit point of _GetOneByte
                                    1- 2155     ;***
                                    1- 2156     ;  pBlock Stats: dbName = C
                                    1- 2157     ;***
                                    1- 2158     ;has an exit
                                    1- 2159     ;functions called:
                                    1- 2160     ;   _cleanData
                                    1- 2161     ;   _cleanData
                                    1- 2162     ;4 compiler assigned registers:
                                    1- 2163     ;   r0x1026
                                    1- 2164     ;   r0x1027
                                    1- 2165     ;   r0x1028
                                    1- 2166     ;   r0x1029
                                    1- 2167     ;; Starting pCode block
                                    1- 2168     .segment "code"; module=main, function=_proLow
     0000                           1- 2170     _proLow:
                                    1- 2171     ; 2 exit points
                                    1- 2172     	.line	196, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2173     	CLRA	
     0001 00rr                      1- 2174     	SFUN	_T1CR1
                                    1- 2175     	.line	197, "main.c"; 	T1Counter = accTimeH;
                                    1- 2176     	BANKSEL	_accTimeH
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 01rr                      1- 2177     	MOVR	_accTimeH,W
                                    1- 2178     	BANKSEL	_T1Counter
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 00rr                      1- 2179     	MOVAR	_T1Counter
     0006 02rr                      1- 2180     	CLRR	(_T1Counter + 1)
                                    1- 2181     	.line	198, "main.c"; 	T1Counter <<= 8;
     0007 01rr                      1- 2182     	MOVR	_T1Counter,W
     0008 00rr                      1- 2183     	MOVAR	(_T1Counter + 1)
     0009 02rr                      1- 2184     	CLRR	_T1Counter
                                    1- 2185     	.line	199, "main.c"; 	T1Counter += (0xFF - TMR1);
     000A 00rr                      1- 2186     	SFUNR	_TMR1
                                    1- 2187     ;;3	MOVAR	r0x1026
                                    1- 2188     	BANKSEL	r0x1027
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1- 2189     	MOVAR	r0x1027
                                    1- 2190     	BANKSEL	r0x1028
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 2191     	CLRR	r0x1028
                                    1- 2192     	BANKSEL	r0x1027
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 2193     	MOVR	r0x1027,W
     0011 27FF                      1- 2194     	SUBIA	0xff
                                    1- 2195     	BANKSEL	r0x1026
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 00rr                      1- 2196     	MOVAR	r0x1026
     0014 2100                      1- 2197     	MOVIA	0x00
     0015 0C03                      1- 2198     	BTRSC	STATUS,0
                                    1- 2199     	MGOTO	_00005_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2200     	BANKSEL	r0x1028
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 05rr                      1- 2201     	INCR	r0x1028,W
     0019                           1- 2202     _00005_DS_:
     0019 2700                      1- 2203     	SUBIA	0x00
                                    1- 2204     	BANKSEL	r0x1028
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 00rr                      1- 2205     	MOVAR	r0x1028
                                    1- 2206     ;;1	MOVAR	r0x1029
                                    1- 2207     	BANKSEL	r0x1026
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 01rr                      1- 2208     	MOVR	r0x1026,W
                                    1- 2209     	BANKSEL	r0x1027
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 2210     	MOVAR	r0x1027
                                    1- 2211     	BANKSEL	_T1Counter
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 03rr                      1- 2212     	ADDAR	_T1Counter,F
                                    1- 2213     	BANKSEL	r0x1028
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 2214     	MOVR	r0x1028,W
     0024 0C03                      1- 2215     	BTRSC	STATUS,0
     0025 05rr                      1- 2216     	INCR	r0x1028,W
     0026 0D03                      1- 2217     	BTRSC	STATUS,2
                                    1- 2218     	MGOTO	_00006_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2219     	BANKSEL	_T1Counter
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 03rr                      1- 2220     	ADDAR	(_T1Counter + 1),F
     002A                           1- 2221     _00006_DS_:
                                    1- 2222     	.line	200, "main.c"; 	accTimeH = 0;
                                    1- 2223     	BANKSEL	_accTimeH
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 02rr                      1- 2224     	CLRR	_accTimeH
                                    1- 2225     	.line	201, "main.c"; 	TMR1 = 0xFF;
     002C 21FF                      1- 2226     	MOVIA	0xff
     002D 00rr                      1- 2227     	SFUN	_TMR1
                                    1- 2228     	.line	202, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload; 
     002E 2103                      1- 2229     	MOVIA	0x03
     002F 00rr                      1- 2230     	SFUN	_T1CR1
                                    1- 2231     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2232     ;;unsigned compare: left >= lit (0x1F7=503), size=2
                                    1- 2233     	.line	203, "main.c"; 	if((T1Counter > (HeadCont_L - (FaultTolerant*FaultTolerantX)))&&(T1Counter < (HeadCont_L + (FaultTolerant*FaultTolerantX))))
     0030 2101                      1- 2234     	MOVIA	0x01
                                    1- 2235     	BANKSEL	_T1Counter
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 04rr                      1- 2236     	SUBAR	(_T1Counter + 1),W
     0033 0903                      1- 2237     	BTRSS	STATUS,2
                                    1- 2238     	MGOTO	_00211_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
     0035 21F7                      1- 2239     	MOVIA	0xf7
     0036 04rr                      1- 2240     	SUBAR	_T1Counter,W
     0037                           1- 2241     _00211_DS_:
     0037 0803                      1- 2242     	BTRSS	STATUS,0
                                    1- 2243     	MGOTO	_00191_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2244     ;;unsigned compare: left < lit (0x26E=622), size=2
     0039 2102                      1- 2245     	MOVIA	0x02
                                    1- 2246     	BANKSEL	_T1Counter
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 04rr                      1- 2247     	SUBAR	(_T1Counter + 1),W
     003C 0903                      1- 2248     	BTRSS	STATUS,2
                                    1- 2249     	MGOTO	_00212_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
     003E 216E                      1- 2250     	MOVIA	0x6e
     003F 04rr                      1- 2251     	SUBAR	_T1Counter,W
     0040                           1- 2252     _00212_DS_:
     0040 0C03                      1- 2253     	BTRSC	STATUS,0
                                    1- 2254     	MGOTO	_00191_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2255     	.line	205, "main.c"; 	RemoteStart = 0;       //遥控数据头
                                    1- 2256     	BANKSEL	_Status
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 1Drr                      1- 2257     	BCR	_Status,3
                                    1- 2258     	.line	206, "main.c"; 	MaybeRemoteStart = 1;		//疑似遥控数据头
     0044 19rr                      1- 2259     	BSR	_Status,2
                                    1- 2260     	.line	207, "main.c"; 	sleepFlag = 0;
                                    1- 2261     	BANKSEL	_sleepFlag
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 02rr                      1- 2262     	CLRR	_sleepFlag
                                    1- 2263     	.line	208, "main.c"; 	bitIndex = 0;
                                    1- 2264     	BANKSEL	_bitIndex
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 02rr                      1- 2265     	CLRR	_bitIndex
                                    1- 2266     	.line	209, "main.c"; 	OneCode = 0;
                                    1- 2267     	BANKSEL	_Status
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 1Crr                      1- 2268     	BCR	_Status,1
                                    1- 2269     	.line	210, "main.c"; 	ZeroCode = 0;
     004B 1Crr                      1- 2270     	BCR	_Status,0
                                    1- 2271     	.line	211, "main.c"; 	ReadOver = 0;
     004C 1Err                      1- 2272     	BCR	_Status,4
                                    1- 2273     	.line	211, "main.c"; 	}
                                    1- 2274     	MGOTO	_00194_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
     004E                           1- 2275     _00191_DS_:
                                    1- 2276     	.line	213, "main.c"; 	else if(RemoteStart)
                                    1- 2277     	BANKSEL	_Status
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 09rr                      1- 2278     	BTRSS	_Status,3
                                    1- 2279     	MGOTO	_00194_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2280     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2281     ;;unsigned compare: left >= lit (0x1B=27), size=2
                                    1- 2282     	.line	224, "main.c"; 	if((T1Counter >(OneCode_L - FaultTolerant))&&(T1Counter < (OneCode_L + FaultTolerant)))
     0051 2100                      1- 2283     	MOVIA	0x00
                                    1- 2284     	BANKSEL	_T1Counter
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 04rr                      1- 2285     	SUBAR	(_T1Counter + 1),W
     0054 0903                      1- 2286     	BTRSS	STATUS,2
                                    1- 2287     	MGOTO	_00213_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
     0056 211B                      1- 2288     	MOVIA	0x1b
     0057 04rr                      1- 2289     	SUBAR	_T1Counter,W
     0058                           1- 2290     _00213_DS_:
     0058 0803                      1- 2291     	BTRSS	STATUS,0
                                    1- 2292     	MGOTO	_00185_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2293     ;;unsigned compare: left < lit (0x2E=46), size=2
     005A 2100                      1- 2294     	MOVIA	0x00
                                    1- 2295     	BANKSEL	_T1Counter
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 04rr                      1- 2296     	SUBAR	(_T1Counter + 1),W
     005D 0903                      1- 2297     	BTRSS	STATUS,2
                                    1- 2298     	MGOTO	_00214_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
     005F 212E                      1- 2299     	MOVIA	0x2e
     0060 04rr                      1- 2300     	SUBAR	_T1Counter,W
     0061                           1- 2301     _00214_DS_:
     0061 0C03                      1- 2302     	BTRSC	STATUS,0
                                    1- 2303     	MGOTO	_00185_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2304     	.line	227, "main.c"; 	NOP();
     0063 0000                      1- 2305     	nop
                                    1- 2306     	MGOTO	_00194_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
     0065                           1- 2307     _00185_DS_:
                                    1- 2308     	.line	232, "main.c"; 	cleanData();
                                    1- 2309     	MCALL	_cleanData
     0065 2rrr                      3-   66 m1      LCALL rom_address
     0066                           1- 2310     _00194_DS_:
                                    1- 2311     	.line	237, "main.c"; 	}
                                    1- 2312     	RETURN	
     0066 0010                      3-   40 m1      ret
                                    1- 2313     ; exit point of _proLow
                                    1- 2315     ;***
                                    1- 2316     ;  pBlock Stats: dbName = C
                                    1- 2317     ;***
                                    1- 2318     ;has an exit
                                    1- 2319     ;functions called:
                                    1- 2320     ;   _GetOneByte
                                    1- 2321     ;   _GetOneByte
                                    1- 2322     ;   _GetOneByte
                                    1- 2323     ;   _GetOneByte
                                    1- 2324     ;4 compiler assigned registers:
                                    1- 2325     ;   r0x1027
                                    1- 2326     ;   r0x1028
                                    1- 2327     ;   r0x1029
                                    1- 2328     ;   r0x102A
                                    1- 2329     ;; Starting pCode block
                                    1- 2330     .segment "code"; module=main, function=_proHight
     0000                           1- 2332     _proHight:
                                    1- 2333     ; 2 exit points
                                    1- 2334     	.line	129, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2335     	CLRA	
     0001 00rr                      1- 2336     	SFUN	_T1CR1
                                    1- 2337     	.line	130, "main.c"; 	T1Counter = accTimeH;
                                    1- 2338     	BANKSEL	_accTimeH
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 01rr                      1- 2339     	MOVR	_accTimeH,W
                                    1- 2340     	BANKSEL	_T1Counter
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 00rr                      1- 2341     	MOVAR	_T1Counter
     0006 02rr                      1- 2342     	CLRR	(_T1Counter + 1)
                                    1- 2343     	.line	131, "main.c"; 	T1Counter <<= 8;
     0007 01rr                      1- 2344     	MOVR	_T1Counter,W
     0008 00rr                      1- 2345     	MOVAR	(_T1Counter + 1)
     0009 02rr                      1- 2346     	CLRR	_T1Counter
                                    1- 2347     	.line	132, "main.c"; 	T1Counter += (0xFF - TMR1);
     000A 00rr                      1- 2348     	SFUNR	_TMR1
                                    1- 2349     ;;3	MOVAR	r0x1027
                                    1- 2350     	BANKSEL	r0x1028
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1- 2351     	MOVAR	r0x1028
                                    1- 2352     	BANKSEL	r0x1029
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 2353     	CLRR	r0x1029
                                    1- 2354     	BANKSEL	r0x1028
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 2355     	MOVR	r0x1028,W
     0011 27FF                      1- 2356     	SUBIA	0xff
                                    1- 2357     	BANKSEL	r0x1027
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 00rr                      1- 2358     	MOVAR	r0x1027
     0014 2100                      1- 2359     	MOVIA	0x00
     0015 0C03                      1- 2360     	BTRSC	STATUS,0
                                    1- 2361     	MGOTO	_00007_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2362     	BANKSEL	r0x1029
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 05rr                      1- 2363     	INCR	r0x1029,W
     0019                           1- 2364     _00007_DS_:
     0019 2700                      1- 2365     	SUBIA	0x00
                                    1- 2366     	BANKSEL	r0x1029
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 00rr                      1- 2367     	MOVAR	r0x1029
                                    1- 2368     ;;1	MOVAR	r0x102A
                                    1- 2369     	BANKSEL	r0x1027
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 01rr                      1- 2370     	MOVR	r0x1027,W
                                    1- 2371     	BANKSEL	r0x1028
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 2372     	MOVAR	r0x1028
                                    1- 2373     	BANKSEL	_T1Counter
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 03rr                      1- 2374     	ADDAR	_T1Counter,F
                                    1- 2375     	BANKSEL	r0x1029
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 2376     	MOVR	r0x1029,W
     0024 0C03                      1- 2377     	BTRSC	STATUS,0
     0025 05rr                      1- 2378     	INCR	r0x1029,W
     0026 0D03                      1- 2379     	BTRSC	STATUS,2
                                    1- 2380     	MGOTO	_00008_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2381     	BANKSEL	_T1Counter
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 03rr                      1- 2382     	ADDAR	(_T1Counter + 1),F
     002A                           1- 2383     _00008_DS_:
                                    1- 2384     	.line	133, "main.c"; 	accTimeH = 0;
                                    1- 2385     	BANKSEL	_accTimeH
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 02rr                      1- 2386     	CLRR	_accTimeH
                                    1- 2387     	.line	134, "main.c"; 	TMRH = 0x00;
     002C 02rr                      1- 2388     	CLRR	_TMRH
                                    1- 2389     	.line	135, "main.c"; 	TMR1 = 0xFF;
     002D 21FF                      1- 2390     	MOVIA	0xff
     002E 00rr                      1- 2391     	SFUN	_TMR1
                                    1- 2392     	.line	136, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload;
     002F 2103                      1- 2393     	MOVIA	0x03
     0030 00rr                      1- 2394     	SFUN	_T1CR1
                                    1- 2395     	.line	137, "main.c"; 	if(MaybeRemoteStart && T1Counter > (HeadCont_H - (FaultTolerant*FaultTolerantX)) && T1Counter < (HeadCont_H + (FaultTolerant*FaultTolerantX)))
                                    1- 2396     	BANKSEL	_Status
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 09rr                      1- 2397     	BTRSS	_Status,2
                                    1- 2398     	MGOTO	_00138_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2399     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2400     ;;unsigned compare: left >= lit (0xDE=222), size=2
     0034 2100                      1- 2401     	MOVIA	0x00
                                    1- 2402     	BANKSEL	_T1Counter
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 04rr                      1- 2403     	SUBAR	(_T1Counter + 1),W
     0037 0903                      1- 2404     	BTRSS	STATUS,2
                                    1- 2405     	MGOTO	_00174_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
     0039 21DE                      1- 2406     	MOVIA	0xde
     003A 04rr                      1- 2407     	SUBAR	_T1Counter,W
     003B                           1- 2408     _00174_DS_:
     003B 0803                      1- 2409     	BTRSS	STATUS,0
                                    1- 2410     	MGOTO	_00138_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2411     ;;unsigned compare: left < lit (0x155=341), size=2
     003D 2101                      1- 2412     	MOVIA	0x01
                                    1- 2413     	BANKSEL	_T1Counter
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 04rr                      1- 2414     	SUBAR	(_T1Counter + 1),W
     0040 0903                      1- 2415     	BTRSS	STATUS,2
                                    1- 2416     	MGOTO	_00175_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042 2155                      1- 2417     	MOVIA	0x55
     0043 04rr                      1- 2418     	SUBAR	_T1Counter,W
     0044                           1- 2419     _00175_DS_:
     0044 0C03                      1- 2420     	BTRSC	STATUS,0
                                    1- 2421     	MGOTO	_00138_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2422     	.line	139, "main.c"; 	MaybeRemoteStart = 0;       //遥控数据头
                                    1- 2423     	BANKSEL	_Status
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 1Drr                      1- 2424     	BCR	_Status,2
                                    1- 2425     	.line	140, "main.c"; 	RemoteStart = 1;
     0048 19rr                      1- 2426     	BSR	_Status,3
                                    1- 2427     	.line	141, "main.c"; 	sleepFlag = 0;
                                    1- 2428     	BANKSEL	_sleepFlag
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 02rr                      1- 2429     	CLRR	_sleepFlag
                                    1- 2430     	.line	142, "main.c"; 	bitIndex = 0;
                                    1- 2431     	BANKSEL	_bitIndex
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 02rr                      1- 2432     	CLRR	_bitIndex
                                    1- 2433     	.line	143, "main.c"; 	OneCode = 0;
                                    1- 2434     	BANKSEL	_Status
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 1Crr                      1- 2435     	BCR	_Status,1
                                    1- 2436     	.line	144, "main.c"; 	ZeroCode = 0;
     004F 1Crr                      1- 2437     	BCR	_Status,0
                                    1- 2438     	.line	145, "main.c"; 	ReadOver = 0;
     0050 1Err                      1- 2439     	BCR	_Status,4
                                    1- 2440     	MGOTO	_00142_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
     0052                           1- 2441     _00138_DS_:
                                    1- 2442     	.line	147, "main.c"; 	else if(RemoteStart)
                                    1- 2443     	BANKSEL	_Status
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 09rr                      1- 2444     	BTRSS	_Status,3
                                    1- 2445     	MGOTO	_00135_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2446     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2447     ;;unsigned compare: left >= lit (0x5E=94), size=2
                                    1- 2448     	.line	149, "main.c"; 	if((T1Counter> (OneCode_H - FaultTolerant))&&(T1Counter < (OneCode_H + FaultTolerant)))
     0055 2100                      1- 2449     	MOVIA	0x00
                                    1- 2450     	BANKSEL	_T1Counter
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 04rr                      1- 2451     	SUBAR	(_T1Counter + 1),W
     0058 0903                      1- 2452     	BTRSS	STATUS,2
                                    1- 2453     	MGOTO	_00176_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
     005A 215E                      1- 2454     	MOVIA	0x5e
     005B 04rr                      1- 2455     	SUBAR	_T1Counter,W
     005C                           1- 2456     _00176_DS_:
     005C 0803                      1- 2457     	BTRSS	STATUS,0
                                    1- 2458     	MGOTO	_00126_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2459     ;;unsigned compare: left < lit (0x71=113), size=2
     005E 2100                      1- 2460     	MOVIA	0x00
                                    1- 2461     	BANKSEL	_T1Counter
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 04rr                      1- 2462     	SUBAR	(_T1Counter + 1),W
     0061 0903                      1- 2463     	BTRSS	STATUS,2
                                    1- 2464     	MGOTO	_00177_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
     0063 2171                      1- 2465     	MOVIA	0x71
     0064 04rr                      1- 2466     	SUBAR	_T1Counter,W
     0065                           1- 2467     _00177_DS_:
     0065 0C03                      1- 2468     	BTRSC	STATUS,0
                                    1- 2469     	MGOTO	_00126_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2470     	.line	151, "main.c"; 	OneCode = 1;
                                    1- 2471     	BANKSEL	_Status
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 18rr                      1- 2472     	BSR	_Status,1
                                    1- 2473     	.line	152, "main.c"; 	ZeroCode = 0;
     0069 1Crr                      1- 2474     	BCR	_Status,0
                                    1- 2475     	MGOTO	_00127_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2476     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2477     ;;unsigned compare: left >= lit (0x13=19), size=2
     006B                           1- 2478     _00126_DS_:
                                    1- 2479     	.line	156, "main.c"; 	if((T1Counter > (Zero_H - FaultTolerant))&&(T1Counter < (Zero_H + FaultTolerant)))
     006B 2100                      1- 2480     	MOVIA	0x00
                                    1- 2481     	BANKSEL	_T1Counter
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 04rr                      1- 2482     	SUBAR	(_T1Counter + 1),W
     006E 0903                      1- 2483     	BTRSS	STATUS,2
                                    1- 2484     	MGOTO	_00178_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
     0070 2113                      1- 2485     	MOVIA	0x13
     0071 04rr                      1- 2486     	SUBAR	_T1Counter,W
     0072                           1- 2487     _00178_DS_:
     0072 0803                      1- 2488     	BTRSS	STATUS,0
                                    1- 2489     	MGOTO	_00122_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2490     ;;unsigned compare: left < lit (0x26=38), size=2
     0074 2100                      1- 2491     	MOVIA	0x00
                                    1- 2492     	BANKSEL	_T1Counter
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 04rr                      1- 2493     	SUBAR	(_T1Counter + 1),W
     0077 0903                      1- 2494     	BTRSS	STATUS,2
                                    1- 2495     	MGOTO	_00179_DS_
     0078 3rrr                      3-   63 m1      LGOTO rom_address
     0079 2126                      1- 2496     	MOVIA	0x26
     007A 04rr                      1- 2497     	SUBAR	_T1Counter,W
     007B                           1- 2498     _00179_DS_:
     007B 0C03                      1- 2499     	BTRSC	STATUS,0
                                    1- 2500     	MGOTO	_00122_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2501     	.line	158, "main.c"; 	ZeroCode = 1;
                                    1- 2502     	BANKSEL	_Status
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 18rr                      1- 2503     	BSR	_Status,0
                                    1- 2504     	.line	159, "main.c"; 	OneCode = 0;
     007F 1Crr                      1- 2505     	BCR	_Status,1
                                    1- 2506     	MGOTO	_00127_DS_
     0080 3rrr                      3-   63 m1      LGOTO rom_address
     0081                           1- 2507     _00122_DS_:
                                    1- 2508     	.line	163, "main.c"; 	ZeroCode = 0;
                                    1- 2509     	BANKSEL	_Status
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 1Crr                      1- 2510     	BCR	_Status,0
                                    1- 2511     	.line	164, "main.c"; 	OneCode = 0;
     0083 1Crr                      1- 2512     	BCR	_Status,1
     0084                           1- 2513     _00127_DS_:
                                    1- 2514     	.line	168, "main.c"; 	if(OneCode)
                                    1- 2515     	BANKSEL	_Status
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 08rr                      1- 2516     	BTRSS	_Status,1
                                    1- 2517     	MGOTO	_00132_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2518     	.line	171, "main.c"; 	GetOneByte(1);
     0087 2101                      1- 2519     	MOVIA	0x01
                                    1- 2520     	MCALL	_GetOneByte
     0088 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2521     	MGOTO	_00142_DS_
     0089 3rrr                      3-   63 m1      LGOTO rom_address
     008A                           1- 2522     _00132_DS_:
                                    1- 2523     	.line	173, "main.c"; 	else if(ZeroCode)
                                    1- 2524     	BANKSEL	_Status
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 08rr                      1- 2525     	BTRSS	_Status,0
                                    1- 2526     	MGOTO	_00142_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2527     	.line	176, "main.c"; 	GetOneByte(0);
     008D 2100                      1- 2528     	MOVIA	0x00
                                    1- 2529     	MCALL	_GetOneByte
     008E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2530     	MGOTO	_00142_DS_
     008F 3rrr                      3-   63 m1      LGOTO rom_address
     0090                           1- 2531     _00135_DS_:
                                    1- 2532     	.line	181, "main.c"; 	MaybeRemoteStart = 0;       //遥控数据头
                                    1- 2533     	BANKSEL	_Status
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 1Drr                      1- 2534     	BCR	_Status,2
                                    1- 2535     	.line	182, "main.c"; 	RemoteStart = 0;
     0092 1Drr                      1- 2536     	BCR	_Status,3
                                    1- 2537     	.line	183, "main.c"; 	sleepFlag = 0;
                                    1- 2538     	BANKSEL	_sleepFlag
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 02rr                      1- 2539     	CLRR	_sleepFlag
                                    1- 2540     	.line	184, "main.c"; 	bitIndex = 0;
                                    1- 2541     	BANKSEL	_bitIndex
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 02rr                      1- 2542     	CLRR	_bitIndex
                                    1- 2543     	.line	185, "main.c"; 	OneCode = 0;
                                    1- 2544     	BANKSEL	_Status
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 1Crr                      1- 2545     	BCR	_Status,1
                                    1- 2546     	.line	186, "main.c"; 	ZeroCode = 0;
     0099 1Crr                      1- 2547     	BCR	_Status,0
                                    1- 2548     	.line	187, "main.c"; 	ReadOver = 0;
     009A 1Err                      1- 2549     	BCR	_Status,4
     009B                           1- 2550     _00142_DS_:
                                    1- 2551     	.line	192, "main.c"; 	}
                                    1- 2552     	RETURN	
     009B 0010                      3-   40 m1      ret
                                    1- 2553     ; exit point of _proHight
                                    1- 2555     ;***
                                    1- 2556     ;  pBlock Stats: dbName = C
                                    1- 2557     ;***
                                    1- 2558     ;has an exit
                                    1- 2559     ;; Starting pCode block
                                    1- 2560     .segment "code"; module=main, function=_cleanData
     0000                           1- 2562     _cleanData:
                                    1- 2563     ; 2 exit points
                                    1- 2564     	.line	117, "main.c"; 	MaybeRemoteStart = 0;       //遥控数据头
                                    1- 2565     	BANKSEL	_Status
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 1Drr                      1- 2566     	BCR	_Status,2
                                    1- 2567     	.line	118, "main.c"; 	RemoteStart = 0;
     0002 1Drr                      1- 2568     	BCR	_Status,3
                                    1- 2569     	.line	119, "main.c"; 	sleepFlag = 0;
                                    1- 2570     	BANKSEL	_sleepFlag
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 2571     	CLRR	_sleepFlag
                                    1- 2572     	.line	120, "main.c"; 	bitIndex = 0;
                                    1- 2573     	BANKSEL	_bitIndex
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1- 2574     	CLRR	_bitIndex
                                    1- 2575     	.line	121, "main.c"; 	OneCode = 0;
                                    1- 2576     	BANKSEL	_Status
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 1Crr                      1- 2577     	BCR	_Status,1
                                    1- 2578     	.line	122, "main.c"; 	ZeroCode = 0;
     0009 1Crr                      1- 2579     	BCR	_Status,0
                                    1- 2580     	.line	123, "main.c"; 	ReadOver = 0;
     000A 1Err                      1- 2581     	BCR	_Status,4
                                    1- 2582     	.line	124, "main.c"; 	}
                                    1- 2583     	RETURN	
     000B 0010                      3-   40 m1      ret
                                    1- 2584     ; exit point of _cleanData
                                    1- 2587     ;	code size estimation:
                                    1- 2588     ;	 1065+  333 =  1398 instructions ( 3462 byte)
                                    1- 2590     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00800544
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8a054e.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A054E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
