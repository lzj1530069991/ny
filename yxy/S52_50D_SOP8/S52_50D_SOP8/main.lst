
                    Nyquest Technology Co., Ltd.

NYASM 2.27

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A050D,c=on
                                    1-    9     	#include "ny8a050d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTBbits
                                    1-   15     	extern	_PCONbits
                                    1-   16     	extern	_BWUCONbits
                                    1-   17     	extern	_BPLCONbits
                                    1-   18     	extern	_BPHCONbits
                                    1-   19     	extern	_INTEbits
                                    1-   20     	extern	_INTFbits
                                    1-   21     	extern	_INDF
                                    1-   22     	extern	_TMR0
                                    1-   23     	extern	_PCL
                                    1-   24     	extern	_STATUS
                                    1-   25     	extern	_FSR
                                    1-   26     	extern	_PORTB
                                    1-   27     	extern	_PCON
                                    1-   28     	extern	_BWUCON
                                    1-   29     	extern	_PCHBUF
                                    1-   30     	extern	_BPLCON
                                    1-   31     	extern	_BPHCON
                                    1-   32     	extern	_INTE
                                    1-   33     	extern	_INTF
                                    1-   34     	extern	_TBHP
                                    1-   35     	extern	_TBHD
                                    1-   36     	extern	_OSCCR
                                    1-   37     	extern	_IOSTB
                                    1-   38     	extern	_PS0CV
                                    1-   39     	extern	_BODCON
                                    1-   40     	extern	_PCON1
                                    1-   41     	extern	_T0MD
                                    1-   42     	extern	___sdcc_saved_fsr
                                    1-   43     	extern	___sdcc_saved_stk00
                                    1-   44     	extern	___sdcc_saved_stk01
                                    1-   45     	extern	__nyc_ny8_startup
                                    1-   46     ;--------------------------------------------------------
                                    1-   47     ; global declarations
                                    1-   48     ;--------------------------------------------------------
                                    1-   49     	extern	_rainbow
                                    1-   50     	extern	_gotoSleep
                                    1-   51     	extern	_keyRead
                                    1-   52     	extern	_showRGB
                                    1-   53     	extern	_setColor
                                    1-   54     	extern	_isr
                                    1-   55     	extern	_main
                                    1-   56     	extern	_blue
                                    1-   57     	extern	_red
                                    1-   58     	extern	_green
                                    1-   59     	extern	_workStep
                                    1-   60     	extern	_ledCount
                                    1-   61     	extern	_intCount
                                    1-   62     	extern	_IntFlag
                                    1-   63     	extern	_keyCount
                                    1-   64     	extern	_ledFlag
                                    1-   65     	extern	_colorStep
                                    1-   66     	extern	_lastBlue
                                    1-   67     	extern	_lastRed
                                    1-   68     	extern	_lastGreen
                                    1-   69     	extern	_sleepTime
                                    1-   71     	extern PSAVE
                                    1-   72     	extern SSAVE
                                    1-   73     	extern WSAVE
                                    1-   74     	extern STK02
                                    1-   75     	extern STK01
                                    1-   76     	extern STK00
                                    1-   78     .segment "uninit", 0x20000010
 20000010                           1-   79     PSAVE:
                                    1-   80     	.res 1
 20000011                           1-   81     SSAVE:
                                    1-   82     	.res 1
 20000012                           1-   83     WSAVE:
                                    1-   84     	.res 1
 20000013                           1-   85     STK02:
                                    1-   86     	.res 1
 20000014                           1-   87     STK01:
                                    1-   88     	.res 1
 20000015                           1-   89     STK00:
                                    1-   90     	.res 1
                                    1-   92     ;--------------------------------------------------------
                                    1-   93     ; global definitions
                                    1-   94     ;--------------------------------------------------------
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     ; absolute symbol definitions
                                    1-   97     ;--------------------------------------------------------
                                    1-   98     ;--------------------------------------------------------
                                    1-   99     ; compiler-defined variables
                                    1-  100     ;--------------------------------------------------------
                                    1-  101     .segment "uninit"
     0000                           1-  102     r0x1012:
                                    1-  103     	.res	1
                                    1-  104     .segment "uninit"
     0000                           1-  105     r0x1011:
                                    1-  106     	.res	1
                                    1-  107     ;--------------------------------------------------------
                                    1-  108     ; initialized data
                                    1-  109     ;--------------------------------------------------------
                                    1-  111     .segment "idata"
     0000                           1-  112     _blue:
     0000 0000                      1-  113     	dw	0x00
                                    1-  117     .segment "idata"
     0000                           1-  118     _red:
     0000 0000                      1-  119     	dw	0x00
                                    1-  123     .segment "idata"
     0000                           1-  124     _green:
     0000 0000                      1-  125     	dw	0x00
                                    1-  129     .segment "idata"
     0000                           1-  130     _workStep:
     0000 0000                      1-  131     	dw	0x00
                                    1-  135     .segment "idata"
     0000                           1-  136     _ledCount:
     0000 0000                      1-  137     	dw	0x00
                                    1-  141     .segment "idata"
     0000                           1-  142     _intCount:
     0000 0000                      1-  143     	dw	0x00
                                    1-  147     .segment "idata"
     0000                           1-  148     _IntFlag:
     0000 0000                      1-  149     	dw	0x00
                                    1-  153     .segment "idata"
     0000                           1-  154     _keyCount:
     0000 0000                      1-  155     	dw	0x00
                                    1-  159     .segment "idata"
     0000                           1-  160     _ledFlag:
     0000 0000                      1-  161     	dw	0x00
                                    1-  165     .segment "idata"
     0000                           1-  166     _colorStep:
     0000 0000                      1-  167     	dw	0x00
                                    1-  171     .segment "idata"
     0000                           1-  172     _lastBlue:
     0000 0000                      1-  173     	dw	0x00
                                    1-  177     .segment "idata"
     0000                           1-  178     _lastRed:
     0000 0000                      1-  179     	dw	0x00
                                    1-  183     .segment "idata"
     0000                           1-  184     _lastGreen:
     0000 0000                      1-  185     	dw	0x00
                                    1-  189     .segment "idata"
     0000                           1-  190     _sleepTime:
     0000 0000                      1-  191     	dw	0x00
                                    1-  194     ;--------------------------------------------------------
                                    1-  195     ; overlayable items in internal ram 
                                    1-  196     ;--------------------------------------------------------
                                    1-  197     ;	udata_ovr
                                    1-  198     ;--------------------------------------------------------
                                    1-  199     ; reset vector 
                                    1-  200     ;--------------------------------------------------------
                                    1-  201     ORG	0x0000
     0000 3rrr                      1-  202     	LGOTO	__nyc_ny8_startup
                                    1-  203     ;--------------------------------------------------------
                                    1-  204     ; interrupt and initialization code
                                    1-  205     ;--------------------------------------------------------
                                    1-  206     ORG 0x0008
     0008 3rrr                      1-  207     	lgoto	__sdcc_interrupt
                                    1-  209     .segment "code"
     0000                           1-  210     __sdcc_interrupt:
                                    1-  211     ;***
                                    1-  212     ;  pBlock Stats: dbName = I
                                    1-  213     ;***
                                    1-  214     ;2 compiler assigned registers:
                                    1-  215     ;   STK00
                                    1-  216     ;   STK01
                                    1-  217     ;; Starting pCode block
     0000                           1-  218     _isr:
                                    1-  219     ; 0 exit points
                                    1-  220     	.line	50, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  221     	MOVAR	WSAVE
     0001 1503                      1-  222     	SWAPR	STATUS,W
     0002 0283                      1-  223     	CLRR	STATUS
     0003 00rr                      1-  224     	MOVAR	SSAVE
     0004 010A                      1-  225     	MOVR	PCHBUF,W
     0005 028A                      1-  226     	CLRR	PCHBUF
     0006 00rr                      1-  227     	MOVAR	PSAVE
     0007 0104                      1-  228     	MOVR	FSR,W
     0008 00rr                      1-  229     	MOVAR	___sdcc_saved_fsr
     0009 01rr                      1-  230     	MOVR	STK00,W
     000A 00rr                      1-  231     	MOVAR	___sdcc_saved_stk00
     000B 01rr                      1-  232     	MOVR	STK01,W
     000C 00rr                      1-  233     	MOVAR	___sdcc_saved_stk01
                                    1-  234     	.line	52, "main.c"; 	if(INTFbits.T0IF)
     000D 08rr                      1-  235     	BTRSS	_INTFbits,0
     000E 3rrr                      1-  236     	LGOTO	_00108_DS_
                                    1-  237     	.line	54, "main.c"; 	TMR0 += 56;
     000F 2138                      1-  238     	MOVIA	0x38
     0010 03rr                      1-  239     	ADDAR	_TMR0,F
                                    1-  240     	.line	55, "main.c"; 	if(++intCount >= 100)
     0011 05rr                      1-  241     	INCR	_intCount,F
                                    1-  242     ;;unsigned compare: left < lit (0x64=100), size=1
     0012 2164                      1-  243     	MOVIA	0x64
     0013 04rr                      1-  244     	SUBAR	_intCount,W
     0014 0803                      1-  245     	BTRSS	STATUS,0
     0015 3rrr                      1-  246     	LGOTO	_00108_DS_
                                    1-  247     	.line	57, "main.c"; 	intCount = 0;
     0016 02rr                      1-  248     	CLRR	_intCount
                                    1-  249     	.line	58, "main.c"; 	IntFlag = 1;
     0017 2101                      1-  250     	MOVIA	0x01
     0018 00rr                      1-  251     	MOVAR	_IntFlag
     0019                           1-  252     _00108_DS_:
                                    1-  253     	.line	61, "main.c"; 	if(INTFbits.PBIF)
     0019 08rr                      1-  254     	BTRSS	_INTFbits,1
     001A 3rrr                      1-  255     	LGOTO	_00110_DS_
                                    1-  256     	.line	63, "main.c"; 	INTF= (unsigned char)~(C_INT_PBKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     001B 21FD                      1-  257     	MOVIA	0xfd
     001C 00rr                      1-  258     	MOVAR	_INTF
     001D                           1-  259     _00110_DS_:
                                    1-  260     	.line	66, "main.c"; 	INTF = 0;
     001D 02rr                      1-  261     	CLRR	_INTF
                                    1-  262     	.line	68, "main.c"; 	}
     001E 01rr                      1-  263     	MOVR	___sdcc_saved_stk01,W
     001F 00rr                      1-  264     	MOVAR	STK01
     0020 01rr                      1-  265     	MOVR	___sdcc_saved_stk00,W
     0021 00rr                      1-  266     	MOVAR	STK00
     0022 01rr                      1-  267     	MOVR	___sdcc_saved_fsr,W
     0023 0084                      1-  268     	MOVAR	FSR
     0024 01rr                      1-  269     	MOVR	PSAVE,W
     0025 008A                      1-  270     	MOVAR	PCHBUF
     0026 0283                      1-  271     	CLRR	STATUS
     0027 15rr                      1-  272     	SWAPR	SSAVE,W
     0028 0083                      1-  273     	MOVAR	STATUS
     0029 15rr                      1-  274     	SWAPR	WSAVE,F
     002A 15rr                      1-  275     	SWAPR	WSAVE,W
     002B                           1-  276     END_OF_INTERRUPT:
     002B 0011                      1-  277     	RETIE	
                                    1-  279     ;--------------------------------------------------------
                                    1-  280     ; code
                                    1-  281     ;--------------------------------------------------------
                                    1-  282     ;***
                                    1-  283     ;  pBlock Stats: dbName = M
                                    1-  284     ;***
                                    1-  285     ;has an exit
                                    1-  286     ;functions called:
                                    1-  287     ;   _gotoSleep
                                    1-  288     ;   _showRGB
                                    1-  289     ;   _keyRead
                                    1-  290     ;   _setColor
                                    1-  291     ;   _setColor
                                    1-  292     ;   _setColor
                                    1-  293     ;   _setColor
                                    1-  294     ;   _setColor
                                    1-  295     ;   _setColor
                                    1-  296     ;   _setColor
                                    1-  297     ;   _rainbow
                                    1-  298     ;   _gotoSleep
                                    1-  299     ;   _gotoSleep
                                    1-  300     ;   _showRGB
                                    1-  301     ;   _keyRead
                                    1-  302     ;   _setColor
                                    1-  303     ;   _setColor
                                    1-  304     ;   _setColor
                                    1-  305     ;   _setColor
                                    1-  306     ;   _setColor
                                    1-  307     ;   _setColor
                                    1-  308     ;   _setColor
                                    1-  309     ;   _rainbow
                                    1-  310     ;   _gotoSleep
                                    1-  311     ;3 compiler assigned registers:
                                    1-  312     ;   r0x1012
                                    1-  313     ;   STK01
                                    1-  314     ;   STK00
                                    1-  315     ;; Starting pCode block
                                    1-  316     .segment "code"; module=main, function=_main
                                    1-  318     ;local variable name mapping:
     0000                           1-  320     _main:
                                    1-  321     ; 2 exit points
                                    1-  322     	.line	72, "main.c"; 	DISI();
     0000 0013                      1-  323     	DISI
                                    1-  324     	.line	73, "main.c"; 	BPHCON = 0xF7;				// Enable PB4 Pull-High Resistor,others disable
     0001 21F7                      1-  325     	MOVIA	0xf7
     0002 00rr                      1-  326     	MOVAR	_BPHCON
                                    1-  327     	.line	74, "main.c"; 	IOSTB =   C_PB3_Input ;	// Set PB4 & PB1 to input mode,others set to output mode
     0003 2108                      1-  328     	MOVIA	0x08
     0004 000r                      1-  329     	IOST	_IOSTB
                                    1-  330     	.line	75, "main.c"; 	PORTB = 0x00;                       // PB2 & PB0 output high
     0005 02rr                      1-  331     	CLRR	_PORTB
                                    1-  332     	.line	76, "main.c"; 	INTE =  C_INT_TMR0;
     0006 2101                      1-  333     	MOVIA	0x01
     0007 00rr                      1-  334     	MOVAR	_INTE
                                    1-  335     	.line	77, "main.c"; 	TMR0 = 55;
     0008 2137                      1-  336     	MOVIA	0x37
     0009 00rr                      1-  337     	MOVAR	_TMR0
                                    1-  338     	.line	78, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     000A 2101                      1-  339     	MOVIA	0x01
     000B 0003                      1-  340     	T0MD	
                                    1-  341     	.line	81, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     000C 2188                      1-  342     	MOVIA	0x88
     000D 00rr                      1-  343     	MOVAR	_PCON
                                    1-  344     	.line	84, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     000E 2101                      1-  345     	MOVIA	0x01
     000F 000r                      1-  346     	IOST	_PCON1
                                    1-  347     	.line	85, "main.c"; 	ENI();
     0010 0004                      1-  348     	ENI
                                    1-  349     	.line	86, "main.c"; 	gotoSleep();
     0011 2rrr                      1-  350     	LCALL	_gotoSleep
     0012                           1-  351     _00141_DS_:
                                    1-  352     	.line	89, "main.c"; 	CLRWDT();
     0012 0002                      1-  353     	clrwdt
                                    1-  354     	.line	90, "main.c"; 	showRGB();
     0013 2rrr                      1-  355     	LCALL	_showRGB
                                    1-  356     	.line	91, "main.c"; 	if(!IntFlag)
     0014 01rr                      1-  357     	MOVR	_IntFlag,W
     0015 0D03                      1-  358     	BTRSC	STATUS,2
     0016 3rrr                      1-  359     	LGOTO	_00141_DS_
                                    1-  360     	.line	93, "main.c"; 	IntFlag = 0;   
     0017 02rr                      1-  361     	CLRR	_IntFlag
                                    1-  362     	.line	95, "main.c"; 	char kclick = keyRead(0x08 & (~PORTB));
     0018 07rr                      1-  363     	COMR	_PORTB,W
     0019 00rr                      1-  364     	MOVAR	r0x1012
     001A 2108                      1-  365     	MOVIA	0x08
     001B 10rr                      1-  366     	ANDAR	r0x1012,F
     001C 01rr                      1-  367     	MOVR	r0x1012,W
     001D 2rrr                      1-  368     	LCALL	_keyRead
     001E 00rr                      1-  369     	MOVAR	r0x1012
                                    1-  370     	.line	98, "main.c"; 	if(kclick == 1)
     001F 2401                      1-  371     	XORIA	0x01
     0020 0903                      1-  372     	BTRSS	STATUS,2
     0021 3rrr                      1-  373     	LGOTO	_00122_DS_
                                    1-  374     	.line	100, "main.c"; 	if(++workStep > 8)
     0022 05rr                      1-  375     	INCR	_workStep,F
                                    1-  376     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  377     ;;unsigned compare: left >= lit (0x9=9), size=1
     0023 2109                      1-  378     	MOVIA	0x09
     0024 04rr                      1-  379     	SUBAR	_workStep,W
     0025 0C03                      1-  380     	BTRSC	STATUS,0
                                    1-  381     	.line	101, "main.c"; 	workStep = 0;
     0026 02rr                      1-  382     	CLRR	_workStep
                                    1-  383     	.line	102, "main.c"; 	if(workStep == 8)
     0027 01rr                      1-  384     	MOVR	_workStep,W
     0028 2408                      1-  385     	XORIA	0x08
     0029 0903                      1-  386     	BTRSS	STATUS,2
     002A 3rrr                      1-  387     	LGOTO	_00122_DS_
                                    1-  388     	.line	104, "main.c"; 	colorStep = 1;
     002B 2101                      1-  389     	MOVIA	0x01
     002C 00rr                      1-  390     	MOVAR	_colorStep
                                    1-  391     	.line	105, "main.c"; 	red = green = blue = 0;
     002D 02rr                      1-  392     	CLRR	_blue
     002E 02rr                      1-  393     	CLRR	_green
     002F 02rr                      1-  394     	CLRR	_red
                                    1-  395     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  396     ;;unsigned compare: left >= lit (0x9=9), size=1
     0030                           1-  397     _00122_DS_:
                                    1-  398     	.line	109, "main.c"; 	switch(workStep)
     0030 2109                      1-  399     	MOVIA	0x09
     0031 04rr                      1-  400     	SUBAR	_workStep,W
     0032 0C03                      1-  401     	BTRSC	STATUS,0
     0033 3rrr                      1-  402     	LGOTO	_00132_DS_
     0034 21rr                      1-  403     	MOVIA	((_00173_DS_ >> 8) & 0xff)
     0035 008A                      1-  404     	MOVAR	PCHBUF
     0036 01rr                      1-  405     	MOVR	_workStep,W
     0037 25rr                      1-  406     	ADDIA	_00173_DS_
     0038 0C03                      1-  407     	BTRSC	STATUS,0
     0039 058A                      1-  408     	INCR	PCHBUF,F
     003A 0082                      1-  409     	MOVAR	PCL
     003B                           1-  410     _00173_DS_:
     003B 3rrr                      1-  411     	LGOTO	_00123_DS_
     003C 3rrr                      1-  412     	LGOTO	_00124_DS_
     003D 3rrr                      1-  413     	LGOTO	_00125_DS_
     003E 3rrr                      1-  414     	LGOTO	_00126_DS_
     003F 3rrr                      1-  415     	LGOTO	_00127_DS_
     0040 3rrr                      1-  416     	LGOTO	_00128_DS_
     0041 3rrr                      1-  417     	LGOTO	_00129_DS_
     0042 3rrr                      1-  418     	LGOTO	_00130_DS_
     0043 3rrr                      1-  419     	LGOTO	_00131_DS_
     0044                           1-  420     _00123_DS_:
                                    1-  421     	.line	112, "main.c"; 	ledFlag = 0;
     0044 02rr                      1-  422     	CLRR	_ledFlag
                                    1-  423     	.line	113, "main.c"; 	break;
     0045 3rrr                      1-  424     	LGOTO	_00132_DS_
     0046                           1-  425     _00124_DS_:
                                    1-  426     	.line	115, "main.c"; 	ledFlag = 1;
     0046 2101                      1-  427     	MOVIA	0x01
     0047 00rr                      1-  428     	MOVAR	_ledFlag
                                    1-  429     	.line	116, "main.c"; 	setColor(COLOR1);
     0048 2100                      1-  430     	MOVIA	0x00
     0049 00rr                      1-  431     	MOVAR	STK01
     004A 00rr                      1-  432     	MOVAR	STK00
     004B 21FF                      1-  433     	MOVIA	0xff
     004C 2rrr                      1-  434     	LCALL	_setColor
                                    1-  435     	.line	117, "main.c"; 	break;
     004D 3rrr                      1-  436     	LGOTO	_00132_DS_
     004E                           1-  437     _00125_DS_:
                                    1-  438     	.line	119, "main.c"; 	setColor(COLOR2);
     004E 2100                      1-  439     	MOVIA	0x00
     004F 00rr                      1-  440     	MOVAR	STK01
     0050 2125                      1-  441     	MOVIA	0x25
     0051 00rr                      1-  442     	MOVAR	STK00
     0052 21FF                      1-  443     	MOVIA	0xff
     0053 2rrr                      1-  444     	LCALL	_setColor
                                    1-  445     	.line	120, "main.c"; 	break;
     0054 3rrr                      1-  446     	LGOTO	_00132_DS_
     0055                           1-  447     _00126_DS_:
                                    1-  448     	.line	122, "main.c"; 	setColor(COLOR3);
     0055 2100                      1-  449     	MOVIA	0x00
     0056 00rr                      1-  450     	MOVAR	STK01
     0057 21FF                      1-  451     	MOVIA	0xff
     0058 00rr                      1-  452     	MOVAR	STK00
     0059 2rrr                      1-  453     	LCALL	_setColor
                                    1-  454     	.line	123, "main.c"; 	break;
     005A 3rrr                      1-  455     	LGOTO	_00132_DS_
     005B                           1-  456     _00127_DS_:
                                    1-  457     	.line	125, "main.c"; 	setColor(COLOR4);
     005B 2100                      1-  458     	MOVIA	0x00
     005C 00rr                      1-  459     	MOVAR	STK01
     005D 21FF                      1-  460     	MOVIA	0xff
     005E 00rr                      1-  461     	MOVAR	STK00
     005F 2100                      1-  462     	MOVIA	0x00
     0060 2rrr                      1-  463     	LCALL	_setColor
                                    1-  464     	.line	126, "main.c"; 	break;
     0061 3rrr                      1-  465     	LGOTO	_00132_DS_
     0062                           1-  466     _00128_DS_:
                                    1-  467     	.line	128, "main.c"; 	setColor(COLOR5);
     0062 21FF                      1-  468     	MOVIA	0xff
     0063 00rr                      1-  469     	MOVAR	STK01
     0064 00rr                      1-  470     	MOVAR	STK00
     0065 2100                      1-  471     	MOVIA	0x00
     0066 2rrr                      1-  472     	LCALL	_setColor
                                    1-  473     	.line	129, "main.c"; 	break;
     0067 3rrr                      1-  474     	LGOTO	_00132_DS_
     0068                           1-  475     _00129_DS_:
                                    1-  476     	.line	131, "main.c"; 	setColor(COLOR6);
     0068 21FF                      1-  477     	MOVIA	0xff
     0069 00rr                      1-  478     	MOVAR	STK01
     006A 2100                      1-  479     	MOVIA	0x00
     006B 00rr                      1-  480     	MOVAR	STK00
     006C 2rrr                      1-  481     	LCALL	_setColor
                                    1-  482     	.line	132, "main.c"; 	break;
     006D 3rrr                      1-  483     	LGOTO	_00132_DS_
     006E                           1-  484     _00130_DS_:
                                    1-  485     	.line	134, "main.c"; 	setColor(COLOR7);
     006E 21FF                      1-  486     	MOVIA	0xff
     006F 00rr                      1-  487     	MOVAR	STK01
     0070 2100                      1-  488     	MOVIA	0x00
     0071 00rr                      1-  489     	MOVAR	STK00
     0072 21FF                      1-  490     	MOVIA	0xff
     0073 2rrr                      1-  491     	LCALL	_setColor
                                    1-  492     	.line	135, "main.c"; 	break;
     0074 3rrr                      1-  493     	LGOTO	_00132_DS_
     0075                           1-  494     _00131_DS_:
                                    1-  495     	.line	137, "main.c"; 	rainbow();
     0075 2rrr                      1-  496     	LCALL	_rainbow
     0076                           1-  497     _00132_DS_:
                                    1-  498     	.line	141, "main.c"; 	if((PORTB & 0x08) == 0 && workStep == 0)
     0076 0Drr                      1-  499     	BTRSC	_PORTB,3
     0077 3rrr                      1-  500     	LGOTO	_00136_DS_
     0078 01rr                      1-  501     	MOVR	_workStep,W
     0079 0903                      1-  502     	BTRSS	STATUS,2
     007A 3rrr                      1-  503     	LGOTO	_00136_DS_
                                    1-  504     	.line	143, "main.c"; 	if(++sleepTime > 200)
     007B 05rr                      1-  505     	INCR	_sleepTime,F
                                    1-  506     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  507     ;;unsigned compare: left >= lit (0xC9=201), size=1
     007C 21C9                      1-  508     	MOVIA	0xc9
     007D 04rr                      1-  509     	SUBAR	_sleepTime,W
     007E 0803                      1-  510     	BTRSS	STATUS,0
     007F 3rrr                      1-  511     	LGOTO	_00141_DS_
                                    1-  512     	.line	144, "main.c"; 	gotoSleep();
     0080 2rrr                      1-  513     	LCALL	_gotoSleep
     0081 3rrr                      1-  514     	LGOTO	_00141_DS_
     0082                           1-  515     _00136_DS_:
                                    1-  516     	.line	148, "main.c"; 	sleepTime = 0;
     0082 02rr                      1-  517     	CLRR	_sleepTime
     0083 3rrr                      1-  518     	LGOTO	_00141_DS_
                                    1-  519     	.line	151, "main.c"; 	}
                                    1-  520     	RETURN	
     0084 0010                      3-   26 m1      ret
                                    1-  521     ; exit point of _main
                                    1-  523     ;***
                                    1-  524     ;  pBlock Stats: dbName = C
                                    1-  525     ;***
                                    1-  526     ;has an exit
                                    1-  527     ;; Starting pCode block
                                    1-  528     .segment "code"; module=main, function=_rainbow
     0000                           1-  530     _rainbow:
                                    1-  531     ; 2 exit points
                                    1-  532     	.line	252, "main.c"; 	if(colorStep == 1)
     0000 01rr                      1-  533     	MOVR	_colorStep,W
     0001 2401                      1-  534     	XORIA	0x01
     0002 0903                      1-  535     	BTRSS	STATUS,2
     0003 3rrr                      1-  536     	LGOTO	_00234_DS_
                                    1-  537     	.line	254, "main.c"; 	lastRed = 250;
     0004 21FA                      1-  538     	MOVIA	0xfa
     0005 00rr                      1-  539     	MOVAR	_lastRed
                                    1-  540     	.line	255, "main.c"; 	lastGreen = 0;
     0006 02rr                      1-  541     	CLRR	_lastGreen
                                    1-  542     	.line	256, "main.c"; 	lastBlue = 0;
     0007 02rr                      1-  543     	CLRR	_lastBlue
     0008 3rrr                      1-  544     	LGOTO	_00235_DS_
     0009                           1-  545     _00234_DS_:
                                    1-  546     	.line	258, "main.c"; 	else if(colorStep == 2)
     0009 01rr                      1-  547     	MOVR	_colorStep,W
     000A 2402                      1-  548     	XORIA	0x02
     000B 0903                      1-  549     	BTRSS	STATUS,2
     000C 3rrr                      1-  550     	LGOTO	_00231_DS_
                                    1-  551     	.line	260, "main.c"; 	lastRed = 250;
     000D 21FA                      1-  552     	MOVIA	0xfa
     000E 00rr                      1-  553     	MOVAR	_lastRed
                                    1-  554     	.line	261, "main.c"; 	lastGreen = 150;
     000F 2196                      1-  555     	MOVIA	0x96
     0010 00rr                      1-  556     	MOVAR	_lastGreen
                                    1-  557     	.line	262, "main.c"; 	lastBlue = 0;
     0011 02rr                      1-  558     	CLRR	_lastBlue
     0012 3rrr                      1-  559     	LGOTO	_00235_DS_
     0013                           1-  560     _00231_DS_:
                                    1-  561     	.line	264, "main.c"; 	else if(colorStep == 3)
     0013 01rr                      1-  562     	MOVR	_colorStep,W
     0014 2403                      1-  563     	XORIA	0x03
     0015 0903                      1-  564     	BTRSS	STATUS,2
     0016 3rrr                      1-  565     	LGOTO	_00228_DS_
                                    1-  566     	.line	266, "main.c"; 	lastRed = 250;
     0017 21FA                      1-  567     	MOVIA	0xfa
     0018 00rr                      1-  568     	MOVAR	_lastRed
                                    1-  569     	.line	267, "main.c"; 	lastGreen = 250;
     0019 00rr                      1-  570     	MOVAR	_lastGreen
                                    1-  571     	.line	268, "main.c"; 	lastBlue = 0;
     001A 02rr                      1-  572     	CLRR	_lastBlue
     001B 3rrr                      1-  573     	LGOTO	_00235_DS_
     001C                           1-  574     _00228_DS_:
                                    1-  575     	.line	270, "main.c"; 	else if(colorStep == 4)
     001C 01rr                      1-  576     	MOVR	_colorStep,W
     001D 2404                      1-  577     	XORIA	0x04
     001E 0903                      1-  578     	BTRSS	STATUS,2
     001F 3rrr                      1-  579     	LGOTO	_00225_DS_
                                    1-  580     	.line	272, "main.c"; 	lastRed = 0;
     0020 02rr                      1-  581     	CLRR	_lastRed
                                    1-  582     	.line	273, "main.c"; 	lastGreen = 250;
     0021 21FA                      1-  583     	MOVIA	0xfa
     0022 00rr                      1-  584     	MOVAR	_lastGreen
                                    1-  585     	.line	274, "main.c"; 	lastBlue = 0;
     0023 02rr                      1-  586     	CLRR	_lastBlue
     0024 3rrr                      1-  587     	LGOTO	_00235_DS_
     0025                           1-  588     _00225_DS_:
                                    1-  589     	.line	276, "main.c"; 	else if(colorStep == 5)
     0025 01rr                      1-  590     	MOVR	_colorStep,W
     0026 2405                      1-  591     	XORIA	0x05
     0027 0903                      1-  592     	BTRSS	STATUS,2
     0028 3rrr                      1-  593     	LGOTO	_00222_DS_
                                    1-  594     	.line	278, "main.c"; 	lastRed = 0;
     0029 02rr                      1-  595     	CLRR	_lastRed
                                    1-  596     	.line	279, "main.c"; 	lastGreen = 250;
     002A 21FA                      1-  597     	MOVIA	0xfa
     002B 00rr                      1-  598     	MOVAR	_lastGreen
                                    1-  599     	.line	280, "main.c"; 	lastBlue = 250;
     002C 00rr                      1-  600     	MOVAR	_lastBlue
     002D 3rrr                      1-  601     	LGOTO	_00235_DS_
     002E                           1-  602     _00222_DS_:
                                    1-  603     	.line	282, "main.c"; 	else if(colorStep == 6)
     002E 01rr                      1-  604     	MOVR	_colorStep,W
     002F 2406                      1-  605     	XORIA	0x06
     0030 0903                      1-  606     	BTRSS	STATUS,2
     0031 3rrr                      1-  607     	LGOTO	_00219_DS_
                                    1-  608     	.line	284, "main.c"; 	lastRed = 0;
     0032 02rr                      1-  609     	CLRR	_lastRed
                                    1-  610     	.line	285, "main.c"; 	lastGreen = 0;
     0033 02rr                      1-  611     	CLRR	_lastGreen
                                    1-  612     	.line	286, "main.c"; 	lastBlue = 250;
     0034 21FA                      1-  613     	MOVIA	0xfa
     0035 00rr                      1-  614     	MOVAR	_lastBlue
     0036 3rrr                      1-  615     	LGOTO	_00235_DS_
     0037                           1-  616     _00219_DS_:
                                    1-  617     	.line	288, "main.c"; 	else if(colorStep == 7)
     0037 01rr                      1-  618     	MOVR	_colorStep,W
     0038 2407                      1-  619     	XORIA	0x07
     0039 0903                      1-  620     	BTRSS	STATUS,2
     003A 3rrr                      1-  621     	LGOTO	_00235_DS_
                                    1-  622     	.line	290, "main.c"; 	lastRed = 150;
     003B 2196                      1-  623     	MOVIA	0x96
     003C 00rr                      1-  624     	MOVAR	_lastRed
                                    1-  625     	.line	291, "main.c"; 	lastGreen = 0;
     003D 02rr                      1-  626     	CLRR	_lastGreen
                                    1-  627     	.line	292, "main.c"; 	lastBlue = 250;
     003E 21FA                      1-  628     	MOVIA	0xfa
     003F 00rr                      1-  629     	MOVAR	_lastBlue
     0040                           1-  630     _00235_DS_:
                                    1-  631     	.line	295, "main.c"; 	if(red > lastRed)
     0040 01rr                      1-  632     	MOVR	_red,W
     0041 04rr                      1-  633     	SUBAR	_lastRed,W
     0042 0803                      1-  634     	BTRSS	STATUS,0
                                    1-  635     	.line	296, "main.c"; 	red--;
     0043 06rr                      1-  636     	DECR	_red,F
                                    1-  637     	.line	297, "main.c"; 	if(green > lastGreen)
     0044 01rr                      1-  638     	MOVR	_green,W
     0045 04rr                      1-  639     	SUBAR	_lastGreen,W
     0046 0803                      1-  640     	BTRSS	STATUS,0
                                    1-  641     	.line	298, "main.c"; 	green--;
     0047 06rr                      1-  642     	DECR	_green,F
                                    1-  643     	.line	299, "main.c"; 	if(blue > lastBlue)
     0048 01rr                      1-  644     	MOVR	_blue,W
     0049 04rr                      1-  645     	SUBAR	_lastBlue,W
     004A 0803                      1-  646     	BTRSS	STATUS,0
                                    1-  647     	.line	300, "main.c"; 	blue--;
     004B 06rr                      1-  648     	DECR	_blue,F
                                    1-  649     	.line	301, "main.c"; 	if(red < lastRed)
     004C 01rr                      1-  650     	MOVR	_lastRed,W
     004D 04rr                      1-  651     	SUBAR	_red,W
     004E 0803                      1-  652     	BTRSS	STATUS,0
                                    1-  653     	.line	302, "main.c"; 	red++;
     004F 05rr                      1-  654     	INCR	_red,F
                                    1-  655     	.line	303, "main.c"; 	if(green < lastGreen)
     0050 01rr                      1-  656     	MOVR	_lastGreen,W
     0051 04rr                      1-  657     	SUBAR	_green,W
     0052 0803                      1-  658     	BTRSS	STATUS,0
                                    1-  659     	.line	304, "main.c"; 	green++;
     0053 05rr                      1-  660     	INCR	_green,F
                                    1-  661     	.line	305, "main.c"; 	if(blue < lastBlue)
     0054 01rr                      1-  662     	MOVR	_lastBlue,W
     0055 04rr                      1-  663     	SUBAR	_blue,W
     0056 0803                      1-  664     	BTRSS	STATUS,0
                                    1-  665     	.line	306, "main.c"; 	blue++;
     0057 05rr                      1-  666     	INCR	_blue,F
                                    1-  667     	.line	308, "main.c"; 	if(red == lastRed && blue == lastBlue && green == lastGreen)
     0058 01rr                      1-  668     	MOVR	_lastRed,W
     0059 12rr                      1-  669     	XORAR	_red,W
     005A 0903                      1-  670     	BTRSS	STATUS,2
     005B 3rrr                      1-  671     	LGOTO	_00254_DS_
     005C 01rr                      1-  672     	MOVR	_lastBlue,W
     005D 12rr                      1-  673     	XORAR	_blue,W
     005E 0903                      1-  674     	BTRSS	STATUS,2
     005F 3rrr                      1-  675     	LGOTO	_00254_DS_
     0060 01rr                      1-  676     	MOVR	_lastGreen,W
     0061 12rr                      1-  677     	XORAR	_green,W
     0062 0903                      1-  678     	BTRSS	STATUS,2
     0063 3rrr                      1-  679     	LGOTO	_00254_DS_
                                    1-  680     	.line	310, "main.c"; 	if(++colorStep > 7)
     0064 05rr                      1-  681     	INCR	_colorStep,F
                                    1-  682     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  683     ;;unsigned compare: left >= lit (0x8=8), size=1
     0065 2108                      1-  684     	MOVIA	0x08
     0066 04rr                      1-  685     	SUBAR	_colorStep,W
     0067 0803                      1-  686     	BTRSS	STATUS,0
     0068 3rrr                      1-  687     	LGOTO	_00254_DS_
                                    1-  688     	.line	311, "main.c"; 	colorStep = 1;
     0069 2101                      1-  689     	MOVIA	0x01
     006A 00rr                      1-  690     	MOVAR	_colorStep
     006B                           1-  691     _00254_DS_:
                                    1-  692     	.line	313, "main.c"; 	}
                                    1-  693     	RETURN	
     006B 0010                      3-   26 m1      ret
                                    1-  694     ; exit point of _rainbow
                                    1-  696     ;***
                                    1-  697     ;  pBlock Stats: dbName = C
                                    1-  698     ;***
                                    1-  699     ;has an exit
                                    1-  700     ;; Starting pCode block
                                    1-  701     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  703     _gotoSleep:
                                    1-  704     ; 2 exit points
                                    1-  705     	.line	230, "main.c"; 	sleepTime = 0;
     0000 02rr                      1-  706     	CLRR	_sleepTime
                                    1-  707     	.line	231, "main.c"; 	PORTB = 0x02;
     0001 2102                      1-  708     	MOVIA	0x02
     0002 00rr                      1-  709     	MOVAR	_PORTB
                                    1-  710     	.line	232, "main.c"; 	workStep = 0;
     0003 02rr                      1-  711     	CLRR	_workStep
                                    1-  712     	.line	233, "main.c"; 	BWUCON = 0x08;
     0004 2108                      1-  713     	MOVIA	0x08
     0005 00rr                      1-  714     	MOVAR	_BWUCON
                                    1-  715     	.line	234, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PBKey;
     0006 2103                      1-  716     	MOVIA	0x03
     0007 00rr                      1-  717     	MOVAR	_INTE
                                    1-  718     	.line	235, "main.c"; 	PCON =  0;	
     0008 02rr                      1-  719     	CLRR	_PCON
                                    1-  720     	.line	236, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0009 02rr                      1-  721     	CLRR	_INTF
                                    1-  722     	.line	237, "main.c"; 	CLRWDT();
     000A 0002                      1-  723     	clrwdt
                                    1-  724     	.line	238, "main.c"; 	ENI();
     000B 0004                      1-  725     	ENI
                                    1-  726     	.line	239, "main.c"; 	SLEEP();
     000C 0001                      1-  727     	sleep
                                    1-  728     	.line	240, "main.c"; 	BWUCON = 0x00;
     000D 02rr                      1-  729     	CLRR	_BWUCON
                                    1-  730     	.line	241, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1-  731     	MOVIA	0x01
     000F 00rr                      1-  732     	MOVAR	_INTE
                                    1-  733     	.line	242, "main.c"; 	INTF = 0;
     0010 02rr                      1-  734     	CLRR	_INTF
                                    1-  735     	.line	244, "main.c"; 	PCON = C_WDT_En;				// Enable WDT ,  Enable LVR
     0011 2180                      1-  736     	MOVIA	0x80
     0012 00rr                      1-  737     	MOVAR	_PCON
                                    1-  738     	.line	246, "main.c"; 	}
                                    1-  739     	RETURN	
     0013 0010                      3-   26 m1      ret
                                    1-  740     ; exit point of _gotoSleep
                                    1-  742     ;***
                                    1-  743     ;  pBlock Stats: dbName = C
                                    1-  744     ;***
                                    1-  745     ;has an exit
                                    1-  746     ;1 compiler assigned register :
                                    1-  747     ;   r0x1011
                                    1-  748     ;; Starting pCode block
                                    1-  749     .segment "code"; module=main, function=_keyRead
                                    1-  751     ;local variable name mapping:
     0000                           1-  753     _keyRead:
                                    1-  754     ; 2 exit points
                                    1-  755     	.line	204, "main.c"; 	char keyRead(char keyStatus)	
     0000 00rr                      1-  756     	MOVAR	r0x1011
                                    1-  757     	.line	206, "main.c"; 	if(keyStatus)
     0001 01rr                      1-  758     	MOVR	r0x1011,W
     0002 0D03                      1-  759     	BTRSC	STATUS,2
     0003 3rrr                      1-  760     	LGOTO	_00205_DS_
                                    1-  761     	.line	208, "main.c"; 	keyCount++;
     0004 05rr                      1-  762     	INCR	_keyCount,F
                                    1-  763     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1-  764     	.line	209, "main.c"; 	if(keyCount >= 200)
     0005 21C8                      1-  765     	MOVIA	0xc8
     0006 04rr                      1-  766     	SUBAR	_keyCount,W
     0007 0803                      1-  767     	BTRSS	STATUS,0
     0008 3rrr                      1-  768     	LGOTO	_00206_DS_
                                    1-  769     	.line	211, "main.c"; 	keyCount = 200;
     0009 21C8                      1-  770     	MOVIA	0xc8
     000A 00rr                      1-  771     	MOVAR	_keyCount
     000B 3rrr                      1-  772     	LGOTO	_00206_DS_
                                    1-  773     ;;unsigned compare: left < lit (0x28=40), size=1
     000C                           1-  774     _00205_DS_:
                                    1-  775     	.line	216, "main.c"; 	if(keyCount >= 40)
     000C 2128                      1-  776     	MOVIA	0x28
     000D 04rr                      1-  777     	SUBAR	_keyCount,W
     000E 0803                      1-  778     	BTRSS	STATUS,0
     000F 3rrr                      1-  779     	LGOTO	_00203_DS_
                                    1-  780     	.line	218, "main.c"; 	keyCount = 0;
     0010 02rr                      1-  781     	CLRR	_keyCount
                                    1-  782     	.line	219, "main.c"; 	return	1;
     0011 2101                      1-  783     	MOVIA	0x01
     0012 3rrr                      1-  784     	LGOTO	_00207_DS_
     0013                           1-  785     _00203_DS_:
                                    1-  786     	.line	221, "main.c"; 	keyCount = 0;
     0013 02rr                      1-  787     	CLRR	_keyCount
     0014                           1-  788     _00206_DS_:
                                    1-  789     	.line	223, "main.c"; 	return 0;
     0014 2100                      1-  790     	MOVIA	0x00
     0015                           1-  791     _00207_DS_:
                                    1-  792     	.line	224, "main.c"; 	}
                                    1-  793     	RETURN	
     0015 0010                      3-   26 m1      ret
                                    1-  794     ; exit point of _keyRead
                                    1-  796     ;***
                                    1-  797     ;  pBlock Stats: dbName = C
                                    1-  798     ;***
                                    1-  799     ;; Starting pCode block
                                    1-  800     .segment "code"; module=main, function=_showRGB
     0000                           1-  802     _showRGB:
                                    1-  803     ; 0 exit points
                                    1-  804     	.line	165, "main.c"; 	if(ledFlag == 0)
     0000 01rr                      1-  805     	MOVR	_ledFlag,W
     0001 0903                      1-  806     	BTRSS	STATUS,2
     0002 3rrr                      1-  807     	LGOTO	_00183_DS_
                                    1-  808     	.line	167, "main.c"; 	PORTB |= 0xF7;
     0003 21F7                      1-  809     	MOVIA	0xf7
     0004 11rr                      1-  810     	IORAR	_PORTB,F
                                    1-  811     	.line	168, "main.c"; 	return;
     0005 3rrr                      1-  812     	LGOTO	_00195_DS_
     0006                           1-  813     _00183_DS_:
                                    1-  814     	.line	172, "main.c"; 	if(blue <= ledCount)
     0006 01rr                      1-  815     	MOVR	_blue,W
     0007 04rr                      1-  816     	SUBAR	_ledCount,W
     0008 0803                      1-  817     	BTRSS	STATUS,0
     0009 3rrr                      1-  818     	LGOTO	_00185_DS_
                                    1-  819     	.line	174, "main.c"; 	PORTB |= 0x02;
     000A 18rr                      1-  820     	BSR	_PORTB,1
     000B 3rrr                      1-  821     	LGOTO	_00186_DS_
     000C                           1-  822     _00185_DS_:
                                    1-  823     	.line	178, "main.c"; 	PORTB &= 0xFD;
     000C 1Crr                      1-  824     	BCR	_PORTB,1
     000D                           1-  825     _00186_DS_:
                                    1-  826     	.line	181, "main.c"; 	if(green <= ledCount)
     000D 01rr                      1-  827     	MOVR	_green,W
     000E 04rr                      1-  828     	SUBAR	_ledCount,W
     000F 0803                      1-  829     	BTRSS	STATUS,0
     0010 3rrr                      1-  830     	LGOTO	_00188_DS_
                                    1-  831     	.line	183, "main.c"; 	PORTB |= 0x01;
     0011 18rr                      1-  832     	BSR	_PORTB,0
     0012 3rrr                      1-  833     	LGOTO	_00189_DS_
     0013                           1-  834     _00188_DS_:
                                    1-  835     	.line	187, "main.c"; 	PORTB &= 0xFE;
     0013 1Crr                      1-  836     	BCR	_PORTB,0
     0014                           1-  837     _00189_DS_:
                                    1-  838     	.line	190, "main.c"; 	if(red <= ledCount)
     0014 01rr                      1-  839     	MOVR	_red,W
     0015 04rr                      1-  840     	SUBAR	_ledCount,W
     0016 0803                      1-  841     	BTRSS	STATUS,0
     0017 3rrr                      1-  842     	LGOTO	_00191_DS_
                                    1-  843     	.line	192, "main.c"; 	PORTB |= 0x04;
     0018 19rr                      1-  844     	BSR	_PORTB,2
     0019 3rrr                      1-  845     	LGOTO	_00192_DS_
     001A                           1-  846     _00191_DS_:
                                    1-  847     	.line	196, "main.c"; 	PORTB &= 0xFB;
     001A 1Drr                      1-  848     	BCR	_PORTB,2
     001B                           1-  849     _00192_DS_:
                                    1-  850     	.line	198, "main.c"; 	if(++ledCount > 254)
     001B 05rr                      1-  851     	INCR	_ledCount,F
                                    1-  852     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  853     ;;unsigned compare: left >= lit (0xFF=255), size=1
     001C 21FF                      1-  854     	MOVIA	0xff
     001D 04rr                      1-  855     	SUBAR	_ledCount,W
     001E 0C03                      1-  856     	BTRSC	STATUS,0
                                    1-  857     	.line	199, "main.c"; 	ledCount = 0;
     001F 02rr                      1-  858     	CLRR	_ledCount
     0020                           1-  859     _00195_DS_:
                                    1-  860     	.line	200, "main.c"; 	}
                                    1-  861     	RETURN	
     0020 0010                      3-   26 m1      ret
                                    1-  863     ;***
                                    1-  864     ;  pBlock Stats: dbName = C
                                    1-  865     ;***
                                    1-  866     ;has an exit
                                    1-  867     ;2 compiler assigned registers:
                                    1-  868     ;   STK00
                                    1-  869     ;   STK01
                                    1-  870     ;; Starting pCode block
                                    1-  871     .segment "code"; module=main, function=_setColor
     0000                           1-  873     _setColor:
                                    1-  874     ; 2 exit points
                                    1-  875     	.line	153, "main.c"; 	void setColor(u8t color1,u8t color2,u8t color3)
     0000 00rr                      1-  876     	MOVAR	_red
     0001 01rr                      1-  877     	MOVR	STK00,W
     0002 00rr                      1-  878     	MOVAR	_green
     0003 01rr                      1-  879     	MOVR	STK01,W
     0004 00rr                      1-  880     	MOVAR	_blue
                                    1-  881     	.line	158, "main.c"; 	}
                                    1-  882     	RETURN	
     0005 0010                      3-   26 m1      ret
                                    1-  883     ; exit point of _setColor
                                    1-  886     ;	code size estimation:
                                    1-  887     ;	  360+    0 =   360 instructions (  720 byte)
                                    1-  889     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 00000006
__PROCESSOR__           Constant 00800503
__sdcc_interrupt        Label    00000000
_00108_DS_              Label    00000019
_00110_DS_              Label    0000001D
_00122_DS_              Label    00000030
_00123_DS_              Label    00000044
_00124_DS_              Label    00000046
_00125_DS_              Label    0000004E
_00126_DS_              Label    00000055
_00127_DS_              Label    0000005B
_00128_DS_              Label    00000062
_00129_DS_              Label    00000068
_00130_DS_              Label    0000006E
_00131_DS_              Label    00000075
_00132_DS_              Label    00000076
_00136_DS_              Label    00000082
_00141_DS_              Label    00000012
_00173_DS_              Label    0000003B
_00183_DS_              Label    00000006
_00185_DS_              Label    0000000C
_00186_DS_              Label    0000000D
_00188_DS_              Label    00000013
_00189_DS_              Label    00000014
_00191_DS_              Label    0000001A
_00192_DS_              Label    0000001B
_00195_DS_              Label    00000020
_00203_DS_              Label    00000013
_00205_DS_              Label    0000000C
_00206_DS_              Label    00000014
_00207_DS_              Label    00000015
_00219_DS_              Label    00000037
_00222_DS_              Label    0000002E
_00225_DS_              Label    00000025
_00228_DS_              Label    0000001C
_00231_DS_              Label    00000013
_00234_DS_              Label    00000009
_00235_DS_              Label    00000040
_00254_DS_              Label    0000006B
_blue                   Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BPLCON                 Label    00000000
_BPLCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_colorStep              Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_green                  Label    00000000
_INDF                   Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTEbits               Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTB                  Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyRead                Label    00000000
_lastBlue               Label    00000000
_lastGreen              Label    00000000
_lastRed                Label    00000000
_ledCount               Label    00000000
_ledFlag                Label    00000000
_main                   Label    00000000
_OSCCR                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_rainbow                Label    00000000
_red                    Label    00000000
_setColor               Label    00000000
_showRGB                Label    00000000
_sleepTime              Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TMR0                   Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Variable 00000000
END_OF_INTERRUPT        Label    0000002B
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1011                 Label    00000000
r0x1012                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a050d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A050D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000001FF
DATA ROM     = 0x00000000 - 0x000001FF
RESERVED MEM = 0x00000200 - 0x00000210
SRAM / SFR   = 0x00000000 - 0x00000000
