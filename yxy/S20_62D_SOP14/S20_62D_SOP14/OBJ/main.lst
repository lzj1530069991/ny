
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_fgCtr
                                    1-   18     	extern	_LedCtr2
                                    1-   19     	extern	_PORTAbits
                                    1-   20     	extern	_PORTBbits
                                    1-   21     	extern	_PCONbits
                                    1-   22     	extern	_BWUCONbits
                                    1-   23     	extern	_ABPLCONbits
                                    1-   24     	extern	_BPHCONbits
                                    1-   25     	extern	_INTEbits
                                    1-   26     	extern	_INTFbits
                                    1-   27     	extern	_ADMDbits
                                    1-   28     	extern	_ADRbits
                                    1-   29     	extern	_ADVREFHbits
                                    1-   30     	extern	_ADCRbits
                                    1-   31     	extern	_AWUCONbits
                                    1-   32     	extern	_PACONbits
                                    1-   33     	extern	_INTEDGbits
                                    1-   34     	extern	_ANAENbits
                                    1-   35     	extern	_RFCbits
                                    1-   36     	extern	_INTE2bits
                                    1-   37     	extern	_INDF
                                    1-   38     	extern	_TMR0
                                    1-   39     	extern	_PCL
                                    1-   40     	extern	_STATUS
                                    1-   41     	extern	_FSR
                                    1-   42     	extern	_PORTA
                                    1-   43     	extern	_PORTB
                                    1-   44     	extern	_PCON
                                    1-   45     	extern	_BWUCON
                                    1-   46     	extern	_PCHBUF
                                    1-   47     	extern	_ABPLCON
                                    1-   48     	extern	_BPHCON
                                    1-   49     	extern	_INTE
                                    1-   50     	extern	_INTF
                                    1-   51     	extern	_ADMD
                                    1-   52     	extern	_ADR
                                    1-   53     	extern	_ADD
                                    1-   54     	extern	_ADVREFH
                                    1-   55     	extern	_ADCR
                                    1-   56     	extern	_AWUCON
                                    1-   57     	extern	_PACON
                                    1-   58     	extern	_INTEDG
                                    1-   59     	extern	_TMRH
                                    1-   60     	extern	_ANAEN
                                    1-   61     	extern	_RFC
                                    1-   62     	extern	_TM3RH
                                    1-   63     	extern	_INTE2
                                    1-   64     	extern	_TMR1
                                    1-   65     	extern	_T1CR1
                                    1-   66     	extern	_T1CR2
                                    1-   67     	extern	_PWM1DUTY
                                    1-   68     	extern	_PS1CV
                                    1-   69     	extern	_BZ1CR
                                    1-   70     	extern	_IRCR
                                    1-   71     	extern	_TBHP
                                    1-   72     	extern	_TBHD
                                    1-   73     	extern	_TMR2
                                    1-   74     	extern	_T2CR1
                                    1-   75     	extern	_T2CR2
                                    1-   76     	extern	_PWM2DUTY
                                    1-   77     	extern	_PS2CV
                                    1-   78     	extern	_BZ2CR
                                    1-   79     	extern	_OSCCR
                                    1-   80     	extern	_TMR3
                                    1-   81     	extern	_T3CR1
                                    1-   82     	extern	_T3CR2
                                    1-   83     	extern	_PWM3DUTY
                                    1-   84     	extern	_PS3CV
                                    1-   85     	extern	_BZ3CR
                                    1-   86     	extern	_IOSTA
                                    1-   87     	extern	_IOSTB
                                    1-   88     	extern	_APHCON
                                    1-   89     	extern	_PS0CV
                                    1-   90     	extern	_BODCON
                                    1-   91     	extern	_CMPCR
                                    1-   92     	extern	_PCON1
                                    1-   93     	extern	_T0MD
                                    1-   94     	extern	___sdcc_saved_fsr
                                    1-   95     	extern	___sdcc_saved_stk00
                                    1-   96     	extern	___sdcc_saved_stk01
                                    1-   97     	extern	__nyc_ny8_startup
                                    1-   98     ;--------------------------------------------------------
                                    1-   99     ; global declarations
                                    1-  100     ;--------------------------------------------------------
                                    1-  101     	extern	_F_wait_eoc
                                    1-  102     	extern	_F_AIN3_Convert
                                    1-  103     	extern	_F_AIN4_Convert
                                    1-  104     	extern	_checkOutA
                                    1-  105     	extern	_checkBatAD
                                    1-  106     	extern	_initAD
                                    1-  107     	extern	_delay
                                    1-  108     	extern	_chrgCtr
                                    1-  109     	extern	_keyRead
                                    1-  110     	extern	_gotoSleep
                                    1-  111     	extern	_pwmStop
                                    1-  112     	extern	_pwmInit
                                    1-  113     	extern	_LED4ON
                                    1-  114     	extern	_LED3ON
                                    1-  115     	extern	_LED2ON
                                    1-  116     	extern	_LED1ON
                                    1-  117     	extern	_LedInput
                                    1-  118     	extern	_ledShow
                                    1-  119     	extern	_initSys
                                    1-  120     	extern	_powerOff
                                    1-  121     	extern	_keyCtr
                                    1-  122     	extern	_isr
                                    1-  123     	extern	_main
                                    1-  124     	extern	_Status
                                    1-  125     	extern	_duty
                                    1-  126     	extern	_intCount
                                    1-  127     	extern	_count500ms
                                    1-  128     	extern	_keyCount
                                    1-  129     	extern	_workStep
                                    1-  130     	extern	_ledStep
                                    1-  131     	extern	_fgCount
                                    1-  132     	extern	_fgPRD
                                    1-  133     	extern	_preFG
                                    1-  134     	extern	_maxDuty
                                    1-  135     	extern	_pwStep
                                    1-  136     	extern	_R_AIN4_DATA
                                    1-  137     	extern	_R_AIN4_DATA_LB
                                    1-  138     	extern	_R_AIN3_DATA
                                    1-  139     	extern	_R_AIN3_DATA_LB
                                    1-  140     	extern	_chrgTime
                                    1-  141     	extern	_startStep
                                    1-  142     	extern	_sleepTime
                                    1-  143     	extern	_count200ms
                                    1-  144     	extern	_count1s
                                    1-  145     	extern	_count900s
                                    1-  146     	extern	_lowBatTime
                                    1-  147     	extern	_ledTime
                                    1-  148     	extern	_overCount
                                    1-  149     	extern	_debug
                                    1-  150     	extern	_lowBat
                                    1-  151     	extern	_currentDuty
                                    1-  152     	extern	_firstTime
                                    1-  153     	extern	_lowCount
                                    1-  154     	extern	_shanshuoTime
                                    1-  155     	extern	_fullCount
                                    1-  156     	extern	_workStartFlag
                                    1-  158     	extern PSAVE
                                    1-  159     	extern SSAVE
                                    1-  160     	extern WSAVE
                                    1-  161     	extern STK02
                                    1-  162     	extern STK01
                                    1-  163     	extern STK00
                                    1-  165     .segment "uninit", 0x20000040
 20000040                           1-  166     PSAVE:
                                    1-  167     	.res 1
 20000041                           1-  168     SSAVE:
                                    1-  169     	.res 1
 20000042                           1-  170     WSAVE:
                                    1-  171     	.res 1
 20000043                           1-  172     STK02:
                                    1-  173     	.res 1
 20000044                           1-  174     STK01:
                                    1-  175     	.res 1
 20000045                           1-  176     STK00:
                                    1-  177     	.res 1
                                    1-  179     ;--------------------------------------------------------
                                    1-  180     ; global definitions
                                    1-  181     ;--------------------------------------------------------
                                    1-  182     .segment "uninit"
     0000                           1-  183     _R_AIN4_DATA:
                                    1-  184     	.res	2
                                    1-  187     .segment "uninit"
     0000                           1-  188     _R_AIN4_DATA_LB:
                                    1-  189     	.res	1
                                    1-  192     .segment "uninit"
     0000                           1-  193     _R_AIN3_DATA:
                                    1-  194     	.res	2
                                    1-  197     .segment "uninit"
     0000                           1-  198     _R_AIN3_DATA_LB:
                                    1-  199     	.res	1
                                    1-  202     ;--------------------------------------------------------
                                    1-  203     ; absolute symbol definitions
                                    1-  204     ;--------------------------------------------------------
                                    1-  205     ;--------------------------------------------------------
                                    1-  206     ; compiler-defined variables
                                    1-  207     ;--------------------------------------------------------
                                    1-  208     .segment "uninit"
     0000                           1-  209     r0x1043:
                                    1-  210     	.res	1
                                    1-  211     .segment "uninit"
     0000                           1-  212     r0x103D:
                                    1-  213     	.res	1
                                    1-  214     .segment "uninit"
     0000                           1-  215     r0x1042:
                                    1-  216     	.res	1
                                    1-  217     .segment "uninit"
     0000                           1-  218     r0x1041:
                                    1-  219     	.res	1
                                    1-  220     .segment "uninit"
     0000                           1-  221     r0x1040:
                                    1-  222     	.res	1
                                    1-  223     .segment "uninit"
     0000                           1-  224     r0x103F:
                                    1-  225     	.res	1
                                    1-  226     .segment "uninit"
     0000                           1-  227     r0x103E:
                                    1-  228     	.res	1
                                    1-  229     .segment "uninit"
     0000                           1-  230     r0x103C:
                                    1-  231     	.res	1
                                    1-  232     .segment "uninit"
     0000                           1-  233     r0x1026:
                                    1-  234     	.res	1
                                    1-  235     .segment "uninit"
     0000                           1-  236     r0x1027:
                                    1-  237     	.res	1
                                    1-  238     .segment "uninit"
     0000                           1-  239     r0x103A:
                                    1-  240     	.res	1
                                    1-  241     .segment "uninit"
     0000                           1-  242     r0x103B:
                                    1-  243     	.res	1
                                    1-  244     .segment "uninit"
     0000                           1-  245     r0x1036:
                                    1-  246     	.res	1
                                    1-  247     .segment "uninit"
     0000                           1-  248     r0x1037:
                                    1-  249     	.res	1
                                    1-  250     .segment "uninit"
     0000                           1-  251     r0x102E:
                                    1-  252     	.res	1
                                    1-  253     .segment "uninit"
     0000                           1-  254     r0x102F:
                                    1-  255     	.res	1
                                    1-  256     .segment "uninit"
     0000                           1-  257     r0x1030:
                                    1-  258     	.res	1
                                    1-  259     .segment "uninit"
     0000                           1-  260     r0x1033:
                                    1-  261     	.res	1
                                    1-  262     .segment "uninit"
     0000                           1-  263     r0x1028:
                                    1-  264     	.res	1
                                    1-  265     .segment "uninit"
     0000                           1-  266     r0x1029:
                                    1-  267     	.res	1
                                    1-  268     .segment "uninit"
     0000                           1-  269     r0x102A:
                                    1-  270     	.res	1
                                    1-  271     .segment "uninit"
     0000                           1-  272     r0x102D:
                                    1-  273     	.res	1
                                    1-  274     ;--------------------------------------------------------
                                    1-  275     ; initialized data
                                    1-  276     ;--------------------------------------------------------
                                    1-  278     .segment "idata"
     0000                           1-  279     _Status:
     0000 0000                      1-  280     	dw	0x00
                                    1-  284     .segment "idata"
     0000                           1-  285     _duty:
     0000 0000 0000                 1-  286     	dw	0x00, 0x00
                                    1-  290     .segment "idata"
     0000                           1-  291     _intCount:
     0000 0000                      1-  292     	dw	0x00
                                    1-  296     .segment "idata"
     0000                           1-  297     _count500ms:
     0000 0000                      1-  298     	dw	0x00
                                    1-  302     .segment "idata"
     0000                           1-  303     _keyCount:
     0000 0000                      1-  304     	dw	0x00
                                    1-  308     .segment "idata"
     0000                           1-  309     _workStep:
     0000 0000                      1-  310     	dw	0x00
                                    1-  314     .segment "idata"
     0000                           1-  315     _ledStep:
     0000 0000                      1-  316     	dw	0x00
                                    1-  320     .segment "idata"
     0000                           1-  321     _fgCount:
     0000 0000 0000                 1-  322     	dw	0x00, 0x00
                                    1-  326     .segment "idata"
     0000                           1-  327     _fgPRD:
     0000 0000 0000                 1-  328     	dw	0x00, 0x00
                                    1-  332     .segment "idata"
     0000                           1-  333     _preFG:
     0000 0000                      1-  334     	dw	0x00
                                    1-  338     .segment "idata"
     0000                           1-  339     _maxDuty:
     0000 0000                      1-  340     	dw	0x00
                                    1-  344     .segment "idata"
     0000                           1-  345     _pwStep:
     0000 0000                      1-  346     	dw	0x00
                                    1-  350     .segment "idata"
     0000                           1-  351     _chrgTime:
     0000 0000 0000                 1-  352     	dw	0x00, 0x00
                                    1-  356     .segment "idata"
     0000                           1-  357     _startStep:
     0000 0000                      1-  358     	dw	0x00
                                    1-  362     .segment "idata"
     0000                           1-  363     _sleepTime:
     0000 0000 0000                 1-  364     	dw	0x00, 0x00
                                    1-  368     .segment "idata"
     0000                           1-  369     _count200ms:
     0000 0000                      1-  370     	dw	0x00
                                    1-  374     .segment "idata"
     0000                           1-  375     _count1s:
     0000 0000                      1-  376     	dw	0x00
                                    1-  380     .segment "idata"
     0000                           1-  381     _count900s:
     0000 0000 0000                 1-  382     	dw	0x00, 0x00
                                    1-  386     .segment "idata"
     0000                           1-  387     _lowBatTime:
     0000 0000                      1-  388     	dw	0x00
                                    1-  392     .segment "idata"
     0000                           1-  393     _ledTime:
     0000 0000                      1-  394     	dw	0x00
                                    1-  398     .segment "idata"
     0000                           1-  399     _overCount:
     0000 0000                      1-  400     	dw	0x00
                                    1-  404     .segment "idata"
     0000                           1-  405     _debug:
     0000 0000                      1-  406     	dw	0x00
                                    1-  410     .segment "idata"
     0000                           1-  411     _lowBat:
     0000 0000                      1-  412     	dw	0x00
                                    1-  416     .segment "idata"
     0000                           1-  417     _currentDuty:
     0000 0000                      1-  418     	dw	0x00
                                    1-  422     .segment "idata"
     0000                           1-  423     _firstTime:
     0000 0000                      1-  424     	dw	0x00
                                    1-  428     .segment "idata"
     0000                           1-  429     _lowCount:
     0000 0000                      1-  430     	dw	0x00
                                    1-  434     .segment "idata"
     0000                           1-  435     _shanshuoTime:
     0000 0000                      1-  436     	dw	0x00
                                    1-  440     .segment "idata"
     0000                           1-  441     _fullCount:
     0000 0000                      1-  442     	dw	0x00
                                    1-  446     .segment "idata"
     0000                           1-  447     _workStartFlag:
     0000 0000                      1-  448     	dw	0x00
                                    1-  451     ;--------------------------------------------------------
                                    1-  452     ; overlayable items in internal ram 
                                    1-  453     ;--------------------------------------------------------
                                    1-  454     ;	udata_ovr
                                    1-  455     ;--------------------------------------------------------
                                    1-  456     ; reset vector 
                                    1-  457     ;--------------------------------------------------------
                                    1-  458     ORG	0x0000
     0000 3rrr                      1-  459     	LGOTO	__nyc_ny8_startup
                                    1-  460     ;--------------------------------------------------------
                                    1-  461     ; interrupt and initialization code
                                    1-  462     ;--------------------------------------------------------
                                    1-  463     ORG 0x0008
                                    1-  464     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  466     .segment "code"
     0000                           1-  467     __sdcc_interrupt:
                                    1-  468     ;***
                                    1-  469     ;  pBlock Stats: dbName = I
                                    1-  470     ;***
                                    1-  471     ;2 compiler assigned registers:
                                    1-  472     ;   STK00
                                    1-  473     ;   STK01
                                    1-  474     ;; Starting pCode block
     0000                           1-  475     _isr:
                                    1-  476     ; 0 exit points
                                    1-  477     	.line	81, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  478     	MOVAR	WSAVE
     0001 1503                      1-  479     	SWAPR	STATUS,W
     0002 0283                      1-  480     	CLRR	STATUS
     0003 00rr                      1-  481     	MOVAR	SSAVE
     0004 010A                      1-  482     	MOVR	PCHBUF,W
     0005 028A                      1-  483     	CLRR	PCHBUF
     0006 00rr                      1-  484     	MOVAR	PSAVE
     0007 0104                      1-  485     	MOVR	FSR,W
                                    1-  486     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  487     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  488     	MOVR	STK00,W
                                    1-  489     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  490     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  491     	MOVR	STK01,W
                                    1-  492     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  493     	MOVAR	___sdcc_saved_stk01
                                    1-  494     	.line	83, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  495     	BTRSS	_INTFbits,0
                                    1-  496     	MGOTO	_00119_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  497     	.line	85, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  498     	MOVIA	0x37
     0013 03rr                      1-  499     	ADDAR	_TMR0,F
                                    1-  500     	.line	87, "main.c"; 	if(++intCount >= 100)
                                    1-  501     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  502     	INCR	_intCount,F
                                    1-  503     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  504     	MOVIA	0x64
     0017 04rr                      1-  505     	SUBAR	_intCount,W
     0018 0803                      1-  506     	BTRSS	STATUS,0
                                    1-  507     	MGOTO	_00119_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  508     	.line	89, "main.c"; 	IntFlag = 1;
                                    1-  509     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  510     	BSR	_Status,0
                                    1-  511     	.line	90, "main.c"; 	intCount = 0;
                                    1-  512     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  513     	CLRR	_intCount
                                    1-  514     	.line	91, "main.c"; 	if(workStep)
                                    1-  515     	BANKSEL	_workStep
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 01rr                      1-  516     	MOVR	_workStep,W
     0020 0D03                      1-  517     	BTRSC	STATUS,2
                                    1-  518     	MGOTO	_00106_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  519     	.line	92, "main.c"; 	++fgCount;
                                    1-  520     	BANKSEL	_fgCount
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 05rr                      1-  521     	INCR	_fgCount,F
     0024 0D03                      1-  522     	BTRSC	STATUS,2
     0025 05rr                      1-  523     	INCR	(_fgCount + 1),F
     0026                           1-  524     _00106_DS_:
                                    1-  525     	.line	93, "main.c"; 	if(++count500ms >= 40)
                                    1-  526     	BANKSEL	_count500ms
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 05rr                      1-  527     	INCR	_count500ms,F
                                    1-  528     ;;unsigned compare: left < lit (0x28=40), size=1
     0028 2128                      1-  529     	MOVIA	0x28
     0029 04rr                      1-  530     	SUBAR	_count500ms,W
     002A 0C03                      1-  531     	BTRSC	STATUS,0
                                    1-  532     	.line	94, "main.c"; 	count500ms = 0;
     002B 02rr                      1-  533     	CLRR	_count500ms
                                    1-  534     	.line	95, "main.c"; 	if(++count200ms >= 20)
                                    1-  535     	BANKSEL	_count200ms
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1-  536     	INCR	_count200ms,F
     002E 2114                      1-  537     	MOVIA	0x14
     002F 04rr                      1-  538     	SUBAR	_count200ms,W
     0030 0C03                      1-  539     	BTRSC	STATUS,0
                                    1-  540     	.line	96, "main.c"; 	count200ms = 0;
     0031 02rr                      1-  541     	CLRR	_count200ms
                                    1-  542     	.line	97, "main.c"; 	if(++count1s >= 100)
                                    1-  543     	BANKSEL	_count1s
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 05rr                      1-  544     	INCR	_count1s,F
     0034 2164                      1-  545     	MOVIA	0x64
     0035 04rr                      1-  546     	SUBAR	_count1s,W
     0036 0803                      1-  547     	BTRSS	STATUS,0
                                    1-  548     	MGOTO	_00119_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  549     	.line	99, "main.c"; 	count1s = 0;
     0038 02rr                      1-  550     	CLRR	_count1s
                                    1-  551     	.line	100, "main.c"; 	if(workStep)
                                    1-  552     	BANKSEL	_workStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1-  553     	MOVR	_workStep,W
     003B 0D03                      1-  554     	BTRSC	STATUS,2
                                    1-  555     	MGOTO	_00112_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  556     	.line	102, "main.c"; 	++count900s;
                                    1-  557     	BANKSEL	_count900s
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 05rr                      1-  558     	INCR	_count900s,F
     003F 0D03                      1-  559     	BTRSC	STATUS,2
     0040 05rr                      1-  560     	INCR	(_count900s + 1),F
                                    1-  561     	MGOTO	_00119_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042                           1-  562     _00112_DS_:
                                    1-  563     	.line	106, "main.c"; 	count900s = 0;
                                    1-  564     	BANKSEL	_count900s
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 02rr                      1-  565     	CLRR	_count900s
     0044 02rr                      1-  566     	CLRR	(_count900s + 1)
     0045                           1-  567     _00119_DS_:
                                    1-  568     	.line	115, "main.c"; 	if(INTFbits.PABIF)
     0045 08rr                      1-  569     	BTRSS	_INTFbits,1
                                    1-  570     	MGOTO	_00121_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  571     	.line	117, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0047 21FD                      1-  572     	MOVIA	0xfd
     0048 00rr                      1-  573     	MOVAR	_INTF
     0049                           1-  574     _00121_DS_:
                                    1-  575     	.line	120, "main.c"; 	INTF = 0;
     0049 02rr                      1-  576     	CLRR	_INTF
                                    1-  577     	.line	122, "main.c"; 	}
                                    1-  578     	BANKSEL	___sdcc_saved_stk01
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1-  579     	MOVR	___sdcc_saved_stk01,W
     004C 00rr                      1-  580     	MOVAR	STK01
                                    1-  581     	BANKSEL	___sdcc_saved_stk00
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 01rr                      1-  582     	MOVR	___sdcc_saved_stk00,W
     004F 00rr                      1-  583     	MOVAR	STK00
                                    1-  584     	BANKSEL	___sdcc_saved_fsr
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 01rr                      1-  585     	MOVR	___sdcc_saved_fsr,W
     0052 0084                      1-  586     	MOVAR	FSR
     0053 01rr                      1-  587     	MOVR	PSAVE,W
     0054 008A                      1-  588     	MOVAR	PCHBUF
     0055 0283                      1-  589     	CLRR	STATUS
     0056 15rr                      1-  590     	SWAPR	SSAVE,W
     0057 0083                      1-  591     	MOVAR	STATUS
     0058 15rr                      1-  592     	SWAPR	WSAVE,F
     0059 15rr                      1-  593     	SWAPR	WSAVE,W
     005A                           1-  594     END_OF_INTERRUPT:
     005A 0011                      1-  595     	RETIE	
                                    1-  597     ;--------------------------------------------------------
                                    1-  598     ; code
                                    1-  599     ;--------------------------------------------------------
                                    1-  600     ;***
                                    1-  601     ;  pBlock Stats: dbName = M
                                    1-  602     ;***
                                    1-  603     ;has an exit
                                    1-  604     ;functions called:
                                    1-  605     ;   _initSys
                                    1-  606     ;   _initAD
                                    1-  607     ;   _ledShow
                                    1-  608     ;   _ledShow
                                    1-  609     ;   _keyCtr
                                    1-  610     ;   _checkBatAD
                                    1-  611     ;   _chrgCtr
                                    1-  612     ;   _gotoSleep
                                    1-  613     ;   _powerOff
                                    1-  614     ;   _initSys
                                    1-  615     ;   _initAD
                                    1-  616     ;   _ledShow
                                    1-  617     ;   _ledShow
                                    1-  618     ;   _keyCtr
                                    1-  619     ;   _checkBatAD
                                    1-  620     ;   _chrgCtr
                                    1-  621     ;   _gotoSleep
                                    1-  622     ;   _powerOff
                                    1-  623     ;; Starting pCode block
                                    1-  624     .segment "code"; module=main, function=_main
     0000                           1-  626     _main:
                                    1-  627     ; 2 exit points
                                    1-  628     	.line	126, "main.c"; 	initSys();
                                    1-  629     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  630     	.line	127, "main.c"; 	initAD();
                                    1-  631     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  632     _00144_DS_:
                                    1-  633     	.line	130, "main.c"; 	ledShow();
                                    1-  634     	MCALL	_ledShow
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  635     	.line	131, "main.c"; 	CLRWDT();
     0003 0002                      1-  636     	clrwdt
                                    1-  637     	.line	132, "main.c"; 	if(!IntFlag)
                                    1-  638     	BANKSEL	_Status
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 08rr                      1-  639     	BTRSS	_Status,0
                                    1-  640     	MGOTO	_00144_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  641     	.line	134, "main.c"; 	IntFlag = 0;
     0007 1Crr                      1-  642     	BCR	_Status,0
                                    1-  643     	.line	135, "main.c"; 	ledShow();
                                    1-  644     	MCALL	_ledShow
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  645     	.line	136, "main.c"; 	if(chrgFlag == 0)
                                    1-  646     	BANKSEL	_Status
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 09rr                      1-  647     	BTRSS	_Status,3
                                    1-  648     	.line	137, "main.c"; 	keyCtr();
                                    1-  649     	MCALL	_keyCtr
     000B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  650     	.line	138, "main.c"; 	if(count200ms < 5)
     000C 2105                      1-  651     	MOVIA	0x05
                                    1-  652     	BANKSEL	_count200ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 04rr                      1-  653     	SUBAR	_count200ms,W
     000F 0803                      1-  654     	BTRSS	STATUS,0
                                    1-  655     	.line	140, "main.c"; 	checkBatAD();
                                    1-  656     	MCALL	_checkBatAD
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  657     	.line	146, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  658     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1-  659     	MOVR	_workStep,W
     0013 0D03                      1-  660     	BTRSC	STATUS,2
                                    1-  661     	MGOTO	_00133_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  662     	BANKSEL	_currentDuty
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 01rr                      1-  663     	MOVR	_currentDuty,W
                                    1-  664     	BANKSEL	_maxDuty
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 04rr                      1-  665     	SUBAR	_maxDuty,W
     0019 0C03                      1-  666     	BTRSC	STATUS,0
                                    1-  667     	MGOTO	_00133_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  668     	.line	148, "main.c"; 	currentDuty = currentDuty - 10;
     001B 21F6                      1-  669     	MOVIA	0xf6
                                    1-  670     	BANKSEL	_currentDuty
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 03rr                      1-  671     	ADDAR	_currentDuty,F
                                    1-  672     	.line	149, "main.c"; 	PWM2DUTY = currentDuty;
     001E 01rr                      1-  673     	MOVR	_currentDuty,W
     001F 00rr                      1-  674     	SFUN	_PWM2DUTY
     0020                           1-  675     _00133_DS_:
                                    1-  676     	.line	151, "main.c"; 	chrgCtr();
                                    1-  677     	MCALL	_chrgCtr
     0020 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  678     	.line	152, "main.c"; 	if(workStep == 0 && keyCount == 0 && ((PORTA & 0x20) == 0))
                                    1-  679     	BANKSEL	_workStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1-  680     	MOVR	_workStep,W
     0023 0903                      1-  681     	BTRSS	STATUS,2
                                    1-  682     	MGOTO	_00138_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  683     	BANKSEL	_keyCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1-  684     	MOVR	_keyCount,W
     0027 0903                      1-  685     	BTRSS	STATUS,2
                                    1-  686     	MGOTO	_00138_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  687     	BANKSEL	_PORTA
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 0Err                      1-  688     	BTRSC	_PORTA,5
                                    1-  689     	MGOTO	_00138_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  690     	.line	154, "main.c"; 	if(++sleepTime > 400)
                                    1-  691     	BANKSEL	_sleepTime
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1-  692     	INCR	_sleepTime,F
     002E 0D03                      1-  693     	BTRSC	STATUS,2
     002F 05rr                      1-  694     	INCR	(_sleepTime + 1),F
                                    1-  695     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  696     ;;unsigned compare: left >= lit (0x191=401), size=2
     0030 2101                      1-  697     	MOVIA	0x01
     0031 04rr                      1-  698     	SUBAR	(_sleepTime + 1),W
     0032 0903                      1-  699     	BTRSS	STATUS,2
                                    1-  700     	MGOTO	_00183_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
     0034 2191                      1-  701     	MOVIA	0x91
     0035 04rr                      1-  702     	SUBAR	_sleepTime,W
     0036                           1-  703     _00183_DS_:
     0036 0803                      1-  704     	BTRSS	STATUS,0
                                    1-  705     	MGOTO	_00138_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  706     	.line	156, "main.c"; 	gotoSleep();
                                    1-  707     	MCALL	_gotoSleep
     0038 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  708     ;;unsigned compare: left < lit (0x384=900), size=2
     0039                           1-  709     _00138_DS_:
                                    1-  710     	.line	160, "main.c"; 	if(count900s >= 900)
     0039 2103                      1-  711     	MOVIA	0x03
                                    1-  712     	BANKSEL	_count900s
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 04rr                      1-  713     	SUBAR	(_count900s + 1),W
     003C 0903                      1-  714     	BTRSS	STATUS,2
                                    1-  715     	MGOTO	_00184_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
     003E 2184                      1-  716     	MOVIA	0x84
     003F 04rr                      1-  717     	SUBAR	_count900s,W
     0040                           1-  718     _00184_DS_:
     0040 0803                      1-  719     	BTRSS	STATUS,0
                                    1-  720     	MGOTO	_00144_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  721     	.line	162, "main.c"; 	powerOff();
                                    1-  722     	MCALL	_powerOff
     0042 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  723     	MGOTO	_00144_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  724     	.line	166, "main.c"; 	}
                                    1-  725     	RETURN	
     0044 0010                      3-   40 m1      ret
                                    1-  726     ; exit point of _main
                                    1-  728     ;***
                                    1-  729     ;  pBlock Stats: dbName = C
                                    1-  730     ;***
                                    1-  731     ;has an exit
                                    1-  732     ;; Starting pCode block
                                    1-  733     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  735     _F_wait_eoc:
                                    1-  736     ; 2 exit points
     0000                           1-  737     _00572_DS_:
                                    1-  738     	.line	675, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  739     	BTRSS	_ADMDbits,5
                                    1-  740     	MGOTO	_00572_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  741     	.line	677, "main.c"; 	}
                                    1-  742     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1-  743     ; exit point of _F_wait_eoc
                                    1-  745     ;***
                                    1-  746     ;  pBlock Stats: dbName = C
                                    1-  747     ;***
                                    1-  748     ;has an exit
                                    1-  749     ;functions called:
                                    1-  750     ;   _delay
                                    1-  751     ;   _F_wait_eoc
                                    1-  752     ;   _delay
                                    1-  753     ;   _F_wait_eoc
                                    1-  754     ;6 compiler assigned registers:
                                    1-  755     ;   r0x1028
                                    1-  756     ;   r0x1029
                                    1-  757     ;   r0x102A
                                    1-  758     ;   r0x102B
                                    1-  759     ;   r0x102C
                                    1-  760     ;   r0x102D
                                    1-  761     ;; Starting pCode block
                                    1-  762     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1-  764     ;local variable name mapping:
     0000                           1-  767     _F_AIN3_Convert:
                                    1-  768     ; 2 exit points
                                    1-  769     	.line	658, "main.c"; 	void F_AIN3_Convert(char count)
                                    1-  770     	BANKSEL	r0x1028
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  771     	MOVAR	r0x1028
                                    1-  772     	.line	660, "main.c"; 	R_AIN3_DATA=R_AIN3_DATA_LB=0x00;   
                                    1-  773     	BANKSEL	_R_AIN3_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  774     	CLRR	_R_AIN3_DATA_LB
                                    1-  775     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1-  776     	CLRR	_R_AIN3_DATA
     0006 02rr                      1-  777     	CLRR	(_R_AIN3_DATA + 1)
                                    1-  778     	.line	662, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0007 2193                      1-  779     	MOVIA	0x93
     0008 00rr                      1-  780     	MOVAR	_ADMD
                                    1-  781     	.line	663, "main.c"; 	delay(200);	
     0009 21C8                      1-  782     	MOVIA	0xc8
                                    1-  783     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  784     	.line	664, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1-  785     	MOVIA	0x01
                                    1-  786     	BANKSEL	r0x1029
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1-  787     	MOVAR	r0x1029
     000E                           1-  788     _00565_DS_:
                                    1-  789     	BANKSEL	r0x1029
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1-  790     	MOVR	r0x1029,W
                                    1-  791     	BANKSEL	r0x1028
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1-  792     	SUBAR	r0x1028,W
     0012 0803                      1-  793     	BTRSS	STATUS,0
                                    1-  794     	MGOTO	_00567_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  795     	.line	666, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1-  796     	BSR	_ADMDbits,6
                                    1-  797     	.line	667, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1-  798     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  799     	.line	668, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1-  800     	MOVIA	0x0f
     0017 10rr                      1-  801     	ANDAR	_ADR,W
                                    1-  802     ;;3	MOVAR	r0x102A
                                    1-  803     	BANKSEL	_R_AIN3_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1-  804     	ADDAR	_R_AIN3_DATA_LB,F
                                    1-  805     	.line	669, "main.c"; 	R_AIN3_DATA    += ADD; 
     001A 01rr                      1-  806     	MOVR	_ADD,W
                                    1-  807     	BANKSEL	r0x102A
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  808     	MOVAR	r0x102A
                                    1-  809     ;;1	CLRR	r0x102B
                                    1-  810     ;;106	MOVR	r0x102A,W
                                    1-  811     ;;104	MOVAR	r0x102C
     001D 2100                      1-  812     	MOVIA	0x00
                                    1-  813     	BANKSEL	r0x102D
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1-  814     	MOVAR	r0x102D
                                    1-  815     ;;105	MOVR	r0x102C,W
                                    1-  816     	BANKSEL	r0x102A
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1-  817     	MOVR	r0x102A,W
                                    1-  818     	BANKSEL	_R_AIN3_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1-  819     	ADDAR	_R_AIN3_DATA,F
                                    1-  820     	BANKSEL	r0x102D
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1-  821     	MOVR	r0x102D,W
     0026 0C03                      1-  822     	BTRSC	STATUS,0
     0027 05rr                      1-  823     	INCR	r0x102D,W
     0028 0D03                      1-  824     	BTRSC	STATUS,2
                                    1-  825     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  826     	BANKSEL	_R_AIN3_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1-  827     	ADDAR	(_R_AIN3_DATA + 1),F
     002C                           1-  828     _00001_DS_:
                                    1-  829     	.line	664, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  830     	BANKSEL	r0x1029
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1-  831     	INCR	r0x1029,F
                                    1-  832     	MGOTO	_00565_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1-  833     _00567_DS_:
                                    1-  834     	.line	671, "main.c"; 	}
                                    1-  835     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1-  836     ; exit point of _F_AIN3_Convert
                                    1-  838     ;***
                                    1-  839     ;  pBlock Stats: dbName = C
                                    1-  840     ;***
                                    1-  841     ;has an exit
                                    1-  842     ;functions called:
                                    1-  843     ;   _delay
                                    1-  844     ;   _F_wait_eoc
                                    1-  845     ;   _delay
                                    1-  846     ;   _F_wait_eoc
                                    1-  847     ;6 compiler assigned registers:
                                    1-  848     ;   r0x102E
                                    1-  849     ;   r0x102F
                                    1-  850     ;   r0x1030
                                    1-  851     ;   r0x1031
                                    1-  852     ;   r0x1032
                                    1-  853     ;   r0x1033
                                    1-  854     ;; Starting pCode block
                                    1-  855     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1-  857     ;local variable name mapping:
     0000                           1-  860     _F_AIN4_Convert:
                                    1-  861     ; 2 exit points
                                    1-  862     	.line	643, "main.c"; 	void F_AIN4_Convert(char count)
                                    1-  863     	BANKSEL	r0x102E
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  864     	MOVAR	r0x102E
                                    1-  865     	.line	645, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1-  866     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  867     	CLRR	_R_AIN4_DATA_LB
                                    1-  868     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1-  869     	CLRR	_R_AIN4_DATA
     0006 02rr                      1-  870     	CLRR	(_R_AIN4_DATA + 1)
                                    1-  871     	.line	647, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1-  872     	MOVIA	0x94
     0008 00rr                      1-  873     	MOVAR	_ADMD
                                    1-  874     	.line	648, "main.c"; 	delay(200);	
     0009 21C8                      1-  875     	MOVIA	0xc8
                                    1-  876     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  877     	.line	649, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1-  878     	MOVIA	0x01
                                    1-  879     	BANKSEL	r0x102F
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1-  880     	MOVAR	r0x102F
     000E                           1-  881     _00556_DS_:
                                    1-  882     	BANKSEL	r0x102F
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1-  883     	MOVR	r0x102F,W
                                    1-  884     	BANKSEL	r0x102E
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1-  885     	SUBAR	r0x102E,W
     0012 0803                      1-  886     	BTRSS	STATUS,0
                                    1-  887     	MGOTO	_00558_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  888     	.line	651, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1-  889     	BSR	_ADMDbits,6
                                    1-  890     	.line	652, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1-  891     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  892     	.line	653, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1-  893     	MOVIA	0x0f
     0017 10rr                      1-  894     	ANDAR	_ADR,W
                                    1-  895     ;;3	MOVAR	r0x1030
                                    1-  896     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1-  897     	ADDAR	_R_AIN4_DATA_LB,F
                                    1-  898     	.line	654, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1-  899     	MOVR	_ADD,W
                                    1-  900     	BANKSEL	r0x1030
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  901     	MOVAR	r0x1030
                                    1-  902     ;;1	CLRR	r0x1031
                                    1-  903     ;;103	MOVR	r0x1030,W
                                    1-  904     ;;101	MOVAR	r0x1032
     001D 2100                      1-  905     	MOVIA	0x00
                                    1-  906     	BANKSEL	r0x1033
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1-  907     	MOVAR	r0x1033
                                    1-  908     ;;102	MOVR	r0x1032,W
                                    1-  909     	BANKSEL	r0x1030
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1-  910     	MOVR	r0x1030,W
                                    1-  911     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1-  912     	ADDAR	_R_AIN4_DATA,F
                                    1-  913     	BANKSEL	r0x1033
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1-  914     	MOVR	r0x1033,W
     0026 0C03                      1-  915     	BTRSC	STATUS,0
     0027 05rr                      1-  916     	INCR	r0x1033,W
     0028 0D03                      1-  917     	BTRSC	STATUS,2
                                    1-  918     	MGOTO	_00002_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  919     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1-  920     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1-  921     _00002_DS_:
                                    1-  922     	.line	649, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  923     	BANKSEL	r0x102F
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1-  924     	INCR	r0x102F,F
                                    1-  925     	MGOTO	_00556_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1-  926     _00558_DS_:
                                    1-  927     	.line	656, "main.c"; 	}
                                    1-  928     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1-  929     ; exit point of _F_AIN4_Convert
                                    1-  931     ;***
                                    1-  932     ;  pBlock Stats: dbName = C
                                    1-  933     ;***
                                    1-  934     ;has an exit
                                    1-  935     ;functions called:
                                    1-  936     ;   _F_AIN3_Convert
                                    1-  937     ;   _F_AIN3_Convert
                                    1-  938     ;4 compiler assigned registers:
                                    1-  939     ;   r0x1034
                                    1-  940     ;   r0x1035
                                    1-  941     ;   r0x1036
                                    1-  942     ;   r0x1037
                                    1-  943     ;; Starting pCode block
                                    1-  944     .segment "code"; module=main, function=_checkOutA
     0000                           1-  946     _checkOutA:
                                    1-  947     ; 2 exit points
                                    1-  948     	.line	609, "main.c"; 	R_AIN3_DATA = R_AIN3_DATA_LB = 0x00;
                                    1-  949     	BANKSEL	_R_AIN3_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1-  950     	CLRR	_R_AIN3_DATA_LB
                                    1-  951     	BANKSEL	_R_AIN3_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  952     	CLRR	_R_AIN3_DATA
     0004 02rr                      1-  953     	CLRR	(_R_AIN3_DATA + 1)
                                    1-  954     	.line	610, "main.c"; 	F_AIN3_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1-  955     	MOVIA	0x08
                                    1-  956     	MCALL	_F_AIN3_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  957     	.line	611, "main.c"; 	R_AIN3_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1-  958     	BANKSEL	_R_AIN3_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1-  959     	SWAPR	(_R_AIN3_DATA + 1),W
     0009 22F0                      1-  960     	ANDIA	0xf0
     000A 00rr                      1-  961     	MOVAR	(_R_AIN3_DATA + 1)
     000B 15rr                      1-  962     	SWAPR	_R_AIN3_DATA,W
     000C 00rr                      1-  963     	MOVAR	_R_AIN3_DATA
     000D 220F                      1-  964     	ANDIA	0x0f
     000E 11rr                      1-  965     	IORAR	(_R_AIN3_DATA + 1),F
     000F 12rr                      1-  966     	XORAR	_R_AIN3_DATA,F
                                    1-  967     	.line	612, "main.c"; 	R_AIN3_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1-  968     	MOVIA	0xf0
                                    1-  969     	BANKSEL	_R_AIN3_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1-  970     	ANDAR	_R_AIN3_DATA_LB,F
                                    1-  971     	.line	613, "main.c"; 	R_AIN3_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
                                    1-  972     	BANKSEL	_R_AIN4_DATA_LB
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1-  973     	MOVR	_R_AIN4_DATA_LB,W
                                    1-  974     	BANKSEL	r0x1036
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 00rr                      1-  975     	MOVAR	r0x1036
                                    1-  976     ;;1	MOVAR	r0x1034
                                    1-  977     ;;1	CLRR	r0x1035
                                    1-  978     ;;100	MOVR	r0x1034,W
     0017 2100                      1-  979     	MOVIA	0x00
                                    1-  980     	BANKSEL	r0x1037
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 00rr                      1-  981     	MOVAR	r0x1037
                                    1-  982     	BANKSEL	r0x1036
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 01rr                      1-  983     	MOVR	r0x1036,W
                                    1-  984     	BANKSEL	_R_AIN3_DATA
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 03rr                      1-  985     	ADDAR	_R_AIN3_DATA,F
                                    1-  986     	BANKSEL	r0x1037
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 01rr                      1-  987     	MOVR	r0x1037,W
     0020 0C03                      1-  988     	BTRSC	STATUS,0
     0021 05rr                      1-  989     	INCR	r0x1037,W
     0022 0D03                      1-  990     	BTRSC	STATUS,2
                                    1-  991     	MGOTO	_00003_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  992     	BANKSEL	_R_AIN3_DATA
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 03rr                      1-  993     	ADDAR	(_R_AIN3_DATA + 1),F
                                    1-  994     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0026                           1-  995     _00003_DS_:
                                    1-  996     	.line	614, "main.c"; 	R_AIN3_DATA >>=3;					// R_AIN0_DATA divided 8
     0026 1C03                      1-  997     	BCR	STATUS,0
                                    1-  998     	BANKSEL	_R_AIN3_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 13rr                      1-  999     	RRR	(_R_AIN3_DATA + 1),F
     0029 13rr                      1- 1000     	RRR	_R_AIN3_DATA,F
                                    1- 1001     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002A 1C03                      1- 1002     	BCR	STATUS,0
     002B 13rr                      1- 1003     	RRR	(_R_AIN3_DATA + 1),F
     002C 13rr                      1- 1004     	RRR	_R_AIN3_DATA,F
                                    1- 1005     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1006     	BCR	STATUS,0
     002E 13rr                      1- 1007     	RRR	(_R_AIN3_DATA + 1),F
     002F 13rr                      1- 1008     	RRR	_R_AIN3_DATA,F
                                    1- 1009     	.line	615, "main.c"; 	if(debug)
                                    1- 1010     	BANKSEL	_debug
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1- 1011     	MOVR	_debug,W
     0032 0D03                      1- 1012     	BTRSC	STATUS,2
                                    1- 1013     	MGOTO	_00522_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1014     	.line	616, "main.c"; 	R_AIN3_DATA = OUTA;
     0034 212D                      1- 1015     	MOVIA	0x2d
                                    1- 1016     	BANKSEL	_R_AIN3_DATA
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 00rr                      1- 1017     	MOVAR	_R_AIN3_DATA
     0037 2101                      1- 1018     	MOVIA	0x01
     0038 00rr                      1- 1019     	MOVAR	(_R_AIN3_DATA + 1)
                                    1- 1020     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1021     ;;unsigned compare: left >= lit (0x281=641), size=2
     0039                           1- 1022     _00522_DS_:
                                    1- 1023     	.line	617, "main.c"; 	if(R_AIN3_DATA > 640)
     0039 2102                      1- 1024     	MOVIA	0x02
                                    1- 1025     	BANKSEL	_R_AIN3_DATA
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 04rr                      1- 1026     	SUBAR	(_R_AIN3_DATA + 1),W
     003C 0903                      1- 1027     	BTRSS	STATUS,2
                                    1- 1028     	MGOTO	_00549_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
     003E 2181                      1- 1029     	MOVIA	0x81
     003F 04rr                      1- 1030     	SUBAR	_R_AIN3_DATA,W
     0040                           1- 1031     _00549_DS_:
     0040 0803                      1- 1032     	BTRSS	STATUS,0
                                    1- 1033     	MGOTO	_00530_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1034     	.line	619, "main.c"; 	if(++overCount > 10)
                                    1- 1035     	BANKSEL	_overCount
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 05rr                      1- 1036     	INCR	_overCount,F
                                    1- 1037     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1038     ;;unsigned compare: left >= lit (0xB=11), size=1
     0044 210B                      1- 1039     	MOVIA	0x0b
     0045 04rr                      1- 1040     	SUBAR	_overCount,W
     0046 0803                      1- 1041     	BTRSS	STATUS,0
                                    1- 1042     	MGOTO	_00532_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1043     	.line	621, "main.c"; 	overCount = 10;
     0048 210A                      1- 1044     	MOVIA	0x0a
     0049 00rr                      1- 1045     	MOVAR	_overCount
                                    1- 1046     	.line	622, "main.c"; 	PWM2DUTY = 128;
     004A 2180                      1- 1047     	MOVIA	0x80
     004B 00rr                      1- 1048     	SFUN	_PWM2DUTY
                                    1- 1049     	MGOTO	_00532_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
     004D                           1- 1050     _00530_DS_:
                                    1- 1051     	.line	627, "main.c"; 	if(overCount > 0)
                                    1- 1052     	BANKSEL	_overCount
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 01rr                      1- 1053     	MOVR	_overCount,W
     004F 0D03                      1- 1054     	BTRSC	STATUS,2
                                    1- 1055     	MGOTO	_00526_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1056     	.line	629, "main.c"; 	overCount--;
     0051 06rr                      1- 1057     	DECR	_overCount,F
                                    1- 1058     	.line	630, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 1059     	BANKSEL	_maxDuty
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1- 1060     	MOVR	_maxDuty,W
     0054 00rr                      1- 1061     	SFUN	_PWM2DUTY
     0055                           1- 1062     _00526_DS_:
                                    1- 1063     	.line	632, "main.c"; 	if(workStep > 0)
                                    1- 1064     	BANKSEL	_workStep
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 01rr                      1- 1065     	MOVR	_workStep,W
     0057 0D03                      1- 1066     	BTRSC	STATUS,2
                                    1- 1067     	MGOTO	_00532_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1068     	.line	633, "main.c"; 	ledStep = workStep;
     0059 01rr                      1- 1069     	MOVR	_workStep,W
                                    1- 1070     	BANKSEL	_ledStep
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 00rr                      1- 1071     	MOVAR	_ledStep
     005C                           1- 1072     _00532_DS_:
                                    1- 1073     	.line	637, "main.c"; 	}
                                    1- 1074     	RETURN	
     005C 0010                      3-   40 m1      ret
                                    1- 1075     ; exit point of _checkOutA
                                    1- 1077     ;***
                                    1- 1078     ;  pBlock Stats: dbName = C
                                    1- 1079     ;***
                                    1- 1080     ;has an exit
                                    1- 1081     ;functions called:
                                    1- 1082     ;   _F_AIN4_Convert
                                    1- 1083     ;   _F_AIN4_Convert
                                    1- 1084     ;4 compiler assigned registers:
                                    1- 1085     ;   r0x1038
                                    1- 1086     ;   r0x1039
                                    1- 1087     ;   r0x103A
                                    1- 1088     ;   r0x103B
                                    1- 1089     ;; Starting pCode block
                                    1- 1090     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1092     _checkBatAD:
                                    1- 1093     ; 2 exit points
                                    1- 1094     	.line	499, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1095     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1096     	CLRR	_R_AIN4_DATA_LB
                                    1- 1097     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1098     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1099     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1100     	.line	500, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1101     	MOVIA	0x08
                                    1- 1102     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1103     	.line	501, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1104     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1105     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1106     	ANDIA	0xf0
     000A 00rr                      1- 1107     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1108     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1109     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1110     	ANDIA	0x0f
     000E 11rr                      1- 1111     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1112     	XORAR	_R_AIN4_DATA,F
                                    1- 1113     	.line	502, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1114     	MOVIA	0xf0
                                    1- 1115     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1116     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1117     	.line	503, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1118     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1119     	BANKSEL	r0x103A
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1120     	MOVAR	r0x103A
                                    1- 1121     ;;1	MOVAR	r0x1038
                                    1- 1122     ;;1	CLRR	r0x1039
                                    1- 1123     ;;99	MOVR	r0x1038,W
     0016 2100                      1- 1124     	MOVIA	0x00
                                    1- 1125     	BANKSEL	r0x103B
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1126     	MOVAR	r0x103B
                                    1- 1127     	BANKSEL	r0x103A
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1128     	MOVR	r0x103A,W
                                    1- 1129     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1130     	ADDAR	_R_AIN4_DATA,F
                                    1- 1131     	BANKSEL	r0x103B
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1132     	MOVR	r0x103B,W
     001F 0C03                      1- 1133     	BTRSC	STATUS,0
     0020 05rr                      1- 1134     	INCR	r0x103B,W
     0021 0D03                      1- 1135     	BTRSC	STATUS,2
                                    1- 1136     	MGOTO	_00004_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1137     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1138     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1139     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1140     _00004_DS_:
                                    1- 1141     	.line	504, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1142     	BCR	STATUS,0
                                    1- 1143     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1144     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1145     	RRR	_R_AIN4_DATA,F
                                    1- 1146     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1147     	BCR	STATUS,0
     002A 13rr                      1- 1148     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1149     	RRR	_R_AIN4_DATA,F
                                    1- 1150     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1151     	BCR	STATUS,0
     002D 13rr                      1- 1152     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1153     	RRR	_R_AIN4_DATA,F
                                    1- 1154     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1155     ;;unsigned compare: left >= lit (0x60F=1551), size=2
                                    1- 1156     	.line	505, "main.c"; 	if(R_AIN4_DATA > 1550)
     002F 2106                      1- 1157     	MOVIA	0x06
     0030 04rr                      1- 1158     	SUBAR	(_R_AIN4_DATA + 1),W
     0031 0903                      1- 1159     	BTRSS	STATUS,2
                                    1- 1160     	MGOTO	_00496_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033 210F                      1- 1161     	MOVIA	0x0f
     0034 04rr                      1- 1162     	SUBAR	_R_AIN4_DATA,W
     0035                           1- 1163     _00496_DS_:
     0035 0803                      1- 1164     	BTRSS	STATUS,0
                                    1- 1165     	MGOTO	_00359_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1166     	.line	508, "main.c"; 	lowCount = 0;
                                    1- 1167     	BANKSEL	_lowCount
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 02rr                      1- 1168     	CLRR	_lowCount
                                    1- 1169     	MGOTO	_00360_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1170     ;;unsigned compare: left < lit (0x479=1145), size=2
     003A                           1- 1171     _00359_DS_:
                                    1- 1172     	.line	510, "main.c"; 	else if(R_AIN4_DATA < 1145)
     003A 2104                      1- 1173     	MOVIA	0x04
                                    1- 1174     	BANKSEL	_R_AIN4_DATA
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 04rr                      1- 1175     	SUBAR	(_R_AIN4_DATA + 1),W
     003D 0903                      1- 1176     	BTRSS	STATUS,2
                                    1- 1177     	MGOTO	_00497_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
     003F 2179                      1- 1178     	MOVIA	0x79
     0040 04rr                      1- 1179     	SUBAR	_R_AIN4_DATA,W
     0041                           1- 1180     _00497_DS_:
     0041 0C03                      1- 1181     	BTRSC	STATUS,0
                                    1- 1182     	MGOTO	_00356_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1183     	.line	512, "main.c"; 	if(++lowCount < 10)
                                    1- 1184     	BANKSEL	_lowCount
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 05rr                      1- 1185     	INCR	_lowCount,F
                                    1- 1186     ;;unsigned compare: left < lit (0xA=10), size=1
     0045 210A                      1- 1187     	MOVIA	0x0a
     0046 04rr                      1- 1188     	SUBAR	_lowCount,W
     0047 0803                      1- 1189     	BTRSS	STATUS,0
                                    1- 1190     	.line	513, "main.c"; 	return;
                                    1- 1191     	MGOTO	_00410_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1192     	.line	514, "main.c"; 	lowCount = 10;
     0049 210A                      1- 1193     	MOVIA	0x0a
     004A 00rr                      1- 1194     	MOVAR	_lowCount
                                    1- 1195     	.line	515, "main.c"; 	pwStep = 0;
                                    1- 1196     	BANKSEL	_pwStep
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 02rr                      1- 1197     	CLRR	_pwStep
                                    1- 1198     	.line	516, "main.c"; 	R_AIN4_DATA = 1145;
     004D 2179                      1- 1199     	MOVIA	0x79
                                    1- 1200     	BANKSEL	_R_AIN4_DATA
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 00rr                      1- 1201     	MOVAR	_R_AIN4_DATA
     0050 2104                      1- 1202     	MOVIA	0x04
     0051 00rr                      1- 1203     	MOVAR	(_R_AIN4_DATA + 1)
                                    1- 1204     	.line	518, "main.c"; 	if(workStep > 0 && ++firstTime == 10)
                                    1- 1205     	BANKSEL	_workStep
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1- 1206     	MOVR	_workStep,W
     0054 0D03                      1- 1207     	BTRSC	STATUS,2
                                    1- 1208     	MGOTO	_00351_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1209     	BANKSEL	_firstTime
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 05rr                      1- 1210     	INCR	_firstTime,F
     0058 01rr                      1- 1211     	MOVR	_firstTime,W
     0059 240A                      1- 1212     	XORIA	0x0a
     005A 0903                      1- 1213     	BTRSS	STATUS,2
                                    1- 1214     	MGOTO	_00351_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1215     	.line	520, "main.c"; 	shanshuoTime = 16;
     005C 2110                      1- 1216     	MOVIA	0x10
                                    1- 1217     	BANKSEL	_shanshuoTime
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 00rr                      1- 1218     	MOVAR	_shanshuoTime
                                    1- 1219     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1220     ;;unsigned compare: left >= lit (0xC=12), size=1
     005F                           1- 1221     _00351_DS_:
                                    1- 1222     	.line	523, "main.c"; 	if(firstTime > 11)
     005F 210C                      1- 1223     	MOVIA	0x0c
                                    1- 1224     	BANKSEL	_firstTime
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 04rr                      1- 1225     	SUBAR	_firstTime,W
     0062 0803                      1- 1226     	BTRSS	STATUS,0
                                    1- 1227     	MGOTO	_00360_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1228     	.line	524, "main.c"; 	firstTime = 11;
     0064 210B                      1- 1229     	MOVIA	0x0b
     0065 00rr                      1- 1230     	MOVAR	_firstTime
                                    1- 1231     	MGOTO	_00360_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
     0067                           1- 1232     _00356_DS_:
                                    1- 1233     	.line	528, "main.c"; 	lowCount = 0;
                                    1- 1234     	BANKSEL	_lowCount
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 02rr                      1- 1235     	CLRR	_lowCount
                                    1- 1236     	.line	529, "main.c"; 	firstTime = 0;
                                    1- 1237     	BANKSEL	_firstTime
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 02rr                      1- 1238     	CLRR	_firstTime
     006B                           1- 1239     _00360_DS_:
                                    1- 1240     	.line	531, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA - 1145;
     006B 2187                      1- 1241     	MOVIA	0x87
                                    1- 1242     	BANKSEL	_R_AIN4_DATA
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 03rr                      1- 1243     	ADDAR	_R_AIN4_DATA,F
     006E 21FB                      1- 1244     	MOVIA	0xfb
     006F 0C03                      1- 1245     	BTRSC	STATUS,0
     0070 21FC                      1- 1246     	MOVIA	0xfc
     0071 03rr                      1- 1247     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1248     ;;unsigned compare: left < lit (0x1A6=422), size=2
                                    1- 1249     	.line	533, "main.c"; 	if(R_AIN4_DATA >= 422)
     0072 2101                      1- 1250     	MOVIA	0x01
     0073 04rr                      1- 1251     	SUBAR	(_R_AIN4_DATA + 1),W
     0074 0903                      1- 1252     	BTRSS	STATUS,2
                                    1- 1253     	MGOTO	_00500_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
     0076 21A6                      1- 1254     	MOVIA	0xa6
     0077 04rr                      1- 1255     	SUBAR	_R_AIN4_DATA,W
     0078                           1- 1256     _00500_DS_:
     0078 0803                      1- 1257     	BTRSS	STATUS,0
                                    1- 1258     	MGOTO	_00408_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1259     	.line	535, "main.c"; 	pwStep = 5;
     007A 2105                      1- 1260     	MOVIA	0x05
                                    1- 1261     	BANKSEL	_pwStep
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 00rr                      1- 1262     	MOVAR	_pwStep
                                    1- 1263     	MGOTO	_00410_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1264     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1265     ;;unsigned compare: left >= lit (0x15F=351), size=2
     007E                           1- 1266     _00408_DS_:
                                    1- 1267     	.line	537, "main.c"; 	else if(R_AIN4_DATA > 350)
     007E 2101                      1- 1268     	MOVIA	0x01
                                    1- 1269     	BANKSEL	_R_AIN4_DATA
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 04rr                      1- 1270     	SUBAR	(_R_AIN4_DATA + 1),W
     0081 0903                      1- 1271     	BTRSS	STATUS,2
                                    1- 1272     	MGOTO	_00501_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
     0083 215F                      1- 1273     	MOVIA	0x5f
     0084 04rr                      1- 1274     	SUBAR	_R_AIN4_DATA,W
     0085                           1- 1275     _00501_DS_:
     0085 0803                      1- 1276     	BTRSS	STATUS,0
                                    1- 1277     	MGOTO	_00405_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1278     	.line	539, "main.c"; 	fullCount = 0;
                                    1- 1279     	BANKSEL	_fullCount
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 02rr                      1- 1280     	CLRR	_fullCount
                                    1- 1281     ;;unsigned compare: left < lit (0x4=4), size=1
                                    1- 1282     	.line	540, "main.c"; 	if(pwStep < 4)
     0089 2104                      1- 1283     	MOVIA	0x04
                                    1- 1284     	BANKSEL	_pwStep
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 04rr                      1- 1285     	SUBAR	_pwStep,W
     008C 0C03                      1- 1286     	BTRSC	STATUS,0
                                    1- 1287     	MGOTO	_00367_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1288     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1289     ;;unsigned compare: left >= lit (0x164=356), size=2
                                    1- 1290     	.line	542, "main.c"; 	if(R_AIN4_DATA > 355)
     008E 2101                      1- 1291     	MOVIA	0x01
                                    1- 1292     	BANKSEL	_R_AIN4_DATA
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 04rr                      1- 1293     	SUBAR	(_R_AIN4_DATA + 1),W
     0091 0903                      1- 1294     	BTRSS	STATUS,2
                                    1- 1295     	MGOTO	_00503_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
     0093 2164                      1- 1296     	MOVIA	0x64
     0094 04rr                      1- 1297     	SUBAR	_R_AIN4_DATA,W
     0095                           1- 1298     _00503_DS_:
     0095 0803                      1- 1299     	BTRSS	STATUS,0
                                    1- 1300     	MGOTO	_00368_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1301     	.line	543, "main.c"; 	pwStep = 4;
     0097 2104                      1- 1302     	MOVIA	0x04
                                    1- 1303     	BANKSEL	_pwStep
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 00rr                      1- 1304     	MOVAR	_pwStep
                                    1- 1305     	MGOTO	_00368_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
     009B                           1- 1306     _00367_DS_:
                                    1- 1307     	.line	545, "main.c"; 	else if(chrgTime == 0 && R_AIN4_DATA < 396)
                                    1- 1308     	BANKSEL	_chrgTime
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 01rr                      1- 1309     	MOVR	_chrgTime,W
     009D 11rr                      1- 1310     	IORAR	(_chrgTime + 1),W
     009E 0903                      1- 1311     	BTRSS	STATUS,2
                                    1- 1312     	MGOTO	_00368_DS_
     009F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1313     ;;unsigned compare: left < lit (0x18C=396), size=2
     00A0 2101                      1- 1314     	MOVIA	0x01
                                    1- 1315     	BANKSEL	_R_AIN4_DATA
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 04rr                      1- 1316     	SUBAR	(_R_AIN4_DATA + 1),W
     00A3 0903                      1- 1317     	BTRSS	STATUS,2
                                    1- 1318     	MGOTO	_00504_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
     00A5 218C                      1- 1319     	MOVIA	0x8c
     00A6 04rr                      1- 1320     	SUBAR	_R_AIN4_DATA,W
     00A7                           1- 1321     _00504_DS_:
     00A7 0C03                      1- 1322     	BTRSC	STATUS,0
                                    1- 1323     	MGOTO	_00368_DS_
     00A8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1324     	.line	547, "main.c"; 	pwStep = 4;
     00A9 2104                      1- 1325     	MOVIA	0x04
                                    1- 1326     	BANKSEL	_pwStep
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 00rr                      1- 1327     	MOVAR	_pwStep
     00AC                           1- 1328     _00368_DS_:
                                    1- 1329     	.line	551, "main.c"; 	if(chrgTime > 0 && R_AIN4_DATA > 395 && chrgTime > 600)
                                    1- 1330     	BANKSEL	_chrgTime
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 01rr                      1- 1331     	MOVR	_chrgTime,W
     00AE 11rr                      1- 1332     	IORAR	(_chrgTime + 1),W
     00AF 0D03                      1- 1333     	BTRSC	STATUS,2
                                    1- 1334     	MGOTO	_00410_DS_
     00B0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1335     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1336     ;;unsigned compare: left >= lit (0x18C=396), size=2
     00B1 2101                      1- 1337     	MOVIA	0x01
                                    1- 1338     	BANKSEL	_R_AIN4_DATA
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 04rr                      1- 1339     	SUBAR	(_R_AIN4_DATA + 1),W
     00B4 0903                      1- 1340     	BTRSS	STATUS,2
                                    1- 1341     	MGOTO	_00505_DS_
     00B5 3rrr                      3-   63 m1      LGOTO rom_address
     00B6 218C                      1- 1342     	MOVIA	0x8c
     00B7 04rr                      1- 1343     	SUBAR	_R_AIN4_DATA,W
     00B8                           1- 1344     _00505_DS_:
     00B8 0803                      1- 1345     	BTRSS	STATUS,0
                                    1- 1346     	MGOTO	_00410_DS_
     00B9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1347     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1348     ;;unsigned compare: left >= lit (0x259=601), size=2
     00BA 2102                      1- 1349     	MOVIA	0x02
                                    1- 1350     	BANKSEL	_chrgTime
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 04rr                      1- 1351     	SUBAR	(_chrgTime + 1),W
     00BD 0903                      1- 1352     	BTRSS	STATUS,2
                                    1- 1353     	MGOTO	_00506_DS_
     00BE 3rrr                      3-   63 m1      LGOTO rom_address
     00BF 2159                      1- 1354     	MOVIA	0x59
     00C0 04rr                      1- 1355     	SUBAR	_chrgTime,W
     00C1                           1- 1356     _00506_DS_:
     00C1 0803                      1- 1357     	BTRSS	STATUS,0
                                    1- 1358     	MGOTO	_00410_DS_
     00C2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1359     	.line	553, "main.c"; 	chrgTime = 600;
     00C3 2158                      1- 1360     	MOVIA	0x58
                                    1- 1361     	BANKSEL	_chrgTime
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 00rr                      1- 1362     	MOVAR	_chrgTime
     00C6 2102                      1- 1363     	MOVIA	0x02
     00C7 00rr                      1- 1364     	MOVAR	(_chrgTime + 1)
                                    1- 1365     	.line	554, "main.c"; 	pwStep = 5;
     00C8 2105                      1- 1366     	MOVIA	0x05
                                    1- 1367     	BANKSEL	_pwStep
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 00rr                      1- 1368     	MOVAR	_pwStep
                                    1- 1369     	MGOTO	_00410_DS_
     00CB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1370     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1371     ;;unsigned compare: left >= lit (0xC9=201), size=2
     00CC                           1- 1372     _00405_DS_:
                                    1- 1373     	.line	557, "main.c"; 	else if(R_AIN4_DATA > 200)
     00CC 2100                      1- 1374     	MOVIA	0x00
                                    1- 1375     	BANKSEL	_R_AIN4_DATA
     00CD rrrr                      3-  110 m1      .banksel ram_address
     00CE 04rr                      1- 1376     	SUBAR	(_R_AIN4_DATA + 1),W
     00CF 0903                      1- 1377     	BTRSS	STATUS,2
                                    1- 1378     	MGOTO	_00507_DS_
     00D0 3rrr                      3-   63 m1      LGOTO rom_address
     00D1 21C9                      1- 1379     	MOVIA	0xc9
     00D2 04rr                      1- 1380     	SUBAR	_R_AIN4_DATA,W
     00D3                           1- 1381     _00507_DS_:
     00D3 0803                      1- 1382     	BTRSS	STATUS,0
                                    1- 1383     	MGOTO	_00402_DS_
     00D4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1384     	.line	559, "main.c"; 	if(pwStep == 2)
                                    1- 1385     	BANKSEL	_pwStep
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 01rr                      1- 1386     	MOVR	_pwStep,W
     00D7 2402                      1- 1387     	XORIA	0x02
     00D8 0903                      1- 1388     	BTRSS	STATUS,2
                                    1- 1389     	MGOTO	_00376_DS_
     00D9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1390     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1391     ;;unsigned compare: left >= lit (0xD3=211), size=2
                                    1- 1392     	.line	561, "main.c"; 	if(R_AIN4_DATA > 210)
     00DA 2100                      1- 1393     	MOVIA	0x00
                                    1- 1394     	BANKSEL	_R_AIN4_DATA
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 04rr                      1- 1395     	SUBAR	(_R_AIN4_DATA + 1),W
     00DD 0903                      1- 1396     	BTRSS	STATUS,2
                                    1- 1397     	MGOTO	_00508_DS_
     00DE 3rrr                      3-   63 m1      LGOTO rom_address
     00DF 21D3                      1- 1398     	MOVIA	0xd3
     00E0 04rr                      1- 1399     	SUBAR	_R_AIN4_DATA,W
     00E1                           1- 1400     _00508_DS_:
     00E1 0803                      1- 1401     	BTRSS	STATUS,0
                                    1- 1402     	MGOTO	_00376_DS_
     00E2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1403     	.line	562, "main.c"; 	pwStep = 3;
     00E3 2103                      1- 1404     	MOVIA	0x03
                                    1- 1405     	BANKSEL	_pwStep
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 00rr                      1- 1406     	MOVAR	_pwStep
                                    1- 1407     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1408     ;;unsigned compare: left >= lit (0x4=4), size=1
     00E6                           1- 1409     _00376_DS_:
                                    1- 1410     	.line	564, "main.c"; 	if(pwStep > 3)
     00E6 2104                      1- 1411     	MOVIA	0x04
                                    1- 1412     	BANKSEL	_pwStep
     00E7 rrrr                      3-  110 m1      .banksel ram_address
     00E8 04rr                      1- 1413     	SUBAR	_pwStep,W
     00E9 0803                      1- 1414     	BTRSS	STATUS,0
                                    1- 1415     	MGOTO	_00380_DS_
     00EA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1416     ;;unsigned compare: left < lit (0x104=260), size=2
                                    1- 1417     	.line	566, "main.c"; 	if(R_AIN4_DATA < 260)
     00EB 2101                      1- 1418     	MOVIA	0x01
                                    1- 1419     	BANKSEL	_R_AIN4_DATA
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 04rr                      1- 1420     	SUBAR	(_R_AIN4_DATA + 1),W
     00EE 0903                      1- 1421     	BTRSS	STATUS,2
                                    1- 1422     	MGOTO	_00510_DS_
     00EF 3rrr                      3-   63 m1      LGOTO rom_address
     00F0 2104                      1- 1423     	MOVIA	0x04
     00F1 04rr                      1- 1424     	SUBAR	_R_AIN4_DATA,W
     00F2                           1- 1425     _00510_DS_:
     00F2 0C03                      1- 1426     	BTRSC	STATUS,0
                                    1- 1427     	MGOTO	_00381_DS_
     00F3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1428     	.line	567, "main.c"; 	pwStep = 3;
     00F4 2103                      1- 1429     	MOVIA	0x03
                                    1- 1430     	BANKSEL	_pwStep
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 00rr                      1- 1431     	MOVAR	_pwStep
                                    1- 1432     	MGOTO	_00381_DS_
     00F7 3rrr                      3-   63 m1      LGOTO rom_address
     00F8                           1- 1433     _00380_DS_:
                                    1- 1434     	.line	570, "main.c"; 	pwStep = 3;
     00F8 2103                      1- 1435     	MOVIA	0x03
                                    1- 1436     	BANKSEL	_pwStep
     00F9 rrrr                      3-  110 m1      .banksel ram_address
     00FA 00rr                      1- 1437     	MOVAR	_pwStep
     00FB                           1- 1438     _00381_DS_:
                                    1- 1439     	.line	571, "main.c"; 	chrgTime = 0;
                                    1- 1440     	BANKSEL	_chrgTime
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 02rr                      1- 1441     	CLRR	_chrgTime
     00FD 02rr                      1- 1442     	CLRR	(_chrgTime + 1)
                                    1- 1443     	MGOTO	_00410_DS_
     00FE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1444     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1445     ;;unsigned compare: left >= lit (0x65=101), size=2
     00FF                           1- 1446     _00402_DS_:
                                    1- 1447     	.line	573, "main.c"; 	else if(R_AIN4_DATA > 100)
     00FF 2100                      1- 1448     	MOVIA	0x00
                                    1- 1449     	BANKSEL	_R_AIN4_DATA
     0100 rrrr                      3-  110 m1      .banksel ram_address
     0101 04rr                      1- 1450     	SUBAR	(_R_AIN4_DATA + 1),W
     0102 0903                      1- 1451     	BTRSS	STATUS,2
                                    1- 1452     	MGOTO	_00511_DS_
     0103 3rrr                      3-   63 m1      LGOTO rom_address
     0104 2165                      1- 1453     	MOVIA	0x65
     0105 04rr                      1- 1454     	SUBAR	_R_AIN4_DATA,W
     0106                           1- 1455     _00511_DS_:
     0106 0803                      1- 1456     	BTRSS	STATUS,0
                                    1- 1457     	MGOTO	_00399_DS_
     0107 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1458     	.line	576, "main.c"; 	if(pwStep == 1)
                                    1- 1459     	BANKSEL	_pwStep
     0108 rrrr                      3-  110 m1      .banksel ram_address
     0109 01rr                      1- 1460     	MOVR	_pwStep,W
     010A 2401                      1- 1461     	XORIA	0x01
     010B 0903                      1- 1462     	BTRSS	STATUS,2
                                    1- 1463     	MGOTO	_00385_DS_
     010C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1464     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1465     ;;unsigned compare: left >= lit (0x6F=111), size=2
                                    1- 1466     	.line	578, "main.c"; 	if(R_AIN4_DATA > 110)
     010D 2100                      1- 1467     	MOVIA	0x00
                                    1- 1468     	BANKSEL	_R_AIN4_DATA
     010E rrrr                      3-  110 m1      .banksel ram_address
     010F 04rr                      1- 1469     	SUBAR	(_R_AIN4_DATA + 1),W
     0110 0903                      1- 1470     	BTRSS	STATUS,2
                                    1- 1471     	MGOTO	_00512_DS_
     0111 3rrr                      3-   63 m1      LGOTO rom_address
     0112 216F                      1- 1472     	MOVIA	0x6f
     0113 04rr                      1- 1473     	SUBAR	_R_AIN4_DATA,W
     0114                           1- 1474     _00512_DS_:
     0114 0803                      1- 1475     	BTRSS	STATUS,0
                                    1- 1476     	MGOTO	_00385_DS_
     0115 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1477     	.line	579, "main.c"; 	pwStep = 2;
     0116 2102                      1- 1478     	MOVIA	0x02
                                    1- 1479     	BANKSEL	_pwStep
     0117 rrrr                      3-  110 m1      .banksel ram_address
     0118 00rr                      1- 1480     	MOVAR	_pwStep
                                    1- 1481     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1482     ;;unsigned compare: left >= lit (0x3=3), size=1
     0119                           1- 1483     _00385_DS_:
                                    1- 1484     	.line	581, "main.c"; 	if(pwStep > 2)
     0119 2103                      1- 1485     	MOVIA	0x03
                                    1- 1486     	BANKSEL	_pwStep
     011A rrrr                      3-  110 m1      .banksel ram_address
     011B 04rr                      1- 1487     	SUBAR	_pwStep,W
     011C 0803                      1- 1488     	BTRSS	STATUS,0
                                    1- 1489     	MGOTO	_00389_DS_
     011D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1490     ;;unsigned compare: left < lit (0xBE=190), size=2
                                    1- 1491     	.line	583, "main.c"; 	if(R_AIN4_DATA < 190)
     011E 2100                      1- 1492     	MOVIA	0x00
                                    1- 1493     	BANKSEL	_R_AIN4_DATA
     011F rrrr                      3-  110 m1      .banksel ram_address
     0120 04rr                      1- 1494     	SUBAR	(_R_AIN4_DATA + 1),W
     0121 0903                      1- 1495     	BTRSS	STATUS,2
                                    1- 1496     	MGOTO	_00514_DS_
     0122 3rrr                      3-   63 m1      LGOTO rom_address
     0123 21BE                      1- 1497     	MOVIA	0xbe
     0124 04rr                      1- 1498     	SUBAR	_R_AIN4_DATA,W
     0125                           1- 1499     _00514_DS_:
     0125 0C03                      1- 1500     	BTRSC	STATUS,0
                                    1- 1501     	MGOTO	_00390_DS_
     0126 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1502     	.line	584, "main.c"; 	pwStep = 2;
     0127 2102                      1- 1503     	MOVIA	0x02
                                    1- 1504     	BANKSEL	_pwStep
     0128 rrrr                      3-  110 m1      .banksel ram_address
     0129 00rr                      1- 1505     	MOVAR	_pwStep
                                    1- 1506     	MGOTO	_00390_DS_
     012A 3rrr                      3-   63 m1      LGOTO rom_address
     012B                           1- 1507     _00389_DS_:
                                    1- 1508     	.line	587, "main.c"; 	pwStep = 2;
     012B 2102                      1- 1509     	MOVIA	0x02
                                    1- 1510     	BANKSEL	_pwStep
     012C rrrr                      3-  110 m1      .banksel ram_address
     012D 00rr                      1- 1511     	MOVAR	_pwStep
     012E                           1- 1512     _00390_DS_:
                                    1- 1513     	.line	588, "main.c"; 	chrgTime = 0;
                                    1- 1514     	BANKSEL	_chrgTime
     012E rrrr                      3-  110 m1      .banksel ram_address
     012F 02rr                      1- 1515     	CLRR	_chrgTime
     0130 02rr                      1- 1516     	CLRR	(_chrgTime + 1)
                                    1- 1517     	MGOTO	_00410_DS_
     0131 3rrr                      3-   63 m1      LGOTO rom_address
     0132                           1- 1518     _00399_DS_:
                                    1- 1519     	.line	590, "main.c"; 	else  if(R_AIN4_DATA > 0)
                                    1- 1520     	BANKSEL	_R_AIN4_DATA
     0132 rrrr                      3-  110 m1      .banksel ram_address
     0133 01rr                      1- 1521     	MOVR	_R_AIN4_DATA,W
     0134 11rr                      1- 1522     	IORAR	(_R_AIN4_DATA + 1),W
     0135 0D03                      1- 1523     	BTRSC	STATUS,2
                                    1- 1524     	MGOTO	_00410_DS_
     0136 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1525     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1526     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 1527     	.line	593, "main.c"; 	if(pwStep > 1)
     0137 2102                      1- 1528     	MOVIA	0x02
                                    1- 1529     	BANKSEL	_pwStep
     0138 rrrr                      3-  110 m1      .banksel ram_address
     0139 04rr                      1- 1530     	SUBAR	_pwStep,W
     013A 0803                      1- 1531     	BTRSS	STATUS,0
                                    1- 1532     	MGOTO	_00394_DS_
     013B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1533     ;;unsigned compare: left < lit (0x5A=90), size=2
                                    1- 1534     	.line	595, "main.c"; 	if(R_AIN4_DATA < 90)
     013C 2100                      1- 1535     	MOVIA	0x00
                                    1- 1536     	BANKSEL	_R_AIN4_DATA
     013D rrrr                      3-  110 m1      .banksel ram_address
     013E 04rr                      1- 1537     	SUBAR	(_R_AIN4_DATA + 1),W
     013F 0903                      1- 1538     	BTRSS	STATUS,2
                                    1- 1539     	MGOTO	_00516_DS_
     0140 3rrr                      3-   63 m1      LGOTO rom_address
     0141 215A                      1- 1540     	MOVIA	0x5a
     0142 04rr                      1- 1541     	SUBAR	_R_AIN4_DATA,W
     0143                           1- 1542     _00516_DS_:
     0143 0C03                      1- 1543     	BTRSC	STATUS,0
                                    1- 1544     	MGOTO	_00395_DS_
     0144 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1545     	.line	596, "main.c"; 	pwStep = 1;
     0145 2101                      1- 1546     	MOVIA	0x01
                                    1- 1547     	BANKSEL	_pwStep
     0146 rrrr                      3-  110 m1      .banksel ram_address
     0147 00rr                      1- 1548     	MOVAR	_pwStep
                                    1- 1549     	MGOTO	_00395_DS_
     0148 3rrr                      3-   63 m1      LGOTO rom_address
     0149                           1- 1550     _00394_DS_:
                                    1- 1551     	.line	599, "main.c"; 	pwStep = 1;
     0149 2101                      1- 1552     	MOVIA	0x01
                                    1- 1553     	BANKSEL	_pwStep
     014A rrrr                      3-  110 m1      .banksel ram_address
     014B 00rr                      1- 1554     	MOVAR	_pwStep
     014C                           1- 1555     _00395_DS_:
                                    1- 1556     	.line	600, "main.c"; 	chrgTime = 0;
                                    1- 1557     	BANKSEL	_chrgTime
     014C rrrr                      3-  110 m1      .banksel ram_address
     014D 02rr                      1- 1558     	CLRR	_chrgTime
     014E 02rr                      1- 1559     	CLRR	(_chrgTime + 1)
     014F                           1- 1560     _00410_DS_:
                                    1- 1561     	.line	604, "main.c"; 	}
                                    1- 1562     	RETURN	
     014F 0010                      3-   40 m1      ret
                                    1- 1563     ; exit point of _checkBatAD
                                    1- 1565     ;***
                                    1- 1566     ;  pBlock Stats: dbName = C
                                    1- 1567     ;***
                                    1- 1568     ;has an exit
                                    1- 1569     ;functions called:
                                    1- 1570     ;   _delay
                                    1- 1571     ;   _delay
                                    1- 1572     ;; Starting pCode block
                                    1- 1573     .segment "code"; module=main, function=_initAD
     0000                           1- 1575     _initAD:
                                    1- 1576     ; 2 exit points
                                    1- 1577     	.line	475, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1578     	MOVIA	0x84
     0001 00rr                      1- 1579     	MOVAR	_ADMD
                                    1- 1580     	.line	480, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1581     	CLRR	_ADVREFH
                                    1- 1582     	.line	485, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1583     	MOVIA	0x10
     0004 00rr                      1- 1584     	MOVAR	_ADR
                                    1- 1585     	.line	487, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1586     	MOVIA	0x03
     0006 00rr                      1- 1587     	MOVAR	_ADCR
                                    1- 1588     	.line	490, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1589     	BSR	_ADMDbits,4
                                    1- 1590     	.line	491, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1591     	MOVIA	0x64
                                    1- 1592     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1593     	.line	494, "main.c"; 	}
                                    1- 1594     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1595     ; exit point of _initAD
                                    1- 1597     ;***
                                    1- 1598     ;  pBlock Stats: dbName = C
                                    1- 1599     ;***
                                    1- 1600     ;has an exit
                                    1- 1601     ;2 compiler assigned registers:
                                    1- 1602     ;   r0x1026
                                    1- 1603     ;   r0x1027
                                    1- 1604     ;; Starting pCode block
                                    1- 1605     .segment "code"; module=main, function=_delay
                                    1- 1607     ;local variable name mapping:
     0000                           1- 1610     _delay:
                                    1- 1611     ; 2 exit points
                                    1- 1612     	.line	465, "main.c"; 	void delay(u8t time)
                                    1- 1613     	BANKSEL	r0x1026
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1614     	MOVAR	r0x1026
                                    1- 1615     	.line	467, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1616     	BANKSEL	r0x1027
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1617     	CLRR	r0x1027
     0004                           1- 1618     _00337_DS_:
                                    1- 1619     	BANKSEL	r0x1026
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 1620     	MOVR	r0x1026,W
                                    1- 1621     	BANKSEL	r0x1027
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1- 1622     	SUBAR	r0x1027,W
     0008 0C03                      1- 1623     	BTRSC	STATUS,0
                                    1- 1624     	MGOTO	_00339_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1625     	.line	468, "main.c"; 	NOP();
     000A 0000                      1- 1626     	nop
                                    1- 1627     	.line	467, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1628     	BANKSEL	r0x1027
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 1629     	INCR	r0x1027,F
                                    1- 1630     	MGOTO	_00337_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 1631     _00339_DS_:
                                    1- 1632     	.line	469, "main.c"; 	}
                                    1- 1633     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 1634     ; exit point of _delay
                                    1- 1636     ;***
                                    1- 1637     ;  pBlock Stats: dbName = C
                                    1- 1638     ;***
                                    1- 1639     ;has an exit
                                    1- 1640     ;functions called:
                                    1- 1641     ;   _pwmStop
                                    1- 1642     ;   _pwmStop
                                    1- 1643     ;; Starting pCode block
                                    1- 1644     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1646     _chrgCtr:
                                    1- 1647     ; 2 exit points
                                    1- 1648     	.line	431, "main.c"; 	if(PORTA & 0x20)
                                    1- 1649     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Arr                      1- 1650     	BTRSS	_PORTA,5
                                    1- 1651     	MGOTO	_00328_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1652     	.line	434, "main.c"; 	chrgFlag = 1;
                                    1- 1653     	BANKSEL	_Status
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 19rr                      1- 1654     	BSR	_Status,3
                                    1- 1655     	.line	435, "main.c"; 	workStep = 0;
                                    1- 1656     	BANKSEL	_workStep
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1- 1657     	CLRR	_workStep
                                    1- 1658     	.line	436, "main.c"; 	pwmStop();
                                    1- 1659     	MCALL	_pwmStop
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1660     	.line	437, "main.c"; 	if(pwStep == 5)
                                    1- 1661     	BANKSEL	_pwStep
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 01rr                      1- 1662     	MOVR	_pwStep,W
     000A 2405                      1- 1663     	XORIA	0x05
     000B 0903                      1- 1664     	BTRSS	STATUS,2
                                    1- 1665     	MGOTO	_00323_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1666     	.line	440, "main.c"; 	ledStep = 4;
     000D 2104                      1- 1667     	MOVIA	0x04
                                    1- 1668     	BANKSEL	_ledStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1- 1669     	MOVAR	_ledStep
                                    1- 1670     	MGOTO	_00330_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
     0011                           1- 1671     _00323_DS_:
                                    1- 1672     	.line	444, "main.c"; 	if(count500ms == 0)
                                    1- 1673     	BANKSEL	_count500ms
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 1674     	MOVR	_count500ms,W
     0013 0903                      1- 1675     	BTRSS	STATUS,2
                                    1- 1676     	MGOTO	_00330_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1677     	.line	446, "main.c"; 	if(++ledStep > 4)
                                    1- 1678     	BANKSEL	_ledStep
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 05rr                      1- 1679     	INCR	_ledStep,F
                                    1- 1680     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1681     ;;unsigned compare: left >= lit (0x5=5), size=1
     0017 2105                      1- 1682     	MOVIA	0x05
     0018 04rr                      1- 1683     	SUBAR	_ledStep,W
     0019 0803                      1- 1684     	BTRSS	STATUS,0
                                    1- 1685     	MGOTO	_00330_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1686     	.line	447, "main.c"; 	ledStep = pwStep - 1;
                                    1- 1687     	BANKSEL	_pwStep
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 06rr                      1- 1688     	DECR	_pwStep,W
                                    1- 1689     	BANKSEL	_ledStep
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 00rr                      1- 1690     	MOVAR	_ledStep
                                    1- 1691     	MGOTO	_00330_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1- 1692     _00328_DS_:
                                    1- 1693     	.line	456, "main.c"; 	if(workStep == 0)
                                    1- 1694     	BANKSEL	_workStep
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1695     	MOVR	_workStep,W
     0022 0903                      1- 1696     	BTRSS	STATUS,2
                                    1- 1697     	MGOTO	_00005_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1698     	.line	457, "main.c"; 	ledStep = 0;
                                    1- 1699     	BANKSEL	_ledStep
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 02rr                      1- 1700     	CLRR	_ledStep
     0026                           1- 1701     _00005_DS_:
                                    1- 1702     	.line	458, "main.c"; 	chrgFlag = 0;
                                    1- 1703     	BANKSEL	_Status
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 1Drr                      1- 1704     	BCR	_Status,3
                                    1- 1705     	.line	459, "main.c"; 	chrgTime = 0;	//���ó�����
                                    1- 1706     	BANKSEL	_chrgTime
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 02rr                      1- 1707     	CLRR	_chrgTime
     002A 02rr                      1- 1708     	CLRR	(_chrgTime + 1)
     002B                           1- 1709     _00330_DS_:
                                    1- 1710     	.line	462, "main.c"; 	}
                                    1- 1711     	RETURN	
     002B 0010                      3-   40 m1      ret
                                    1- 1712     ; exit point of _chrgCtr
                                    1- 1714     ;***
                                    1- 1715     ;  pBlock Stats: dbName = C
                                    1- 1716     ;***
                                    1- 1717     ;has an exit
                                    1- 1718     ;1 compiler assigned register :
                                    1- 1719     ;   r0x103C
                                    1- 1720     ;; Starting pCode block
                                    1- 1721     .segment "code"; module=main, function=_keyRead
                                    1- 1723     ;local variable name mapping:
     0000                           1- 1725     _keyRead:
                                    1- 1726     ; 2 exit points
                                    1- 1727     	.line	394, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1728     	BANKSEL	r0x103C
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1729     	MOVAR	r0x103C
                                    1- 1730     	.line	396, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 1731     	MOVR	r0x103C,W
     0003 0D03                      1- 1732     	BTRSC	STATUS,2
                                    1- 1733     	MGOTO	_00311_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1734     	.line	398, "main.c"; 	keyCount++;
                                    1- 1735     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 1736     	INCR	_keyCount,F
                                    1- 1737     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 1738     	.line	399, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 1739     	MOVIA	0x64
     0008 04rr                      1- 1740     	SUBAR	_keyCount,W
     0009 0803                      1- 1741     	BTRSS	STATUS,0
                                    1- 1742     	MGOTO	_00312_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1743     	.line	401, "main.c"; 	keyCount = 100;
     000B 2164                      1- 1744     	MOVIA	0x64
     000C 00rr                      1- 1745     	MOVAR	_keyCount
                                    1- 1746     	.line	402, "main.c"; 	if(!longPressFlag)
                                    1- 1747     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Crr                      1- 1748     	BTRSC	_Status,1
                                    1- 1749     	MGOTO	_00312_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1750     	.line	404, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 1751     	BSR	_Status,1
                                    1- 1752     	.line	405, "main.c"; 	return 2;
     0011 2102                      1- 1753     	MOVIA	0x02
                                    1- 1754     	MGOTO	_00313_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1755     ;;unsigned compare: left < lit (0x64=100), size=1
     0013                           1- 1756     _00311_DS_:
                                    1- 1757     	.line	411, "main.c"; 	if(keyCount >= 100)
     0013 2164                      1- 1758     	MOVIA	0x64
                                    1- 1759     	BANKSEL	_keyCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 1760     	SUBAR	_keyCount,W
     0016 0803                      1- 1761     	BTRSS	STATUS,0
                                    1- 1762     	MGOTO	_00308_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1763     	.line	413, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 1764     	CLRR	_keyCount
                                    1- 1765     	.line	414, "main.c"; 	longPressFlag = 0;
                                    1- 1766     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Crr                      1- 1767     	BCR	_Status,1
                                    1- 1768     	.line	415, "main.c"; 	return	0;
     001B 2100                      1- 1769     	MOVIA	0x00
                                    1- 1770     	MGOTO	_00313_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1771     ;;unsigned compare: left < lit (0x8=8), size=1
     001D                           1- 1772     _00308_DS_:
                                    1- 1773     	.line	417, "main.c"; 	else if(keyCount >= 8)
     001D 2108                      1- 1774     	MOVIA	0x08
                                    1- 1775     	BANKSEL	_keyCount
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 1776     	SUBAR	_keyCount,W
     0020 0803                      1- 1777     	BTRSS	STATUS,0
                                    1- 1778     	MGOTO	_00309_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1779     	.line	419, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 1780     	CLRR	_keyCount
                                    1- 1781     	.line	420, "main.c"; 	return	1;
     0023 2101                      1- 1782     	MOVIA	0x01
                                    1- 1783     	MGOTO	_00313_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 1784     _00309_DS_:
                                    1- 1785     	.line	422, "main.c"; 	keyCount = 0;
                                    1- 1786     	BANKSEL	_keyCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 1787     	CLRR	_keyCount
     0027                           1- 1788     _00312_DS_:
                                    1- 1789     	.line	424, "main.c"; 	return 0;
     0027 2100                      1- 1790     	MOVIA	0x00
     0028                           1- 1791     _00313_DS_:
                                    1- 1792     	.line	425, "main.c"; 	}
                                    1- 1793     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 1794     ; exit point of _keyRead
                                    1- 1796     ;***
                                    1- 1797     ;  pBlock Stats: dbName = C
                                    1- 1798     ;***
                                    1- 1799     ;has an exit
                                    1- 1800     ;functions called:
                                    1- 1801     ;   _LedInput
                                    1- 1802     ;   _pwmStop
                                    1- 1803     ;   _LedInput
                                    1- 1804     ;   _pwmStop
                                    1- 1805     ;; Starting pCode block
                                    1- 1806     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1808     _gotoSleep:
                                    1- 1809     ; 2 exit points
                                    1- 1810     	.line	365, "main.c"; 	LedInput();
                                    1- 1811     	MCALL	_LedInput
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1812     	.line	366, "main.c"; 	sleepTime = 0;
                                    1- 1813     	BANKSEL	_sleepTime
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 02rr                      1- 1814     	CLRR	_sleepTime
     0003 02rr                      1- 1815     	CLRR	(_sleepTime + 1)
                                    1- 1816     	.line	368, "main.c"; 	pwmStop();
                                    1- 1817     	MCALL	_pwmStop
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1818     	.line	369, "main.c"; 	workStep = 0;
                                    1- 1819     	BANKSEL	_workStep
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1- 1820     	CLRR	_workStep
                                    1- 1821     	.line	370, "main.c"; 	AWUCON = 0x60;
     0007 2160                      1- 1822     	MOVIA	0x60
     0008 00rr                      1- 1823     	MOVAR	_AWUCON
                                    1- 1824     	.line	371, "main.c"; 	fgPRD = 0;
                                    1- 1825     	BANKSEL	_fgPRD
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 02rr                      1- 1826     	CLRR	_fgPRD
     000B 02rr                      1- 1827     	CLRR	(_fgPRD + 1)
                                    1- 1828     	.line	372, "main.c"; 	fgCount = 0;
                                    1- 1829     	BANKSEL	_fgCount
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 02rr                      1- 1830     	CLRR	_fgCount
     000E 02rr                      1- 1831     	CLRR	(_fgCount + 1)
                                    1- 1832     	.line	373, "main.c"; 	redLedFlag = 0;
                                    1- 1833     	BANKSEL	_Status
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 1Drr                      1- 1834     	BCR	_Status,2
                                    1- 1835     	.line	374, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input;
     0011 2160                      1- 1836     	MOVIA	0x60
     0012 000r                      1- 1837     	IOST	_IOSTA
                                    1- 1838     	.line	375, "main.c"; 	IOSTB = 0x00;
     0013 0200                      1- 1839     	CLRA	
     0014 000r                      1- 1840     	IOST	_IOSTB
                                    1- 1841     	.line	376, "main.c"; 	PORTB = 0x00;
     0015 02rr                      1- 1842     	CLRR	_PORTB
                                    1- 1843     	.line	377, "main.c"; 	PORTA = 0x60;
     0016 2160                      1- 1844     	MOVIA	0x60
                                    1- 1845     	BANKSEL	_PORTA
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1846     	MOVAR	_PORTA
                                    1- 1847     	.line	378, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0019 210B                      1- 1848     	MOVIA	0x0b
     001A 00rr                      1- 1849     	MOVAR	_INTE
                                    1- 1850     	.line	379, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     001B 2118                      1- 1851     	MOVIA	0x18
     001C 00rr                      1- 1852     	MOVAR	_PCON
                                    1- 1853     	.line	380, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     001D 02rr                      1- 1854     	CLRR	_INTF
                                    1- 1855     	.line	381, "main.c"; 	CLRWDT();
     001E 0002                      1- 1856     	clrwdt
                                    1- 1857     	.line	382, "main.c"; 	ENI();
     001F 0004                      1- 1858     	ENI
                                    1- 1859     	.line	383, "main.c"; 	SLEEP();
     0020 0001                      1- 1860     	sleep
                                    1- 1861     	.line	384, "main.c"; 	AWUCON = 0x00;
     0021 02rr                      1- 1862     	CLRR	_AWUCON
                                    1- 1863     	.line	385, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input;
     0022 2170                      1- 1864     	MOVIA	0x70
     0023 000r                      1- 1865     	IOST	_IOSTA
                                    1- 1866     	.line	386, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0��Timer1��WDT overflow interrupt
     0024 2101                      1- 1867     	MOVIA	0x01
     0025 00rr                      1- 1868     	MOVAR	_INTE
                                    1- 1869     	.line	387, "main.c"; 	INTF = 0;
     0026 02rr                      1- 1870     	CLRR	_INTF
                                    1- 1871     	.line	389, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0027 21B8                      1- 1872     	MOVIA	0xb8
     0028 00rr                      1- 1873     	MOVAR	_PCON
                                    1- 1874     	.line	391, "main.c"; 	}
                                    1- 1875     	RETURN	
     0029 0010                      3-   40 m1      ret
                                    1- 1876     ; exit point of _gotoSleep
                                    1- 1878     ;***
                                    1- 1879     ;  pBlock Stats: dbName = C
                                    1- 1880     ;***
                                    1- 1881     ;has an exit
                                    1- 1882     ;; Starting pCode block
                                    1- 1883     .segment "code"; module=main, function=_pwmStop
     0000                           1- 1885     _pwmStop:
                                    1- 1886     ; 2 exit points
                                    1- 1887     	.line	359, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 1888     	CLRA	
     0001 00rr                      1- 1889     	SFUN	_T2CR1
                                    1- 1890     	.line	360, "main.c"; 	}
                                    1- 1891     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1892     ; exit point of _pwmStop
                                    1- 1894     ;***
                                    1- 1895     ;  pBlock Stats: dbName = C
                                    1- 1896     ;***
                                    1- 1897     ;has an exit
                                    1- 1898     ;1 compiler assigned register :
                                    1- 1899     ;   r0x103E
                                    1- 1900     ;; Starting pCode block
                                    1- 1901     .segment "code"; module=main, function=_pwmInit
     0000                           1- 1903     _pwmInit:
                                    1- 1904     ; 2 exit points
                                    1- 1905     	.line	347, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 1906     	SFUNR	_T2CR1
                                    1- 1907     	BANKSEL	r0x103E
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1908     	MOVAR	r0x103E
     0003 0Frr                      1- 1909     	BTRSC	r0x103E,7
                                    1- 1910     	.line	348, "main.c"; 	return;
                                    1- 1911     	MGOTO	_00288_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1912     	.line	349, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 1913     	CLRR	_TMRH
                                    1- 1914     	.line	350, "main.c"; 	TMR2 = 128;							//Ƶ��Ϊ110K
     0006 2180                      1- 1915     	MOVIA	0x80
     0007 00rr                      1- 1916     	SFUN	_TMR2
                                    1- 1917     	.line	353, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 1918     	CLRA	
     0009 00rr                      1- 1919     	SFUN	_T2CR2
                                    1- 1920     	.line	354, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 1921     	MOVIA	0x83
     000B 00rr                      1- 1922     	SFUN	_T2CR1
     000C                           1- 1923     _00288_DS_:
                                    1- 1924     	.line	355, "main.c"; 	}
                                    1- 1925     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 1926     ; exit point of _pwmInit
                                    1- 1928     ;***
                                    1- 1929     ;  pBlock Stats: dbName = C
                                    1- 1930     ;***
                                    1- 1931     ;has an exit
                                    1- 1932     ;functions called:
                                    1- 1933     ;   _delay
                                    1- 1934     ;   _LedInput
                                    1- 1935     ;   _delay
                                    1- 1936     ;   _LedInput
                                    1- 1937     ;1 compiler assigned register :
                                    1- 1938     ;   r0x103F
                                    1- 1939     ;; Starting pCode block
                                    1- 1940     .segment "code"; module=main, function=_LED4ON
     0000                           1- 1942     _LED4ON:
                                    1- 1943     ; 2 exit points
                                    1- 1944     	.line	338, "main.c"; 	IOSTB &= 0xF7;
     0000 001r                      1- 1945     	IOSTR	_IOSTB
                                    1- 1946     	BANKSEL	r0x103F
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1947     	MOVAR	r0x103F
     0003 1Drr                      1- 1948     	BCR	r0x103F,3
     0004 01rr                      1- 1949     	MOVR	r0x103F,W
     0005 000r                      1- 1950     	IOST	_IOSTB
                                    1- 1951     	.line	339, "main.c"; 	PORTB |= 0x08;
     0006 19rr                      1- 1952     	BSR	_PORTB,3
                                    1- 1953     	.line	340, "main.c"; 	delay(100);
     0007 2164                      1- 1954     	MOVIA	0x64
                                    1- 1955     	MCALL	_delay
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1956     	.line	341, "main.c"; 	LedInput();
                                    1- 1957     	MCALL	_LedInput
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1958     	.line	342, "main.c"; 	}
                                    1- 1959     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1960     ; exit point of _LED4ON
                                    1- 1962     ;***
                                    1- 1963     ;  pBlock Stats: dbName = C
                                    1- 1964     ;***
                                    1- 1965     ;has an exit
                                    1- 1966     ;functions called:
                                    1- 1967     ;   _delay
                                    1- 1968     ;   _LedInput
                                    1- 1969     ;   _delay
                                    1- 1970     ;   _LedInput
                                    1- 1971     ;1 compiler assigned register :
                                    1- 1972     ;   r0x1040
                                    1- 1973     ;; Starting pCode block
                                    1- 1974     .segment "code"; module=main, function=_LED3ON
     0000                           1- 1976     _LED3ON:
                                    1- 1977     ; 2 exit points
                                    1- 1978     	.line	328, "main.c"; 	IOSTA &= 0XFE;
     0000 001r                      1- 1979     	IOSTR	_IOSTA
                                    1- 1980     	BANKSEL	r0x1040
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1981     	MOVAR	r0x1040
     0003 1Crr                      1- 1982     	BCR	r0x1040,0
     0004 01rr                      1- 1983     	MOVR	r0x1040,W
     0005 000r                      1- 1984     	IOST	_IOSTA
                                    1- 1985     	.line	329, "main.c"; 	PORTA |= 0X01;
                                    1- 1986     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 18rr                      1- 1987     	BSR	_PORTA,0
                                    1- 1988     	.line	330, "main.c"; 	delay(100);
     0008 2164                      1- 1989     	MOVIA	0x64
                                    1- 1990     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1991     	.line	331, "main.c"; 	LedInput();
                                    1- 1992     	MCALL	_LedInput
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1993     	.line	332, "main.c"; 	}
                                    1- 1994     	RETURN	
     000B 0010                      3-   40 m1      ret
                                    1- 1995     ; exit point of _LED3ON
                                    1- 1997     ;***
                                    1- 1998     ;  pBlock Stats: dbName = C
                                    1- 1999     ;***
                                    1- 2000     ;has an exit
                                    1- 2001     ;functions called:
                                    1- 2002     ;   _delay
                                    1- 2003     ;   _LedInput
                                    1- 2004     ;   _delay
                                    1- 2005     ;   _LedInput
                                    1- 2006     ;1 compiler assigned register :
                                    1- 2007     ;   r0x1041
                                    1- 2008     ;; Starting pCode block
                                    1- 2009     .segment "code"; module=main, function=_LED2ON
     0000                           1- 2011     _LED2ON:
                                    1- 2012     ; 2 exit points
                                    1- 2013     	.line	319, "main.c"; 	IOSTA &= 0X7F;
     0000 001r                      1- 2014     	IOSTR	_IOSTA
                                    1- 2015     	BANKSEL	r0x1041
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2016     	MOVAR	r0x1041
     0003 1Frr                      1- 2017     	BCR	r0x1041,7
     0004 01rr                      1- 2018     	MOVR	r0x1041,W
     0005 000r                      1- 2019     	IOST	_IOSTA
                                    1- 2020     	.line	320, "main.c"; 	PORTA |= 0X80;
                                    1- 2021     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 1Brr                      1- 2022     	BSR	_PORTA,7
                                    1- 2023     	.line	321, "main.c"; 	delay(100);
     0008 2164                      1- 2024     	MOVIA	0x64
                                    1- 2025     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2026     	.line	322, "main.c"; 	LedInput();
                                    1- 2027     	MCALL	_LedInput
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2028     	.line	323, "main.c"; 	}
                                    1- 2029     	RETURN	
     000B 0010                      3-   40 m1      ret
                                    1- 2030     ; exit point of _LED2ON
                                    1- 2032     ;***
                                    1- 2033     ;  pBlock Stats: dbName = C
                                    1- 2034     ;***
                                    1- 2035     ;has an exit
                                    1- 2036     ;functions called:
                                    1- 2037     ;   _delay
                                    1- 2038     ;   _LedInput
                                    1- 2039     ;   _delay
                                    1- 2040     ;   _LedInput
                                    1- 2041     ;1 compiler assigned register :
                                    1- 2042     ;   r0x1042
                                    1- 2043     ;; Starting pCode block
                                    1- 2044     .segment "code"; module=main, function=_LED1ON
     0000                           1- 2046     _LED1ON:
                                    1- 2047     ; 2 exit points
                                    1- 2048     	.line	310, "main.c"; 	IOSTA &= 0XFD;
     0000 001r                      1- 2049     	IOSTR	_IOSTA
                                    1- 2050     	BANKSEL	r0x1042
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2051     	MOVAR	r0x1042
     0003 1Crr                      1- 2052     	BCR	r0x1042,1
     0004 01rr                      1- 2053     	MOVR	r0x1042,W
     0005 000r                      1- 2054     	IOST	_IOSTA
                                    1- 2055     	.line	311, "main.c"; 	PORTA |= 0X02;
                                    1- 2056     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 18rr                      1- 2057     	BSR	_PORTA,1
                                    1- 2058     	.line	312, "main.c"; 	delay(100);
     0008 2164                      1- 2059     	MOVIA	0x64
                                    1- 2060     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2061     	.line	313, "main.c"; 	LedInput();
                                    1- 2062     	MCALL	_LedInput
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2063     	.line	314, "main.c"; 	}
                                    1- 2064     	RETURN	
     000B 0010                      3-   40 m1      ret
                                    1- 2065     ; exit point of _LED1ON
                                    1- 2067     ;***
                                    1- 2068     ;  pBlock Stats: dbName = C
                                    1- 2069     ;***
                                    1- 2070     ;has an exit
                                    1- 2071     ;1 compiler assigned register :
                                    1- 2072     ;   r0x103D
                                    1- 2073     ;; Starting pCode block
                                    1- 2074     .segment "code"; module=main, function=_LedInput
     0000                           1- 2076     _LedInput:
                                    1- 2077     ; 2 exit points
                                    1- 2078     	.line	302, "main.c"; 	IOSTA |= 0x83;
     0000 001r                      1- 2079     	IOSTR	_IOSTA
                                    1- 2080     	BANKSEL	r0x103D
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2081     	MOVAR	r0x103D
     0003 2183                      1- 2082     	MOVIA	0x83
     0004 11rr                      1- 2083     	IORAR	r0x103D,F
     0005 01rr                      1- 2084     	MOVR	r0x103D,W
     0006 000r                      1- 2085     	IOST	_IOSTA
                                    1- 2086     	.line	303, "main.c"; 	IOSTB |= 0x08;
     0007 001r                      1- 2087     	IOSTR	_IOSTB
     0008 00rr                      1- 2088     	MOVAR	r0x103D
     0009 19rr                      1- 2089     	BSR	r0x103D,3
     000A 01rr                      1- 2090     	MOVR	r0x103D,W
     000B 000r                      1- 2091     	IOST	_IOSTB
                                    1- 2092     	.line	304, "main.c"; 	PORTA &= 0x7C;
     000C 217C                      1- 2093     	MOVIA	0x7c
                                    1- 2094     	BANKSEL	_PORTA
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 10rr                      1- 2095     	ANDAR	_PORTA,F
                                    1- 2096     	.line	305, "main.c"; 	PORTB &= 0xF7;
     000F 1Drr                      1- 2097     	BCR	_PORTB,3
                                    1- 2098     	.line	306, "main.c"; 	}
                                    1- 2099     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2100     ; exit point of _LedInput
                                    1- 2102     ;***
                                    1- 2103     ;  pBlock Stats: dbName = C
                                    1- 2104     ;***
                                    1- 2105     ;has an exit
                                    1- 2106     ;functions called:
                                    1- 2107     ;   _LedInput
                                    1- 2108     ;   _LedInput
                                    1- 2109     ;   _LED4ON
                                    1- 2110     ;   _LED3ON
                                    1- 2111     ;   _LED2ON
                                    1- 2112     ;   _LED1ON
                                    1- 2113     ;   _LedInput
                                    1- 2114     ;   _LedInput
                                    1- 2115     ;   _LED4ON
                                    1- 2116     ;   _LED3ON
                                    1- 2117     ;   _LED2ON
                                    1- 2118     ;   _LED1ON
                                    1- 2119     ;; Starting pCode block
                                    1- 2120     .segment "code"; module=main, function=_ledShow
     0000                           1- 2122     _ledShow:
                                    1- 2123     ; 2 exit points
                                    1- 2124     ;;unsigned compare: left < lit (0xA=10), size=1
                                    1- 2125     	.line	273, "main.c"; 	if((overCount >= 10 || lowBat == 1 )&& workStep > 0)
     0000 210A                      1- 2126     	MOVIA	0x0a
                                    1- 2127     	BANKSEL	_overCount
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2128     	SUBAR	_overCount,W
     0003 0C03                      1- 2129     	BTRSC	STATUS,0
                                    1- 2130     	MGOTO	_00237_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2131     	BANKSEL	_lowBat
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 01rr                      1- 2132     	MOVR	_lowBat,W
     0007 2401                      1- 2133     	XORIA	0x01
     0008 0903                      1- 2134     	BTRSS	STATUS,2
                                    1- 2135     	MGOTO	_00235_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
     000A                           1- 2136     _00237_DS_:
                                    1- 2137     	BANKSEL	_workStep
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1- 2138     	MOVR	_workStep,W
     000C 0D03                      1- 2139     	BTRSC	STATUS,2
                                    1- 2140     	MGOTO	_00235_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2141     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 2142     	.line	275, "main.c"; 	if(count1s < 50)
     000E 2132                      1- 2143     	MOVIA	0x32
                                    1- 2144     	BANKSEL	_count1s
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 04rr                      1- 2145     	SUBAR	_count1s,W
     0011 0C03                      1- 2146     	BTRSC	STATUS,0
                                    1- 2147     	MGOTO	_00232_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2148     	.line	276, "main.c"; 	ledStep = workStep;
                                    1- 2149     	BANKSEL	_workStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2150     	MOVR	_workStep,W
                                    1- 2151     	BANKSEL	_ledStep
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 00rr                      1- 2152     	MOVAR	_ledStep
                                    1- 2153     	MGOTO	_00235_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
     0018                           1- 2154     _00232_DS_:
                                    1- 2155     	.line	278, "main.c"; 	ledStep = 0;
                                    1- 2156     	BANKSEL	_ledStep
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 2157     	CLRR	_ledStep
     001A                           1- 2158     _00235_DS_:
                                    1- 2159     	.line	280, "main.c"; 	LedInput();
                                    1- 2160     	MCALL	_LedInput
     001A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2161     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2162     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 2163     	.line	281, "main.c"; 	switch(ledStep)
     001B 2105                      1- 2164     	MOVIA	0x05
                                    1- 2165     	BANKSEL	_ledStep
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 04rr                      1- 2166     	SUBAR	_ledStep,W
     001E 0C03                      1- 2167     	BTRSC	STATUS,0
                                    1- 2168     	MGOTO	_00244_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020 21rr                      1- 2169     	MOVIA	((_00261_DS_ >> 8) & 0xff)
     0021 008A                      1- 2170     	MOVAR	PCHBUF
     0022 01rr                      1- 2171     	MOVR	_ledStep,W
     0023 25rr                      1- 2172     	ADDIA	_00261_DS_
     0024 0C03                      1- 2173     	BTRSC	STATUS,0
     0025 058A                      1- 2174     	INCR	PCHBUF,F
     0026 0082                      1- 2175     	MOVAR	PCL
     0027                           1- 2176     _00261_DS_:
                                    1- 2177     	MGOTO	_00238_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2178     	MGOTO	_00242_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2179     	MGOTO	_00241_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2180     	MGOTO	_00240_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2181     	MGOTO	_00239_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C                           1- 2182     _00238_DS_:
                                    1- 2183     	.line	284, "main.c"; 	LedInput();
                                    1- 2184     	MCALL	_LedInput
     002C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2185     	.line	285, "main.c"; 	break;
                                    1- 2186     	MGOTO	_00244_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
     002E                           1- 2187     _00239_DS_:
                                    1- 2188     	.line	287, "main.c"; 	LED4ON();
                                    1- 2189     	MCALL	_LED4ON
     002E 2rrr                      3-   66 m1      LCALL rom_address
     002F                           1- 2190     _00240_DS_:
                                    1- 2191     	.line	289, "main.c"; 	LED3ON();
                                    1- 2192     	MCALL	_LED3ON
     002F 2rrr                      3-   66 m1      LCALL rom_address
     0030                           1- 2193     _00241_DS_:
                                    1- 2194     	.line	291, "main.c"; 	LED2ON();
                                    1- 2195     	MCALL	_LED2ON
     0030 2rrr                      3-   66 m1      LCALL rom_address
     0031                           1- 2196     _00242_DS_:
                                    1- 2197     	.line	293, "main.c"; 	LED1ON();
                                    1- 2198     	MCALL	_LED1ON
     0031 2rrr                      3-   66 m1      LCALL rom_address
     0032                           1- 2199     _00244_DS_:
                                    1- 2200     	.line	296, "main.c"; 	}
                                    1- 2201     	RETURN	
     0032 0010                      3-   40 m1      ret
                                    1- 2202     ; exit point of _ledShow
                                    1- 2204     ;***
                                    1- 2205     ;  pBlock Stats: dbName = C
                                    1- 2206     ;***
                                    1- 2207     ;has an exit
                                    1- 2208     ;; Starting pCode block
                                    1- 2209     .segment "code"; module=main, function=_initSys
     0000                           1- 2211     _initSys:
                                    1- 2212     ; 2 exit points
                                    1- 2213     	.line	242, "main.c"; 	DISI();
     0000 0013                      1- 2214     	DISI
                                    1- 2215     	.line	243, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input;
     0001 2178                      1- 2216     	MOVIA	0x78
     0002 000r                      1- 2217     	IOST	_IOSTA
                                    1- 2218     	.line	244, "main.c"; 	IOSTB = C_PB0_Input | C_PB1_Input;
     0003 2103                      1- 2219     	MOVIA	0x03
     0004 000r                      1- 2220     	IOST	_IOSTB
                                    1- 2221     	.line	245, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2222     	CLRR	_PORTB
                                    1- 2223     	.line	246, "main.c"; 	PORTA = 0x00;
                                    1- 2224     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2225     	CLRR	_PORTA
                                    1- 2226     	.line	247, "main.c"; 	APHCON = 0x9F;
     0008 219F                      1- 2227     	MOVIA	0x9f
     0009 000r                      1- 2228     	IOST	_APHCON
                                    1- 2229     	.line	248, "main.c"; 	BPHCON = 0xFF;
     000A 21FF                      1- 2230     	MOVIA	0xff
     000B 00rr                      1- 2231     	MOVAR	_BPHCON
                                    1- 2232     	.line	249, "main.c"; 	ABPLCON = 0xDF;
     000C 21DF                      1- 2233     	MOVIA	0xdf
     000D 00rr                      1- 2234     	MOVAR	_ABPLCON
                                    1- 2235     	.line	251, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0��Timer1��WDT overflow interrupt
     000E 2101                      1- 2236     	MOVIA	0x01
     000F 00rr                      1- 2237     	MOVAR	_INTE
                                    1- 2238     	.line	253, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 2239     	CLRA	
     0011 000r                      1- 2240     	IOST	_PCON1
                                    1- 2241     	.line	255, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 2242     	MOVIA	0x37
     0013 00rr                      1- 2243     	MOVAR	_TMR0
                                    1- 2244     	.line	256, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0014 0200                      1- 2245     	CLRA	
     0015 0003                      1- 2246     	T0MD	
                                    1- 2247     	.line	258, "main.c"; 	PCON1 = C_TMR0_En;
     0016 2101                      1- 2248     	MOVIA	0x01
     0017 000r                      1- 2249     	IOST	_PCON1
                                    1- 2250     	.line	261, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0018 2198                      1- 2251     	MOVIA	0x98
     0019 00rr                      1- 2252     	MOVAR	_PCON
                                    1- 2253     	.line	264, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001A 2101                      1- 2254     	MOVIA	0x01
     001B 000r                      1- 2255     	IOST	_PCON1
                                    1- 2256     	.line	265, "main.c"; 	ENI();
     001C 0004                      1- 2257     	ENI
                                    1- 2258     	.line	266, "main.c"; 	}
                                    1- 2259     	RETURN	
     001D 0010                      3-   40 m1      ret
                                    1- 2260     ; exit point of _initSys
                                    1- 2262     ;***
                                    1- 2263     ;  pBlock Stats: dbName = C
                                    1- 2264     ;***
                                    1- 2265     ;has an exit
                                    1- 2266     ;functions called:
                                    1- 2267     ;   _pwmStop
                                    1- 2268     ;   _pwmStop
                                    1- 2269     ;; Starting pCode block
                                    1- 2270     .segment "code"; module=main, function=_powerOff
     0000                           1- 2272     _powerOff:
                                    1- 2273     ; 2 exit points
                                    1- 2274     	.line	232, "main.c"; 	workStep = 0;
                                    1- 2275     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2276     	CLRR	_workStep
                                    1- 2277     	.line	233, "main.c"; 	pwmStop();
                                    1- 2278     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2279     	.line	234, "main.c"; 	ledStep = 5;
     0003 2105                      1- 2280     	MOVIA	0x05
                                    1- 2281     	BANKSEL	_ledStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 00rr                      1- 2282     	MOVAR	_ledStep
                                    1- 2283     	.line	235, "main.c"; 	workStartFlag = 2;
     0006 2102                      1- 2284     	MOVIA	0x02
                                    1- 2285     	BANKSEL	_workStartFlag
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 00rr                      1- 2286     	MOVAR	_workStartFlag
                                    1- 2287     	.line	236, "main.c"; 	}
                                    1- 2288     	RETURN	
     0009 0010                      3-   40 m1      ret
                                    1- 2289     ; exit point of _powerOff
                                    1- 2291     ;***
                                    1- 2292     ;  pBlock Stats: dbName = C
                                    1- 2293     ;***
                                    1- 2294     ;has an exit
                                    1- 2295     ;functions called:
                                    1- 2296     ;   _keyRead
                                    1- 2297     ;   _powerOff
                                    1- 2298     ;   _pwmInit
                                    1- 2299     ;   _powerOff
                                    1- 2300     ;   _pwmInit
                                    1- 2301     ;   _keyRead
                                    1- 2302     ;   _powerOff
                                    1- 2303     ;   _pwmInit
                                    1- 2304     ;   _powerOff
                                    1- 2305     ;   _pwmInit
                                    1- 2306     ;1 compiler assigned register :
                                    1- 2307     ;   r0x1043
                                    1- 2308     ;; Starting pCode block
                                    1- 2309     .segment "code"; module=main, function=_keyCtr
                                    1- 2311     ;local variable name mapping:
     0000                           1- 2313     _keyCtr:
                                    1- 2314     ; 2 exit points
                                    1- 2315     	.line	173, "main.c"; 	char kclick = keyRead(0x40 & (~PORTA));
                                    1- 2316     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 2317     	COMR	_PORTA,W
                                    1- 2318     	BANKSEL	r0x1043
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 2319     	MOVAR	r0x1043
     0004 2140                      1- 2320     	MOVIA	0x40
     0005 10rr                      1- 2321     	ANDAR	r0x1043,F
     0006 01rr                      1- 2322     	MOVR	r0x1043,W
                                    1- 2323     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2324     	BANKSEL	r0x1043
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2325     	MOVAR	r0x1043
                                    1- 2326     	.line	174, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 2327     	XORIA	0x01
     000B 0903                      1- 2328     	BTRSS	STATUS,2
                                    1- 2329     	MGOTO	_00216_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2330     	.line	176, "main.c"; 	count500ms = 0;
                                    1- 2331     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 2332     	CLRR	_count500ms
                                    1- 2333     	.line	178, "main.c"; 	ledTime = 0;
                                    1- 2334     	BANKSEL	_ledTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2335     	CLRR	_ledTime
                                    1- 2336     	.line	179, "main.c"; 	if(++workStep > 4)
                                    1- 2337     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 05rr                      1- 2338     	INCR	_workStep,F
                                    1- 2339     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2340     ;;unsigned compare: left >= lit (0x5=5), size=1
     0013 2105                      1- 2341     	MOVIA	0x05
     0014 04rr                      1- 2342     	SUBAR	_workStep,W
     0015 0C03                      1- 2343     	BTRSC	STATUS,0
                                    1- 2344     	.line	180, "main.c"; 	workStep = 0;
     0016 02rr                      1- 2345     	CLRR	_workStep
                                    1- 2346     	.line	182, "main.c"; 	if(workStep == 0)
     0017 01rr                      1- 2347     	MOVR	_workStep,W
     0018 0903                      1- 2348     	BTRSS	STATUS,2
                                    1- 2349     	MGOTO	_00203_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2350     	.line	184, "main.c"; 	powerOff();
                                    1- 2351     	MCALL	_powerOff
     001A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2352     	MGOTO	_00204_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
     001C                           1- 2353     _00203_DS_:
                                    1- 2354     	.line	186, "main.c"; 	else if(workStep == 1)
                                    1- 2355     	BANKSEL	_workStep
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 01rr                      1- 2356     	MOVR	_workStep,W
     001E 2401                      1- 2357     	XORIA	0x01
     001F 0903                      1- 2358     	BTRSS	STATUS,2
                                    1- 2359     	MGOTO	_00200_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2360     	.line	188, "main.c"; 	maxDuty = 90;
     0021 215A                      1- 2361     	MOVIA	0x5a
                                    1- 2362     	BANKSEL	_maxDuty
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 00rr                      1- 2363     	MOVAR	_maxDuty
                                    1- 2364     	.line	189, "main.c"; 	currentDuty = 120;
     0024 2178                      1- 2365     	MOVIA	0x78
                                    1- 2366     	BANKSEL	_currentDuty
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 00rr                      1- 2367     	MOVAR	_currentDuty
                                    1- 2368     	MGOTO	_00204_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 2369     _00200_DS_:
                                    1- 2370     	.line	191, "main.c"; 	else if(workStep == 2)
                                    1- 2371     	BANKSEL	_workStep
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 01rr                      1- 2372     	MOVR	_workStep,W
     002A 2402                      1- 2373     	XORIA	0x02
     002B 0903                      1- 2374     	BTRSS	STATUS,2
                                    1- 2375     	MGOTO	_00197_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2376     	.line	192, "main.c"; 	maxDuty = 102;
     002D 2166                      1- 2377     	MOVIA	0x66
                                    1- 2378     	BANKSEL	_maxDuty
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1- 2379     	MOVAR	_maxDuty
                                    1- 2380     	MGOTO	_00204_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 2381     _00197_DS_:
                                    1- 2382     	.line	193, "main.c"; 	else if(workStep == 3)
                                    1- 2383     	BANKSEL	_workStep
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1- 2384     	MOVR	_workStep,W
     0033 2403                      1- 2385     	XORIA	0x03
     0034 0903                      1- 2386     	BTRSS	STATUS,2
                                    1- 2387     	MGOTO	_00194_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2388     	.line	194, "main.c"; 	maxDuty = 115;
     0036 2173                      1- 2389     	MOVIA	0x73
                                    1- 2390     	BANKSEL	_maxDuty
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 00rr                      1- 2391     	MOVAR	_maxDuty
                                    1- 2392     	MGOTO	_00204_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
     003A                           1- 2393     _00194_DS_:
                                    1- 2394     	.line	195, "main.c"; 	else if(workStep == 4)
                                    1- 2395     	BANKSEL	_workStep
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1- 2396     	MOVR	_workStep,W
     003C 2404                      1- 2397     	XORIA	0x04
     003D 0903                      1- 2398     	BTRSS	STATUS,2
                                    1- 2399     	MGOTO	_00204_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2400     	.line	196, "main.c"; 	maxDuty = 128;
     003F 2180                      1- 2401     	MOVIA	0x80
                                    1- 2402     	BANKSEL	_maxDuty
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 00rr                      1- 2403     	MOVAR	_maxDuty
     0042                           1- 2404     _00204_DS_:
                                    1- 2405     	.line	197, "main.c"; 	if(workStep > 0)
                                    1- 2406     	BANKSEL	_workStep
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1- 2407     	MOVR	_workStep,W
     0044 0D03                      1- 2408     	BTRSC	STATUS,2
                                    1- 2409     	MGOTO	_00209_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2410     	.line	199, "main.c"; 	if(workStep == 1)
     0046 01rr                      1- 2411     	MOVR	_workStep,W
     0047 2401                      1- 2412     	XORIA	0x01
     0048 0903                      1- 2413     	BTRSS	STATUS,2
                                    1- 2414     	MGOTO	_00206_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2415     	.line	201, "main.c"; 	PWM2DUTY = 90;
     004A 215A                      1- 2416     	MOVIA	0x5a
     004B 00rr                      1- 2417     	SFUN	_PWM2DUTY
                                    1- 2418     	MGOTO	_00207_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
     004D                           1- 2419     _00206_DS_:
                                    1- 2420     	.line	205, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 2421     	BANKSEL	_maxDuty
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 01rr                      1- 2422     	MOVR	_maxDuty,W
     004F 00rr                      1- 2423     	SFUN	_PWM2DUTY
     0050                           1- 2424     _00207_DS_:
                                    1- 2425     	.line	207, "main.c"; 	pwmInit();
                                    1- 2426     	MCALL	_pwmInit
     0050 2rrr                      3-   66 m1      LCALL rom_address
     0051                           1- 2427     _00209_DS_:
                                    1- 2428     	.line	209, "main.c"; 	ledStep = workStep;
                                    1- 2429     	BANKSEL	_workStep
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 01rr                      1- 2430     	MOVR	_workStep,W
                                    1- 2431     	BANKSEL	_ledStep
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 00rr                      1- 2432     	MOVAR	_ledStep
                                    1- 2433     	MGOTO	_00218_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
     0056                           1- 2434     _00216_DS_:
                                    1- 2435     	.line	211, "main.c"; 	else if(kclick == 2)
                                    1- 2436     	BANKSEL	r0x1043
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 01rr                      1- 2437     	MOVR	r0x1043,W
     0058 2402                      1- 2438     	XORIA	0x02
     0059 0903                      1- 2439     	BTRSS	STATUS,2
                                    1- 2440     	MGOTO	_00218_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2441     	.line	213, "main.c"; 	if(workStep > 0)
                                    1- 2442     	BANKSEL	_workStep
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 01rr                      1- 2443     	MOVR	_workStep,W
     005D 0D03                      1- 2444     	BTRSC	STATUS,2
                                    1- 2445     	MGOTO	_00211_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2446     	.line	215, "main.c"; 	powerOff();
                                    1- 2447     	MCALL	_powerOff
     005F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2448     	MGOTO	_00212_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
     0061                           1- 2449     _00211_DS_:
                                    1- 2450     	.line	219, "main.c"; 	workStep = 1;
     0061 2101                      1- 2451     	MOVIA	0x01
                                    1- 2452     	BANKSEL	_workStep
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 00rr                      1- 2453     	MOVAR	_workStep
                                    1- 2454     	.line	220, "main.c"; 	PWM2DUTY = 120;
     0064 2178                      1- 2455     	MOVIA	0x78
     0065 00rr                      1- 2456     	SFUN	_PWM2DUTY
                                    1- 2457     	.line	221, "main.c"; 	maxDuty = 90;
     0066 215A                      1- 2458     	MOVIA	0x5a
                                    1- 2459     	BANKSEL	_maxDuty
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 00rr                      1- 2460     	MOVAR	_maxDuty
                                    1- 2461     	.line	222, "main.c"; 	currentDuty = 120;
     0069 2178                      1- 2462     	MOVIA	0x78
                                    1- 2463     	BANKSEL	_currentDuty
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 00rr                      1- 2464     	MOVAR	_currentDuty
                                    1- 2465     	.line	223, "main.c"; 	pwmInit();
                                    1- 2466     	MCALL	_pwmInit
     006C 2rrr                      3-   66 m1      LCALL rom_address
     006D                           1- 2467     _00212_DS_:
                                    1- 2468     	.line	225, "main.c"; 	ledStep = workStep;
                                    1- 2469     	BANKSEL	_workStep
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 01rr                      1- 2470     	MOVR	_workStep,W
                                    1- 2471     	BANKSEL	_ledStep
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 00rr                      1- 2472     	MOVAR	_ledStep
     0071                           1- 2473     _00218_DS_:
                                    1- 2474     	.line	227, "main.c"; 	}
                                    1- 2475     	RETURN	
     0071 0010                      3-   40 m1      ret
                                    1- 2476     ; exit point of _keyCtr
                                    1- 2479     ;	code size estimation:
                                    1- 2480     ;	  902+  217 =  1119 instructions ( 2672 byte)
                                    1- 2482     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
