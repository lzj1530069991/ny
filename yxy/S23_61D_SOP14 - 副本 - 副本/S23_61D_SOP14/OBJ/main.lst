
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_fgCtr
                                    1-   18     	extern	_LedCtr2
                                    1-   19     	extern	_checkInAD
                                    1-   20     	extern	_PORTAbits
                                    1-   21     	extern	_PORTBbits
                                    1-   22     	extern	_PCONbits
                                    1-   23     	extern	_BWUCONbits
                                    1-   24     	extern	_ABPLCONbits
                                    1-   25     	extern	_BPHCONbits
                                    1-   26     	extern	_INTEbits
                                    1-   27     	extern	_INTFbits
                                    1-   28     	extern	_ADMDbits
                                    1-   29     	extern	_ADRbits
                                    1-   30     	extern	_ADVREFHbits
                                    1-   31     	extern	_ADCRbits
                                    1-   32     	extern	_AWUCONbits
                                    1-   33     	extern	_PACONbits
                                    1-   34     	extern	_INTEDGbits
                                    1-   35     	extern	_ANAENbits
                                    1-   36     	extern	_RFCbits
                                    1-   37     	extern	_INTE2bits
                                    1-   38     	extern	_INDF
                                    1-   39     	extern	_TMR0
                                    1-   40     	extern	_PCL
                                    1-   41     	extern	_STATUS
                                    1-   42     	extern	_FSR
                                    1-   43     	extern	_PORTA
                                    1-   44     	extern	_PORTB
                                    1-   45     	extern	_PCON
                                    1-   46     	extern	_BWUCON
                                    1-   47     	extern	_PCHBUF
                                    1-   48     	extern	_ABPLCON
                                    1-   49     	extern	_BPHCON
                                    1-   50     	extern	_INTE
                                    1-   51     	extern	_INTF
                                    1-   52     	extern	_ADMD
                                    1-   53     	extern	_ADR
                                    1-   54     	extern	_ADD
                                    1-   55     	extern	_ADVREFH
                                    1-   56     	extern	_ADCR
                                    1-   57     	extern	_AWUCON
                                    1-   58     	extern	_PACON
                                    1-   59     	extern	_INTEDG
                                    1-   60     	extern	_TMRH
                                    1-   61     	extern	_ANAEN
                                    1-   62     	extern	_RFC
                                    1-   63     	extern	_TM3RH
                                    1-   64     	extern	_INTE2
                                    1-   65     	extern	_TMR1
                                    1-   66     	extern	_T1CR1
                                    1-   67     	extern	_T1CR2
                                    1-   68     	extern	_PWM1DUTY
                                    1-   69     	extern	_PS1CV
                                    1-   70     	extern	_BZ1CR
                                    1-   71     	extern	_IRCR
                                    1-   72     	extern	_TBHP
                                    1-   73     	extern	_TBHD
                                    1-   74     	extern	_TMR2
                                    1-   75     	extern	_T2CR1
                                    1-   76     	extern	_T2CR2
                                    1-   77     	extern	_PWM2DUTY
                                    1-   78     	extern	_PS2CV
                                    1-   79     	extern	_BZ2CR
                                    1-   80     	extern	_OSCCR
                                    1-   81     	extern	_TMR3
                                    1-   82     	extern	_T3CR1
                                    1-   83     	extern	_T3CR2
                                    1-   84     	extern	_PWM3DUTY
                                    1-   85     	extern	_PS3CV
                                    1-   86     	extern	_BZ3CR
                                    1-   87     	extern	_IOSTA
                                    1-   88     	extern	_IOSTB
                                    1-   89     	extern	_APHCON
                                    1-   90     	extern	_PS0CV
                                    1-   91     	extern	_BODCON
                                    1-   92     	extern	_CMPCR
                                    1-   93     	extern	_PCON1
                                    1-   94     	extern	_T0MD
                                    1-   95     	extern	___sdcc_saved_fsr
                                    1-   96     	extern	___sdcc_saved_stk00
                                    1-   97     	extern	___sdcc_saved_stk01
                                    1-   98     	extern	__mulchar
                                    1-   99     	extern	__nyc_ny8_startup
                                    1-  100     ;--------------------------------------------------------
                                    1-  101     ; global declarations
                                    1-  102     ;--------------------------------------------------------
                                    1-  103     	extern	_F_wait_eoc
                                    1-  104     	extern	_F_AIN2_Convert
                                    1-  105     	extern	_F_AIN3_Convert
                                    1-  106     	extern	_F_AIN4_Convert
                                    1-  107     	extern	_checkOutA
                                    1-  108     	extern	_checkChrgV
                                    1-  109     	extern	_checkBatAD
                                    1-  110     	extern	_initAD
                                    1-  111     	extern	_delay
                                    1-  112     	extern	_chrgCtr
                                    1-  113     	extern	_keyRead
                                    1-  114     	extern	_gotoSleep
                                    1-  115     	extern	_pwmStop
                                    1-  116     	extern	_pwmInit
                                    1-  117     	extern	_pwm1Stop
                                    1-  118     	extern	_pwm1Init
                                    1-  119     	extern	_LED6ON
                                    1-  120     	extern	_LED5ON
                                    1-  121     	extern	_LED4ON
                                    1-  122     	extern	_LED3ON
                                    1-  123     	extern	_LED2ON
                                    1-  124     	extern	_LED1ON
                                    1-  125     	extern	_LedInput
                                    1-  126     	extern	_ledShow
                                    1-  127     	extern	_initSys
                                    1-  128     	extern	_powerOff
                                    1-  129     	extern	_keyCtr
                                    1-  130     	extern	_isr
                                    1-  131     	extern	_main
                                    1-  132     	extern	_Status
                                    1-  133     	extern	_duty
                                    1-  134     	extern	_intCount
                                    1-  135     	extern	_count500ms
                                    1-  136     	extern	_keyCount
                                    1-  137     	extern	_workStep
                                    1-  138     	extern	_ledStep
                                    1-  139     	extern	_fgCount
                                    1-  140     	extern	_fgPRD
                                    1-  141     	extern	_preFG
                                    1-  142     	extern	_maxDuty
                                    1-  143     	extern	_pwStep
                                    1-  144     	extern	_R_AIN4_DATA
                                    1-  145     	extern	_R_AIN4_DATA_LB
                                    1-  146     	extern	_R_AIN3_DATA
                                    1-  147     	extern	_R_AIN3_DATA_LB
                                    1-  148     	extern	_R_AIN2_DATA
                                    1-  149     	extern	_R_AIN2_DATA_LB
                                    1-  150     	extern	_chrgTime
                                    1-  151     	extern	_startStep
                                    1-  152     	extern	_sleepTime
                                    1-  153     	extern	_count200ms
                                    1-  154     	extern	_count1s
                                    1-  155     	extern	_count900s
                                    1-  156     	extern	_lowBatTime
                                    1-  157     	extern	_ledTime
                                    1-  158     	extern	_overCount
                                    1-  159     	extern	_chrgCount
                                    1-  160     	extern	_ledLightTime
                                    1-  161     	extern	_currentDuty
                                    1-  162     	extern	_fullCount
                                    1-  163     	extern	_shanshuoTime
                                    1-  164     	extern	_firstTime
                                    1-  165     	extern	_tempDuty
                                    1-  166     	extern	_lowCount
                                    1-  167     	extern	_debug
                                    1-  169     	extern PSAVE
                                    1-  170     	extern SSAVE
                                    1-  171     	extern WSAVE
                                    1-  172     	extern STK02
                                    1-  173     	extern STK01
                                    1-  174     	extern STK00
                                    1-  176     .segment "uninit", 0x20000040
 20000040                           1-  177     PSAVE:
                                    1-  178     	.res 1
 20000041                           1-  179     SSAVE:
                                    1-  180     	.res 1
 20000042                           1-  181     WSAVE:
                                    1-  182     	.res 1
 20000043                           1-  183     STK02:
                                    1-  184     	.res 1
 20000044                           1-  185     STK01:
                                    1-  186     	.res 1
 20000045                           1-  187     STK00:
                                    1-  188     	.res 1
                                    1-  190     ;--------------------------------------------------------
                                    1-  191     ; global definitions
                                    1-  192     ;--------------------------------------------------------
                                    1-  193     .segment "uninit"
     0000                           1-  194     _R_AIN4_DATA:
                                    1-  195     	.res	2
                                    1-  198     .segment "uninit"
     0000                           1-  199     _R_AIN4_DATA_LB:
                                    1-  200     	.res	1
                                    1-  203     .segment "uninit"
     0000                           1-  204     _R_AIN3_DATA:
                                    1-  205     	.res	2
                                    1-  208     .segment "uninit"
     0000                           1-  209     _R_AIN3_DATA_LB:
                                    1-  210     	.res	1
                                    1-  213     .segment "uninit"
     0000                           1-  214     _R_AIN2_DATA:
                                    1-  215     	.res	2
                                    1-  218     .segment "uninit"
     0000                           1-  219     _R_AIN2_DATA_LB:
                                    1-  220     	.res	1
                                    1-  223     ;--------------------------------------------------------
                                    1-  224     ; absolute symbol definitions
                                    1-  225     ;--------------------------------------------------------
                                    1-  226     ;--------------------------------------------------------
                                    1-  227     ; compiler-defined variables
                                    1-  228     ;--------------------------------------------------------
                                    1-  229     .segment "uninit"
     0000                           1-  230     r0x1055:
                                    1-  231     	.res	1
                                    1-  232     .segment "uninit"
     0000                           1-  233     r0x104C:
                                    1-  234     	.res	1
                                    1-  235     .segment "uninit"
     0000                           1-  236     r0x1054:
                                    1-  237     	.res	1
                                    1-  238     .segment "uninit"
     0000                           1-  239     r0x1053:
                                    1-  240     	.res	1
                                    1-  241     .segment "uninit"
     0000                           1-  242     r0x1052:
                                    1-  243     	.res	1
                                    1-  244     .segment "uninit"
     0000                           1-  245     r0x1051:
                                    1-  246     	.res	1
                                    1-  247     .segment "uninit"
     0000                           1-  248     r0x1050:
                                    1-  249     	.res	1
                                    1-  250     .segment "uninit"
     0000                           1-  251     r0x104F:
                                    1-  252     	.res	1
                                    1-  253     .segment "uninit"
     0000                           1-  254     r0x1049:
                                    1-  255     	.res	1
                                    1-  256     .segment "uninit"
     0000                           1-  257     r0x104E:
                                    1-  258     	.res	1
                                    1-  259     .segment "uninit"
     0000                           1-  260     r0x104D:
                                    1-  261     	.res	1
                                    1-  262     .segment "uninit"
     0000                           1-  263     r0x104B:
                                    1-  264     	.res	1
                                    1-  265     .segment "uninit"
     0000                           1-  266     r0x104A:
                                    1-  267     	.res	1
                                    1-  268     .segment "uninit"
     0000                           1-  269     r0x1029:
                                    1-  270     	.res	1
                                    1-  271     .segment "uninit"
     0000                           1-  272     r0x102A:
                                    1-  273     	.res	1
                                    1-  274     .segment "uninit"
     0000                           1-  275     r0x1047:
                                    1-  276     	.res	1
                                    1-  277     .segment "uninit"
     0000                           1-  278     r0x1048:
                                    1-  279     	.res	1
                                    1-  280     .segment "uninit"
     0000                           1-  281     r0x1043:
                                    1-  282     	.res	1
                                    1-  283     .segment "uninit"
     0000                           1-  284     r0x1044:
                                    1-  285     	.res	1
                                    1-  286     .segment "uninit"
     0000                           1-  287     r0x103D:
                                    1-  288     	.res	1
                                    1-  289     .segment "uninit"
     0000                           1-  290     r0x1040:
                                    1-  291     	.res	1
                                    1-  292     .segment "uninit"
     0000                           1-  293     r0x1037:
                                    1-  294     	.res	1
                                    1-  295     .segment "uninit"
     0000                           1-  296     r0x1038:
                                    1-  297     	.res	1
                                    1-  298     .segment "uninit"
     0000                           1-  299     r0x1039:
                                    1-  300     	.res	1
                                    1-  301     .segment "uninit"
     0000                           1-  302     r0x103C:
                                    1-  303     	.res	1
                                    1-  304     .segment "uninit"
     0000                           1-  305     r0x1031:
                                    1-  306     	.res	1
                                    1-  307     .segment "uninit"
     0000                           1-  308     r0x1032:
                                    1-  309     	.res	1
                                    1-  310     .segment "uninit"
     0000                           1-  311     r0x1033:
                                    1-  312     	.res	1
                                    1-  313     .segment "uninit"
     0000                           1-  314     r0x1036:
                                    1-  315     	.res	1
                                    1-  316     .segment "uninit"
     0000                           1-  317     r0x102B:
                                    1-  318     	.res	1
                                    1-  319     .segment "uninit"
     0000                           1-  320     r0x102C:
                                    1-  321     	.res	1
                                    1-  322     .segment "uninit"
     0000                           1-  323     r0x102D:
                                    1-  324     	.res	1
                                    1-  325     .segment "uninit"
     0000                           1-  326     r0x1030:
                                    1-  327     	.res	1
                                    1-  328     ;--------------------------------------------------------
                                    1-  329     ; initialized data
                                    1-  330     ;--------------------------------------------------------
                                    1-  332     .segment "idata"
     0000                           1-  333     _Status:
     0000 0000                      1-  334     	dw	0x00
                                    1-  338     .segment "idata"
     0000                           1-  339     _duty:
     0000 0000 0000                 1-  340     	dw	0x00, 0x00
                                    1-  344     .segment "idata"
     0000                           1-  345     _intCount:
     0000 0000                      1-  346     	dw	0x00
                                    1-  350     .segment "idata"
     0000                           1-  351     _count500ms:
     0000 0000                      1-  352     	dw	0x00
                                    1-  356     .segment "idata"
     0000                           1-  357     _keyCount:
     0000 0000                      1-  358     	dw	0x00
                                    1-  362     .segment "idata"
     0000                           1-  363     _workStep:
     0000 0000                      1-  364     	dw	0x00
                                    1-  368     .segment "idata"
     0000                           1-  369     _ledStep:
     0000 0000                      1-  370     	dw	0x00
                                    1-  374     .segment "idata"
     0000                           1-  375     _fgCount:
     0000 0000 0000                 1-  376     	dw	0x00, 0x00
                                    1-  380     .segment "idata"
     0000                           1-  381     _fgPRD:
     0000 0000 0000                 1-  382     	dw	0x00, 0x00
                                    1-  386     .segment "idata"
     0000                           1-  387     _preFG:
     0000 0000                      1-  388     	dw	0x00
                                    1-  392     .segment "idata"
     0000                           1-  393     _maxDuty:
     0000 0000                      1-  394     	dw	0x00
                                    1-  398     .segment "idata"
     0000                           1-  399     _pwStep:
     0000 0000                      1-  400     	dw	0x00
                                    1-  404     .segment "idata"
     0000                           1-  405     _chrgTime:
     0000 0000 0000                 1-  406     	dw	0x00, 0x00
                                    1-  410     .segment "idata"
     0000                           1-  411     _startStep:
     0000 0000                      1-  412     	dw	0x00
                                    1-  416     .segment "idata"
     0000                           1-  417     _sleepTime:
     0000 0000 0000                 1-  418     	dw	0x00, 0x00
                                    1-  422     .segment "idata"
     0000                           1-  423     _count200ms:
     0000 0000                      1-  424     	dw	0x00
                                    1-  428     .segment "idata"
     0000                           1-  429     _count1s:
     0000 0000                      1-  430     	dw	0x00
                                    1-  434     .segment "idata"
     0000                           1-  435     _count900s:
     0000 0000 0000                 1-  436     	dw	0x00, 0x00
                                    1-  440     .segment "idata"
     0000                           1-  441     _lowBatTime:
     0000 0000                      1-  442     	dw	0x00
                                    1-  446     .segment "idata"
     0000                           1-  447     _ledTime:
     0000 0000                      1-  448     	dw	0x00
                                    1-  452     .segment "idata"
     0000                           1-  453     _overCount:
     0000 0000                      1-  454     	dw	0x00
                                    1-  458     .segment "idata"
     0000                           1-  459     _chrgCount:
     0000 0000                      1-  460     	dw	0x00
                                    1-  464     .segment "idata"
     0000                           1-  465     _ledLightTime:
     0000 0000                      1-  466     	dw	0x00
                                    1-  470     .segment "idata"
     0000                           1-  471     _currentDuty:
     0000 0000                      1-  472     	dw	0x00
                                    1-  476     .segment "idata"
     0000                           1-  477     _fullCount:
     0000 0000                      1-  478     	dw	0x00
                                    1-  482     .segment "idata"
     0000                           1-  483     _shanshuoTime:
     0000 0000                      1-  484     	dw	0x00
                                    1-  488     .segment "idata"
     0000                           1-  489     _firstTime:
     0000 0000                      1-  490     	dw	0x00
                                    1-  494     .segment "idata"
     0000                           1-  495     _tempDuty:
     0000 0000                      1-  496     	dw	0x00
                                    1-  500     .segment "idata"
     0000                           1-  501     _lowCount:
     0000 0000                      1-  502     	dw	0x00
                                    1-  506     .segment "idata"
     0000                           1-  507     _debug:
     0000 0000                      1-  508     	dw	0x00
                                    1-  511     ;--------------------------------------------------------
                                    1-  512     ; overlayable items in internal ram 
                                    1-  513     ;--------------------------------------------------------
                                    1-  514     ;	udata_ovr
                                    1-  515     ;--------------------------------------------------------
                                    1-  516     ; reset vector 
                                    1-  517     ;--------------------------------------------------------
                                    1-  518     ORG	0x0000
     0000 3rrr                      1-  519     	LGOTO	__nyc_ny8_startup
                                    1-  520     ;--------------------------------------------------------
                                    1-  521     ; interrupt and initialization code
                                    1-  522     ;--------------------------------------------------------
                                    1-  523     ORG 0x0008
                                    1-  524     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  526     .segment "code"
     0000                           1-  527     __sdcc_interrupt:
                                    1-  528     ;***
                                    1-  529     ;  pBlock Stats: dbName = I
                                    1-  530     ;***
                                    1-  531     ;2 compiler assigned registers:
                                    1-  532     ;   STK00
                                    1-  533     ;   STK01
                                    1-  534     ;; Starting pCode block
     0000                           1-  535     _isr:
                                    1-  536     ; 0 exit points
                                    1-  537     	.line	107, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  538     	MOVAR	WSAVE
     0001 1503                      1-  539     	SWAPR	STATUS,W
     0002 0283                      1-  540     	CLRR	STATUS
     0003 00rr                      1-  541     	MOVAR	SSAVE
     0004 010A                      1-  542     	MOVR	PCHBUF,W
     0005 028A                      1-  543     	CLRR	PCHBUF
     0006 00rr                      1-  544     	MOVAR	PSAVE
     0007 0104                      1-  545     	MOVR	FSR,W
                                    1-  546     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  547     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  548     	MOVR	STK00,W
                                    1-  549     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  550     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  551     	MOVR	STK01,W
                                    1-  552     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  553     	MOVAR	___sdcc_saved_stk01
                                    1-  554     	.line	109, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  555     	BTRSS	_INTFbits,0
                                    1-  556     	MGOTO	_00126_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  557     	.line	111, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  558     	MOVIA	0x37
     0013 03rr                      1-  559     	ADDAR	_TMR0,F
                                    1-  560     	.line	113, "main.c"; 	if(++intCount >= 100)
                                    1-  561     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  562     	INCR	_intCount,F
                                    1-  563     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  564     	MOVIA	0x64
     0017 04rr                      1-  565     	SUBAR	_intCount,W
     0018 0803                      1-  566     	BTRSS	STATUS,0
                                    1-  567     	MGOTO	_00126_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  568     	.line	115, "main.c"; 	IntFlag = 1;
                                    1-  569     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  570     	BSR	_Status,0
                                    1-  571     	.line	116, "main.c"; 	intCount = 0;
                                    1-  572     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  573     	CLRR	_intCount
                                    1-  574     	.line	117, "main.c"; 	if(workStep)
                                    1-  575     	BANKSEL	_workStep
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 01rr                      1-  576     	MOVR	_workStep,W
     0020 0D03                      1-  577     	BTRSC	STATUS,2
                                    1-  578     	MGOTO	_00106_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  579     	.line	118, "main.c"; 	++fgCount;
                                    1-  580     	BANKSEL	_fgCount
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 05rr                      1-  581     	INCR	_fgCount,F
     0024 0D03                      1-  582     	BTRSC	STATUS,2
     0025 05rr                      1-  583     	INCR	(_fgCount + 1),F
     0026                           1-  584     _00106_DS_:
                                    1-  585     	.line	119, "main.c"; 	if(++count500ms >= 40)
                                    1-  586     	BANKSEL	_count500ms
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 05rr                      1-  587     	INCR	_count500ms,F
                                    1-  588     ;;unsigned compare: left < lit (0x28=40), size=1
     0028 2128                      1-  589     	MOVIA	0x28
     0029 04rr                      1-  590     	SUBAR	_count500ms,W
     002A 0C03                      1-  591     	BTRSC	STATUS,0
                                    1-  592     	.line	120, "main.c"; 	count500ms = 0;
     002B 02rr                      1-  593     	CLRR	_count500ms
                                    1-  594     	.line	121, "main.c"; 	if(++count200ms >= 20)
                                    1-  595     	BANKSEL	_count200ms
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1-  596     	INCR	_count200ms,F
     002E 2114                      1-  597     	MOVIA	0x14
     002F 04rr                      1-  598     	SUBAR	_count200ms,W
     0030 0C03                      1-  599     	BTRSC	STATUS,0
                                    1-  600     	.line	122, "main.c"; 	count200ms = 0;
     0031 02rr                      1-  601     	CLRR	_count200ms
                                    1-  602     	.line	123, "main.c"; 	if(++count1s >= 100)
                                    1-  603     	BANKSEL	_count1s
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 05rr                      1-  604     	INCR	_count1s,F
     0034 2164                      1-  605     	MOVIA	0x64
     0035 04rr                      1-  606     	SUBAR	_count1s,W
     0036 0803                      1-  607     	BTRSS	STATUS,0
                                    1-  608     	MGOTO	_00126_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  609     	.line	125, "main.c"; 	count1s = 0;
     0038 02rr                      1-  610     	CLRR	_count1s
                                    1-  611     	.line	126, "main.c"; 	if(chrgFlag == 1 && pwStep == 6)
                                    1-  612     	BANKSEL	_Status
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 09rr                      1-  613     	BTRSS	_Status,3
                                    1-  614     	MGOTO	_00112_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  615     	BANKSEL	_pwStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1-  616     	MOVR	_pwStep,W
     003E 2406                      1-  617     	XORIA	0x06
     003F 0903                      1-  618     	BTRSS	STATUS,2
                                    1-  619     	MGOTO	_00112_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  620     	.line	128, "main.c"; 	++chrgTime;
                                    1-  621     	BANKSEL	_chrgTime
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 05rr                      1-  622     	INCR	_chrgTime,F
     0043 0D03                      1-  623     	BTRSC	STATUS,2
     0044 05rr                      1-  624     	INCR	(_chrgTime + 1),F
                                    1-  625     	.line	129, "main.c"; 	PWM1DUTY = 7;
     0045 2107                      1-  626     	MOVIA	0x07
     0046 00rr                      1-  627     	SFUN	_PWM1DUTY
     0047                           1-  628     _00112_DS_:
                                    1-  629     	.line	131, "main.c"; 	if(ledLightTime > 0)
                                    1-  630     	BANKSEL	_ledLightTime
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 01rr                      1-  631     	MOVR	_ledLightTime,W
     0049 0903                      1-  632     	BTRSS	STATUS,2
                                    1-  633     	.line	132, "main.c"; 	--ledLightTime;
     004A 06rr                      1-  634     	DECR	_ledLightTime,F
                                    1-  635     	.line	133, "main.c"; 	if(shanshuoTime > 0)
                                    1-  636     	BANKSEL	_shanshuoTime
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 01rr                      1-  637     	MOVR	_shanshuoTime,W
     004D 0903                      1-  638     	BTRSS	STATUS,2
                                    1-  639     	.line	134, "main.c"; 	--shanshuoTime;
     004E 06rr                      1-  640     	DECR	_shanshuoTime,F
                                    1-  641     	.line	135, "main.c"; 	if(workStep)
                                    1-  642     	BANKSEL	_workStep
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 01rr                      1-  643     	MOVR	_workStep,W
     0051 0D03                      1-  644     	BTRSC	STATUS,2
                                    1-  645     	MGOTO	_00119_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  646     	.line	137, "main.c"; 	++count900s;
                                    1-  647     	BANKSEL	_count900s
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 05rr                      1-  648     	INCR	_count900s,F
     0055 0D03                      1-  649     	BTRSC	STATUS,2
     0056 05rr                      1-  650     	INCR	(_count900s + 1),F
                                    1-  651     	MGOTO	_00126_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
     0058                           1-  652     _00119_DS_:
                                    1-  653     	.line	141, "main.c"; 	count900s = 0;
                                    1-  654     	BANKSEL	_count900s
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 02rr                      1-  655     	CLRR	_count900s
     005A 02rr                      1-  656     	CLRR	(_count900s + 1)
     005B                           1-  657     _00126_DS_:
                                    1-  658     	.line	150, "main.c"; 	if(INTFbits.PABIF)
     005B 08rr                      1-  659     	BTRSS	_INTFbits,1
                                    1-  660     	MGOTO	_00128_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  661     	.line	152, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     005D 21FD                      1-  662     	MOVIA	0xfd
     005E 00rr                      1-  663     	MOVAR	_INTF
     005F                           1-  664     _00128_DS_:
                                    1-  665     	.line	155, "main.c"; 	INTF = 0;
     005F 02rr                      1-  666     	CLRR	_INTF
                                    1-  667     	.line	157, "main.c"; 	}
                                    1-  668     	BANKSEL	___sdcc_saved_stk01
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1-  669     	MOVR	___sdcc_saved_stk01,W
     0062 00rr                      1-  670     	MOVAR	STK01
                                    1-  671     	BANKSEL	___sdcc_saved_stk00
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 01rr                      1-  672     	MOVR	___sdcc_saved_stk00,W
     0065 00rr                      1-  673     	MOVAR	STK00
                                    1-  674     	BANKSEL	___sdcc_saved_fsr
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 01rr                      1-  675     	MOVR	___sdcc_saved_fsr,W
     0068 0084                      1-  676     	MOVAR	FSR
     0069 01rr                      1-  677     	MOVR	PSAVE,W
     006A 008A                      1-  678     	MOVAR	PCHBUF
     006B 0283                      1-  679     	CLRR	STATUS
     006C 15rr                      1-  680     	SWAPR	SSAVE,W
     006D 0083                      1-  681     	MOVAR	STATUS
     006E 15rr                      1-  682     	SWAPR	WSAVE,F
     006F 15rr                      1-  683     	SWAPR	WSAVE,W
     0070                           1-  684     END_OF_INTERRUPT:
     0070 0011                      1-  685     	RETIE	
                                    1-  687     ;--------------------------------------------------------
                                    1-  688     ; code
                                    1-  689     ;--------------------------------------------------------
                                    1-  690     ;***
                                    1-  691     ;  pBlock Stats: dbName = M
                                    1-  692     ;***
                                    1-  693     ;has an exit
                                    1-  694     ;functions called:
                                    1-  695     ;   _initSys
                                    1-  696     ;   _initAD
                                    1-  697     ;   _ledShow
                                    1-  698     ;   _keyCtr
                                    1-  699     ;   _checkBatAD
                                    1-  700     ;   _checkOutA
                                    1-  701     ;   _checkChrgV
                                    1-  702     ;   _chrgCtr
                                    1-  703     ;   _gotoSleep
                                    1-  704     ;   _powerOff
                                    1-  705     ;   _initSys
                                    1-  706     ;   _initAD
                                    1-  707     ;   _ledShow
                                    1-  708     ;   _keyCtr
                                    1-  709     ;   _checkBatAD
                                    1-  710     ;   _checkOutA
                                    1-  711     ;   _checkChrgV
                                    1-  712     ;   _chrgCtr
                                    1-  713     ;   _gotoSleep
                                    1-  714     ;   _powerOff
                                    1-  715     ;; Starting pCode block
                                    1-  716     .segment "code"; module=main, function=_main
     0000                           1-  718     _main:
                                    1-  719     ; 2 exit points
                                    1-  720     	.line	161, "main.c"; 	initSys();
                                    1-  721     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  722     	.line	162, "main.c"; 	initAD();
                                    1-  723     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  724     _00160_DS_:
                                    1-  725     	.line	165, "main.c"; 	CLRWDT();
     0002 0002                      1-  726     	clrwdt
                                    1-  727     	.line	166, "main.c"; 	ledShow();
                                    1-  728     	MCALL	_ledShow
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  729     	.line	167, "main.c"; 	if(!IntFlag)
                                    1-  730     	BANKSEL	_Status
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 08rr                      1-  731     	BTRSS	_Status,0
                                    1-  732     	MGOTO	_00160_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  733     	.line	169, "main.c"; 	IntFlag = 0;
     0007 1Crr                      1-  734     	BCR	_Status,0
                                    1-  735     	.line	170, "main.c"; 	if(chrgFlag == 0)
     0008 09rr                      1-  736     	BTRSS	_Status,3
                                    1-  737     	.line	171, "main.c"; 	keyCtr();
                                    1-  738     	MCALL	_keyCtr
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  739     	.line	172, "main.c"; 	if(count200ms < 5)
     000A 2105                      1-  740     	MOVIA	0x05
                                    1-  741     	BANKSEL	_count200ms
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 04rr                      1-  742     	SUBAR	_count200ms,W
     000D 0C03                      1-  743     	BTRSC	STATUS,0
                                    1-  744     	MGOTO	_00145_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  745     	.line	174, "main.c"; 	checkBatAD();
                                    1-  746     	MCALL	_checkBatAD
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  747     	MGOTO	_00146_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  748     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  749     ;;unsigned compare: left >= lit (0x9=9), size=1
     0011                           1-  750     _00145_DS_:
                                    1-  751     	.line	176, "main.c"; 	else if(count200ms > 8 && count200ms < 11)
     0011 2109                      1-  752     	MOVIA	0x09
                                    1-  753     	BANKSEL	_count200ms
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1-  754     	SUBAR	_count200ms,W
     0014 0803                      1-  755     	BTRSS	STATUS,0
                                    1-  756     	MGOTO	_00141_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  757     ;;unsigned compare: left < lit (0xB=11), size=1
     0016 210B                      1-  758     	MOVIA	0x0b
     0017 04rr                      1-  759     	SUBAR	_count200ms,W
     0018 0C03                      1-  760     	BTRSC	STATUS,0
                                    1-  761     	MGOTO	_00141_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  762     	.line	178, "main.c"; 	checkOutA();
                                    1-  763     	MCALL	_checkOutA
     001A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  764     	MGOTO	_00146_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  765     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  766     ;;unsigned compare: left >= lit (0xE=14), size=1
     001C                           1-  767     _00141_DS_:
                                    1-  768     	.line	180, "main.c"; 	else if(count200ms > 13 && count200ms < 16)
     001C 210E                      1-  769     	MOVIA	0x0e
                                    1-  770     	BANKSEL	_count200ms
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 04rr                      1-  771     	SUBAR	_count200ms,W
     001F 0803                      1-  772     	BTRSS	STATUS,0
                                    1-  773     	MGOTO	_00146_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  774     ;;unsigned compare: left < lit (0x10=16), size=1
     0021 2110                      1-  775     	MOVIA	0x10
     0022 04rr                      1-  776     	SUBAR	_count200ms,W
     0023 0803                      1-  777     	BTRSS	STATUS,0
                                    1-  778     	.line	182, "main.c"; 	checkChrgV();
                                    1-  779     	MCALL	_checkChrgV
     0024 2rrr                      3-   66 m1      LCALL rom_address
     0025                           1-  780     _00146_DS_:
                                    1-  781     	.line	185, "main.c"; 	chrgCtr();
                                    1-  782     	MCALL	_chrgCtr
     0025 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  783     	.line	187, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  784     	BANKSEL	_workStep
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1-  785     	MOVR	_workStep,W
     0028 0D03                      1-  786     	BTRSC	STATUS,2
                                    1-  787     	MGOTO	_00148_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  788     	BANKSEL	_currentDuty
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1-  789     	MOVR	_currentDuty,W
                                    1-  790     	BANKSEL	_maxDuty
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 04rr                      1-  791     	SUBAR	_maxDuty,W
     002E 0C03                      1-  792     	BTRSC	STATUS,0
                                    1-  793     	MGOTO	_00148_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  794     	.line	189, "main.c"; 	currentDuty = currentDuty - 10;
     0030 21F6                      1-  795     	MOVIA	0xf6
                                    1-  796     	BANKSEL	_currentDuty
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 03rr                      1-  797     	ADDAR	_currentDuty,F
                                    1-  798     	.line	190, "main.c"; 	PWM2DUTY = currentDuty;
     0033 01rr                      1-  799     	MOVR	_currentDuty,W
     0034 00rr                      1-  800     	SFUN	_PWM2DUTY
     0035                           1-  801     _00148_DS_:
                                    1-  802     	.line	192, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x08) == 0 && ledLightTime == 0)
                                    1-  803     	BANKSEL	_workStep
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 01rr                      1-  804     	MOVR	_workStep,W
     0037 0903                      1-  805     	BTRSS	STATUS,2
                                    1-  806     	MGOTO	_00153_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  807     	BANKSEL	_keyCount
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1-  808     	MOVR	_keyCount,W
     003B 0903                      1-  809     	BTRSS	STATUS,2
                                    1-  810     	MGOTO	_00153_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  811     	BANKSEL	_PORTA
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 0Drr                      1-  812     	BTRSC	_PORTA,3
                                    1-  813     	MGOTO	_00153_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  814     	BANKSEL	_ledLightTime
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 01rr                      1-  815     	MOVR	_ledLightTime,W
     0042 0903                      1-  816     	BTRSS	STATUS,2
                                    1-  817     	MGOTO	_00153_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  818     	.line	194, "main.c"; 	if(++sleepTime > 2000)
                                    1-  819     	BANKSEL	_sleepTime
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 05rr                      1-  820     	INCR	_sleepTime,F
     0046 0D03                      1-  821     	BTRSC	STATUS,2
     0047 05rr                      1-  822     	INCR	(_sleepTime + 1),F
                                    1-  823     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  824     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     0048 2107                      1-  825     	MOVIA	0x07
     0049 04rr                      1-  826     	SUBAR	(_sleepTime + 1),W
     004A 0903                      1-  827     	BTRSS	STATUS,2
                                    1-  828     	MGOTO	_00218_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C 21D1                      1-  829     	MOVIA	0xd1
     004D 04rr                      1-  830     	SUBAR	_sleepTime,W
     004E                           1-  831     _00218_DS_:
     004E 0803                      1-  832     	BTRSS	STATUS,0
                                    1-  833     	MGOTO	_00153_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  834     	.line	196, "main.c"; 	gotoSleep();
                                    1-  835     	MCALL	_gotoSleep
     0050 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  836     ;;unsigned compare: left < lit (0x384=900), size=2
     0051                           1-  837     _00153_DS_:
                                    1-  838     	.line	200, "main.c"; 	if(count900s >= 900)
     0051 2103                      1-  839     	MOVIA	0x03
                                    1-  840     	BANKSEL	_count900s
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 04rr                      1-  841     	SUBAR	(_count900s + 1),W
     0054 0903                      1-  842     	BTRSS	STATUS,2
                                    1-  843     	MGOTO	_00219_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
     0056 2184                      1-  844     	MOVIA	0x84
     0057 04rr                      1-  845     	SUBAR	_count900s,W
     0058                           1-  846     _00219_DS_:
     0058 0803                      1-  847     	BTRSS	STATUS,0
                                    1-  848     	MGOTO	_00160_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  849     	.line	202, "main.c"; 	powerOff();
                                    1-  850     	MCALL	_powerOff
     005A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  851     	MGOTO	_00160_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  852     	.line	206, "main.c"; 	}
                                    1-  853     	RETURN	
     005C 0010                      3-   40 m1      ret
                                    1-  854     ; exit point of _main
                                    1-  856     ;***
                                    1-  857     ;  pBlock Stats: dbName = C
                                    1-  858     ;***
                                    1-  859     ;has an exit
                                    1-  860     ;; Starting pCode block
                                    1-  861     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  863     _F_wait_eoc:
                                    1-  864     ; 2 exit points
     0000                           1-  865     _00886_DS_:
                                    1-  866     	.line	927, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  867     	BTRSS	_ADMDbits,5
                                    1-  868     	MGOTO	_00886_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  869     	.line	929, "main.c"; 	}
                                    1-  870     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1-  871     ; exit point of _F_wait_eoc
                                    1-  873     ;***
                                    1-  874     ;  pBlock Stats: dbName = C
                                    1-  875     ;***
                                    1-  876     ;has an exit
                                    1-  877     ;functions called:
                                    1-  878     ;   _delay
                                    1-  879     ;   _F_wait_eoc
                                    1-  880     ;   _delay
                                    1-  881     ;   _F_wait_eoc
                                    1-  882     ;6 compiler assigned registers:
                                    1-  883     ;   r0x102B
                                    1-  884     ;   r0x102C
                                    1-  885     ;   r0x102D
                                    1-  886     ;   r0x102E
                                    1-  887     ;   r0x102F
                                    1-  888     ;   r0x1030
                                    1-  889     ;; Starting pCode block
                                    1-  890     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1-  892     ;local variable name mapping:
     0000                           1-  895     _F_AIN2_Convert:
                                    1-  896     ; 2 exit points
                                    1-  897     	.line	910, "main.c"; 	void F_AIN2_Convert(char count)
                                    1-  898     	BANKSEL	r0x102B
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  899     	MOVAR	r0x102B
                                    1-  900     	.line	912, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1-  901     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  902     	CLRR	_R_AIN2_DATA_LB
                                    1-  903     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1-  904     	CLRR	_R_AIN2_DATA
     0006 02rr                      1-  905     	CLRR	(_R_AIN2_DATA + 1)
                                    1-  906     	.line	914, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1-  907     	MOVIA	0x92
     0008 00rr                      1-  908     	MOVAR	_ADMD
                                    1-  909     	.line	915, "main.c"; 	delay(200);	
     0009 21C8                      1-  910     	MOVIA	0xc8
                                    1-  911     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  912     	.line	916, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1-  913     	MOVIA	0x01
                                    1-  914     	BANKSEL	r0x102C
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1-  915     	MOVAR	r0x102C
     000E                           1-  916     _00879_DS_:
                                    1-  917     	BANKSEL	r0x102C
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1-  918     	MOVR	r0x102C,W
                                    1-  919     	BANKSEL	r0x102B
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1-  920     	SUBAR	r0x102B,W
     0012 0803                      1-  921     	BTRSS	STATUS,0
                                    1-  922     	MGOTO	_00881_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  923     	.line	918, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1-  924     	BSR	_ADMDbits,6
                                    1-  925     	.line	919, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1-  926     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  927     	.line	920, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1-  928     	MOVIA	0x0f
     0017 10rr                      1-  929     	ANDAR	_ADR,W
                                    1-  930     ;;3	MOVAR	r0x102D
                                    1-  931     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1-  932     	ADDAR	_R_AIN2_DATA_LB,F
                                    1-  933     	.line	921, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1-  934     	MOVR	_ADD,W
                                    1-  935     	BANKSEL	r0x102D
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  936     	MOVAR	r0x102D
                                    1-  937     ;;1	CLRR	r0x102E
                                    1-  938     ;;112	MOVR	r0x102D,W
                                    1-  939     ;;110	MOVAR	r0x102F
     001D 2100                      1-  940     	MOVIA	0x00
                                    1-  941     	BANKSEL	r0x1030
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1-  942     	MOVAR	r0x1030
                                    1-  943     ;;111	MOVR	r0x102F,W
                                    1-  944     	BANKSEL	r0x102D
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1-  945     	MOVR	r0x102D,W
                                    1-  946     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1-  947     	ADDAR	_R_AIN2_DATA,F
                                    1-  948     	BANKSEL	r0x1030
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1-  949     	MOVR	r0x1030,W
     0026 0C03                      1-  950     	BTRSC	STATUS,0
     0027 05rr                      1-  951     	INCR	r0x1030,W
     0028 0D03                      1-  952     	BTRSC	STATUS,2
                                    1-  953     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  954     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1-  955     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1-  956     _00001_DS_:
                                    1-  957     	.line	916, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  958     	BANKSEL	r0x102C
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1-  959     	INCR	r0x102C,F
                                    1-  960     	MGOTO	_00879_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1-  961     _00881_DS_:
                                    1-  962     	.line	923, "main.c"; 	}
                                    1-  963     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1-  964     ; exit point of _F_AIN2_Convert
                                    1-  966     ;***
                                    1-  967     ;  pBlock Stats: dbName = C
                                    1-  968     ;***
                                    1-  969     ;has an exit
                                    1-  970     ;functions called:
                                    1-  971     ;   _delay
                                    1-  972     ;   _F_wait_eoc
                                    1-  973     ;   _delay
                                    1-  974     ;   _F_wait_eoc
                                    1-  975     ;6 compiler assigned registers:
                                    1-  976     ;   r0x1031
                                    1-  977     ;   r0x1032
                                    1-  978     ;   r0x1033
                                    1-  979     ;   r0x1034
                                    1-  980     ;   r0x1035
                                    1-  981     ;   r0x1036
                                    1-  982     ;; Starting pCode block
                                    1-  983     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1-  985     ;local variable name mapping:
     0000                           1-  988     _F_AIN3_Convert:
                                    1-  989     ; 2 exit points
                                    1-  990     	.line	895, "main.c"; 	void F_AIN3_Convert(char count)
                                    1-  991     	BANKSEL	r0x1031
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  992     	MOVAR	r0x1031
                                    1-  993     	.line	897, "main.c"; 	R_AIN3_DATA=R_AIN3_DATA_LB=0x00;   
                                    1-  994     	BANKSEL	_R_AIN3_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  995     	CLRR	_R_AIN3_DATA_LB
                                    1-  996     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1-  997     	CLRR	_R_AIN3_DATA
     0006 02rr                      1-  998     	CLRR	(_R_AIN3_DATA + 1)
                                    1-  999     	.line	899, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0007 2193                      1- 1000     	MOVIA	0x93
     0008 00rr                      1- 1001     	MOVAR	_ADMD
                                    1- 1002     	.line	900, "main.c"; 	delay(200);	
     0009 21C8                      1- 1003     	MOVIA	0xc8
                                    1- 1004     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1005     	.line	901, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1006     	MOVIA	0x01
                                    1- 1007     	BANKSEL	r0x1032
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1008     	MOVAR	r0x1032
     000E                           1- 1009     _00870_DS_:
                                    1- 1010     	BANKSEL	r0x1032
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1011     	MOVR	r0x1032,W
                                    1- 1012     	BANKSEL	r0x1031
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1013     	SUBAR	r0x1031,W
     0012 0803                      1- 1014     	BTRSS	STATUS,0
                                    1- 1015     	MGOTO	_00872_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1016     	.line	903, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1017     	BSR	_ADMDbits,6
                                    1- 1018     	.line	904, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1019     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1020     	.line	905, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1021     	MOVIA	0x0f
     0017 10rr                      1- 1022     	ANDAR	_ADR,W
                                    1- 1023     ;;3	MOVAR	r0x1033
                                    1- 1024     	BANKSEL	_R_AIN3_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1025     	ADDAR	_R_AIN3_DATA_LB,F
                                    1- 1026     	.line	906, "main.c"; 	R_AIN3_DATA    += ADD; 
     001A 01rr                      1- 1027     	MOVR	_ADD,W
                                    1- 1028     	BANKSEL	r0x1033
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1029     	MOVAR	r0x1033
                                    1- 1030     ;;1	CLRR	r0x1034
                                    1- 1031     ;;109	MOVR	r0x1033,W
                                    1- 1032     ;;107	MOVAR	r0x1035
     001D 2100                      1- 1033     	MOVIA	0x00
                                    1- 1034     	BANKSEL	r0x1036
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1035     	MOVAR	r0x1036
                                    1- 1036     ;;108	MOVR	r0x1035,W
                                    1- 1037     	BANKSEL	r0x1033
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1038     	MOVR	r0x1033,W
                                    1- 1039     	BANKSEL	_R_AIN3_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1040     	ADDAR	_R_AIN3_DATA,F
                                    1- 1041     	BANKSEL	r0x1036
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1042     	MOVR	r0x1036,W
     0026 0C03                      1- 1043     	BTRSC	STATUS,0
     0027 05rr                      1- 1044     	INCR	r0x1036,W
     0028 0D03                      1- 1045     	BTRSC	STATUS,2
                                    1- 1046     	MGOTO	_00002_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1047     	BANKSEL	_R_AIN3_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1048     	ADDAR	(_R_AIN3_DATA + 1),F
     002C                           1- 1049     _00002_DS_:
                                    1- 1050     	.line	901, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1051     	BANKSEL	r0x1032
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1052     	INCR	r0x1032,F
                                    1- 1053     	MGOTO	_00870_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1054     _00872_DS_:
                                    1- 1055     	.line	908, "main.c"; 	}
                                    1- 1056     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1057     ; exit point of _F_AIN3_Convert
                                    1- 1059     ;***
                                    1- 1060     ;  pBlock Stats: dbName = C
                                    1- 1061     ;***
                                    1- 1062     ;has an exit
                                    1- 1063     ;functions called:
                                    1- 1064     ;   _delay
                                    1- 1065     ;   _F_wait_eoc
                                    1- 1066     ;   _delay
                                    1- 1067     ;   _F_wait_eoc
                                    1- 1068     ;6 compiler assigned registers:
                                    1- 1069     ;   r0x1037
                                    1- 1070     ;   r0x1038
                                    1- 1071     ;   r0x1039
                                    1- 1072     ;   r0x103A
                                    1- 1073     ;   r0x103B
                                    1- 1074     ;   r0x103C
                                    1- 1075     ;; Starting pCode block
                                    1- 1076     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1078     ;local variable name mapping:
     0000                           1- 1081     _F_AIN4_Convert:
                                    1- 1082     ; 2 exit points
                                    1- 1083     	.line	880, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1084     	BANKSEL	r0x1037
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1085     	MOVAR	r0x1037
                                    1- 1086     	.line	882, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1087     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1088     	CLRR	_R_AIN4_DATA_LB
                                    1- 1089     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1090     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1091     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1092     	.line	884, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1093     	MOVIA	0x94
     0008 00rr                      1- 1094     	MOVAR	_ADMD
                                    1- 1095     	.line	885, "main.c"; 	delay(200);	
     0009 21C8                      1- 1096     	MOVIA	0xc8
                                    1- 1097     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1098     	.line	886, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1099     	MOVIA	0x01
                                    1- 1100     	BANKSEL	r0x1038
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1101     	MOVAR	r0x1038
     000E                           1- 1102     _00861_DS_:
                                    1- 1103     	BANKSEL	r0x1038
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1104     	MOVR	r0x1038,W
                                    1- 1105     	BANKSEL	r0x1037
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1106     	SUBAR	r0x1037,W
     0012 0803                      1- 1107     	BTRSS	STATUS,0
                                    1- 1108     	MGOTO	_00863_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1109     	.line	888, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1110     	BSR	_ADMDbits,6
                                    1- 1111     	.line	889, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1112     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1113     	.line	890, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1114     	MOVIA	0x0f
     0017 10rr                      1- 1115     	ANDAR	_ADR,W
                                    1- 1116     ;;3	MOVAR	r0x1039
                                    1- 1117     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1118     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1119     	.line	891, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1120     	MOVR	_ADD,W
                                    1- 1121     	BANKSEL	r0x1039
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1122     	MOVAR	r0x1039
                                    1- 1123     ;;1	CLRR	r0x103A
                                    1- 1124     ;;106	MOVR	r0x1039,W
                                    1- 1125     ;;104	MOVAR	r0x103B
     001D 2100                      1- 1126     	MOVIA	0x00
                                    1- 1127     	BANKSEL	r0x103C
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1128     	MOVAR	r0x103C
                                    1- 1129     ;;105	MOVR	r0x103B,W
                                    1- 1130     	BANKSEL	r0x1039
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1131     	MOVR	r0x1039,W
                                    1- 1132     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1133     	ADDAR	_R_AIN4_DATA,F
                                    1- 1134     	BANKSEL	r0x103C
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1135     	MOVR	r0x103C,W
     0026 0C03                      1- 1136     	BTRSC	STATUS,0
     0027 05rr                      1- 1137     	INCR	r0x103C,W
     0028 0D03                      1- 1138     	BTRSC	STATUS,2
                                    1- 1139     	MGOTO	_00003_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1140     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1141     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1142     _00003_DS_:
                                    1- 1143     	.line	886, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1144     	BANKSEL	r0x1038
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1145     	INCR	r0x1038,F
                                    1- 1146     	MGOTO	_00861_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1147     _00863_DS_:
                                    1- 1148     	.line	893, "main.c"; 	}
                                    1- 1149     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1150     ; exit point of _F_AIN4_Convert
                                    1- 1152     ;***
                                    1- 1153     ;  pBlock Stats: dbName = C
                                    1- 1154     ;***
                                    1- 1155     ;has an exit
                                    1- 1156     ;functions called:
                                    1- 1157     ;   _F_AIN4_Convert
                                    1- 1158     ;   __mulchar
                                    1- 1159     ;   __mulchar
                                    1- 1160     ;   __mulchar
                                    1- 1161     ;   __mulchar
                                    1- 1162     ;   __mulchar
                                    1- 1163     ;   __mulchar
                                    1- 1164     ;   __mulchar
                                    1- 1165     ;   __mulchar
                                    1- 1166     ;   _F_AIN4_Convert
                                    1- 1167     ;   __mulchar
                                    1- 1168     ;   __mulchar
                                    1- 1169     ;   __mulchar
                                    1- 1170     ;   __mulchar
                                    1- 1171     ;   __mulchar
                                    1- 1172     ;   __mulchar
                                    1- 1173     ;   __mulchar
                                    1- 1174     ;   __mulchar
                                    1- 1175     ;5 compiler assigned registers:
                                    1- 1176     ;   r0x103D
                                    1- 1177     ;   r0x103E
                                    1- 1178     ;   r0x103F
                                    1- 1179     ;   r0x1040
                                    1- 1180     ;   STK00
                                    1- 1181     ;; Starting pCode block
                                    1- 1182     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1184     _checkOutA:
                                    1- 1185     ; 2 exit points
                                    1- 1186     	.line	790, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1187     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1188     	CLRR	_R_AIN4_DATA_LB
                                    1- 1189     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1190     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1191     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1192     	.line	791, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1193     	MOVIA	0x08
                                    1- 1194     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1195     	.line	792, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1196     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1197     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1198     	ANDIA	0xf0
     000A 00rr                      1- 1199     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1200     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1201     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1202     	ANDIA	0x0f
     000E 11rr                      1- 1203     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1204     	XORAR	_R_AIN4_DATA,F
                                    1- 1205     	.line	793, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1206     	MOVIA	0xf0
                                    1- 1207     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1208     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1209     	.line	794, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1210     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1211     	BANKSEL	r0x103D
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1212     	MOVAR	r0x103D
                                    1- 1213     ;;1	CLRR	r0x103E
                                    1- 1214     ;;103	MOVR	r0x103D,W
                                    1- 1215     ;;101	MOVAR	r0x103F
     0016 2100                      1- 1216     	MOVIA	0x00
                                    1- 1217     	BANKSEL	r0x1040
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1218     	MOVAR	r0x1040
                                    1- 1219     ;;102	MOVR	r0x103F,W
                                    1- 1220     	BANKSEL	r0x103D
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1221     	MOVR	r0x103D,W
                                    1- 1222     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1223     	ADDAR	_R_AIN4_DATA,F
                                    1- 1224     	BANKSEL	r0x1040
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1225     	MOVR	r0x1040,W
     001F 0C03                      1- 1226     	BTRSC	STATUS,0
     0020 05rr                      1- 1227     	INCR	r0x1040,W
     0021 0D03                      1- 1228     	BTRSC	STATUS,2
                                    1- 1229     	MGOTO	_00004_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1230     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1231     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1232     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1233     _00004_DS_:
                                    1- 1234     	.line	795, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1235     	BCR	STATUS,0
                                    1- 1236     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1237     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1238     	RRR	_R_AIN4_DATA,F
                                    1- 1239     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1240     	BCR	STATUS,0
     002A 13rr                      1- 1241     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1242     	RRR	_R_AIN4_DATA,F
                                    1- 1243     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1244     	BCR	STATUS,0
     002D 13rr                      1- 1245     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1246     	RRR	_R_AIN4_DATA,F
                                    1- 1247     	.line	796, "main.c"; 	if(debug)
                                    1- 1248     	BANKSEL	_debug
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1249     	MOVR	_debug,W
     0031 0D03                      1- 1250     	BTRSC	STATUS,2
                                    1- 1251     	MGOTO	_00737_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1252     	.line	797, "main.c"; 	R_AIN4_DATA = OUTA;
     0033 212D                      1- 1253     	MOVIA	0x2d
                                    1- 1254     	BANKSEL	_R_AIN4_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1255     	MOVAR	_R_AIN4_DATA
     0036 2101                      1- 1256     	MOVIA	0x01
     0037 00rr                      1- 1257     	MOVAR	(_R_AIN4_DATA + 1)
                                    1- 1258     ;;unsigned compare: left < lit (0x6=6), size=1
     0038                           1- 1259     _00737_DS_:
                                    1- 1260     	.line	798, "main.c"; 	if(workStep < 6 && R_AIN4_DATA > 200)
     0038 2106                      1- 1261     	MOVIA	0x06
                                    1- 1262     	BANKSEL	_workStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1263     	SUBAR	_workStep,W
     003B 0C03                      1- 1264     	BTRSC	STATUS,0
                                    1- 1265     	MGOTO	_00780_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1266     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1267     ;;unsigned compare: left >= lit (0xC9=201), size=2
     003D 2100                      1- 1268     	MOVIA	0x00
                                    1- 1269     	BANKSEL	_R_AIN4_DATA
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 04rr                      1- 1270     	SUBAR	(_R_AIN4_DATA + 1),W
     0040 0903                      1- 1271     	BTRSS	STATUS,2
                                    1- 1272     	MGOTO	_00846_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042 21C9                      1- 1273     	MOVIA	0xc9
     0043 04rr                      1- 1274     	SUBAR	_R_AIN4_DATA,W
     0044                           1- 1275     _00846_DS_:
     0044 0803                      1- 1276     	BTRSS	STATUS,0
                                    1- 1277     	MGOTO	_00780_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1278     	.line	800, "main.c"; 	if(++overCount > 5)
                                    1- 1279     	BANKSEL	_overCount
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 05rr                      1- 1280     	INCR	_overCount,F
                                    1- 1281     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1282     ;;unsigned compare: left >= lit (0x6=6), size=1
     0048 2106                      1- 1283     	MOVIA	0x06
     0049 04rr                      1- 1284     	SUBAR	_overCount,W
     004A 0803                      1- 1285     	BTRSS	STATUS,0
                                    1- 1286     	MGOTO	_00783_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1287     	.line	802, "main.c"; 	overCount = 5;
     004C 2105                      1- 1288     	MOVIA	0x05
     004D 00rr                      1- 1289     	MOVAR	_overCount
                                    1- 1290     	MGOTO	_00783_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1291     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1292     ;;unsigned compare: left >= lit (0x191=401), size=2
     004F                           1- 1293     _00780_DS_:
                                    1- 1294     	.line	805, "main.c"; 	else if(R_AIN4_DATA > 400)
     004F 2101                      1- 1295     	MOVIA	0x01
                                    1- 1296     	BANKSEL	_R_AIN4_DATA
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 04rr                      1- 1297     	SUBAR	(_R_AIN4_DATA + 1),W
     0052 0903                      1- 1298     	BTRSS	STATUS,2
                                    1- 1299     	MGOTO	_00848_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
     0054 2191                      1- 1300     	MOVIA	0x91
     0055 04rr                      1- 1301     	SUBAR	_R_AIN4_DATA,W
     0056                           1- 1302     _00848_DS_:
     0056 0803                      1- 1303     	BTRSS	STATUS,0
                                    1- 1304     	MGOTO	_00777_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1305     	.line	807, "main.c"; 	if(++overCount > 5)
                                    1- 1306     	BANKSEL	_overCount
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 05rr                      1- 1307     	INCR	_overCount,F
                                    1- 1308     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1309     ;;unsigned compare: left >= lit (0x6=6), size=1
     005A 2106                      1- 1310     	MOVIA	0x06
     005B 04rr                      1- 1311     	SUBAR	_overCount,W
     005C 0803                      1- 1312     	BTRSS	STATUS,0
                                    1- 1313     	MGOTO	_00783_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1314     	.line	809, "main.c"; 	overCount = 5;
     005E 2105                      1- 1315     	MOVIA	0x05
     005F 00rr                      1- 1316     	MOVAR	_overCount
                                    1- 1317     	MGOTO	_00783_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1318     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1319     ;;unsigned compare: left >= lit (0x2E=46), size=2
     0061                           1- 1320     _00777_DS_:
                                    1- 1321     	.line	817, "main.c"; 	else if(R_AIN4_DATA > 45)
     0061 2100                      1- 1322     	MOVIA	0x00
                                    1- 1323     	BANKSEL	_R_AIN4_DATA
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 04rr                      1- 1324     	SUBAR	(_R_AIN4_DATA + 1),W
     0064 0903                      1- 1325     	BTRSS	STATUS,2
                                    1- 1326     	MGOTO	_00850_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
     0066 212E                      1- 1327     	MOVIA	0x2e
     0067 04rr                      1- 1328     	SUBAR	_R_AIN4_DATA,W
     0068                           1- 1329     _00850_DS_:
     0068 0803                      1- 1330     	BTRSS	STATUS,0
                                    1- 1331     	MGOTO	_00774_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1332     	.line	819, "main.c"; 	if(overCount > 0)
                                    1- 1333     	BANKSEL	_overCount
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 01rr                      1- 1334     	MOVR	_overCount,W
     006C 0903                      1- 1335     	BTRSS	STATUS,2
                                    1- 1336     	.line	821, "main.c"; 	overCount--;
     006D 06rr                      1- 1337     	DECR	_overCount,F
                                    1- 1338     	.line	823, "main.c"; 	if(workStep < 4)
     006E 2104                      1- 1339     	MOVIA	0x04
                                    1- 1340     	BANKSEL	_workStep
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 04rr                      1- 1341     	SUBAR	_workStep,W
     0071 0C03                      1- 1342     	BTRSC	STATUS,0
                                    1- 1343     	MGOTO	_00753_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1344     	.line	825, "main.c"; 	if(workStep == 1)
     0073 01rr                      1- 1345     	MOVR	_workStep,W
     0074 2401                      1- 1346     	XORIA	0x01
     0075 0903                      1- 1347     	BTRSS	STATUS,2
                                    1- 1348     	MGOTO	_00750_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1349     	.line	827, "main.c"; 	tempDuty = maxDuty + workStep*4 + 51;
     0077 2104                      1- 1350     	MOVIA	0x04
     0078 00rr                      1- 1351     	MOVAR	STK00
     0079 01rr                      1- 1352     	MOVR	_workStep,W
                                    1- 1353     	MCALL	__mulchar
     007A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1354     ;;3	MOVAR	r0x103D
                                    1- 1355     	BANKSEL	_maxDuty
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 03rr                      1- 1356     	ADDAR	_maxDuty,W
                                    1- 1357     	BANKSEL	r0x103D
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 00rr                      1- 1358     	MOVAR	r0x103D
     007F 2133                      1- 1359     	MOVIA	0x33
     0080 03rr                      1- 1360     	ADDAR	r0x103D,W
                                    1- 1361     	BANKSEL	_tempDuty
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 00rr                      1- 1362     	MOVAR	_tempDuty
                                    1- 1363     	MGOTO	_00751_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
     0084                           1- 1364     _00750_DS_:
                                    1- 1365     	.line	829, "main.c"; 	else if(workStep == 2)
                                    1- 1366     	BANKSEL	_workStep
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 01rr                      1- 1367     	MOVR	_workStep,W
     0086 2402                      1- 1368     	XORIA	0x02
     0087 0903                      1- 1369     	BTRSS	STATUS,2
                                    1- 1370     	MGOTO	_00747_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1371     	.line	831, "main.c"; 	tempDuty = maxDuty + workStep*4 + 48;
     0089 2104                      1- 1372     	MOVIA	0x04
     008A 00rr                      1- 1373     	MOVAR	STK00
     008B 01rr                      1- 1374     	MOVR	_workStep,W
                                    1- 1375     	MCALL	__mulchar
     008C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1376     ;;3	MOVAR	r0x103D
                                    1- 1377     	BANKSEL	_maxDuty
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 03rr                      1- 1378     	ADDAR	_maxDuty,W
                                    1- 1379     	BANKSEL	r0x103D
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 00rr                      1- 1380     	MOVAR	r0x103D
     0091 2130                      1- 1381     	MOVIA	0x30
     0092 03rr                      1- 1382     	ADDAR	r0x103D,W
                                    1- 1383     	BANKSEL	_tempDuty
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 00rr                      1- 1384     	MOVAR	_tempDuty
                                    1- 1385     	MGOTO	_00751_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
     0096                           1- 1386     _00747_DS_:
                                    1- 1387     	.line	833, "main.c"; 	else if(workStep == 3)
                                    1- 1388     	BANKSEL	_workStep
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 01rr                      1- 1389     	MOVR	_workStep,W
     0098 2403                      1- 1390     	XORIA	0x03
     0099 0903                      1- 1391     	BTRSS	STATUS,2
                                    1- 1392     	MGOTO	_00751_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1393     	.line	835, "main.c"; 	tempDuty = maxDuty + workStep*4 + 46;
     009B 2104                      1- 1394     	MOVIA	0x04
     009C 00rr                      1- 1395     	MOVAR	STK00
     009D 01rr                      1- 1396     	MOVR	_workStep,W
                                    1- 1397     	MCALL	__mulchar
     009E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1398     ;;3	MOVAR	r0x103D
                                    1- 1399     	BANKSEL	_maxDuty
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 03rr                      1- 1400     	ADDAR	_maxDuty,W
                                    1- 1401     	BANKSEL	r0x103D
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 00rr                      1- 1402     	MOVAR	r0x103D
     00A3 212E                      1- 1403     	MOVIA	0x2e
     00A4 03rr                      1- 1404     	ADDAR	r0x103D,W
                                    1- 1405     	BANKSEL	_tempDuty
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 00rr                      1- 1406     	MOVAR	_tempDuty
     00A7                           1- 1407     _00751_DS_:
                                    1- 1408     	.line	837, "main.c"; 	tempDuty = maxDuty + workStep*4 + 45;
     00A7 2104                      1- 1409     	MOVIA	0x04
     00A8 00rr                      1- 1410     	MOVAR	STK00
                                    1- 1411     	BANKSEL	_workStep
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 01rr                      1- 1412     	MOVR	_workStep,W
                                    1- 1413     	MCALL	__mulchar
     00AB 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1414     ;;3	MOVAR	r0x103D
                                    1- 1415     	BANKSEL	_maxDuty
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 03rr                      1- 1416     	ADDAR	_maxDuty,W
                                    1- 1417     	BANKSEL	r0x103D
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 00rr                      1- 1418     	MOVAR	r0x103D
     00B0 212D                      1- 1419     	MOVIA	0x2d
     00B1 03rr                      1- 1420     	ADDAR	r0x103D,W
                                    1- 1421     	BANKSEL	_tempDuty
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 00rr                      1- 1422     	MOVAR	_tempDuty
                                    1- 1423     	MGOTO	_00754_DS_
     00B4 3rrr                      3-   63 m1      LGOTO rom_address
     00B5                           1- 1424     _00753_DS_:
                                    1- 1425     	.line	840, "main.c"; 	tempDuty = maxDuty + workStep*5 + 40;
     00B5 2105                      1- 1426     	MOVIA	0x05
     00B6 00rr                      1- 1427     	MOVAR	STK00
                                    1- 1428     	BANKSEL	_workStep
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 01rr                      1- 1429     	MOVR	_workStep,W
                                    1- 1430     	MCALL	__mulchar
     00B9 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1431     ;;3	MOVAR	r0x103D
                                    1- 1432     	BANKSEL	_maxDuty
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 03rr                      1- 1433     	ADDAR	_maxDuty,W
                                    1- 1434     	BANKSEL	r0x103D
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 00rr                      1- 1435     	MOVAR	r0x103D
     00BE 2128                      1- 1436     	MOVIA	0x28
     00BF 03rr                      1- 1437     	ADDAR	r0x103D,W
                                    1- 1438     	BANKSEL	_tempDuty
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 00rr                      1- 1439     	MOVAR	_tempDuty
     00C2                           1- 1440     _00754_DS_:
                                    1- 1441     	.line	841, "main.c"; 	PWM2DUTY = tempDuty;
                                    1- 1442     	BANKSEL	_tempDuty
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 01rr                      1- 1443     	MOVR	_tempDuty,W
     00C4 00rr                      1- 1444     	SFUN	_PWM2DUTY
                                    1- 1445     	MGOTO	_00783_DS_
     00C5 3rrr                      3-   63 m1      LGOTO rom_address
     00C6                           1- 1446     _00774_DS_:
                                    1- 1447     	.line	845, "main.c"; 	if(overCount > 0)
                                    1- 1448     	BANKSEL	_overCount
     00C6 rrrr                      3-  110 m1      .banksel ram_address
     00C7 01rr                      1- 1449     	MOVR	_overCount,W
     00C8 0903                      1- 1450     	BTRSS	STATUS,2
                                    1- 1451     	.line	847, "main.c"; 	overCount--;
     00C9 06rr                      1- 1452     	DECR	_overCount,F
                                    1- 1453     	.line	849, "main.c"; 	if(R_AIN4_DATA > 40 && workStep < 4)
     00CA 2100                      1- 1454     	MOVIA	0x00
                                    1- 1455     	BANKSEL	_R_AIN4_DATA
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 04rr                      1- 1456     	SUBAR	(_R_AIN4_DATA + 1),W
     00CD 0903                      1- 1457     	BTRSS	STATUS,2
                                    1- 1458     	MGOTO	_00852_DS_
     00CE 3rrr                      3-   63 m1      LGOTO rom_address
     00CF 2129                      1- 1459     	MOVIA	0x29
     00D0 04rr                      1- 1460     	SUBAR	_R_AIN4_DATA,W
     00D1                           1- 1461     _00852_DS_:
     00D1 0803                      1- 1462     	BTRSS	STATUS,0
                                    1- 1463     	MGOTO	_00768_DS_
     00D2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1464     ;;unsigned compare: left < lit (0x4=4), size=1
     00D3 2104                      1- 1465     	MOVIA	0x04
                                    1- 1466     	BANKSEL	_workStep
     00D4 rrrr                      3-  110 m1      .banksel ram_address
     00D5 04rr                      1- 1467     	SUBAR	_workStep,W
     00D6 0C03                      1- 1468     	BTRSC	STATUS,0
                                    1- 1469     	MGOTO	_00768_DS_
     00D7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1470     	.line	851, "main.c"; 	if(workStep == 1)
     00D8 01rr                      1- 1471     	MOVR	_workStep,W
     00D9 2401                      1- 1472     	XORIA	0x01
     00DA 0903                      1- 1473     	BTRSS	STATUS,2
                                    1- 1474     	MGOTO	_00763_DS_
     00DB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1475     	.line	853, "main.c"; 	tempDuty = maxDuty + workStep*4 + 45;
     00DC 2104                      1- 1476     	MOVIA	0x04
     00DD 00rr                      1- 1477     	MOVAR	STK00
     00DE 01rr                      1- 1478     	MOVR	_workStep,W
                                    1- 1479     	MCALL	__mulchar
     00DF 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1480     ;;3	MOVAR	r0x103D
                                    1- 1481     	BANKSEL	_maxDuty
     00E0 rrrr                      3-  110 m1      .banksel ram_address
     00E1 03rr                      1- 1482     	ADDAR	_maxDuty,W
                                    1- 1483     	BANKSEL	r0x103D
     00E2 rrrr                      3-  110 m1      .banksel ram_address
     00E3 00rr                      1- 1484     	MOVAR	r0x103D
     00E4 212D                      1- 1485     	MOVIA	0x2d
     00E5 03rr                      1- 1486     	ADDAR	r0x103D,W
                                    1- 1487     	BANKSEL	_tempDuty
     00E6 rrrr                      3-  110 m1      .banksel ram_address
     00E7 00rr                      1- 1488     	MOVAR	_tempDuty
                                    1- 1489     	MGOTO	_00764_DS_
     00E8 3rrr                      3-   63 m1      LGOTO rom_address
     00E9                           1- 1490     _00763_DS_:
                                    1- 1491     	.line	855, "main.c"; 	else if(workStep == 2)
                                    1- 1492     	BANKSEL	_workStep
     00E9 rrrr                      3-  110 m1      .banksel ram_address
     00EA 01rr                      1- 1493     	MOVR	_workStep,W
     00EB 2402                      1- 1494     	XORIA	0x02
     00EC 0903                      1- 1495     	BTRSS	STATUS,2
                                    1- 1496     	MGOTO	_00760_DS_
     00ED 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1497     	.line	857, "main.c"; 	tempDuty = maxDuty + workStep*4 + 42;
     00EE 2104                      1- 1498     	MOVIA	0x04
     00EF 00rr                      1- 1499     	MOVAR	STK00
     00F0 01rr                      1- 1500     	MOVR	_workStep,W
                                    1- 1501     	MCALL	__mulchar
     00F1 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1502     ;;3	MOVAR	r0x103D
                                    1- 1503     	BANKSEL	_maxDuty
     00F2 rrrr                      3-  110 m1      .banksel ram_address
     00F3 03rr                      1- 1504     	ADDAR	_maxDuty,W
                                    1- 1505     	BANKSEL	r0x103D
     00F4 rrrr                      3-  110 m1      .banksel ram_address
     00F5 00rr                      1- 1506     	MOVAR	r0x103D
     00F6 212A                      1- 1507     	MOVIA	0x2a
     00F7 03rr                      1- 1508     	ADDAR	r0x103D,W
                                    1- 1509     	BANKSEL	_tempDuty
     00F8 rrrr                      3-  110 m1      .banksel ram_address
     00F9 00rr                      1- 1510     	MOVAR	_tempDuty
                                    1- 1511     	MGOTO	_00764_DS_
     00FA 3rrr                      3-   63 m1      LGOTO rom_address
     00FB                           1- 1512     _00760_DS_:
                                    1- 1513     	.line	859, "main.c"; 	else if(workStep == 3)
                                    1- 1514     	BANKSEL	_workStep
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 01rr                      1- 1515     	MOVR	_workStep,W
     00FD 2403                      1- 1516     	XORIA	0x03
     00FE 0903                      1- 1517     	BTRSS	STATUS,2
                                    1- 1518     	MGOTO	_00764_DS_
     00FF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1519     	.line	861, "main.c"; 	tempDuty = maxDuty + workStep*4 + 40;
     0100 2104                      1- 1520     	MOVIA	0x04
     0101 00rr                      1- 1521     	MOVAR	STK00
     0102 01rr                      1- 1522     	MOVR	_workStep,W
                                    1- 1523     	MCALL	__mulchar
     0103 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1524     ;;3	MOVAR	r0x103D
                                    1- 1525     	BANKSEL	_maxDuty
     0104 rrrr                      3-  110 m1      .banksel ram_address
     0105 03rr                      1- 1526     	ADDAR	_maxDuty,W
                                    1- 1527     	BANKSEL	r0x103D
     0106 rrrr                      3-  110 m1      .banksel ram_address
     0107 00rr                      1- 1528     	MOVAR	r0x103D
     0108 2128                      1- 1529     	MOVIA	0x28
     0109 03rr                      1- 1530     	ADDAR	r0x103D,W
                                    1- 1531     	BANKSEL	_tempDuty
     010A rrrr                      3-  110 m1      .banksel ram_address
     010B 00rr                      1- 1532     	MOVAR	_tempDuty
     010C                           1- 1533     _00764_DS_:
                                    1- 1534     	.line	863, "main.c"; 	PWM2DUTY = tempDuty;
                                    1- 1535     	BANKSEL	_tempDuty
     010C rrrr                      3-  110 m1      .banksel ram_address
     010D 01rr                      1- 1536     	MOVR	_tempDuty,W
     010E 00rr                      1- 1537     	SFUN	_PWM2DUTY
                                    1- 1538     	MGOTO	_00769_DS_
     010F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1539     ;;unsigned compare: left < lit (0x44=68), size=2
     0110                           1- 1540     _00768_DS_:
                                    1- 1541     	.line	865, "main.c"; 	else if(R_AIN4_DATA < 68)
     0110 2100                      1- 1542     	MOVIA	0x00
                                    1- 1543     	BANKSEL	_R_AIN4_DATA
     0111 rrrr                      3-  110 m1      .banksel ram_address
     0112 04rr                      1- 1544     	SUBAR	(_R_AIN4_DATA + 1),W
     0113 0903                      1- 1545     	BTRSS	STATUS,2
                                    1- 1546     	MGOTO	_00854_DS_
     0114 3rrr                      3-   63 m1      LGOTO rom_address
     0115 2144                      1- 1547     	MOVIA	0x44
     0116 04rr                      1- 1548     	SUBAR	_R_AIN4_DATA,W
     0117                           1- 1549     _00854_DS_:
     0117 0C03                      1- 1550     	BTRSC	STATUS,0
                                    1- 1551     	MGOTO	_00769_DS_
     0118 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1552     	.line	867, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 1553     	BANKSEL	_maxDuty
     0119 rrrr                      3-  110 m1      .banksel ram_address
     011A 01rr                      1- 1554     	MOVR	_maxDuty,W
     011B 00rr                      1- 1555     	SFUN	_PWM2DUTY
     011C                           1- 1556     _00769_DS_:
                                    1- 1557     	.line	869, "main.c"; 	if(workStep > 0)
                                    1- 1558     	BANKSEL	_workStep
     011C rrrr                      3-  110 m1      .banksel ram_address
     011D 01rr                      1- 1559     	MOVR	_workStep,W
     011E 0D03                      1- 1560     	BTRSC	STATUS,2
                                    1- 1561     	MGOTO	_00783_DS_
     011F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1562     	.line	870, "main.c"; 	ledStep = workStep;
     0120 01rr                      1- 1563     	MOVR	_workStep,W
                                    1- 1564     	BANKSEL	_ledStep
     0121 rrrr                      3-  110 m1      .banksel ram_address
     0122 00rr                      1- 1565     	MOVAR	_ledStep
     0123                           1- 1566     _00783_DS_:
                                    1- 1567     	.line	874, "main.c"; 	}
                                    1- 1568     	RETURN	
     0123 0010                      3-   40 m1      ret
                                    1- 1569     ; exit point of _checkOutA
                                    1- 1571     ;***
                                    1- 1572     ;  pBlock Stats: dbName = C
                                    1- 1573     ;***
                                    1- 1574     ;has an exit
                                    1- 1575     ;functions called:
                                    1- 1576     ;   _F_AIN3_Convert
                                    1- 1577     ;   _F_AIN3_Convert
                                    1- 1578     ;4 compiler assigned registers:
                                    1- 1579     ;   r0x1041
                                    1- 1580     ;   r0x1042
                                    1- 1581     ;   r0x1043
                                    1- 1582     ;   r0x1044
                                    1- 1583     ;; Starting pCode block
                                    1- 1584     .segment "code"; module=main, function=_checkChrgV
     0000                           1- 1586     _checkChrgV:
                                    1- 1587     ; 2 exit points
                                    1- 1588     	.line	777, "main.c"; 	R_AIN3_DATA = R_AIN3_DATA_LB = 0x00;
                                    1- 1589     	BANKSEL	_R_AIN3_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1590     	CLRR	_R_AIN3_DATA_LB
                                    1- 1591     	BANKSEL	_R_AIN3_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1592     	CLRR	_R_AIN3_DATA
     0004 02rr                      1- 1593     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1594     	.line	778, "main.c"; 	F_AIN3_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1595     	MOVIA	0x08
                                    1- 1596     	MCALL	_F_AIN3_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1597     	.line	779, "main.c"; 	R_AIN3_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1598     	BANKSEL	_R_AIN3_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1599     	SWAPR	(_R_AIN3_DATA + 1),W
     0009 22F0                      1- 1600     	ANDIA	0xf0
     000A 00rr                      1- 1601     	MOVAR	(_R_AIN3_DATA + 1)
     000B 15rr                      1- 1602     	SWAPR	_R_AIN3_DATA,W
     000C 00rr                      1- 1603     	MOVAR	_R_AIN3_DATA
     000D 220F                      1- 1604     	ANDIA	0x0f
     000E 11rr                      1- 1605     	IORAR	(_R_AIN3_DATA + 1),F
     000F 12rr                      1- 1606     	XORAR	_R_AIN3_DATA,F
                                    1- 1607     	.line	780, "main.c"; 	R_AIN3_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1608     	MOVIA	0xf0
                                    1- 1609     	BANKSEL	_R_AIN3_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1610     	ANDAR	_R_AIN3_DATA_LB,F
                                    1- 1611     	.line	781, "main.c"; 	R_AIN3_DATA += R_AIN3_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1612     	MOVR	_R_AIN3_DATA_LB,W
                                    1- 1613     	BANKSEL	r0x1043
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1614     	MOVAR	r0x1043
                                    1- 1615     ;;1	MOVAR	r0x1041
                                    1- 1616     ;;1	CLRR	r0x1042
                                    1- 1617     ;;100	MOVR	r0x1041,W
     0016 2100                      1- 1618     	MOVIA	0x00
                                    1- 1619     	BANKSEL	r0x1044
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1620     	MOVAR	r0x1044
                                    1- 1621     	BANKSEL	r0x1043
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1622     	MOVR	r0x1043,W
                                    1- 1623     	BANKSEL	_R_AIN3_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1624     	ADDAR	_R_AIN3_DATA,F
                                    1- 1625     	BANKSEL	r0x1044
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1626     	MOVR	r0x1044,W
     001F 0C03                      1- 1627     	BTRSC	STATUS,0
     0020 05rr                      1- 1628     	INCR	r0x1044,W
     0021 0D03                      1- 1629     	BTRSC	STATUS,2
                                    1- 1630     	MGOTO	_00005_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1631     	BANKSEL	_R_AIN3_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1632     	ADDAR	(_R_AIN3_DATA + 1),F
                                    1- 1633     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1634     _00005_DS_:
                                    1- 1635     	.line	782, "main.c"; 	R_AIN3_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1636     	BCR	STATUS,0
                                    1- 1637     	BANKSEL	_R_AIN3_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1638     	RRR	(_R_AIN3_DATA + 1),F
     0028 13rr                      1- 1639     	RRR	_R_AIN3_DATA,F
                                    1- 1640     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1641     	BCR	STATUS,0
     002A 13rr                      1- 1642     	RRR	(_R_AIN3_DATA + 1),F
     002B 13rr                      1- 1643     	RRR	_R_AIN3_DATA,F
                                    1- 1644     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1645     	BCR	STATUS,0
     002D 13rr                      1- 1646     	RRR	(_R_AIN3_DATA + 1),F
     002E 13rr                      1- 1647     	RRR	_R_AIN3_DATA,F
                                    1- 1648     	.line	783, "main.c"; 	}
                                    1- 1649     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1650     ; exit point of _checkChrgV
                                    1- 1652     ;***
                                    1- 1653     ;  pBlock Stats: dbName = C
                                    1- 1654     ;***
                                    1- 1655     ;has an exit
                                    1- 1656     ;functions called:
                                    1- 1657     ;   _F_AIN2_Convert
                                    1- 1658     ;   _F_AIN2_Convert
                                    1- 1659     ;4 compiler assigned registers:
                                    1- 1660     ;   r0x1045
                                    1- 1661     ;   r0x1046
                                    1- 1662     ;   r0x1047
                                    1- 1663     ;   r0x1048
                                    1- 1664     ;; Starting pCode block
                                    1- 1665     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1667     _checkBatAD:
                                    1- 1668     ; 2 exit points
                                    1- 1669     	.line	631, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1670     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1671     	CLRR	_R_AIN2_DATA_LB
                                    1- 1672     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1673     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1674     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1675     	.line	632, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1676     	MOVIA	0x08
                                    1- 1677     	MCALL	_F_AIN2_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1678     	.line	633, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1679     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1680     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1681     	ANDIA	0xf0
     000A 00rr                      1- 1682     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1683     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1684     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1685     	ANDIA	0x0f
     000E 11rr                      1- 1686     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1687     	XORAR	_R_AIN2_DATA,F
                                    1- 1688     	.line	634, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1689     	MOVIA	0xf0
                                    1- 1690     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1691     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1692     	.line	635, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1693     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1694     	BANKSEL	r0x1047
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1695     	MOVAR	r0x1047
                                    1- 1696     ;;1	MOVAR	r0x1045
                                    1- 1697     ;;1	CLRR	r0x1046
                                    1- 1698     ;;99	MOVR	r0x1045,W
     0016 2100                      1- 1699     	MOVIA	0x00
                                    1- 1700     	BANKSEL	r0x1048
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1701     	MOVAR	r0x1048
                                    1- 1702     	BANKSEL	r0x1047
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1703     	MOVR	r0x1047,W
                                    1- 1704     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1705     	ADDAR	_R_AIN2_DATA,F
                                    1- 1706     	BANKSEL	r0x1048
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1707     	MOVR	r0x1048,W
     001F 0C03                      1- 1708     	BTRSC	STATUS,0
     0020 05rr                      1- 1709     	INCR	r0x1048,W
     0021 0D03                      1- 1710     	BTRSC	STATUS,2
                                    1- 1711     	MGOTO	_00006_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1712     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1713     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1714     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1715     _00006_DS_:
                                    1- 1716     	.line	636, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0025 1C03                      1- 1717     	BCR	STATUS,0
                                    1- 1718     	BANKSEL	_R_AIN2_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1719     	RRR	(_R_AIN2_DATA + 1),F
     0028 13rr                      1- 1720     	RRR	_R_AIN2_DATA,F
                                    1- 1721     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1722     	BCR	STATUS,0
     002A 13rr                      1- 1723     	RRR	(_R_AIN2_DATA + 1),F
     002B 13rr                      1- 1724     	RRR	_R_AIN2_DATA,F
                                    1- 1725     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1726     	BCR	STATUS,0
     002D 13rr                      1- 1727     	RRR	(_R_AIN2_DATA + 1),F
     002E 13rr                      1- 1728     	RRR	_R_AIN2_DATA,F
                                    1- 1729     	.line	637, "main.c"; 	if(debug)
                                    1- 1730     	BANKSEL	_debug
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1731     	MOVR	_debug,W
     0031 0D03                      1- 1732     	BTRSC	STATUS,2
                                    1- 1733     	MGOTO	_00493_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1734     	.line	638, "main.c"; 	R_AIN2_DATA = BATTLE;
     0033 210E                      1- 1735     	MOVIA	0x0e
                                    1- 1736     	BANKSEL	_R_AIN2_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1737     	MOVAR	_R_AIN2_DATA
     0036 2106                      1- 1738     	MOVIA	0x06
     0037 00rr                      1- 1739     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1740     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1741     ;;unsigned compare: left >= lit (0x60F=1551), size=2
     0038                           1- 1742     _00493_DS_:
                                    1- 1743     	.line	640, "main.c"; 	if(R_AIN2_DATA > 1550)
     0038 2106                      1- 1744     	MOVIA	0x06
                                    1- 1745     	BANKSEL	_R_AIN2_DATA
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1746     	SUBAR	(_R_AIN2_DATA + 1),W
     003B 0903                      1- 1747     	BTRSS	STATUS,2
                                    1- 1748     	MGOTO	_00699_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 210F                      1- 1749     	MOVIA	0x0f
     003E 04rr                      1- 1750     	SUBAR	_R_AIN2_DATA,W
     003F                           1- 1751     _00699_DS_:
     003F 0803                      1- 1752     	BTRSS	STATUS,0
                                    1- 1753     	MGOTO	_00505_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1754     	.line	643, "main.c"; 	lowCount = 0;
                                    1- 1755     	BANKSEL	_lowCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 1756     	CLRR	_lowCount
                                    1- 1757     	MGOTO	_00506_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1758     ;;unsigned compare: left < lit (0x479=1145), size=2
     0044                           1- 1759     _00505_DS_:
                                    1- 1760     	.line	645, "main.c"; 	else if(R_AIN2_DATA < 1145)
     0044 2104                      1- 1761     	MOVIA	0x04
                                    1- 1762     	BANKSEL	_R_AIN2_DATA
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 04rr                      1- 1763     	SUBAR	(_R_AIN2_DATA + 1),W
     0047 0903                      1- 1764     	BTRSS	STATUS,2
                                    1- 1765     	MGOTO	_00700_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 2179                      1- 1766     	MOVIA	0x79
     004A 04rr                      1- 1767     	SUBAR	_R_AIN2_DATA,W
     004B                           1- 1768     _00700_DS_:
     004B 0C03                      1- 1769     	BTRSC	STATUS,0
                                    1- 1770     	MGOTO	_00502_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1771     	.line	647, "main.c"; 	if(++lowCount < 10)
                                    1- 1772     	BANKSEL	_lowCount
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 05rr                      1- 1773     	INCR	_lowCount,F
                                    1- 1774     ;;unsigned compare: left < lit (0xA=10), size=1
     004F 210A                      1- 1775     	MOVIA	0x0a
     0050 04rr                      1- 1776     	SUBAR	_lowCount,W
     0051 0803                      1- 1777     	BTRSS	STATUS,0
                                    1- 1778     	.line	648, "main.c"; 	return;
                                    1- 1779     	MGOTO	_00580_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1780     	.line	649, "main.c"; 	lowCount = 10;
     0053 210A                      1- 1781     	MOVIA	0x0a
     0054 00rr                      1- 1782     	MOVAR	_lowCount
                                    1- 1783     	.line	650, "main.c"; 	pwStep = 0;
                                    1- 1784     	BANKSEL	_pwStep
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 02rr                      1- 1785     	CLRR	_pwStep
                                    1- 1786     	.line	651, "main.c"; 	R_AIN2_DATA = 1145;
     0057 2179                      1- 1787     	MOVIA	0x79
                                    1- 1788     	BANKSEL	_R_AIN2_DATA
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 00rr                      1- 1789     	MOVAR	_R_AIN2_DATA
     005A 2104                      1- 1790     	MOVIA	0x04
     005B 00rr                      1- 1791     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1792     	.line	653, "main.c"; 	if(workStep > 0 && ++firstTime == 10)
                                    1- 1793     	BANKSEL	_workStep
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 01rr                      1- 1794     	MOVR	_workStep,W
     005E 0D03                      1- 1795     	BTRSC	STATUS,2
                                    1- 1796     	MGOTO	_00497_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1797     	BANKSEL	_firstTime
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 05rr                      1- 1798     	INCR	_firstTime,F
     0062 01rr                      1- 1799     	MOVR	_firstTime,W
     0063 240A                      1- 1800     	XORIA	0x0a
     0064 0903                      1- 1801     	BTRSS	STATUS,2
                                    1- 1802     	MGOTO	_00497_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1803     	.line	655, "main.c"; 	shanshuoTime = 16;
     0066 2110                      1- 1804     	MOVIA	0x10
                                    1- 1805     	BANKSEL	_shanshuoTime
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 00rr                      1- 1806     	MOVAR	_shanshuoTime
                                    1- 1807     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1808     ;;unsigned compare: left >= lit (0xC=12), size=1
     0069                           1- 1809     _00497_DS_:
                                    1- 1810     	.line	658, "main.c"; 	if(firstTime > 11)
     0069 210C                      1- 1811     	MOVIA	0x0c
                                    1- 1812     	BANKSEL	_firstTime
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 04rr                      1- 1813     	SUBAR	_firstTime,W
     006C 0803                      1- 1814     	BTRSS	STATUS,0
                                    1- 1815     	MGOTO	_00506_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1816     	.line	659, "main.c"; 	firstTime = 11;
     006E 210B                      1- 1817     	MOVIA	0x0b
     006F 00rr                      1- 1818     	MOVAR	_firstTime
                                    1- 1819     	MGOTO	_00506_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
     0071                           1- 1820     _00502_DS_:
                                    1- 1821     	.line	663, "main.c"; 	lowCount = 0;
                                    1- 1822     	BANKSEL	_lowCount
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 02rr                      1- 1823     	CLRR	_lowCount
                                    1- 1824     	.line	664, "main.c"; 	firstTime = 0;
                                    1- 1825     	BANKSEL	_firstTime
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 02rr                      1- 1826     	CLRR	_firstTime
     0075                           1- 1827     _00506_DS_:
                                    1- 1828     	.line	666, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA - 1145;
     0075 2187                      1- 1829     	MOVIA	0x87
                                    1- 1830     	BANKSEL	_R_AIN2_DATA
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 03rr                      1- 1831     	ADDAR	_R_AIN2_DATA,F
     0078 21FB                      1- 1832     	MOVIA	0xfb
     0079 0C03                      1- 1833     	BTRSC	STATUS,0
     007A 21FC                      1- 1834     	MOVIA	0xfc
     007B 03rr                      1- 1835     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1836     ;;unsigned compare: left < lit (0x1A6=422), size=2
                                    1- 1837     	.line	668, "main.c"; 	if(R_AIN2_DATA >= 422)
     007C 2101                      1- 1838     	MOVIA	0x01
     007D 04rr                      1- 1839     	SUBAR	(_R_AIN2_DATA + 1),W
     007E 0903                      1- 1840     	BTRSS	STATUS,2
                                    1- 1841     	MGOTO	_00703_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
     0080 21A6                      1- 1842     	MOVIA	0xa6
     0081 04rr                      1- 1843     	SUBAR	_R_AIN2_DATA,W
     0082                           1- 1844     _00703_DS_:
     0082 0803                      1- 1845     	BTRSS	STATUS,0
                                    1- 1846     	MGOTO	_00578_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1847     	.line	670, "main.c"; 	pwStep = 7;
     0084 2107                      1- 1848     	MOVIA	0x07
                                    1- 1849     	BANKSEL	_pwStep
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 00rr                      1- 1850     	MOVAR	_pwStep
                                    1- 1851     	MGOTO	_00580_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1852     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1853     ;;unsigned compare: left >= lit (0x15F=351), size=2
     0088                           1- 1854     _00578_DS_:
                                    1- 1855     	.line	672, "main.c"; 	else if(R_AIN2_DATA > 350)
     0088 2101                      1- 1856     	MOVIA	0x01
                                    1- 1857     	BANKSEL	_R_AIN2_DATA
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 04rr                      1- 1858     	SUBAR	(_R_AIN2_DATA + 1),W
     008B 0903                      1- 1859     	BTRSS	STATUS,2
                                    1- 1860     	MGOTO	_00704_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
     008D 215F                      1- 1861     	MOVIA	0x5f
     008E 04rr                      1- 1862     	SUBAR	_R_AIN2_DATA,W
     008F                           1- 1863     _00704_DS_:
     008F 0803                      1- 1864     	BTRSS	STATUS,0
                                    1- 1865     	MGOTO	_00575_DS_
     0090 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1866     	.line	674, "main.c"; 	fullCount = 0;
                                    1- 1867     	BANKSEL	_fullCount
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 02rr                      1- 1868     	CLRR	_fullCount
                                    1- 1869     ;;unsigned compare: left < lit (0x6=6), size=1
                                    1- 1870     	.line	675, "main.c"; 	if(pwStep < 6)
     0093 2106                      1- 1871     	MOVIA	0x06
                                    1- 1872     	BANKSEL	_pwStep
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 04rr                      1- 1873     	SUBAR	_pwStep,W
     0096 0C03                      1- 1874     	BTRSC	STATUS,0
                                    1- 1875     	MGOTO	_00513_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1876     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1877     ;;unsigned compare: left >= lit (0x164=356), size=2
                                    1- 1878     	.line	677, "main.c"; 	if(R_AIN2_DATA > 355)
     0098 2101                      1- 1879     	MOVIA	0x01
                                    1- 1880     	BANKSEL	_R_AIN2_DATA
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 04rr                      1- 1881     	SUBAR	(_R_AIN2_DATA + 1),W
     009B 0903                      1- 1882     	BTRSS	STATUS,2
                                    1- 1883     	MGOTO	_00706_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
     009D 2164                      1- 1884     	MOVIA	0x64
     009E 04rr                      1- 1885     	SUBAR	_R_AIN2_DATA,W
     009F                           1- 1886     _00706_DS_:
     009F 0803                      1- 1887     	BTRSS	STATUS,0
                                    1- 1888     	MGOTO	_00514_DS_
     00A0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1889     	.line	678, "main.c"; 	pwStep = 6;
     00A1 2106                      1- 1890     	MOVIA	0x06
                                    1- 1891     	BANKSEL	_pwStep
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 00rr                      1- 1892     	MOVAR	_pwStep
                                    1- 1893     	MGOTO	_00514_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
     00A5                           1- 1894     _00513_DS_:
                                    1- 1895     	.line	680, "main.c"; 	else if(chrgTime == 0 && R_AIN2_DATA < 396)
                                    1- 1896     	BANKSEL	_chrgTime
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 01rr                      1- 1897     	MOVR	_chrgTime,W
     00A7 11rr                      1- 1898     	IORAR	(_chrgTime + 1),W
     00A8 0903                      1- 1899     	BTRSS	STATUS,2
                                    1- 1900     	MGOTO	_00514_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1901     ;;unsigned compare: left < lit (0x18C=396), size=2
     00AA 2101                      1- 1902     	MOVIA	0x01
                                    1- 1903     	BANKSEL	_R_AIN2_DATA
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 04rr                      1- 1904     	SUBAR	(_R_AIN2_DATA + 1),W
     00AD 0903                      1- 1905     	BTRSS	STATUS,2
                                    1- 1906     	MGOTO	_00707_DS_
     00AE 3rrr                      3-   63 m1      LGOTO rom_address
     00AF 218C                      1- 1907     	MOVIA	0x8c
     00B0 04rr                      1- 1908     	SUBAR	_R_AIN2_DATA,W
     00B1                           1- 1909     _00707_DS_:
     00B1 0C03                      1- 1910     	BTRSC	STATUS,0
                                    1- 1911     	MGOTO	_00514_DS_
     00B2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1912     	.line	682, "main.c"; 	pwStep = 6;
     00B3 2106                      1- 1913     	MOVIA	0x06
                                    1- 1914     	BANKSEL	_pwStep
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 00rr                      1- 1915     	MOVAR	_pwStep
     00B6                           1- 1916     _00514_DS_:
                                    1- 1917     	.line	686, "main.c"; 	if(chrgTime > 0 && R_AIN2_DATA > 395 && chrgTime > 600)
                                    1- 1918     	BANKSEL	_chrgTime
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 01rr                      1- 1919     	MOVR	_chrgTime,W
     00B8 11rr                      1- 1920     	IORAR	(_chrgTime + 1),W
     00B9 0D03                      1- 1921     	BTRSC	STATUS,2
                                    1- 1922     	MGOTO	_00580_DS_
     00BA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1923     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1924     ;;unsigned compare: left >= lit (0x18C=396), size=2
     00BB 2101                      1- 1925     	MOVIA	0x01
                                    1- 1926     	BANKSEL	_R_AIN2_DATA
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 04rr                      1- 1927     	SUBAR	(_R_AIN2_DATA + 1),W
     00BE 0903                      1- 1928     	BTRSS	STATUS,2
                                    1- 1929     	MGOTO	_00708_DS_
     00BF 3rrr                      3-   63 m1      LGOTO rom_address
     00C0 218C                      1- 1930     	MOVIA	0x8c
     00C1 04rr                      1- 1931     	SUBAR	_R_AIN2_DATA,W
     00C2                           1- 1932     _00708_DS_:
     00C2 0803                      1- 1933     	BTRSS	STATUS,0
                                    1- 1934     	MGOTO	_00580_DS_
     00C3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1935     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1936     ;;unsigned compare: left >= lit (0x259=601), size=2
     00C4 2102                      1- 1937     	MOVIA	0x02
                                    1- 1938     	BANKSEL	_chrgTime
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 04rr                      1- 1939     	SUBAR	(_chrgTime + 1),W
     00C7 0903                      1- 1940     	BTRSS	STATUS,2
                                    1- 1941     	MGOTO	_00709_DS_
     00C8 3rrr                      3-   63 m1      LGOTO rom_address
     00C9 2159                      1- 1942     	MOVIA	0x59
     00CA 04rr                      1- 1943     	SUBAR	_chrgTime,W
     00CB                           1- 1944     _00709_DS_:
     00CB 0803                      1- 1945     	BTRSS	STATUS,0
                                    1- 1946     	MGOTO	_00580_DS_
     00CC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1947     	.line	688, "main.c"; 	chrgTime = 600;
     00CD 2158                      1- 1948     	MOVIA	0x58
                                    1- 1949     	BANKSEL	_chrgTime
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 00rr                      1- 1950     	MOVAR	_chrgTime
     00D0 2102                      1- 1951     	MOVIA	0x02
     00D1 00rr                      1- 1952     	MOVAR	(_chrgTime + 1)
                                    1- 1953     	.line	689, "main.c"; 	pwStep = 7;
     00D2 2107                      1- 1954     	MOVIA	0x07
                                    1- 1955     	BANKSEL	_pwStep
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 00rr                      1- 1956     	MOVAR	_pwStep
                                    1- 1957     	MGOTO	_00580_DS_
     00D5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1958     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1959     ;;unsigned compare: left >= lit (0x146=326), size=2
     00D6                           1- 1960     _00575_DS_:
                                    1- 1961     	.line	692, "main.c"; 	else if(R_AIN2_DATA > 325)
     00D6 2101                      1- 1962     	MOVIA	0x01
                                    1- 1963     	BANKSEL	_R_AIN2_DATA
     00D7 rrrr                      3-  110 m1      .banksel ram_address
     00D8 04rr                      1- 1964     	SUBAR	(_R_AIN2_DATA + 1),W
     00D9 0903                      1- 1965     	BTRSS	STATUS,2
                                    1- 1966     	MGOTO	_00710_DS_
     00DA 3rrr                      3-   63 m1      LGOTO rom_address
     00DB 2146                      1- 1967     	MOVIA	0x46
     00DC 04rr                      1- 1968     	SUBAR	_R_AIN2_DATA,W
     00DD                           1- 1969     _00710_DS_:
     00DD 0803                      1- 1970     	BTRSS	STATUS,0
                                    1- 1971     	MGOTO	_00572_DS_
     00DE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1972     	.line	695, "main.c"; 	if(pwStep == 4)
                                    1- 1973     	BANKSEL	_pwStep
     00DF rrrr                      3-  110 m1      .banksel ram_address
     00E0 01rr                      1- 1974     	MOVR	_pwStep,W
     00E1 2404                      1- 1975     	XORIA	0x04
     00E2 0903                      1- 1976     	BTRSS	STATUS,2
                                    1- 1977     	MGOTO	_00522_DS_
     00E3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1978     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1979     ;;unsigned compare: left >= lit (0x14B=331), size=2
                                    1- 1980     	.line	697, "main.c"; 	if(R_AIN2_DATA > 330)
     00E4 2101                      1- 1981     	MOVIA	0x01
                                    1- 1982     	BANKSEL	_R_AIN2_DATA
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 04rr                      1- 1983     	SUBAR	(_R_AIN2_DATA + 1),W
     00E7 0903                      1- 1984     	BTRSS	STATUS,2
                                    1- 1985     	MGOTO	_00711_DS_
     00E8 3rrr                      3-   63 m1      LGOTO rom_address
     00E9 214B                      1- 1986     	MOVIA	0x4b
     00EA 04rr                      1- 1987     	SUBAR	_R_AIN2_DATA,W
     00EB                           1- 1988     _00711_DS_:
     00EB 0803                      1- 1989     	BTRSS	STATUS,0
                                    1- 1990     	MGOTO	_00522_DS_
     00EC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1991     	.line	698, "main.c"; 	pwStep = 5;
     00ED 2105                      1- 1992     	MOVIA	0x05
                                    1- 1993     	BANKSEL	_pwStep
     00EE rrrr                      3-  110 m1      .banksel ram_address
     00EF 00rr                      1- 1994     	MOVAR	_pwStep
                                    1- 1995     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1996     ;;unsigned compare: left >= lit (0x6=6), size=1
     00F0                           1- 1997     _00522_DS_:
                                    1- 1998     	.line	700, "main.c"; 	if(pwStep > 5)
     00F0 2106                      1- 1999     	MOVIA	0x06
                                    1- 2000     	BANKSEL	_pwStep
     00F1 rrrr                      3-  110 m1      .banksel ram_address
     00F2 04rr                      1- 2001     	SUBAR	_pwStep,W
     00F3 0803                      1- 2002     	BTRSS	STATUS,0
                                    1- 2003     	MGOTO	_00526_DS_
     00F4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2004     ;;unsigned compare: left < lit (0x16D=365), size=2
                                    1- 2005     	.line	702, "main.c"; 	if(R_AIN2_DATA < 365)
     00F5 2101                      1- 2006     	MOVIA	0x01
                                    1- 2007     	BANKSEL	_R_AIN2_DATA
     00F6 rrrr                      3-  110 m1      .banksel ram_address
     00F7 04rr                      1- 2008     	SUBAR	(_R_AIN2_DATA + 1),W
     00F8 0903                      1- 2009     	BTRSS	STATUS,2
                                    1- 2010     	MGOTO	_00713_DS_
     00F9 3rrr                      3-   63 m1      LGOTO rom_address
     00FA 216D                      1- 2011     	MOVIA	0x6d
     00FB 04rr                      1- 2012     	SUBAR	_R_AIN2_DATA,W
     00FC                           1- 2013     _00713_DS_:
     00FC 0C03                      1- 2014     	BTRSC	STATUS,0
                                    1- 2015     	MGOTO	_00527_DS_
     00FD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2016     	.line	703, "main.c"; 	pwStep = 5;
     00FE 2105                      1- 2017     	MOVIA	0x05
                                    1- 2018     	BANKSEL	_pwStep
     00FF rrrr                      3-  110 m1      .banksel ram_address
     0100 00rr                      1- 2019     	MOVAR	_pwStep
                                    1- 2020     	MGOTO	_00527_DS_
     0101 3rrr                      3-   63 m1      LGOTO rom_address
     0102                           1- 2021     _00526_DS_:
                                    1- 2022     	.line	706, "main.c"; 	pwStep = 5;
     0102 2105                      1- 2023     	MOVIA	0x05
                                    1- 2024     	BANKSEL	_pwStep
     0103 rrrr                      3-  110 m1      .banksel ram_address
     0104 00rr                      1- 2025     	MOVAR	_pwStep
     0105                           1- 2026     _00527_DS_:
                                    1- 2027     	.line	707, "main.c"; 	chrgTime = 0;
                                    1- 2028     	BANKSEL	_chrgTime
     0105 rrrr                      3-  110 m1      .banksel ram_address
     0106 02rr                      1- 2029     	CLRR	_chrgTime
     0107 02rr                      1- 2030     	CLRR	(_chrgTime + 1)
                                    1- 2031     	MGOTO	_00580_DS_
     0108 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2032     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2033     ;;unsigned compare: left >= lit (0x105=261), size=2
     0109                           1- 2034     _00572_DS_:
                                    1- 2035     	.line	709, "main.c"; 	else if(R_AIN2_DATA > 260)
     0109 2101                      1- 2036     	MOVIA	0x01
                                    1- 2037     	BANKSEL	_R_AIN2_DATA
     010A rrrr                      3-  110 m1      .banksel ram_address
     010B 04rr                      1- 2038     	SUBAR	(_R_AIN2_DATA + 1),W
     010C 0903                      1- 2039     	BTRSS	STATUS,2
                                    1- 2040     	MGOTO	_00714_DS_
     010D 3rrr                      3-   63 m1      LGOTO rom_address
     010E 2105                      1- 2041     	MOVIA	0x05
     010F 04rr                      1- 2042     	SUBAR	_R_AIN2_DATA,W
     0110                           1- 2043     _00714_DS_:
     0110 0803                      1- 2044     	BTRSS	STATUS,0
                                    1- 2045     	MGOTO	_00569_DS_
     0111 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2046     	.line	711, "main.c"; 	if(pwStep == 3)
                                    1- 2047     	BANKSEL	_pwStep
     0112 rrrr                      3-  110 m1      .banksel ram_address
     0113 01rr                      1- 2048     	MOVR	_pwStep,W
     0114 2403                      1- 2049     	XORIA	0x03
     0115 0903                      1- 2050     	BTRSS	STATUS,2
                                    1- 2051     	MGOTO	_00531_DS_
     0116 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2052     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2053     ;;unsigned compare: left >= lit (0x10A=266), size=2
                                    1- 2054     	.line	713, "main.c"; 	if(R_AIN2_DATA > 265)
     0117 2101                      1- 2055     	MOVIA	0x01
                                    1- 2056     	BANKSEL	_R_AIN2_DATA
     0118 rrrr                      3-  110 m1      .banksel ram_address
     0119 04rr                      1- 2057     	SUBAR	(_R_AIN2_DATA + 1),W
     011A 0903                      1- 2058     	BTRSS	STATUS,2
                                    1- 2059     	MGOTO	_00715_DS_
     011B 3rrr                      3-   63 m1      LGOTO rom_address
     011C 210A                      1- 2060     	MOVIA	0x0a
     011D 04rr                      1- 2061     	SUBAR	_R_AIN2_DATA,W
     011E                           1- 2062     _00715_DS_:
     011E 0803                      1- 2063     	BTRSS	STATUS,0
                                    1- 2064     	MGOTO	_00531_DS_
     011F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2065     	.line	714, "main.c"; 	pwStep = 4;
     0120 2104                      1- 2066     	MOVIA	0x04
                                    1- 2067     	BANKSEL	_pwStep
     0121 rrrr                      3-  110 m1      .banksel ram_address
     0122 00rr                      1- 2068     	MOVAR	_pwStep
                                    1- 2069     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2070     ;;unsigned compare: left >= lit (0x5=5), size=1
     0123                           1- 2071     _00531_DS_:
                                    1- 2072     	.line	716, "main.c"; 	if(pwStep > 4)
     0123 2105                      1- 2073     	MOVIA	0x05
                                    1- 2074     	BANKSEL	_pwStep
     0124 rrrr                      3-  110 m1      .banksel ram_address
     0125 04rr                      1- 2075     	SUBAR	_pwStep,W
     0126 0803                      1- 2076     	BTRSS	STATUS,0
                                    1- 2077     	MGOTO	_00535_DS_
     0127 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2078     ;;unsigned compare: left < lit (0x140=320), size=2
                                    1- 2079     	.line	718, "main.c"; 	if(R_AIN2_DATA < 320)
     0128 2101                      1- 2080     	MOVIA	0x01
                                    1- 2081     	BANKSEL	_R_AIN2_DATA
     0129 rrrr                      3-  110 m1      .banksel ram_address
     012A 04rr                      1- 2082     	SUBAR	(_R_AIN2_DATA + 1),W
     012B 0903                      1- 2083     	BTRSS	STATUS,2
                                    1- 2084     	MGOTO	_00717_DS_
     012C 3rrr                      3-   63 m1      LGOTO rom_address
     012D 2140                      1- 2085     	MOVIA	0x40
     012E 04rr                      1- 2086     	SUBAR	_R_AIN2_DATA,W
     012F                           1- 2087     _00717_DS_:
     012F 0C03                      1- 2088     	BTRSC	STATUS,0
                                    1- 2089     	MGOTO	_00536_DS_
     0130 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2090     	.line	719, "main.c"; 	pwStep = 4;
     0131 2104                      1- 2091     	MOVIA	0x04
                                    1- 2092     	BANKSEL	_pwStep
     0132 rrrr                      3-  110 m1      .banksel ram_address
     0133 00rr                      1- 2093     	MOVAR	_pwStep
                                    1- 2094     	MGOTO	_00536_DS_
     0134 3rrr                      3-   63 m1      LGOTO rom_address
     0135                           1- 2095     _00535_DS_:
                                    1- 2096     	.line	722, "main.c"; 	pwStep = 4;
     0135 2104                      1- 2097     	MOVIA	0x04
                                    1- 2098     	BANKSEL	_pwStep
     0136 rrrr                      3-  110 m1      .banksel ram_address
     0137 00rr                      1- 2099     	MOVAR	_pwStep
     0138                           1- 2100     _00536_DS_:
                                    1- 2101     	.line	723, "main.c"; 	chrgTime = 0;
                                    1- 2102     	BANKSEL	_chrgTime
     0138 rrrr                      3-  110 m1      .banksel ram_address
     0139 02rr                      1- 2103     	CLRR	_chrgTime
     013A 02rr                      1- 2104     	CLRR	(_chrgTime + 1)
                                    1- 2105     	MGOTO	_00580_DS_
     013B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2106     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2107     ;;unsigned compare: left >= lit (0xC9=201), size=2
     013C                           1- 2108     _00569_DS_:
                                    1- 2109     	.line	725, "main.c"; 	else if(R_AIN2_DATA > 200)
     013C 2100                      1- 2110     	MOVIA	0x00
                                    1- 2111     	BANKSEL	_R_AIN2_DATA
     013D rrrr                      3-  110 m1      .banksel ram_address
     013E 04rr                      1- 2112     	SUBAR	(_R_AIN2_DATA + 1),W
     013F 0903                      1- 2113     	BTRSS	STATUS,2
                                    1- 2114     	MGOTO	_00718_DS_
     0140 3rrr                      3-   63 m1      LGOTO rom_address
     0141 21C9                      1- 2115     	MOVIA	0xc9
     0142 04rr                      1- 2116     	SUBAR	_R_AIN2_DATA,W
     0143                           1- 2117     _00718_DS_:
     0143 0803                      1- 2118     	BTRSS	STATUS,0
                                    1- 2119     	MGOTO	_00566_DS_
     0144 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2120     	.line	727, "main.c"; 	if(pwStep == 2)
                                    1- 2121     	BANKSEL	_pwStep
     0145 rrrr                      3-  110 m1      .banksel ram_address
     0146 01rr                      1- 2122     	MOVR	_pwStep,W
     0147 2402                      1- 2123     	XORIA	0x02
     0148 0903                      1- 2124     	BTRSS	STATUS,2
                                    1- 2125     	MGOTO	_00540_DS_
     0149 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2126     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2127     ;;unsigned compare: left >= lit (0xD3=211), size=2
                                    1- 2128     	.line	729, "main.c"; 	if(R_AIN2_DATA > 210)
     014A 2100                      1- 2129     	MOVIA	0x00
                                    1- 2130     	BANKSEL	_R_AIN2_DATA
     014B rrrr                      3-  110 m1      .banksel ram_address
     014C 04rr                      1- 2131     	SUBAR	(_R_AIN2_DATA + 1),W
     014D 0903                      1- 2132     	BTRSS	STATUS,2
                                    1- 2133     	MGOTO	_00719_DS_
     014E 3rrr                      3-   63 m1      LGOTO rom_address
     014F 21D3                      1- 2134     	MOVIA	0xd3
     0150 04rr                      1- 2135     	SUBAR	_R_AIN2_DATA,W
     0151                           1- 2136     _00719_DS_:
     0151 0803                      1- 2137     	BTRSS	STATUS,0
                                    1- 2138     	MGOTO	_00540_DS_
     0152 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2139     	.line	730, "main.c"; 	pwStep = 3;
     0153 2103                      1- 2140     	MOVIA	0x03
                                    1- 2141     	BANKSEL	_pwStep
     0154 rrrr                      3-  110 m1      .banksel ram_address
     0155 00rr                      1- 2142     	MOVAR	_pwStep
                                    1- 2143     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2144     ;;unsigned compare: left >= lit (0x4=4), size=1
     0156                           1- 2145     _00540_DS_:
                                    1- 2146     	.line	732, "main.c"; 	if(pwStep > 3)
     0156 2104                      1- 2147     	MOVIA	0x04
                                    1- 2148     	BANKSEL	_pwStep
     0157 rrrr                      3-  110 m1      .banksel ram_address
     0158 04rr                      1- 2149     	SUBAR	_pwStep,W
     0159 0803                      1- 2150     	BTRSS	STATUS,0
                                    1- 2151     	MGOTO	_00544_DS_
     015A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2152     ;;unsigned compare: left < lit (0x104=260), size=2
                                    1- 2153     	.line	734, "main.c"; 	if(R_AIN2_DATA < 260)
     015B 2101                      1- 2154     	MOVIA	0x01
                                    1- 2155     	BANKSEL	_R_AIN2_DATA
     015C rrrr                      3-  110 m1      .banksel ram_address
     015D 04rr                      1- 2156     	SUBAR	(_R_AIN2_DATA + 1),W
     015E 0903                      1- 2157     	BTRSS	STATUS,2
                                    1- 2158     	MGOTO	_00721_DS_
     015F 3rrr                      3-   63 m1      LGOTO rom_address
     0160 2104                      1- 2159     	MOVIA	0x04
     0161 04rr                      1- 2160     	SUBAR	_R_AIN2_DATA,W
     0162                           1- 2161     _00721_DS_:
     0162 0C03                      1- 2162     	BTRSC	STATUS,0
                                    1- 2163     	MGOTO	_00545_DS_
     0163 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2164     	.line	735, "main.c"; 	pwStep = 3;
     0164 2103                      1- 2165     	MOVIA	0x03
                                    1- 2166     	BANKSEL	_pwStep
     0165 rrrr                      3-  110 m1      .banksel ram_address
     0166 00rr                      1- 2167     	MOVAR	_pwStep
                                    1- 2168     	MGOTO	_00545_DS_
     0167 3rrr                      3-   63 m1      LGOTO rom_address
     0168                           1- 2169     _00544_DS_:
                                    1- 2170     	.line	738, "main.c"; 	pwStep = 3;
     0168 2103                      1- 2171     	MOVIA	0x03
                                    1- 2172     	BANKSEL	_pwStep
     0169 rrrr                      3-  110 m1      .banksel ram_address
     016A 00rr                      1- 2173     	MOVAR	_pwStep
     016B                           1- 2174     _00545_DS_:
                                    1- 2175     	.line	739, "main.c"; 	chrgTime = 0;
                                    1- 2176     	BANKSEL	_chrgTime
     016B rrrr                      3-  110 m1      .banksel ram_address
     016C 02rr                      1- 2177     	CLRR	_chrgTime
     016D 02rr                      1- 2178     	CLRR	(_chrgTime + 1)
                                    1- 2179     	MGOTO	_00580_DS_
     016E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2180     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2181     ;;unsigned compare: left >= lit (0x65=101), size=2
     016F                           1- 2182     _00566_DS_:
                                    1- 2183     	.line	741, "main.c"; 	else if(R_AIN2_DATA > 100)
     016F 2100                      1- 2184     	MOVIA	0x00
                                    1- 2185     	BANKSEL	_R_AIN2_DATA
     0170 rrrr                      3-  110 m1      .banksel ram_address
     0171 04rr                      1- 2186     	SUBAR	(_R_AIN2_DATA + 1),W
     0172 0903                      1- 2187     	BTRSS	STATUS,2
                                    1- 2188     	MGOTO	_00722_DS_
     0173 3rrr                      3-   63 m1      LGOTO rom_address
     0174 2165                      1- 2189     	MOVIA	0x65
     0175 04rr                      1- 2190     	SUBAR	_R_AIN2_DATA,W
     0176                           1- 2191     _00722_DS_:
     0176 0803                      1- 2192     	BTRSS	STATUS,0
                                    1- 2193     	MGOTO	_00563_DS_
     0177 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2194     	.line	744, "main.c"; 	if(pwStep == 1)
                                    1- 2195     	BANKSEL	_pwStep
     0178 rrrr                      3-  110 m1      .banksel ram_address
     0179 01rr                      1- 2196     	MOVR	_pwStep,W
     017A 2401                      1- 2197     	XORIA	0x01
     017B 0903                      1- 2198     	BTRSS	STATUS,2
                                    1- 2199     	MGOTO	_00549_DS_
     017C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2200     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2201     ;;unsigned compare: left >= lit (0x6F=111), size=2
                                    1- 2202     	.line	746, "main.c"; 	if(R_AIN2_DATA > 110)
     017D 2100                      1- 2203     	MOVIA	0x00
                                    1- 2204     	BANKSEL	_R_AIN2_DATA
     017E rrrr                      3-  110 m1      .banksel ram_address
     017F 04rr                      1- 2205     	SUBAR	(_R_AIN2_DATA + 1),W
     0180 0903                      1- 2206     	BTRSS	STATUS,2
                                    1- 2207     	MGOTO	_00723_DS_
     0181 3rrr                      3-   63 m1      LGOTO rom_address
     0182 216F                      1- 2208     	MOVIA	0x6f
     0183 04rr                      1- 2209     	SUBAR	_R_AIN2_DATA,W
     0184                           1- 2210     _00723_DS_:
     0184 0803                      1- 2211     	BTRSS	STATUS,0
                                    1- 2212     	MGOTO	_00549_DS_
     0185 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2213     	.line	747, "main.c"; 	pwStep = 2;
     0186 2102                      1- 2214     	MOVIA	0x02
                                    1- 2215     	BANKSEL	_pwStep
     0187 rrrr                      3-  110 m1      .banksel ram_address
     0188 00rr                      1- 2216     	MOVAR	_pwStep
                                    1- 2217     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2218     ;;unsigned compare: left >= lit (0x3=3), size=1
     0189                           1- 2219     _00549_DS_:
                                    1- 2220     	.line	749, "main.c"; 	if(pwStep > 2)
     0189 2103                      1- 2221     	MOVIA	0x03
                                    1- 2222     	BANKSEL	_pwStep
     018A rrrr                      3-  110 m1      .banksel ram_address
     018B 04rr                      1- 2223     	SUBAR	_pwStep,W
     018C 0803                      1- 2224     	BTRSS	STATUS,0
                                    1- 2225     	MGOTO	_00553_DS_
     018D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2226     ;;unsigned compare: left < lit (0xBE=190), size=2
                                    1- 2227     	.line	751, "main.c"; 	if(R_AIN2_DATA < 190)
     018E 2100                      1- 2228     	MOVIA	0x00
                                    1- 2229     	BANKSEL	_R_AIN2_DATA
     018F rrrr                      3-  110 m1      .banksel ram_address
     0190 04rr                      1- 2230     	SUBAR	(_R_AIN2_DATA + 1),W
     0191 0903                      1- 2231     	BTRSS	STATUS,2
                                    1- 2232     	MGOTO	_00725_DS_
     0192 3rrr                      3-   63 m1      LGOTO rom_address
     0193 21BE                      1- 2233     	MOVIA	0xbe
     0194 04rr                      1- 2234     	SUBAR	_R_AIN2_DATA,W
     0195                           1- 2235     _00725_DS_:
     0195 0C03                      1- 2236     	BTRSC	STATUS,0
                                    1- 2237     	MGOTO	_00554_DS_
     0196 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2238     	.line	752, "main.c"; 	pwStep = 2;
     0197 2102                      1- 2239     	MOVIA	0x02
                                    1- 2240     	BANKSEL	_pwStep
     0198 rrrr                      3-  110 m1      .banksel ram_address
     0199 00rr                      1- 2241     	MOVAR	_pwStep
                                    1- 2242     	MGOTO	_00554_DS_
     019A 3rrr                      3-   63 m1      LGOTO rom_address
     019B                           1- 2243     _00553_DS_:
                                    1- 2244     	.line	755, "main.c"; 	pwStep = 2;
     019B 2102                      1- 2245     	MOVIA	0x02
                                    1- 2246     	BANKSEL	_pwStep
     019C rrrr                      3-  110 m1      .banksel ram_address
     019D 00rr                      1- 2247     	MOVAR	_pwStep
     019E                           1- 2248     _00554_DS_:
                                    1- 2249     	.line	756, "main.c"; 	chrgTime = 0;
                                    1- 2250     	BANKSEL	_chrgTime
     019E rrrr                      3-  110 m1      .banksel ram_address
     019F 02rr                      1- 2251     	CLRR	_chrgTime
     01A0 02rr                      1- 2252     	CLRR	(_chrgTime + 1)
                                    1- 2253     	MGOTO	_00580_DS_
     01A1 3rrr                      3-   63 m1      LGOTO rom_address
     01A2                           1- 2254     _00563_DS_:
                                    1- 2255     	.line	758, "main.c"; 	else  if(R_AIN2_DATA > 0)
                                    1- 2256     	BANKSEL	_R_AIN2_DATA
     01A2 rrrr                      3-  110 m1      .banksel ram_address
     01A3 01rr                      1- 2257     	MOVR	_R_AIN2_DATA,W
     01A4 11rr                      1- 2258     	IORAR	(_R_AIN2_DATA + 1),W
     01A5 0D03                      1- 2259     	BTRSC	STATUS,2
                                    1- 2260     	MGOTO	_00580_DS_
     01A6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2261     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2262     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 2263     	.line	761, "main.c"; 	if(pwStep > 1)
     01A7 2102                      1- 2264     	MOVIA	0x02
                                    1- 2265     	BANKSEL	_pwStep
     01A8 rrrr                      3-  110 m1      .banksel ram_address
     01A9 04rr                      1- 2266     	SUBAR	_pwStep,W
     01AA 0803                      1- 2267     	BTRSS	STATUS,0
                                    1- 2268     	MGOTO	_00558_DS_
     01AB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2269     ;;unsigned compare: left < lit (0x5A=90), size=2
                                    1- 2270     	.line	763, "main.c"; 	if(R_AIN2_DATA < 90)
     01AC 2100                      1- 2271     	MOVIA	0x00
                                    1- 2272     	BANKSEL	_R_AIN2_DATA
     01AD rrrr                      3-  110 m1      .banksel ram_address
     01AE 04rr                      1- 2273     	SUBAR	(_R_AIN2_DATA + 1),W
     01AF 0903                      1- 2274     	BTRSS	STATUS,2
                                    1- 2275     	MGOTO	_00727_DS_
     01B0 3rrr                      3-   63 m1      LGOTO rom_address
     01B1 215A                      1- 2276     	MOVIA	0x5a
     01B2 04rr                      1- 2277     	SUBAR	_R_AIN2_DATA,W
     01B3                           1- 2278     _00727_DS_:
     01B3 0C03                      1- 2279     	BTRSC	STATUS,0
                                    1- 2280     	MGOTO	_00559_DS_
     01B4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2281     	.line	764, "main.c"; 	pwStep = 1;
     01B5 2101                      1- 2282     	MOVIA	0x01
                                    1- 2283     	BANKSEL	_pwStep
     01B6 rrrr                      3-  110 m1      .banksel ram_address
     01B7 00rr                      1- 2284     	MOVAR	_pwStep
                                    1- 2285     	MGOTO	_00559_DS_
     01B8 3rrr                      3-   63 m1      LGOTO rom_address
     01B9                           1- 2286     _00558_DS_:
                                    1- 2287     	.line	767, "main.c"; 	pwStep = 1;
     01B9 2101                      1- 2288     	MOVIA	0x01
                                    1- 2289     	BANKSEL	_pwStep
     01BA rrrr                      3-  110 m1      .banksel ram_address
     01BB 00rr                      1- 2290     	MOVAR	_pwStep
     01BC                           1- 2291     _00559_DS_:
                                    1- 2292     	.line	768, "main.c"; 	chrgTime = 0;
                                    1- 2293     	BANKSEL	_chrgTime
     01BC rrrr                      3-  110 m1      .banksel ram_address
     01BD 02rr                      1- 2294     	CLRR	_chrgTime
     01BE 02rr                      1- 2295     	CLRR	(_chrgTime + 1)
     01BF                           1- 2296     _00580_DS_:
                                    1- 2297     	.line	772, "main.c"; 	}
                                    1- 2298     	RETURN	
     01BF 0010                      3-   40 m1      ret
                                    1- 2299     ; exit point of _checkBatAD
                                    1- 2301     ;***
                                    1- 2302     ;  pBlock Stats: dbName = C
                                    1- 2303     ;***
                                    1- 2304     ;has an exit
                                    1- 2305     ;functions called:
                                    1- 2306     ;   _delay
                                    1- 2307     ;   _delay
                                    1- 2308     ;; Starting pCode block
                                    1- 2309     .segment "code"; module=main, function=_initAD
     0000                           1- 2311     _initAD:
                                    1- 2312     ; 2 exit points
                                    1- 2313     	.line	607, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 2314     	MOVIA	0x84
     0001 00rr                      1- 2315     	MOVAR	_ADMD
                                    1- 2316     	.line	612, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 2317     	CLRR	_ADVREFH
                                    1- 2318     	.line	617, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 2319     	MOVIA	0x10
     0004 00rr                      1- 2320     	MOVAR	_ADR
                                    1- 2321     	.line	619, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 2322     	MOVIA	0x03
     0006 00rr                      1- 2323     	MOVAR	_ADCR
                                    1- 2324     	.line	622, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 2325     	BSR	_ADMDbits,4
                                    1- 2326     	.line	623, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 2327     	MOVIA	0x64
                                    1- 2328     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2329     	.line	626, "main.c"; 	}
                                    1- 2330     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 2331     ; exit point of _initAD
                                    1- 2333     ;***
                                    1- 2334     ;  pBlock Stats: dbName = C
                                    1- 2335     ;***
                                    1- 2336     ;has an exit
                                    1- 2337     ;2 compiler assigned registers:
                                    1- 2338     ;   r0x1029
                                    1- 2339     ;   r0x102A
                                    1- 2340     ;; Starting pCode block
                                    1- 2341     .segment "code"; module=main, function=_delay
                                    1- 2343     ;local variable name mapping:
     0000                           1- 2346     _delay:
                                    1- 2347     ; 2 exit points
                                    1- 2348     	.line	597, "main.c"; 	void delay(u8t time)
                                    1- 2349     	BANKSEL	r0x1029
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2350     	MOVAR	r0x1029
                                    1- 2351     	.line	599, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2352     	BANKSEL	r0x102A
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2353     	CLRR	r0x102A
     0004                           1- 2354     _00481_DS_:
                                    1- 2355     	BANKSEL	r0x1029
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 2356     	MOVR	r0x1029,W
                                    1- 2357     	BANKSEL	r0x102A
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1- 2358     	SUBAR	r0x102A,W
     0008 0C03                      1- 2359     	BTRSC	STATUS,0
                                    1- 2360     	MGOTO	_00483_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2361     	.line	600, "main.c"; 	NOP();
     000A 0000                      1- 2362     	nop
                                    1- 2363     	.line	599, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2364     	BANKSEL	r0x102A
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 2365     	INCR	r0x102A,F
                                    1- 2366     	MGOTO	_00481_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 2367     _00483_DS_:
                                    1- 2368     	.line	601, "main.c"; 	}
                                    1- 2369     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2370     ; exit point of _delay
                                    1- 2372     ;***
                                    1- 2373     ;  pBlock Stats: dbName = C
                                    1- 2374     ;***
                                    1- 2375     ;has an exit
                                    1- 2376     ;functions called:
                                    1- 2377     ;   _pwmStop
                                    1- 2378     ;   _pwm1Stop
                                    1- 2379     ;   _pwm1Init
                                    1- 2380     ;   _pwm1Stop
                                    1- 2381     ;   _pwmStop
                                    1- 2382     ;   _pwm1Stop
                                    1- 2383     ;   _pwm1Init
                                    1- 2384     ;   _pwm1Stop
                                    1- 2385     ;1 compiler assigned register :
                                    1- 2386     ;   r0x104A
                                    1- 2387     ;; Starting pCode block
                                    1- 2388     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2390     _chrgCtr:
                                    1- 2391     ; 2 exit points
                                    1- 2392     	.line	543, "main.c"; 	if(PORTA & 0x08 || R_AIN3_DATA > 200)
                                    1- 2393     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Drr                      1- 2394     	BTRSC	_PORTA,3
                                    1- 2395     	MGOTO	_00444_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2396     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2397     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0003 2100                      1- 2398     	MOVIA	0x00
                                    1- 2399     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 04rr                      1- 2400     	SUBAR	(_R_AIN3_DATA + 1),W
     0006 0903                      1- 2401     	BTRSS	STATUS,2
                                    1- 2402     	MGOTO	_00474_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
     0008 21C9                      1- 2403     	MOVIA	0xc9
     0009 04rr                      1- 2404     	SUBAR	_R_AIN3_DATA,W
     000A                           1- 2405     _00474_DS_:
     000A 0803                      1- 2406     	BTRSS	STATUS,0
                                    1- 2407     	MGOTO	_00445_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
     000C                           1- 2408     _00444_DS_:
                                    1- 2409     	.line	546, "main.c"; 	chrgFlag = 1;
                                    1- 2410     	BANKSEL	_Status
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 19rr                      1- 2411     	BSR	_Status,3
                                    1- 2412     	.line	547, "main.c"; 	workStep = 0;
                                    1- 2413     	BANKSEL	_workStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1- 2414     	CLRR	_workStep
                                    1- 2415     	.line	548, "main.c"; 	ledLightTime = 0;
                                    1- 2416     	BANKSEL	_ledLightTime
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 02rr                      1- 2417     	CLRR	_ledLightTime
                                    1- 2418     	.line	549, "main.c"; 	pwmStop();
                                    1- 2419     	MCALL	_pwmStop
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2420     	.line	551, "main.c"; 	if(pwStep == 7)
                                    1- 2421     	BANKSEL	_pwStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2422     	MOVR	_pwStep,W
     0015 2407                      1- 2423     	XORIA	0x07
     0016 0903                      1- 2424     	BTRSS	STATUS,2
                                    1- 2425     	MGOTO	_00440_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2426     	.line	554, "main.c"; 	ledStep = 6;
     0018 2106                      1- 2427     	MOVIA	0x06
                                    1- 2428     	BANKSEL	_ledStep
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 00rr                      1- 2429     	MOVAR	_ledStep
                                    1- 2430     	.line	555, "main.c"; 	if(++fullCount > 100)
                                    1- 2431     	BANKSEL	_fullCount
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 05rr                      1- 2432     	INCR	_fullCount,F
                                    1- 2433     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2434     ;;unsigned compare: left >= lit (0x65=101), size=1
     001D 2165                      1- 2435     	MOVIA	0x65
     001E 04rr                      1- 2436     	SUBAR	_fullCount,W
     001F 0C03                      1- 2437     	BTRSC	STATUS,0
                                    1- 2438     	.line	556, "main.c"; 	pwm1Stop();
                                    1- 2439     	MCALL	_pwm1Stop
     0020 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2440     	.line	558, "main.c"; 	PORTB &= 0xF7;
     0021 1Drr                      1- 2441     	BCR	_PORTB,3
                                    1- 2442     	.line	559, "main.c"; 	IOSTB |= 0X08;
     0022 001r                      1- 2443     	IOSTR	_IOSTB
                                    1- 2444     	BANKSEL	r0x104A
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 2445     	MOVAR	r0x104A
     0025 19rr                      1- 2446     	BSR	r0x104A,3
     0026 01rr                      1- 2447     	MOVR	r0x104A,W
     0027 000r                      1- 2448     	IOST	_IOSTB
                                    1- 2449     	MGOTO	_00448_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
     0029                           1- 2450     _00440_DS_:
                                    1- 2451     	.line	564, "main.c"; 	IOSTB &= 0xF7;
     0029 001r                      1- 2452     	IOSTR	_IOSTB
                                    1- 2453     	BANKSEL	r0x104A
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1- 2454     	MOVAR	r0x104A
     002C 1Drr                      1- 2455     	BCR	r0x104A,3
     002D 01rr                      1- 2456     	MOVR	r0x104A,W
     002E 000r                      1- 2457     	IOST	_IOSTB
                                    1- 2458     	.line	566, "main.c"; 	if(count500ms == 0)
                                    1- 2459     	BANKSEL	_count500ms
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 2460     	MOVR	_count500ms,W
     0031 0903                      1- 2461     	BTRSS	STATUS,2
                                    1- 2462     	MGOTO	_00432_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2463     	.line	568, "main.c"; 	if(++ledStep > 6)
                                    1- 2464     	BANKSEL	_ledStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 05rr                      1- 2465     	INCR	_ledStep,F
                                    1- 2466     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2467     ;;unsigned compare: left >= lit (0x7=7), size=1
     0035 2107                      1- 2468     	MOVIA	0x07
     0036 04rr                      1- 2469     	SUBAR	_ledStep,W
     0037 0803                      1- 2470     	BTRSS	STATUS,0
                                    1- 2471     	MGOTO	_00432_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2472     	.line	569, "main.c"; 	ledStep = pwStep - 1;
                                    1- 2473     	BANKSEL	_pwStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 06rr                      1- 2474     	DECR	_pwStep,W
                                    1- 2475     	BANKSEL	_ledStep
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 00rr                      1- 2476     	MOVAR	_ledStep
                                    1- 2477     ;;unsigned compare: left < lit (0x2=2), size=1
     003D                           1- 2478     _00432_DS_:
                                    1- 2479     	.line	572, "main.c"; 	if(pwStep < 2)
     003D 2102                      1- 2480     	MOVIA	0x02
                                    1- 2481     	BANKSEL	_pwStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 04rr                      1- 2482     	SUBAR	_pwStep,W
     0040 0C03                      1- 2483     	BTRSC	STATUS,0
                                    1- 2484     	MGOTO	_00437_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2485     	.line	574, "main.c"; 	PWM1DUTY = 3;
     0042 2103                      1- 2486     	MOVIA	0x03
     0043 00rr                      1- 2487     	SFUN	_PWM1DUTY
                                    1- 2488     	MGOTO	_00438_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2489     ;;unsigned compare: left < lit (0x5=5), size=1
     0045                           1- 2490     _00437_DS_:
                                    1- 2491     	.line	576, "main.c"; 	else if(pwStep < 5)
     0045 2105                      1- 2492     	MOVIA	0x05
                                    1- 2493     	BANKSEL	_pwStep
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 04rr                      1- 2494     	SUBAR	_pwStep,W
     0048 0C03                      1- 2495     	BTRSC	STATUS,0
                                    1- 2496     	MGOTO	_00434_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2497     	.line	577, "main.c"; 	PWM1DUTY = 6;
     004A 2106                      1- 2498     	MOVIA	0x06
     004B 00rr                      1- 2499     	SFUN	_PWM1DUTY
                                    1- 2500     	MGOTO	_00438_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
     004D                           1- 2501     _00434_DS_:
                                    1- 2502     	.line	579, "main.c"; 	PWM1DUTY = 7;
     004D 2107                      1- 2503     	MOVIA	0x07
     004E 00rr                      1- 2504     	SFUN	_PWM1DUTY
     004F                           1- 2505     _00438_DS_:
                                    1- 2506     	.line	580, "main.c"; 	pwm1Init();
                                    1- 2507     	MCALL	_pwm1Init
     004F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2508     	MGOTO	_00448_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
     0051                           1- 2509     _00445_DS_:
                                    1- 2510     	.line	586, "main.c"; 	chrgTime = 0;
                                    1- 2511     	BANKSEL	_chrgTime
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 02rr                      1- 2512     	CLRR	_chrgTime
     0053 02rr                      1- 2513     	CLRR	(_chrgTime + 1)
                                    1- 2514     	.line	587, "main.c"; 	pwm1Stop();
                                    1- 2515     	MCALL	_pwm1Stop
     0054 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2516     	.line	588, "main.c"; 	if(workStep == 0)
                                    1- 2517     	BANKSEL	_workStep
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 01rr                      1- 2518     	MOVR	_workStep,W
     0057 0903                      1- 2519     	BTRSS	STATUS,2
                                    1- 2520     	MGOTO	_00007_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2521     	.line	589, "main.c"; 	ledStep = 0;
                                    1- 2522     	BANKSEL	_ledStep
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 02rr                      1- 2523     	CLRR	_ledStep
     005B                           1- 2524     _00007_DS_:
                                    1- 2525     	.line	590, "main.c"; 	chrgFlag = 0;
                                    1- 2526     	BANKSEL	_Status
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 1Drr                      1- 2527     	BCR	_Status,3
                                    1- 2528     	.line	591, "main.c"; 	chrgTime = 0;	//���ó�����
                                    1- 2529     	BANKSEL	_chrgTime
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 02rr                      1- 2530     	CLRR	_chrgTime
     005F 02rr                      1- 2531     	CLRR	(_chrgTime + 1)
     0060                           1- 2532     _00448_DS_:
                                    1- 2533     	.line	594, "main.c"; 	}
                                    1- 2534     	RETURN	
     0060 0010                      3-   40 m1      ret
                                    1- 2535     ; exit point of _chrgCtr
                                    1- 2537     ;***
                                    1- 2538     ;  pBlock Stats: dbName = C
                                    1- 2539     ;***
                                    1- 2540     ;has an exit
                                    1- 2541     ;1 compiler assigned register :
                                    1- 2542     ;   r0x104B
                                    1- 2543     ;; Starting pCode block
                                    1- 2544     .segment "code"; module=main, function=_keyRead
                                    1- 2546     ;local variable name mapping:
     0000                           1- 2548     _keyRead:
                                    1- 2549     ; 2 exit points
                                    1- 2550     	.line	506, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2551     	BANKSEL	r0x104B
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2552     	MOVAR	r0x104B
                                    1- 2553     	.line	508, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2554     	MOVR	r0x104B,W
     0003 0D03                      1- 2555     	BTRSC	STATUS,2
                                    1- 2556     	MGOTO	_00420_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2557     	.line	510, "main.c"; 	keyCount++;
                                    1- 2558     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2559     	INCR	_keyCount,F
                                    1- 2560     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 2561     	.line	511, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 2562     	MOVIA	0x64
     0008 04rr                      1- 2563     	SUBAR	_keyCount,W
     0009 0803                      1- 2564     	BTRSS	STATUS,0
                                    1- 2565     	MGOTO	_00421_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2566     	.line	513, "main.c"; 	keyCount = 100;
     000B 2164                      1- 2567     	MOVIA	0x64
     000C 00rr                      1- 2568     	MOVAR	_keyCount
                                    1- 2569     	.line	514, "main.c"; 	if(!longPressFlag)
                                    1- 2570     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Crr                      1- 2571     	BTRSC	_Status,1
                                    1- 2572     	MGOTO	_00421_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2573     	.line	516, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 2574     	BSR	_Status,1
                                    1- 2575     	.line	517, "main.c"; 	return 2;
     0011 2102                      1- 2576     	MOVIA	0x02
                                    1- 2577     	MGOTO	_00422_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2578     ;;unsigned compare: left < lit (0x64=100), size=1
     0013                           1- 2579     _00420_DS_:
                                    1- 2580     	.line	523, "main.c"; 	if(keyCount >= 100)
     0013 2164                      1- 2581     	MOVIA	0x64
                                    1- 2582     	BANKSEL	_keyCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 2583     	SUBAR	_keyCount,W
     0016 0803                      1- 2584     	BTRSS	STATUS,0
                                    1- 2585     	MGOTO	_00417_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2586     	.line	525, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 2587     	CLRR	_keyCount
                                    1- 2588     	.line	526, "main.c"; 	longPressFlag = 0;
                                    1- 2589     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Crr                      1- 2590     	BCR	_Status,1
                                    1- 2591     	.line	527, "main.c"; 	return	0;
     001B 2100                      1- 2592     	MOVIA	0x00
                                    1- 2593     	MGOTO	_00422_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2594     ;;unsigned compare: left < lit (0x8=8), size=1
     001D                           1- 2595     _00417_DS_:
                                    1- 2596     	.line	529, "main.c"; 	else if(keyCount >= 8)
     001D 2108                      1- 2597     	MOVIA	0x08
                                    1- 2598     	BANKSEL	_keyCount
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 2599     	SUBAR	_keyCount,W
     0020 0803                      1- 2600     	BTRSS	STATUS,0
                                    1- 2601     	MGOTO	_00418_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2602     	.line	531, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 2603     	CLRR	_keyCount
                                    1- 2604     	.line	532, "main.c"; 	return	1;
     0023 2101                      1- 2605     	MOVIA	0x01
                                    1- 2606     	MGOTO	_00422_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 2607     _00418_DS_:
                                    1- 2608     	.line	534, "main.c"; 	keyCount = 0;
                                    1- 2609     	BANKSEL	_keyCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 2610     	CLRR	_keyCount
     0027                           1- 2611     _00421_DS_:
                                    1- 2612     	.line	536, "main.c"; 	return 0;
     0027 2100                      1- 2613     	MOVIA	0x00
     0028                           1- 2614     _00422_DS_:
                                    1- 2615     	.line	537, "main.c"; 	}
                                    1- 2616     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 2617     ; exit point of _keyRead
                                    1- 2619     ;***
                                    1- 2620     ;  pBlock Stats: dbName = C
                                    1- 2621     ;***
                                    1- 2622     ;has an exit
                                    1- 2623     ;functions called:
                                    1- 2624     ;   _LedInput
                                    1- 2625     ;   _pwmStop
                                    1- 2626     ;   _pwm1Stop
                                    1- 2627     ;   _LedInput
                                    1- 2628     ;   _pwmStop
                                    1- 2629     ;   _pwm1Stop
                                    1- 2630     ;1 compiler assigned register :
                                    1- 2631     ;   r0x104D
                                    1- 2632     ;; Starting pCode block
                                    1- 2633     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2635     _gotoSleep:
                                    1- 2636     ; 2 exit points
                                    1- 2637     	.line	476, "main.c"; 	PORTB = 0x00;
     0000 02rr                      1- 2638     	CLRR	_PORTB
                                    1- 2639     	.line	477, "main.c"; 	PORTA = 0x00;
                                    1- 2640     	BANKSEL	_PORTA
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 02rr                      1- 2641     	CLRR	_PORTA
                                    1- 2642     	.line	478, "main.c"; 	IOSTA |= 0X40;
     0003 001r                      1- 2643     	IOSTR	_IOSTA
                                    1- 2644     	BANKSEL	r0x104D
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 00rr                      1- 2645     	MOVAR	r0x104D
     0006 1Brr                      1- 2646     	BSR	r0x104D,6
     0007 01rr                      1- 2647     	MOVR	r0x104D,W
     0008 000r                      1- 2648     	IOST	_IOSTA
                                    1- 2649     	.line	479, "main.c"; 	LedInput();
                                    1- 2650     	MCALL	_LedInput
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2651     	.line	480, "main.c"; 	sleepTime = 0;
                                    1- 2652     	BANKSEL	_sleepTime
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 02rr                      1- 2653     	CLRR	_sleepTime
     000C 02rr                      1- 2654     	CLRR	(_sleepTime + 1)
                                    1- 2655     	.line	482, "main.c"; 	pwmStop();
                                    1- 2656     	MCALL	_pwmStop
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2657     	.line	483, "main.c"; 	pwm1Stop();
                                    1- 2658     	MCALL	_pwm1Stop
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2659     	.line	484, "main.c"; 	workStep = 0;
                                    1- 2660     	BANKSEL	_workStep
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2661     	CLRR	_workStep
                                    1- 2662     	.line	485, "main.c"; 	AWUCON = 0x98;
     0011 2198                      1- 2663     	MOVIA	0x98
     0012 00rr                      1- 2664     	MOVAR	_AWUCON
                                    1- 2665     	.line	486, "main.c"; 	fgPRD = 0;
                                    1- 2666     	BANKSEL	_fgPRD
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 02rr                      1- 2667     	CLRR	_fgPRD
     0015 02rr                      1- 2668     	CLRR	(_fgPRD + 1)
                                    1- 2669     	.line	487, "main.c"; 	fgCount = 0;
                                    1- 2670     	BANKSEL	_fgCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 02rr                      1- 2671     	CLRR	_fgCount
     0018 02rr                      1- 2672     	CLRR	(_fgCount + 1)
                                    1- 2673     	.line	488, "main.c"; 	redLedFlag = 0;
                                    1- 2674     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Drr                      1- 2675     	BCR	_Status,2
                                    1- 2676     	.line	489, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     001B 210B                      1- 2677     	MOVIA	0x0b
     001C 00rr                      1- 2678     	MOVAR	_INTE
                                    1- 2679     	.line	490, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     001D 2118                      1- 2680     	MOVIA	0x18
     001E 00rr                      1- 2681     	MOVAR	_PCON
                                    1- 2682     	.line	491, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     001F 02rr                      1- 2683     	CLRR	_INTF
                                    1- 2684     	.line	492, "main.c"; 	CLRWDT();
     0020 0002                      1- 2685     	clrwdt
                                    1- 2686     	.line	493, "main.c"; 	ENI();
     0021 0004                      1- 2687     	ENI
                                    1- 2688     	.line	494, "main.c"; 	SLEEP();
     0022 0001                      1- 2689     	sleep
                                    1- 2690     	.line	495, "main.c"; 	AWUCON = 0x00;
     0023 02rr                      1- 2691     	CLRR	_AWUCON
                                    1- 2692     	.line	496, "main.c"; 	IOSTA &= 0XBF;
     0024 001r                      1- 2693     	IOSTR	_IOSTA
                                    1- 2694     	BANKSEL	r0x104D
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 00rr                      1- 2695     	MOVAR	r0x104D
     0027 1Frr                      1- 2696     	BCR	r0x104D,6
     0028 01rr                      1- 2697     	MOVR	r0x104D,W
     0029 000r                      1- 2698     	IOST	_IOSTA
                                    1- 2699     	.line	497, "main.c"; 	PORTB &= 0xBF;
     002A 1Frr                      1- 2700     	BCR	_PORTB,6
                                    1- 2701     	.line	498, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0��Timer1��WDT overflow interrupt
     002B 2101                      1- 2702     	MOVIA	0x01
     002C 00rr                      1- 2703     	MOVAR	_INTE
                                    1- 2704     	.line	499, "main.c"; 	INTF = 0;
     002D 02rr                      1- 2705     	CLRR	_INTF
                                    1- 2706     	.line	501, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     002E 21B8                      1- 2707     	MOVIA	0xb8
     002F 00rr                      1- 2708     	MOVAR	_PCON
                                    1- 2709     	.line	503, "main.c"; 	}
                                    1- 2710     	RETURN	
     0030 0010                      3-   40 m1      ret
                                    1- 2711     ; exit point of _gotoSleep
                                    1- 2713     ;***
                                    1- 2714     ;  pBlock Stats: dbName = C
                                    1- 2715     ;***
                                    1- 2716     ;has an exit
                                    1- 2717     ;; Starting pCode block
                                    1- 2718     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2720     _pwmStop:
                                    1- 2721     ; 2 exit points
                                    1- 2722     	.line	470, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2723     	CLRA	
     0001 00rr                      1- 2724     	SFUN	_T2CR1
                                    1- 2725     	.line	471, "main.c"; 	}
                                    1- 2726     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2727     ; exit point of _pwmStop
                                    1- 2729     ;***
                                    1- 2730     ;  pBlock Stats: dbName = C
                                    1- 2731     ;***
                                    1- 2732     ;has an exit
                                    1- 2733     ;1 compiler assigned register :
                                    1- 2734     ;   r0x104E
                                    1- 2735     ;; Starting pCode block
                                    1- 2736     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2738     _pwmInit:
                                    1- 2739     ; 2 exit points
                                    1- 2740     	.line	458, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2741     	SFUNR	_T2CR1
                                    1- 2742     	BANKSEL	r0x104E
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2743     	MOVAR	r0x104E
     0003 0Frr                      1- 2744     	BTRSC	r0x104E,7
                                    1- 2745     	.line	459, "main.c"; 	return;
                                    1- 2746     	MGOTO	_00397_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2747     	.line	460, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2748     	CLRR	_TMRH
                                    1- 2749     	.line	461, "main.c"; 	TMR2 = 128;							//Ƶ��Ϊ110K
     0006 2180                      1- 2750     	MOVIA	0x80
     0007 00rr                      1- 2751     	SFUN	_TMR2
                                    1- 2752     	.line	464, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2753     	CLRA	
     0009 00rr                      1- 2754     	SFUN	_T2CR2
                                    1- 2755     	.line	465, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2756     	MOVIA	0x83
     000B 00rr                      1- 2757     	SFUN	_T2CR1
     000C                           1- 2758     _00397_DS_:
                                    1- 2759     	.line	466, "main.c"; 	}
                                    1- 2760     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2761     ; exit point of _pwmInit
                                    1- 2763     ;***
                                    1- 2764     ;  pBlock Stats: dbName = C
                                    1- 2765     ;***
                                    1- 2766     ;has an exit
                                    1- 2767     ;; Starting pCode block
                                    1- 2768     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2770     _pwm1Stop:
                                    1- 2771     ; 2 exit points
                                    1- 2772     	.line	451, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2773     	CLRA	
     0001 00rr                      1- 2774     	SFUN	_T1CR1
                                    1- 2775     	.line	452, "main.c"; 	}
                                    1- 2776     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2777     ; exit point of _pwm1Stop
                                    1- 2779     ;***
                                    1- 2780     ;  pBlock Stats: dbName = C
                                    1- 2781     ;***
                                    1- 2782     ;has an exit
                                    1- 2783     ;1 compiler assigned register :
                                    1- 2784     ;   r0x1049
                                    1- 2785     ;; Starting pCode block
                                    1- 2786     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2788     _pwm1Init:
                                    1- 2789     ; 2 exit points
                                    1- 2790     	.line	439, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2791     	SFUNR	_T1CR1
                                    1- 2792     	BANKSEL	r0x1049
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2793     	MOVAR	r0x1049
     0003 0Frr                      1- 2794     	BTRSC	r0x1049,7
                                    1- 2795     	.line	440, "main.c"; 	return;
                                    1- 2796     	MGOTO	_00386_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2797     	.line	441, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2798     	CLRR	_TMRH
                                    1- 2799     	.line	442, "main.c"; 	TMR1 = 12;							//Ƶ��Ϊ110K
     0006 210C                      1- 2800     	MOVIA	0x0c
     0007 00rr                      1- 2801     	SFUN	_TMR1
                                    1- 2802     	.line	445, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2803     	CLRA	
     0009 00rr                      1- 2804     	SFUN	_T1CR2
                                    1- 2805     	.line	446, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2806     	MOVIA	0x83
     000B 00rr                      1- 2807     	SFUN	_T1CR1
     000C                           1- 2808     _00386_DS_:
                                    1- 2809     	.line	447, "main.c"; 	}
                                    1- 2810     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2811     ; exit point of _pwm1Init
                                    1- 2813     ;***
                                    1- 2814     ;  pBlock Stats: dbName = C
                                    1- 2815     ;***
                                    1- 2816     ;has an exit
                                    1- 2817     ;functions called:
                                    1- 2818     ;   _delay
                                    1- 2819     ;   _LedInput
                                    1- 2820     ;   _delay
                                    1- 2821     ;   _LedInput
                                    1- 2822     ;1 compiler assigned register :
                                    1- 2823     ;   r0x104F
                                    1- 2824     ;; Starting pCode block
                                    1- 2825     .segment "code"; module=main, function=_LED6ON
     0000                           1- 2827     _LED6ON:
                                    1- 2828     ; 2 exit points
                                    1- 2829     	.line	429, "main.c"; 	L2OUT;
     0000 001r                      1- 2830     	IOSTR	_IOSTA
                                    1- 2831     	BANKSEL	r0x104F
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2832     	MOVAR	r0x104F
     0003 1Crr                      1- 2833     	BCR	r0x104F,0
     0004 01rr                      1- 2834     	MOVR	r0x104F,W
     0005 000r                      1- 2835     	IOST	_IOSTA
                                    1- 2836     	.line	430, "main.c"; 	L1OUT;
     0006 001r                      1- 2837     	IOSTR	_IOSTB
     0007 00rr                      1- 2838     	MOVAR	r0x104F
     0008 1Crr                      1- 2839     	BCR	r0x104F,1
     0009 01rr                      1- 2840     	MOVR	r0x104F,W
     000A 000r                      1- 2841     	IOST	_IOSTB
                                    1- 2842     	.line	431, "main.c"; 	L1H;
     000B 18rr                      1- 2843     	BSR	_PORTB,1
                                    1- 2844     	.line	432, "main.c"; 	L2L;
                                    1- 2845     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Crr                      1- 2846     	BCR	_PORTA,0
                                    1- 2847     	.line	433, "main.c"; 	delay(100);
     000E 2164                      1- 2848     	MOVIA	0x64
                                    1- 2849     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2850     	.line	434, "main.c"; 	LedInput();
                                    1- 2851     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2852     	.line	435, "main.c"; 	}
                                    1- 2853     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2854     ; exit point of _LED6ON
                                    1- 2856     ;***
                                    1- 2857     ;  pBlock Stats: dbName = C
                                    1- 2858     ;***
                                    1- 2859     ;has an exit
                                    1- 2860     ;functions called:
                                    1- 2861     ;   _delay
                                    1- 2862     ;   _LedInput
                                    1- 2863     ;   _delay
                                    1- 2864     ;   _LedInput
                                    1- 2865     ;1 compiler assigned register :
                                    1- 2866     ;   r0x1050
                                    1- 2867     ;; Starting pCode block
                                    1- 2868     .segment "code"; module=main, function=_LED5ON
     0000                           1- 2870     _LED5ON:
                                    1- 2871     ; 2 exit points
                                    1- 2872     	.line	418, "main.c"; 	L2OUT;
     0000 001r                      1- 2873     	IOSTR	_IOSTA
                                    1- 2874     	BANKSEL	r0x1050
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2875     	MOVAR	r0x1050
     0003 1Crr                      1- 2876     	BCR	r0x1050,0
     0004 01rr                      1- 2877     	MOVR	r0x1050,W
     0005 000r                      1- 2878     	IOST	_IOSTA
                                    1- 2879     	.line	419, "main.c"; 	L1OUT;
     0006 001r                      1- 2880     	IOSTR	_IOSTB
     0007 00rr                      1- 2881     	MOVAR	r0x1050
     0008 1Crr                      1- 2882     	BCR	r0x1050,1
     0009 01rr                      1- 2883     	MOVR	r0x1050,W
     000A 000r                      1- 2884     	IOST	_IOSTB
                                    1- 2885     	.line	420, "main.c"; 	L2H;
                                    1- 2886     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 18rr                      1- 2887     	BSR	_PORTA,0
                                    1- 2888     	.line	421, "main.c"; 	L1L;
     000D 1Crr                      1- 2889     	BCR	_PORTB,1
                                    1- 2890     	.line	422, "main.c"; 	delay(100);
     000E 2164                      1- 2891     	MOVIA	0x64
                                    1- 2892     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2893     	.line	423, "main.c"; 	LedInput();
                                    1- 2894     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2895     	.line	424, "main.c"; 	}
                                    1- 2896     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2897     ; exit point of _LED5ON
                                    1- 2899     ;***
                                    1- 2900     ;  pBlock Stats: dbName = C
                                    1- 2901     ;***
                                    1- 2902     ;has an exit
                                    1- 2903     ;functions called:
                                    1- 2904     ;   _delay
                                    1- 2905     ;   _LedInput
                                    1- 2906     ;   _delay
                                    1- 2907     ;   _LedInput
                                    1- 2908     ;1 compiler assigned register :
                                    1- 2909     ;   r0x1051
                                    1- 2910     ;; Starting pCode block
                                    1- 2911     .segment "code"; module=main, function=_LED4ON
     0000                           1- 2913     _LED4ON:
                                    1- 2914     ; 2 exit points
                                    1- 2915     	.line	408, "main.c"; 	L3OUT;
     0000 001r                      1- 2916     	IOSTR	_IOSTB
                                    1- 2917     	BANKSEL	r0x1051
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2918     	MOVAR	r0x1051
     0003 1Crr                      1- 2919     	BCR	r0x1051,0
     0004 01rr                      1- 2920     	MOVR	r0x1051,W
     0005 000r                      1- 2921     	IOST	_IOSTB
                                    1- 2922     	.line	409, "main.c"; 	L2OUT;
     0006 001r                      1- 2923     	IOSTR	_IOSTA
     0007 00rr                      1- 2924     	MOVAR	r0x1051
     0008 1Crr                      1- 2925     	BCR	r0x1051,0
     0009 01rr                      1- 2926     	MOVR	r0x1051,W
     000A 000r                      1- 2927     	IOST	_IOSTA
                                    1- 2928     	.line	410, "main.c"; 	L3H;
     000B 18rr                      1- 2929     	BSR	_PORTB,0
                                    1- 2930     	.line	411, "main.c"; 	L2L;
                                    1- 2931     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Crr                      1- 2932     	BCR	_PORTA,0
                                    1- 2933     	.line	412, "main.c"; 	delay(100);
     000E 2164                      1- 2934     	MOVIA	0x64
                                    1- 2935     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2936     	.line	413, "main.c"; 	LedInput();
                                    1- 2937     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2938     	.line	414, "main.c"; 	}
                                    1- 2939     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2940     ; exit point of _LED4ON
                                    1- 2942     ;***
                                    1- 2943     ;  pBlock Stats: dbName = C
                                    1- 2944     ;***
                                    1- 2945     ;has an exit
                                    1- 2946     ;functions called:
                                    1- 2947     ;   _delay
                                    1- 2948     ;   _LedInput
                                    1- 2949     ;   _delay
                                    1- 2950     ;   _LedInput
                                    1- 2951     ;1 compiler assigned register :
                                    1- 2952     ;   r0x1052
                                    1- 2953     ;; Starting pCode block
                                    1- 2954     .segment "code"; module=main, function=_LED3ON
     0000                           1- 2956     _LED3ON:
                                    1- 2957     ; 2 exit points
                                    1- 2958     	.line	398, "main.c"; 	L3OUT;
     0000 001r                      1- 2959     	IOSTR	_IOSTB
                                    1- 2960     	BANKSEL	r0x1052
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2961     	MOVAR	r0x1052
     0003 1Crr                      1- 2962     	BCR	r0x1052,0
     0004 01rr                      1- 2963     	MOVR	r0x1052,W
     0005 000r                      1- 2964     	IOST	_IOSTB
                                    1- 2965     	.line	399, "main.c"; 	L1OUT;
     0006 001r                      1- 2966     	IOSTR	_IOSTB
     0007 00rr                      1- 2967     	MOVAR	r0x1052
     0008 1Crr                      1- 2968     	BCR	r0x1052,1
     0009 01rr                      1- 2969     	MOVR	r0x1052,W
     000A 000r                      1- 2970     	IOST	_IOSTB
                                    1- 2971     	.line	400, "main.c"; 	L1H;
     000B 18rr                      1- 2972     	BSR	_PORTB,1
                                    1- 2973     	.line	401, "main.c"; 	L3L;
     000C 1Crr                      1- 2974     	BCR	_PORTB,0
                                    1- 2975     	.line	402, "main.c"; 	delay(100);
     000D 2164                      1- 2976     	MOVIA	0x64
                                    1- 2977     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2978     	.line	403, "main.c"; 	LedInput();
                                    1- 2979     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2980     	.line	404, "main.c"; 	}
                                    1- 2981     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2982     ; exit point of _LED3ON
                                    1- 2984     ;***
                                    1- 2985     ;  pBlock Stats: dbName = C
                                    1- 2986     ;***
                                    1- 2987     ;has an exit
                                    1- 2988     ;functions called:
                                    1- 2989     ;   _delay
                                    1- 2990     ;   _LedInput
                                    1- 2991     ;   _delay
                                    1- 2992     ;   _LedInput
                                    1- 2993     ;1 compiler assigned register :
                                    1- 2994     ;   r0x1053
                                    1- 2995     ;; Starting pCode block
                                    1- 2996     .segment "code"; module=main, function=_LED2ON
     0000                           1- 2998     _LED2ON:
                                    1- 2999     ; 2 exit points
                                    1- 3000     	.line	388, "main.c"; 	L2OUT;
     0000 001r                      1- 3001     	IOSTR	_IOSTA
                                    1- 3002     	BANKSEL	r0x1053
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3003     	MOVAR	r0x1053
     0003 1Crr                      1- 3004     	BCR	r0x1053,0
     0004 01rr                      1- 3005     	MOVR	r0x1053,W
     0005 000r                      1- 3006     	IOST	_IOSTA
                                    1- 3007     	.line	389, "main.c"; 	L3OUT;
     0006 001r                      1- 3008     	IOSTR	_IOSTB
     0007 00rr                      1- 3009     	MOVAR	r0x1053
     0008 1Crr                      1- 3010     	BCR	r0x1053,0
     0009 01rr                      1- 3011     	MOVR	r0x1053,W
     000A 000r                      1- 3012     	IOST	_IOSTB
                                    1- 3013     	.line	390, "main.c"; 	L2H;
                                    1- 3014     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 18rr                      1- 3015     	BSR	_PORTA,0
                                    1- 3016     	.line	391, "main.c"; 	L3L;
     000D 1Crr                      1- 3017     	BCR	_PORTB,0
                                    1- 3018     	.line	392, "main.c"; 	delay(100);
     000E 2164                      1- 3019     	MOVIA	0x64
                                    1- 3020     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3021     	.line	393, "main.c"; 	LedInput();
                                    1- 3022     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3023     	.line	394, "main.c"; 	}
                                    1- 3024     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3025     ; exit point of _LED2ON
                                    1- 3027     ;***
                                    1- 3028     ;  pBlock Stats: dbName = C
                                    1- 3029     ;***
                                    1- 3030     ;has an exit
                                    1- 3031     ;functions called:
                                    1- 3032     ;   _delay
                                    1- 3033     ;   _LedInput
                                    1- 3034     ;   _delay
                                    1- 3035     ;   _LedInput
                                    1- 3036     ;1 compiler assigned register :
                                    1- 3037     ;   r0x1054
                                    1- 3038     ;; Starting pCode block
                                    1- 3039     .segment "code"; module=main, function=_LED1ON
     0000                           1- 3041     _LED1ON:
                                    1- 3042     ; 2 exit points
                                    1- 3043     	.line	378, "main.c"; 	L3OUT;
     0000 001r                      1- 3044     	IOSTR	_IOSTB
                                    1- 3045     	BANKSEL	r0x1054
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3046     	MOVAR	r0x1054
     0003 1Crr                      1- 3047     	BCR	r0x1054,0
     0004 01rr                      1- 3048     	MOVR	r0x1054,W
     0005 000r                      1- 3049     	IOST	_IOSTB
                                    1- 3050     	.line	379, "main.c"; 	L1OUT;
     0006 001r                      1- 3051     	IOSTR	_IOSTB
     0007 00rr                      1- 3052     	MOVAR	r0x1054
     0008 1Crr                      1- 3053     	BCR	r0x1054,1
     0009 01rr                      1- 3054     	MOVR	r0x1054,W
     000A 000r                      1- 3055     	IOST	_IOSTB
                                    1- 3056     	.line	380, "main.c"; 	L3H;
     000B 18rr                      1- 3057     	BSR	_PORTB,0
                                    1- 3058     	.line	381, "main.c"; 	L1L;
     000C 1Crr                      1- 3059     	BCR	_PORTB,1
                                    1- 3060     	.line	382, "main.c"; 	delay(100);
     000D 2164                      1- 3061     	MOVIA	0x64
                                    1- 3062     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3063     	.line	383, "main.c"; 	LedInput();
                                    1- 3064     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3065     	.line	384, "main.c"; 	}
                                    1- 3066     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3067     ; exit point of _LED1ON
                                    1- 3069     ;***
                                    1- 3070     ;  pBlock Stats: dbName = C
                                    1- 3071     ;***
                                    1- 3072     ;has an exit
                                    1- 3073     ;1 compiler assigned register :
                                    1- 3074     ;   r0x104C
                                    1- 3075     ;; Starting pCode block
                                    1- 3076     .segment "code"; module=main, function=_LedInput
     0000                           1- 3078     _LedInput:
                                    1- 3079     ; 2 exit points
                                    1- 3080     	.line	370, "main.c"; 	IOSTA |= 0x01;
     0000 001r                      1- 3081     	IOSTR	_IOSTA
                                    1- 3082     	BANKSEL	r0x104C
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3083     	MOVAR	r0x104C
     0003 18rr                      1- 3084     	BSR	r0x104C,0
     0004 01rr                      1- 3085     	MOVR	r0x104C,W
     0005 000r                      1- 3086     	IOST	_IOSTA
                                    1- 3087     	.line	371, "main.c"; 	IOSTB |= 0x03;
     0006 001r                      1- 3088     	IOSTR	_IOSTB
     0007 00rr                      1- 3089     	MOVAR	r0x104C
     0008 2103                      1- 3090     	MOVIA	0x03
     0009 11rr                      1- 3091     	IORAR	r0x104C,F
     000A 01rr                      1- 3092     	MOVR	r0x104C,W
     000B 000r                      1- 3093     	IOST	_IOSTB
                                    1- 3094     	.line	372, "main.c"; 	PORTA &= 0xFE;
                                    1- 3095     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Crr                      1- 3096     	BCR	_PORTA,0
                                    1- 3097     	.line	373, "main.c"; 	PORTB &= 0xFC;
     000E 21FC                      1- 3098     	MOVIA	0xfc
     000F 10rr                      1- 3099     	ANDAR	_PORTB,F
                                    1- 3100     	.line	374, "main.c"; 	}
                                    1- 3101     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3102     ; exit point of _LedInput
                                    1- 3104     ;***
                                    1- 3105     ;  pBlock Stats: dbName = C
                                    1- 3106     ;***
                                    1- 3107     ;has an exit
                                    1- 3108     ;functions called:
                                    1- 3109     ;   _pwmStop
                                    1- 3110     ;   _LedInput
                                    1- 3111     ;   _LedInput
                                    1- 3112     ;   _LED6ON
                                    1- 3113     ;   _LED5ON
                                    1- 3114     ;   _LED4ON
                                    1- 3115     ;   _LED3ON
                                    1- 3116     ;   _LED2ON
                                    1- 3117     ;   _LED1ON
                                    1- 3118     ;   _pwmStop
                                    1- 3119     ;   _LedInput
                                    1- 3120     ;   _LedInput
                                    1- 3121     ;   _LED6ON
                                    1- 3122     ;   _LED5ON
                                    1- 3123     ;   _LED4ON
                                    1- 3124     ;   _LED3ON
                                    1- 3125     ;   _LED2ON
                                    1- 3126     ;   _LED1ON
                                    1- 3127     ;; Starting pCode block
                                    1- 3128     .segment "code"; module=main, function=_ledShow
     0000                           1- 3130     _ledShow:
                                    1- 3131     ; 2 exit points
                                    1- 3132     ;;unsigned compare: left < lit (0x5=5), size=1
                                    1- 3133     	.line	314, "main.c"; 	if(overCount >= 5 && workStep > 0)
     0000 2105                      1- 3134     	MOVIA	0x05
                                    1- 3135     	BANKSEL	_overCount
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 3136     	SUBAR	_overCount,W
     0003 0803                      1- 3137     	BTRSS	STATUS,0
                                    1- 3138     	MGOTO	_00274_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3139     	BANKSEL	_workStep
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 01rr                      1- 3140     	MOVR	_workStep,W
     0007 0D03                      1- 3141     	BTRSC	STATUS,2
                                    1- 3142     	MGOTO	_00274_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3143     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 3144     	.line	316, "main.c"; 	if(count1s < 50)
     0009 2132                      1- 3145     	MOVIA	0x32
                                    1- 3146     	BANKSEL	_count1s
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 04rr                      1- 3147     	SUBAR	_count1s,W
     000C 0C03                      1- 3148     	BTRSC	STATUS,0
                                    1- 3149     	MGOTO	_00271_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3150     	.line	317, "main.c"; 	ledStep = workStep;
                                    1- 3151     	BANKSEL	_workStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 3152     	MOVR	_workStep,W
                                    1- 3153     	BANKSEL	_ledStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 3154     	MOVAR	_ledStep
                                    1- 3155     	MGOTO	_00274_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
     0013                           1- 3156     _00271_DS_:
                                    1- 3157     	.line	319, "main.c"; 	ledStep = 0;
                                    1- 3158     	BANKSEL	_ledStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 02rr                      1- 3159     	CLRR	_ledStep
     0015                           1- 3160     _00274_DS_:
                                    1- 3161     	.line	321, "main.c"; 	if(ledLightTime > 0 && pwStep > 0)
                                    1- 3162     	BANKSEL	_ledLightTime
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 01rr                      1- 3163     	MOVR	_ledLightTime,W
     0017 0D03                      1- 3164     	BTRSC	STATUS,2
                                    1- 3165     	MGOTO	_00282_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3166     	BANKSEL	_pwStep
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 3167     	MOVR	_pwStep,W
     001B 0D03                      1- 3168     	BTRSC	STATUS,2
                                    1- 3169     	MGOTO	_00282_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3170     	.line	323, "main.c"; 	if(ledLightTime == 2)
                                    1- 3171     	BANKSEL	_ledLightTime
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 3172     	MOVR	_ledLightTime,W
     001F 2402                      1- 3173     	XORIA	0x02
     0020 0903                      1- 3174     	BTRSS	STATUS,2
                                    1- 3175     	MGOTO	_00282_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3176     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3177     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 3178     	.line	325, "main.c"; 	if(pwStep > 6 )
     0022 2107                      1- 3179     	MOVIA	0x07
                                    1- 3180     	BANKSEL	_pwStep
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 04rr                      1- 3181     	SUBAR	_pwStep,W
     0025 0803                      1- 3182     	BTRSS	STATUS,0
                                    1- 3183     	MGOTO	_00277_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3184     	.line	326, "main.c"; 	ledStep = 6;
     0027 2106                      1- 3185     	MOVIA	0x06
                                    1- 3186     	BANKSEL	_ledStep
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 00rr                      1- 3187     	MOVAR	_ledStep
                                    1- 3188     	MGOTO	_00282_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
     002B                           1- 3189     _00277_DS_:
                                    1- 3190     	.line	328, "main.c"; 	ledStep = pwStep;
                                    1- 3191     	BANKSEL	_pwStep
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1- 3192     	MOVR	_pwStep,W
                                    1- 3193     	BANKSEL	_ledStep
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 00rr                      1- 3194     	MOVAR	_ledStep
     002F                           1- 3195     _00282_DS_:
                                    1- 3196     	.line	331, "main.c"; 	if(shanshuoTime > 0 && workStep > 0 && pwStep == 0)
                                    1- 3197     	BANKSEL	_shanshuoTime
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 3198     	MOVR	_shanshuoTime,W
     0031 0D03                      1- 3199     	BTRSC	STATUS,2
                                    1- 3200     	MGOTO	_00288_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3201     	BANKSEL	_workStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 3202     	MOVR	_workStep,W
     0035 0D03                      1- 3203     	BTRSC	STATUS,2
                                    1- 3204     	MGOTO	_00288_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3205     	BANKSEL	_pwStep
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 01rr                      1- 3206     	MOVR	_pwStep,W
     0039 0903                      1- 3207     	BTRSS	STATUS,2
                                    1- 3208     	MGOTO	_00288_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3209     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 3210     	.line	333, "main.c"; 	if(count1s < 50)
     003B 2132                      1- 3211     	MOVIA	0x32
                                    1- 3212     	BANKSEL	_count1s
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 04rr                      1- 3213     	SUBAR	_count1s,W
     003E 0C03                      1- 3214     	BTRSC	STATUS,0
                                    1- 3215     	MGOTO	_00285_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3216     	.line	334, "main.c"; 	ledStep = workStep;
                                    1- 3217     	BANKSEL	_workStep
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 01rr                      1- 3218     	MOVR	_workStep,W
                                    1- 3219     	BANKSEL	_ledStep
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1- 3220     	MOVAR	_ledStep
                                    1- 3221     	MGOTO	_00288_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
     0045                           1- 3222     _00285_DS_:
                                    1- 3223     	.line	336, "main.c"; 	ledStep = 0;
                                    1- 3224     	BANKSEL	_ledStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 02rr                      1- 3225     	CLRR	_ledStep
     0047                           1- 3226     _00288_DS_:
                                    1- 3227     	.line	338, "main.c"; 	if(shanshuoTime == 0 && pwStep == 0)
                                    1- 3228     	BANKSEL	_shanshuoTime
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 01rr                      1- 3229     	MOVR	_shanshuoTime,W
     0049 0903                      1- 3230     	BTRSS	STATUS,2
                                    1- 3231     	MGOTO	_00292_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3232     	BANKSEL	_pwStep
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 01rr                      1- 3233     	MOVR	_pwStep,W
     004D 0903                      1- 3234     	BTRSS	STATUS,2
                                    1- 3235     	MGOTO	_00292_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3236     	.line	340, "main.c"; 	workStep = 0;
                                    1- 3237     	BANKSEL	_workStep
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 02rr                      1- 3238     	CLRR	_workStep
                                    1- 3239     	.line	341, "main.c"; 	ledStep = 0;
                                    1- 3240     	BANKSEL	_ledStep
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 02rr                      1- 3241     	CLRR	_ledStep
                                    1- 3242     	.line	342, "main.c"; 	pwmStop();
                                    1- 3243     	MCALL	_pwmStop
     0053 2rrr                      3-   66 m1      LCALL rom_address
     0054                           1- 3244     _00292_DS_:
                                    1- 3245     	.line	344, "main.c"; 	LedInput();
                                    1- 3246     	MCALL	_LedInput
     0054 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3247     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3248     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 3249     	.line	345, "main.c"; 	switch(ledStep)
     0055 2107                      1- 3250     	MOVIA	0x07
                                    1- 3251     	BANKSEL	_ledStep
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 04rr                      1- 3252     	SUBAR	_ledStep,W
     0058 0C03                      1- 3253     	BTRSC	STATUS,0
                                    1- 3254     	MGOTO	_00302_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
     005A 21rr                      1- 3255     	MOVIA	((_00351_DS_ >> 8) & 0xff)
     005B 008A                      1- 3256     	MOVAR	PCHBUF
     005C 01rr                      1- 3257     	MOVR	_ledStep,W
     005D 25rr                      1- 3258     	ADDIA	_00351_DS_
     005E 0C03                      1- 3259     	BTRSC	STATUS,0
     005F 058A                      1- 3260     	INCR	PCHBUF,F
     0060 0082                      1- 3261     	MOVAR	PCL
     0061                           1- 3262     _00351_DS_:
                                    1- 3263     	MGOTO	_00294_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3264     	MGOTO	_00300_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3265     	MGOTO	_00299_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3266     	MGOTO	_00298_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3267     	MGOTO	_00297_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3268     	MGOTO	_00296_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3269     	MGOTO	_00295_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
     0068                           1- 3270     _00294_DS_:
                                    1- 3271     	.line	348, "main.c"; 	LedInput();
                                    1- 3272     	MCALL	_LedInput
     0068 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3273     	.line	349, "main.c"; 	break;
                                    1- 3274     	MGOTO	_00302_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
     006A                           1- 3275     _00295_DS_:
                                    1- 3276     	.line	351, "main.c"; 	LED6ON();
                                    1- 3277     	MCALL	_LED6ON
     006A 2rrr                      3-   66 m1      LCALL rom_address
     006B                           1- 3278     _00296_DS_:
                                    1- 3279     	.line	353, "main.c"; 	LED5ON();
                                    1- 3280     	MCALL	_LED5ON
     006B 2rrr                      3-   66 m1      LCALL rom_address
     006C                           1- 3281     _00297_DS_:
                                    1- 3282     	.line	355, "main.c"; 	LED4ON();
                                    1- 3283     	MCALL	_LED4ON
     006C 2rrr                      3-   66 m1      LCALL rom_address
     006D                           1- 3284     _00298_DS_:
                                    1- 3285     	.line	357, "main.c"; 	LED3ON();
                                    1- 3286     	MCALL	_LED3ON
     006D 2rrr                      3-   66 m1      LCALL rom_address
     006E                           1- 3287     _00299_DS_:
                                    1- 3288     	.line	359, "main.c"; 	LED2ON();
                                    1- 3289     	MCALL	_LED2ON
     006E 2rrr                      3-   66 m1      LCALL rom_address
     006F                           1- 3290     _00300_DS_:
                                    1- 3291     	.line	361, "main.c"; 	LED1ON();
                                    1- 3292     	MCALL	_LED1ON
     006F 2rrr                      3-   66 m1      LCALL rom_address
     0070                           1- 3293     _00302_DS_:
                                    1- 3294     	.line	364, "main.c"; 	}
                                    1- 3295     	RETURN	
     0070 0010                      3-   40 m1      ret
                                    1- 3296     ; exit point of _ledShow
                                    1- 3298     ;***
                                    1- 3299     ;  pBlock Stats: dbName = C
                                    1- 3300     ;***
                                    1- 3301     ;has an exit
                                    1- 3302     ;functions called:
                                    1- 3303     ;   _LedInput
                                    1- 3304     ;   _LedInput
                                    1- 3305     ;; Starting pCode block
                                    1- 3306     .segment "code"; module=main, function=_initSys
     0000                           1- 3308     _initSys:
                                    1- 3309     ; 2 exit points
                                    1- 3310     	.line	282, "main.c"; 	DISI();
     0000 0013                      1- 3311     	DISI
                                    1- 3312     	.line	283, "main.c"; 	IOSTA = C_PA7_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0001 21BE                      1- 3313     	MOVIA	0xbe
     0002 000r                      1- 3314     	IOST	_IOSTA
                                    1- 3315     	.line	284, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 3316     	CLRA	
     0004 000r                      1- 3317     	IOST	_IOSTB
                                    1- 3318     	.line	285, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 3319     	CLRR	_PORTB
                                    1- 3320     	.line	286, "main.c"; 	PORTA = 0x00;
                                    1- 3321     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 3322     	CLRR	_PORTA
                                    1- 3323     	.line	287, "main.c"; 	LedInput();
                                    1- 3324     	MCALL	_LedInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3325     	.line	288, "main.c"; 	APHCON = 0x7F;
     0009 217F                      1- 3326     	MOVIA	0x7f
     000A 000r                      1- 3327     	IOST	_APHCON
                                    1- 3328     	.line	289, "main.c"; 	BPHCON = 0xFF;
     000B 21FF                      1- 3329     	MOVIA	0xff
     000C 00rr                      1- 3330     	MOVAR	_BPHCON
                                    1- 3331     	.line	290, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 3332     	MOVAR	_ABPLCON
                                    1- 3333     	.line	292, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0��Timer1��WDT overflow interrupt
     000E 2101                      1- 3334     	MOVIA	0x01
     000F 00rr                      1- 3335     	MOVAR	_INTE
                                    1- 3336     	.line	294, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 3337     	CLRA	
     0011 000r                      1- 3338     	IOST	_PCON1
                                    1- 3339     	.line	296, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 3340     	MOVIA	0x37
     0013 00rr                      1- 3341     	MOVAR	_TMR0
                                    1- 3342     	.line	297, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0014 0200                      1- 3343     	CLRA	
     0015 0003                      1- 3344     	T0MD	
                                    1- 3345     	.line	299, "main.c"; 	PCON1 = C_TMR0_En;
     0016 2101                      1- 3346     	MOVIA	0x01
     0017 000r                      1- 3347     	IOST	_PCON1
                                    1- 3348     	.line	302, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0018 2198                      1- 3349     	MOVIA	0x98
     0019 00rr                      1- 3350     	MOVAR	_PCON
                                    1- 3351     	.line	305, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001A 2101                      1- 3352     	MOVIA	0x01
     001B 000r                      1- 3353     	IOST	_PCON1
                                    1- 3354     	.line	306, "main.c"; 	ENI();
     001C 0004                      1- 3355     	ENI
                                    1- 3356     	.line	307, "main.c"; 	}
                                    1- 3357     	RETURN	
     001D 0010                      3-   40 m1      ret
                                    1- 3358     ; exit point of _initSys
                                    1- 3360     ;***
                                    1- 3361     ;  pBlock Stats: dbName = C
                                    1- 3362     ;***
                                    1- 3363     ;has an exit
                                    1- 3364     ;functions called:
                                    1- 3365     ;   _pwmStop
                                    1- 3366     ;   _pwmStop
                                    1- 3367     ;; Starting pCode block
                                    1- 3368     .segment "code"; module=main, function=_powerOff
     0000                           1- 3370     _powerOff:
                                    1- 3371     ; 2 exit points
                                    1- 3372     	.line	273, "main.c"; 	workStep = 0;
                                    1- 3373     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 3374     	CLRR	_workStep
                                    1- 3375     	.line	274, "main.c"; 	pwmStop();
                                    1- 3376     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3377     	.line	275, "main.c"; 	ledStep = 5;
     0003 2105                      1- 3378     	MOVIA	0x05
                                    1- 3379     	BANKSEL	_ledStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 00rr                      1- 3380     	MOVAR	_ledStep
                                    1- 3381     	.line	276, "main.c"; 	}
                                    1- 3382     	RETURN	
     0006 0010                      3-   40 m1      ret
                                    1- 3383     ; exit point of _powerOff
                                    1- 3385     ;***
                                    1- 3386     ;  pBlock Stats: dbName = C
                                    1- 3387     ;***
                                    1- 3388     ;has an exit
                                    1- 3389     ;functions called:
                                    1- 3390     ;   _keyRead
                                    1- 3391     ;   _pwmInit
                                    1- 3392     ;   _powerOff
                                    1- 3393     ;   _pwmInit
                                    1- 3394     ;   _keyRead
                                    1- 3395     ;   _pwmInit
                                    1- 3396     ;   _powerOff
                                    1- 3397     ;   _pwmInit
                                    1- 3398     ;1 compiler assigned register :
                                    1- 3399     ;   r0x1055
                                    1- 3400     ;; Starting pCode block
                                    1- 3401     .segment "code"; module=main, function=_keyCtr
                                    1- 3403     ;local variable name mapping:
     0000                           1- 3405     _keyCtr:
                                    1- 3406     ; 2 exit points
                                    1- 3407     	.line	211, "main.c"; 	char kclick = keyRead(0x80 & (~PORTA));
                                    1- 3408     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 3409     	COMR	_PORTA,W
                                    1- 3410     	BANKSEL	r0x1055
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 3411     	MOVAR	r0x1055
     0004 2180                      1- 3412     	MOVIA	0x80
     0005 10rr                      1- 3413     	ANDAR	r0x1055,F
     0006 01rr                      1- 3414     	MOVR	r0x1055,W
                                    1- 3415     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3416     	BANKSEL	r0x1055
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 3417     	MOVAR	r0x1055
                                    1- 3418     	.line	212, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 3419     	XORIA	0x01
     000B 0903                      1- 3420     	BTRSS	STATUS,2
                                    1- 3421     	MGOTO	_00255_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3422     	.line	214, "main.c"; 	count500ms = 0;
                                    1- 3423     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 3424     	CLRR	_count500ms
                                    1- 3425     	.line	215, "main.c"; 	ledLightTime = 0;
                                    1- 3426     	BANKSEL	_ledLightTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 3427     	CLRR	_ledLightTime
                                    1- 3428     	.line	216, "main.c"; 	if(workStep == 0)
                                    1- 3429     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 3430     	MOVR	_workStep,W
     0013 0903                      1- 3431     	BTRSS	STATUS,2
                                    1- 3432     	MGOTO	_00225_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3433     	.line	218, "main.c"; 	count1s = 0;
                                    1- 3434     	BANKSEL	_count1s
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 3435     	CLRR	_count1s
                                    1- 3436     	.line	219, "main.c"; 	ledLightTime = 2;
     0017 2102                      1- 3437     	MOVIA	0x02
                                    1- 3438     	BANKSEL	_ledLightTime
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 00rr                      1- 3439     	MOVAR	_ledLightTime
                                    1- 3440     	.line	220, "main.c"; 	return;
                                    1- 3441     	MGOTO	_00257_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
     001B                           1- 3442     _00225_DS_:
                                    1- 3443     	.line	222, "main.c"; 	ledTime = 0;
                                    1- 3444     	BANKSEL	_ledTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 3445     	CLRR	_ledTime
                                    1- 3446     	.line	223, "main.c"; 	if(++workStep > 6)
                                    1- 3447     	BANKSEL	_workStep
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 05rr                      1- 3448     	INCR	_workStep,F
                                    1- 3449     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3450     ;;unsigned compare: left >= lit (0x7=7), size=1
     001F 2107                      1- 3451     	MOVIA	0x07
     0020 04rr                      1- 3452     	SUBAR	_workStep,W
     0021 0803                      1- 3453     	BTRSS	STATUS,0
                                    1- 3454     	MGOTO	_00227_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3455     	.line	224, "main.c"; 	workStep = 1;
     0023 2101                      1- 3456     	MOVIA	0x01
     0024 00rr                      1- 3457     	MOVAR	_workStep
     0025                           1- 3458     _00227_DS_:
                                    1- 3459     	.line	225, "main.c"; 	shanshuoTime = 6;
     0025 2106                      1- 3460     	MOVIA	0x06
                                    1- 3461     	BANKSEL	_shanshuoTime
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 00rr                      1- 3462     	MOVAR	_shanshuoTime
                                    1- 3463     	.line	226, "main.c"; 	if(workStep == 1)
                                    1- 3464     	BANKSEL	_workStep
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 01rr                      1- 3465     	MOVR	_workStep,W
     002A 2401                      1- 3466     	XORIA	0x01
     002B 0903                      1- 3467     	BTRSS	STATUS,2
                                    1- 3468     	MGOTO	_00243_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3469     	.line	227, "main.c"; 	maxDuty = 51;
     002D 2133                      1- 3470     	MOVIA	0x33
                                    1- 3471     	BANKSEL	_maxDuty
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1- 3472     	MOVAR	_maxDuty
                                    1- 3473     	MGOTO	_00244_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 3474     _00243_DS_:
                                    1- 3475     	.line	228, "main.c"; 	else if(workStep == 2)
                                    1- 3476     	BANKSEL	_workStep
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1- 3477     	MOVR	_workStep,W
     0033 2402                      1- 3478     	XORIA	0x02
     0034 0903                      1- 3479     	BTRSS	STATUS,2
                                    1- 3480     	MGOTO	_00240_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3481     	.line	229, "main.c"; 	maxDuty = 53;
     0036 2135                      1- 3482     	MOVIA	0x35
                                    1- 3483     	BANKSEL	_maxDuty
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 00rr                      1- 3484     	MOVAR	_maxDuty
                                    1- 3485     	MGOTO	_00244_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
     003A                           1- 3486     _00240_DS_:
                                    1- 3487     	.line	230, "main.c"; 	else if(workStep == 3)
                                    1- 3488     	BANKSEL	_workStep
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1- 3489     	MOVR	_workStep,W
     003C 2403                      1- 3490     	XORIA	0x03
     003D 0903                      1- 3491     	BTRSS	STATUS,2
                                    1- 3492     	MGOTO	_00237_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3493     	.line	231, "main.c"; 	maxDuty = 54;
     003F 2136                      1- 3494     	MOVIA	0x36
                                    1- 3495     	BANKSEL	_maxDuty
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 00rr                      1- 3496     	MOVAR	_maxDuty
                                    1- 3497     	MGOTO	_00244_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
     0043                           1- 3498     _00237_DS_:
                                    1- 3499     	.line	232, "main.c"; 	else if(workStep == 4)
                                    1- 3500     	BANKSEL	_workStep
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1- 3501     	MOVR	_workStep,W
     0045 2404                      1- 3502     	XORIA	0x04
     0046 0903                      1- 3503     	BTRSS	STATUS,2
                                    1- 3504     	MGOTO	_00234_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3505     	.line	233, "main.c"; 	maxDuty = 55;
     0048 2137                      1- 3506     	MOVIA	0x37
                                    1- 3507     	BANKSEL	_maxDuty
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 3508     	MOVAR	_maxDuty
                                    1- 3509     	MGOTO	_00244_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C                           1- 3510     _00234_DS_:
                                    1- 3511     	.line	234, "main.c"; 	else if(workStep == 5)
                                    1- 3512     	BANKSEL	_workStep
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 01rr                      1- 3513     	MOVR	_workStep,W
     004E 2405                      1- 3514     	XORIA	0x05
     004F 0903                      1- 3515     	BTRSS	STATUS,2
                                    1- 3516     	MGOTO	_00231_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3517     	.line	235, "main.c"; 	maxDuty = 56;
     0051 2138                      1- 3518     	MOVIA	0x38
                                    1- 3519     	BANKSEL	_maxDuty
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 00rr                      1- 3520     	MOVAR	_maxDuty
                                    1- 3521     	MGOTO	_00244_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
     0055                           1- 3522     _00231_DS_:
                                    1- 3523     	.line	236, "main.c"; 	else if(workStep == 6)
                                    1- 3524     	BANKSEL	_workStep
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 01rr                      1- 3525     	MOVR	_workStep,W
     0057 2406                      1- 3526     	XORIA	0x06
     0058 0903                      1- 3527     	BTRSS	STATUS,2
                                    1- 3528     	MGOTO	_00244_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3529     	.line	237, "main.c"; 	maxDuty = 58;
     005A 213A                      1- 3530     	MOVIA	0x3a
                                    1- 3531     	BANKSEL	_maxDuty
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 00rr                      1- 3532     	MOVAR	_maxDuty
     005D                           1- 3533     _00244_DS_:
                                    1- 3534     	.line	238, "main.c"; 	if(workStep > 0)
                                    1- 3535     	BANKSEL	_workStep
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 01rr                      1- 3536     	MOVR	_workStep,W
     005F 0D03                      1- 3537     	BTRSC	STATUS,2
                                    1- 3538     	MGOTO	_00246_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3539     	.line	240, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 3540     	BANKSEL	_maxDuty
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1- 3541     	MOVR	_maxDuty,W
     0063 00rr                      1- 3542     	SFUN	_PWM2DUTY
                                    1- 3543     	.line	241, "main.c"; 	pwmInit();
                                    1- 3544     	MCALL	_pwmInit
     0064 2rrr                      3-   66 m1      LCALL rom_address
     0065                           1- 3545     _00246_DS_:
                                    1- 3546     	.line	243, "main.c"; 	ledStep = workStep;
                                    1- 3547     	BANKSEL	_workStep
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 01rr                      1- 3548     	MOVR	_workStep,W
                                    1- 3549     	BANKSEL	_ledStep
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 00rr                      1- 3550     	MOVAR	_ledStep
                                    1- 3551     	MGOTO	_00257_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
     006A                           1- 3552     _00255_DS_:
                                    1- 3553     	.line	245, "main.c"; 	else if(kclick == 2)
                                    1- 3554     	BANKSEL	r0x1055
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 01rr                      1- 3555     	MOVR	r0x1055,W
     006C 2402                      1- 3556     	XORIA	0x02
     006D 0903                      1- 3557     	BTRSS	STATUS,2
                                    1- 3558     	MGOTO	_00257_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3559     	.line	247, "main.c"; 	if(workStep > 0)
                                    1- 3560     	BANKSEL	_workStep
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 01rr                      1- 3561     	MOVR	_workStep,W
     0071 0D03                      1- 3562     	BTRSC	STATUS,2
                                    1- 3563     	MGOTO	_00250_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3564     	.line	249, "main.c"; 	powerOff();
                                    1- 3565     	MCALL	_powerOff
     0073 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3566     	MGOTO	_00251_DS_
     0074 3rrr                      3-   63 m1      LGOTO rom_address
     0075                           1- 3567     _00250_DS_:
                                    1- 3568     	.line	253, "main.c"; 	if(pwStep == 10)
                                    1- 3569     	BANKSEL	_pwStep
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 01rr                      1- 3570     	MOVR	_pwStep,W
     0077 240A                      1- 3571     	XORIA	0x0a
     0078 0903                      1- 3572     	BTRSS	STATUS,2
                                    1- 3573     	MGOTO	_00248_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3574     	.line	255, "main.c"; 	sleepTime = 0;
                                    1- 3575     	BANKSEL	_sleepTime
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 02rr                      1- 3576     	CLRR	_sleepTime
     007C 02rr                      1- 3577     	CLRR	(_sleepTime + 1)
                                    1- 3578     	.line	256, "main.c"; 	return;
                                    1- 3579     	MGOTO	_00257_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
     007E                           1- 3580     _00248_DS_:
                                    1- 3581     	.line	258, "main.c"; 	workStep = 1;
     007E 2101                      1- 3582     	MOVIA	0x01
                                    1- 3583     	BANKSEL	_workStep
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 00rr                      1- 3584     	MOVAR	_workStep
                                    1- 3585     	.line	259, "main.c"; 	PWM2DUTY = 100;
     0081 2164                      1- 3586     	MOVIA	0x64
     0082 00rr                      1- 3587     	SFUN	_PWM2DUTY
                                    1- 3588     	.line	260, "main.c"; 	currentDuty = 100;
                                    1- 3589     	BANKSEL	_currentDuty
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 00rr                      1- 3590     	MOVAR	_currentDuty
                                    1- 3591     	.line	261, "main.c"; 	maxDuty = 50;
     0085 2132                      1- 3592     	MOVIA	0x32
                                    1- 3593     	BANKSEL	_maxDuty
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 00rr                      1- 3594     	MOVAR	_maxDuty
                                    1- 3595     	.line	262, "main.c"; 	pwmInit();
                                    1- 3596     	MCALL	_pwmInit
     0088 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3597     	.line	263, "main.c"; 	shanshuoTime = 16;
     0089 2110                      1- 3598     	MOVIA	0x10
                                    1- 3599     	BANKSEL	_shanshuoTime
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 00rr                      1- 3600     	MOVAR	_shanshuoTime
     008C                           1- 3601     _00251_DS_:
                                    1- 3602     	.line	266, "main.c"; 	ledStep = workStep;
                                    1- 3603     	BANKSEL	_workStep
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 01rr                      1- 3604     	MOVR	_workStep,W
                                    1- 3605     	BANKSEL	_ledStep
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 00rr                      1- 3606     	MOVAR	_ledStep
     0090                           1- 3607     _00257_DS_:
                                    1- 3608     	.line	268, "main.c"; 	}
                                    1- 3609     	RETURN	
     0090 0010                      3-   40 m1      ret
                                    1- 3610     ; exit point of _keyCtr
                                    1- 3613     ;	code size estimation:
                                    1- 3614     ;	 1446+  351 =  1797 instructions ( 4296 byte)
                                    1- 3616     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
