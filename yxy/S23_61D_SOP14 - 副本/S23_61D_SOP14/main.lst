
                    Nyquest Technology Co., Ltd.

NYASM 2.27

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_fgCtr
                                    1-   18     	extern	_LedCtr2
                                    1-   19     	extern	_checkInAD
                                    1-   20     	extern	_PORTAbits
                                    1-   21     	extern	_PORTBbits
                                    1-   22     	extern	_PCONbits
                                    1-   23     	extern	_BWUCONbits
                                    1-   24     	extern	_ABPLCONbits
                                    1-   25     	extern	_BPHCONbits
                                    1-   26     	extern	_INTEbits
                                    1-   27     	extern	_INTFbits
                                    1-   28     	extern	_ADMDbits
                                    1-   29     	extern	_ADRbits
                                    1-   30     	extern	_ADVREFHbits
                                    1-   31     	extern	_ADCRbits
                                    1-   32     	extern	_AWUCONbits
                                    1-   33     	extern	_PACONbits
                                    1-   34     	extern	_INTEDGbits
                                    1-   35     	extern	_ANAENbits
                                    1-   36     	extern	_RFCbits
                                    1-   37     	extern	_INTE2bits
                                    1-   38     	extern	_INDF
                                    1-   39     	extern	_TMR0
                                    1-   40     	extern	_PCL
                                    1-   41     	extern	_STATUS
                                    1-   42     	extern	_FSR
                                    1-   43     	extern	_PORTA
                                    1-   44     	extern	_PORTB
                                    1-   45     	extern	_PCON
                                    1-   46     	extern	_BWUCON
                                    1-   47     	extern	_PCHBUF
                                    1-   48     	extern	_ABPLCON
                                    1-   49     	extern	_BPHCON
                                    1-   50     	extern	_INTE
                                    1-   51     	extern	_INTF
                                    1-   52     	extern	_ADMD
                                    1-   53     	extern	_ADR
                                    1-   54     	extern	_ADD
                                    1-   55     	extern	_ADVREFH
                                    1-   56     	extern	_ADCR
                                    1-   57     	extern	_AWUCON
                                    1-   58     	extern	_PACON
                                    1-   59     	extern	_INTEDG
                                    1-   60     	extern	_TMRH
                                    1-   61     	extern	_ANAEN
                                    1-   62     	extern	_RFC
                                    1-   63     	extern	_TM3RH
                                    1-   64     	extern	_INTE2
                                    1-   65     	extern	_TMR1
                                    1-   66     	extern	_T1CR1
                                    1-   67     	extern	_T1CR2
                                    1-   68     	extern	_PWM1DUTY
                                    1-   69     	extern	_PS1CV
                                    1-   70     	extern	_BZ1CR
                                    1-   71     	extern	_IRCR
                                    1-   72     	extern	_TBHP
                                    1-   73     	extern	_TBHD
                                    1-   74     	extern	_TMR2
                                    1-   75     	extern	_T2CR1
                                    1-   76     	extern	_T2CR2
                                    1-   77     	extern	_PWM2DUTY
                                    1-   78     	extern	_PS2CV
                                    1-   79     	extern	_BZ2CR
                                    1-   80     	extern	_OSCCR
                                    1-   81     	extern	_TMR3
                                    1-   82     	extern	_T3CR1
                                    1-   83     	extern	_T3CR2
                                    1-   84     	extern	_PWM3DUTY
                                    1-   85     	extern	_PS3CV
                                    1-   86     	extern	_BZ3CR
                                    1-   87     	extern	_IOSTA
                                    1-   88     	extern	_IOSTB
                                    1-   89     	extern	_APHCON
                                    1-   90     	extern	_PS0CV
                                    1-   91     	extern	_BODCON
                                    1-   92     	extern	_CMPCR
                                    1-   93     	extern	_PCON1
                                    1-   94     	extern	_T0MD
                                    1-   95     	extern	___sdcc_saved_fsr
                                    1-   96     	extern	___sdcc_saved_stk00
                                    1-   97     	extern	___sdcc_saved_stk01
                                    1-   98     	extern	__mulchar
                                    1-   99     	extern	__nyc_ny8_startup
                                    1-  100     ;--------------------------------------------------------
                                    1-  101     ; global declarations
                                    1-  102     ;--------------------------------------------------------
                                    1-  103     	extern	_F_wait_eoc
                                    1-  104     	extern	_F_AIN2_Convert
                                    1-  105     	extern	_F_AIN3_Convert
                                    1-  106     	extern	_F_AIN4_Convert
                                    1-  107     	extern	_checkOutA
                                    1-  108     	extern	_checkChrgV
                                    1-  109     	extern	_checkBatAD
                                    1-  110     	extern	_initAD
                                    1-  111     	extern	_delay
                                    1-  112     	extern	_chrgCtr
                                    1-  113     	extern	_keyRead
                                    1-  114     	extern	_gotoSleep
                                    1-  115     	extern	_pwmStop
                                    1-  116     	extern	_pwmInit
                                    1-  117     	extern	_pwm1Stop
                                    1-  118     	extern	_pwm1Init
                                    1-  119     	extern	_LED6ON
                                    1-  120     	extern	_LED5ON
                                    1-  121     	extern	_LED4ON
                                    1-  122     	extern	_LED3ON
                                    1-  123     	extern	_LED2ON
                                    1-  124     	extern	_LED1ON
                                    1-  125     	extern	_LedInput
                                    1-  126     	extern	_ledShow
                                    1-  127     	extern	_initSys
                                    1-  128     	extern	_powerOff
                                    1-  129     	extern	_keyCtr
                                    1-  130     	extern	_isr
                                    1-  131     	extern	_main
                                    1-  132     	extern	_Status
                                    1-  133     	extern	_duty
                                    1-  134     	extern	_intCount
                                    1-  135     	extern	_count500ms
                                    1-  136     	extern	_keyCount
                                    1-  137     	extern	_workStep
                                    1-  138     	extern	_ledStep
                                    1-  139     	extern	_fgCount
                                    1-  140     	extern	_fgPRD
                                    1-  141     	extern	_preFG
                                    1-  142     	extern	_maxDuty
                                    1-  143     	extern	_pwStep
                                    1-  144     	extern	_R_AIN4_DATA
                                    1-  145     	extern	_R_AIN4_DATA_LB
                                    1-  146     	extern	_R_AIN3_DATA
                                    1-  147     	extern	_R_AIN3_DATA_LB
                                    1-  148     	extern	_R_AIN2_DATA
                                    1-  149     	extern	_R_AIN2_DATA_LB
                                    1-  150     	extern	_chrgTime
                                    1-  151     	extern	_startStep
                                    1-  152     	extern	_sleepTime
                                    1-  153     	extern	_count200ms
                                    1-  154     	extern	_count1s
                                    1-  155     	extern	_count900s
                                    1-  156     	extern	_lowBatTime
                                    1-  157     	extern	_ledTime
                                    1-  158     	extern	_overCount
                                    1-  159     	extern	_chrgCount
                                    1-  160     	extern	_ledLightTime
                                    1-  161     	extern	_currentDuty
                                    1-  162     	extern	_fullCount
                                    1-  163     	extern	_shanshuoTime
                                    1-  164     	extern	_firstTime
                                    1-  165     	extern	_tempDuty
                                    1-  166     	extern	_lowCount
                                    1-  167     	extern	_cDuty
                                    1-  168     	extern	_tempLedStep
                                    1-  169     	extern	_count5S
                                    1-  170     	extern	_ledDeadTime
                                    1-  171     	extern	_lockLedStep
                                    1-  172     	extern	_closeCount
                                    1-  173     	extern	_chrgStep
                                    1-  174     	extern	_debug
                                    1-  176     	extern PSAVE
                                    1-  177     	extern SSAVE
                                    1-  178     	extern WSAVE
                                    1-  179     	extern STK02
                                    1-  180     	extern STK01
                                    1-  181     	extern STK00
                                    1-  183     .segment "uninit", 0x20000040
 20000040                           1-  184     PSAVE:
                                    1-  185     	.res 1
 20000041                           1-  186     SSAVE:
                                    1-  187     	.res 1
 20000042                           1-  188     WSAVE:
                                    1-  189     	.res 1
 20000043                           1-  190     STK02:
                                    1-  191     	.res 1
 20000044                           1-  192     STK01:
                                    1-  193     	.res 1
 20000045                           1-  194     STK00:
                                    1-  195     	.res 1
                                    1-  197     ;--------------------------------------------------------
                                    1-  198     ; global definitions
                                    1-  199     ;--------------------------------------------------------
                                    1-  200     .segment "uninit"
     0000                           1-  201     _R_AIN4_DATA:
                                    1-  202     	.res	2
                                    1-  205     .segment "uninit"
     0000                           1-  206     _R_AIN4_DATA_LB:
                                    1-  207     	.res	1
                                    1-  210     .segment "uninit"
     0000                           1-  211     _R_AIN3_DATA:
                                    1-  212     	.res	2
                                    1-  215     .segment "uninit"
     0000                           1-  216     _R_AIN3_DATA_LB:
                                    1-  217     	.res	1
                                    1-  220     .segment "uninit"
     0000                           1-  221     _R_AIN2_DATA:
                                    1-  222     	.res	2
                                    1-  225     .segment "uninit"
     0000                           1-  226     _R_AIN2_DATA_LB:
                                    1-  227     	.res	1
                                    1-  230     ;--------------------------------------------------------
                                    1-  231     ; absolute symbol definitions
                                    1-  232     ;--------------------------------------------------------
                                    1-  233     ;--------------------------------------------------------
                                    1-  234     ; compiler-defined variables
                                    1-  235     ;--------------------------------------------------------
                                    1-  236     .segment "uninit"
     0000                           1-  237     r0x1062:
                                    1-  238     	.res	1
                                    1-  239     .segment "uninit"
     0000                           1-  240     r0x1059:
                                    1-  241     	.res	1
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x1061:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x1060:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x105F:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x105E:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x105D:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x105C:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x1052:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x105B:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x105A:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1058:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1053:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1054:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x1055:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x1057:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x1032:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x1033:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x1050:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x1051:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x104C:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x104D:
                                    1-  301     	.res	1
                                    1-  302     .segment "uninit"
     0000                           1-  303     r0x1046:
                                    1-  304     	.res	1
                                    1-  305     .segment "uninit"
     0000                           1-  306     r0x1049:
                                    1-  307     	.res	1
                                    1-  308     .segment "uninit"
     0000                           1-  309     r0x1040:
                                    1-  310     	.res	1
                                    1-  311     .segment "uninit"
     0000                           1-  312     r0x1041:
                                    1-  313     	.res	1
                                    1-  314     .segment "uninit"
     0000                           1-  315     r0x1042:
                                    1-  316     	.res	1
                                    1-  317     .segment "uninit"
     0000                           1-  318     r0x1045:
                                    1-  319     	.res	1
                                    1-  320     .segment "uninit"
     0000                           1-  321     r0x103A:
                                    1-  322     	.res	1
                                    1-  323     .segment "uninit"
     0000                           1-  324     r0x103B:
                                    1-  325     	.res	1
                                    1-  326     .segment "uninit"
     0000                           1-  327     r0x103C:
                                    1-  328     	.res	1
                                    1-  329     .segment "uninit"
     0000                           1-  330     r0x103F:
                                    1-  331     	.res	1
                                    1-  332     .segment "uninit"
     0000                           1-  333     r0x1034:
                                    1-  334     	.res	1
                                    1-  335     .segment "uninit"
     0000                           1-  336     r0x1035:
                                    1-  337     	.res	1
                                    1-  338     .segment "uninit"
     0000                           1-  339     r0x1036:
                                    1-  340     	.res	1
                                    1-  341     .segment "uninit"
     0000                           1-  342     r0x1039:
                                    1-  343     	.res	1
                                    1-  344     ;--------------------------------------------------------
                                    1-  345     ; initialized data
                                    1-  346     ;--------------------------------------------------------
                                    1-  348     .segment "idata"
     0000                           1-  349     _Status:
     0000 0000                      1-  350     	dw	0x00
                                    1-  354     .segment "idata"
     0000                           1-  355     _duty:
     0000 0000 0000                 1-  356     	dw	0x00, 0x00
                                    1-  360     .segment "idata"
     0000                           1-  361     _intCount:
     0000 0000                      1-  362     	dw	0x00
                                    1-  366     .segment "idata"
     0000                           1-  367     _count500ms:
     0000 0000                      1-  368     	dw	0x00
                                    1-  372     .segment "idata"
     0000                           1-  373     _keyCount:
     0000 0000                      1-  374     	dw	0x00
                                    1-  378     .segment "idata"
     0000                           1-  379     _workStep:
     0000 0000                      1-  380     	dw	0x00
                                    1-  384     .segment "idata"
     0000                           1-  385     _ledStep:
     0000 0000                      1-  386     	dw	0x00
                                    1-  390     .segment "idata"
     0000                           1-  391     _fgCount:
     0000 0000 0000                 1-  392     	dw	0x00, 0x00
                                    1-  396     .segment "idata"
     0000                           1-  397     _fgPRD:
     0000 0000 0000                 1-  398     	dw	0x00, 0x00
                                    1-  402     .segment "idata"
     0000                           1-  403     _preFG:
     0000 0000                      1-  404     	dw	0x00
                                    1-  408     .segment "idata"
     0000                           1-  409     _maxDuty:
     0000 0000                      1-  410     	dw	0x00
                                    1-  414     .segment "idata"
     0000                           1-  415     _pwStep:
     0000 0000                      1-  416     	dw	0x00
                                    1-  420     .segment "idata"
     0000                           1-  421     _chrgTime:
     0000 0000 0000                 1-  422     	dw	0x00, 0x00
                                    1-  426     .segment "idata"
     0000                           1-  427     _startStep:
     0000 0000                      1-  428     	dw	0x00
                                    1-  432     .segment "idata"
     0000                           1-  433     _sleepTime:
     0000 0000 0000                 1-  434     	dw	0x00, 0x00
                                    1-  438     .segment "idata"
     0000                           1-  439     _count200ms:
     0000 0000                      1-  440     	dw	0x00
                                    1-  444     .segment "idata"
     0000                           1-  445     _count1s:
     0000 0000                      1-  446     	dw	0x00
                                    1-  450     .segment "idata"
     0000                           1-  451     _count900s:
     0000 0000 0000                 1-  452     	dw	0x00, 0x00
                                    1-  456     .segment "idata"
     0000                           1-  457     _lowBatTime:
     0000 0000                      1-  458     	dw	0x00
                                    1-  462     .segment "idata"
     0000                           1-  463     _ledTime:
     0000 0000                      1-  464     	dw	0x00
                                    1-  468     .segment "idata"
     0000                           1-  469     _overCount:
     0000 0000                      1-  470     	dw	0x00
                                    1-  474     .segment "idata"
     0000                           1-  475     _chrgCount:
     0000 0000                      1-  476     	dw	0x00
                                    1-  480     .segment "idata"
     0000                           1-  481     _ledLightTime:
     0000 0000                      1-  482     	dw	0x00
                                    1-  486     .segment "idata"
     0000                           1-  487     _currentDuty:
     0000 0000                      1-  488     	dw	0x00
                                    1-  492     .segment "idata"
     0000                           1-  493     _fullCount:
     0000 0000                      1-  494     	dw	0x00
                                    1-  498     .segment "idata"
     0000                           1-  499     _shanshuoTime:
     0000 0000                      1-  500     	dw	0x00
                                    1-  504     .segment "idata"
     0000                           1-  505     _firstTime:
     0000 0000                      1-  506     	dw	0x00
                                    1-  510     .segment "idata"
     0000                           1-  511     _tempDuty:
     0000 0000                      1-  512     	dw	0x00
                                    1-  516     .segment "idata"
     0000                           1-  517     _lowCount:
     0000 0000                      1-  518     	dw	0x00
                                    1-  522     .segment "idata"
     0000                           1-  523     _cDuty:
     0000 0000                      1-  524     	dw	0x00
                                    1-  528     .segment "idata"
     0000                           1-  529     _tempLedStep:
     0000 0000                      1-  530     	dw	0x00
                                    1-  534     .segment "idata"
     0000                           1-  535     _count5S:
     0000 0000 0000                 1-  536     	dw	0x00, 0x00
                                    1-  540     .segment "idata"
     0000                           1-  541     _ledDeadTime:
     0000 0000                      1-  542     	dw	0x00
                                    1-  546     .segment "idata"
     0000                           1-  547     _lockLedStep:
     0000 0000                      1-  548     	dw	0x00
                                    1-  552     .segment "idata"
     0000                           1-  553     _closeCount:
     0000 0000 0000                 1-  554     	dw	0x00, 0x00
                                    1-  558     .segment "idata"
     0000                           1-  559     _chrgStep:
     0000 0000                      1-  560     	dw	0x00
                                    1-  564     .segment "idata"
     0000                           1-  565     _debug:
     0000 0000                      1-  566     	dw	0x00
                                    1-  569     ;--------------------------------------------------------
                                    1-  570     ; overlayable items in internal ram 
                                    1-  571     ;--------------------------------------------------------
                                    1-  572     ;	udata_ovr
                                    1-  573     ;--------------------------------------------------------
                                    1-  574     ; reset vector 
                                    1-  575     ;--------------------------------------------------------
                                    1-  576     ORG	0x0000
     0000 3rrr                      1-  577     	LGOTO	__nyc_ny8_startup
                                    1-  578     ;--------------------------------------------------------
                                    1-  579     ; interrupt and initialization code
                                    1-  580     ;--------------------------------------------------------
                                    1-  581     ORG 0x0008
     0008 3rrr                      1-  582     	lgoto	__sdcc_interrupt
                                    1-  584     .segment "code"
     0000                           1-  585     __sdcc_interrupt:
                                    1-  586     ;***
                                    1-  587     ;  pBlock Stats: dbName = I
                                    1-  588     ;***
                                    1-  589     ;2 compiler assigned registers:
                                    1-  590     ;   STK00
                                    1-  591     ;   STK01
                                    1-  592     ;; Starting pCode block
     0000                           1-  593     _isr:
                                    1-  594     ; 0 exit points
                                    1-  595     	.line	114, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  596     	MOVAR	WSAVE
     0001 1503                      1-  597     	SWAPR	STATUS,W
     0002 0283                      1-  598     	CLRR	STATUS
     0003 00rr                      1-  599     	MOVAR	SSAVE
     0004 010A                      1-  600     	MOVR	PCHBUF,W
     0005 028A                      1-  601     	CLRR	PCHBUF
     0006 00rr                      1-  602     	MOVAR	PSAVE
     0007 0104                      1-  603     	MOVR	FSR,W
                                    1-  604     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  605     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  606     	MOVR	STK00,W
                                    1-  607     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  608     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  609     	MOVR	STK01,W
                                    1-  610     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  611     	MOVAR	___sdcc_saved_stk01
                                    1-  612     	.line	116, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  613     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  614     	LGOTO	_00128_DS_
                                    1-  615     	.line	118, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  616     	MOVIA	0x37
     0013 03rr                      1-  617     	ADDAR	_TMR0,F
                                    1-  618     	.line	120, "main.c"; 	if(++intCount >= 100)
                                    1-  619     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  620     	INCR	_intCount,F
                                    1-  621     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  622     	MOVIA	0x64
     0017 04rr                      1-  623     	SUBAR	_intCount,W
     0018 0803                      1-  624     	BTRSS	STATUS,0
     0019 3rrr                      1-  625     	LGOTO	_00128_DS_
                                    1-  626     	.line	122, "main.c"; 	IntFlag = 1;
                                    1-  627     	BANKSEL	_Status
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 18rr                      1-  628     	BSR	_Status,0
                                    1-  629     	.line	123, "main.c"; 	intCount = 0;
                                    1-  630     	BANKSEL	_intCount
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 02rr                      1-  631     	CLRR	_intCount
                                    1-  632     	.line	124, "main.c"; 	if(workStep)
                                    1-  633     	BANKSEL	_workStep
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1-  634     	MOVR	_workStep,W
     0020 0D03                      1-  635     	BTRSC	STATUS,2
     0021 3rrr                      1-  636     	LGOTO	_00106_DS_
                                    1-  637     	.line	125, "main.c"; 	++fgCount;
                                    1-  638     	BANKSEL	_fgCount
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 05rr                      1-  639     	INCR	_fgCount,F
     0024 0D03                      1-  640     	BTRSC	STATUS,2
     0025 05rr                      1-  641     	INCR	(_fgCount + 1),F
     0026                           1-  642     _00106_DS_:
                                    1-  643     	.line	126, "main.c"; 	if(++count500ms >= 40)
                                    1-  644     	BANKSEL	_count500ms
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 05rr                      1-  645     	INCR	_count500ms,F
                                    1-  646     ;;unsigned compare: left < lit (0x28=40), size=1
     0028 2128                      1-  647     	MOVIA	0x28
     0029 04rr                      1-  648     	SUBAR	_count500ms,W
     002A 0C03                      1-  649     	BTRSC	STATUS,0
                                    1-  650     	.line	127, "main.c"; 	count500ms = 0;
     002B 02rr                      1-  651     	CLRR	_count500ms
                                    1-  652     	.line	128, "main.c"; 	if(++count200ms >= 20)
                                    1-  653     	BANKSEL	_count200ms
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1-  654     	INCR	_count200ms,F
     002E 2114                      1-  655     	MOVIA	0x14
     002F 04rr                      1-  656     	SUBAR	_count200ms,W
     0030 0803                      1-  657     	BTRSS	STATUS,0
     0031 3rrr                      1-  658     	LGOTO	_00112_DS_
                                    1-  659     	.line	130, "main.c"; 	count200ms = 0;
     0032 02rr                      1-  660     	CLRR	_count200ms
                                    1-  661     	.line	131, "main.c"; 	if(ledDeadTime > 0)
                                    1-  662     	BANKSEL	_ledDeadTime
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1-  663     	MOVR	_ledDeadTime,W
     0035 0903                      1-  664     	BTRSS	STATUS,2
                                    1-  665     	.line	132, "main.c"; 	--ledDeadTime;
     0036 06rr                      1-  666     	DECR	_ledDeadTime,F
     0037                           1-  667     _00112_DS_:
                                    1-  668     	.line	134, "main.c"; 	if(++count1s >= 100)
                                    1-  669     	BANKSEL	_count1s
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 05rr                      1-  670     	INCR	_count1s,F
     0039 2164                      1-  671     	MOVIA	0x64
     003A 04rr                      1-  672     	SUBAR	_count1s,W
     003B 0803                      1-  673     	BTRSS	STATUS,0
     003C 3rrr                      1-  674     	LGOTO	_00128_DS_
                                    1-  675     	.line	136, "main.c"; 	count1s = 0;
     003D 02rr                      1-  676     	CLRR	_count1s
                                    1-  677     	.line	137, "main.c"; 	if(chrgFlag == 1 && pwStep == 6)
                                    1-  678     	BANKSEL	_Status
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 09rr                      1-  679     	BTRSS	_Status,3
     0040 3rrr                      1-  680     	LGOTO	_00114_DS_
                                    1-  681     	BANKSEL	_pwStep
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 01rr                      1-  682     	MOVR	_pwStep,W
     0043 2406                      1-  683     	XORIA	0x06
     0044 0903                      1-  684     	BTRSS	STATUS,2
     0045 3rrr                      1-  685     	LGOTO	_00114_DS_
                                    1-  686     	.line	139, "main.c"; 	++chrgTime;
                                    1-  687     	BANKSEL	_chrgTime
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 05rr                      1-  688     	INCR	_chrgTime,F
     0048 0D03                      1-  689     	BTRSC	STATUS,2
     0049 05rr                      1-  690     	INCR	(_chrgTime + 1),F
                                    1-  691     	.line	140, "main.c"; 	PWM1DUTY = 9;
     004A 2109                      1-  692     	MOVIA	0x09
     004B 00rr                      1-  693     	SFUN	_PWM1DUTY
     004C                           1-  694     _00114_DS_:
                                    1-  695     	.line	142, "main.c"; 	if(ledLightTime > 0)
                                    1-  696     	BANKSEL	_ledLightTime
     004C rrrr                      3-   71 m1      .banksel ram_address
     004D 01rr                      1-  697     	MOVR	_ledLightTime,W
     004E 0903                      1-  698     	BTRSS	STATUS,2
                                    1-  699     	.line	143, "main.c"; 	--ledLightTime;
     004F 06rr                      1-  700     	DECR	_ledLightTime,F
                                    1-  701     	.line	144, "main.c"; 	if(shanshuoTime > 0)
                                    1-  702     	BANKSEL	_shanshuoTime
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 01rr                      1-  703     	MOVR	_shanshuoTime,W
     0052 0903                      1-  704     	BTRSS	STATUS,2
                                    1-  705     	.line	145, "main.c"; 	--shanshuoTime;
     0053 06rr                      1-  706     	DECR	_shanshuoTime,F
                                    1-  707     	.line	146, "main.c"; 	if(workStep)
                                    1-  708     	BANKSEL	_workStep
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 01rr                      1-  709     	MOVR	_workStep,W
     0056 0D03                      1-  710     	BTRSC	STATUS,2
     0057 3rrr                      1-  711     	LGOTO	_00121_DS_
                                    1-  712     	.line	148, "main.c"; 	++count900s;
                                    1-  713     	BANKSEL	_count900s
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 05rr                      1-  714     	INCR	_count900s,F
     005A 0D03                      1-  715     	BTRSC	STATUS,2
     005B 05rr                      1-  716     	INCR	(_count900s + 1),F
     005C 3rrr                      1-  717     	LGOTO	_00128_DS_
     005D                           1-  718     _00121_DS_:
                                    1-  719     	.line	152, "main.c"; 	count900s = 0;
                                    1-  720     	BANKSEL	_count900s
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 02rr                      1-  721     	CLRR	_count900s
     005F 02rr                      1-  722     	CLRR	(_count900s + 1)
     0060                           1-  723     _00128_DS_:
                                    1-  724     	.line	161, "main.c"; 	if(INTFbits.PABIF)
     0060 08rr                      1-  725     	BTRSS	_INTFbits,1
     0061 3rrr                      1-  726     	LGOTO	_00130_DS_
                                    1-  727     	.line	163, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0062 21FD                      1-  728     	MOVIA	0xfd
     0063 00rr                      1-  729     	MOVAR	_INTF
     0064                           1-  730     _00130_DS_:
                                    1-  731     	.line	166, "main.c"; 	INTF = 0;
     0064 02rr                      1-  732     	CLRR	_INTF
                                    1-  733     	.line	168, "main.c"; 	}
                                    1-  734     	BANKSEL	___sdcc_saved_stk01
     0065 rrrr                      3-   71 m1      .banksel ram_address
     0066 01rr                      1-  735     	MOVR	___sdcc_saved_stk01,W
     0067 00rr                      1-  736     	MOVAR	STK01
                                    1-  737     	BANKSEL	___sdcc_saved_stk00
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 01rr                      1-  738     	MOVR	___sdcc_saved_stk00,W
     006A 00rr                      1-  739     	MOVAR	STK00
                                    1-  740     	BANKSEL	___sdcc_saved_fsr
     006B rrrr                      3-   71 m1      .banksel ram_address
     006C 01rr                      1-  741     	MOVR	___sdcc_saved_fsr,W
     006D 0084                      1-  742     	MOVAR	FSR
     006E 01rr                      1-  743     	MOVR	PSAVE,W
     006F 008A                      1-  744     	MOVAR	PCHBUF
     0070 0283                      1-  745     	CLRR	STATUS
     0071 15rr                      1-  746     	SWAPR	SSAVE,W
     0072 0083                      1-  747     	MOVAR	STATUS
     0073 15rr                      1-  748     	SWAPR	WSAVE,F
     0074 15rr                      1-  749     	SWAPR	WSAVE,W
     0075                           1-  750     END_OF_INTERRUPT:
     0075 0011                      1-  751     	RETIE	
                                    1-  753     ;--------------------------------------------------------
                                    1-  754     ; code
                                    1-  755     ;--------------------------------------------------------
                                    1-  756     ;***
                                    1-  757     ;  pBlock Stats: dbName = M
                                    1-  758     ;***
                                    1-  759     ;has an exit
                                    1-  760     ;functions called:
                                    1-  761     ;   _initSys
                                    1-  762     ;   _initAD
                                    1-  763     ;   _ledShow
                                    1-  764     ;   _pwmStop
                                    1-  765     ;   _powerOff
                                    1-  766     ;   _keyCtr
                                    1-  767     ;   _checkBatAD
                                    1-  768     ;   _checkOutA
                                    1-  769     ;   _checkChrgV
                                    1-  770     ;   _chrgCtr
                                    1-  771     ;   _gotoSleep
                                    1-  772     ;   _powerOff
                                    1-  773     ;   _initSys
                                    1-  774     ;   _initAD
                                    1-  775     ;   _ledShow
                                    1-  776     ;   _pwmStop
                                    1-  777     ;   _powerOff
                                    1-  778     ;   _keyCtr
                                    1-  779     ;   _checkBatAD
                                    1-  780     ;   _checkOutA
                                    1-  781     ;   _checkChrgV
                                    1-  782     ;   _chrgCtr
                                    1-  783     ;   _gotoSleep
                                    1-  784     ;   _powerOff
                                    1-  785     ;; Starting pCode block
                                    1-  786     .segment "code"; module=main, function=_main
     0000                           1-  788     _main:
                                    1-  789     ; 2 exit points
                                    1-  790     	.line	172, "main.c"; 	initSys();
     0000 2rrr                      1-  791     	LCALL	_initSys
                                    1-  792     	.line	173, "main.c"; 	initAD();
     0001 2rrr                      1-  793     	LCALL	_initAD
     0002                           1-  794     _00184_DS_:
                                    1-  795     	.line	176, "main.c"; 	CLRWDT();
     0002 0002                      1-  796     	clrwdt
                                    1-  797     	.line	177, "main.c"; 	ledShow();
     0003 2rrr                      1-  798     	LCALL	_ledShow
                                    1-  799     	.line	178, "main.c"; 	if(workStep > 0 && tempDuty >= 40)
                                    1-  800     	BANKSEL	_workStep
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1-  801     	MOVR	_workStep,W
     0006 0D03                      1-  802     	BTRSC	STATUS,2
     0007 3rrr                      1-  803     	LGOTO	_00141_DS_
                                    1-  804     ;;unsigned compare: left < lit (0x28=40), size=1
     0008 2128                      1-  805     	MOVIA	0x28
                                    1-  806     	BANKSEL	_tempDuty
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 04rr                      1-  807     	SUBAR	_tempDuty,W
     000B 0803                      1-  808     	BTRSS	STATUS,0
     000C 3rrr                      1-  809     	LGOTO	_00141_DS_
                                    1-  810     	.line	180, "main.c"; 	if(cDuty > tempDuty)
                                    1-  811     	BANKSEL	_cDuty
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1-  812     	MOVR	_cDuty,W
                                    1-  813     	BANKSEL	_tempDuty
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 04rr                      1-  814     	SUBAR	_tempDuty,W
     0011 0C03                      1-  815     	BTRSC	STATUS,0
     0012 3rrr                      1-  816     	LGOTO	_00138_DS_
                                    1-  817     	.line	182, "main.c"; 	cDuty--;
                                    1-  818     	BANKSEL	_cDuty
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 06rr                      1-  819     	DECR	_cDuty,F
                                    1-  820     	.line	183, "main.c"; 	PWM2DUTY = cDuty;
     0015 01rr                      1-  821     	MOVR	_cDuty,W
     0016 00rr                      1-  822     	SFUN	_PWM2DUTY
     0017 3rrr                      1-  823     	LGOTO	_00141_DS_
     0018                           1-  824     _00138_DS_:
                                    1-  825     	.line	185, "main.c"; 	else if(cDuty < tempDuty)
                                    1-  826     	BANKSEL	_tempDuty
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1-  827     	MOVR	_tempDuty,W
                                    1-  828     	BANKSEL	_cDuty
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 04rr                      1-  829     	SUBAR	_cDuty,W
     001C 0C03                      1-  830     	BTRSC	STATUS,0
     001D 3rrr                      1-  831     	LGOTO	_00141_DS_
                                    1-  832     	.line	187, "main.c"; 	cDuty++;
     001E 05rr                      1-  833     	INCR	_cDuty,F
                                    1-  834     	.line	188, "main.c"; 	PWM2DUTY = cDuty;
     001F 01rr                      1-  835     	MOVR	_cDuty,W
     0020 00rr                      1-  836     	SFUN	_PWM2DUTY
     0021                           1-  837     _00141_DS_:
                                    1-  838     	.line	191, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  839     	BANKSEL	_workStep
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1-  840     	MOVR	_workStep,W
     0023 0D03                      1-  841     	BTRSC	STATUS,2
     0024 3rrr                      1-  842     	LGOTO	_00144_DS_
                                    1-  843     	BANKSEL	_currentDuty
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 01rr                      1-  844     	MOVR	_currentDuty,W
                                    1-  845     	BANKSEL	_maxDuty
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 04rr                      1-  846     	SUBAR	_maxDuty,W
     0029 0C03                      1-  847     	BTRSC	STATUS,0
     002A 3rrr                      1-  848     	LGOTO	_00144_DS_
                                    1-  849     	.line	193, "main.c"; 	currentDuty = currentDuty - 1;
                                    1-  850     	BANKSEL	_currentDuty
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 06rr                      1-  851     	DECR	_currentDuty,F
                                    1-  852     	.line	194, "main.c"; 	PWM2DUTY = currentDuty;
     002D 01rr                      1-  853     	MOVR	_currentDuty,W
     002E 00rr                      1-  854     	SFUN	_PWM2DUTY
                                    1-  855     	.line	195, "main.c"; 	cDuty = currentDuty;
     002F 01rr                      1-  856     	MOVR	_currentDuty,W
                                    1-  857     	BANKSEL	_cDuty
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 00rr                      1-  858     	MOVAR	_cDuty
     0032                           1-  859     _00144_DS_:
                                    1-  860     	.line	197, "main.c"; 	if(!IntFlag)
                                    1-  861     	BANKSEL	_Status
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 08rr                      1-  862     	BTRSS	_Status,0
     0034 3rrr                      1-  863     	LGOTO	_00184_DS_
                                    1-  864     	.line	199, "main.c"; 	IntFlag = 0;
     0035 1Crr                      1-  865     	BCR	_Status,0
                                    1-  866     	.line	201, "main.c"; 	if(shanshuoTime == 0 && pwStep == 0 && workStep > 0)
                                    1-  867     	BANKSEL	_shanshuoTime
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 01rr                      1-  868     	MOVR	_shanshuoTime,W
     0038 0903                      1-  869     	BTRSS	STATUS,2
     0039 3rrr                      1-  870     	LGOTO	_00151_DS_
                                    1-  871     	BANKSEL	_pwStep
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 01rr                      1-  872     	MOVR	_pwStep,W
     003C 0903                      1-  873     	BTRSS	STATUS,2
     003D 3rrr                      1-  874     	LGOTO	_00151_DS_
                                    1-  875     	BANKSEL	_workStep
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 01rr                      1-  876     	MOVR	_workStep,W
     0040 0D03                      1-  877     	BTRSC	STATUS,2
     0041 3rrr                      1-  878     	LGOTO	_00151_DS_
                                    1-  879     	.line	203, "main.c"; 	if(++closeCount >= 1000)
                                    1-  880     	BANKSEL	_closeCount
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 05rr                      1-  881     	INCR	_closeCount,F
     0044 0D03                      1-  882     	BTRSC	STATUS,2
     0045 05rr                      1-  883     	INCR	(_closeCount + 1),F
                                    1-  884     ;;unsigned compare: left < lit (0x3E8=1000), size=2
     0046 2103                      1-  885     	MOVIA	0x03
     0047 04rr                      1-  886     	SUBAR	(_closeCount + 1),W
     0048 0903                      1-  887     	BTRSS	STATUS,2
     0049 3rrr                      1-  888     	LGOTO	_00276_DS_
     004A 21E8                      1-  889     	MOVIA	0xe8
     004B 04rr                      1-  890     	SUBAR	_closeCount,W
     004C                           1-  891     _00276_DS_:
     004C 0803                      1-  892     	BTRSS	STATUS,0
     004D 3rrr                      1-  893     	LGOTO	_00152_DS_
                                    1-  894     	.line	205, "main.c"; 	closeCount = 0;
                                    1-  895     	BANKSEL	_closeCount
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 02rr                      1-  896     	CLRR	_closeCount
     0050 02rr                      1-  897     	CLRR	(_closeCount + 1)
                                    1-  898     	.line	206, "main.c"; 	workStep = 0;
                                    1-  899     	BANKSEL	_workStep
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 02rr                      1-  900     	CLRR	_workStep
                                    1-  901     	.line	207, "main.c"; 	ledStep = 0;
                                    1-  902     	BANKSEL	_ledStep
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 02rr                      1-  903     	CLRR	_ledStep
                                    1-  904     	.line	208, "main.c"; 	pwmStop();
     0055 2rrr                      1-  905     	LCALL	_pwmStop
     0056 3rrr                      1-  906     	LGOTO	_00152_DS_
     0057                           1-  907     _00151_DS_:
                                    1-  908     	.line	213, "main.c"; 	closeCount = 0;
                                    1-  909     	BANKSEL	_closeCount
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 02rr                      1-  910     	CLRR	_closeCount
     0059 02rr                      1-  911     	CLRR	(_closeCount + 1)
                                    1-  912     ;;unsigned compare: left < lit (0x5=5), size=1
     005A                           1-  913     _00152_DS_:
                                    1-  914     	.line	216, "main.c"; 	if(overCount >= 5 && workStep > 0)
     005A 2105                      1-  915     	MOVIA	0x05
                                    1-  916     	BANKSEL	_overCount
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 04rr                      1-  917     	SUBAR	_overCount,W
     005D 0803                      1-  918     	BTRSS	STATUS,0
     005E 3rrr                      1-  919     	LGOTO	_00158_DS_
                                    1-  920     	BANKSEL	_workStep
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 01rr                      1-  921     	MOVR	_workStep,W
     0061 0D03                      1-  922     	BTRSC	STATUS,2
     0062 3rrr                      1-  923     	LGOTO	_00158_DS_
                                    1-  924     	.line	218, "main.c"; 	if(++count5S > 500)
                                    1-  925     	BANKSEL	_count5S
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 05rr                      1-  926     	INCR	_count5S,F
     0065 0D03                      1-  927     	BTRSC	STATUS,2
     0066 05rr                      1-  928     	INCR	(_count5S + 1),F
                                    1-  929     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  930     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     0067 2101                      1-  931     	MOVIA	0x01
     0068 04rr                      1-  932     	SUBAR	(_count5S + 1),W
     0069 0903                      1-  933     	BTRSS	STATUS,2
     006A 3rrr                      1-  934     	LGOTO	_00278_DS_
     006B 21F5                      1-  935     	MOVIA	0xf5
     006C 04rr                      1-  936     	SUBAR	_count5S,W
     006D                           1-  937     _00278_DS_:
     006D 0803                      1-  938     	BTRSS	STATUS,0
     006E 3rrr                      1-  939     	LGOTO	_00159_DS_
                                    1-  940     	.line	220, "main.c"; 	overCount = 0;
                                    1-  941     	BANKSEL	_overCount
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 02rr                      1-  942     	CLRR	_overCount
                                    1-  943     	.line	221, "main.c"; 	count5S = 0;
                                    1-  944     	BANKSEL	_count5S
     0071 rrrr                      3-   71 m1      .banksel ram_address
     0072 02rr                      1-  945     	CLRR	_count5S
     0073 02rr                      1-  946     	CLRR	(_count5S + 1)
                                    1-  947     	.line	222, "main.c"; 	ledDeadTime = 25;
     0074 2119                      1-  948     	MOVIA	0x19
                                    1-  949     	BANKSEL	_ledDeadTime
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 00rr                      1-  950     	MOVAR	_ledDeadTime
                                    1-  951     	.line	223, "main.c"; 	powerOff();
     0077 2rrr                      1-  952     	LCALL	_powerOff
     0078 3rrr                      1-  953     	LGOTO	_00159_DS_
     0079                           1-  954     _00158_DS_:
                                    1-  955     	.line	228, "main.c"; 	count5S = 0;
                                    1-  956     	BANKSEL	_count5S
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 02rr                      1-  957     	CLRR	_count5S
     007B 02rr                      1-  958     	CLRR	(_count5S + 1)
     007C                           1-  959     _00159_DS_:
                                    1-  960     	.line	230, "main.c"; 	if(chrgFlag == 0)
                                    1-  961     	BANKSEL	_Status
     007C rrrr                      3-   71 m1      .banksel ram_address
     007D 09rr                      1-  962     	BTRSS	_Status,3
                                    1-  963     	.line	231, "main.c"; 	keyCtr();
     007E 2rrr                      1-  964     	LCALL	_keyCtr
     007F                           1-  965     _00162_DS_:
                                    1-  966     	.line	232, "main.c"; 	if(count200ms < 5)
     007F 2105                      1-  967     	MOVIA	0x05
                                    1-  968     	BANKSEL	_count200ms
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 04rr                      1-  969     	SUBAR	_count200ms,W
     0082 0C03                      1-  970     	BTRSC	STATUS,0
     0083 3rrr                      1-  971     	LGOTO	_00171_DS_
                                    1-  972     	.line	234, "main.c"; 	checkBatAD();
     0084 2rrr                      1-  973     	LCALL	_checkBatAD
     0085 3rrr                      1-  974     	LGOTO	_00172_DS_
                                    1-  975     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  976     ;;unsigned compare: left >= lit (0x9=9), size=1
     0086                           1-  977     _00171_DS_:
                                    1-  978     	.line	236, "main.c"; 	else if(count200ms > 8 && count200ms < 11)
     0086 2109                      1-  979     	MOVIA	0x09
                                    1-  980     	BANKSEL	_count200ms
     0087 rrrr                      3-   71 m1      .banksel ram_address
     0088 04rr                      1-  981     	SUBAR	_count200ms,W
     0089 0803                      1-  982     	BTRSS	STATUS,0
     008A 3rrr                      1-  983     	LGOTO	_00167_DS_
                                    1-  984     ;;unsigned compare: left < lit (0xB=11), size=1
     008B 210B                      1-  985     	MOVIA	0x0b
     008C 04rr                      1-  986     	SUBAR	_count200ms,W
     008D 0C03                      1-  987     	BTRSC	STATUS,0
     008E 3rrr                      1-  988     	LGOTO	_00167_DS_
                                    1-  989     	.line	238, "main.c"; 	checkOutA();
     008F 2rrr                      1-  990     	LCALL	_checkOutA
     0090 3rrr                      1-  991     	LGOTO	_00172_DS_
                                    1-  992     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  993     ;;unsigned compare: left >= lit (0xE=14), size=1
     0091                           1-  994     _00167_DS_:
                                    1-  995     	.line	240, "main.c"; 	else if(count200ms > 13 && count200ms < 16)
     0091 210E                      1-  996     	MOVIA	0x0e
                                    1-  997     	BANKSEL	_count200ms
     0092 rrrr                      3-   71 m1      .banksel ram_address
     0093 04rr                      1-  998     	SUBAR	_count200ms,W
     0094 0803                      1-  999     	BTRSS	STATUS,0
     0095 3rrr                      1- 1000     	LGOTO	_00172_DS_
                                    1- 1001     ;;unsigned compare: left < lit (0x10=16), size=1
     0096 2110                      1- 1002     	MOVIA	0x10
     0097 04rr                      1- 1003     	SUBAR	_count200ms,W
     0098 0803                      1- 1004     	BTRSS	STATUS,0
                                    1- 1005     	.line	242, "main.c"; 	checkChrgV();
     0099 2rrr                      1- 1006     	LCALL	_checkChrgV
     009A                           1- 1007     _00172_DS_:
                                    1- 1008     	.line	245, "main.c"; 	chrgCtr();
     009A 2rrr                      1- 1009     	LCALL	_chrgCtr
                                    1- 1010     	.line	248, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x08) == 0 && ledLightTime == 0 && ledDeadTime == 0)
                                    1- 1011     	BANKSEL	_workStep
     009B rrrr                      3-   71 m1      .banksel ram_address
     009C 01rr                      1- 1012     	MOVR	_workStep,W
     009D 0903                      1- 1013     	BTRSS	STATUS,2
     009E 3rrr                      1- 1014     	LGOTO	_00176_DS_
                                    1- 1015     	BANKSEL	_keyCount
     009F rrrr                      3-   71 m1      .banksel ram_address
     00A0 01rr                      1- 1016     	MOVR	_keyCount,W
     00A1 0903                      1- 1017     	BTRSS	STATUS,2
     00A2 3rrr                      1- 1018     	LGOTO	_00176_DS_
                                    1- 1019     	BANKSEL	_PORTA
     00A3 rrrr                      3-   71 m1      .banksel ram_address
     00A4 0Drr                      1- 1020     	BTRSC	_PORTA,3
     00A5 3rrr                      1- 1021     	LGOTO	_00176_DS_
                                    1- 1022     	BANKSEL	_ledLightTime
     00A6 rrrr                      3-   71 m1      .banksel ram_address
     00A7 01rr                      1- 1023     	MOVR	_ledLightTime,W
     00A8 0903                      1- 1024     	BTRSS	STATUS,2
     00A9 3rrr                      1- 1025     	LGOTO	_00176_DS_
                                    1- 1026     	BANKSEL	_ledDeadTime
     00AA rrrr                      3-   71 m1      .banksel ram_address
     00AB 01rr                      1- 1027     	MOVR	_ledDeadTime,W
     00AC 0903                      1- 1028     	BTRSS	STATUS,2
     00AD 3rrr                      1- 1029     	LGOTO	_00176_DS_
                                    1- 1030     	.line	250, "main.c"; 	if(++sleepTime > 2000)
                                    1- 1031     	BANKSEL	_sleepTime
     00AE rrrr                      3-   71 m1      .banksel ram_address
     00AF 05rr                      1- 1032     	INCR	_sleepTime,F
     00B0 0D03                      1- 1033     	BTRSC	STATUS,2
     00B1 05rr                      1- 1034     	INCR	(_sleepTime + 1),F
                                    1- 1035     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1036     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     00B2 2107                      1- 1037     	MOVIA	0x07
     00B3 04rr                      1- 1038     	SUBAR	(_sleepTime + 1),W
     00B4 0903                      1- 1039     	BTRSS	STATUS,2
     00B5 3rrr                      1- 1040     	LGOTO	_00284_DS_
     00B6 21D1                      1- 1041     	MOVIA	0xd1
     00B7 04rr                      1- 1042     	SUBAR	_sleepTime,W
     00B8                           1- 1043     _00284_DS_:
     00B8 0803                      1- 1044     	BTRSS	STATUS,0
     00B9 3rrr                      1- 1045     	LGOTO	_00176_DS_
                                    1- 1046     	.line	252, "main.c"; 	gotoSleep();
     00BA 2rrr                      1- 1047     	LCALL	_gotoSleep
                                    1- 1048     ;;unsigned compare: left < lit (0x384=900), size=2
     00BB                           1- 1049     _00176_DS_:
                                    1- 1050     	.line	256, "main.c"; 	if(count900s >= 900)
     00BB 2103                      1- 1051     	MOVIA	0x03
                                    1- 1052     	BANKSEL	_count900s
     00BC rrrr                      3-   71 m1      .banksel ram_address
     00BD 04rr                      1- 1053     	SUBAR	(_count900s + 1),W
     00BE 0903                      1- 1054     	BTRSS	STATUS,2
     00BF 3rrr                      1- 1055     	LGOTO	_00285_DS_
     00C0 2184                      1- 1056     	MOVIA	0x84
     00C1 04rr                      1- 1057     	SUBAR	_count900s,W
     00C2                           1- 1058     _00285_DS_:
     00C2 0803                      1- 1059     	BTRSS	STATUS,0
     00C3 3rrr                      1- 1060     	LGOTO	_00184_DS_
                                    1- 1061     	.line	258, "main.c"; 	powerOff();
     00C4 2rrr                      1- 1062     	LCALL	_powerOff
     00C5 3rrr                      1- 1063     	LGOTO	_00184_DS_
                                    1- 1064     	.line	262, "main.c"; 	}
                                    1- 1065     	RETURN	
     00C6 0010                      3-   26 m1      ret
                                    1- 1066     ; exit point of _main
                                    1- 1068     ;***
                                    1- 1069     ;  pBlock Stats: dbName = C
                                    1- 1070     ;***
                                    1- 1071     ;has an exit
                                    1- 1072     ;; Starting pCode block
                                    1- 1073     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1075     _F_wait_eoc:
                                    1- 1076     ; 2 exit points
     0000                           1- 1077     _00918_DS_:
                                    1- 1078     	.line	996, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1079     	BTRSS	_ADMDbits,5
     0001 3rrr                      1- 1080     	LGOTO	_00918_DS_
                                    1- 1081     	.line	998, "main.c"; 	}
                                    1- 1082     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 1083     ; exit point of _F_wait_eoc
                                    1- 1085     ;***
                                    1- 1086     ;  pBlock Stats: dbName = C
                                    1- 1087     ;***
                                    1- 1088     ;has an exit
                                    1- 1089     ;functions called:
                                    1- 1090     ;   _delay
                                    1- 1091     ;   _F_wait_eoc
                                    1- 1092     ;   _delay
                                    1- 1093     ;   _F_wait_eoc
                                    1- 1094     ;6 compiler assigned registers:
                                    1- 1095     ;   r0x1034
                                    1- 1096     ;   r0x1035
                                    1- 1097     ;   r0x1036
                                    1- 1098     ;   r0x1037
                                    1- 1099     ;   r0x1038
                                    1- 1100     ;   r0x1039
                                    1- 1101     ;; Starting pCode block
                                    1- 1102     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1104     ;local variable name mapping:
     0000                           1- 1107     _F_AIN2_Convert:
                                    1- 1108     ; 2 exit points
                                    1- 1109     	.line	979, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1110     	BANKSEL	r0x1034
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1111     	MOVAR	r0x1034
                                    1- 1112     	.line	981, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1113     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1114     	CLRR	_R_AIN2_DATA_LB
                                    1- 1115     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1116     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1117     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1118     	.line	983, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1119     	MOVIA	0x92
     0008 00rr                      1- 1120     	MOVAR	_ADMD
                                    1- 1121     	.line	984, "main.c"; 	delay(200);	
     0009 21C8                      1- 1122     	MOVIA	0xc8
     000A 2rrr                      1- 1123     	LCALL	_delay
                                    1- 1124     	.line	985, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1125     	MOVIA	0x01
                                    1- 1126     	BANKSEL	r0x1035
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1127     	MOVAR	r0x1035
     000E                           1- 1128     _00911_DS_:
                                    1- 1129     	BANKSEL	r0x1035
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 1130     	MOVR	r0x1035,W
                                    1- 1131     	BANKSEL	r0x1034
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1- 1132     	SUBAR	r0x1034,W
     0012 0803                      1- 1133     	BTRSS	STATUS,0
     0013 3rrr                      1- 1134     	LGOTO	_00913_DS_
                                    1- 1135     	.line	987, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1136     	BSR	_ADMDbits,6
                                    1- 1137     	.line	988, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0015 2rrr                      1- 1138     	LCALL	_F_wait_eoc
                                    1- 1139     	.line	989, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1140     	MOVIA	0x0f
     0017 10rr                      1- 1141     	ANDAR	_ADR,W
                                    1- 1142     ;;3	MOVAR	r0x1036
                                    1- 1143     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 03rr                      1- 1144     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1145     	.line	990, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1- 1146     	MOVR	_ADD,W
                                    1- 1147     	BANKSEL	r0x1036
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1148     	MOVAR	r0x1036
                                    1- 1149     ;;1	CLRR	r0x1037
                                    1- 1150     ;;112	MOVR	r0x1036,W
                                    1- 1151     ;;110	MOVAR	r0x1038
     001D 2100                      1- 1152     	MOVIA	0x00
                                    1- 1153     	BANKSEL	r0x1039
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1- 1154     	MOVAR	r0x1039
                                    1- 1155     ;;111	MOVR	r0x1038,W
                                    1- 1156     	BANKSEL	r0x1036
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 1157     	MOVR	r0x1036,W
                                    1- 1158     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1- 1159     	ADDAR	_R_AIN2_DATA,F
                                    1- 1160     	BANKSEL	r0x1039
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 1161     	MOVR	r0x1039,W
     0026 0C03                      1- 1162     	BTRSC	STATUS,0
     0027 05rr                      1- 1163     	INCR	r0x1039,W
     0028 0D03                      1- 1164     	BTRSC	STATUS,2
     0029 3rrr                      1- 1165     	LGOTO	_00001_DS_
                                    1- 1166     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 03rr                      1- 1167     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1- 1168     _00001_DS_:
                                    1- 1169     	.line	985, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1170     	BANKSEL	r0x1035
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1- 1171     	INCR	r0x1035,F
     002E 3rrr                      1- 1172     	LGOTO	_00911_DS_
     002F                           1- 1173     _00913_DS_:
                                    1- 1174     	.line	992, "main.c"; 	}
                                    1- 1175     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1- 1176     ; exit point of _F_AIN2_Convert
                                    1- 1178     ;***
                                    1- 1179     ;  pBlock Stats: dbName = C
                                    1- 1180     ;***
                                    1- 1181     ;has an exit
                                    1- 1182     ;functions called:
                                    1- 1183     ;   _delay
                                    1- 1184     ;   _F_wait_eoc
                                    1- 1185     ;   _delay
                                    1- 1186     ;   _F_wait_eoc
                                    1- 1187     ;6 compiler assigned registers:
                                    1- 1188     ;   r0x103A
                                    1- 1189     ;   r0x103B
                                    1- 1190     ;   r0x103C
                                    1- 1191     ;   r0x103D
                                    1- 1192     ;   r0x103E
                                    1- 1193     ;   r0x103F
                                    1- 1194     ;; Starting pCode block
                                    1- 1195     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1- 1197     ;local variable name mapping:
     0000                           1- 1200     _F_AIN3_Convert:
                                    1- 1201     ; 2 exit points
                                    1- 1202     	.line	964, "main.c"; 	void F_AIN3_Convert(char count)
                                    1- 1203     	BANKSEL	r0x103A
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1204     	MOVAR	r0x103A
                                    1- 1205     	.line	966, "main.c"; 	R_AIN3_DATA=R_AIN3_DATA_LB=0x00;   
                                    1- 1206     	BANKSEL	_R_AIN3_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1207     	CLRR	_R_AIN3_DATA_LB
                                    1- 1208     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1209     	CLRR	_R_AIN3_DATA
     0006 02rr                      1- 1210     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1211     	.line	968, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0007 2193                      1- 1212     	MOVIA	0x93
     0008 00rr                      1- 1213     	MOVAR	_ADMD
                                    1- 1214     	.line	969, "main.c"; 	delay(200);	
     0009 21C8                      1- 1215     	MOVIA	0xc8
     000A 2rrr                      1- 1216     	LCALL	_delay
                                    1- 1217     	.line	970, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1218     	MOVIA	0x01
                                    1- 1219     	BANKSEL	r0x103B
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1220     	MOVAR	r0x103B
     000E                           1- 1221     _00902_DS_:
                                    1- 1222     	BANKSEL	r0x103B
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 1223     	MOVR	r0x103B,W
                                    1- 1224     	BANKSEL	r0x103A
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1- 1225     	SUBAR	r0x103A,W
     0012 0803                      1- 1226     	BTRSS	STATUS,0
     0013 3rrr                      1- 1227     	LGOTO	_00904_DS_
                                    1- 1228     	.line	972, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1229     	BSR	_ADMDbits,6
                                    1- 1230     	.line	973, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0015 2rrr                      1- 1231     	LCALL	_F_wait_eoc
                                    1- 1232     	.line	974, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1233     	MOVIA	0x0f
     0017 10rr                      1- 1234     	ANDAR	_ADR,W
                                    1- 1235     ;;3	MOVAR	r0x103C
                                    1- 1236     	BANKSEL	_R_AIN3_DATA_LB
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 03rr                      1- 1237     	ADDAR	_R_AIN3_DATA_LB,F
                                    1- 1238     	.line	975, "main.c"; 	R_AIN3_DATA    += ADD; 
     001A 01rr                      1- 1239     	MOVR	_ADD,W
                                    1- 1240     	BANKSEL	r0x103C
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1241     	MOVAR	r0x103C
                                    1- 1242     ;;1	CLRR	r0x103D
                                    1- 1243     ;;109	MOVR	r0x103C,W
                                    1- 1244     ;;107	MOVAR	r0x103E
     001D 2100                      1- 1245     	MOVIA	0x00
                                    1- 1246     	BANKSEL	r0x103F
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1- 1247     	MOVAR	r0x103F
                                    1- 1248     ;;108	MOVR	r0x103E,W
                                    1- 1249     	BANKSEL	r0x103C
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 1250     	MOVR	r0x103C,W
                                    1- 1251     	BANKSEL	_R_AIN3_DATA
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1- 1252     	ADDAR	_R_AIN3_DATA,F
                                    1- 1253     	BANKSEL	r0x103F
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 1254     	MOVR	r0x103F,W
     0026 0C03                      1- 1255     	BTRSC	STATUS,0
     0027 05rr                      1- 1256     	INCR	r0x103F,W
     0028 0D03                      1- 1257     	BTRSC	STATUS,2
     0029 3rrr                      1- 1258     	LGOTO	_00002_DS_
                                    1- 1259     	BANKSEL	_R_AIN3_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 03rr                      1- 1260     	ADDAR	(_R_AIN3_DATA + 1),F
     002C                           1- 1261     _00002_DS_:
                                    1- 1262     	.line	970, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1263     	BANKSEL	r0x103B
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1- 1264     	INCR	r0x103B,F
     002E 3rrr                      1- 1265     	LGOTO	_00902_DS_
     002F                           1- 1266     _00904_DS_:
                                    1- 1267     	.line	977, "main.c"; 	}
                                    1- 1268     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1- 1269     ; exit point of _F_AIN3_Convert
                                    1- 1271     ;***
                                    1- 1272     ;  pBlock Stats: dbName = C
                                    1- 1273     ;***
                                    1- 1274     ;has an exit
                                    1- 1275     ;functions called:
                                    1- 1276     ;   _delay
                                    1- 1277     ;   _F_wait_eoc
                                    1- 1278     ;   _delay
                                    1- 1279     ;   _F_wait_eoc
                                    1- 1280     ;6 compiler assigned registers:
                                    1- 1281     ;   r0x1040
                                    1- 1282     ;   r0x1041
                                    1- 1283     ;   r0x1042
                                    1- 1284     ;   r0x1043
                                    1- 1285     ;   r0x1044
                                    1- 1286     ;   r0x1045
                                    1- 1287     ;; Starting pCode block
                                    1- 1288     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1290     ;local variable name mapping:
     0000                           1- 1293     _F_AIN4_Convert:
                                    1- 1294     ; 2 exit points
                                    1- 1295     	.line	949, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1296     	BANKSEL	r0x1040
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1297     	MOVAR	r0x1040
                                    1- 1298     	.line	951, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1299     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1300     	CLRR	_R_AIN4_DATA_LB
                                    1- 1301     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1302     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1303     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1304     	.line	953, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1305     	MOVIA	0x94
     0008 00rr                      1- 1306     	MOVAR	_ADMD
                                    1- 1307     	.line	954, "main.c"; 	delay(200);	
     0009 21C8                      1- 1308     	MOVIA	0xc8
     000A 2rrr                      1- 1309     	LCALL	_delay
                                    1- 1310     	.line	955, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1311     	MOVIA	0x01
                                    1- 1312     	BANKSEL	r0x1041
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1313     	MOVAR	r0x1041
     000E                           1- 1314     _00893_DS_:
                                    1- 1315     	BANKSEL	r0x1041
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 1316     	MOVR	r0x1041,W
                                    1- 1317     	BANKSEL	r0x1040
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1- 1318     	SUBAR	r0x1040,W
     0012 0803                      1- 1319     	BTRSS	STATUS,0
     0013 3rrr                      1- 1320     	LGOTO	_00895_DS_
                                    1- 1321     	.line	957, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1322     	BSR	_ADMDbits,6
                                    1- 1323     	.line	958, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0015 2rrr                      1- 1324     	LCALL	_F_wait_eoc
                                    1- 1325     	.line	959, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1326     	MOVIA	0x0f
     0017 10rr                      1- 1327     	ANDAR	_ADR,W
                                    1- 1328     ;;3	MOVAR	r0x1042
                                    1- 1329     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 03rr                      1- 1330     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1331     	.line	960, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1332     	MOVR	_ADD,W
                                    1- 1333     	BANKSEL	r0x1042
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1334     	MOVAR	r0x1042
                                    1- 1335     ;;1	CLRR	r0x1043
                                    1- 1336     ;;106	MOVR	r0x1042,W
                                    1- 1337     ;;104	MOVAR	r0x1044
     001D 2100                      1- 1338     	MOVIA	0x00
                                    1- 1339     	BANKSEL	r0x1045
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1- 1340     	MOVAR	r0x1045
                                    1- 1341     ;;105	MOVR	r0x1044,W
                                    1- 1342     	BANKSEL	r0x1042
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 1343     	MOVR	r0x1042,W
                                    1- 1344     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1- 1345     	ADDAR	_R_AIN4_DATA,F
                                    1- 1346     	BANKSEL	r0x1045
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 1347     	MOVR	r0x1045,W
     0026 0C03                      1- 1348     	BTRSC	STATUS,0
     0027 05rr                      1- 1349     	INCR	r0x1045,W
     0028 0D03                      1- 1350     	BTRSC	STATUS,2
     0029 3rrr                      1- 1351     	LGOTO	_00003_DS_
                                    1- 1352     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 03rr                      1- 1353     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1354     _00003_DS_:
                                    1- 1355     	.line	955, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1356     	BANKSEL	r0x1041
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1- 1357     	INCR	r0x1041,F
     002E 3rrr                      1- 1358     	LGOTO	_00893_DS_
     002F                           1- 1359     _00895_DS_:
                                    1- 1360     	.line	962, "main.c"; 	}
                                    1- 1361     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1- 1362     ; exit point of _F_AIN4_Convert
                                    1- 1364     ;***
                                    1- 1365     ;  pBlock Stats: dbName = C
                                    1- 1366     ;***
                                    1- 1367     ;has an exit
                                    1- 1368     ;functions called:
                                    1- 1369     ;   _F_AIN4_Convert
                                    1- 1370     ;   __mulchar
                                    1- 1371     ;   __mulchar
                                    1- 1372     ;   __mulchar
                                    1- 1373     ;   _F_AIN4_Convert
                                    1- 1374     ;   __mulchar
                                    1- 1375     ;   __mulchar
                                    1- 1376     ;   __mulchar
                                    1- 1377     ;5 compiler assigned registers:
                                    1- 1378     ;   r0x1046
                                    1- 1379     ;   r0x1047
                                    1- 1380     ;   r0x1048
                                    1- 1381     ;   r0x1049
                                    1- 1382     ;   STK00
                                    1- 1383     ;; Starting pCode block
                                    1- 1384     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1386     _checkOutA:
                                    1- 1387     ; 2 exit points
                                    1- 1388     	.line	879, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1389     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1390     	CLRR	_R_AIN4_DATA_LB
                                    1- 1391     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1392     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1393     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1394     	.line	880, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1395     	MOVIA	0x08
     0006 2rrr                      1- 1396     	LCALL	_F_AIN4_Convert
                                    1- 1397     	.line	881, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1398     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1399     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1400     	ANDIA	0xf0
     000A 00rr                      1- 1401     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1402     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1403     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1404     	ANDIA	0x0f
     000E 11rr                      1- 1405     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1406     	XORAR	_R_AIN4_DATA,F
                                    1- 1407     	.line	882, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1408     	MOVIA	0xf0
                                    1- 1409     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1410     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1411     	.line	883, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1412     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1413     	BANKSEL	r0x1046
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1414     	MOVAR	r0x1046
                                    1- 1415     ;;1	CLRR	r0x1047
                                    1- 1416     ;;103	MOVR	r0x1046,W
                                    1- 1417     ;;101	MOVAR	r0x1048
     0016 2100                      1- 1418     	MOVIA	0x00
                                    1- 1419     	BANKSEL	r0x1049
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1420     	MOVAR	r0x1049
                                    1- 1421     ;;102	MOVR	r0x1048,W
                                    1- 1422     	BANKSEL	r0x1046
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1423     	MOVR	r0x1046,W
                                    1- 1424     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1425     	ADDAR	_R_AIN4_DATA,F
                                    1- 1426     	BANKSEL	r0x1049
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1427     	MOVR	r0x1049,W
     001F 0C03                      1- 1428     	BTRSC	STATUS,0
     0020 05rr                      1- 1429     	INCR	r0x1049,W
     0021 0D03                      1- 1430     	BTRSC	STATUS,2
     0022 3rrr                      1- 1431     	LGOTO	_00004_DS_
                                    1- 1432     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1433     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1434     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1435     _00004_DS_:
                                    1- 1436     	.line	884, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1437     	BCR	STATUS,0
                                    1- 1438     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1439     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1440     	RRR	_R_AIN4_DATA,F
                                    1- 1441     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1442     	BCR	STATUS,0
     002A 13rr                      1- 1443     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1444     	RRR	_R_AIN4_DATA,F
                                    1- 1445     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1446     	BCR	STATUS,0
     002D 13rr                      1- 1447     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1448     	RRR	_R_AIN4_DATA,F
                                    1- 1449     	.line	885, "main.c"; 	if(debug)
                                    1- 1450     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1451     	MOVR	_debug,W
     0031 0D03                      1- 1452     	BTRSC	STATUS,2
     0032 3rrr                      1- 1453     	LGOTO	_00803_DS_
                                    1- 1454     	.line	886, "main.c"; 	R_AIN4_DATA = OUTA;
     0033 212D                      1- 1455     	MOVIA	0x2d
                                    1- 1456     	BANKSEL	_R_AIN4_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1457     	MOVAR	_R_AIN4_DATA
     0036 2101                      1- 1458     	MOVIA	0x01
     0037 00rr                      1- 1459     	MOVAR	(_R_AIN4_DATA + 1)
                                    1- 1460     ;;unsigned compare: left < lit (0x6=6), size=1
     0038                           1- 1461     _00803_DS_:
                                    1- 1462     	.line	887, "main.c"; 	if(workStep < 6 && R_AIN4_DATA > 200)
     0038 2106                      1- 1463     	MOVIA	0x06
                                    1- 1464     	BANKSEL	_workStep
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1465     	SUBAR	_workStep,W
     003B 0C03                      1- 1466     	BTRSC	STATUS,0
     003C 3rrr                      1- 1467     	LGOTO	_00830_DS_
                                    1- 1468     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1469     ;;unsigned compare: left >= lit (0xC9=201), size=2
     003D 2100                      1- 1470     	MOVIA	0x00
                                    1- 1471     	BANKSEL	_R_AIN4_DATA
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 04rr                      1- 1472     	SUBAR	(_R_AIN4_DATA + 1),W
     0040 0903                      1- 1473     	BTRSS	STATUS,2
     0041 3rrr                      1- 1474     	LGOTO	_00878_DS_
     0042 21C9                      1- 1475     	MOVIA	0xc9
     0043 04rr                      1- 1476     	SUBAR	_R_AIN4_DATA,W
     0044                           1- 1477     _00878_DS_:
     0044 0803                      1- 1478     	BTRSS	STATUS,0
     0045 3rrr                      1- 1479     	LGOTO	_00830_DS_
                                    1- 1480     	.line	889, "main.c"; 	if(++overCount > 5)
                                    1- 1481     	BANKSEL	_overCount
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 05rr                      1- 1482     	INCR	_overCount,F
                                    1- 1483     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1484     ;;unsigned compare: left >= lit (0x6=6), size=1
     0048 2106                      1- 1485     	MOVIA	0x06
     0049 04rr                      1- 1486     	SUBAR	_overCount,W
     004A 0803                      1- 1487     	BTRSS	STATUS,0
     004B 3rrr                      1- 1488     	LGOTO	_00833_DS_
                                    1- 1489     	.line	891, "main.c"; 	overCount = 5;
     004C 2105                      1- 1490     	MOVIA	0x05
     004D 00rr                      1- 1491     	MOVAR	_overCount
                                    1- 1492     	.line	892, "main.c"; 	tempLedStep = workStep;
                                    1- 1493     	BANKSEL	_workStep
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 01rr                      1- 1494     	MOVR	_workStep,W
                                    1- 1495     	BANKSEL	_tempLedStep
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 00rr                      1- 1496     	MOVAR	_tempLedStep
     0052 3rrr                      1- 1497     	LGOTO	_00833_DS_
                                    1- 1498     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1499     ;;unsigned compare: left >= lit (0x191=401), size=2
     0053                           1- 1500     _00830_DS_:
                                    1- 1501     	.line	895, "main.c"; 	else if(R_AIN4_DATA > 400)
     0053 2101                      1- 1502     	MOVIA	0x01
                                    1- 1503     	BANKSEL	_R_AIN4_DATA
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 04rr                      1- 1504     	SUBAR	(_R_AIN4_DATA + 1),W
     0056 0903                      1- 1505     	BTRSS	STATUS,2
     0057 3rrr                      1- 1506     	LGOTO	_00880_DS_
     0058 2191                      1- 1507     	MOVIA	0x91
     0059 04rr                      1- 1508     	SUBAR	_R_AIN4_DATA,W
     005A                           1- 1509     _00880_DS_:
     005A 0803                      1- 1510     	BTRSS	STATUS,0
     005B 3rrr                      1- 1511     	LGOTO	_00827_DS_
                                    1- 1512     	.line	897, "main.c"; 	if(++overCount > 5)
                                    1- 1513     	BANKSEL	_overCount
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 05rr                      1- 1514     	INCR	_overCount,F
                                    1- 1515     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1516     ;;unsigned compare: left >= lit (0x6=6), size=1
     005E 2106                      1- 1517     	MOVIA	0x06
     005F 04rr                      1- 1518     	SUBAR	_overCount,W
     0060 0803                      1- 1519     	BTRSS	STATUS,0
     0061 3rrr                      1- 1520     	LGOTO	_00833_DS_
                                    1- 1521     	.line	899, "main.c"; 	overCount = 5;
     0062 2105                      1- 1522     	MOVIA	0x05
     0063 00rr                      1- 1523     	MOVAR	_overCount
                                    1- 1524     	.line	900, "main.c"; 	tempLedStep = workStep;
                                    1- 1525     	BANKSEL	_workStep
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 01rr                      1- 1526     	MOVR	_workStep,W
                                    1- 1527     	BANKSEL	_tempLedStep
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 00rr                      1- 1528     	MOVAR	_tempLedStep
     0068 3rrr                      1- 1529     	LGOTO	_00833_DS_
                                    1- 1530     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1531     ;;unsigned compare: left >= lit (0x2E=46), size=2
     0069                           1- 1532     _00827_DS_:
                                    1- 1533     	.line	908, "main.c"; 	else if(R_AIN4_DATA > 45)
     0069 2100                      1- 1534     	MOVIA	0x00
                                    1- 1535     	BANKSEL	_R_AIN4_DATA
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 04rr                      1- 1536     	SUBAR	(_R_AIN4_DATA + 1),W
     006C 0903                      1- 1537     	BTRSS	STATUS,2
     006D 3rrr                      1- 1538     	LGOTO	_00882_DS_
     006E 212E                      1- 1539     	MOVIA	0x2e
     006F 04rr                      1- 1540     	SUBAR	_R_AIN4_DATA,W
     0070                           1- 1541     _00882_DS_:
     0070 0803                      1- 1542     	BTRSS	STATUS,0
     0071 3rrr                      1- 1543     	LGOTO	_00824_DS_
                                    1- 1544     	.line	910, "main.c"; 	if(overCount > 0)
                                    1- 1545     	BANKSEL	_overCount
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 01rr                      1- 1546     	MOVR	_overCount,W
     0074 0903                      1- 1547     	BTRSS	STATUS,2
                                    1- 1548     	.line	912, "main.c"; 	overCount--;
     0075 06rr                      1- 1549     	DECR	_overCount,F
                                    1- 1550     	.line	914, "main.c"; 	if(workStep < 4)
     0076 2104                      1- 1551     	MOVIA	0x04
                                    1- 1552     	BANKSEL	_workStep
     0077 rrrr                      3-   71 m1      .banksel ram_address
     0078 04rr                      1- 1553     	SUBAR	_workStep,W
     0079 0C03                      1- 1554     	BTRSC	STATUS,0
     007A 3rrr                      1- 1555     	LGOTO	_00811_DS_
                                    1- 1556     	.line	916, "main.c"; 	tempDuty = 70 + workStep*5;
     007B 2105                      1- 1557     	MOVIA	0x05
     007C 00rr                      1- 1558     	MOVAR	STK00
     007D 01rr                      1- 1559     	MOVR	_workStep,W
     007E 2rrr                      1- 1560     	LCALL	__mulchar
                                    1- 1561     	BANKSEL	r0x1046
     007F rrrr                      3-   71 m1      .banksel ram_address
     0080 00rr                      1- 1562     	MOVAR	r0x1046
     0081 2146                      1- 1563     	MOVIA	0x46
     0082 03rr                      1- 1564     	ADDAR	r0x1046,W
                                    1- 1565     	BANKSEL	_tempDuty
     0083 rrrr                      3-   71 m1      .banksel ram_address
     0084 00rr                      1- 1566     	MOVAR	_tempDuty
     0085 3rrr                      1- 1567     	LGOTO	_00833_DS_
     0086                           1- 1568     _00811_DS_:
                                    1- 1569     	.line	919, "main.c"; 	tempDuty = 70 + workStep*5;
     0086 2105                      1- 1570     	MOVIA	0x05
     0087 00rr                      1- 1571     	MOVAR	STK00
                                    1- 1572     	BANKSEL	_workStep
     0088 rrrr                      3-   71 m1      .banksel ram_address
     0089 01rr                      1- 1573     	MOVR	_workStep,W
     008A 2rrr                      1- 1574     	LCALL	__mulchar
                                    1- 1575     	BANKSEL	r0x1046
     008B rrrr                      3-   71 m1      .banksel ram_address
     008C 00rr                      1- 1576     	MOVAR	r0x1046
     008D 2146                      1- 1577     	MOVIA	0x46
     008E 03rr                      1- 1578     	ADDAR	r0x1046,W
                                    1- 1579     	BANKSEL	_tempDuty
     008F rrrr                      3-   71 m1      .banksel ram_address
     0090 00rr                      1- 1580     	MOVAR	_tempDuty
     0091 3rrr                      1- 1581     	LGOTO	_00833_DS_
     0092                           1- 1582     _00824_DS_:
                                    1- 1583     	.line	924, "main.c"; 	if(overCount > 0)
                                    1- 1584     	BANKSEL	_overCount
     0092 rrrr                      3-   71 m1      .banksel ram_address
     0093 01rr                      1- 1585     	MOVR	_overCount,W
     0094 0903                      1- 1586     	BTRSS	STATUS,2
                                    1- 1587     	.line	926, "main.c"; 	overCount--;
     0095 06rr                      1- 1588     	DECR	_overCount,F
                                    1- 1589     	.line	928, "main.c"; 	if(R_AIN4_DATA > 40 && workStep < 4)
     0096 2100                      1- 1590     	MOVIA	0x00
                                    1- 1591     	BANKSEL	_R_AIN4_DATA
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 04rr                      1- 1592     	SUBAR	(_R_AIN4_DATA + 1),W
     0099 0903                      1- 1593     	BTRSS	STATUS,2
     009A 3rrr                      1- 1594     	LGOTO	_00884_DS_
     009B 2129                      1- 1595     	MOVIA	0x29
     009C 04rr                      1- 1596     	SUBAR	_R_AIN4_DATA,W
     009D                           1- 1597     _00884_DS_:
     009D 0803                      1- 1598     	BTRSS	STATUS,0
     009E 3rrr                      1- 1599     	LGOTO	_00818_DS_
                                    1- 1600     ;;unsigned compare: left < lit (0x4=4), size=1
     009F 2104                      1- 1601     	MOVIA	0x04
                                    1- 1602     	BANKSEL	_workStep
     00A0 rrrr                      3-   71 m1      .banksel ram_address
     00A1 04rr                      1- 1603     	SUBAR	_workStep,W
     00A2 0C03                      1- 1604     	BTRSC	STATUS,0
     00A3 3rrr                      1- 1605     	LGOTO	_00818_DS_
                                    1- 1606     	.line	930, "main.c"; 	tempDuty = 70 + workStep*5;
     00A4 2105                      1- 1607     	MOVIA	0x05
     00A5 00rr                      1- 1608     	MOVAR	STK00
     00A6 01rr                      1- 1609     	MOVR	_workStep,W
     00A7 2rrr                      1- 1610     	LCALL	__mulchar
                                    1- 1611     	BANKSEL	r0x1046
     00A8 rrrr                      3-   71 m1      .banksel ram_address
     00A9 00rr                      1- 1612     	MOVAR	r0x1046
     00AA 2146                      1- 1613     	MOVIA	0x46
     00AB 03rr                      1- 1614     	ADDAR	r0x1046,W
                                    1- 1615     	BANKSEL	_tempDuty
     00AC rrrr                      3-   71 m1      .banksel ram_address
     00AD 00rr                      1- 1616     	MOVAR	_tempDuty
     00AE 3rrr                      1- 1617     	LGOTO	_00819_DS_
                                    1- 1618     ;;unsigned compare: left < lit (0x44=68), size=2
     00AF                           1- 1619     _00818_DS_:
                                    1- 1620     	.line	933, "main.c"; 	else if(R_AIN4_DATA < 68)
     00AF 2100                      1- 1621     	MOVIA	0x00
                                    1- 1622     	BANKSEL	_R_AIN4_DATA
     00B0 rrrr                      3-   71 m1      .banksel ram_address
     00B1 04rr                      1- 1623     	SUBAR	(_R_AIN4_DATA + 1),W
     00B2 0903                      1- 1624     	BTRSS	STATUS,2
     00B3 3rrr                      1- 1625     	LGOTO	_00886_DS_
     00B4 2144                      1- 1626     	MOVIA	0x44
     00B5 04rr                      1- 1627     	SUBAR	_R_AIN4_DATA,W
     00B6                           1- 1628     _00886_DS_:
     00B6 0C03                      1- 1629     	BTRSC	STATUS,0
     00B7 3rrr                      1- 1630     	LGOTO	_00819_DS_
                                    1- 1631     	.line	936, "main.c"; 	tempDuty = maxDuty;
                                    1- 1632     	BANKSEL	_maxDuty
     00B8 rrrr                      3-   71 m1      .banksel ram_address
     00B9 01rr                      1- 1633     	MOVR	_maxDuty,W
                                    1- 1634     	BANKSEL	_tempDuty
     00BA rrrr                      3-   71 m1      .banksel ram_address
     00BB 00rr                      1- 1635     	MOVAR	_tempDuty
     00BC                           1- 1636     _00819_DS_:
                                    1- 1637     	.line	938, "main.c"; 	if(workStep > 0)
                                    1- 1638     	BANKSEL	_workStep
     00BC rrrr                      3-   71 m1      .banksel ram_address
     00BD 01rr                      1- 1639     	MOVR	_workStep,W
     00BE 0D03                      1- 1640     	BTRSC	STATUS,2
     00BF 3rrr                      1- 1641     	LGOTO	_00833_DS_
                                    1- 1642     	.line	939, "main.c"; 	ledStep = workStep;
     00C0 01rr                      1- 1643     	MOVR	_workStep,W
                                    1- 1644     	BANKSEL	_ledStep
     00C1 rrrr                      3-   71 m1      .banksel ram_address
     00C2 00rr                      1- 1645     	MOVAR	_ledStep
     00C3                           1- 1646     _00833_DS_:
                                    1- 1647     	.line	943, "main.c"; 	}
                                    1- 1648     	RETURN	
     00C3 0010                      3-   26 m1      ret
                                    1- 1649     ; exit point of _checkOutA
                                    1- 1651     ;***
                                    1- 1652     ;  pBlock Stats: dbName = C
                                    1- 1653     ;***
                                    1- 1654     ;has an exit
                                    1- 1655     ;functions called:
                                    1- 1656     ;   _F_AIN3_Convert
                                    1- 1657     ;   _F_AIN3_Convert
                                    1- 1658     ;4 compiler assigned registers:
                                    1- 1659     ;   r0x104A
                                    1- 1660     ;   r0x104B
                                    1- 1661     ;   r0x104C
                                    1- 1662     ;   r0x104D
                                    1- 1663     ;; Starting pCode block
                                    1- 1664     .segment "code"; module=main, function=_checkChrgV
     0000                           1- 1666     _checkChrgV:
                                    1- 1667     ; 2 exit points
                                    1- 1668     	.line	866, "main.c"; 	R_AIN3_DATA = R_AIN3_DATA_LB = 0x00;
                                    1- 1669     	BANKSEL	_R_AIN3_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1670     	CLRR	_R_AIN3_DATA_LB
                                    1- 1671     	BANKSEL	_R_AIN3_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1672     	CLRR	_R_AIN3_DATA
     0004 02rr                      1- 1673     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1674     	.line	867, "main.c"; 	F_AIN3_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1675     	MOVIA	0x08
     0006 2rrr                      1- 1676     	LCALL	_F_AIN3_Convert
                                    1- 1677     	.line	868, "main.c"; 	R_AIN3_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1678     	BANKSEL	_R_AIN3_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1679     	SWAPR	(_R_AIN3_DATA + 1),W
     0009 22F0                      1- 1680     	ANDIA	0xf0
     000A 00rr                      1- 1681     	MOVAR	(_R_AIN3_DATA + 1)
     000B 15rr                      1- 1682     	SWAPR	_R_AIN3_DATA,W
     000C 00rr                      1- 1683     	MOVAR	_R_AIN3_DATA
     000D 220F                      1- 1684     	ANDIA	0x0f
     000E 11rr                      1- 1685     	IORAR	(_R_AIN3_DATA + 1),F
     000F 12rr                      1- 1686     	XORAR	_R_AIN3_DATA,F
                                    1- 1687     	.line	869, "main.c"; 	R_AIN3_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1688     	MOVIA	0xf0
                                    1- 1689     	BANKSEL	_R_AIN3_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1690     	ANDAR	_R_AIN3_DATA_LB,F
                                    1- 1691     	.line	870, "main.c"; 	R_AIN3_DATA += R_AIN3_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1692     	MOVR	_R_AIN3_DATA_LB,W
                                    1- 1693     	BANKSEL	r0x104C
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1694     	MOVAR	r0x104C
                                    1- 1695     ;;1	MOVAR	r0x104A
                                    1- 1696     ;;1	CLRR	r0x104B
                                    1- 1697     ;;100	MOVR	r0x104A,W
     0016 2100                      1- 1698     	MOVIA	0x00
                                    1- 1699     	BANKSEL	r0x104D
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1700     	MOVAR	r0x104D
                                    1- 1701     	BANKSEL	r0x104C
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1702     	MOVR	r0x104C,W
                                    1- 1703     	BANKSEL	_R_AIN3_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1704     	ADDAR	_R_AIN3_DATA,F
                                    1- 1705     	BANKSEL	r0x104D
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1706     	MOVR	r0x104D,W
     001F 0C03                      1- 1707     	BTRSC	STATUS,0
     0020 05rr                      1- 1708     	INCR	r0x104D,W
     0021 0D03                      1- 1709     	BTRSC	STATUS,2
     0022 3rrr                      1- 1710     	LGOTO	_00005_DS_
                                    1- 1711     	BANKSEL	_R_AIN3_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1712     	ADDAR	(_R_AIN3_DATA + 1),F
                                    1- 1713     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1714     _00005_DS_:
                                    1- 1715     	.line	871, "main.c"; 	R_AIN3_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1716     	BCR	STATUS,0
                                    1- 1717     	BANKSEL	_R_AIN3_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1718     	RRR	(_R_AIN3_DATA + 1),F
     0028 13rr                      1- 1719     	RRR	_R_AIN3_DATA,F
                                    1- 1720     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1721     	BCR	STATUS,0
     002A 13rr                      1- 1722     	RRR	(_R_AIN3_DATA + 1),F
     002B 13rr                      1- 1723     	RRR	_R_AIN3_DATA,F
                                    1- 1724     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1725     	BCR	STATUS,0
     002D 13rr                      1- 1726     	RRR	(_R_AIN3_DATA + 1),F
     002E 13rr                      1- 1727     	RRR	_R_AIN3_DATA,F
                                    1- 1728     	.line	872, "main.c"; 	}
                                    1- 1729     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1- 1730     ; exit point of _checkChrgV
                                    1- 1732     ;***
                                    1- 1733     ;  pBlock Stats: dbName = C
                                    1- 1734     ;***
                                    1- 1735     ;has an exit
                                    1- 1736     ;functions called:
                                    1- 1737     ;   _F_AIN2_Convert
                                    1- 1738     ;   _F_AIN2_Convert
                                    1- 1739     ;4 compiler assigned registers:
                                    1- 1740     ;   r0x104E
                                    1- 1741     ;   r0x104F
                                    1- 1742     ;   r0x1050
                                    1- 1743     ;   r0x1051
                                    1- 1744     ;; Starting pCode block
                                    1- 1745     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1747     _checkBatAD:
                                    1- 1748     ; 2 exit points
                                    1- 1749     	.line	720, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1750     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1751     	CLRR	_R_AIN2_DATA_LB
                                    1- 1752     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1753     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1754     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1755     	.line	721, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1756     	MOVIA	0x08
     0006 2rrr                      1- 1757     	LCALL	_F_AIN2_Convert
                                    1- 1758     	.line	722, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1759     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1760     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1761     	ANDIA	0xf0
     000A 00rr                      1- 1762     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1763     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1764     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1765     	ANDIA	0x0f
     000E 11rr                      1- 1766     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1767     	XORAR	_R_AIN2_DATA,F
                                    1- 1768     	.line	723, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1769     	MOVIA	0xf0
                                    1- 1770     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1771     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1772     	.line	724, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1773     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1774     	BANKSEL	r0x1050
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1775     	MOVAR	r0x1050
                                    1- 1776     ;;1	MOVAR	r0x104E
                                    1- 1777     ;;1	CLRR	r0x104F
                                    1- 1778     ;;99	MOVR	r0x104E,W
     0016 2100                      1- 1779     	MOVIA	0x00
                                    1- 1780     	BANKSEL	r0x1051
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1781     	MOVAR	r0x1051
                                    1- 1782     	BANKSEL	r0x1050
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1783     	MOVR	r0x1050,W
                                    1- 1784     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1785     	ADDAR	_R_AIN2_DATA,F
                                    1- 1786     	BANKSEL	r0x1051
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1787     	MOVR	r0x1051,W
     001F 0C03                      1- 1788     	BTRSC	STATUS,0
     0020 05rr                      1- 1789     	INCR	r0x1051,W
     0021 0D03                      1- 1790     	BTRSC	STATUS,2
     0022 3rrr                      1- 1791     	LGOTO	_00006_DS_
                                    1- 1792     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1793     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1794     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1795     _00006_DS_:
                                    1- 1796     	.line	725, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0025 1C03                      1- 1797     	BCR	STATUS,0
                                    1- 1798     	BANKSEL	_R_AIN2_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1799     	RRR	(_R_AIN2_DATA + 1),F
     0028 13rr                      1- 1800     	RRR	_R_AIN2_DATA,F
                                    1- 1801     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1802     	BCR	STATUS,0
     002A 13rr                      1- 1803     	RRR	(_R_AIN2_DATA + 1),F
     002B 13rr                      1- 1804     	RRR	_R_AIN2_DATA,F
                                    1- 1805     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1806     	BCR	STATUS,0
     002D 13rr                      1- 1807     	RRR	(_R_AIN2_DATA + 1),F
     002E 13rr                      1- 1808     	RRR	_R_AIN2_DATA,F
                                    1- 1809     	.line	726, "main.c"; 	if(debug)
                                    1- 1810     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1811     	MOVR	_debug,W
     0031 0D03                      1- 1812     	BTRSC	STATUS,2
     0032 3rrr                      1- 1813     	LGOTO	_00574_DS_
                                    1- 1814     	.line	727, "main.c"; 	R_AIN2_DATA = BATTLE;
     0033 210E                      1- 1815     	MOVIA	0x0e
                                    1- 1816     	BANKSEL	_R_AIN2_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1817     	MOVAR	_R_AIN2_DATA
     0036 2106                      1- 1818     	MOVIA	0x06
     0037 00rr                      1- 1819     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1820     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1821     ;;unsigned compare: left >= lit (0x60F=1551), size=2
     0038                           1- 1822     _00574_DS_:
                                    1- 1823     	.line	729, "main.c"; 	if(R_AIN2_DATA > 1550)
     0038 2106                      1- 1824     	MOVIA	0x06
                                    1- 1825     	BANKSEL	_R_AIN2_DATA
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1826     	SUBAR	(_R_AIN2_DATA + 1),W
     003B 0903                      1- 1827     	BTRSS	STATUS,2
     003C 3rrr                      1- 1828     	LGOTO	_00766_DS_
     003D 210F                      1- 1829     	MOVIA	0x0f
     003E 04rr                      1- 1830     	SUBAR	_R_AIN2_DATA,W
     003F                           1- 1831     _00766_DS_:
     003F 0803                      1- 1832     	BTRSS	STATUS,0
     0040 3rrr                      1- 1833     	LGOTO	_00581_DS_
                                    1- 1834     	.line	732, "main.c"; 	lowCount = 0;
                                    1- 1835     	BANKSEL	_lowCount
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 02rr                      1- 1836     	CLRR	_lowCount
                                    1- 1837     	.line	732, "main.c"; 	}
     0043 3rrr                      1- 1838     	LGOTO	_00582_DS_
                                    1- 1839     ;;unsigned compare: left < lit (0x47E=1150), size=2
     0044                           1- 1840     _00581_DS_:
                                    1- 1841     	.line	734, "main.c"; 	else if(R_AIN2_DATA < 1150)
     0044 2104                      1- 1842     	MOVIA	0x04
                                    1- 1843     	BANKSEL	_R_AIN2_DATA
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 04rr                      1- 1844     	SUBAR	(_R_AIN2_DATA + 1),W
     0047 0903                      1- 1845     	BTRSS	STATUS,2
     0048 3rrr                      1- 1846     	LGOTO	_00767_DS_
     0049 217E                      1- 1847     	MOVIA	0x7e
     004A 04rr                      1- 1848     	SUBAR	_R_AIN2_DATA,W
     004B                           1- 1849     _00767_DS_:
     004B 0C03                      1- 1850     	BTRSC	STATUS,0
     004C 3rrr                      1- 1851     	LGOTO	_00578_DS_
                                    1- 1852     	.line	736, "main.c"; 	if(++lowCount < 10)
                                    1- 1853     	BANKSEL	_lowCount
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 05rr                      1- 1854     	INCR	_lowCount,F
                                    1- 1855     ;;unsigned compare: left < lit (0xA=10), size=1
     004F 210A                      1- 1856     	MOVIA	0x0a
     0050 04rr                      1- 1857     	SUBAR	_lowCount,W
     0051 0803                      1- 1858     	BTRSS	STATUS,0
                                    1- 1859     	.line	737, "main.c"; 	return;
     0052 3rrr                      1- 1860     	LGOTO	_00656_DS_
                                    1- 1861     	.line	738, "main.c"; 	lowCount = 10;
     0053 210A                      1- 1862     	MOVIA	0x0a
     0054 00rr                      1- 1863     	MOVAR	_lowCount
                                    1- 1864     	.line	739, "main.c"; 	pwStep = 0;
                                    1- 1865     	BANKSEL	_pwStep
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 02rr                      1- 1866     	CLRR	_pwStep
                                    1- 1867     	.line	740, "main.c"; 	R_AIN2_DATA = 1150;
     0057 217E                      1- 1868     	MOVIA	0x7e
                                    1- 1869     	BANKSEL	_R_AIN2_DATA
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 00rr                      1- 1870     	MOVAR	_R_AIN2_DATA
     005A 2104                      1- 1871     	MOVIA	0x04
     005B 00rr                      1- 1872     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1873     	.line	740, "main.c"; 	R_AIN2_DATA = 1150;
     005C 3rrr                      1- 1874     	LGOTO	_00582_DS_
     005D                           1- 1875     _00578_DS_:
                                    1- 1876     	.line	752, "main.c"; 	lowCount = 0;
                                    1- 1877     	BANKSEL	_lowCount
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 02rr                      1- 1878     	CLRR	_lowCount
                                    1- 1879     	.line	753, "main.c"; 	firstTime = 0;
                                    1- 1880     	BANKSEL	_firstTime
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 02rr                      1- 1881     	CLRR	_firstTime
     0061                           1- 1882     _00582_DS_:
                                    1- 1883     	.line	755, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA - 1150;
     0061 2182                      1- 1884     	MOVIA	0x82
                                    1- 1885     	BANKSEL	_R_AIN2_DATA
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 03rr                      1- 1886     	ADDAR	_R_AIN2_DATA,F
     0064 21FB                      1- 1887     	MOVIA	0xfb
     0065 0C03                      1- 1888     	BTRSC	STATUS,0
     0066 21FC                      1- 1889     	MOVIA	0xfc
     0067 03rr                      1- 1890     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1891     ;;unsigned compare: left < lit (0x1A6=422), size=2
                                    1- 1892     	.line	757, "main.c"; 	if(R_AIN2_DATA >= 422)
     0068 2101                      1- 1893     	MOVIA	0x01
     0069 04rr                      1- 1894     	SUBAR	(_R_AIN2_DATA + 1),W
     006A 0903                      1- 1895     	BTRSS	STATUS,2
     006B 3rrr                      1- 1896     	LGOTO	_00769_DS_
     006C 21A6                      1- 1897     	MOVIA	0xa6
     006D 04rr                      1- 1898     	SUBAR	_R_AIN2_DATA,W
     006E                           1- 1899     _00769_DS_:
     006E 0803                      1- 1900     	BTRSS	STATUS,0
     006F 3rrr                      1- 1901     	LGOTO	_00654_DS_
                                    1- 1902     	.line	759, "main.c"; 	pwStep = 7;
     0070 2107                      1- 1903     	MOVIA	0x07
                                    1- 1904     	BANKSEL	_pwStep
     0071 rrrr                      3-   71 m1      .banksel ram_address
     0072 00rr                      1- 1905     	MOVAR	_pwStep
     0073 3rrr                      1- 1906     	LGOTO	_00656_DS_
                                    1- 1907     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1908     ;;unsigned compare: left >= lit (0x15F=351), size=2
     0074                           1- 1909     _00654_DS_:
                                    1- 1910     	.line	761, "main.c"; 	else if(R_AIN2_DATA > 350)
     0074 2101                      1- 1911     	MOVIA	0x01
                                    1- 1912     	BANKSEL	_R_AIN2_DATA
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 04rr                      1- 1913     	SUBAR	(_R_AIN2_DATA + 1),W
     0077 0903                      1- 1914     	BTRSS	STATUS,2
     0078 3rrr                      1- 1915     	LGOTO	_00770_DS_
     0079 215F                      1- 1916     	MOVIA	0x5f
     007A 04rr                      1- 1917     	SUBAR	_R_AIN2_DATA,W
     007B                           1- 1918     _00770_DS_:
     007B 0803                      1- 1919     	BTRSS	STATUS,0
     007C 3rrr                      1- 1920     	LGOTO	_00651_DS_
                                    1- 1921     	.line	763, "main.c"; 	fullCount = 0;
                                    1- 1922     	BANKSEL	_fullCount
     007D rrrr                      3-   71 m1      .banksel ram_address
     007E 02rr                      1- 1923     	CLRR	_fullCount
                                    1- 1924     ;;unsigned compare: left < lit (0x6=6), size=1
                                    1- 1925     	.line	764, "main.c"; 	if(pwStep < 6)
     007F 2106                      1- 1926     	MOVIA	0x06
                                    1- 1927     	BANKSEL	_pwStep
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 04rr                      1- 1928     	SUBAR	_pwStep,W
     0082 0C03                      1- 1929     	BTRSC	STATUS,0
     0083 3rrr                      1- 1930     	LGOTO	_00589_DS_
                                    1- 1931     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1932     ;;unsigned compare: left >= lit (0x164=356), size=2
                                    1- 1933     	.line	766, "main.c"; 	if(R_AIN2_DATA > 355)
     0084 2101                      1- 1934     	MOVIA	0x01
                                    1- 1935     	BANKSEL	_R_AIN2_DATA
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 04rr                      1- 1936     	SUBAR	(_R_AIN2_DATA + 1),W
     0087 0903                      1- 1937     	BTRSS	STATUS,2
     0088 3rrr                      1- 1938     	LGOTO	_00772_DS_
     0089 2164                      1- 1939     	MOVIA	0x64
     008A 04rr                      1- 1940     	SUBAR	_R_AIN2_DATA,W
     008B                           1- 1941     _00772_DS_:
     008B 0803                      1- 1942     	BTRSS	STATUS,0
     008C 3rrr                      1- 1943     	LGOTO	_00590_DS_
                                    1- 1944     	.line	767, "main.c"; 	pwStep = 6;
     008D 2106                      1- 1945     	MOVIA	0x06
                                    1- 1946     	BANKSEL	_pwStep
     008E rrrr                      3-   71 m1      .banksel ram_address
     008F 00rr                      1- 1947     	MOVAR	_pwStep
     0090 3rrr                      1- 1948     	LGOTO	_00590_DS_
     0091                           1- 1949     _00589_DS_:
                                    1- 1950     	.line	769, "main.c"; 	else if(chrgTime == 0 && R_AIN2_DATA < 396)
                                    1- 1951     	BANKSEL	_chrgTime
     0091 rrrr                      3-   71 m1      .banksel ram_address
     0092 01rr                      1- 1952     	MOVR	_chrgTime,W
     0093 11rr                      1- 1953     	IORAR	(_chrgTime + 1),W
     0094 0903                      1- 1954     	BTRSS	STATUS,2
     0095 3rrr                      1- 1955     	LGOTO	_00590_DS_
                                    1- 1956     ;;unsigned compare: left < lit (0x18C=396), size=2
     0096 2101                      1- 1957     	MOVIA	0x01
                                    1- 1958     	BANKSEL	_R_AIN2_DATA
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 04rr                      1- 1959     	SUBAR	(_R_AIN2_DATA + 1),W
     0099 0903                      1- 1960     	BTRSS	STATUS,2
     009A 3rrr                      1- 1961     	LGOTO	_00773_DS_
     009B 218C                      1- 1962     	MOVIA	0x8c
     009C 04rr                      1- 1963     	SUBAR	_R_AIN2_DATA,W
     009D                           1- 1964     _00773_DS_:
     009D 0C03                      1- 1965     	BTRSC	STATUS,0
     009E 3rrr                      1- 1966     	LGOTO	_00590_DS_
                                    1- 1967     	.line	771, "main.c"; 	pwStep = 6;
     009F 2106                      1- 1968     	MOVIA	0x06
                                    1- 1969     	BANKSEL	_pwStep
     00A0 rrrr                      3-   71 m1      .banksel ram_address
     00A1 00rr                      1- 1970     	MOVAR	_pwStep
     00A2                           1- 1971     _00590_DS_:
                                    1- 1972     	.line	775, "main.c"; 	if(chrgTime > 0 && R_AIN2_DATA > 395 && chrgTime > 600)
                                    1- 1973     	BANKSEL	_chrgTime
     00A2 rrrr                      3-   71 m1      .banksel ram_address
     00A3 01rr                      1- 1974     	MOVR	_chrgTime,W
     00A4 11rr                      1- 1975     	IORAR	(_chrgTime + 1),W
     00A5 0D03                      1- 1976     	BTRSC	STATUS,2
     00A6 3rrr                      1- 1977     	LGOTO	_00656_DS_
                                    1- 1978     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1979     ;;unsigned compare: left >= lit (0x18C=396), size=2
     00A7 2101                      1- 1980     	MOVIA	0x01
                                    1- 1981     	BANKSEL	_R_AIN2_DATA
     00A8 rrrr                      3-   71 m1      .banksel ram_address
     00A9 04rr                      1- 1982     	SUBAR	(_R_AIN2_DATA + 1),W
     00AA 0903                      1- 1983     	BTRSS	STATUS,2
     00AB 3rrr                      1- 1984     	LGOTO	_00774_DS_
     00AC 218C                      1- 1985     	MOVIA	0x8c
     00AD 04rr                      1- 1986     	SUBAR	_R_AIN2_DATA,W
     00AE                           1- 1987     _00774_DS_:
     00AE 0803                      1- 1988     	BTRSS	STATUS,0
     00AF 3rrr                      1- 1989     	LGOTO	_00656_DS_
                                    1- 1990     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1991     ;;unsigned compare: left >= lit (0x259=601), size=2
     00B0 2102                      1- 1992     	MOVIA	0x02
                                    1- 1993     	BANKSEL	_chrgTime
     00B1 rrrr                      3-   71 m1      .banksel ram_address
     00B2 04rr                      1- 1994     	SUBAR	(_chrgTime + 1),W
     00B3 0903                      1- 1995     	BTRSS	STATUS,2
     00B4 3rrr                      1- 1996     	LGOTO	_00775_DS_
     00B5 2159                      1- 1997     	MOVIA	0x59
     00B6 04rr                      1- 1998     	SUBAR	_chrgTime,W
     00B7                           1- 1999     _00775_DS_:
     00B7 0803                      1- 2000     	BTRSS	STATUS,0
     00B8 3rrr                      1- 2001     	LGOTO	_00656_DS_
                                    1- 2002     	.line	777, "main.c"; 	chrgTime = 600;
     00B9 2158                      1- 2003     	MOVIA	0x58
                                    1- 2004     	BANKSEL	_chrgTime
     00BA rrrr                      3-   71 m1      .banksel ram_address
     00BB 00rr                      1- 2005     	MOVAR	_chrgTime
     00BC 2102                      1- 2006     	MOVIA	0x02
     00BD 00rr                      1- 2007     	MOVAR	(_chrgTime + 1)
                                    1- 2008     	.line	778, "main.c"; 	pwStep = 7;
     00BE 2107                      1- 2009     	MOVIA	0x07
                                    1- 2010     	BANKSEL	_pwStep
     00BF rrrr                      3-   71 m1      .banksel ram_address
     00C0 00rr                      1- 2011     	MOVAR	_pwStep
     00C1 3rrr                      1- 2012     	LGOTO	_00656_DS_
                                    1- 2013     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2014     ;;unsigned compare: left >= lit (0x146=326), size=2
     00C2                           1- 2015     _00651_DS_:
                                    1- 2016     	.line	781, "main.c"; 	else if(R_AIN2_DATA > 325)
     00C2 2101                      1- 2017     	MOVIA	0x01
                                    1- 2018     	BANKSEL	_R_AIN2_DATA
     00C3 rrrr                      3-   71 m1      .banksel ram_address
     00C4 04rr                      1- 2019     	SUBAR	(_R_AIN2_DATA + 1),W
     00C5 0903                      1- 2020     	BTRSS	STATUS,2
     00C6 3rrr                      1- 2021     	LGOTO	_00776_DS_
     00C7 2146                      1- 2022     	MOVIA	0x46
     00C8 04rr                      1- 2023     	SUBAR	_R_AIN2_DATA,W
     00C9                           1- 2024     _00776_DS_:
     00C9 0803                      1- 2025     	BTRSS	STATUS,0
     00CA 3rrr                      1- 2026     	LGOTO	_00648_DS_
                                    1- 2027     	.line	784, "main.c"; 	if(pwStep == 4)
                                    1- 2028     	BANKSEL	_pwStep
     00CB rrrr                      3-   71 m1      .banksel ram_address
     00CC 01rr                      1- 2029     	MOVR	_pwStep,W
     00CD 2404                      1- 2030     	XORIA	0x04
     00CE 0903                      1- 2031     	BTRSS	STATUS,2
     00CF 3rrr                      1- 2032     	LGOTO	_00598_DS_
                                    1- 2033     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2034     ;;unsigned compare: left >= lit (0x14B=331), size=2
                                    1- 2035     	.line	786, "main.c"; 	if(R_AIN2_DATA > 330)
     00D0 2101                      1- 2036     	MOVIA	0x01
                                    1- 2037     	BANKSEL	_R_AIN2_DATA
     00D1 rrrr                      3-   71 m1      .banksel ram_address
     00D2 04rr                      1- 2038     	SUBAR	(_R_AIN2_DATA + 1),W
     00D3 0903                      1- 2039     	BTRSS	STATUS,2
     00D4 3rrr                      1- 2040     	LGOTO	_00777_DS_
     00D5 214B                      1- 2041     	MOVIA	0x4b
     00D6 04rr                      1- 2042     	SUBAR	_R_AIN2_DATA,W
     00D7                           1- 2043     _00777_DS_:
     00D7 0803                      1- 2044     	BTRSS	STATUS,0
     00D8 3rrr                      1- 2045     	LGOTO	_00598_DS_
                                    1- 2046     	.line	787, "main.c"; 	pwStep = 5;
     00D9 2105                      1- 2047     	MOVIA	0x05
                                    1- 2048     	BANKSEL	_pwStep
     00DA rrrr                      3-   71 m1      .banksel ram_address
     00DB 00rr                      1- 2049     	MOVAR	_pwStep
                                    1- 2050     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2051     ;;unsigned compare: left >= lit (0x6=6), size=1
     00DC                           1- 2052     _00598_DS_:
                                    1- 2053     	.line	789, "main.c"; 	if(pwStep > 5)
     00DC 2106                      1- 2054     	MOVIA	0x06
                                    1- 2055     	BANKSEL	_pwStep
     00DD rrrr                      3-   71 m1      .banksel ram_address
     00DE 04rr                      1- 2056     	SUBAR	_pwStep,W
     00DF 0803                      1- 2057     	BTRSS	STATUS,0
     00E0 3rrr                      1- 2058     	LGOTO	_00602_DS_
                                    1- 2059     ;;unsigned compare: left < lit (0x16D=365), size=2
                                    1- 2060     	.line	791, "main.c"; 	if(R_AIN2_DATA < 365)
     00E1 2101                      1- 2061     	MOVIA	0x01
                                    1- 2062     	BANKSEL	_R_AIN2_DATA
     00E2 rrrr                      3-   71 m1      .banksel ram_address
     00E3 04rr                      1- 2063     	SUBAR	(_R_AIN2_DATA + 1),W
     00E4 0903                      1- 2064     	BTRSS	STATUS,2
     00E5 3rrr                      1- 2065     	LGOTO	_00779_DS_
     00E6 216D                      1- 2066     	MOVIA	0x6d
     00E7 04rr                      1- 2067     	SUBAR	_R_AIN2_DATA,W
     00E8                           1- 2068     _00779_DS_:
     00E8 0C03                      1- 2069     	BTRSC	STATUS,0
     00E9 3rrr                      1- 2070     	LGOTO	_00603_DS_
                                    1- 2071     	.line	792, "main.c"; 	pwStep = 5;
     00EA 2105                      1- 2072     	MOVIA	0x05
                                    1- 2073     	BANKSEL	_pwStep
     00EB rrrr                      3-   71 m1      .banksel ram_address
     00EC 00rr                      1- 2074     	MOVAR	_pwStep
     00ED 3rrr                      1- 2075     	LGOTO	_00603_DS_
     00EE                           1- 2076     _00602_DS_:
                                    1- 2077     	.line	795, "main.c"; 	pwStep = 5;
     00EE 2105                      1- 2078     	MOVIA	0x05
                                    1- 2079     	BANKSEL	_pwStep
     00EF rrrr                      3-   71 m1      .banksel ram_address
     00F0 00rr                      1- 2080     	MOVAR	_pwStep
     00F1                           1- 2081     _00603_DS_:
                                    1- 2082     	.line	796, "main.c"; 	chrgTime = 0;
                                    1- 2083     	BANKSEL	_chrgTime
     00F1 rrrr                      3-   71 m1      .banksel ram_address
     00F2 02rr                      1- 2084     	CLRR	_chrgTime
     00F3 02rr                      1- 2085     	CLRR	(_chrgTime + 1)
     00F4 3rrr                      1- 2086     	LGOTO	_00656_DS_
                                    1- 2087     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2088     ;;unsigned compare: left >= lit (0x105=261), size=2
     00F5                           1- 2089     _00648_DS_:
                                    1- 2090     	.line	798, "main.c"; 	else if(R_AIN2_DATA > 260)
     00F5 2101                      1- 2091     	MOVIA	0x01
                                    1- 2092     	BANKSEL	_R_AIN2_DATA
     00F6 rrrr                      3-   71 m1      .banksel ram_address
     00F7 04rr                      1- 2093     	SUBAR	(_R_AIN2_DATA + 1),W
     00F8 0903                      1- 2094     	BTRSS	STATUS,2
     00F9 3rrr                      1- 2095     	LGOTO	_00780_DS_
     00FA 2105                      1- 2096     	MOVIA	0x05
     00FB 04rr                      1- 2097     	SUBAR	_R_AIN2_DATA,W
     00FC                           1- 2098     _00780_DS_:
     00FC 0803                      1- 2099     	BTRSS	STATUS,0
     00FD 3rrr                      1- 2100     	LGOTO	_00645_DS_
                                    1- 2101     	.line	800, "main.c"; 	if(pwStep == 3)
                                    1- 2102     	BANKSEL	_pwStep
     00FE rrrr                      3-   71 m1      .banksel ram_address
     00FF 01rr                      1- 2103     	MOVR	_pwStep,W
     0100 2403                      1- 2104     	XORIA	0x03
     0101 0903                      1- 2105     	BTRSS	STATUS,2
     0102 3rrr                      1- 2106     	LGOTO	_00607_DS_
                                    1- 2107     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2108     ;;unsigned compare: left >= lit (0x10A=266), size=2
                                    1- 2109     	.line	802, "main.c"; 	if(R_AIN2_DATA > 265)
     0103 2101                      1- 2110     	MOVIA	0x01
                                    1- 2111     	BANKSEL	_R_AIN2_DATA
     0104 rrrr                      3-   71 m1      .banksel ram_address
     0105 04rr                      1- 2112     	SUBAR	(_R_AIN2_DATA + 1),W
     0106 0903                      1- 2113     	BTRSS	STATUS,2
     0107 3rrr                      1- 2114     	LGOTO	_00781_DS_
     0108 210A                      1- 2115     	MOVIA	0x0a
     0109 04rr                      1- 2116     	SUBAR	_R_AIN2_DATA,W
     010A                           1- 2117     _00781_DS_:
     010A 0803                      1- 2118     	BTRSS	STATUS,0
     010B 3rrr                      1- 2119     	LGOTO	_00607_DS_
                                    1- 2120     	.line	803, "main.c"; 	pwStep = 4;
     010C 2104                      1- 2121     	MOVIA	0x04
                                    1- 2122     	BANKSEL	_pwStep
     010D rrrr                      3-   71 m1      .banksel ram_address
     010E 00rr                      1- 2123     	MOVAR	_pwStep
                                    1- 2124     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2125     ;;unsigned compare: left >= lit (0x5=5), size=1
     010F                           1- 2126     _00607_DS_:
                                    1- 2127     	.line	805, "main.c"; 	if(pwStep > 4)
     010F 2105                      1- 2128     	MOVIA	0x05
                                    1- 2129     	BANKSEL	_pwStep
     0110 rrrr                      3-   71 m1      .banksel ram_address
     0111 04rr                      1- 2130     	SUBAR	_pwStep,W
     0112 0803                      1- 2131     	BTRSS	STATUS,0
     0113 3rrr                      1- 2132     	LGOTO	_00611_DS_
                                    1- 2133     ;;unsigned compare: left < lit (0x140=320), size=2
                                    1- 2134     	.line	807, "main.c"; 	if(R_AIN2_DATA < 320)
     0114 2101                      1- 2135     	MOVIA	0x01
                                    1- 2136     	BANKSEL	_R_AIN2_DATA
     0115 rrrr                      3-   71 m1      .banksel ram_address
     0116 04rr                      1- 2137     	SUBAR	(_R_AIN2_DATA + 1),W
     0117 0903                      1- 2138     	BTRSS	STATUS,2
     0118 3rrr                      1- 2139     	LGOTO	_00783_DS_
     0119 2140                      1- 2140     	MOVIA	0x40
     011A 04rr                      1- 2141     	SUBAR	_R_AIN2_DATA,W
     011B                           1- 2142     _00783_DS_:
     011B 0C03                      1- 2143     	BTRSC	STATUS,0
     011C 3rrr                      1- 2144     	LGOTO	_00612_DS_
                                    1- 2145     	.line	808, "main.c"; 	pwStep = 4;
     011D 2104                      1- 2146     	MOVIA	0x04
                                    1- 2147     	BANKSEL	_pwStep
     011E rrrr                      3-   71 m1      .banksel ram_address
     011F 00rr                      1- 2148     	MOVAR	_pwStep
     0120 3rrr                      1- 2149     	LGOTO	_00612_DS_
     0121                           1- 2150     _00611_DS_:
                                    1- 2151     	.line	811, "main.c"; 	pwStep = 4;
     0121 2104                      1- 2152     	MOVIA	0x04
                                    1- 2153     	BANKSEL	_pwStep
     0122 rrrr                      3-   71 m1      .banksel ram_address
     0123 00rr                      1- 2154     	MOVAR	_pwStep
     0124                           1- 2155     _00612_DS_:
                                    1- 2156     	.line	812, "main.c"; 	chrgTime = 0;
                                    1- 2157     	BANKSEL	_chrgTime
     0124 rrrr                      3-   71 m1      .banksel ram_address
     0125 02rr                      1- 2158     	CLRR	_chrgTime
     0126 02rr                      1- 2159     	CLRR	(_chrgTime + 1)
     0127 3rrr                      1- 2160     	LGOTO	_00656_DS_
                                    1- 2161     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2162     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0128                           1- 2163     _00645_DS_:
                                    1- 2164     	.line	814, "main.c"; 	else if(R_AIN2_DATA > 200)
     0128 2100                      1- 2165     	MOVIA	0x00
                                    1- 2166     	BANKSEL	_R_AIN2_DATA
     0129 rrrr                      3-   71 m1      .banksel ram_address
     012A 04rr                      1- 2167     	SUBAR	(_R_AIN2_DATA + 1),W
     012B 0903                      1- 2168     	BTRSS	STATUS,2
     012C 3rrr                      1- 2169     	LGOTO	_00784_DS_
     012D 21C9                      1- 2170     	MOVIA	0xc9
     012E 04rr                      1- 2171     	SUBAR	_R_AIN2_DATA,W
     012F                           1- 2172     _00784_DS_:
     012F 0803                      1- 2173     	BTRSS	STATUS,0
     0130 3rrr                      1- 2174     	LGOTO	_00642_DS_
                                    1- 2175     	.line	816, "main.c"; 	if(pwStep == 2)
                                    1- 2176     	BANKSEL	_pwStep
     0131 rrrr                      3-   71 m1      .banksel ram_address
     0132 01rr                      1- 2177     	MOVR	_pwStep,W
     0133 2402                      1- 2178     	XORIA	0x02
     0134 0903                      1- 2179     	BTRSS	STATUS,2
     0135 3rrr                      1- 2180     	LGOTO	_00616_DS_
                                    1- 2181     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2182     ;;unsigned compare: left >= lit (0xD3=211), size=2
                                    1- 2183     	.line	818, "main.c"; 	if(R_AIN2_DATA > 210)
     0136 2100                      1- 2184     	MOVIA	0x00
                                    1- 2185     	BANKSEL	_R_AIN2_DATA
     0137 rrrr                      3-   71 m1      .banksel ram_address
     0138 04rr                      1- 2186     	SUBAR	(_R_AIN2_DATA + 1),W
     0139 0903                      1- 2187     	BTRSS	STATUS,2
     013A 3rrr                      1- 2188     	LGOTO	_00785_DS_
     013B 21D3                      1- 2189     	MOVIA	0xd3
     013C 04rr                      1- 2190     	SUBAR	_R_AIN2_DATA,W
     013D                           1- 2191     _00785_DS_:
     013D 0803                      1- 2192     	BTRSS	STATUS,0
     013E 3rrr                      1- 2193     	LGOTO	_00616_DS_
                                    1- 2194     	.line	819, "main.c"; 	pwStep = 3;
     013F 2103                      1- 2195     	MOVIA	0x03
                                    1- 2196     	BANKSEL	_pwStep
     0140 rrrr                      3-   71 m1      .banksel ram_address
     0141 00rr                      1- 2197     	MOVAR	_pwStep
                                    1- 2198     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2199     ;;unsigned compare: left >= lit (0x4=4), size=1
     0142                           1- 2200     _00616_DS_:
                                    1- 2201     	.line	821, "main.c"; 	if(pwStep > 3)
     0142 2104                      1- 2202     	MOVIA	0x04
                                    1- 2203     	BANKSEL	_pwStep
     0143 rrrr                      3-   71 m1      .banksel ram_address
     0144 04rr                      1- 2204     	SUBAR	_pwStep,W
     0145 0803                      1- 2205     	BTRSS	STATUS,0
     0146 3rrr                      1- 2206     	LGOTO	_00620_DS_
                                    1- 2207     ;;unsigned compare: left < lit (0x104=260), size=2
                                    1- 2208     	.line	823, "main.c"; 	if(R_AIN2_DATA < 260)
     0147 2101                      1- 2209     	MOVIA	0x01
                                    1- 2210     	BANKSEL	_R_AIN2_DATA
     0148 rrrr                      3-   71 m1      .banksel ram_address
     0149 04rr                      1- 2211     	SUBAR	(_R_AIN2_DATA + 1),W
     014A 0903                      1- 2212     	BTRSS	STATUS,2
     014B 3rrr                      1- 2213     	LGOTO	_00787_DS_
     014C 2104                      1- 2214     	MOVIA	0x04
     014D 04rr                      1- 2215     	SUBAR	_R_AIN2_DATA,W
     014E                           1- 2216     _00787_DS_:
     014E 0C03                      1- 2217     	BTRSC	STATUS,0
     014F 3rrr                      1- 2218     	LGOTO	_00621_DS_
                                    1- 2219     	.line	824, "main.c"; 	pwStep = 3;
     0150 2103                      1- 2220     	MOVIA	0x03
                                    1- 2221     	BANKSEL	_pwStep
     0151 rrrr                      3-   71 m1      .banksel ram_address
     0152 00rr                      1- 2222     	MOVAR	_pwStep
     0153 3rrr                      1- 2223     	LGOTO	_00621_DS_
     0154                           1- 2224     _00620_DS_:
                                    1- 2225     	.line	827, "main.c"; 	pwStep = 3;
     0154 2103                      1- 2226     	MOVIA	0x03
                                    1- 2227     	BANKSEL	_pwStep
     0155 rrrr                      3-   71 m1      .banksel ram_address
     0156 00rr                      1- 2228     	MOVAR	_pwStep
     0157                           1- 2229     _00621_DS_:
                                    1- 2230     	.line	828, "main.c"; 	chrgTime = 0;
                                    1- 2231     	BANKSEL	_chrgTime
     0157 rrrr                      3-   71 m1      .banksel ram_address
     0158 02rr                      1- 2232     	CLRR	_chrgTime
     0159 02rr                      1- 2233     	CLRR	(_chrgTime + 1)
     015A 3rrr                      1- 2234     	LGOTO	_00656_DS_
                                    1- 2235     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2236     ;;unsigned compare: left >= lit (0x65=101), size=2
     015B                           1- 2237     _00642_DS_:
                                    1- 2238     	.line	830, "main.c"; 	else if(R_AIN2_DATA > 100)
     015B 2100                      1- 2239     	MOVIA	0x00
                                    1- 2240     	BANKSEL	_R_AIN2_DATA
     015C rrrr                      3-   71 m1      .banksel ram_address
     015D 04rr                      1- 2241     	SUBAR	(_R_AIN2_DATA + 1),W
     015E 0903                      1- 2242     	BTRSS	STATUS,2
     015F 3rrr                      1- 2243     	LGOTO	_00788_DS_
     0160 2165                      1- 2244     	MOVIA	0x65
     0161 04rr                      1- 2245     	SUBAR	_R_AIN2_DATA,W
     0162                           1- 2246     _00788_DS_:
     0162 0803                      1- 2247     	BTRSS	STATUS,0
     0163 3rrr                      1- 2248     	LGOTO	_00639_DS_
                                    1- 2249     	.line	833, "main.c"; 	if(pwStep == 1)
                                    1- 2250     	BANKSEL	_pwStep
     0164 rrrr                      3-   71 m1      .banksel ram_address
     0165 01rr                      1- 2251     	MOVR	_pwStep,W
     0166 2401                      1- 2252     	XORIA	0x01
     0167 0903                      1- 2253     	BTRSS	STATUS,2
     0168 3rrr                      1- 2254     	LGOTO	_00625_DS_
                                    1- 2255     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2256     ;;unsigned compare: left >= lit (0x6F=111), size=2
                                    1- 2257     	.line	835, "main.c"; 	if(R_AIN2_DATA > 110)
     0169 2100                      1- 2258     	MOVIA	0x00
                                    1- 2259     	BANKSEL	_R_AIN2_DATA
     016A rrrr                      3-   71 m1      .banksel ram_address
     016B 04rr                      1- 2260     	SUBAR	(_R_AIN2_DATA + 1),W
     016C 0903                      1- 2261     	BTRSS	STATUS,2
     016D 3rrr                      1- 2262     	LGOTO	_00789_DS_
     016E 216F                      1- 2263     	MOVIA	0x6f
     016F 04rr                      1- 2264     	SUBAR	_R_AIN2_DATA,W
     0170                           1- 2265     _00789_DS_:
     0170 0803                      1- 2266     	BTRSS	STATUS,0
     0171 3rrr                      1- 2267     	LGOTO	_00625_DS_
                                    1- 2268     	.line	836, "main.c"; 	pwStep = 2;
     0172 2102                      1- 2269     	MOVIA	0x02
                                    1- 2270     	BANKSEL	_pwStep
     0173 rrrr                      3-   71 m1      .banksel ram_address
     0174 00rr                      1- 2271     	MOVAR	_pwStep
                                    1- 2272     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2273     ;;unsigned compare: left >= lit (0x3=3), size=1
     0175                           1- 2274     _00625_DS_:
                                    1- 2275     	.line	838, "main.c"; 	if(pwStep > 2)
     0175 2103                      1- 2276     	MOVIA	0x03
                                    1- 2277     	BANKSEL	_pwStep
     0176 rrrr                      3-   71 m1      .banksel ram_address
     0177 04rr                      1- 2278     	SUBAR	_pwStep,W
     0178 0803                      1- 2279     	BTRSS	STATUS,0
     0179 3rrr                      1- 2280     	LGOTO	_00629_DS_
                                    1- 2281     ;;unsigned compare: left < lit (0xBE=190), size=2
                                    1- 2282     	.line	840, "main.c"; 	if(R_AIN2_DATA < 190)
     017A 2100                      1- 2283     	MOVIA	0x00
                                    1- 2284     	BANKSEL	_R_AIN2_DATA
     017B rrrr                      3-   71 m1      .banksel ram_address
     017C 04rr                      1- 2285     	SUBAR	(_R_AIN2_DATA + 1),W
     017D 0903                      1- 2286     	BTRSS	STATUS,2
     017E 3rrr                      1- 2287     	LGOTO	_00791_DS_
     017F 21BE                      1- 2288     	MOVIA	0xbe
     0180 04rr                      1- 2289     	SUBAR	_R_AIN2_DATA,W
     0181                           1- 2290     _00791_DS_:
     0181 0C03                      1- 2291     	BTRSC	STATUS,0
     0182 3rrr                      1- 2292     	LGOTO	_00630_DS_
                                    1- 2293     	.line	841, "main.c"; 	pwStep = 2;
     0183 2102                      1- 2294     	MOVIA	0x02
                                    1- 2295     	BANKSEL	_pwStep
     0184 rrrr                      3-   71 m1      .banksel ram_address
     0185 00rr                      1- 2296     	MOVAR	_pwStep
     0186 3rrr                      1- 2297     	LGOTO	_00630_DS_
     0187                           1- 2298     _00629_DS_:
                                    1- 2299     	.line	844, "main.c"; 	pwStep = 2;
     0187 2102                      1- 2300     	MOVIA	0x02
                                    1- 2301     	BANKSEL	_pwStep
     0188 rrrr                      3-   71 m1      .banksel ram_address
     0189 00rr                      1- 2302     	MOVAR	_pwStep
     018A                           1- 2303     _00630_DS_:
                                    1- 2304     	.line	845, "main.c"; 	chrgTime = 0;
                                    1- 2305     	BANKSEL	_chrgTime
     018A rrrr                      3-   71 m1      .banksel ram_address
     018B 02rr                      1- 2306     	CLRR	_chrgTime
     018C 02rr                      1- 2307     	CLRR	(_chrgTime + 1)
     018D 3rrr                      1- 2308     	LGOTO	_00656_DS_
     018E                           1- 2309     _00639_DS_:
                                    1- 2310     	.line	847, "main.c"; 	else  if(R_AIN2_DATA > 0)
                                    1- 2311     	BANKSEL	_R_AIN2_DATA
     018E rrrr                      3-   71 m1      .banksel ram_address
     018F 01rr                      1- 2312     	MOVR	_R_AIN2_DATA,W
     0190 11rr                      1- 2313     	IORAR	(_R_AIN2_DATA + 1),W
     0191 0D03                      1- 2314     	BTRSC	STATUS,2
     0192 3rrr                      1- 2315     	LGOTO	_00656_DS_
                                    1- 2316     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2317     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 2318     	.line	850, "main.c"; 	if(pwStep > 1)
     0193 2102                      1- 2319     	MOVIA	0x02
                                    1- 2320     	BANKSEL	_pwStep
     0194 rrrr                      3-   71 m1      .banksel ram_address
     0195 04rr                      1- 2321     	SUBAR	_pwStep,W
     0196 0803                      1- 2322     	BTRSS	STATUS,0
     0197 3rrr                      1- 2323     	LGOTO	_00634_DS_
                                    1- 2324     ;;unsigned compare: left < lit (0x5A=90), size=2
                                    1- 2325     	.line	852, "main.c"; 	if(R_AIN2_DATA < 90)
     0198 2100                      1- 2326     	MOVIA	0x00
                                    1- 2327     	BANKSEL	_R_AIN2_DATA
     0199 rrrr                      3-   71 m1      .banksel ram_address
     019A 04rr                      1- 2328     	SUBAR	(_R_AIN2_DATA + 1),W
     019B 0903                      1- 2329     	BTRSS	STATUS,2
     019C 3rrr                      1- 2330     	LGOTO	_00793_DS_
     019D 215A                      1- 2331     	MOVIA	0x5a
     019E 04rr                      1- 2332     	SUBAR	_R_AIN2_DATA,W
     019F                           1- 2333     _00793_DS_:
     019F 0C03                      1- 2334     	BTRSC	STATUS,0
     01A0 3rrr                      1- 2335     	LGOTO	_00635_DS_
                                    1- 2336     	.line	853, "main.c"; 	pwStep = 1;
     01A1 2101                      1- 2337     	MOVIA	0x01
                                    1- 2338     	BANKSEL	_pwStep
     01A2 rrrr                      3-   71 m1      .banksel ram_address
     01A3 00rr                      1- 2339     	MOVAR	_pwStep
     01A4 3rrr                      1- 2340     	LGOTO	_00635_DS_
     01A5                           1- 2341     _00634_DS_:
                                    1- 2342     	.line	856, "main.c"; 	pwStep = 1;
     01A5 2101                      1- 2343     	MOVIA	0x01
                                    1- 2344     	BANKSEL	_pwStep
     01A6 rrrr                      3-   71 m1      .banksel ram_address
     01A7 00rr                      1- 2345     	MOVAR	_pwStep
     01A8                           1- 2346     _00635_DS_:
                                    1- 2347     	.line	857, "main.c"; 	chrgTime = 0;
                                    1- 2348     	BANKSEL	_chrgTime
     01A8 rrrr                      3-   71 m1      .banksel ram_address
     01A9 02rr                      1- 2349     	CLRR	_chrgTime
     01AA 02rr                      1- 2350     	CLRR	(_chrgTime + 1)
     01AB                           1- 2351     _00656_DS_:
                                    1- 2352     	.line	861, "main.c"; 	}
                                    1- 2353     	RETURN	
     01AB 0010                      3-   26 m1      ret
                                    1- 2354     ; exit point of _checkBatAD
                                    1- 2356     ;***
                                    1- 2357     ;  pBlock Stats: dbName = C
                                    1- 2358     ;***
                                    1- 2359     ;has an exit
                                    1- 2360     ;functions called:
                                    1- 2361     ;   _delay
                                    1- 2362     ;   _delay
                                    1- 2363     ;; Starting pCode block
                                    1- 2364     .segment "code"; module=main, function=_initAD
     0000                           1- 2366     _initAD:
                                    1- 2367     ; 2 exit points
                                    1- 2368     	.line	696, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 2369     	MOVIA	0x84
     0001 00rr                      1- 2370     	MOVAR	_ADMD
                                    1- 2371     	.line	701, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 2372     	CLRR	_ADVREFH
                                    1- 2373     	.line	706, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 2374     	MOVIA	0x10
     0004 00rr                      1- 2375     	MOVAR	_ADR
                                    1- 2376     	.line	708, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 2377     	MOVIA	0x03
     0006 00rr                      1- 2378     	MOVAR	_ADCR
                                    1- 2379     	.line	711, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 2380     	BSR	_ADMDbits,4
                                    1- 2381     	.line	712, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 2382     	MOVIA	0x64
     0009 2rrr                      1- 2383     	LCALL	_delay
                                    1- 2384     	.line	715, "main.c"; 	}
                                    1- 2385     	RETURN	
     000A 0010                      3-   26 m1      ret
                                    1- 2386     ; exit point of _initAD
                                    1- 2388     ;***
                                    1- 2389     ;  pBlock Stats: dbName = C
                                    1- 2390     ;***
                                    1- 2391     ;has an exit
                                    1- 2392     ;2 compiler assigned registers:
                                    1- 2393     ;   r0x1032
                                    1- 2394     ;   r0x1033
                                    1- 2395     ;; Starting pCode block
                                    1- 2396     .segment "code"; module=main, function=_delay
                                    1- 2398     ;local variable name mapping:
     0000                           1- 2401     _delay:
                                    1- 2402     ; 2 exit points
                                    1- 2403     	.line	686, "main.c"; 	void delay(u8t time)
                                    1- 2404     	BANKSEL	r0x1032
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 2405     	MOVAR	r0x1032
                                    1- 2406     	.line	688, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2407     	BANKSEL	r0x1033
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 2408     	CLRR	r0x1033
     0004                           1- 2409     _00562_DS_:
                                    1- 2410     	BANKSEL	r0x1032
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 2411     	MOVR	r0x1032,W
                                    1- 2412     	BANKSEL	r0x1033
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 04rr                      1- 2413     	SUBAR	r0x1033,W
     0008 0C03                      1- 2414     	BTRSC	STATUS,0
     0009 3rrr                      1- 2415     	LGOTO	_00564_DS_
                                    1- 2416     	.line	689, "main.c"; 	NOP();
     000A 0000                      1- 2417     	nop
                                    1- 2418     	.line	688, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2419     	BANKSEL	r0x1033
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 05rr                      1- 2420     	INCR	r0x1033,F
     000D 3rrr                      1- 2421     	LGOTO	_00562_DS_
     000E                           1- 2422     _00564_DS_:
                                    1- 2423     	.line	690, "main.c"; 	}
                                    1- 2424     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 2425     ; exit point of _delay
                                    1- 2427     ;***
                                    1- 2428     ;  pBlock Stats: dbName = C
                                    1- 2429     ;***
                                    1- 2430     ;has an exit
                                    1- 2431     ;functions called:
                                    1- 2432     ;   _pwmStop
                                    1- 2433     ;   _pwm1Stop
                                    1- 2434     ;   _pwm1Init
                                    1- 2435     ;   _pwm1Stop
                                    1- 2436     ;   _pwmStop
                                    1- 2437     ;   _pwm1Stop
                                    1- 2438     ;   _pwm1Init
                                    1- 2439     ;   _pwm1Stop
                                    1- 2440     ;5 compiler assigned registers:
                                    1- 2441     ;   r0x1053
                                    1- 2442     ;   r0x1054
                                    1- 2443     ;   r0x1055
                                    1- 2444     ;   r0x1056
                                    1- 2445     ;   r0x1057
                                    1- 2446     ;; Starting pCode block
                                    1- 2447     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2449     _chrgCtr:
                                    1- 2450     ; 2 exit points
                                    1- 2451     	.line	611, "main.c"; 	if(PORTA & 0x08 || R_AIN3_DATA > 200)
                                    1- 2452     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 0Drr                      1- 2453     	BTRSC	_PORTA,3
     0002 3rrr                      1- 2454     	LGOTO	_00511_DS_
                                    1- 2455     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2456     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0003 2100                      1- 2457     	MOVIA	0x00
                                    1- 2458     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 04rr                      1- 2459     	SUBAR	(_R_AIN3_DATA + 1),W
     0006 0903                      1- 2460     	BTRSS	STATUS,2
     0007 3rrr                      1- 2461     	LGOTO	_00553_DS_
     0008 21C9                      1- 2462     	MOVIA	0xc9
     0009 04rr                      1- 2463     	SUBAR	_R_AIN3_DATA,W
     000A                           1- 2464     _00553_DS_:
     000A 0803                      1- 2465     	BTRSS	STATUS,0
     000B 3rrr                      1- 2466     	LGOTO	_00512_DS_
     000C                           1- 2467     _00511_DS_:
                                    1- 2468     	.line	614, "main.c"; 	chrgFlag = 1;
                                    1- 2469     	BANKSEL	_Status
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 19rr                      1- 2470     	BSR	_Status,3
                                    1- 2471     	.line	615, "main.c"; 	workStep = 0;
                                    1- 2472     	BANKSEL	_workStep
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 02rr                      1- 2473     	CLRR	_workStep
                                    1- 2474     	.line	616, "main.c"; 	ledLightTime = 0;
                                    1- 2475     	BANKSEL	_ledLightTime
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 02rr                      1- 2476     	CLRR	_ledLightTime
                                    1- 2477     	.line	617, "main.c"; 	pwmStop();
     0012 2rrr                      1- 2478     	LCALL	_pwmStop
                                    1- 2479     	.line	619, "main.c"; 	if(pwStep == 7)
                                    1- 2480     	BANKSEL	_pwStep
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 2481     	MOVR	_pwStep,W
     0015 2407                      1- 2482     	XORIA	0x07
     0016 0903                      1- 2483     	BTRSS	STATUS,2
     0017 3rrr                      1- 2484     	LGOTO	_00507_DS_
                                    1- 2485     	.line	621, "main.c"; 	chrgStep = 4;
     0018 2104                      1- 2486     	MOVIA	0x04
                                    1- 2487     	BANKSEL	_chrgStep
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 00rr                      1- 2488     	MOVAR	_chrgStep
                                    1- 2489     	.line	623, "main.c"; 	ledStep = 6;
     001B 2106                      1- 2490     	MOVIA	0x06
                                    1- 2491     	BANKSEL	_ledStep
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1- 2492     	MOVAR	_ledStep
                                    1- 2493     	.line	624, "main.c"; 	if(++fullCount > 100)
                                    1- 2494     	BANKSEL	_fullCount
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 05rr                      1- 2495     	INCR	_fullCount,F
                                    1- 2496     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2497     ;;unsigned compare: left >= lit (0x65=101), size=1
     0020 2165                      1- 2498     	MOVIA	0x65
     0021 04rr                      1- 2499     	SUBAR	_fullCount,W
     0022 0C03                      1- 2500     	BTRSC	STATUS,0
                                    1- 2501     	.line	625, "main.c"; 	pwm1Stop();
     0023 2rrr                      1- 2502     	LCALL	_pwm1Stop
                                    1- 2503     	.line	627, "main.c"; 	PORTB &= 0xF7;
     0024 1Drr                      1- 2504     	BCR	_PORTB,3
                                    1- 2505     	.line	628, "main.c"; 	IOSTB |= 0X08;
     0025 001r                      1- 2506     	IOSTR	_IOSTB
                                    1- 2507     	BANKSEL	r0x1053
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 00rr                      1- 2508     	MOVAR	r0x1053
     0028 19rr                      1- 2509     	BSR	r0x1053,3
     0029 01rr                      1- 2510     	MOVR	r0x1053,W
     002A 000r                      1- 2511     	IOST	_IOSTB
     002B 3rrr                      1- 2512     	LGOTO	_00515_DS_
     002C                           1- 2513     _00507_DS_:
                                    1- 2514     	.line	633, "main.c"; 	IOSTB &= 0xF7;
     002C 001r                      1- 2515     	IOSTR	_IOSTB
                                    1- 2516     	BANKSEL	r0x1053
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 00rr                      1- 2517     	MOVAR	r0x1053
     002F 1Drr                      1- 2518     	BCR	r0x1053,3
     0030 01rr                      1- 2519     	MOVR	r0x1053,W
     0031 000r                      1- 2520     	IOST	_IOSTB
                                    1- 2521     	.line	635, "main.c"; 	if(count500ms == 0)
                                    1- 2522     	BANKSEL	_count500ms
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 01rr                      1- 2523     	MOVR	_count500ms,W
     0034 0903                      1- 2524     	BTRSS	STATUS,2
     0035 3rrr                      1- 2525     	LGOTO	_00493_DS_
                                    1- 2526     	.line	637, "main.c"; 	if(lockLedStep < pwStep - 1)
                                    1- 2527     	BANKSEL	_pwStep
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 01rr                      1- 2528     	MOVR	_pwStep,W
                                    1- 2529     	BANKSEL	r0x1053
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 00rr                      1- 2530     	MOVAR	r0x1053
                                    1- 2531     	BANKSEL	r0x1054
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 02rr                      1- 2532     	CLRR	r0x1054
     003C 21FF                      1- 2533     	MOVIA	0xff
                                    1- 2534     	BANKSEL	r0x1053
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 03rr                      1- 2535     	ADDAR	r0x1053,F
     003F 0C03                      1- 2536     	BTRSC	STATUS,0
     0040 3rrr                      1- 2537     	LGOTO	_00007_DS_
                                    1- 2538     	BANKSEL	r0x1054
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 06rr                      1- 2539     	DECR	r0x1054,F
     0043                           1- 2540     _00007_DS_:
                                    1- 2541     	BANKSEL	_lockLedStep
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 01rr                      1- 2542     	MOVR	_lockLedStep,W
                                    1- 2543     	BANKSEL	r0x1055
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 00rr                      1- 2544     	MOVAR	r0x1055
                                    1- 2545     ;;1	CLRR	r0x1056
     0047 2100                      1- 2546     	MOVIA	0x00
     0048 2580                      1- 2547     	ADDIA	0x80
                                    1- 2548     	BANKSEL	r0x1057
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 00rr                      1- 2549     	MOVAR	r0x1057
                                    1- 2550     	BANKSEL	r0x1054
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 01rr                      1- 2551     	MOVR	r0x1054,W
     004D 2580                      1- 2552     	ADDIA	0x80
                                    1- 2553     	BANKSEL	r0x1057
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 04rr                      1- 2554     	SUBAR	r0x1057,W
     0050 0903                      1- 2555     	BTRSS	STATUS,2
     0051 3rrr                      1- 2556     	LGOTO	_00555_DS_
                                    1- 2557     	BANKSEL	r0x1053
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 01rr                      1- 2558     	MOVR	r0x1053,W
                                    1- 2559     	BANKSEL	r0x1055
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 04rr                      1- 2560     	SUBAR	r0x1055,W
     0056                           1- 2561     _00555_DS_:
     0056 0C03                      1- 2562     	BTRSC	STATUS,0
     0057 3rrr                      1- 2563     	LGOTO	_00489_DS_
                                    1- 2564     	.line	638, "main.c"; 	lockLedStep = pwStep - 1;
                                    1- 2565     	BANKSEL	_pwStep
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 06rr                      1- 2566     	DECR	_pwStep,W
                                    1- 2567     	BANKSEL	_lockLedStep
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 00rr                      1- 2568     	MOVAR	_lockLedStep
     005C                           1- 2569     _00489_DS_:
                                    1- 2570     	.line	639, "main.c"; 	if(++ledStep > 6)
                                    1- 2571     	BANKSEL	_ledStep
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 05rr                      1- 2572     	INCR	_ledStep,F
                                    1- 2573     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2574     ;;unsigned compare: left >= lit (0x7=7), size=1
     005E 2107                      1- 2575     	MOVIA	0x07
     005F 04rr                      1- 2576     	SUBAR	_ledStep,W
     0060 0803                      1- 2577     	BTRSS	STATUS,0
     0061 3rrr                      1- 2578     	LGOTO	_00493_DS_
                                    1- 2579     	.line	640, "main.c"; 	ledStep = lockLedStep;
                                    1- 2580     	BANKSEL	_lockLedStep
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 01rr                      1- 2581     	MOVR	_lockLedStep,W
                                    1- 2582     	BANKSEL	_ledStep
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 00rr                      1- 2583     	MOVAR	_ledStep
                                    1- 2584     ;;unsigned compare: left < lit (0x2=2), size=1
     0066                           1- 2585     _00493_DS_:
                                    1- 2586     	.line	643, "main.c"; 	if(pwStep < 2)
     0066 2102                      1- 2587     	MOVIA	0x02
                                    1- 2588     	BANKSEL	_pwStep
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 04rr                      1- 2589     	SUBAR	_pwStep,W
     0069 0C03                      1- 2590     	BTRSC	STATUS,0
     006A 3rrr                      1- 2591     	LGOTO	_00504_DS_
                                    1- 2592     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2593     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 2594     	.line	645, "main.c"; 	if(chrgStep <= 1)
     006B 2102                      1- 2595     	MOVIA	0x02
                                    1- 2596     	BANKSEL	_chrgStep
     006C rrrr                      3-   71 m1      .banksel ram_address
     006D 04rr                      1- 2597     	SUBAR	_chrgStep,W
     006E 0C03                      1- 2598     	BTRSC	STATUS,0
     006F 3rrr                      1- 2599     	LGOTO	_00505_DS_
                                    1- 2600     	.line	647, "main.c"; 	PWM1DUTY = 8;
     0070 2108                      1- 2601     	MOVIA	0x08
     0071 00rr                      1- 2602     	SFUN	_PWM1DUTY
                                    1- 2603     	.line	648, "main.c"; 	chrgStep = 1;
     0072 2101                      1- 2604     	MOVIA	0x01
     0073 00rr                      1- 2605     	MOVAR	_chrgStep
     0074 3rrr                      1- 2606     	LGOTO	_00505_DS_
                                    1- 2607     ;;unsigned compare: left < lit (0x7=7), size=1
     0075                           1- 2608     _00504_DS_:
                                    1- 2609     	.line	651, "main.c"; 	else if(pwStep < 7)
     0075 2107                      1- 2610     	MOVIA	0x07
                                    1- 2611     	BANKSEL	_pwStep
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 04rr                      1- 2612     	SUBAR	_pwStep,W
     0078 0C03                      1- 2613     	BTRSC	STATUS,0
     0079 3rrr                      1- 2614     	LGOTO	_00501_DS_
                                    1- 2615     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2616     ;;unsigned compare: left >= lit (0x3=3), size=1
                                    1- 2617     	.line	653, "main.c"; 	if(chrgStep <= 2)
     007A 2103                      1- 2618     	MOVIA	0x03
                                    1- 2619     	BANKSEL	_chrgStep
     007B rrrr                      3-   71 m1      .banksel ram_address
     007C 04rr                      1- 2620     	SUBAR	_chrgStep,W
     007D 0C03                      1- 2621     	BTRSC	STATUS,0
     007E 3rrr                      1- 2622     	LGOTO	_00505_DS_
                                    1- 2623     	.line	655, "main.c"; 	chrgStep = 2;
     007F 2102                      1- 2624     	MOVIA	0x02
     0080 00rr                      1- 2625     	MOVAR	_chrgStep
                                    1- 2626     	.line	656, "main.c"; 	PWM1DUTY = 12;
     0081 210C                      1- 2627     	MOVIA	0x0c
     0082 00rr                      1- 2628     	SFUN	_PWM1DUTY
     0083 3rrr                      1- 2629     	LGOTO	_00505_DS_
                                    1- 2630     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2631     ;;unsigned compare: left >= lit (0x4=4), size=1
     0084                           1- 2632     _00501_DS_:
                                    1- 2633     	.line	661, "main.c"; 	if(chrgStep <= 3)
     0084 2104                      1- 2634     	MOVIA	0x04
                                    1- 2635     	BANKSEL	_chrgStep
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 04rr                      1- 2636     	SUBAR	_chrgStep,W
     0087 0C03                      1- 2637     	BTRSC	STATUS,0
     0088 3rrr                      1- 2638     	LGOTO	_00505_DS_
                                    1- 2639     	.line	663, "main.c"; 	PWM1DUTY = 11;
     0089 210B                      1- 2640     	MOVIA	0x0b
     008A 00rr                      1- 2641     	SFUN	_PWM1DUTY
                                    1- 2642     	.line	664, "main.c"; 	chrgStep = 3;
     008B 2103                      1- 2643     	MOVIA	0x03
     008C 00rr                      1- 2644     	MOVAR	_chrgStep
     008D                           1- 2645     _00505_DS_:
                                    1- 2646     	.line	667, "main.c"; 	pwm1Init();
     008D 2rrr                      1- 2647     	LCALL	_pwm1Init
     008E 3rrr                      1- 2648     	LGOTO	_00515_DS_
     008F                           1- 2649     _00512_DS_:
                                    1- 2650     	.line	673, "main.c"; 	chrgStep = 0;
                                    1- 2651     	BANKSEL	_chrgStep
     008F rrrr                      3-   71 m1      .banksel ram_address
     0090 02rr                      1- 2652     	CLRR	_chrgStep
                                    1- 2653     	.line	674, "main.c"; 	lockLedStep = 0;
                                    1- 2654     	BANKSEL	_lockLedStep
     0091 rrrr                      3-   71 m1      .banksel ram_address
     0092 02rr                      1- 2655     	CLRR	_lockLedStep
                                    1- 2656     	.line	675, "main.c"; 	chrgTime = 0;
                                    1- 2657     	BANKSEL	_chrgTime
     0093 rrrr                      3-   71 m1      .banksel ram_address
     0094 02rr                      1- 2658     	CLRR	_chrgTime
     0095 02rr                      1- 2659     	CLRR	(_chrgTime + 1)
                                    1- 2660     	.line	676, "main.c"; 	pwm1Stop();
     0096 2rrr                      1- 2661     	LCALL	_pwm1Stop
                                    1- 2662     	.line	677, "main.c"; 	if(workStep == 0)
                                    1- 2663     	BANKSEL	_workStep
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 01rr                      1- 2664     	MOVR	_workStep,W
     0099 0903                      1- 2665     	BTRSS	STATUS,2
     009A 3rrr                      1- 2666     	LGOTO	_00008_DS_
                                    1- 2667     	.line	678, "main.c"; 	ledStep = 0;
                                    1- 2668     	BANKSEL	_ledStep
     009B rrrr                      3-   71 m1      .banksel ram_address
     009C 02rr                      1- 2669     	CLRR	_ledStep
     009D                           1- 2670     _00008_DS_:
                                    1- 2671     	.line	679, "main.c"; 	chrgFlag = 0;
                                    1- 2672     	BANKSEL	_Status
     009D rrrr                      3-   71 m1      .banksel ram_address
     009E 1Drr                      1- 2673     	BCR	_Status,3
                                    1- 2674     	.line	680, "main.c"; 	chrgTime = 0;	//���ó�����
                                    1- 2675     	BANKSEL	_chrgTime
     009F rrrr                      3-   71 m1      .banksel ram_address
     00A0 02rr                      1- 2676     	CLRR	_chrgTime
     00A1 02rr                      1- 2677     	CLRR	(_chrgTime + 1)
     00A2                           1- 2678     _00515_DS_:
                                    1- 2679     	.line	683, "main.c"; 	}
                                    1- 2680     	RETURN	
     00A2 0010                      3-   26 m1      ret
                                    1- 2681     ; exit point of _chrgCtr
                                    1- 2683     ;***
                                    1- 2684     ;  pBlock Stats: dbName = C
                                    1- 2685     ;***
                                    1- 2686     ;has an exit
                                    1- 2687     ;1 compiler assigned register :
                                    1- 2688     ;   r0x1058
                                    1- 2689     ;; Starting pCode block
                                    1- 2690     .segment "code"; module=main, function=_keyRead
                                    1- 2692     ;local variable name mapping:
     0000                           1- 2694     _keyRead:
                                    1- 2695     ; 2 exit points
                                    1- 2696     	.line	574, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2697     	BANKSEL	r0x1058
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 2698     	MOVAR	r0x1058
                                    1- 2699     	.line	576, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2700     	MOVR	r0x1058,W
     0003 0D03                      1- 2701     	BTRSC	STATUS,2
     0004 3rrr                      1- 2702     	LGOTO	_00479_DS_
                                    1- 2703     	.line	578, "main.c"; 	keyCount++;
                                    1- 2704     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 2705     	INCR	_keyCount,F
                                    1- 2706     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 2707     	.line	579, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 2708     	MOVIA	0x64
     0008 04rr                      1- 2709     	SUBAR	_keyCount,W
     0009 0803                      1- 2710     	BTRSS	STATUS,0
     000A 3rrr                      1- 2711     	LGOTO	_00480_DS_
                                    1- 2712     	.line	581, "main.c"; 	keyCount = 100;
     000B 2164                      1- 2713     	MOVIA	0x64
     000C 00rr                      1- 2714     	MOVAR	_keyCount
                                    1- 2715     	.line	582, "main.c"; 	if(!longPressFlag)
                                    1- 2716     	BANKSEL	_Status
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 0Crr                      1- 2717     	BTRSC	_Status,1
     000F 3rrr                      1- 2718     	LGOTO	_00480_DS_
                                    1- 2719     	.line	584, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 2720     	BSR	_Status,1
                                    1- 2721     	.line	585, "main.c"; 	return 2;
     0011 2102                      1- 2722     	MOVIA	0x02
     0012 3rrr                      1- 2723     	LGOTO	_00481_DS_
                                    1- 2724     ;;unsigned compare: left < lit (0x64=100), size=1
     0013                           1- 2725     _00479_DS_:
                                    1- 2726     	.line	591, "main.c"; 	if(keyCount >= 100)
     0013 2164                      1- 2727     	MOVIA	0x64
                                    1- 2728     	BANKSEL	_keyCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1- 2729     	SUBAR	_keyCount,W
     0016 0803                      1- 2730     	BTRSS	STATUS,0
     0017 3rrr                      1- 2731     	LGOTO	_00476_DS_
                                    1- 2732     	.line	593, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 2733     	CLRR	_keyCount
                                    1- 2734     	.line	594, "main.c"; 	longPressFlag = 0;
                                    1- 2735     	BANKSEL	_Status
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 1Crr                      1- 2736     	BCR	_Status,1
                                    1- 2737     	.line	595, "main.c"; 	return	0;
     001B 2100                      1- 2738     	MOVIA	0x00
     001C 3rrr                      1- 2739     	LGOTO	_00481_DS_
                                    1- 2740     ;;unsigned compare: left < lit (0x8=8), size=1
     001D                           1- 2741     _00476_DS_:
                                    1- 2742     	.line	597, "main.c"; 	else if(keyCount >= 8)
     001D 2108                      1- 2743     	MOVIA	0x08
                                    1- 2744     	BANKSEL	_keyCount
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 04rr                      1- 2745     	SUBAR	_keyCount,W
     0020 0803                      1- 2746     	BTRSS	STATUS,0
     0021 3rrr                      1- 2747     	LGOTO	_00477_DS_
                                    1- 2748     	.line	599, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 2749     	CLRR	_keyCount
                                    1- 2750     	.line	600, "main.c"; 	return	1;
     0023 2101                      1- 2751     	MOVIA	0x01
     0024 3rrr                      1- 2752     	LGOTO	_00481_DS_
     0025                           1- 2753     _00477_DS_:
                                    1- 2754     	.line	602, "main.c"; 	keyCount = 0;
                                    1- 2755     	BANKSEL	_keyCount
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 02rr                      1- 2756     	CLRR	_keyCount
     0027                           1- 2757     _00480_DS_:
                                    1- 2758     	.line	604, "main.c"; 	return 0;
     0027 2100                      1- 2759     	MOVIA	0x00
     0028                           1- 2760     _00481_DS_:
                                    1- 2761     	.line	605, "main.c"; 	}
                                    1- 2762     	RETURN	
     0028 0010                      3-   26 m1      ret
                                    1- 2763     ; exit point of _keyRead
                                    1- 2765     ;***
                                    1- 2766     ;  pBlock Stats: dbName = C
                                    1- 2767     ;***
                                    1- 2768     ;has an exit
                                    1- 2769     ;functions called:
                                    1- 2770     ;   _LedInput
                                    1- 2771     ;   _pwmStop
                                    1- 2772     ;   _pwm1Stop
                                    1- 2773     ;   _LedInput
                                    1- 2774     ;   _pwmStop
                                    1- 2775     ;   _pwm1Stop
                                    1- 2776     ;1 compiler assigned register :
                                    1- 2777     ;   r0x105A
                                    1- 2778     ;; Starting pCode block
                                    1- 2779     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2781     _gotoSleep:
                                    1- 2782     ; 2 exit points
                                    1- 2783     	.line	544, "main.c"; 	PORTB = 0x00;
     0000 02rr                      1- 2784     	CLRR	_PORTB
                                    1- 2785     	.line	545, "main.c"; 	PORTA = 0x00;
                                    1- 2786     	BANKSEL	_PORTA
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 02rr                      1- 2787     	CLRR	_PORTA
                                    1- 2788     	.line	546, "main.c"; 	IOSTA |= 0X40;
     0003 001r                      1- 2789     	IOSTR	_IOSTA
                                    1- 2790     	BANKSEL	r0x105A
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1- 2791     	MOVAR	r0x105A
     0006 1Brr                      1- 2792     	BSR	r0x105A,6
     0007 01rr                      1- 2793     	MOVR	r0x105A,W
     0008 000r                      1- 2794     	IOST	_IOSTA
                                    1- 2795     	.line	547, "main.c"; 	LedInput();
     0009 2rrr                      1- 2796     	LCALL	_LedInput
                                    1- 2797     	.line	548, "main.c"; 	sleepTime = 0;
                                    1- 2798     	BANKSEL	_sleepTime
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 02rr                      1- 2799     	CLRR	_sleepTime
     000C 02rr                      1- 2800     	CLRR	(_sleepTime + 1)
                                    1- 2801     	.line	550, "main.c"; 	pwmStop();
     000D 2rrr                      1- 2802     	LCALL	_pwmStop
                                    1- 2803     	.line	551, "main.c"; 	pwm1Stop();
     000E 2rrr                      1- 2804     	LCALL	_pwm1Stop
                                    1- 2805     	.line	552, "main.c"; 	workStep = 0;
                                    1- 2806     	BANKSEL	_workStep
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 02rr                      1- 2807     	CLRR	_workStep
                                    1- 2808     	.line	553, "main.c"; 	AWUCON = 0x98;
     0011 2198                      1- 2809     	MOVIA	0x98
     0012 00rr                      1- 2810     	MOVAR	_AWUCON
                                    1- 2811     	.line	554, "main.c"; 	fgPRD = 0;
                                    1- 2812     	BANKSEL	_fgPRD
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 02rr                      1- 2813     	CLRR	_fgPRD
     0015 02rr                      1- 2814     	CLRR	(_fgPRD + 1)
                                    1- 2815     	.line	555, "main.c"; 	fgCount = 0;
                                    1- 2816     	BANKSEL	_fgCount
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 02rr                      1- 2817     	CLRR	_fgCount
     0018 02rr                      1- 2818     	CLRR	(_fgCount + 1)
                                    1- 2819     	.line	556, "main.c"; 	redLedFlag = 0;
                                    1- 2820     	BANKSEL	_Status
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 1Drr                      1- 2821     	BCR	_Status,2
                                    1- 2822     	.line	557, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     001B 210B                      1- 2823     	MOVIA	0x0b
     001C 00rr                      1- 2824     	MOVAR	_INTE
                                    1- 2825     	.line	558, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     001D 2118                      1- 2826     	MOVIA	0x18
     001E 00rr                      1- 2827     	MOVAR	_PCON
                                    1- 2828     	.line	559, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     001F 02rr                      1- 2829     	CLRR	_INTF
                                    1- 2830     	.line	560, "main.c"; 	CLRWDT();
     0020 0002                      1- 2831     	clrwdt
                                    1- 2832     	.line	561, "main.c"; 	ENI();
     0021 0004                      1- 2833     	ENI
                                    1- 2834     	.line	562, "main.c"; 	SLEEP();
     0022 0001                      1- 2835     	sleep
                                    1- 2836     	.line	563, "main.c"; 	AWUCON = 0x00;
     0023 02rr                      1- 2837     	CLRR	_AWUCON
                                    1- 2838     	.line	564, "main.c"; 	IOSTA &= 0XBF;
     0024 001r                      1- 2839     	IOSTR	_IOSTA
                                    1- 2840     	BANKSEL	r0x105A
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 00rr                      1- 2841     	MOVAR	r0x105A
     0027 1Frr                      1- 2842     	BCR	r0x105A,6
     0028 01rr                      1- 2843     	MOVR	r0x105A,W
     0029 000r                      1- 2844     	IOST	_IOSTA
                                    1- 2845     	.line	565, "main.c"; 	PORTB &= 0xBF;
     002A 1Frr                      1- 2846     	BCR	_PORTB,6
                                    1- 2847     	.line	566, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0��Timer1��WDT overflow interrupt
     002B 2101                      1- 2848     	MOVIA	0x01
     002C 00rr                      1- 2849     	MOVAR	_INTE
                                    1- 2850     	.line	567, "main.c"; 	INTF = 0;
     002D 02rr                      1- 2851     	CLRR	_INTF
                                    1- 2852     	.line	569, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     002E 21B8                      1- 2853     	MOVIA	0xb8
     002F 00rr                      1- 2854     	MOVAR	_PCON
                                    1- 2855     	.line	571, "main.c"; 	}
                                    1- 2856     	RETURN	
     0030 0010                      3-   26 m1      ret
                                    1- 2857     ; exit point of _gotoSleep
                                    1- 2859     ;***
                                    1- 2860     ;  pBlock Stats: dbName = C
                                    1- 2861     ;***
                                    1- 2862     ;has an exit
                                    1- 2863     ;; Starting pCode block
                                    1- 2864     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2866     _pwmStop:
                                    1- 2867     ; 2 exit points
                                    1- 2868     	.line	538, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2869     	CLRA	
     0001 00rr                      1- 2870     	SFUN	_T2CR1
                                    1- 2871     	.line	539, "main.c"; 	}
                                    1- 2872     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2873     ; exit point of _pwmStop
                                    1- 2875     ;***
                                    1- 2876     ;  pBlock Stats: dbName = C
                                    1- 2877     ;***
                                    1- 2878     ;has an exit
                                    1- 2879     ;1 compiler assigned register :
                                    1- 2880     ;   r0x105B
                                    1- 2881     ;; Starting pCode block
                                    1- 2882     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2884     _pwmInit:
                                    1- 2885     ; 2 exit points
                                    1- 2886     	.line	526, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2887     	SFUNR	_T2CR1
                                    1- 2888     	BANKSEL	r0x105B
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2889     	MOVAR	r0x105B
     0003 0Frr                      1- 2890     	BTRSC	r0x105B,7
                                    1- 2891     	.line	527, "main.c"; 	return;
     0004 3rrr                      1- 2892     	LGOTO	_00456_DS_
                                    1- 2893     	.line	528, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2894     	CLRR	_TMRH
                                    1- 2895     	.line	529, "main.c"; 	TMR2 = 100;							//Ƶ��Ϊ110K
     0006 2164                      1- 2896     	MOVIA	0x64
     0007 00rr                      1- 2897     	SFUN	_TMR2
                                    1- 2898     	.line	532, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2101                      1- 2899     	MOVIA	0x01
     0009 00rr                      1- 2900     	SFUN	_T2CR2
                                    1- 2901     	.line	533, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2902     	MOVIA	0x83
     000B 00rr                      1- 2903     	SFUN	_T2CR1
     000C                           1- 2904     _00456_DS_:
                                    1- 2905     	.line	534, "main.c"; 	}
                                    1- 2906     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1- 2907     ; exit point of _pwmInit
                                    1- 2909     ;***
                                    1- 2910     ;  pBlock Stats: dbName = C
                                    1- 2911     ;***
                                    1- 2912     ;has an exit
                                    1- 2913     ;; Starting pCode block
                                    1- 2914     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2916     _pwm1Stop:
                                    1- 2917     ; 2 exit points
                                    1- 2918     	.line	519, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2919     	CLRA	
     0001 00rr                      1- 2920     	SFUN	_T1CR1
                                    1- 2921     	.line	520, "main.c"; 	}
                                    1- 2922     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2923     ; exit point of _pwm1Stop
                                    1- 2925     ;***
                                    1- 2926     ;  pBlock Stats: dbName = C
                                    1- 2927     ;***
                                    1- 2928     ;has an exit
                                    1- 2929     ;1 compiler assigned register :
                                    1- 2930     ;   r0x1052
                                    1- 2931     ;; Starting pCode block
                                    1- 2932     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2934     _pwm1Init:
                                    1- 2935     ; 2 exit points
                                    1- 2936     	.line	507, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2937     	SFUNR	_T1CR1
                                    1- 2938     	BANKSEL	r0x1052
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2939     	MOVAR	r0x1052
     0003 0Frr                      1- 2940     	BTRSC	r0x1052,7
                                    1- 2941     	.line	508, "main.c"; 	return;
     0004 3rrr                      1- 2942     	LGOTO	_00445_DS_
                                    1- 2943     	.line	509, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2944     	CLRR	_TMRH
                                    1- 2945     	.line	510, "main.c"; 	TMR1 = 24;							//Ƶ��Ϊ110K
     0006 2118                      1- 2946     	MOVIA	0x18
     0007 00rr                      1- 2947     	SFUN	_TMR1
                                    1- 2948     	.line	513, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2949     	CLRA	
     0009 00rr                      1- 2950     	SFUN	_T1CR2
                                    1- 2951     	.line	514, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2952     	MOVIA	0x83
     000B 00rr                      1- 2953     	SFUN	_T1CR1
     000C                           1- 2954     _00445_DS_:
                                    1- 2955     	.line	515, "main.c"; 	}
                                    1- 2956     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1- 2957     ; exit point of _pwm1Init
                                    1- 2959     ;***
                                    1- 2960     ;  pBlock Stats: dbName = C
                                    1- 2961     ;***
                                    1- 2962     ;has an exit
                                    1- 2963     ;functions called:
                                    1- 2964     ;   _delay
                                    1- 2965     ;   _LedInput
                                    1- 2966     ;   _delay
                                    1- 2967     ;   _LedInput
                                    1- 2968     ;1 compiler assigned register :
                                    1- 2969     ;   r0x105C
                                    1- 2970     ;; Starting pCode block
                                    1- 2971     .segment "code"; module=main, function=_LED6ON
     0000                           1- 2973     _LED6ON:
                                    1- 2974     ; 2 exit points
                                    1- 2975     	.line	497, "main.c"; 	L2OUT;
     0000 001r                      1- 2976     	IOSTR	_IOSTA
                                    1- 2977     	BANKSEL	r0x105C
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2978     	MOVAR	r0x105C
     0003 1Crr                      1- 2979     	BCR	r0x105C,0
     0004 01rr                      1- 2980     	MOVR	r0x105C,W
     0005 000r                      1- 2981     	IOST	_IOSTA
                                    1- 2982     	.line	498, "main.c"; 	L1OUT;
     0006 001r                      1- 2983     	IOSTR	_IOSTB
     0007 00rr                      1- 2984     	MOVAR	r0x105C
     0008 1Crr                      1- 2985     	BCR	r0x105C,1
     0009 01rr                      1- 2986     	MOVR	r0x105C,W
     000A 000r                      1- 2987     	IOST	_IOSTB
                                    1- 2988     	.line	499, "main.c"; 	L1H;
     000B 18rr                      1- 2989     	BSR	_PORTB,1
                                    1- 2990     	.line	500, "main.c"; 	L2L;
                                    1- 2991     	BANKSEL	_PORTA
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 1Crr                      1- 2992     	BCR	_PORTA,0
                                    1- 2993     	.line	501, "main.c"; 	delay(100);
     000E 2164                      1- 2994     	MOVIA	0x64
     000F 2rrr                      1- 2995     	LCALL	_delay
                                    1- 2996     	.line	502, "main.c"; 	LedInput();
     0010 2rrr                      1- 2997     	LCALL	_LedInput
                                    1- 2998     	.line	503, "main.c"; 	}
                                    1- 2999     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 3000     ; exit point of _LED6ON
                                    1- 3002     ;***
                                    1- 3003     ;  pBlock Stats: dbName = C
                                    1- 3004     ;***
                                    1- 3005     ;has an exit
                                    1- 3006     ;functions called:
                                    1- 3007     ;   _delay
                                    1- 3008     ;   _LedInput
                                    1- 3009     ;   _delay
                                    1- 3010     ;   _LedInput
                                    1- 3011     ;1 compiler assigned register :
                                    1- 3012     ;   r0x105D
                                    1- 3013     ;; Starting pCode block
                                    1- 3014     .segment "code"; module=main, function=_LED5ON
     0000                           1- 3016     _LED5ON:
                                    1- 3017     ; 2 exit points
                                    1- 3018     	.line	486, "main.c"; 	L2OUT;
     0000 001r                      1- 3019     	IOSTR	_IOSTA
                                    1- 3020     	BANKSEL	r0x105D
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 3021     	MOVAR	r0x105D
     0003 1Crr                      1- 3022     	BCR	r0x105D,0
     0004 01rr                      1- 3023     	MOVR	r0x105D,W
     0005 000r                      1- 3024     	IOST	_IOSTA
                                    1- 3025     	.line	487, "main.c"; 	L1OUT;
     0006 001r                      1- 3026     	IOSTR	_IOSTB
     0007 00rr                      1- 3027     	MOVAR	r0x105D
     0008 1Crr                      1- 3028     	BCR	r0x105D,1
     0009 01rr                      1- 3029     	MOVR	r0x105D,W
     000A 000r                      1- 3030     	IOST	_IOSTB
                                    1- 3031     	.line	488, "main.c"; 	L2H;
                                    1- 3032     	BANKSEL	_PORTA
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 18rr                      1- 3033     	BSR	_PORTA,0
                                    1- 3034     	.line	489, "main.c"; 	L1L;
     000D 1Crr                      1- 3035     	BCR	_PORTB,1
                                    1- 3036     	.line	490, "main.c"; 	delay(100);
     000E 2164                      1- 3037     	MOVIA	0x64
     000F 2rrr                      1- 3038     	LCALL	_delay
                                    1- 3039     	.line	491, "main.c"; 	LedInput();
     0010 2rrr                      1- 3040     	LCALL	_LedInput
                                    1- 3041     	.line	492, "main.c"; 	}
                                    1- 3042     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 3043     ; exit point of _LED5ON
                                    1- 3045     ;***
                                    1- 3046     ;  pBlock Stats: dbName = C
                                    1- 3047     ;***
                                    1- 3048     ;has an exit
                                    1- 3049     ;functions called:
                                    1- 3050     ;   _delay
                                    1- 3051     ;   _LedInput
                                    1- 3052     ;   _delay
                                    1- 3053     ;   _LedInput
                                    1- 3054     ;1 compiler assigned register :
                                    1- 3055     ;   r0x105E
                                    1- 3056     ;; Starting pCode block
                                    1- 3057     .segment "code"; module=main, function=_LED4ON
     0000                           1- 3059     _LED4ON:
                                    1- 3060     ; 2 exit points
                                    1- 3061     	.line	476, "main.c"; 	L3OUT;
     0000 001r                      1- 3062     	IOSTR	_IOSTB
                                    1- 3063     	BANKSEL	r0x105E
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 3064     	MOVAR	r0x105E
     0003 1Crr                      1- 3065     	BCR	r0x105E,0
     0004 01rr                      1- 3066     	MOVR	r0x105E,W
     0005 000r                      1- 3067     	IOST	_IOSTB
                                    1- 3068     	.line	477, "main.c"; 	L2OUT;
     0006 001r                      1- 3069     	IOSTR	_IOSTA
     0007 00rr                      1- 3070     	MOVAR	r0x105E
     0008 1Crr                      1- 3071     	BCR	r0x105E,0
     0009 01rr                      1- 3072     	MOVR	r0x105E,W
     000A 000r                      1- 3073     	IOST	_IOSTA
                                    1- 3074     	.line	478, "main.c"; 	L3H;
     000B 18rr                      1- 3075     	BSR	_PORTB,0
                                    1- 3076     	.line	479, "main.c"; 	L2L;
                                    1- 3077     	BANKSEL	_PORTA
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 1Crr                      1- 3078     	BCR	_PORTA,0
                                    1- 3079     	.line	480, "main.c"; 	delay(100);
     000E 2164                      1- 3080     	MOVIA	0x64
     000F 2rrr                      1- 3081     	LCALL	_delay
                                    1- 3082     	.line	481, "main.c"; 	LedInput();
     0010 2rrr                      1- 3083     	LCALL	_LedInput
                                    1- 3084     	.line	482, "main.c"; 	}
                                    1- 3085     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 3086     ; exit point of _LED4ON
                                    1- 3088     ;***
                                    1- 3089     ;  pBlock Stats: dbName = C
                                    1- 3090     ;***
                                    1- 3091     ;has an exit
                                    1- 3092     ;functions called:
                                    1- 3093     ;   _delay
                                    1- 3094     ;   _LedInput
                                    1- 3095     ;   _delay
                                    1- 3096     ;   _LedInput
                                    1- 3097     ;1 compiler assigned register :
                                    1- 3098     ;   r0x105F
                                    1- 3099     ;; Starting pCode block
                                    1- 3100     .segment "code"; module=main, function=_LED3ON
     0000                           1- 3102     _LED3ON:
                                    1- 3103     ; 2 exit points
                                    1- 3104     	.line	466, "main.c"; 	L3OUT;
     0000 001r                      1- 3105     	IOSTR	_IOSTB
                                    1- 3106     	BANKSEL	r0x105F
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 3107     	MOVAR	r0x105F
     0003 1Crr                      1- 3108     	BCR	r0x105F,0
     0004 01rr                      1- 3109     	MOVR	r0x105F,W
     0005 000r                      1- 3110     	IOST	_IOSTB
                                    1- 3111     	.line	467, "main.c"; 	L1OUT;
     0006 001r                      1- 3112     	IOSTR	_IOSTB
     0007 00rr                      1- 3113     	MOVAR	r0x105F
     0008 1Crr                      1- 3114     	BCR	r0x105F,1
     0009 01rr                      1- 3115     	MOVR	r0x105F,W
     000A 000r                      1- 3116     	IOST	_IOSTB
                                    1- 3117     	.line	468, "main.c"; 	L1H;
     000B 18rr                      1- 3118     	BSR	_PORTB,1
                                    1- 3119     	.line	469, "main.c"; 	L3L;
     000C 1Crr                      1- 3120     	BCR	_PORTB,0
                                    1- 3121     	.line	470, "main.c"; 	delay(100);
     000D 2164                      1- 3122     	MOVIA	0x64
     000E 2rrr                      1- 3123     	LCALL	_delay
                                    1- 3124     	.line	471, "main.c"; 	LedInput();
     000F 2rrr                      1- 3125     	LCALL	_LedInput
                                    1- 3126     	.line	472, "main.c"; 	}
                                    1- 3127     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1- 3128     ; exit point of _LED3ON
                                    1- 3130     ;***
                                    1- 3131     ;  pBlock Stats: dbName = C
                                    1- 3132     ;***
                                    1- 3133     ;has an exit
                                    1- 3134     ;functions called:
                                    1- 3135     ;   _delay
                                    1- 3136     ;   _LedInput
                                    1- 3137     ;   _delay
                                    1- 3138     ;   _LedInput
                                    1- 3139     ;1 compiler assigned register :
                                    1- 3140     ;   r0x1060
                                    1- 3141     ;; Starting pCode block
                                    1- 3142     .segment "code"; module=main, function=_LED2ON
     0000                           1- 3144     _LED2ON:
                                    1- 3145     ; 2 exit points
                                    1- 3146     	.line	456, "main.c"; 	L2OUT;
     0000 001r                      1- 3147     	IOSTR	_IOSTA
                                    1- 3148     	BANKSEL	r0x1060
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 3149     	MOVAR	r0x1060
     0003 1Crr                      1- 3150     	BCR	r0x1060,0
     0004 01rr                      1- 3151     	MOVR	r0x1060,W
     0005 000r                      1- 3152     	IOST	_IOSTA
                                    1- 3153     	.line	457, "main.c"; 	L3OUT;
     0006 001r                      1- 3154     	IOSTR	_IOSTB
     0007 00rr                      1- 3155     	MOVAR	r0x1060
     0008 1Crr                      1- 3156     	BCR	r0x1060,0
     0009 01rr                      1- 3157     	MOVR	r0x1060,W
     000A 000r                      1- 3158     	IOST	_IOSTB
                                    1- 3159     	.line	458, "main.c"; 	L2H;
                                    1- 3160     	BANKSEL	_PORTA
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 18rr                      1- 3161     	BSR	_PORTA,0
                                    1- 3162     	.line	459, "main.c"; 	L3L;
     000D 1Crr                      1- 3163     	BCR	_PORTB,0
                                    1- 3164     	.line	460, "main.c"; 	delay(100);
     000E 2164                      1- 3165     	MOVIA	0x64
     000F 2rrr                      1- 3166     	LCALL	_delay
                                    1- 3167     	.line	461, "main.c"; 	LedInput();
     0010 2rrr                      1- 3168     	LCALL	_LedInput
                                    1- 3169     	.line	462, "main.c"; 	}
                                    1- 3170     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 3171     ; exit point of _LED2ON
                                    1- 3173     ;***
                                    1- 3174     ;  pBlock Stats: dbName = C
                                    1- 3175     ;***
                                    1- 3176     ;has an exit
                                    1- 3177     ;functions called:
                                    1- 3178     ;   _delay
                                    1- 3179     ;   _LedInput
                                    1- 3180     ;   _delay
                                    1- 3181     ;   _LedInput
                                    1- 3182     ;1 compiler assigned register :
                                    1- 3183     ;   r0x1061
                                    1- 3184     ;; Starting pCode block
                                    1- 3185     .segment "code"; module=main, function=_LED1ON
     0000                           1- 3187     _LED1ON:
                                    1- 3188     ; 2 exit points
                                    1- 3189     	.line	446, "main.c"; 	L3OUT;
     0000 001r                      1- 3190     	IOSTR	_IOSTB
                                    1- 3191     	BANKSEL	r0x1061
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 3192     	MOVAR	r0x1061
     0003 1Crr                      1- 3193     	BCR	r0x1061,0
     0004 01rr                      1- 3194     	MOVR	r0x1061,W
     0005 000r                      1- 3195     	IOST	_IOSTB
                                    1- 3196     	.line	447, "main.c"; 	L1OUT;
     0006 001r                      1- 3197     	IOSTR	_IOSTB
     0007 00rr                      1- 3198     	MOVAR	r0x1061
     0008 1Crr                      1- 3199     	BCR	r0x1061,1
     0009 01rr                      1- 3200     	MOVR	r0x1061,W
     000A 000r                      1- 3201     	IOST	_IOSTB
                                    1- 3202     	.line	448, "main.c"; 	L3H;
     000B 18rr                      1- 3203     	BSR	_PORTB,0
                                    1- 3204     	.line	449, "main.c"; 	L1L;
     000C 1Crr                      1- 3205     	BCR	_PORTB,1
                                    1- 3206     	.line	450, "main.c"; 	delay(100);
     000D 2164                      1- 3207     	MOVIA	0x64
     000E 2rrr                      1- 3208     	LCALL	_delay
                                    1- 3209     	.line	451, "main.c"; 	LedInput();
     000F 2rrr                      1- 3210     	LCALL	_LedInput
                                    1- 3211     	.line	452, "main.c"; 	}
                                    1- 3212     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1- 3213     ; exit point of _LED1ON
                                    1- 3215     ;***
                                    1- 3216     ;  pBlock Stats: dbName = C
                                    1- 3217     ;***
                                    1- 3218     ;has an exit
                                    1- 3219     ;1 compiler assigned register :
                                    1- 3220     ;   r0x1059
                                    1- 3221     ;; Starting pCode block
                                    1- 3222     .segment "code"; module=main, function=_LedInput
     0000                           1- 3224     _LedInput:
                                    1- 3225     ; 2 exit points
                                    1- 3226     	.line	438, "main.c"; 	IOSTA |= 0x01;
     0000 001r                      1- 3227     	IOSTR	_IOSTA
                                    1- 3228     	BANKSEL	r0x1059
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 3229     	MOVAR	r0x1059
     0003 18rr                      1- 3230     	BSR	r0x1059,0
     0004 01rr                      1- 3231     	MOVR	r0x1059,W
     0005 000r                      1- 3232     	IOST	_IOSTA
                                    1- 3233     	.line	439, "main.c"; 	IOSTB |= 0x03;
     0006 001r                      1- 3234     	IOSTR	_IOSTB
     0007 00rr                      1- 3235     	MOVAR	r0x1059
     0008 2103                      1- 3236     	MOVIA	0x03
     0009 11rr                      1- 3237     	IORAR	r0x1059,F
     000A 01rr                      1- 3238     	MOVR	r0x1059,W
     000B 000r                      1- 3239     	IOST	_IOSTB
                                    1- 3240     	.line	440, "main.c"; 	PORTA &= 0xFE;
                                    1- 3241     	BANKSEL	_PORTA
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 1Crr                      1- 3242     	BCR	_PORTA,0
                                    1- 3243     	.line	441, "main.c"; 	PORTB &= 0xFC;
     000E 21FC                      1- 3244     	MOVIA	0xfc
     000F 10rr                      1- 3245     	ANDAR	_PORTB,F
                                    1- 3246     	.line	442, "main.c"; 	}
                                    1- 3247     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1- 3248     ; exit point of _LedInput
                                    1- 3250     ;***
                                    1- 3251     ;  pBlock Stats: dbName = C
                                    1- 3252     ;***
                                    1- 3253     ;has an exit
                                    1- 3254     ;functions called:
                                    1- 3255     ;   _LedInput
                                    1- 3256     ;   _LedInput
                                    1- 3257     ;   _LED6ON
                                    1- 3258     ;   _LED5ON
                                    1- 3259     ;   _LED4ON
                                    1- 3260     ;   _LED3ON
                                    1- 3261     ;   _LED2ON
                                    1- 3262     ;   _LED1ON
                                    1- 3263     ;   _LedInput
                                    1- 3264     ;   _LedInput
                                    1- 3265     ;   _LED6ON
                                    1- 3266     ;   _LED5ON
                                    1- 3267     ;   _LED4ON
                                    1- 3268     ;   _LED3ON
                                    1- 3269     ;   _LED2ON
                                    1- 3270     ;   _LED1ON
                                    1- 3271     ;; Starting pCode block
                                    1- 3272     .segment "code"; module=main, function=_ledShow
     0000                           1- 3274     _ledShow:
                                    1- 3275     ; 2 exit points
                                    1- 3276     	.line	375, "main.c"; 	if(ledDeadTime > 0 && workStep == 0)
                                    1- 3277     	BANKSEL	_ledDeadTime
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 3278     	MOVR	_ledDeadTime,W
     0002 0D03                      1- 3279     	BTRSC	STATUS,2
     0003 3rrr                      1- 3280     	LGOTO	_00344_DS_
                                    1- 3281     	BANKSEL	_workStep
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 3282     	MOVR	_workStep,W
     0006 0903                      1- 3283     	BTRSS	STATUS,2
     0007 3rrr                      1- 3284     	LGOTO	_00344_DS_
                                    1- 3285     	.line	377, "main.c"; 	if(ledDeadTime % 2 == 0)
                                    1- 3286     	BANKSEL	_ledDeadTime
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 0Crr                      1- 3287     	BTRSC	_ledDeadTime,0
     000A 3rrr                      1- 3288     	LGOTO	_00341_DS_
                                    1- 3289     	.line	379, "main.c"; 	ledStep = 0;
                                    1- 3290     	BANKSEL	_ledStep
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 02rr                      1- 3291     	CLRR	_ledStep
     000D 3rrr                      1- 3292     	LGOTO	_00344_DS_
     000E                           1- 3293     _00341_DS_:
                                    1- 3294     	.line	383, "main.c"; 	ledStep = tempLedStep;
                                    1- 3295     	BANKSEL	_tempLedStep
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 3296     	MOVR	_tempLedStep,W
                                    1- 3297     	BANKSEL	_ledStep
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1- 3298     	MOVAR	_ledStep
     0012                           1- 3299     _00344_DS_:
                                    1- 3300     	.line	394, "main.c"; 	if(ledLightTime > 0 && pwStep > 0)
                                    1- 3301     	BANKSEL	_ledLightTime
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1- 3302     	MOVR	_ledLightTime,W
     0014 0D03                      1- 3303     	BTRSC	STATUS,2
     0015 3rrr                      1- 3304     	LGOTO	_00352_DS_
                                    1- 3305     	BANKSEL	_pwStep
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1- 3306     	MOVR	_pwStep,W
     0018 0D03                      1- 3307     	BTRSC	STATUS,2
     0019 3rrr                      1- 3308     	LGOTO	_00352_DS_
                                    1- 3309     	.line	396, "main.c"; 	if(ledLightTime > 0)
                                    1- 3310     	BANKSEL	_ledLightTime
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1- 3311     	MOVR	_ledLightTime,W
     001C 0D03                      1- 3312     	BTRSC	STATUS,2
     001D 3rrr                      1- 3313     	LGOTO	_00352_DS_
                                    1- 3314     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3315     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 3316     	.line	398, "main.c"; 	if(pwStep > 6 )
     001E 2107                      1- 3317     	MOVIA	0x07
                                    1- 3318     	BANKSEL	_pwStep
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 04rr                      1- 3319     	SUBAR	_pwStep,W
     0021 0803                      1- 3320     	BTRSS	STATUS,0
     0022 3rrr                      1- 3321     	LGOTO	_00347_DS_
                                    1- 3322     	.line	399, "main.c"; 	ledStep = 6;
     0023 2106                      1- 3323     	MOVIA	0x06
                                    1- 3324     	BANKSEL	_ledStep
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 00rr                      1- 3325     	MOVAR	_ledStep
     0026 3rrr                      1- 3326     	LGOTO	_00352_DS_
     0027                           1- 3327     _00347_DS_:
                                    1- 3328     	.line	401, "main.c"; 	ledStep = pwStep;
                                    1- 3329     	BANKSEL	_pwStep
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1- 3330     	MOVR	_pwStep,W
                                    1- 3331     	BANKSEL	_ledStep
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 00rr                      1- 3332     	MOVAR	_ledStep
     002B                           1- 3333     _00352_DS_:
                                    1- 3334     	.line	404, "main.c"; 	if(shanshuoTime > 0 && workStep > 0 && pwStep == 0)
                                    1- 3335     	BANKSEL	_shanshuoTime
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1- 3336     	MOVR	_shanshuoTime,W
     002D 0D03                      1- 3337     	BTRSC	STATUS,2
     002E 3rrr                      1- 3338     	LGOTO	_00358_DS_
                                    1- 3339     	BANKSEL	_workStep
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 3340     	MOVR	_workStep,W
     0031 0D03                      1- 3341     	BTRSC	STATUS,2
     0032 3rrr                      1- 3342     	LGOTO	_00358_DS_
                                    1- 3343     	BANKSEL	_pwStep
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1- 3344     	MOVR	_pwStep,W
     0035 0903                      1- 3345     	BTRSS	STATUS,2
     0036 3rrr                      1- 3346     	LGOTO	_00358_DS_
                                    1- 3347     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 3348     	.line	406, "main.c"; 	if(count1s < 50)
     0037 2132                      1- 3349     	MOVIA	0x32
                                    1- 3350     	BANKSEL	_count1s
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 04rr                      1- 3351     	SUBAR	_count1s,W
     003A 0C03                      1- 3352     	BTRSC	STATUS,0
     003B 3rrr                      1- 3353     	LGOTO	_00355_DS_
                                    1- 3354     	.line	407, "main.c"; 	ledStep = workStep;
                                    1- 3355     	BANKSEL	_workStep
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 01rr                      1- 3356     	MOVR	_workStep,W
                                    1- 3357     	BANKSEL	_ledStep
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 00rr                      1- 3358     	MOVAR	_ledStep
     0040 3rrr                      1- 3359     	LGOTO	_00358_DS_
     0041                           1- 3360     _00355_DS_:
                                    1- 3361     	.line	409, "main.c"; 	ledStep = 0;
                                    1- 3362     	BANKSEL	_ledStep
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 02rr                      1- 3363     	CLRR	_ledStep
     0043                           1- 3364     _00358_DS_:
                                    1- 3365     	.line	412, "main.c"; 	LedInput();
     0043 2rrr                      1- 3366     	LCALL	_LedInput
                                    1- 3367     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3368     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 3369     	.line	413, "main.c"; 	switch(ledStep)
     0044 2107                      1- 3370     	MOVIA	0x07
                                    1- 3371     	BANKSEL	_ledStep
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 04rr                      1- 3372     	SUBAR	_ledStep,W
     0047 0C03                      1- 3373     	BTRSC	STATUS,0
     0048 3rrr                      1- 3374     	LGOTO	_00369_DS_
     0049 21rr                      1- 3375     	MOVIA	((_00410_DS_ >> 8) & 0xff)
     004A 008A                      1- 3376     	MOVAR	PCHBUF
     004B 01rr                      1- 3377     	MOVR	_ledStep,W
     004C 25rr                      1- 3378     	ADDIA	_00410_DS_
     004D 0C03                      1- 3379     	BTRSC	STATUS,0
     004E 058A                      1- 3380     	INCR	PCHBUF,F
     004F 0082                      1- 3381     	MOVAR	PCL
     0050                           1- 3382     _00410_DS_:
     0050 3rrr                      1- 3383     	LGOTO	_00361_DS_
     0051 3rrr                      1- 3384     	LGOTO	_00367_DS_
     0052 3rrr                      1- 3385     	LGOTO	_00366_DS_
     0053 3rrr                      1- 3386     	LGOTO	_00365_DS_
     0054 3rrr                      1- 3387     	LGOTO	_00364_DS_
     0055 3rrr                      1- 3388     	LGOTO	_00363_DS_
     0056 3rrr                      1- 3389     	LGOTO	_00362_DS_
     0057                           1- 3390     _00361_DS_:
                                    1- 3391     	.line	416, "main.c"; 	LedInput();
     0057 2rrr                      1- 3392     	LCALL	_LedInput
                                    1- 3393     	.line	417, "main.c"; 	break;
     0058 3rrr                      1- 3394     	LGOTO	_00369_DS_
     0059                           1- 3395     _00362_DS_:
                                    1- 3396     	.line	419, "main.c"; 	LED6ON();
     0059 2rrr                      1- 3397     	LCALL	_LED6ON
     005A                           1- 3398     _00363_DS_:
                                    1- 3399     	.line	421, "main.c"; 	LED5ON();
     005A 2rrr                      1- 3400     	LCALL	_LED5ON
     005B                           1- 3401     _00364_DS_:
                                    1- 3402     	.line	423, "main.c"; 	LED4ON();
     005B 2rrr                      1- 3403     	LCALL	_LED4ON
     005C                           1- 3404     _00365_DS_:
                                    1- 3405     	.line	425, "main.c"; 	LED3ON();
     005C 2rrr                      1- 3406     	LCALL	_LED3ON
     005D                           1- 3407     _00366_DS_:
                                    1- 3408     	.line	427, "main.c"; 	LED2ON();
     005D 2rrr                      1- 3409     	LCALL	_LED2ON
     005E                           1- 3410     _00367_DS_:
                                    1- 3411     	.line	429, "main.c"; 	LED1ON();
     005E 2rrr                      1- 3412     	LCALL	_LED1ON
     005F                           1- 3413     _00369_DS_:
                                    1- 3414     	.line	432, "main.c"; 	}
                                    1- 3415     	RETURN	
     005F 0010                      3-   26 m1      ret
                                    1- 3416     ; exit point of _ledShow
                                    1- 3418     ;***
                                    1- 3419     ;  pBlock Stats: dbName = C
                                    1- 3420     ;***
                                    1- 3421     ;has an exit
                                    1- 3422     ;functions called:
                                    1- 3423     ;   _LedInput
                                    1- 3424     ;   _LedInput
                                    1- 3425     ;; Starting pCode block
                                    1- 3426     .segment "code"; module=main, function=_initSys
     0000                           1- 3428     _initSys:
                                    1- 3429     ; 2 exit points
                                    1- 3430     	.line	343, "main.c"; 	DISI();
     0000 0013                      1- 3431     	DISI
                                    1- 3432     	.line	344, "main.c"; 	IOSTA = C_PA7_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0001 21BE                      1- 3433     	MOVIA	0xbe
     0002 000r                      1- 3434     	IOST	_IOSTA
                                    1- 3435     	.line	345, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 3436     	CLRA	
     0004 000r                      1- 3437     	IOST	_IOSTB
                                    1- 3438     	.line	346, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 3439     	CLRR	_PORTB
                                    1- 3440     	.line	347, "main.c"; 	PORTA = 0x00;
                                    1- 3441     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1- 3442     	CLRR	_PORTA
                                    1- 3443     	.line	348, "main.c"; 	LedInput();
     0008 2rrr                      1- 3444     	LCALL	_LedInput
                                    1- 3445     	.line	349, "main.c"; 	APHCON = 0x7F;
     0009 217F                      1- 3446     	MOVIA	0x7f
     000A 000r                      1- 3447     	IOST	_APHCON
                                    1- 3448     	.line	350, "main.c"; 	BPHCON = 0xFF;
     000B 21FF                      1- 3449     	MOVIA	0xff
     000C 00rr                      1- 3450     	MOVAR	_BPHCON
                                    1- 3451     	.line	351, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 3452     	MOVAR	_ABPLCON
                                    1- 3453     	.line	353, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0��Timer1��WDT overflow interrupt
     000E 2101                      1- 3454     	MOVIA	0x01
     000F 00rr                      1- 3455     	MOVAR	_INTE
                                    1- 3456     	.line	355, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 3457     	CLRA	
     0011 000r                      1- 3458     	IOST	_PCON1
                                    1- 3459     	.line	357, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 3460     	MOVIA	0x37
     0013 00rr                      1- 3461     	MOVAR	_TMR0
                                    1- 3462     	.line	358, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0014 2101                      1- 3463     	MOVIA	0x01
     0015 0003                      1- 3464     	T0MD	
                                    1- 3465     	.line	360, "main.c"; 	PCON1 = C_TMR0_En;
     0016 000r                      1- 3466     	IOST	_PCON1
                                    1- 3467     	.line	363, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0017 2198                      1- 3468     	MOVIA	0x98
     0018 00rr                      1- 3469     	MOVAR	_PCON
                                    1- 3470     	.line	366, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0019 2101                      1- 3471     	MOVIA	0x01
     001A 000r                      1- 3472     	IOST	_PCON1
                                    1- 3473     	.line	367, "main.c"; 	ENI();
     001B 0004                      1- 3474     	ENI
                                    1- 3475     	.line	368, "main.c"; 	}
                                    1- 3476     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1- 3477     ; exit point of _initSys
                                    1- 3479     ;***
                                    1- 3480     ;  pBlock Stats: dbName = C
                                    1- 3481     ;***
                                    1- 3482     ;has an exit
                                    1- 3483     ;functions called:
                                    1- 3484     ;   _pwmStop
                                    1- 3485     ;   _pwmStop
                                    1- 3486     ;; Starting pCode block
                                    1- 3487     .segment "code"; module=main, function=_powerOff
     0000                           1- 3489     _powerOff:
                                    1- 3490     ; 2 exit points
                                    1- 3491     	.line	334, "main.c"; 	workStep = 0;
                                    1- 3492     	BANKSEL	_workStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 3493     	CLRR	_workStep
                                    1- 3494     	.line	335, "main.c"; 	pwmStop();
     0002 2rrr                      1- 3495     	LCALL	_pwmStop
                                    1- 3496     	.line	337, "main.c"; 	}
                                    1- 3497     	RETURN	
     0003 0010                      3-   26 m1      ret
                                    1- 3498     ; exit point of _powerOff
                                    1- 3500     ;***
                                    1- 3501     ;  pBlock Stats: dbName = C
                                    1- 3502     ;***
                                    1- 3503     ;has an exit
                                    1- 3504     ;functions called:
                                    1- 3505     ;   _keyRead
                                    1- 3506     ;   _pwmInit
                                    1- 3507     ;   _powerOff
                                    1- 3508     ;   _pwmInit
                                    1- 3509     ;   _keyRead
                                    1- 3510     ;   _pwmInit
                                    1- 3511     ;   _powerOff
                                    1- 3512     ;   _pwmInit
                                    1- 3513     ;1 compiler assigned register :
                                    1- 3514     ;   r0x1062
                                    1- 3515     ;; Starting pCode block
                                    1- 3516     .segment "code"; module=main, function=_keyCtr
                                    1- 3518     ;local variable name mapping:
     0000                           1- 3520     _keyCtr:
                                    1- 3521     ; 2 exit points
                                    1- 3522     	.line	267, "main.c"; 	char kclick = keyRead(0x80 & (~PORTA));
                                    1- 3523     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 07rr                      1- 3524     	COMR	_PORTA,W
                                    1- 3525     	BANKSEL	r0x1062
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 00rr                      1- 3526     	MOVAR	r0x1062
     0004 2180                      1- 3527     	MOVIA	0x80
     0005 10rr                      1- 3528     	ANDAR	r0x1062,F
     0006 01rr                      1- 3529     	MOVR	r0x1062,W
     0007 2rrr                      1- 3530     	LCALL	_keyRead
                                    1- 3531     	BANKSEL	r0x1062
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1- 3532     	MOVAR	r0x1062
                                    1- 3533     	.line	268, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 3534     	XORIA	0x01
     000B 0903                      1- 3535     	BTRSS	STATUS,2
     000C 3rrr                      1- 3536     	LGOTO	_00325_DS_
                                    1- 3537     	.line	270, "main.c"; 	count500ms = 0;
                                    1- 3538     	BANKSEL	_count500ms
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 02rr                      1- 3539     	CLRR	_count500ms
                                    1- 3540     	.line	271, "main.c"; 	ledLightTime = 0;
                                    1- 3541     	BANKSEL	_ledLightTime
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 02rr                      1- 3542     	CLRR	_ledLightTime
                                    1- 3543     	.line	272, "main.c"; 	if(workStep == 0)
                                    1- 3544     	BANKSEL	_workStep
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 3545     	MOVR	_workStep,W
     0013 0903                      1- 3546     	BTRSS	STATUS,2
     0014 3rrr                      1- 3547     	LGOTO	_00291_DS_
                                    1- 3548     	.line	274, "main.c"; 	count1s = 0;
                                    1- 3549     	BANKSEL	_count1s
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 02rr                      1- 3550     	CLRR	_count1s
                                    1- 3551     	.line	275, "main.c"; 	ledLightTime = 3;
     0017 2103                      1- 3552     	MOVIA	0x03
                                    1- 3553     	BANKSEL	_ledLightTime
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 00rr                      1- 3554     	MOVAR	_ledLightTime
                                    1- 3555     	.line	276, "main.c"; 	return;
     001A 3rrr                      1- 3556     	LGOTO	_00327_DS_
     001B                           1- 3557     _00291_DS_:
                                    1- 3558     	.line	278, "main.c"; 	ledTime = 0;
                                    1- 3559     	BANKSEL	_ledTime
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 02rr                      1- 3560     	CLRR	_ledTime
                                    1- 3561     	.line	279, "main.c"; 	if(++workStep > 6)
                                    1- 3562     	BANKSEL	_workStep
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 05rr                      1- 3563     	INCR	_workStep,F
                                    1- 3564     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3565     ;;unsigned compare: left >= lit (0x7=7), size=1
     001F 2107                      1- 3566     	MOVIA	0x07
     0020 04rr                      1- 3567     	SUBAR	_workStep,W
     0021 0803                      1- 3568     	BTRSS	STATUS,0
     0022 3rrr                      1- 3569     	LGOTO	_00293_DS_
                                    1- 3570     	.line	280, "main.c"; 	workStep = 1;
     0023 2101                      1- 3571     	MOVIA	0x01
     0024 00rr                      1- 3572     	MOVAR	_workStep
     0025                           1- 3573     _00293_DS_:
                                    1- 3574     	.line	281, "main.c"; 	if(pwStep == 0)
                                    1- 3575     	BANKSEL	_pwStep
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 01rr                      1- 3576     	MOVR	_pwStep,W
     0027 0903                      1- 3577     	BTRSS	STATUS,2
     0028 3rrr                      1- 3578     	LGOTO	_00295_DS_
                                    1- 3579     	.line	282, "main.c"; 	shanshuoTime = 10;
     0029 210A                      1- 3580     	MOVIA	0x0a
                                    1- 3581     	BANKSEL	_shanshuoTime
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 00rr                      1- 3582     	MOVAR	_shanshuoTime
     002C                           1- 3583     _00295_DS_:
                                    1- 3584     	.line	283, "main.c"; 	if(workStep == 1)
                                    1- 3585     	BANKSEL	_workStep
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 01rr                      1- 3586     	MOVR	_workStep,W
     002E 2401                      1- 3587     	XORIA	0x01
     002F 0903                      1- 3588     	BTRSS	STATUS,2
     0030 3rrr                      1- 3589     	LGOTO	_00311_DS_
                                    1- 3590     	.line	285, "main.c"; 	maxDuty = 40;
     0031 2128                      1- 3591     	MOVIA	0x28
                                    1- 3592     	BANKSEL	_maxDuty
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 00rr                      1- 3593     	MOVAR	_maxDuty
                                    1- 3594     	.line	286, "main.c"; 	ledLightTime = 0;
                                    1- 3595     	BANKSEL	_ledLightTime
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 02rr                      1- 3596     	CLRR	_ledLightTime
     0036 3rrr                      1- 3597     	LGOTO	_00312_DS_
     0037                           1- 3598     _00311_DS_:
                                    1- 3599     	.line	288, "main.c"; 	else if(workStep == 2)
                                    1- 3600     	BANKSEL	_workStep
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 01rr                      1- 3601     	MOVR	_workStep,W
     0039 2402                      1- 3602     	XORIA	0x02
     003A 0903                      1- 3603     	BTRSS	STATUS,2
     003B 3rrr                      1- 3604     	LGOTO	_00308_DS_
                                    1- 3605     	.line	289, "main.c"; 	maxDuty = 42;
     003C 212A                      1- 3606     	MOVIA	0x2a
                                    1- 3607     	BANKSEL	_maxDuty
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 00rr                      1- 3608     	MOVAR	_maxDuty
     003F 3rrr                      1- 3609     	LGOTO	_00312_DS_
     0040                           1- 3610     _00308_DS_:
                                    1- 3611     	.line	290, "main.c"; 	else if(workStep == 3)
                                    1- 3612     	BANKSEL	_workStep
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 01rr                      1- 3613     	MOVR	_workStep,W
     0042 2403                      1- 3614     	XORIA	0x03
     0043 0903                      1- 3615     	BTRSS	STATUS,2
     0044 3rrr                      1- 3616     	LGOTO	_00305_DS_
                                    1- 3617     	.line	291, "main.c"; 	maxDuty = 44;
     0045 212C                      1- 3618     	MOVIA	0x2c
                                    1- 3619     	BANKSEL	_maxDuty
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 00rr                      1- 3620     	MOVAR	_maxDuty
     0048 3rrr                      1- 3621     	LGOTO	_00312_DS_
     0049                           1- 3622     _00305_DS_:
                                    1- 3623     	.line	292, "main.c"; 	else if(workStep == 4)
                                    1- 3624     	BANKSEL	_workStep
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 01rr                      1- 3625     	MOVR	_workStep,W
     004B 2404                      1- 3626     	XORIA	0x04
     004C 0903                      1- 3627     	BTRSS	STATUS,2
     004D 3rrr                      1- 3628     	LGOTO	_00302_DS_
                                    1- 3629     	.line	293, "main.c"; 	maxDuty = 46;
     004E 212E                      1- 3630     	MOVIA	0x2e
                                    1- 3631     	BANKSEL	_maxDuty
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 00rr                      1- 3632     	MOVAR	_maxDuty
     0051 3rrr                      1- 3633     	LGOTO	_00312_DS_
     0052                           1- 3634     _00302_DS_:
                                    1- 3635     	.line	294, "main.c"; 	else if(workStep == 5)
                                    1- 3636     	BANKSEL	_workStep
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 01rr                      1- 3637     	MOVR	_workStep,W
     0054 2405                      1- 3638     	XORIA	0x05
     0055 0903                      1- 3639     	BTRSS	STATUS,2
     0056 3rrr                      1- 3640     	LGOTO	_00299_DS_
                                    1- 3641     	.line	295, "main.c"; 	maxDuty = 48;
     0057 2130                      1- 3642     	MOVIA	0x30
                                    1- 3643     	BANKSEL	_maxDuty
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 00rr                      1- 3644     	MOVAR	_maxDuty
     005A 3rrr                      1- 3645     	LGOTO	_00312_DS_
     005B                           1- 3646     _00299_DS_:
                                    1- 3647     	.line	296, "main.c"; 	else if(workStep == 6)
                                    1- 3648     	BANKSEL	_workStep
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 01rr                      1- 3649     	MOVR	_workStep,W
     005D 2406                      1- 3650     	XORIA	0x06
     005E 0903                      1- 3651     	BTRSS	STATUS,2
     005F 3rrr                      1- 3652     	LGOTO	_00312_DS_
                                    1- 3653     	.line	297, "main.c"; 	maxDuty = 50;
     0060 2132                      1- 3654     	MOVIA	0x32
                                    1- 3655     	BANKSEL	_maxDuty
     0061 rrrr                      3-   71 m1      .banksel ram_address
     0062 00rr                      1- 3656     	MOVAR	_maxDuty
     0063                           1- 3657     _00312_DS_:
                                    1- 3658     	.line	298, "main.c"; 	if(workStep > 0)
                                    1- 3659     	BANKSEL	_workStep
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 01rr                      1- 3660     	MOVR	_workStep,W
     0065 0D03                      1- 3661     	BTRSC	STATUS,2
     0066 3rrr                      1- 3662     	LGOTO	_00314_DS_
                                    1- 3663     	.line	300, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 3664     	BANKSEL	_maxDuty
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 01rr                      1- 3665     	MOVR	_maxDuty,W
     0069 00rr                      1- 3666     	SFUN	_PWM2DUTY
                                    1- 3667     	.line	301, "main.c"; 	pwmInit();
     006A 2rrr                      1- 3668     	LCALL	_pwmInit
     006B                           1- 3669     _00314_DS_:
                                    1- 3670     	.line	303, "main.c"; 	ledStep = workStep;
                                    1- 3671     	BANKSEL	_workStep
     006B rrrr                      3-   71 m1      .banksel ram_address
     006C 01rr                      1- 3672     	MOVR	_workStep,W
                                    1- 3673     	BANKSEL	_ledStep
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 00rr                      1- 3674     	MOVAR	_ledStep
     006F 3rrr                      1- 3675     	LGOTO	_00327_DS_
     0070                           1- 3676     _00325_DS_:
                                    1- 3677     	.line	305, "main.c"; 	else if(kclick == 2)
                                    1- 3678     	BANKSEL	r0x1062
     0070 rrrr                      3-   71 m1      .banksel ram_address
     0071 01rr                      1- 3679     	MOVR	r0x1062,W
     0072 2402                      1- 3680     	XORIA	0x02
     0073 0903                      1- 3681     	BTRSS	STATUS,2
     0074 3rrr                      1- 3682     	LGOTO	_00327_DS_
                                    1- 3683     	.line	307, "main.c"; 	if(workStep > 0)
                                    1- 3684     	BANKSEL	_workStep
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 01rr                      1- 3685     	MOVR	_workStep,W
     0077 0D03                      1- 3686     	BTRSC	STATUS,2
     0078 3rrr                      1- 3687     	LGOTO	_00320_DS_
                                    1- 3688     	.line	309, "main.c"; 	powerOff();
     0079 2rrr                      1- 3689     	LCALL	_powerOff
     007A 3rrr                      1- 3690     	LGOTO	_00321_DS_
     007B                           1- 3691     _00320_DS_:
                                    1- 3692     	.line	313, "main.c"; 	if(pwStep == 10)
                                    1- 3693     	BANKSEL	_pwStep
     007B rrrr                      3-   71 m1      .banksel ram_address
     007C 01rr                      1- 3694     	MOVR	_pwStep,W
     007D 240A                      1- 3695     	XORIA	0x0a
     007E 0903                      1- 3696     	BTRSS	STATUS,2
     007F 3rrr                      1- 3697     	LGOTO	_00316_DS_
                                    1- 3698     	.line	315, "main.c"; 	sleepTime = 0;
                                    1- 3699     	BANKSEL	_sleepTime
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 02rr                      1- 3700     	CLRR	_sleepTime
     0082 02rr                      1- 3701     	CLRR	(_sleepTime + 1)
                                    1- 3702     	.line	316, "main.c"; 	return;
     0083 3rrr                      1- 3703     	LGOTO	_00327_DS_
     0084                           1- 3704     _00316_DS_:
                                    1- 3705     	.line	318, "main.c"; 	workStep = 1;
     0084 2101                      1- 3706     	MOVIA	0x01
                                    1- 3707     	BANKSEL	_workStep
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 00rr                      1- 3708     	MOVAR	_workStep
                                    1- 3709     	.line	319, "main.c"; 	PWM2DUTY = 70;
     0087 2146                      1- 3710     	MOVIA	0x46
     0088 00rr                      1- 3711     	SFUN	_PWM2DUTY
                                    1- 3712     	.line	320, "main.c"; 	currentDuty = 70;
                                    1- 3713     	BANKSEL	_currentDuty
     0089 rrrr                      3-   71 m1      .banksel ram_address
     008A 00rr                      1- 3714     	MOVAR	_currentDuty
                                    1- 3715     	.line	321, "main.c"; 	maxDuty = 40;
     008B 2128                      1- 3716     	MOVIA	0x28
                                    1- 3717     	BANKSEL	_maxDuty
     008C rrrr                      3-   71 m1      .banksel ram_address
     008D 00rr                      1- 3718     	MOVAR	_maxDuty
                                    1- 3719     	.line	322, "main.c"; 	pwmInit();
     008E 2rrr                      1- 3720     	LCALL	_pwmInit
                                    1- 3721     	.line	323, "main.c"; 	if(pwStep == 0)
                                    1- 3722     	BANKSEL	_pwStep
     008F rrrr                      3-   71 m1      .banksel ram_address
     0090 01rr                      1- 3723     	MOVR	_pwStep,W
     0091 0903                      1- 3724     	BTRSS	STATUS,2
     0092 3rrr                      1- 3725     	LGOTO	_00321_DS_
                                    1- 3726     	.line	324, "main.c"; 	shanshuoTime = 10;
     0093 210A                      1- 3727     	MOVIA	0x0a
                                    1- 3728     	BANKSEL	_shanshuoTime
     0094 rrrr                      3-   71 m1      .banksel ram_address
     0095 00rr                      1- 3729     	MOVAR	_shanshuoTime
     0096                           1- 3730     _00321_DS_:
                                    1- 3731     	.line	327, "main.c"; 	ledStep = workStep;
                                    1- 3732     	BANKSEL	_workStep
     0096 rrrr                      3-   71 m1      .banksel ram_address
     0097 01rr                      1- 3733     	MOVR	_workStep,W
                                    1- 3734     	BANKSEL	_ledStep
     0098 rrrr                      3-   71 m1      .banksel ram_address
     0099 00rr                      1- 3735     	MOVAR	_ledStep
     009A                           1- 3736     _00327_DS_:
                                    1- 3737     	.line	329, "main.c"; 	}
                                    1- 3738     	RETURN	
     009A 0010                      3-   26 m1      ret
                                    1- 3739     ; exit point of _keyCtr
                                    1- 3742     ;	code size estimation:
                                    1- 3743     ;	 1476+  371 =  1847 instructions ( 4436 byte)
                                    1- 3745     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__mulchar               Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000002C
_00002_DS_              Label    0000002C
_00003_DS_              Label    0000002C
_00004_DS_              Label    00000025
_00005_DS_              Label    00000025
_00006_DS_              Label    00000025
_00007_DS_              Label    00000043
_00008_DS_              Label    0000009D
_00106_DS_              Label    00000026
_00112_DS_              Label    00000037
_00114_DS_              Label    0000004C
_00121_DS_              Label    0000005D
_00128_DS_              Label    00000060
_00130_DS_              Label    00000064
_00138_DS_              Label    00000018
_00141_DS_              Label    00000021
_00144_DS_              Label    00000032
_00151_DS_              Label    00000057
_00152_DS_              Label    0000005A
_00158_DS_              Label    00000079
_00159_DS_              Label    0000007C
_00162_DS_              Label    0000007F
_00167_DS_              Label    00000091
_00171_DS_              Label    00000086
_00172_DS_              Label    0000009A
_00176_DS_              Label    000000BB
_00184_DS_              Label    00000002
_00276_DS_              Label    0000004C
_00278_DS_              Label    0000006D
_00284_DS_              Label    000000B8
_00285_DS_              Label    000000C2
_00291_DS_              Label    0000001B
_00293_DS_              Label    00000025
_00295_DS_              Label    0000002C
_00299_DS_              Label    0000005B
_00302_DS_              Label    00000052
_00305_DS_              Label    00000049
_00308_DS_              Label    00000040
_00311_DS_              Label    00000037
_00312_DS_              Label    00000063
_00314_DS_              Label    0000006B
_00316_DS_              Label    00000084
_00320_DS_              Label    0000007B
_00321_DS_              Label    00000096
_00325_DS_              Label    00000070
_00327_DS_              Label    0000009A
_00341_DS_              Label    0000000E
_00344_DS_              Label    00000012
_00347_DS_              Label    00000027
_00352_DS_              Label    0000002B
_00355_DS_              Label    00000041
_00358_DS_              Label    00000043
_00361_DS_              Label    00000057
_00362_DS_              Label    00000059
_00363_DS_              Label    0000005A
_00364_DS_              Label    0000005B
_00365_DS_              Label    0000005C
_00366_DS_              Label    0000005D
_00367_DS_              Label    0000005E
_00369_DS_              Label    0000005F
_00410_DS_              Label    00000050
_00445_DS_              Label    0000000C
_00456_DS_              Label    0000000C
_00476_DS_              Label    0000001D
_00477_DS_              Label    00000025
_00479_DS_              Label    00000013
_00480_DS_              Label    00000027
_00481_DS_              Label    00000028
_00489_DS_              Label    0000005C
_00493_DS_              Label    00000066
_00501_DS_              Label    00000084
_00504_DS_              Label    00000075
_00505_DS_              Label    0000008D
_00507_DS_              Label    0000002C
_00511_DS_              Label    0000000C
_00512_DS_              Label    0000008F
_00515_DS_              Label    000000A2
_00553_DS_              Label    0000000A
_00555_DS_              Label    00000056
_00562_DS_              Label    00000004
_00564_DS_              Label    0000000E
_00574_DS_              Label    00000038
_00578_DS_              Label    0000005D
_00581_DS_              Label    00000044
_00582_DS_              Label    00000061
_00589_DS_              Label    00000091
_00590_DS_              Label    000000A2
_00598_DS_              Label    000000DC
_00602_DS_              Label    000000EE
_00603_DS_              Label    000000F1
_00607_DS_              Label    0000010F
_00611_DS_              Label    00000121
_00612_DS_              Label    00000124
_00616_DS_              Label    00000142
_00620_DS_              Label    00000154
_00621_DS_              Label    00000157
_00625_DS_              Label    00000175
_00629_DS_              Label    00000187
_00630_DS_              Label    0000018A
_00634_DS_              Label    000001A5
_00635_DS_              Label    000001A8
_00639_DS_              Label    0000018E
_00642_DS_              Label    0000015B
_00645_DS_              Label    00000128
_00648_DS_              Label    000000F5
_00651_DS_              Label    000000C2
_00654_DS_              Label    00000074
_00656_DS_              Label    000001AB
_00766_DS_              Label    0000003F
_00767_DS_              Label    0000004B
_00769_DS_              Label    0000006E
_00770_DS_              Label    0000007B
_00772_DS_              Label    0000008B
_00773_DS_              Label    0000009D
_00774_DS_              Label    000000AE
_00775_DS_              Label    000000B7
_00776_DS_              Label    000000C9
_00777_DS_              Label    000000D7
_00779_DS_              Label    000000E8
_00780_DS_              Label    000000FC
_00781_DS_              Label    0000010A
_00783_DS_              Label    0000011B
_00784_DS_              Label    0000012F
_00785_DS_              Label    0000013D
_00787_DS_              Label    0000014E
_00788_DS_              Label    00000162
_00789_DS_              Label    00000170
_00791_DS_              Label    00000181
_00793_DS_              Label    0000019F
_00803_DS_              Label    00000038
_00811_DS_              Label    00000086
_00818_DS_              Label    000000AF
_00819_DS_              Label    000000BC
_00824_DS_              Label    00000092
_00827_DS_              Label    00000069
_00830_DS_              Label    00000053
_00833_DS_              Label    000000C3
_00878_DS_              Label    00000044
_00880_DS_              Label    0000005A
_00882_DS_              Label    00000070
_00884_DS_              Label    0000009D
_00886_DS_              Label    000000B6
_00893_DS_              Label    0000000E
_00895_DS_              Label    0000002F
_00902_DS_              Label    0000000E
_00904_DS_              Label    0000002F
_00911_DS_              Label    0000000E
_00913_DS_              Label    0000002F
_00918_DS_              Label    00000000
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_cDuty                  Label    00000000
_checkBatAD             Label    00000000
_checkChrgV             Label    00000000
_checkInAD              Label    00000000
_checkOutA              Label    00000000
_chrgCount              Label    00000000
_chrgCtr                Label    00000000
_chrgStep               Label    00000000
_chrgTime               Label    00000000
_closeCount             Label    00000000
_CMPCR                  Label    00000000
_count1s                Label    00000000
_count200ms             Label    00000000
_count500ms             Label    00000000
_count5S                Label    00000000
_count900s              Label    00000000
_currentDuty            Label    00000000
_debug                  Label    00000000
_delay                  Label    00000000
_duty                   Label    00000000
_F_AIN2_Convert         Label    00000000
_F_AIN3_Convert         Label    00000000
_F_AIN4_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_fgCount                Label    00000000
_fgCtr                  Label    00000000
_fgPRD                  Label    00000000
_firstTime              Label    00000000
_FSR                    Label    00000000
_fullCount              Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_initSys                Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IO_Init                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyCtr                 Label    00000000
_keyRead                Label    00000000
_LED1ON                 Label    00000000
_LED2ON                 Label    00000000
_LED3ON                 Label    00000000
_LED4ON                 Label    00000000
_LED5ON                 Label    00000000
_LED6ON                 Label    00000000
_ledCtr                 Label    00000000
_LedCtr2                Label    00000000
_ledDeadTime            Label    00000000
_LedInput               Label    00000000
_ledLightTime           Label    00000000
_ledShow                Label    00000000
_ledStep                Label    00000000
_ledTime                Label    00000000
_lockLedStep            Label    00000000
_lowBatTime             Label    00000000
_lowCount               Label    00000000
_main                   Label    00000000
_maxDuty                Label    00000000
_OSCCR                  Label    00000000
_overCount              Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_powerOff               Label    00000000
_preFG                  Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_pwm1Init               Label    00000000
_pwm1Stop               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_pwmInit                Label    00000000
_pwmStop                Label    00000000
_pwStep                 Label    00000000
_R_AIN2_DATA            Label    00000000
_R_AIN2_DATA_LB         Label    00000000
_R_AIN3_DATA            Label    00000000
_R_AIN3_DATA_LB         Label    00000000
_R_AIN4_DATA            Label    00000000
_R_AIN4_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_shanshuoTime           Label    00000000
_sleepTime              Label    00000000
_startStep              Label    00000000
_Status                 Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_tempDuty               Label    00000000
_tempLedStep            Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000075
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1032                 Label    00000000
r0x1033                 Label    00000000
r0x1034                 Label    00000000
r0x1035                 Label    00000000
r0x1036                 Label    00000000
r0x1039                 Label    00000000
r0x103A                 Label    00000000
r0x103B                 Label    00000000
r0x103C                 Label    00000000
r0x103F                 Label    00000000
r0x1040                 Label    00000000
r0x1041                 Label    00000000
r0x1042                 Label    00000000
r0x1045                 Label    00000000
r0x1046                 Label    00000000
r0x1049                 Label    00000000
r0x104C                 Label    00000000
r0x104D                 Label    00000000
r0x1050                 Label    00000000
r0x1051                 Label    00000000
r0x1052                 Label    00000000
r0x1053                 Label    00000000
r0x1054                 Label    00000000
r0x1055                 Label    00000000
r0x1057                 Label    00000000
r0x1058                 Label    00000000
r0x1059                 Label    00000000
r0x105A                 Label    00000000
r0x105B                 Label    00000000
r0x105C                 Label    00000000
r0x105D                 Label    00000000
r0x105E                 Label    00000000
r0x105F                 Label    00000000
r0x1060                 Label    00000000
r0x1061                 Label    00000000
r0x1062                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
