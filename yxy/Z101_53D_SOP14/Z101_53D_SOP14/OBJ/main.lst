
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A053D,c=on
                                    1-    9     	#include "ny8a053d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	__moduint
                                    1-   15     	extern	_PORTAbits
                                    1-   16     	extern	_PORTBbits
                                    1-   17     	extern	_PCONbits
                                    1-   18     	extern	_BWUCONbits
                                    1-   19     	extern	_ABPLCONbits
                                    1-   20     	extern	_BPHCONbits
                                    1-   21     	extern	_INTEbits
                                    1-   22     	extern	_INTFbits
                                    1-   23     	extern	_INDF
                                    1-   24     	extern	_TMR0
                                    1-   25     	extern	_PCL
                                    1-   26     	extern	_STATUS
                                    1-   27     	extern	_FSR
                                    1-   28     	extern	_PORTA
                                    1-   29     	extern	_PORTB
                                    1-   30     	extern	_PCON
                                    1-   31     	extern	_BWUCON
                                    1-   32     	extern	_PCHBUF
                                    1-   33     	extern	_ABPLCON
                                    1-   34     	extern	_BPHCON
                                    1-   35     	extern	_INTE
                                    1-   36     	extern	_INTF
                                    1-   37     	extern	_TMR1
                                    1-   38     	extern	_T1CR1
                                    1-   39     	extern	_T1CR2
                                    1-   40     	extern	_PWM1DUTY
                                    1-   41     	extern	_PS1CV
                                    1-   42     	extern	_BZ1CR
                                    1-   43     	extern	_IRCR
                                    1-   44     	extern	_TBHP
                                    1-   45     	extern	_TBHD
                                    1-   46     	extern	_OSCCR
                                    1-   47     	extern	_IOSTA
                                    1-   48     	extern	_IOSTB
                                    1-   49     	extern	_PS0CV
                                    1-   50     	extern	_BODCON
                                    1-   51     	extern	_PCON1
                                    1-   52     	extern	_T0MD
                                    1-   53     	extern	___sdcc_saved_fsr
                                    1-   54     	extern	___sdcc_saved_stk00
                                    1-   55     	extern	___sdcc_saved_stk01
                                    1-   56     	extern	__mulchar
                                    1-   57     	extern	__nyc_ny8_startup
                                    1-   58     ;--------------------------------------------------------
                                    1-   59     ; global declarations
                                    1-   60     ;--------------------------------------------------------
                                    1-   61     	extern	_gotoSleep
                                    1-   62     	extern	_pwm1Stop
                                    1-   63     	extern	_pwm1Init
                                    1-   64     	extern	_keyCtr
                                    1-   65     	extern	_keyRead
                                    1-   66     	extern	_fanzhuan
                                    1-   67     	extern	_zhengzhuan
                                    1-   68     	extern	_workStop
                                    1-   69     	extern	_workCtr
                                    1-   70     	extern	_initSys
                                    1-   71     	extern	_task2
                                    1-   72     	extern	_task1
                                    1-   73     	extern	_isr
                                    1-   74     	extern	_main
                                    1-   75     	extern	_keyRead2
                                    1-   76     	extern	_Status
                                    1-   77     	extern	_workStartFlag
                                    1-   78     	extern	_keyNub
                                    1-   79     	extern	_keyCount
                                    1-   80     	extern	_intCount
                                    1-   81     	extern	_workStep
                                    1-   82     	extern	_powerStep
                                    1-   83     	extern	_sleepTime
                                    1-   84     	extern	_keyCount2
                                    1-   85     	extern	_count1s
                                    1-   86     	extern	_lastTime
                                    1-   87     	extern	_resetworkTime
                                    1-   88     	extern	_resetdelayTime
                                    1-   89     	extern	_workTime
                                    1-   90     	extern	_delayTime
                                    1-   91     	extern	_zfTime
                                    1-   92     	extern	_ledCount
                                    1-   94     	extern PSAVE
                                    1-   95     	extern SSAVE
                                    1-   96     	extern WSAVE
                                    1-   97     	extern STK02
                                    1-   98     	extern STK01
                                    1-   99     	extern STK00
                                    1-  101     .segment "uninit", 0x20000020
 20000020                           1-  102     PSAVE:
                                    1-  103     	.res 1
 20000021                           1-  104     SSAVE:
                                    1-  105     	.res 1
 20000022                           1-  106     WSAVE:
                                    1-  107     	.res 1
 20000023                           1-  108     STK02:
                                    1-  109     	.res 1
 20000024                           1-  110     STK01:
                                    1-  111     	.res 1
 20000025                           1-  112     STK00:
                                    1-  113     	.res 1
                                    1-  115     ;--------------------------------------------------------
                                    1-  116     ; global definitions
                                    1-  117     ;--------------------------------------------------------
                                    1-  118     ;--------------------------------------------------------
                                    1-  119     ; absolute symbol definitions
                                    1-  120     ;--------------------------------------------------------
                                    1-  121     ;--------------------------------------------------------
                                    1-  122     ; compiler-defined variables
                                    1-  123     ;--------------------------------------------------------
                                    1-  124     .segment "uninit"
     0000                           1-  125     r0x1019:
                                    1-  126     	.res	1
                                    1-  127     .segment "uninit"
     0000                           1-  128     r0x101A:
                                    1-  129     	.res	1
                                    1-  130     .segment "uninit"
     0000                           1-  131     r0x1017:
                                    1-  132     	.res	1
                                    1-  133     .segment "uninit"
     0000                           1-  134     r0x1018:
                                    1-  135     	.res	1
                                    1-  136     .segment "uninit"
     0000                           1-  137     r0x1014:
                                    1-  138     	.res	1
                                    1-  139     .segment "uninit"
     0000                           1-  140     r0x1015:
                                    1-  141     	.res	1
                                    1-  142     .segment "uninit"
     0000                           1-  143     r0x1016:
                                    1-  144     	.res	1
                                    1-  145     ;--------------------------------------------------------
                                    1-  146     ; initialized data
                                    1-  147     ;--------------------------------------------------------
                                    1-  149     .segment "idata"
     0000                           1-  150     _Status:
     0000 0000                      1-  151     	dw	0x00
                                    1-  155     .segment "idata"
     0000                           1-  156     _workStartFlag:
     0000 0000                      1-  157     	dw	0x00
                                    1-  161     .segment "idata"
     0000                           1-  162     _keyNub:
     0000 0000                      1-  163     	dw	0x00
                                    1-  167     .segment "idata"
     0000                           1-  168     _keyCount:
     0000 0000                      1-  169     	dw	0x00
                                    1-  173     .segment "idata"
     0000                           1-  174     _intCount:
     0000 0000 0000                 1-  175     	dw	0x00, 0x00
                                    1-  179     .segment "idata"
     0000                           1-  180     _workStep:
     0000 0000                      1-  181     	dw	0x00
                                    1-  185     .segment "idata"
     0000                           1-  186     _powerStep:
     0000 0000                      1-  187     	dw	0x00
                                    1-  191     .segment "idata"
     0000                           1-  192     _sleepTime:
     0000 0000                      1-  193     	dw	0x00
                                    1-  197     .segment "idata"
     0000                           1-  198     _keyCount2:
     0000 0000                      1-  199     	dw	0x00
                                    1-  203     .segment "idata"
     0000                           1-  204     _count1s:
     0000 0000                      1-  205     	dw	0x00
                                    1-  209     .segment "idata"
     0000                           1-  210     _lastTime:
     0000 0000 0000                 1-  211     	dw	0x00, 0x00
                                    1-  215     .segment "idata"
     0000                           1-  216     _resetworkTime:
     0000 0078                      1-  217     	dw	0x78
                                    1-  221     .segment "idata"
     0000                           1-  222     _resetdelayTime:
     0000 001E                      1-  223     	dw	0x1e
                                    1-  227     .segment "idata"
     0000                           1-  228     _workTime:
     0000 0000                      1-  229     	dw	0x00
                                    1-  233     .segment "idata"
     0000                           1-  234     _delayTime:
     0000 0000                      1-  235     	dw	0x00
                                    1-  239     .segment "idata"
     0000                           1-  240     _zfTime:
     0000 0000                      1-  241     	dw	0x00
                                    1-  245     .segment "idata"
     0000                           1-  246     _ledCount:
     0000 0000                      1-  247     	dw	0x00
                                    1-  250     ;--------------------------------------------------------
                                    1-  251     ; overlayable items in internal ram 
                                    1-  252     ;--------------------------------------------------------
                                    1-  253     ;	udata_ovr
                                    1-  254     ;--------------------------------------------------------
                                    1-  255     ; reset vector 
                                    1-  256     ;--------------------------------------------------------
                                    1-  257     ORG	0x0000
     0000 3rrr                      1-  258     	LGOTO	__nyc_ny8_startup
                                    1-  259     ;--------------------------------------------------------
                                    1-  260     ; interrupt and initialization code
                                    1-  261     ;--------------------------------------------------------
                                    1-  262     ORG 0x0008
                                    1-  263     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  265     .segment "code"
     0000                           1-  266     __sdcc_interrupt:
                                    1-  267     ;***
                                    1-  268     ;  pBlock Stats: dbName = I
                                    1-  269     ;***
                                    1-  270     ;2 compiler assigned registers:
                                    1-  271     ;   STK00
                                    1-  272     ;   STK01
                                    1-  273     ;; Starting pCode block
     0000                           1-  274     _isr:
                                    1-  275     ; 0 exit points
                                    1-  276     	.line	65, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  277     	MOVAR	WSAVE
     0001 1503                      1-  278     	SWAPR	STATUS,W
     0002 0283                      1-  279     	CLRR	STATUS
     0003 00rr                      1-  280     	MOVAR	SSAVE
     0004 010A                      1-  281     	MOVR	PCHBUF,W
     0005 028A                      1-  282     	CLRR	PCHBUF
     0006 00rr                      1-  283     	MOVAR	PSAVE
     0007 0104                      1-  284     	MOVR	FSR,W
                                    1-  285     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  286     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  287     	MOVR	STK00,W
                                    1-  288     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  289     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  290     	MOVR	STK01,W
                                    1-  291     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  292     	MOVAR	___sdcc_saved_stk01
                                    1-  293     	.line	67, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  294     	BTRSS	_INTFbits,0
                                    1-  295     	MGOTO	_00108_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  296     	.line	69, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  297     	MOVIA	0x37
     0013 03rr                      1-  298     	ADDAR	_TMR0,F
                                    1-  299     	.line	71, "main.c"; 	if(++intCount >= 10000)
                                    1-  300     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  301     	INCR	_intCount,F
     0016 0D03                      1-  302     	BTRSC	STATUS,2
     0017 05rr                      1-  303     	INCR	(_intCount + 1),F
                                    1-  304     ;;unsigned compare: left < lit (0x2710=10000), size=2
     0018 2127                      1-  305     	MOVIA	0x27
     0019 04rr                      1-  306     	SUBAR	(_intCount + 1),W
     001A 0903                      1-  307     	BTRSS	STATUS,2
                                    1-  308     	MGOTO	_00122_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
     001C 2110                      1-  309     	MOVIA	0x10
     001D 04rr                      1-  310     	SUBAR	_intCount,W
     001E                           1-  311     _00122_DS_:
     001E 0803                      1-  312     	BTRSS	STATUS,0
                                    1-  313     	MGOTO	_00108_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  314     	.line	73, "main.c"; 	IntFlag = 1;
                                    1-  315     	BANKSEL	_Status
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 18rr                      1-  316     	BSR	_Status,0
                                    1-  317     	.line	74, "main.c"; 	intCount = 0;
                                    1-  318     	BANKSEL	_intCount
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 02rr                      1-  319     	CLRR	_intCount
     0024 02rr                      1-  320     	CLRR	(_intCount + 1)
     0025                           1-  321     _00108_DS_:
                                    1-  322     	.line	80, "main.c"; 	if(INTFbits.PBIF)
     0025 08rr                      1-  323     	BTRSS	_INTFbits,1
                                    1-  324     	MGOTO	_00110_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  325     	.line	82, "main.c"; 	INTF= (unsigned char)~(C_INT_PBKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0027 21FD                      1-  326     	MOVIA	0xfd
     0028 00rr                      1-  327     	MOVAR	_INTF
     0029                           1-  328     _00110_DS_:
                                    1-  329     	.line	85, "main.c"; 	INTF = 0;
     0029 02rr                      1-  330     	CLRR	_INTF
                                    1-  331     	.line	87, "main.c"; 	}
                                    1-  332     	BANKSEL	___sdcc_saved_stk01
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1-  333     	MOVR	___sdcc_saved_stk01,W
     002C 00rr                      1-  334     	MOVAR	STK01
                                    1-  335     	BANKSEL	___sdcc_saved_stk00
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 01rr                      1-  336     	MOVR	___sdcc_saved_stk00,W
     002F 00rr                      1-  337     	MOVAR	STK00
                                    1-  338     	BANKSEL	___sdcc_saved_fsr
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1-  339     	MOVR	___sdcc_saved_fsr,W
     0032 0084                      1-  340     	MOVAR	FSR
     0033 01rr                      1-  341     	MOVR	PSAVE,W
     0034 008A                      1-  342     	MOVAR	PCHBUF
     0035 0283                      1-  343     	CLRR	STATUS
     0036 15rr                      1-  344     	SWAPR	SSAVE,W
     0037 0083                      1-  345     	MOVAR	STATUS
     0038 15rr                      1-  346     	SWAPR	WSAVE,F
     0039 15rr                      1-  347     	SWAPR	WSAVE,W
     003A                           1-  348     END_OF_INTERRUPT:
     003A 0011                      1-  349     	RETIE	
                                    1-  351     ;--------------------------------------------------------
                                    1-  352     ; code
                                    1-  353     ;--------------------------------------------------------
                                    1-  354     ;***
                                    1-  355     ;  pBlock Stats: dbName = M
                                    1-  356     ;***
                                    1-  357     ;has an exit
                                    1-  358     ;functions called:
                                    1-  359     ;   _initSys
                                    1-  360     ;   __moduint
                                    1-  361     ;   _task1
                                    1-  362     ;   __moduint
                                    1-  363     ;   _task2
                                    1-  364     ;   _initSys
                                    1-  365     ;   __moduint
                                    1-  366     ;   _task1
                                    1-  367     ;   __moduint
                                    1-  368     ;   _task2
                                    1-  369     ;5 compiler assigned registers:
                                    1-  370     ;   STK02
                                    1-  371     ;   STK01
                                    1-  372     ;   STK00
                                    1-  373     ;   r0x101B
                                    1-  374     ;   r0x101C
                                    1-  375     ;; Starting pCode block
                                    1-  376     .segment "code"; module=main, function=_main
     0000                           1-  378     _main:
                                    1-  379     ; 2 exit points
                                    1-  380     	.line	92, "main.c"; 	initSys();
                                    1-  381     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
     0001                           1-  382     _00132_DS_:
                                    1-  383     	.line	95, "main.c"; 	CLRWDT();
     0001 0002                      1-  384     	clrwdt
                                    1-  385     	.line	96, "main.c"; 	if(intCount%100 == 0)
     0002 2164                      1-  386     	MOVIA	0x64
     0003 00rr                      1-  387     	MOVAR	STK02
     0004 2100                      1-  388     	MOVIA	0x00
     0005 00rr                      1-  389     	MOVAR	STK01
                                    1-  390     	BANKSEL	_intCount
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 01rr                      1-  391     	MOVR	_intCount,W
     0008 00rr                      1-  392     	MOVAR	STK00
     0009 01rr                      1-  393     	MOVR	(_intCount + 1),W
                                    1-  394     	MCALL	__moduint
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  395     ;;102	MOVAR	r0x101B
     000B 11rr                      1-  396     	IORAR	STK00,W
     000C 0D03                      1-  397     	BTRSC	STATUS,2
                                    1-  398     	.line	97, "main.c"; 	task1();
                                    1-  399     	MCALL	_task1
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  400     	.line	98, "main.c"; 	if(intCount%5000 == 0)
     000E 2188                      1-  401     	MOVIA	0x88
     000F 00rr                      1-  402     	MOVAR	STK02
     0010 2113                      1-  403     	MOVIA	0x13
     0011 00rr                      1-  404     	MOVAR	STK01
                                    1-  405     	BANKSEL	_intCount
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1-  406     	MOVR	_intCount,W
     0014 00rr                      1-  407     	MOVAR	STK00
     0015 01rr                      1-  408     	MOVR	(_intCount + 1),W
                                    1-  409     	MCALL	__moduint
     0016 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  410     ;;101	MOVAR	r0x101B
     0017 11rr                      1-  411     	IORAR	STK00,W
     0018 0903                      1-  412     	BTRSS	STATUS,2
                                    1-  413     	MGOTO	_00132_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  414     	.line	99, "main.c"; 	task2();
                                    1-  415     	MCALL	_task2
     001A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  416     	MGOTO	_00132_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  417     	.line	101, "main.c"; 	}
                                    1-  418     	RETURN	
     001C 0010                      3-   40 m1      ret
                                    1-  419     ; exit point of _main
                                    1-  421     ;***
                                    1-  422     ;  pBlock Stats: dbName = C
                                    1-  423     ;***
                                    1-  424     ;has an exit
                                    1-  425     ;functions called:
                                    1-  426     ;   _workStop
                                    1-  427     ;   _workStop
                                    1-  428     ;; Starting pCode block
                                    1-  429     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  431     _gotoSleep:
                                    1-  432     ; 2 exit points
                                    1-  433     	.line	415, "main.c"; 	sleepTime = 0;
                                    1-  434     	BANKSEL	_sleepTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1-  435     	CLRR	_sleepTime
                                    1-  436     	.line	417, "main.c"; 	workStop();
                                    1-  437     	MCALL	_workStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  438     	.line	418, "main.c"; 	workStep = 0;
                                    1-  439     	BANKSEL	_workStep
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1-  440     	CLRR	_workStep
                                    1-  441     	.line	419, "main.c"; 	BWUCON = 0x18;
     0005 2118                      1-  442     	MOVIA	0x18
     0006 00rr                      1-  443     	MOVAR	_BWUCON
                                    1-  444     	.line	420, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PBKey;
     0007 210B                      1-  445     	MOVIA	0x0b
     0008 00rr                      1-  446     	MOVAR	_INTE
                                    1-  447     	.line	421, "main.c"; 	PCON =  C_LVR_En;	
     0009 2108                      1-  448     	MOVIA	0x08
     000A 00rr                      1-  449     	MOVAR	_PCON
                                    1-  450     	.line	422, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     000B 02rr                      1-  451     	CLRR	_INTF
                                    1-  452     	.line	423, "main.c"; 	CLRWDT();
     000C 0002                      1-  453     	clrwdt
                                    1-  454     	.line	424, "main.c"; 	ENI();
     000D 0004                      1-  455     	ENI
                                    1-  456     	.line	425, "main.c"; 	SLEEP();
     000E 0001                      1-  457     	sleep
                                    1-  458     	.line	426, "main.c"; 	BWUCON = 0x00;
     000F 02rr                      1-  459     	CLRR	_BWUCON
                                    1-  460     	.line	427, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0010 2101                      1-  461     	MOVIA	0x01
     0011 00rr                      1-  462     	MOVAR	_INTE
                                    1-  463     	.line	428, "main.c"; 	INTF = 0;
     0012 02rr                      1-  464     	CLRR	_INTF
                                    1-  465     	.line	430, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0013 2188                      1-  466     	MOVIA	0x88
     0014 00rr                      1-  467     	MOVAR	_PCON
                                    1-  468     	.line	432, "main.c"; 	}
                                    1-  469     	RETURN	
     0015 0010                      3-   40 m1      ret
                                    1-  470     ; exit point of _gotoSleep
                                    1-  472     ;***
                                    1-  473     ;  pBlock Stats: dbName = C
                                    1-  474     ;***
                                    1-  475     ;has an exit
                                    1-  476     ;; Starting pCode block
                                    1-  477     .segment "code"; module=main, function=_pwm1Stop
     0000                           1-  479     _pwm1Stop:
                                    1-  480     ; 2 exit points
                                    1-  481     	.line	407, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1-  482     	CLRA	
     0001 002r                      1-  483     	SFUN	_T1CR1
                                    1-  484     	.line	408, "main.c"; 	pwmFlag = 0;
                                    1-  485     	BANKSEL	_Status
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 1Err                      1-  486     	BCR	_Status,4
                                    1-  487     	.line	409, "main.c"; 	}
                                    1-  488     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1-  489     ; exit point of _pwm1Stop
                                    1-  491     ;***
                                    1-  492     ;  pBlock Stats: dbName = C
                                    1-  493     ;***
                                    1-  494     ;has an exit
                                    1-  495     ;; Starting pCode block
                                    1-  496     .segment "code"; module=main, function=_pwm1Init
     0000                           1-  498     _pwm1Init:
                                    1-  499     ; 2 exit points
                                    1-  500     	.line	395, "main.c"; 	if(pwmFlag)
                                    1-  501     	BANKSEL	_Status
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Err                      1-  502     	BTRSC	_Status,4
                                    1-  503     	.line	396, "main.c"; 	return;
                                    1-  504     	MGOTO	_00287_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
     0003                           1-  505     _00286_DS_:
                                    1-  506     	.line	397, "main.c"; 	pwmFlag = 1;
                                    1-  507     	BANKSEL	_Status
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 1Arr                      1-  508     	BSR	_Status,4
                                    1-  509     	.line	398, "main.c"; 	TMR1 = 199;							//频率为110K
     0005 21C7                      1-  510     	MOVIA	0xc7
     0006 002r                      1-  511     	SFUN	_TMR1
                                    1-  512     	.line	401, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div256;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0007 2107                      1-  513     	MOVIA	0x07
     0008 002r                      1-  514     	SFUN	_T1CR2
                                    1-  515     	.line	402, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     0009 2183                      1-  516     	MOVIA	0x83
     000A 002r                      1-  517     	SFUN	_T1CR1
     000B                           1-  518     _00287_DS_:
                                    1-  519     	.line	403, "main.c"; 	}
                                    1-  520     	RETURN	
     000B 0010                      3-   40 m1      ret
                                    1-  521     ; exit point of _pwm1Init
                                    1-  523     ;***
                                    1-  524     ;  pBlock Stats: dbName = C
                                    1-  525     ;***
                                    1-  526     ;has an exit
                                    1-  527     ;functions called:
                                    1-  528     ;   _keyRead
                                    1-  529     ;   _keyRead2
                                    1-  530     ;   _keyRead
                                    1-  531     ;   _keyRead2
                                    1-  532     ;2 compiler assigned registers:
                                    1-  533     ;   r0x1015
                                    1-  534     ;   r0x1016
                                    1-  535     ;; Starting pCode block
                                    1-  536     .segment "code"; module=main, function=_keyCtr
                                    1-  538     ;local variable name mapping:
     0000                           1-  540     _keyCtr:
                                    1-  541     ; 2 exit points
                                    1-  542     	.line	339, "main.c"; 	char kclick = keyRead(0x08 & (~PORTB));
     0000 07rr                      1-  543     	COMR	_PORTB,W
                                    1-  544     	BANKSEL	r0x1015
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1-  545     	MOVAR	r0x1015
     0003 2108                      1-  546     	MOVIA	0x08
     0004 10rr                      1-  547     	ANDAR	r0x1015,F
     0005 01rr                      1-  548     	MOVR	r0x1015,W
                                    1-  549     	MCALL	_keyRead
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  550     	BANKSEL	r0x1015
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 00rr                      1-  551     	MOVAR	r0x1015
                                    1-  552     	.line	340, "main.c"; 	if(kclick == 1 && powerFlag)
     0009 2401                      1-  553     	XORIA	0x01
     000A 0903                      1-  554     	BTRSS	STATUS,2
                                    1-  555     	MGOTO	_00272_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  556     	BANKSEL	_Status
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 09rr                      1-  557     	BTRSS	_Status,2
                                    1-  558     	MGOTO	_00272_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  559     	.line	342, "main.c"; 	sleepTime = 0;
                                    1-  560     	BANKSEL	_sleepTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1-  561     	CLRR	_sleepTime
                                    1-  562     	.line	343, "main.c"; 	if(++workStep > 4)
                                    1-  563     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 05rr                      1-  564     	INCR	_workStep,F
                                    1-  565     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  566     ;;unsigned compare: left >= lit (0x5=5), size=1
     0013 2105                      1-  567     	MOVIA	0x05
     0014 04rr                      1-  568     	SUBAR	_workStep,W
     0015 0803                      1-  569     	BTRSS	STATUS,0
                                    1-  570     	MGOTO	_00251_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  571     	.line	344, "main.c"; 	workStep = 1;
     0017 2101                      1-  572     	MOVIA	0x01
     0018 00rr                      1-  573     	MOVAR	_workStep
     0019                           1-  574     _00251_DS_:
                                    1-  575     	.line	345, "main.c"; 	if(workStep == 1)
                                    1-  576     	BANKSEL	_workStep
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1-  577     	MOVR	_workStep,W
     001B 2401                      1-  578     	XORIA	0x01
     001C 0903                      1-  579     	BTRSS	STATUS,2
                                    1-  580     	MGOTO	_00261_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  581     	.line	347, "main.c"; 	resetworkTime   = 120;
     001E 2178                      1-  582     	MOVIA	0x78
                                    1-  583     	BANKSEL	_resetworkTime
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 00rr                      1-  584     	MOVAR	_resetworkTime
                                    1-  585     	.line	348, "main.c"; 	resetdelayTime	= 5;
     0021 2105                      1-  586     	MOVIA	0x05
                                    1-  587     	BANKSEL	_resetdelayTime
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 00rr                      1-  588     	MOVAR	_resetdelayTime
                                    1-  589     	MGOTO	_00273_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1-  590     _00261_DS_:
                                    1-  591     	.line	350, "main.c"; 	else if(workStep == 2)
                                    1-  592     	BANKSEL	_workStep
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1-  593     	MOVR	_workStep,W
     0027 2402                      1-  594     	XORIA	0x02
     0028 0903                      1-  595     	BTRSS	STATUS,2
                                    1-  596     	MGOTO	_00258_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  597     	.line	352, "main.c"; 	resetworkTime   = 80;
     002A 2150                      1-  598     	MOVIA	0x50
                                    1-  599     	BANKSEL	_resetworkTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 00rr                      1-  600     	MOVAR	_resetworkTime
                                    1-  601     	.line	353, "main.c"; 	resetdelayTime	= 10;
     002D 210A                      1-  602     	MOVIA	0x0a
                                    1-  603     	BANKSEL	_resetdelayTime
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1-  604     	MOVAR	_resetdelayTime
                                    1-  605     	MGOTO	_00273_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1-  606     _00258_DS_:
                                    1-  607     	.line	355, "main.c"; 	else if(workStep == 3)
                                    1-  608     	BANKSEL	_workStep
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1-  609     	MOVR	_workStep,W
     0033 2403                      1-  610     	XORIA	0x03
     0034 0903                      1-  611     	BTRSS	STATUS,2
                                    1-  612     	MGOTO	_00255_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  613     	.line	357, "main.c"; 	resetworkTime   = 40;
     0036 2128                      1-  614     	MOVIA	0x28
                                    1-  615     	BANKSEL	_resetworkTime
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 00rr                      1-  616     	MOVAR	_resetworkTime
                                    1-  617     	.line	358, "main.c"; 	resetdelayTime	= 10;
     0039 210A                      1-  618     	MOVIA	0x0a
                                    1-  619     	BANKSEL	_resetdelayTime
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 00rr                      1-  620     	MOVAR	_resetdelayTime
                                    1-  621     	MGOTO	_00273_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D                           1-  622     _00255_DS_:
                                    1-  623     	.line	360, "main.c"; 	else if(workStep == 4)
                                    1-  624     	BANKSEL	_workStep
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 01rr                      1-  625     	MOVR	_workStep,W
     003F 2404                      1-  626     	XORIA	0x04
     0040 0903                      1-  627     	BTRSS	STATUS,2
                                    1-  628     	MGOTO	_00273_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  629     	.line	362, "main.c"; 	resetworkTime   = 60;
     0042 213C                      1-  630     	MOVIA	0x3c
                                    1-  631     	BANKSEL	_resetworkTime
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 00rr                      1-  632     	MOVAR	_resetworkTime
                                    1-  633     	.line	363, "main.c"; 	resetdelayTime	= 20;
     0045 2114                      1-  634     	MOVIA	0x14
                                    1-  635     	BANKSEL	_resetdelayTime
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1-  636     	MOVAR	_resetdelayTime
                                    1-  637     	MGOTO	_00273_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049                           1-  638     _00272_DS_:
                                    1-  639     	.line	366, "main.c"; 	else if(kclick == 2)
                                    1-  640     	BANKSEL	r0x1015
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 01rr                      1-  641     	MOVR	r0x1015,W
     004B 2402                      1-  642     	XORIA	0x02
     004C 0903                      1-  643     	BTRSS	STATUS,2
                                    1-  644     	MGOTO	_00273_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  645     	.line	368, "main.c"; 	sleepTime = 0;
                                    1-  646     	BANKSEL	_sleepTime
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 02rr                      1-  647     	CLRR	_sleepTime
                                    1-  648     	.line	369, "main.c"; 	if(powerFlag)
                                    1-  649     	BANKSEL	_Status
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 09rr                      1-  650     	BTRSS	_Status,2
                                    1-  651     	MGOTO	_00264_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  652     	.line	370, "main.c"; 	ledCount = 2;	//关机发送信号
     0053 2102                      1-  653     	MOVIA	0x02
                                    1-  654     	BANKSEL	_ledCount
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 00rr                      1-  655     	MOVAR	_ledCount
     0056                           1-  656     _00264_DS_:
                                    1-  657     	.line	371, "main.c"; 	powerFlag = !powerFlag;
     0056 2104                      1-  658     	MOVIA	0x04
                                    1-  659     	BANKSEL	_Status
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 12rr                      1-  660     	XORAR	_Status,F
                                    1-  661     	.line	372, "main.c"; 	if(0X10 &~PORTB)
     0059 01rr                      1-  662     	MOVR	_PORTB,W
                                    1-  663     	BANKSEL	r0x1015
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 00rr                      1-  664     	MOVAR	r0x1015
                                    1-  665     	BANKSEL	r0x1016
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 02rr                      1-  666     	CLRR	r0x1016
                                    1-  667     	BANKSEL	r0x1015
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 07rr                      1-  668     	COMR	r0x1015,W
     0060 00rr                      1-  669     	MOVAR	r0x1015
                                    1-  670     	BANKSEL	r0x1016
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 07rr                      1-  671     	COMR	r0x1016,W
     0063 00rr                      1-  672     	MOVAR	r0x1016
                                    1-  673     	BANKSEL	r0x1015
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 0Arr                      1-  674     	BTRSS	r0x1015,4
                                    1-  675     	MGOTO	_00001_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  676     	.line	374, "main.c"; 	powerFlag = 0;		//低电平不允许开机
                                    1-  677     	BANKSEL	_Status
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 1Drr                      1-  678     	BCR	_Status,2
     0069                           1-  679     _00001_DS_:
                                    1-  680     	.line	376, "main.c"; 	if(powerFlag)
                                    1-  681     	BANKSEL	_Status
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 09rr                      1-  682     	BTRSS	_Status,2
                                    1-  683     	MGOTO	_00273_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  684     	.line	378, "main.c"; 	lastTime = 600;
     006C 2158                      1-  685     	MOVIA	0x58
                                    1-  686     	BANKSEL	_lastTime
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 00rr                      1-  687     	MOVAR	_lastTime
     006F 2102                      1-  688     	MOVIA	0x02
     0070 00rr                      1-  689     	MOVAR	(_lastTime + 1)
                                    1-  690     	.line	379, "main.c"; 	workStep = 1;
     0071 2101                      1-  691     	MOVIA	0x01
                                    1-  692     	BANKSEL	_workStep
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 00rr                      1-  693     	MOVAR	_workStep
                                    1-  694     	.line	380, "main.c"; 	powerStep = 1;
                                    1-  695     	BANKSEL	_powerStep
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 00rr                      1-  696     	MOVAR	_powerStep
                                    1-  697     	.line	381, "main.c"; 	resetworkTime   = 120;
     0076 2178                      1-  698     	MOVIA	0x78
                                    1-  699     	BANKSEL	_resetworkTime
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 00rr                      1-  700     	MOVAR	_resetworkTime
                                    1-  701     	.line	382, "main.c"; 	resetdelayTime	= 30;
     0079 211E                      1-  702     	MOVIA	0x1e
                                    1-  703     	BANKSEL	_resetdelayTime
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 00rr                      1-  704     	MOVAR	_resetdelayTime
     007C                           1-  705     _00273_DS_:
                                    1-  706     	.line	386, "main.c"; 	if(keyRead2(0X01 & (~PORTA)) && powerFlag)
     007C 07rr                      1-  707     	COMR	_PORTA,W
                                    1-  708     	BANKSEL	r0x1015
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 00rr                      1-  709     	MOVAR	r0x1015
     007F 2101                      1-  710     	MOVIA	0x01
     0080 10rr                      1-  711     	ANDAR	r0x1015,F
     0081 01rr                      1-  712     	MOVR	r0x1015,W
                                    1-  713     	MCALL	_keyRead2
     0082 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  714     	BANKSEL	r0x1015
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 00rr                      1-  715     	MOVAR	r0x1015
     0085 01rr                      1-  716     	MOVR	r0x1015,W
     0086 0D03                      1-  717     	BTRSC	STATUS,2
                                    1-  718     	MGOTO	_00280_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  719     	BANKSEL	_Status
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 09rr                      1-  720     	BTRSS	_Status,2
                                    1-  721     	MGOTO	_00280_DS_
     008A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  722     	.line	388, "main.c"; 	if(++powerStep > 3)
                                    1-  723     	BANKSEL	_powerStep
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 05rr                      1-  724     	INCR	_powerStep,F
                                    1-  725     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  726     ;;unsigned compare: left >= lit (0x4=4), size=1
     008D 2104                      1-  727     	MOVIA	0x04
     008E 04rr                      1-  728     	SUBAR	_powerStep,W
     008F 0803                      1-  729     	BTRSS	STATUS,0
                                    1-  730     	MGOTO	_00280_DS_
     0090 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  731     	.line	389, "main.c"; 	powerStep = 1;
     0091 2101                      1-  732     	MOVIA	0x01
     0092 00rr                      1-  733     	MOVAR	_powerStep
     0093                           1-  734     _00280_DS_:
                                    1-  735     	.line	391, "main.c"; 	}
                                    1-  736     	RETURN	
     0093 0010                      3-   40 m1      ret
                                    1-  737     ; exit point of _keyCtr
                                    1-  739     ;***
                                    1-  740     ;  pBlock Stats: dbName = C
                                    1-  741     ;***
                                    1-  742     ;has an exit
                                    1-  743     ;1 compiler assigned register :
                                    1-  744     ;   r0x1014
                                    1-  745     ;; Starting pCode block
                                    1-  746     .segment "code"; module=main, function=_keyRead2
                                    1-  748     ;local variable name mapping:
     0000                           1-  750     _keyRead2:
                                    1-  751     ; 2 exit points
                                    1-  752     	.line	313, "main.c"; 	char keyRead2(char keyStatus)	
                                    1-  753     	BANKSEL	r0x1014
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  754     	MOVAR	r0x1014
                                    1-  755     	.line	315, "main.c"; 	if(keyStatus)
     0002 01rr                      1-  756     	MOVR	r0x1014,W
     0003 0D03                      1-  757     	BTRSC	STATUS,2
                                    1-  758     	MGOTO	_00243_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  759     	.line	317, "main.c"; 	keyCount2++;
                                    1-  760     	BANKSEL	_keyCount2
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1-  761     	INCR	_keyCount2,F
                                    1-  762     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1-  763     	.line	318, "main.c"; 	if(keyCount2 >= 100)
     0007 2164                      1-  764     	MOVIA	0x64
     0008 04rr                      1-  765     	SUBAR	_keyCount2,W
     0009 0803                      1-  766     	BTRSS	STATUS,0
                                    1-  767     	MGOTO	_00244_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  768     	.line	320, "main.c"; 	keyCount2 = 100;
     000B 2164                      1-  769     	MOVIA	0x64
     000C 00rr                      1-  770     	MOVAR	_keyCount2
                                    1-  771     	MGOTO	_00244_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  772     ;;unsigned compare: left < lit (0xA=10), size=1
     000E                           1-  773     _00243_DS_:
                                    1-  774     	.line	325, "main.c"; 	if(keyCount2 >= 10)
     000E 210A                      1-  775     	MOVIA	0x0a
                                    1-  776     	BANKSEL	_keyCount2
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 04rr                      1-  777     	SUBAR	_keyCount2,W
     0011 0803                      1-  778     	BTRSS	STATUS,0
                                    1-  779     	MGOTO	_00241_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  780     	.line	327, "main.c"; 	keyCount2 = 0;
     0013 02rr                      1-  781     	CLRR	_keyCount2
                                    1-  782     	.line	328, "main.c"; 	return	1;
     0014 2101                      1-  783     	MOVIA	0x01
                                    1-  784     	MGOTO	_00245_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
     0016                           1-  785     _00241_DS_:
                                    1-  786     	.line	330, "main.c"; 	keyCount2 = 0;
                                    1-  787     	BANKSEL	_keyCount2
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 02rr                      1-  788     	CLRR	_keyCount2
     0018                           1-  789     _00244_DS_:
                                    1-  790     	.line	332, "main.c"; 	return 0;
     0018 2100                      1-  791     	MOVIA	0x00
     0019                           1-  792     _00245_DS_:
                                    1-  793     	.line	333, "main.c"; 	}
                                    1-  794     	RETURN	
     0019 0010                      3-   40 m1      ret
                                    1-  795     ; exit point of _keyRead2
                                    1-  797     ;***
                                    1-  798     ;  pBlock Stats: dbName = C
                                    1-  799     ;***
                                    1-  800     ;has an exit
                                    1-  801     ;1 compiler assigned register :
                                    1-  802     ;   r0x1014
                                    1-  803     ;; Starting pCode block
                                    1-  804     .segment "code"; module=main, function=_keyRead
                                    1-  806     ;local variable name mapping:
     0000                           1-  808     _keyRead:
                                    1-  809     ; 2 exit points
                                    1-  810     	.line	279, "main.c"; 	char keyRead(char keyStatus)	
                                    1-  811     	BANKSEL	r0x1014
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  812     	MOVAR	r0x1014
                                    1-  813     	.line	281, "main.c"; 	if(keyStatus)
     0002 01rr                      1-  814     	MOVR	r0x1014,W
     0003 0D03                      1-  815     	BTRSC	STATUS,2
                                    1-  816     	MGOTO	_00231_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  817     	.line	283, "main.c"; 	keyCount++;
                                    1-  818     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1-  819     	INCR	_keyCount,F
                                    1-  820     	.line	284, "main.c"; 	keyNub = keyStatus;
                                    1-  821     	BANKSEL	r0x1014
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1-  822     	MOVR	r0x1014,W
                                    1-  823     	BANKSEL	_keyNub
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 00rr                      1-  824     	MOVAR	_keyNub
                                    1-  825     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1-  826     	.line	285, "main.c"; 	if(keyCount >= 100)
     000B 2164                      1-  827     	MOVIA	0x64
                                    1-  828     	BANKSEL	_keyCount
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 04rr                      1-  829     	SUBAR	_keyCount,W
     000E 0803                      1-  830     	BTRSS	STATUS,0
                                    1-  831     	MGOTO	_00232_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  832     	.line	287, "main.c"; 	keyCount = 100;
     0010 2164                      1-  833     	MOVIA	0x64
     0011 00rr                      1-  834     	MOVAR	_keyCount
                                    1-  835     	.line	288, "main.c"; 	if(!longPressFlag)
                                    1-  836     	BANKSEL	_Status
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 0Crr                      1-  837     	BTRSC	_Status,1
                                    1-  838     	MGOTO	_00232_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  839     	.line	290, "main.c"; 	longPressFlag = 1;
     0015 18rr                      1-  840     	BSR	_Status,1
                                    1-  841     	.line	291, "main.c"; 	return 2;
     0016 2102                      1-  842     	MOVIA	0x02
                                    1-  843     	MGOTO	_00233_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  844     ;;unsigned compare: left < lit (0x64=100), size=1
     0018                           1-  845     _00231_DS_:
                                    1-  846     	.line	297, "main.c"; 	if(keyCount >= 100)
     0018 2164                      1-  847     	MOVIA	0x64
                                    1-  848     	BANKSEL	_keyCount
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 04rr                      1-  849     	SUBAR	_keyCount,W
     001B 0803                      1-  850     	BTRSS	STATUS,0
                                    1-  851     	MGOTO	_00228_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  852     	.line	299, "main.c"; 	keyCount = 0;
     001D 02rr                      1-  853     	CLRR	_keyCount
                                    1-  854     	.line	300, "main.c"; 	longPressFlag = 0;
                                    1-  855     	BANKSEL	_Status
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 1Crr                      1-  856     	BCR	_Status,1
                                    1-  857     	.line	301, "main.c"; 	return	0;
     0020 2100                      1-  858     	MOVIA	0x00
                                    1-  859     	MGOTO	_00233_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  860     ;;unsigned compare: left < lit (0xA=10), size=1
     0022                           1-  861     _00228_DS_:
                                    1-  862     	.line	303, "main.c"; 	else if(keyCount >= 10)
     0022 210A                      1-  863     	MOVIA	0x0a
                                    1-  864     	BANKSEL	_keyCount
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 04rr                      1-  865     	SUBAR	_keyCount,W
     0025 0803                      1-  866     	BTRSS	STATUS,0
                                    1-  867     	MGOTO	_00229_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  868     	.line	305, "main.c"; 	keyCount = 0;
     0027 02rr                      1-  869     	CLRR	_keyCount
                                    1-  870     	.line	306, "main.c"; 	return	1;
     0028 2101                      1-  871     	MOVIA	0x01
                                    1-  872     	MGOTO	_00233_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
     002A                           1-  873     _00229_DS_:
                                    1-  874     	.line	308, "main.c"; 	keyCount = 0;
                                    1-  875     	BANKSEL	_keyCount
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 02rr                      1-  876     	CLRR	_keyCount
     002C                           1-  877     _00232_DS_:
                                    1-  878     	.line	310, "main.c"; 	return 0;
     002C 2100                      1-  879     	MOVIA	0x00
     002D                           1-  880     _00233_DS_:
                                    1-  881     	.line	311, "main.c"; 	}
                                    1-  882     	RETURN	
     002D 0010                      3-   40 m1      ret
                                    1-  883     ; exit point of _keyRead
                                    1-  885     ;***
                                    1-  886     ;  pBlock Stats: dbName = C
                                    1-  887     ;***
                                    1-  888     ;has an exit
                                    1-  889     ;; Starting pCode block
                                    1-  890     .segment "code"; module=main, function=_fanzhuan
     0000                           1-  892     _fanzhuan:
                                    1-  893     ; 2 exit points
                                    1-  894     	.line	273, "main.c"; 	PORTB &= 0xFE;
     0000 1Crr                      1-  895     	BCR	_PORTB,0
                                    1-  896     	.line	274, "main.c"; 	PORTB |= 0X02;
     0001 18rr                      1-  897     	BSR	_PORTB,1
                                    1-  898     	.line	276, "main.c"; 	}
                                    1-  899     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1-  900     ; exit point of _fanzhuan
                                    1-  902     ;***
                                    1-  903     ;  pBlock Stats: dbName = C
                                    1-  904     ;***
                                    1-  905     ;has an exit
                                    1-  906     ;; Starting pCode block
                                    1-  907     .segment "code"; module=main, function=_zhengzhuan
     0000                           1-  909     _zhengzhuan:
                                    1-  910     ; 2 exit points
                                    1-  911     	.line	265, "main.c"; 	PORTB &= 0xFD;
     0000 1Crr                      1-  912     	BCR	_PORTB,1
                                    1-  913     	.line	266, "main.c"; 	PORTB |= 0x01;
     0001 18rr                      1-  914     	BSR	_PORTB,0
                                    1-  915     	.line	268, "main.c"; 	}
                                    1-  916     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1-  917     ; exit point of _zhengzhuan
                                    1-  919     ;***
                                    1-  920     ;  pBlock Stats: dbName = C
                                    1-  921     ;***
                                    1-  922     ;has an exit
                                    1-  923     ;functions called:
                                    1-  924     ;   _pwm1Stop
                                    1-  925     ;   _pwm1Stop
                                    1-  926     ;; Starting pCode block
                                    1-  927     .segment "code"; module=main, function=_workStop
     0000                           1-  929     _workStop:
                                    1-  930     ; 2 exit points
                                    1-  931     	.line	251, "main.c"; 	pwm1Stop();
                                    1-  932     	MCALL	_pwm1Stop
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  933     	.line	252, "main.c"; 	if(ledCount > 0)
                                    1-  934     	BANKSEL	_ledCount
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 01rr                      1-  935     	MOVR	_ledCount,W
     0003 0D03                      1-  936     	BTRSC	STATUS,2
                                    1-  937     	MGOTO	_00207_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  938     	.line	253, "main.c"; 	PORTB = 0x20;
     0005 2120                      1-  939     	MOVIA	0x20
     0006 00rr                      1-  940     	MOVAR	_PORTB
                                    1-  941     	MGOTO	_00208_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
     0008                           1-  942     _00207_DS_:
                                    1-  943     	.line	255, "main.c"; 	PORTB = 0x00;
     0008 02rr                      1-  944     	CLRR	_PORTB
     0009                           1-  945     _00208_DS_:
                                    1-  946     	.line	256, "main.c"; 	PORTA = 0x00;
     0009 02rr                      1-  947     	CLRR	_PORTA
                                    1-  948     	.line	257, "main.c"; 	powerFlag = 0;
                                    1-  949     	BANKSEL	_Status
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 1Drr                      1-  950     	BCR	_Status,2
                                    1-  951     	.line	258, "main.c"; 	workStep = 0;
                                    1-  952     	BANKSEL	_workStep
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 02rr                      1-  953     	CLRR	_workStep
                                    1-  954     	.line	259, "main.c"; 	powerStep = 0;
                                    1-  955     	BANKSEL	_powerStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1-  956     	CLRR	_powerStep
                                    1-  957     	.line	260, "main.c"; 	}
                                    1-  958     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1-  959     ; exit point of _workStop
                                    1-  961     ;***
                                    1-  962     ;  pBlock Stats: dbName = C
                                    1-  963     ;***
                                    1-  964     ;has an exit
                                    1-  965     ;functions called:
                                    1-  966     ;   __mulchar
                                    1-  967     ;   _pwm1Init
                                    1-  968     ;   _pwm1Stop
                                    1-  969     ;   _zhengzhuan
                                    1-  970     ;   _fanzhuan
                                    1-  971     ;   __mulchar
                                    1-  972     ;   _pwm1Init
                                    1-  973     ;   _pwm1Stop
                                    1-  974     ;   _zhengzhuan
                                    1-  975     ;   _fanzhuan
                                    1-  976     ;3 compiler assigned registers:
                                    1-  977     ;   STK00
                                    1-  978     ;   r0x1017
                                    1-  979     ;   r0x1018
                                    1-  980     ;; Starting pCode block
                                    1-  981     .segment "code"; module=main, function=_workCtr
     0000                           1-  983     _workCtr:
                                    1-  984     ; 2 exit points
                                    1-  985     	.line	174, "main.c"; 	if(powerStep > 0)
                                    1-  986     	BANKSEL	_powerStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1-  987     	MOVR	_powerStep,W
     0002 0D03                      1-  988     	BTRSC	STATUS,2
                                    1-  989     	MGOTO	_00168_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  990     	.line	176, "main.c"; 	PWM1DUTY = powerStep*60;
     0004 213C                      1-  991     	MOVIA	0x3c
     0005 00rr                      1-  992     	MOVAR	STK00
     0006 01rr                      1-  993     	MOVR	_powerStep,W
                                    1-  994     	MCALL	__mulchar
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  995     	BANKSEL	r0x1017
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  996     	MOVAR	r0x1017
     000A 002r                      1-  997     	SFUN	_PWM1DUTY
     000B                           1-  998     _00168_DS_:
                                    1-  999     	.line	180, "main.c"; 	if(workStep > 0)
                                    1- 1000     	BANKSEL	_workStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 01rr                      1- 1001     	MOVR	_workStep,W
     000D 0D03                      1- 1002     	BTRSC	STATUS,2
                                    1- 1003     	MGOTO	_00182_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1004     	.line	182, "main.c"; 	if(workTime > 0)
                                    1- 1005     	BANKSEL	_workTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 1006     	MOVR	_workTime,W
     0011 0D03                      1- 1007     	BTRSC	STATUS,2
                                    1- 1008     	MGOTO	_00179_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1009     	.line	184, "main.c"; 	if(count1s == 0)
                                    1- 1010     	BANKSEL	_count1s
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 1011     	MOVR	_count1s,W
     0015 0903                      1- 1012     	BTRSS	STATUS,2
                                    1- 1013     	MGOTO	_00002_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1014     	.line	185, "main.c"; 	workTime--;
                                    1- 1015     	BANKSEL	_workTime
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 06rr                      1- 1016     	DECR	_workTime,F
     0019                           1- 1017     _00002_DS_:
                                    1- 1018     	.line	186, "main.c"; 	delayTime = resetdelayTime;
                                    1- 1019     	BANKSEL	_resetdelayTime
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1020     	MOVR	_resetdelayTime,W
                                    1- 1021     	BANKSEL	_delayTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1022     	MOVAR	_delayTime
                                    1- 1023     	.line	187, "main.c"; 	PORTA |= 0X0E;
     001D 210E                      1- 1024     	MOVIA	0x0e
     001E 11rr                      1- 1025     	IORAR	_PORTA,F
                                    1- 1026     	.line	188, "main.c"; 	pwm1Init();
                                    1- 1027     	MCALL	_pwm1Init
     001F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1028     	MGOTO	_00182_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
     0021                           1- 1029     _00179_DS_:
                                    1- 1030     	.line	193, "main.c"; 	PORTA &= 0xF1;
     0021 21F1                      1- 1031     	MOVIA	0xf1
     0022 10rr                      1- 1032     	ANDAR	_PORTA,F
                                    1- 1033     	.line	194, "main.c"; 	pwm1Stop();		//敲打电机
                                    1- 1034     	MCALL	_pwm1Stop
     0023 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1035     	.line	195, "main.c"; 	if(delayTime > 0)
                                    1- 1036     	BANKSEL	_delayTime
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1037     	MOVR	_delayTime,W
     0026 0D03                      1- 1038     	BTRSC	STATUS,2
                                    1- 1039     	MGOTO	_00176_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1040     	.line	197, "main.c"; 	if(count1s == 0)
                                    1- 1041     	BANKSEL	_count1s
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 01rr                      1- 1042     	MOVR	_count1s,W
     002A 0903                      1- 1043     	BTRSS	STATUS,2
                                    1- 1044     	MGOTO	_00003_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1045     	.line	198, "main.c"; 	delayTime--;
                                    1- 1046     	BANKSEL	_delayTime
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 17rr                      1- 1047     	DECRSZ	_delayTime,F
     002E                           1- 1048     _00003_DS_:
                                    1- 1049     	.line	199, "main.c"; 	if(delayTime == 0)
                                    1- 1050     	MGOTO	_00182_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1051     	.line	201, "main.c"; 	workTime = resetworkTime;
                                    1- 1052     	BANKSEL	_resetworkTime
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1053     	MOVR	_resetworkTime,W
                                    1- 1054     	BANKSEL	_workTime
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 00rr                      1- 1055     	MOVAR	_workTime
                                    1- 1056     	MGOTO	_00182_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
     0034                           1- 1057     _00176_DS_:
                                    1- 1058     	.line	206, "main.c"; 	workTime = resetworkTime;
                                    1- 1059     	BANKSEL	_resetworkTime
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 01rr                      1- 1060     	MOVR	_resetworkTime,W
                                    1- 1061     	BANKSEL	_workTime
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 00rr                      1- 1062     	MOVAR	_workTime
     0038                           1- 1063     _00182_DS_:
                                    1- 1064     	.line	211, "main.c"; 	zfTime++;
                                    1- 1065     	BANKSEL	_zfTime
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 05rr                      1- 1066     	INCR	_zfTime,F
                                    1- 1067     	.line	212, "main.c"; 	if(0X80 & ~PORTB)
     003A 01rr                      1- 1068     	MOVR	_PORTB,W
                                    1- 1069     	BANKSEL	r0x1017
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 00rr                      1- 1070     	MOVAR	r0x1017
                                    1- 1071     	BANKSEL	r0x1018
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 02rr                      1- 1072     	CLRR	r0x1018
                                    1- 1073     	BANKSEL	r0x1017
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 07rr                      1- 1074     	COMR	r0x1017,W
     0041 00rr                      1- 1075     	MOVAR	r0x1017
                                    1- 1076     	BANKSEL	r0x1018
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 07rr                      1- 1077     	COMR	r0x1018,W
     0044 00rr                      1- 1078     	MOVAR	r0x1018
                                    1- 1079     	BANKSEL	r0x1017
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 0Brr                      1- 1080     	BTRSS	r0x1017,7
                                    1- 1081     	MGOTO	_00190_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1082     	.line	214, "main.c"; 	if(ZFFlag == 0)
                                    1- 1083     	BANKSEL	_Status
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 0Drr                      1- 1084     	BTRSC	_Status,3
                                    1- 1085     	MGOTO	_00004_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1086     	.line	215, "main.c"; 	zfTime = 0;
                                    1- 1087     	BANKSEL	_zfTime
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 02rr                      1- 1088     	CLRR	_zfTime
     004D                           1- 1089     _00004_DS_:
                                    1- 1090     	.line	216, "main.c"; 	ZFFlag = 1;
                                    1- 1091     	BANKSEL	_Status
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 19rr                      1- 1092     	BSR	_Status,3
                                    1- 1093     	MGOTO	_00191_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
     0050                           1- 1094     _00190_DS_:
                                    1- 1095     	.line	219, "main.c"; 	else if(0X40 & ~PORTB)
     0050 01rr                      1- 1096     	MOVR	_PORTB,W
                                    1- 1097     	BANKSEL	r0x1017
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 00rr                      1- 1098     	MOVAR	r0x1017
                                    1- 1099     	BANKSEL	r0x1018
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 02rr                      1- 1100     	CLRR	r0x1018
                                    1- 1101     	BANKSEL	r0x1017
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 07rr                      1- 1102     	COMR	r0x1017,W
     0057 00rr                      1- 1103     	MOVAR	r0x1017
                                    1- 1104     	BANKSEL	r0x1018
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 07rr                      1- 1105     	COMR	r0x1018,W
     005A 00rr                      1- 1106     	MOVAR	r0x1018
                                    1- 1107     	BANKSEL	r0x1017
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 0Brr                      1- 1108     	BTRSS	r0x1017,6
                                    1- 1109     	MGOTO	_00191_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1110     	.line	221, "main.c"; 	if(ZFFlag == 1)
                                    1- 1111     	BANKSEL	_Status
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 09rr                      1- 1112     	BTRSS	_Status,3
                                    1- 1113     	MGOTO	_00005_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1114     	.line	222, "main.c"; 	zfTime = 0;
                                    1- 1115     	BANKSEL	_zfTime
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 02rr                      1- 1116     	CLRR	_zfTime
     0063                           1- 1117     _00005_DS_:
                                    1- 1118     	.line	223, "main.c"; 	ZFFlag = 0;
                                    1- 1119     	BANKSEL	_Status
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 1Drr                      1- 1120     	BCR	_Status,3
     0065                           1- 1121     _00191_DS_:
                                    1- 1122     	.line	225, "main.c"; 	if(zfTime < 50)
     0065 2132                      1- 1123     	MOVIA	0x32
                                    1- 1124     	BANKSEL	_zfTime
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 04rr                      1- 1125     	SUBAR	_zfTime,W
     0068 0C03                      1- 1126     	BTRSC	STATUS,0
                                    1- 1127     	MGOTO	_00193_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1128     	.line	227, "main.c"; 	PORTB &= 0xFC;
     006A 21FC                      1- 1129     	MOVIA	0xfc
     006B 10rr                      1- 1130     	ANDAR	_PORTB,F
     006C                           1- 1131     _00193_DS_:
                                    1- 1132     	.line	229, "main.c"; 	if(ZFFlag)
                                    1- 1133     	BANKSEL	_Status
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 09rr                      1- 1134     	BTRSS	_Status,3
                                    1- 1135     	MGOTO	_00199_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1136     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1137     ;;unsigned compare: left >= lit (0x33=51), size=1
                                    1- 1138     	.line	231, "main.c"; 	if(zfTime > 50)
     006F 2133                      1- 1139     	MOVIA	0x33
                                    1- 1140     	BANKSEL	_zfTime
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 04rr                      1- 1141     	SUBAR	_zfTime,W
     0072 0803                      1- 1142     	BTRSS	STATUS,0
                                    1- 1143     	MGOTO	_00201_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1144     	.line	233, "main.c"; 	zhengzhuan();
                                    1- 1145     	MCALL	_zhengzhuan
     0074 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1146     	.line	234, "main.c"; 	zfTime = 51;
     0075 2133                      1- 1147     	MOVIA	0x33
                                    1- 1148     	BANKSEL	_zfTime
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 00rr                      1- 1149     	MOVAR	_zfTime
                                    1- 1150     	MGOTO	_00201_DS_
     0078 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1151     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1152     ;;unsigned compare: left >= lit (0x33=51), size=1
     0079                           1- 1153     _00199_DS_:
                                    1- 1154     	.line	239, "main.c"; 	if(zfTime > 50)
     0079 2133                      1- 1155     	MOVIA	0x33
                                    1- 1156     	BANKSEL	_zfTime
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 04rr                      1- 1157     	SUBAR	_zfTime,W
     007C 0803                      1- 1158     	BTRSS	STATUS,0
                                    1- 1159     	MGOTO	_00201_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1160     	.line	241, "main.c"; 	fanzhuan();
                                    1- 1161     	MCALL	_fanzhuan
     007E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1162     	.line	242, "main.c"; 	zfTime = 51;
     007F 2133                      1- 1163     	MOVIA	0x33
                                    1- 1164     	BANKSEL	_zfTime
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 00rr                      1- 1165     	MOVAR	_zfTime
     0082                           1- 1166     _00201_DS_:
                                    1- 1167     	.line	246, "main.c"; 	}
                                    1- 1168     	RETURN	
     0082 0010                      3-   40 m1      ret
                                    1- 1169     ; exit point of _workCtr
                                    1- 1171     ;***
                                    1- 1172     ;  pBlock Stats: dbName = C
                                    1- 1173     ;***
                                    1- 1174     ;has an exit
                                    1- 1175     ;; Starting pCode block
                                    1- 1176     .segment "code"; module=main, function=_initSys
     0000                           1- 1178     _initSys:
                                    1- 1179     ; 2 exit points
                                    1- 1180     	.line	147, "main.c"; 	DISI();
     0000 0013                      1- 1181     	DISI
                                    1- 1182     	.line	148, "main.c"; 	IOSTA = C_PA0_Input;
     0001 2101                      1- 1183     	MOVIA	0x01
     0002 000r                      1- 1184     	IOST	_IOSTA
                                    1- 1185     	.line	149, "main.c"; 	IOSTB = C_PB3_Input | C_PB4_Input | C_PB6_Input | C_PB7_Input;
     0003 21D8                      1- 1186     	MOVIA	0xd8
     0004 000r                      1- 1187     	IOST	_IOSTB
                                    1- 1188     	.line	150, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 1189     	CLRR	_PORTB
                                    1- 1190     	.line	151, "main.c"; 	PORTA = 0x00;
     0006 02rr                      1- 1191     	CLRR	_PORTA
                                    1- 1192     	.line	152, "main.c"; 	BPHCON = 0x27;
     0007 2127                      1- 1193     	MOVIA	0x27
     0008 00rr                      1- 1194     	MOVAR	_BPHCON
                                    1- 1195     	.line	153, "main.c"; 	ABPLCON = 0xFF;
     0009 21FF                      1- 1196     	MOVIA	0xff
     000A 00rr                      1- 1197     	MOVAR	_ABPLCON
                                    1- 1198     	.line	155, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000B 2101                      1- 1199     	MOVIA	0x01
     000C 00rr                      1- 1200     	MOVAR	_INTE
                                    1- 1201     	.line	157, "main.c"; 	PCON1 = C_TMR0_Dis;
     000D 0200                      1- 1202     	CLRA	
     000E 000r                      1- 1203     	IOST	_PCON1
                                    1- 1204     	.line	159, "main.c"; 	TMR0 = 55;
     000F 2137                      1- 1205     	MOVIA	0x37
     0010 00rr                      1- 1206     	MOVAR	_TMR0
                                    1- 1207     	.line	160, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0011 0200                      1- 1208     	CLRA	
     0012 0003                      1- 1209     	T0MD	
                                    1- 1210     	.line	162, "main.c"; 	PCON1 = C_TMR0_En;
     0013 2101                      1- 1211     	MOVIA	0x01
     0014 000r                      1- 1212     	IOST	_PCON1
                                    1- 1213     	.line	165, "main.c"; 	PCON = C_WDT_En | C_LVR_En ;				// Enable WDT ,  Enable LVR
     0015 2188                      1- 1214     	MOVIA	0x88
     0016 00rr                      1- 1215     	MOVAR	_PCON
                                    1- 1216     	.line	168, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0017 2101                      1- 1217     	MOVIA	0x01
     0018 000r                      1- 1218     	IOST	_PCON1
                                    1- 1219     	.line	169, "main.c"; 	ENI();
     0019 0004                      1- 1220     	ENI
                                    1- 1221     	.line	170, "main.c"; 	}
                                    1- 1222     	RETURN	
     001A 0010                      3-   40 m1      ret
                                    1- 1223     ; exit point of _initSys
                                    1- 1225     ;***
                                    1- 1226     ;  pBlock Stats: dbName = C
                                    1- 1227     ;***
                                    1- 1228     ;; Starting pCode block
                                    1- 1229     .segment "code"; module=main, function=_task2
     0000                           1- 1231     _task2:
                                    1- 1232     ; 0 exit points
                                    1- 1233     	.line	141, "main.c"; 	if(ledCount > 0)
                                    1- 1234     	BANKSEL	_ledCount
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 1235     	MOVR	_ledCount,W
     0002 0903                      1- 1236     	BTRSS	STATUS,2
                                    1- 1237     	.line	142, "main.c"; 	ledCount--;
     0003 06rr                      1- 1238     	DECR	_ledCount,F
                                    1- 1239     	.line	143, "main.c"; 	}
                                    1- 1240     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1- 1242     ;***
                                    1- 1243     ;  pBlock Stats: dbName = C
                                    1- 1244     ;***
                                    1- 1245     ;functions called:
                                    1- 1246     ;   _keyCtr
                                    1- 1247     ;   _workStop
                                    1- 1248     ;   _workCtr
                                    1- 1249     ;   _workStop
                                    1- 1250     ;   _gotoSleep
                                    1- 1251     ;   _keyCtr
                                    1- 1252     ;   _workStop
                                    1- 1253     ;   _workCtr
                                    1- 1254     ;   _workStop
                                    1- 1255     ;   _gotoSleep
                                    1- 1256     ;2 compiler assigned registers:
                                    1- 1257     ;   r0x1019
                                    1- 1258     ;   r0x101A
                                    1- 1259     ;; Starting pCode block
                                    1- 1260     .segment "code"; module=main, function=_task1
     0000                           1- 1262     _task1:
                                    1- 1263     ; 0 exit points
                                    1- 1264     	.line	106, "main.c"; 	keyCtr();
                                    1- 1265     	MCALL	_keyCtr
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1266     	.line	107, "main.c"; 	if(++count1s >= 100)
                                    1- 1267     	BANKSEL	_count1s
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 05rr                      1- 1268     	INCR	_count1s,F
                                    1- 1269     ;;unsigned compare: left < lit (0x64=100), size=1
     0003 2164                      1- 1270     	MOVIA	0x64
     0004 04rr                      1- 1271     	SUBAR	_count1s,W
     0005 0803                      1- 1272     	BTRSS	STATUS,0
                                    1- 1273     	MGOTO	_00142_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1274     	.line	109, "main.c"; 	count1s = 0;
     0007 02rr                      1- 1275     	CLRR	_count1s
                                    1- 1276     	.line	110, "main.c"; 	if(lastTime > 0)
                                    1- 1277     	BANKSEL	_lastTime
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 01rr                      1- 1278     	MOVR	_lastTime,W
     000A 11rr                      1- 1279     	IORAR	(_lastTime + 1),W
     000B 0D03                      1- 1280     	BTRSC	STATUS,2
                                    1- 1281     	MGOTO	_00142_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1282     	.line	112, "main.c"; 	--lastTime;
     000D 21FF                      1- 1283     	MOVIA	0xff
     000E 03rr                      1- 1284     	ADDAR	_lastTime,F
     000F 0803                      1- 1285     	BTRSS	STATUS,0
     0010 06rr                      1- 1286     	DECR	(_lastTime + 1),F
                                    1- 1287     	.line	113, "main.c"; 	if(lastTime == 0)
     0011 01rr                      1- 1288     	MOVR	_lastTime,W
     0012 11rr                      1- 1289     	IORAR	(_lastTime + 1),W
     0013 0903                      1- 1290     	BTRSS	STATUS,2
                                    1- 1291     	MGOTO	_00142_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1292     	.line	115, "main.c"; 	ledCount = 2;
     0015 2102                      1- 1293     	MOVIA	0x02
                                    1- 1294     	BANKSEL	_ledCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1295     	MOVAR	_ledCount
                                    1- 1296     	.line	116, "main.c"; 	workStop();
                                    1- 1297     	MCALL	_workStop
     0018 2rrr                      3-   66 m1      LCALL rom_address
     0019                           1- 1298     _00142_DS_:
                                    1- 1299     	.line	120, "main.c"; 	if(0X10 &(~PORTB ) && keyCount == 0)
     0019 01rr                      1- 1300     	MOVR	_PORTB,W
                                    1- 1301     	BANKSEL	r0x1019
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 00rr                      1- 1302     	MOVAR	r0x1019
                                    1- 1303     	BANKSEL	r0x101A
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1- 1304     	CLRR	r0x101A
                                    1- 1305     	BANKSEL	r0x1019
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 07rr                      1- 1306     	COMR	r0x1019,W
     0020 00rr                      1- 1307     	MOVAR	r0x1019
                                    1- 1308     	BANKSEL	r0x101A
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 07rr                      1- 1309     	COMR	r0x101A,W
     0023 00rr                      1- 1310     	MOVAR	r0x101A
                                    1- 1311     	BANKSEL	r0x1019
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 0Arr                      1- 1312     	BTRSS	r0x1019,4
                                    1- 1313     	MGOTO	_00006_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1314     	BANKSEL	_keyCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 1315     	MOVR	_keyCount,W
     0029 0903                      1- 1316     	BTRSS	STATUS,2
                                    1- 1317     	MGOTO	_00006_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1318     	.line	122, "main.c"; 	powerFlag = 0;		//低电平不允许开机
                                    1- 1319     	BANKSEL	_Status
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 1Drr                      1- 1320     	BCR	_Status,2
     002D                           1- 1321     _00006_DS_:
                                    1- 1322     	.line	124, "main.c"; 	if(powerFlag)
                                    1- 1323     	BANKSEL	_Status
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 09rr                      1- 1324     	BTRSS	_Status,2
                                    1- 1325     	MGOTO	_00149_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1326     	.line	126, "main.c"; 	workCtr();
                                    1- 1327     	MCALL	_workCtr
     0030 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1328     	MGOTO	_00151_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
     0032                           1- 1329     _00149_DS_:
                                    1- 1330     	.line	130, "main.c"; 	workStop();
                                    1- 1331     	MCALL	_workStop
     0032 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1332     	.line	131, "main.c"; 	if(++sleepTime > 250)
                                    1- 1333     	BANKSEL	_sleepTime
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 05rr                      1- 1334     	INCR	_sleepTime,F
                                    1- 1335     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1336     ;;unsigned compare: left >= lit (0xFB=251), size=1
     0035 21FB                      1- 1337     	MOVIA	0xfb
     0036 04rr                      1- 1338     	SUBAR	_sleepTime,W
     0037 0C03                      1- 1339     	BTRSC	STATUS,0
                                    1- 1340     	.line	133, "main.c"; 	gotoSleep();
                                    1- 1341     	MCALL	_gotoSleep
     0038 2rrr                      3-   66 m1      LCALL rom_address
     0039                           1- 1342     _00151_DS_:
                                    1- 1343     	.line	136, "main.c"; 	}
                                    1- 1344     	RETURN	
     0039 0010                      3-   40 m1      ret
                                    1- 1347     ;	code size estimation:
                                    1- 1348     ;	  462+  123 =   585 instructions ( 1416 byte)
                                    1- 1350     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000C
__PROCESSOR__           Constant 00800533
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8a053d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A053D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000003FF
DATA ROM     = 0x00000000 - 0x000003FF
RESERVED MEM = 0x00000400 - 0x00000410
SRAM / SFR   = 0x00000000 - 0x00000000
