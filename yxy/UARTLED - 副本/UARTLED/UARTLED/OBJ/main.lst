
                    Nyquest Technology Co., Ltd.

NYASM 2.30

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A054D,c=on
                                    1-    9     	#include "ny8a054d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	__moduint
                                    1-   15     	extern	__divuchar
                                    1-   16     	extern	__divuint
                                    1-   17     	extern	_PORTAbits
                                    1-   18     	extern	_PORTBbits
                                    1-   19     	extern	_PCONbits
                                    1-   20     	extern	_BWUCONbits
                                    1-   21     	extern	_ABPLCONbits
                                    1-   22     	extern	_BPHCONbits
                                    1-   23     	extern	_INTEbits
                                    1-   24     	extern	_INTFbits
                                    1-   25     	extern	_AWUCONbits
                                    1-   26     	extern	_INTEDGbits
                                    1-   27     	extern	_RFCbits
                                    1-   28     	extern	_INTE2bits
                                    1-   29     	extern	_INDF
                                    1-   30     	extern	_TMR0
                                    1-   31     	extern	_PCL
                                    1-   32     	extern	_STATUS
                                    1-   33     	extern	_FSR
                                    1-   34     	extern	_PORTA
                                    1-   35     	extern	_PORTB
                                    1-   36     	extern	_PCON
                                    1-   37     	extern	_BWUCON
                                    1-   38     	extern	_PCHBUF
                                    1-   39     	extern	_ABPLCON
                                    1-   40     	extern	_BPHCON
                                    1-   41     	extern	_INTE
                                    1-   42     	extern	_INTF
                                    1-   43     	extern	_AWUCON
                                    1-   44     	extern	_INTEDG
                                    1-   45     	extern	_TMRH
                                    1-   46     	extern	_RFC
                                    1-   47     	extern	_TM34RH
                                    1-   48     	extern	_INTE2
                                    1-   49     	extern	_TMR1
                                    1-   50     	extern	_T1CR1
                                    1-   51     	extern	_T1CR2
                                    1-   52     	extern	_PWM1DUTY
                                    1-   53     	extern	_PS1CV
                                    1-   54     	extern	_BZ1CR
                                    1-   55     	extern	_IRCR
                                    1-   56     	extern	_TBHP
                                    1-   57     	extern	_TBHD
                                    1-   58     	extern	_P2CR1
                                    1-   59     	extern	_PWM2DUTY
                                    1-   60     	extern	_OSCCR
                                    1-   61     	extern	_TMR3
                                    1-   62     	extern	_T3CR1
                                    1-   63     	extern	_T3CR2
                                    1-   64     	extern	_PWM3DUTY
                                    1-   65     	extern	_PS3CV
                                    1-   66     	extern	_P4CR1
                                    1-   67     	extern	_PWM4DUTY
                                    1-   68     	extern	_P5CR1
                                    1-   69     	extern	_PWM5DUTY
                                    1-   70     	extern	_PWM5RH
                                    1-   71     	extern	_IOSTA
                                    1-   72     	extern	_IOSTB
                                    1-   73     	extern	_APHCON
                                    1-   74     	extern	_PS0CV
                                    1-   75     	extern	_BODCON
                                    1-   76     	extern	_CMPCR
                                    1-   77     	extern	_PCON1
                                    1-   78     	extern	_T0MD
                                    1-   79     	extern	___sdcc_saved_fsr
                                    1-   80     	extern	___sdcc_saved_stk00
                                    1-   81     	extern	___sdcc_saved_stk01
                                    1-   82     	extern	__gptrput1
                                    1-   83     	extern	__mulint
                                    1-   84     	extern	__nyc_ny8_startup
                                    1-   85     ;--------------------------------------------------------
                                    1-   86     ; global declarations
                                    1-   87     ;--------------------------------------------------------
                                    1-   88     	extern	_sendtoLast
                                    1-   89     	extern	_sendRGB
                                    1-   90     	extern	_Delay80us
                                    1-   91     	extern	_work10
                                    1-   92     	extern	_breath3
                                    1-   93     	extern	_work9
                                    1-   94     	extern	_setColor
                                    1-   95     	extern	_workCtr
                                    1-   96     	extern	_delay
                                    1-   97     	extern	_WByte
                                    1-   98     	extern	_WaitTF0
                                    1-   99     	extern	_RByte
                                    1-  100     	extern	_rankNub
                                    1-  101     	extern	_revData
                                    1-  102     	extern	_isr
                                    1-  103     	extern	_main
                                    1-  104     	extern	_Delay10Us
                                    1-  105     	extern	_TM0_FLAG
                                    1-  106     	extern	_REC_FLAG
                                    1-  107     	extern	_SEND_FLAG
                                    1-  108     	extern	_intCount
                                    1-  109     	extern	_IntFlag
                                    1-  110     	extern	_uartFlag
                                    1-  111     	extern	_revList
                                    1-  112     	extern	_data
                                    1-  113     	extern	_recData
                                    1-  114     	extern	_Hcount
                                    1-  115     	extern	_index
                                    1-  116     	extern	_uartTime
                                    1-  117     	extern	_workStep
                                    1-  118     	extern	_colorIndex
                                    1-  119     	extern	_timeCount
                                    1-  120     	extern	_firstFlag
                                    1-  121     	extern	_randNub
                                    1-  122     	extern	_snub
                                    1-  123     	extern	_preColorIndex
                                    1-  124     	extern	_preduty
                                    1-  125     	extern	_offFlag
                                    1-  126     	extern	_preColor
                                    1-  127     	extern	_colorTime
                                    1-  128     	extern	_Rdata
                                    1-  129     	extern	_Gdata
                                    1-  130     	extern	_Bdata
                                    1-  131     	extern	_Rdata1
                                    1-  132     	extern	_Gdata1
                                    1-  133     	extern	_Bdata1
                                    1-  134     	extern	_Rdata2
                                    1-  135     	extern	_Gdata2
                                    1-  136     	extern	_Bdata2
                                    1-  137     	extern	_duty
                                    1-  138     	extern	_ledCount
                                    1-  140     	extern PSAVE
                                    1-  141     	extern SSAVE
                                    1-  142     	extern WSAVE
                                    1-  143     	extern STK12
                                    1-  144     	extern STK11
                                    1-  145     	extern STK10
                                    1-  146     	extern STK09
                                    1-  147     	extern STK08
                                    1-  148     	extern STK07
                                    1-  149     	extern STK06
                                    1-  150     	extern STK05
                                    1-  151     	extern STK04
                                    1-  152     	extern STK03
                                    1-  153     	extern STK02
                                    1-  154     	extern STK01
                                    1-  155     	extern STK00
                                    1-  157     .segment "uninit", 0x20000040
 20000040                           1-  158     PSAVE:
                                    1-  159     	.res 1
 20000041                           1-  160     SSAVE:
                                    1-  161     	.res 1
 20000042                           1-  162     WSAVE:
                                    1-  163     	.res 1
 20000043                           1-  164     STK12:
                                    1-  165     	.res 1
 20000044                           1-  166     STK11:
                                    1-  167     	.res 1
 20000045                           1-  168     STK10:
                                    1-  169     	.res 1
 20000046                           1-  170     STK09:
                                    1-  171     	.res 1
 20000047                           1-  172     STK08:
                                    1-  173     	.res 1
 20000048                           1-  174     STK07:
                                    1-  175     	.res 1
 20000049                           1-  176     STK06:
                                    1-  177     	.res 1
 2000004A                           1-  178     STK05:
                                    1-  179     	.res 1
 2000004B                           1-  180     STK04:
                                    1-  181     	.res 1
 2000004C                           1-  182     STK03:
                                    1-  183     	.res 1
 2000004D                           1-  184     STK02:
                                    1-  185     	.res 1
 2000004E                           1-  186     STK01:
                                    1-  187     	.res 1
 2000004F                           1-  188     STK00:
                                    1-  189     	.res 1
                                    1-  191     ;--------------------------------------------------------
                                    1-  192     ; global definitions
                                    1-  193     ;--------------------------------------------------------
                                    1-  194     .segment "uninit"
     0000                           1-  195     _revList:
                                    1-  196     	.res	5
                                    1-  199     ;--------------------------------------------------------
                                    1-  200     ; absolute symbol definitions
                                    1-  201     ;--------------------------------------------------------
                                    1-  202     ;--------------------------------------------------------
                                    1-  203     ; compiler-defined variables
                                    1-  204     ;--------------------------------------------------------
                                    1-  205     .segment "uninit"
     0000                           1-  206     r0x1046:
                                    1-  207     	.res	1
                                    1-  208     .segment "uninit"
     0000                           1-  209     r0x1047:
                                    1-  210     	.res	1
                                    1-  211     .segment "uninit"
     0000                           1-  212     r0x1048:
                                    1-  213     	.res	1
                                    1-  214     .segment "uninit"
     0000                           1-  215     r0x1049:
                                    1-  216     	.res	1
                                    1-  217     .segment "uninit"
     0000                           1-  218     r0x104A:
                                    1-  219     	.res	1
                                    1-  220     .segment "uninit"
     0000                           1-  221     r0x104B:
                                    1-  222     	.res	1
                                    1-  223     .segment "uninit"
     0000                           1-  224     r0x1044:
                                    1-  225     	.res	1
                                    1-  226     .segment "uninit"
     0000                           1-  227     r0x1045:
                                    1-  228     	.res	1
                                    1-  229     .segment "uninit"
     0000                           1-  230     r0x103C:
                                    1-  231     	.res	1
                                    1-  232     .segment "uninit"
     0000                           1-  233     r0x103E:
                                    1-  234     	.res	1
                                    1-  235     .segment "uninit"
     0000                           1-  236     r0x103D:
                                    1-  237     	.res	1
                                    1-  238     .segment "uninit"
     0000                           1-  239     r0x103F:
                                    1-  240     	.res	1
                                    1-  241     .segment "uninit"
     0000                           1-  242     r0x1043:
                                    1-  243     	.res	1
                                    1-  244     .segment "uninit"
     0000                           1-  245     r0x1039:
                                    1-  246     	.res	1
                                    1-  247     .segment "uninit"
     0000                           1-  248     r0x103A:
                                    1-  249     	.res	1
                                    1-  250     .segment "uninit"
     0000                           1-  251     r0x103B:
                                    1-  252     	.res	1
                                    1-  253     .segment "uninit"
     0000                           1-  254     r0x1036:
                                    1-  255     	.res	1
                                    1-  256     .segment "uninit"
     0000                           1-  257     r0x1037:
                                    1-  258     	.res	1
                                    1-  259     .segment "uninit"
     0000                           1-  260     r0x1038:
                                    1-  261     	.res	1
                                    1-  262     .segment "uninit"
     0000                           1-  263     r0x1034:
                                    1-  264     	.res	1
                                    1-  265     .segment "uninit"
     0000                           1-  266     r0x1035:
                                    1-  267     	.res	1
                                    1-  268     .segment "uninit"
     0000                           1-  269     r0x102C:
                                    1-  270     	.res	1
                                    1-  271     .segment "uninit"
     0000                           1-  272     r0x102D:
                                    1-  273     	.res	1
                                    1-  274     .segment "uninit"
     0000                           1-  275     r0x102E:
                                    1-  276     	.res	1
                                    1-  277     .segment "uninit"
     0000                           1-  278     r0x102F:
                                    1-  279     	.res	1
                                    1-  280     .segment "uninit"
     0000                           1-  281     r0x1031:
                                    1-  282     	.res	1
                                    1-  283     .segment "uninit"
     0000                           1-  284     r0x1026:
                                    1-  285     	.res	1
                                    1-  286     .segment "uninit"
     0000                           1-  287     r0x1027:
                                    1-  288     	.res	1
                                    1-  289     .segment "uninit"
     0000                           1-  290     r0x1028:
                                    1-  291     	.res	1
                                    1-  292     .segment "uninit"
     0000                           1-  293     r0x1029:
                                    1-  294     	.res	1
                                    1-  295     .segment "uninit"
     0000                           1-  296     r0x102A:
                                    1-  297     	.res	1
                                    1-  298     .segment "uninit"
     0000                           1-  299     r0x102B:
                                    1-  300     	.res	1
                                    1-  301     ;--------------------------------------------------------
                                    1-  302     ; initialized data
                                    1-  303     ;--------------------------------------------------------
                                    1-  305     .segment "idata"
     0000                           1-  306     _TM0_FLAG:
     0000 0000                      1-  307     	dw	0x00
                                    1-  311     .segment "idata"
     0000                           1-  312     _REC_FLAG:
     0000 0000                      1-  313     	dw	0x00
                                    1-  317     .segment "idata"
     0000                           1-  318     _SEND_FLAG:
     0000 0000                      1-  319     	dw	0x00
                                    1-  323     .segment "idata"
     0000                           1-  324     _intCount:
     0000 0000                      1-  325     	dw	0x00
                                    1-  329     .segment "idata"
     0000                           1-  330     _IntFlag:
     0000 0000                      1-  331     	dw	0x00
                                    1-  335     .segment "idata"
     0000                           1-  336     _uartFlag:
     0000 0000                      1-  337     	dw	0x00
                                    1-  341     .segment "idata"
     0000                           1-  342     _data:
     0000 0025                      1-  343     	dw	0x25
                                    1-  347     .segment "idata"
     0000                           1-  348     _recData:
     0000 0000                      1-  349     	dw	0x00
                                    1-  353     .segment "idata"
     0000                           1-  354     _Hcount:
     0000 0000                      1-  355     	dw	0x00
                                    1-  359     .segment "idata"
     0000                           1-  360     _index:
     0000 0000                      1-  361     	dw	0x00
                                    1-  365     .segment "idata"
     0000                           1-  366     _uartTime:
     0000 0000                      1-  367     	dw	0x00
                                    1-  371     .segment "idata"
     0000                           1-  372     _workStep:
     0000 0000                      1-  373     	dw	0x00
                                    1-  377     .segment "idata"
     0000                           1-  378     _colorIndex:
     0000 0001                      1-  379     	dw	0x01
                                    1-  383     .segment "idata"
     0000                           1-  384     _timeCount:
     0000 0000 0000                 1-  385     	dw	0x00, 0x00
                                    1-  389     .segment "idata"
     0000                           1-  390     _firstFlag:
     0000 0002                      1-  391     	dw	0x02
                                    1-  395     .segment "idata"
     0000                           1-  396     _randNub:
     0000 0000                      1-  397     	dw	0x00
                                    1-  401     .segment "idata"
     0000                           1-  402     _snub:
     0000 0000                      1-  403     	dw	0x00
                                    1-  407     .segment "idata"
     0000                           1-  408     _preColorIndex:
     0000 0000                      1-  409     	dw	0x00
                                    1-  413     .segment "idata"
     0000                           1-  414     _preduty:
     0000 0000                      1-  415     	dw	0x00
                                    1-  419     .segment "idata"
     0000                           1-  420     _offFlag:
     0000 0000                      1-  421     	dw	0x00
                                    1-  425     .segment "idata"
     0000                           1-  426     _preColor:
     0000 0000                      1-  427     	dw	0x00
                                    1-  431     .segment "idata"
     0000                           1-  432     _colorTime:
     0000 0000                      1-  433     	dw	0x00
                                    1-  437     .segment "idata"
     0000                           1-  438     _Rdata:
     0000 0000                      1-  439     	dw	0x00
                                    1-  443     .segment "idata"
     0000                           1-  444     _Gdata:
     0000 0000                      1-  445     	dw	0x00
                                    1-  449     .segment "idata"
     0000                           1-  450     _Bdata:
     0000 0000                      1-  451     	dw	0x00
                                    1-  455     .segment "idata"
     0000                           1-  456     _Rdata1:
     0000 0000                      1-  457     	dw	0x00
                                    1-  461     .segment "idata"
     0000                           1-  462     _Gdata1:
     0000 0000                      1-  463     	dw	0x00
                                    1-  467     .segment "idata"
     0000                           1-  468     _Bdata1:
     0000 0000                      1-  469     	dw	0x00
                                    1-  473     .segment "idata"
     0000                           1-  474     _Rdata2:
     0000 0000                      1-  475     	dw	0x00
                                    1-  479     .segment "idata"
     0000                           1-  480     _Gdata2:
     0000 0000                      1-  481     	dw	0x00
                                    1-  485     .segment "idata"
     0000                           1-  486     _Bdata2:
     0000 0000                      1-  487     	dw	0x00
                                    1-  491     .segment "idata"
     0000                           1-  492     _duty:
     0000 0000                      1-  493     	dw	0x00
                                    1-  497     .segment "idata"
     0000                           1-  498     _ledCount:
     0000 0000                      1-  499     	dw	0x00
                                    1-  502     ;--------------------------------------------------------
                                    1-  503     ; overlayable items in internal ram 
                                    1-  504     ;--------------------------------------------------------
                                    1-  505     ;	udata_ovr
                                    1-  506     ;--------------------------------------------------------
                                    1-  507     ; reset vector 
                                    1-  508     ;--------------------------------------------------------
                                    1-  509     ORG	0x0000
     0000 3rrr                      1-  510     	LGOTO	__nyc_ny8_startup
                                    1-  511     ;--------------------------------------------------------
                                    1-  512     ; interrupt and initialization code
                                    1-  513     ;--------------------------------------------------------
                                    1-  514     ORG 0x0008
                                    1-  515     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  517     .segment "code"
     0000                           1-  518     __sdcc_interrupt:
                                    1-  519     ;***
                                    1-  520     ;  pBlock Stats: dbName = I
                                    1-  521     ;***
                                    1-  522     ;functions called:
                                    1-  523     ;   _setColor
                                    1-  524     ;   _setColor
                                    1-  525     ;   _setColor
                                    1-  526     ;   __moduint
                                    1-  527     ;   _rankNub
                                    1-  528     ;   _rankNub
                                    1-  529     ;   __divuchar
                                    1-  530     ;   _setColor
                                    1-  531     ;   _setColor
                                    1-  532     ;   _setColor
                                    1-  533     ;   __moduint
                                    1-  534     ;   _rankNub
                                    1-  535     ;   _rankNub
                                    1-  536     ;   __divuchar
                                    1-  537     ;9 compiler assigned registers:
                                    1-  538     ;   STK00
                                    1-  539     ;   STK01
                                    1-  540     ;   r0x1046
                                    1-  541     ;   r0x1047
                                    1-  542     ;   r0x1048
                                    1-  543     ;   r0x1049
                                    1-  544     ;   r0x104A
                                    1-  545     ;   r0x104B
                                    1-  546     ;   STK02
                                    1-  547     ;; Starting pCode block
     0000                           1-  548     _isr:
                                    1-  549     ; 0 exit points
                                    1-  550     	.line	127, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  551     	MOVAR	WSAVE
     0001 1503                      1-  552     	SWAPR	STATUS,W
     0002 0283                      1-  553     	CLRR	STATUS
     0003 00rr                      1-  554     	MOVAR	SSAVE
     0004 010A                      1-  555     	MOVR	PCHBUF,W
     0005 028A                      1-  556     	CLRR	PCHBUF
     0006 00rr                      1-  557     	MOVAR	PSAVE
     0007 0104                      1-  558     	MOVR	FSR,W
                                    1-  559     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  560     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  561     	MOVR	STK00,W
                                    1-  562     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  563     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  564     	MOVR	STK01,W
                                    1-  565     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  566     	MOVAR	___sdcc_saved_stk01
                                    1-  567     	.line	129, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  568     	BTRSS	_INTFbits,0
                                    1-  569     	MGOTO	_00137_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  570     	.line	132, "main.c"; 	TMR0 += 65;
     0012 2141                      1-  571     	MOVIA	0x41
     0013 03rr                      1-  572     	ADDAR	_TMR0,F
                                    1-  573     	.line	133, "main.c"; 	intCount++;
                                    1-  574     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  575     	INCR	_intCount,F
                                    1-  576     	.line	134, "main.c"; 	if(intCount == 50)
     0016 01rr                      1-  577     	MOVR	_intCount,W
     0017 2432                      1-  578     	XORIA	0x32
     0018 0903                      1-  579     	BTRSS	STATUS,2
                                    1-  580     	MGOTO	_00137_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  581     	.line	136, "main.c"; 	intCount = 0;
     001A 02rr                      1-  582     	CLRR	_intCount
                                    1-  583     	.line	137, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  584     	MOVIA	0x01
                                    1-  585     	BANKSEL	_IntFlag
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 00rr                      1-  586     	MOVAR	_IntFlag
                                    1-  587     ;;unsigned compare: left < lit (0x14=20), size=1
                                    1-  588     	.line	138, "main.c"; 	if(uartTime < 20)
     001E 2114                      1-  589     	MOVIA	0x14
                                    1-  590     	BANKSEL	_uartTime
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 04rr                      1-  591     	SUBAR	_uartTime,W
     0021 0C03                      1-  592     	BTRSC	STATUS,0
                                    1-  593     	MGOTO	_00120_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  594     	.line	140, "main.c"; 	if(++uartTime == 20)
     0023 05rr                      1-  595     	INCR	_uartTime,F
     0024 01rr                      1-  596     	MOVR	_uartTime,W
     0025 2414                      1-  597     	XORIA	0x14
     0026 0903                      1-  598     	BTRSS	STATUS,2
                                    1-  599     	MGOTO	_00120_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  600     	.line	142, "main.c"; 	index = 0;
                                    1-  601     	BANKSEL	_index
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 02rr                      1-  602     	CLRR	_index
                                    1-  603     	.line	148, "main.c"; 	if(revList[4] == 0xBF && revList[1] == 3 && (revList[1] + revList[2]) == revList[3])
                                    1-  604     	BANKSEL	_revList
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1-  605     	MOVR	(_revList + 4),W
                                    1-  606     	BANKSEL	r0x1046
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1-  607     	MOVAR	r0x1046
     002E 24BF                      1-  608     	XORIA	0xbf
     002F 0903                      1-  609     	BTRSS	STATUS,2
                                    1-  610     	MGOTO	_00108_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  611     	BANKSEL	_revList
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1-  612     	MOVR	(_revList + 1),W
                                    1-  613     	BANKSEL	r0x1046
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 00rr                      1-  614     	MOVAR	r0x1046
     0035 2403                      1-  615     	XORIA	0x03
     0036 0903                      1-  616     	BTRSS	STATUS,2
                                    1-  617     	MGOTO	_00108_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
     0038 01rr                      1-  618     	MOVR	r0x1046,W
                                    1-  619     	BANKSEL	r0x1047
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 00rr                      1-  620     	MOVAR	r0x1047
                                    1-  621     	BANKSEL	r0x1048
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 02rr                      1-  622     	CLRR	r0x1048
                                    1-  623     	BANKSEL	_revList
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 01rr                      1-  624     	MOVR	(_revList + 2),W
                                    1-  625     	BANKSEL	r0x1046
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 00rr                      1-  626     	MOVAR	r0x1046
                                    1-  627     	BANKSEL	r0x1049
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 00rr                      1-  628     	MOVAR	r0x1049
                                    1-  629     	BANKSEL	r0x104A
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 02rr                      1-  630     	CLRR	r0x104A
                                    1-  631     	BANKSEL	r0x1049
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1-  632     	MOVR	r0x1049,W
                                    1-  633     	BANKSEL	r0x1047
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 03rr                      1-  634     	ADDAR	r0x1047,F
     0049 2100                      1-  635     	MOVIA	0x00
     004A 0803                      1-  636     	BTRSS	STATUS,0
                                    1-  637     	MGOTO	_00011_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  638     	BANKSEL	r0x104A
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 05rr                      1-  639     	INCR	r0x104A,W
     004E 0D03                      1-  640     	BTRSC	STATUS,2
                                    1-  641     	MGOTO	_00012_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
     0050                           1-  642     _00011_DS_:
                                    1-  643     	BANKSEL	r0x1048
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 03rr                      1-  644     	ADDAR	r0x1048,F
     0052                           1-  645     _00012_DS_:
                                    1-  646     	BANKSEL	_revList
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1-  647     	MOVR	(_revList + 3),W
                                    1-  648     	BANKSEL	r0x1049
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 00rr                      1-  649     	MOVAR	r0x1049
                                    1-  650     	BANKSEL	r0x104A
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 00rr                      1-  651     	MOVAR	r0x104A
                                    1-  652     	BANKSEL	r0x104B
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 02rr                      1-  653     	CLRR	r0x104B
                                    1-  654     	BANKSEL	r0x104A
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 01rr                      1-  655     	MOVR	r0x104A,W
                                    1-  656     	BANKSEL	r0x1047
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 12rr                      1-  657     	XORAR	r0x1047,W
     005E 0903                      1-  658     	BTRSS	STATUS,2
                                    1-  659     	MGOTO	_00108_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  660     	BANKSEL	r0x104B
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1-  661     	MOVR	r0x104B,W
                                    1-  662     	BANKSEL	r0x1048
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 12rr                      1-  663     	XORAR	r0x1048,W
     0064 0903                      1-  664     	BTRSS	STATUS,2
                                    1-  665     	MGOTO	_00108_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  666     	.line	150, "main.c"; 	workStep = revList[2];
                                    1-  667     	BANKSEL	r0x1046
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 01rr                      1-  668     	MOVR	r0x1046,W
                                    1-  669     	BANKSEL	_workStep
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 00rr                      1-  670     	MOVAR	_workStep
                                    1-  671     	.line	151, "main.c"; 	colorIndex = 1;
     006A 2101                      1-  672     	MOVIA	0x01
                                    1-  673     	BANKSEL	_colorIndex
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 00rr                      1-  674     	MOVAR	_colorIndex
                                    1-  675     	.line	152, "main.c"; 	if(workStep == 9)
                                    1-  676     	BANKSEL	_workStep
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 01rr                      1-  677     	MOVR	_workStep,W
     006F 2409                      1-  678     	XORIA	0x09
     0070 0903                      1-  679     	BTRSS	STATUS,2
                                    1-  680     	MGOTO	_00106_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  681     	.line	153, "main.c"; 	setColor(colorIndex);
     0072 2101                      1-  682     	MOVIA	0x01
                                    1-  683     	MCALL	_setColor
     0073 2rrr                      3-   66 m1      LCALL rom_address
     0074                           1-  684     _00106_DS_:
                                    1-  685     	.line	154, "main.c"; 	timeCount = 0;
                                    1-  686     	BANKSEL	_timeCount
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 02rr                      1-  687     	CLRR	_timeCount
     0076 02rr                      1-  688     	CLRR	(_timeCount + 1)
     0077                           1-  689     _00108_DS_:
                                    1-  690     	.line	156, "main.c"; 	if(firstFlag)
                                    1-  691     	BANKSEL	_firstFlag
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 01rr                      1-  692     	MOVR	_firstFlag,W
     0079 0D03                      1-  693     	BTRSC	STATUS,2
                                    1-  694     	MGOTO	_00120_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  695     	.line	158, "main.c"; 	TM0_FLAG=1; 
     007B 2101                      1-  696     	MOVIA	0x01
                                    1-  697     	BANKSEL	_TM0_FLAG
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 00rr                      1-  698     	MOVAR	_TM0_FLAG
                                    1-  699     	.line	159, "main.c"; 	REC_FLAG = 0;
                                    1-  700     	BANKSEL	_REC_FLAG
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 02rr                      1-  701     	CLRR	_REC_FLAG
                                    1-  702     	.line	160, "main.c"; 	recData = 0;
                                    1-  703     	BANKSEL	_recData
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 02rr                      1-  704     	CLRR	_recData
                                    1-  705     	.line	161, "main.c"; 	colorIndex = 1;
     0082 2101                      1-  706     	MOVIA	0x01
                                    1-  707     	BANKSEL	_colorIndex
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 00rr                      1-  708     	MOVAR	_colorIndex
                                    1-  709     	.line	162, "main.c"; 	timeCount = 0;
                                    1-  710     	BANKSEL	_timeCount
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 02rr                      1-  711     	CLRR	_timeCount
     0087 02rr                      1-  712     	CLRR	(_timeCount + 1)
                                    1-  713     	.line	163, "main.c"; 	if(--firstFlag == 0)
                                    1-  714     	BANKSEL	_firstFlag
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 17rr                      1-  715     	DECRSZ	_firstFlag,F
                                    1-  716     	MGOTO	_00112_DS_
     008A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  717     	.line	164, "main.c"; 	workStep = revList[2];
                                    1-  718     	BANKSEL	_revList
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 01rr                      1-  719     	MOVR	(_revList + 2),W
                                    1-  720     	BANKSEL	_workStep
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 00rr                      1-  721     	MOVAR	_workStep
                                    1-  722     ;;gen.c:6987: size=0, offset=0, AOP_TYPE (res)=8
     008F                           1-  723     _00112_DS_:
                                    1-  724     	.line	165, "main.c"; 	revList[0] = revList[1] = revList[2] = revList[3] = revList[4] = 0;
                                    1-  725     	BANKSEL	_revList
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 02rr                      1-  726     	CLRR	(_revList + 4)
                                    1-  727     ;;gen.c:6987: size=0, offset=0, AOP_TYPE (res)=8
     0091 02rr                      1-  728     	CLRR	(_revList + 3)
                                    1-  729     ;;gen.c:6987: size=0, offset=0, AOP_TYPE (res)=8
     0092 02rr                      1-  730     	CLRR	(_revList + 2)
                                    1-  731     ;;gen.c:6987: size=0, offset=0, AOP_TYPE (res)=8
     0093 02rr                      1-  732     	CLRR	(_revList + 1)
                                    1-  733     ;;gen.c:6987: size=0, offset=0, AOP_TYPE (res)=8
     0094 02rr                      1-  734     	CLRR	(_revList + 0)
                                    1-  735     	.line	166, "main.c"; 	if(workStep == 9)
                                    1-  736     	BANKSEL	_workStep
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 01rr                      1-  737     	MOVR	_workStep,W
     0097 2409                      1-  738     	XORIA	0x09
     0098 0903                      1-  739     	BTRSS	STATUS,2
                                    1-  740     	MGOTO	_00120_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  741     	.line	167, "main.c"; 	setColor(colorIndex);
                                    1-  742     	BANKSEL	_colorIndex
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 01rr                      1-  743     	MOVR	_colorIndex,W
                                    1-  744     	MCALL	_setColor
     009C 2rrr                      3-   66 m1      LCALL rom_address
     009D                           1-  745     _00120_DS_:
                                    1-  746     	.line	172, "main.c"; 	if(++timeCount >= 1000)
                                    1-  747     	BANKSEL	_timeCount
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 05rr                      1-  748     	INCR	_timeCount,F
     009F 0D03                      1-  749     	BTRSC	STATUS,2
     00A0 05rr                      1-  750     	INCR	(_timeCount + 1),F
                                    1-  751     ;;unsigned compare: left < lit (0x3E8=1000), size=2
     00A1 2103                      1-  752     	MOVIA	0x03
     00A2 04rr                      1-  753     	SUBAR	(_timeCount + 1),W
     00A3 0903                      1-  754     	BTRSS	STATUS,2
                                    1-  755     	MGOTO	_00217_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
     00A5 21E8                      1-  756     	MOVIA	0xe8
     00A6 04rr                      1-  757     	SUBAR	_timeCount,W
     00A7                           1-  758     _00217_DS_:
     00A7 0803                      1-  759     	BTRSS	STATUS,0
                                    1-  760     	MGOTO	_00127_DS_
     00A8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  761     	.line	174, "main.c"; 	timeCount = 0;
                                    1-  762     	BANKSEL	_timeCount
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 02rr                      1-  763     	CLRR	_timeCount
     00AB 02rr                      1-  764     	CLRR	(_timeCount + 1)
                                    1-  765     	.line	175, "main.c"; 	if(workStep == 9 && ++colorIndex > 8)
                                    1-  766     	BANKSEL	r0x1046
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 02rr                      1-  767     	CLRR	r0x1046
                                    1-  768     	BANKSEL	_workStep
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 01rr                      1-  769     	MOVR	_workStep,W
     00B0 2409                      1-  770     	XORIA	0x09
     00B1 0903                      1-  771     	BTRSS	STATUS,2
                                    1-  772     	MGOTO	_00013_DS_
     00B2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  773     	BANKSEL	r0x1046
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 05rr                      1-  774     	INCR	r0x1046,F
     00B5                           1-  775     _00013_DS_:
                                    1-  776     	BANKSEL	r0x1046
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 01rr                      1-  777     	MOVR	r0x1046,W
     00B7 0D03                      1-  778     	BTRSC	STATUS,2
                                    1-  779     	MGOTO	_00122_DS_
     00B8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  780     	BANKSEL	_colorIndex
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 05rr                      1-  781     	INCR	_colorIndex,F
                                    1-  782     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  783     ;;unsigned compare: left >= lit (0x9=9), size=1
     00BB 2109                      1-  784     	MOVIA	0x09
     00BC 04rr                      1-  785     	SUBAR	_colorIndex,W
     00BD 0803                      1-  786     	BTRSS	STATUS,0
                                    1-  787     	MGOTO	_00122_DS_
     00BE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  788     	.line	177, "main.c"; 	colorIndex = 1;
     00BF 2101                      1-  789     	MOVIA	0x01
     00C0 00rr                      1-  790     	MOVAR	_colorIndex
     00C1                           1-  791     _00122_DS_:
                                    1-  792     	.line	179, "main.c"; 	if(workStep == 9)
                                    1-  793     	BANKSEL	r0x1046
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 01rr                      1-  794     	MOVR	r0x1046,W
     00C3 0D03                      1-  795     	BTRSC	STATUS,2
                                    1-  796     	MGOTO	_00127_DS_
     00C4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  797     	.line	180, "main.c"; 	setColor(colorIndex);
                                    1-  798     	BANKSEL	_colorIndex
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 01rr                      1-  799     	MOVR	_colorIndex,W
                                    1-  800     	MCALL	_setColor
     00C7 2rrr                      3-   66 m1      LCALL rom_address
     00C8                           1-  801     _00127_DS_:
                                    1-  802     	.line	183, "main.c"; 	if(workStep == 10 && (timeCount % 200 == 0))
                                    1-  803     	BANKSEL	_workStep
     00C8 rrrr                      3-  110 m1      .banksel ram_address
     00C9 01rr                      1-  804     	MOVR	_workStep,W
     00CA 240A                      1-  805     	XORIA	0x0a
     00CB 0903                      1-  806     	BTRSS	STATUS,2
                                    1-  807     	MGOTO	_00137_DS_
     00CC 3rrr                      3-   63 m1      LGOTO rom_address
     00CD 21C8                      1-  808     	MOVIA	0xc8
     00CE 00rr                      1-  809     	MOVAR	STK02
     00CF 2100                      1-  810     	MOVIA	0x00
     00D0 00rr                      1-  811     	MOVAR	STK01
                                    1-  812     	BANKSEL	_timeCount
     00D1 rrrr                      3-  110 m1      .banksel ram_address
     00D2 01rr                      1-  813     	MOVR	_timeCount,W
     00D3 00rr                      1-  814     	MOVAR	STK00
     00D4 01rr                      1-  815     	MOVR	(_timeCount + 1),W
                                    1-  816     	MCALL	__moduint
     00D5 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  817     	BANKSEL	r0x1047
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 00rr                      1-  818     	MOVAR	r0x1047
     00D8 01rr                      1-  819     	MOVR	STK00,W
                                    1-  820     	BANKSEL	r0x1046
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 00rr                      1-  821     	MOVAR	r0x1046
                                    1-  822     	BANKSEL	r0x1047
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 11rr                      1-  823     	IORAR	r0x1047,W
     00DD 0903                      1-  824     	BTRSS	STATUS,2
                                    1-  825     	MGOTO	_00137_DS_
     00DE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  826     	.line	185, "main.c"; 	rankNub(randNub+3);
     00DF 2103                      1-  827     	MOVIA	0x03
                                    1-  828     	BANKSEL	_randNub
     00E0 rrrr                      3-  110 m1      .banksel ram_address
     00E1 03rr                      1-  829     	ADDAR	_randNub,W
                                    1-  830     	BANKSEL	r0x1046
     00E2 rrrr                      3-  110 m1      .banksel ram_address
     00E3 00rr                      1-  831     	MOVAR	r0x1046
                                    1-  832     	MCALL	_rankNub
     00E4 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  833     	.line	186, "main.c"; 	preColorIndex = colorIndex;
                                    1-  834     	BANKSEL	_colorIndex
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 01rr                      1-  835     	MOVR	_colorIndex,W
                                    1-  836     	BANKSEL	_preColorIndex
     00E7 rrrr                      3-  110 m1      .banksel ram_address
     00E8 00rr                      1-  837     	MOVAR	_preColorIndex
     00E9                           1-  838     _00128_DS_:
                                    1-  839     	.line	189, "main.c"; 	colorIndex = (randNub%8)  + 1;
     00E9 2107                      1-  840     	MOVIA	0x07
                                    1-  841     	BANKSEL	_randNub
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 10rr                      1-  842     	ANDAR	_randNub,W
                                    1-  843     	BANKSEL	r0x1046
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 00rr                      1-  844     	MOVAR	r0x1046
     00EE 05rr                      1-  845     	INCR	r0x1046,W
                                    1-  846     	BANKSEL	_colorIndex
     00EF rrrr                      3-  110 m1      .banksel ram_address
     00F0 00rr                      1-  847     	MOVAR	_colorIndex
                                    1-  848     	.line	190, "main.c"; 	rankNub(randNub+3);
     00F1 2103                      1-  849     	MOVIA	0x03
                                    1-  850     	BANKSEL	_randNub
     00F2 rrrr                      3-  110 m1      .banksel ram_address
     00F3 03rr                      1-  851     	ADDAR	_randNub,W
                                    1-  852     	BANKSEL	r0x1046
     00F4 rrrr                      3-  110 m1      .banksel ram_address
     00F5 00rr                      1-  853     	MOVAR	r0x1046
                                    1-  854     	MCALL	_rankNub
     00F6 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  855     	.line	191, "main.c"; 	snub+=3;
     00F7 2103                      1-  856     	MOVIA	0x03
                                    1-  857     	BANKSEL	_snub
     00F8 rrrr                      3-  110 m1      .banksel ram_address
     00F9 03rr                      1-  858     	ADDAR	_snub,F
                                    1-  859     	.line	192, "main.c"; 	CLRWDT();
     00FA 0002                      1-  860     	clrwdt
                                    1-  861     	.line	194, "main.c"; 	while(preColorIndex == colorIndex);
                                    1-  862     	BANKSEL	_colorIndex
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 01rr                      1-  863     	MOVR	_colorIndex,W
                                    1-  864     	BANKSEL	_preColorIndex
     00FD rrrr                      3-  110 m1      .banksel ram_address
     00FE 12rr                      1-  865     	XORAR	_preColorIndex,W
     00FF 0D03                      1-  866     	BTRSC	STATUS,2
                                    1-  867     	MGOTO	_00128_DS_
     0100 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  868     	.line	195, "main.c"; 	randNub = randNub/3;
     0101 2103                      1-  869     	MOVIA	0x03
     0102 00rr                      1-  870     	MOVAR	STK00
                                    1-  871     	BANKSEL	_randNub
     0103 rrrr                      3-  110 m1      .banksel ram_address
     0104 01rr                      1-  872     	MOVR	_randNub,W
                                    1-  873     	MCALL	__divuchar
     0105 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  874     	BANKSEL	_randNub
     0106 rrrr                      3-  110 m1      .banksel ram_address
     0107 00rr                      1-  875     	MOVAR	_randNub
     0108                           1-  876     _00137_DS_:
                                    1-  877     	.line	199, "main.c"; 	if(INTFbits.T1IF)
     0108 09rr                      1-  878     	BTRSS	_INTFbits,3
                                    1-  879     	MGOTO	_00139_DS_
     0109 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  880     	.line	201, "main.c"; 	INTF= (unsigned char)~(C_INT_TMR1);	// Clear PABIF(PortB input change interrupt flag bit)
     010A 21F7                      1-  881     	MOVIA	0xf7
     010B 00rr                      1-  882     	MOVAR	_INTF
                                    1-  883     	.line	202, "main.c"; 	TM0_FLAG=1; //���ñ�־λ��
     010C 2101                      1-  884     	MOVIA	0x01
                                    1-  885     	BANKSEL	_TM0_FLAG
     010D rrrr                      3-  110 m1      .banksel ram_address
     010E 00rr                      1-  886     	MOVAR	_TM0_FLAG
     010F                           1-  887     _00139_DS_:
                                    1-  888     	.line	204, "main.c"; 	if(INTFbits.PABIF)
     010F 08rr                      1-  889     	BTRSS	_INTFbits,1
                                    1-  890     	MGOTO	_00144_DS_
     0110 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  891     	.line	206, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0111 21FD                      1-  892     	MOVIA	0xfd
     0112 00rr                      1-  893     	MOVAR	_INTF
                                    1-  894     	.line	207, "main.c"; 	if(REC_FLAG == 0 && (PORTA & 0x04) == 0)
                                    1-  895     	BANKSEL	_REC_FLAG
     0113 rrrr                      3-  110 m1      .banksel ram_address
     0114 01rr                      1-  896     	MOVR	_REC_FLAG,W
     0115 0903                      1-  897     	BTRSS	STATUS,2
                                    1-  898     	MGOTO	_00144_DS_
     0116 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  899     	BANKSEL	_PORTA
     0117 rrrr                      3-  110 m1      .banksel ram_address
     0118 0Drr                      1-  900     	BTRSC	_PORTA,2
                                    1-  901     	MGOTO	_00144_DS_
     0119 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  902     	.line	209, "main.c"; 	uartFlag = 1;
     011A 2101                      1-  903     	MOVIA	0x01
                                    1-  904     	BANKSEL	_uartFlag
     011B rrrr                      3-  110 m1      .banksel ram_address
     011C 00rr                      1-  905     	MOVAR	_uartFlag
     011D                           1-  906     _00144_DS_:
                                    1-  907     	.line	214, "main.c"; 	INTF = 0;
     011D 02rr                      1-  908     	CLRR	_INTF
                                    1-  909     	.line	216, "main.c"; 	}
                                    1-  910     	BANKSEL	___sdcc_saved_stk01
     011E rrrr                      3-  110 m1      .banksel ram_address
     011F 01rr                      1-  911     	MOVR	___sdcc_saved_stk01,W
     0120 00rr                      1-  912     	MOVAR	STK01
                                    1-  913     	BANKSEL	___sdcc_saved_stk00
     0121 rrrr                      3-  110 m1      .banksel ram_address
     0122 01rr                      1-  914     	MOVR	___sdcc_saved_stk00,W
     0123 00rr                      1-  915     	MOVAR	STK00
                                    1-  916     	BANKSEL	___sdcc_saved_fsr
     0124 rrrr                      3-  110 m1      .banksel ram_address
     0125 01rr                      1-  917     	MOVR	___sdcc_saved_fsr,W
     0126 0084                      1-  918     	MOVAR	FSR
     0127 01rr                      1-  919     	MOVR	PSAVE,W
     0128 008A                      1-  920     	MOVAR	PCHBUF
     0129 0283                      1-  921     	CLRR	STATUS
     012A 15rr                      1-  922     	SWAPR	SSAVE,W
     012B 0083                      1-  923     	MOVAR	STATUS
     012C 15rr                      1-  924     	SWAPR	WSAVE,F
     012D 15rr                      1-  925     	SWAPR	WSAVE,W
     012E                           1-  926     END_OF_INTERRUPT:
     012E 0011                      1-  927     	RETIE	
                                    1-  929     ;--------------------------------------------------------
                                    1-  930     ; code
                                    1-  931     ;--------------------------------------------------------
                                    1-  932     ;***
                                    1-  933     ;  pBlock Stats: dbName = M
                                    1-  934     ;***
                                    1-  935     ;has an exit
                                    1-  936     ;functions called:
                                    1-  937     ;   _revData
                                    1-  938     ;   _workCtr
                                    1-  939     ;   _setColor
                                    1-  940     ;   _revData
                                    1-  941     ;   _workCtr
                                    1-  942     ;   _setColor
                                    1-  943     ;; Starting pCode block
                                    1-  944     .segment "code"; module=main, function=_main
     0000                           1-  946     _main:
                                    1-  947     ; 2 exit points
                                    1-  948     	.line	245, "main.c"; 	PORTA = 0x00;
                                    1-  949     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1-  950     	CLRR	_PORTA
                                    1-  951     	.line	246, "main.c"; 	APHCON = 0xDB;		//PA5����
     0002 21DB                      1-  952     	MOVIA	0xdb
     0003 000r                      1-  953     	IOST	_APHCON
                                    1-  954     	.line	248, "main.c"; 	IOSTA =  C_PA2_Input | C_PA5_Input;					//PA5����
     0004 2124                      1-  955     	MOVIA	0x24
     0005 000r                      1-  956     	IOST	_IOSTA
                                    1-  957     	.line	249, "main.c"; 	IOSTB =  C_PB0_Input;					//PB0����
     0006 2101                      1-  958     	MOVIA	0x01
     0007 000r                      1-  959     	IOST	_IOSTB
                                    1-  960     	.line	250, "main.c"; 	PORTA = 0x00;  
     0008 02rr                      1-  961     	CLRR	_PORTA
                                    1-  962     	.line	251, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT & LVR
     0009 21A8                      1-  963     	MOVIA	0xa8
     000A 00rr                      1-  964     	MOVAR	_PCON
                                    1-  965     	.line	252, "main.c"; 	ABPLCON = 0xFF;
     000B 21FF                      1-  966     	MOVIA	0xff
     000C 00rr                      1-  967     	MOVAR	_ABPLCON
                                    1-  968     	.line	253, "main.c"; 	PCON1 = C_TMR0_Dis;
     000D 0200                      1-  969     	CLRA	
     000E 000r                      1-  970     	IOST	_PCON1
                                    1-  971     	.line	255, "main.c"; 	TMR0 = 55;
     000F 2137                      1-  972     	MOVIA	0x37
     0010 00rr                      1-  973     	MOVAR	_TMR0
                                    1-  974     	.line	256, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0011 2101                      1-  975     	MOVIA	0x01
     0012 0003                      1-  976     	T0MD	
                                    1-  977     	.line	257, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0013 210B                      1-  978     	MOVIA	0x0b
     0014 00rr                      1-  979     	MOVAR	_INTE
                                    1-  980     	.line	258, "main.c"; 	PCON1 = C_LVD_3P0V | C_TMR0_En;
     0015 2111                      1-  981     	MOVIA	0x11
     0016 000r                      1-  982     	IOST	_PCON1
                                    1-  983     	.line	261, "main.c"; 	TMRH = 0;
     0017 02rr                      1-  984     	CLRR	_TMRH
                                    1-  985     	.line	262, "main.c"; 	TMR1 = 104;
     0018 2168                      1-  986     	MOVIA	0x68
     0019 00rr                      1-  987     	SFUN	_TMR1
                                    1-  988     	.line	263, "main.c"; 	T1CR2 = C_PS1_Div8 | C_PS1_EN | C_TMR1_ClkSrc_Inst;
     001A 2102                      1-  989     	MOVIA	0x02
     001B 00rr                      1-  990     	SFUN	_T1CR2
                                    1-  991     	.line	264, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload;
     001C 2103                      1-  992     	MOVIA	0x03
     001D 00rr                      1-  993     	SFUN	_T1CR1
                                    1-  994     	.line	268, "main.c"; 	ENI();
     001E 0004                      1-  995     	ENI
                                    1-  996     	.line	269, "main.c"; 	workStep = 0;
                                    1-  997     	BANKSEL	_workStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 02rr                      1-  998     	CLRR	_workStep
     0021                           1-  999     _00244_DS_:
                                    1- 1000     	.line	272, "main.c"; 	CLRWDT();
     0021 0002                      1- 1001     	clrwdt
                                    1- 1002     	.line	273, "main.c"; 	revData();
                                    1- 1003     	MCALL	_revData
     0022 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1004     	.line	274, "main.c"; 	snub++;
                                    1- 1005     	BANKSEL	_snub
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 05rr                      1- 1006     	INCR	_snub,F
                                    1- 1007     	.line	275, "main.c"; 	if(!IntFlag)
                                    1- 1008     	BANKSEL	_IntFlag
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1- 1009     	MOVR	_IntFlag,W
     0027 0D03                      1- 1010     	BTRSC	STATUS,2
                                    1- 1011     	MGOTO	_00244_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1012     	.line	277, "main.c"; 	IntFlag = 0;
     0029 02rr                      1- 1013     	CLRR	_IntFlag
                                    1- 1014     	.line	278, "main.c"; 	if(uartFlag == 0)
                                    1- 1015     	BANKSEL	_uartFlag
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1- 1016     	MOVR	_uartFlag,W
     002C 0D03                      1- 1017     	BTRSC	STATUS,2
                                    1- 1018     	.line	279, "main.c"; 	workCtr();
                                    1- 1019     	MCALL	_workCtr
     002D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1020     	.line	280, "main.c"; 	if(workStep == 0 || workStep > 10)
                                    1- 1021     	BANKSEL	_workStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 1022     	MOVR	_workStep,W
     0030 0D03                      1- 1023     	BTRSC	STATUS,2
                                    1- 1024     	MGOTO	_00240_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1025     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1026     ;;unsigned compare: left >= lit (0xB=11), size=1
     0032 210B                      1- 1027     	MOVIA	0x0b
     0033 04rr                      1- 1028     	SUBAR	_workStep,W
     0034 0803                      1- 1029     	BTRSS	STATUS,0
                                    1- 1030     	MGOTO	_00244_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
     0036                           1- 1031     _00240_DS_:
                                    1- 1032     	.line	282, "main.c"; 	setColor(0);
     0036 2100                      1- 1033     	MOVIA	0x00
                                    1- 1034     	MCALL	_setColor
     0037 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1035     	.line	283, "main.c"; 	workStep = 0;
                                    1- 1036     	BANKSEL	_workStep
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 02rr                      1- 1037     	CLRR	_workStep
                                    1- 1038     	MGOTO	_00244_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1039     	.line	288, "main.c"; 	}
                                    1- 1040     	RETURN	
     003B 0010                      3-   40 m1      ret
                                    1- 1041     ; exit point of _main
                                    1- 1043     ;***
                                    1- 1044     ;  pBlock Stats: dbName = C
                                    1- 1045     ;***
                                    1- 1046     ;has an exit
                                    1- 1047     ;functions called:
                                    1- 1048     ;   _sendRGB
                                    1- 1049     ;   _Delay80us
                                    1- 1050     ;   _sendRGB
                                    1- 1051     ;   _Delay80us
                                    1- 1052     ;7 compiler assigned registers:
                                    1- 1053     ;   r0x1027
                                    1- 1054     ;   STK00
                                    1- 1055     ;   r0x1028
                                    1- 1056     ;   STK01
                                    1- 1057     ;   r0x1029
                                    1- 1058     ;   r0x102A
                                    1- 1059     ;   r0x102B
                                    1- 1060     ;; Starting pCode block
                                    1- 1061     .segment "code"; module=main, function=_sendtoLast
                                    1- 1063     ;local variable name mapping:
     0000                           1- 1069     _sendtoLast:
                                    1- 1070     ; 2 exit points
                                    1- 1071     	BANKSEL	_Rdata1
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1072     	MOVAR	_Rdata1
                                    1- 1073     	.line	674, "main.c"; 	void sendtoLast(unsigned char colorR,unsigned char colorG,unsigned char colorB)
                                    1- 1074     	BANKSEL	r0x1027
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 1075     	MOVAR	r0x1027
     0004 01rr                      1- 1076     	MOVR	STK00,W
                                    1- 1077     	BANKSEL	_Gdata1
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 00rr                      1- 1078     	MOVAR	_Gdata1
                                    1- 1079     	BANKSEL	r0x1028
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 00rr                      1- 1080     	MOVAR	r0x1028
     0009 01rr                      1- 1081     	MOVR	STK01,W
                                    1- 1082     	BANKSEL	_Bdata1
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 00rr                      1- 1083     	MOVAR	_Bdata1
                                    1- 1084     	BANKSEL	r0x1029
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1085     	MOVAR	r0x1029
                                    1- 1086     ;;100	MOVR	r0x1027,W
                                    1- 1087     ;;101	MOVR	r0x1028,W
                                    1- 1088     ;;102	MOVR	r0x1029,W
                                    1- 1089     	.line	682, "main.c"; 	if(workStep == 9 && preColor != colorIndex)
                                    1- 1090     	BANKSEL	_workStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1091     	MOVR	_workStep,W
     0010 2409                      1- 1092     	XORIA	0x09
     0011 0903                      1- 1093     	BTRSS	STATUS,2
                                    1- 1094     	MGOTO	_00672_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1095     	BANKSEL	_colorIndex
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 1096     	MOVR	_colorIndex,W
                                    1- 1097     	BANKSEL	_preColor
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 12rr                      1- 1098     	XORAR	_preColor,W
     0017 0D03                      1- 1099     	BTRSC	STATUS,2
                                    1- 1100     	MGOTO	_00672_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1101     	.line	684, "main.c"; 	preColor = colorIndex;
                                    1- 1102     	BANKSEL	_colorIndex
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1103     	MOVR	_colorIndex,W
                                    1- 1104     	BANKSEL	_preColor
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1105     	MOVAR	_preColor
                                    1- 1106     	.line	685, "main.c"; 	Rdata2 = colorR;
                                    1- 1107     	BANKSEL	r0x1027
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1108     	MOVR	r0x1027,W
                                    1- 1109     	BANKSEL	_Rdata2
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 00rr                      1- 1110     	MOVAR	_Rdata2
                                    1- 1111     	.line	686, "main.c"; 	Gdata2 = colorG;
                                    1- 1112     	BANKSEL	r0x1028
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1113     	MOVR	r0x1028,W
                                    1- 1114     	BANKSEL	_Gdata2
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 1115     	MOVAR	_Gdata2
                                    1- 1116     	.line	687, "main.c"; 	Bdata2 = colorB;
                                    1- 1117     	BANKSEL	r0x1029
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1- 1118     	MOVR	r0x1029,W
                                    1- 1119     	BANKSEL	_Bdata2
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 00rr                      1- 1120     	MOVAR	_Bdata2
     0029                           1- 1121     _00672_DS_:
                                    1- 1122     	.line	689, "main.c"; 	for(int i=0;i<LED_N;i++)
                                    1- 1123     	BANKSEL	r0x102A
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 02rr                      1- 1124     	CLRR	r0x102A
                                    1- 1125     	BANKSEL	r0x102B
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 02rr                      1- 1126     	CLRR	r0x102B
                                    1- 1127     ;;signed compare: left < lit (0x4=4), size=2, mask=ffff
     002D                           1- 1128     _00664_DS_:
                                    1- 1129     	BANKSEL	r0x102B
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 01rr                      1- 1130     	MOVR	r0x102B,W
     002F 2580                      1- 1131     	ADDIA	0x80
     0030 2580                      1- 1132     	ADDIA	0x80
     0031 0903                      1- 1133     	BTRSS	STATUS,2
                                    1- 1134     	MGOTO	_00684_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033 2104                      1- 1135     	MOVIA	0x04
                                    1- 1136     	BANKSEL	r0x102A
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 04rr                      1- 1137     	SUBAR	r0x102A,W
     0036                           1- 1138     _00684_DS_:
     0036 0C03                      1- 1139     	BTRSC	STATUS,0
                                    1- 1140     	MGOTO	_00662_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1141     	.line	691, "main.c"; 	sendRGB(colorR,colorG,colorB);
                                    1- 1142     	BANKSEL	r0x1029
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 01rr                      1- 1143     	MOVR	r0x1029,W
     003A 00rr                      1- 1144     	MOVAR	STK01
                                    1- 1145     	BANKSEL	r0x1028
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 01rr                      1- 1146     	MOVR	r0x1028,W
     003D 00rr                      1- 1147     	MOVAR	STK00
                                    1- 1148     	BANKSEL	r0x1027
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 01rr                      1- 1149     	MOVR	r0x1027,W
                                    1- 1150     	MCALL	_sendRGB
     0040 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1151     	.line	692, "main.c"; 	if(uartFlag)
                                    1- 1152     	BANKSEL	_uartFlag
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 01rr                      1- 1153     	MOVR	_uartFlag,W
     0043 0903                      1- 1154     	BTRSS	STATUS,2
                                    1- 1155     	.line	693, "main.c"; 	return;
                                    1- 1156     	MGOTO	_00666_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1157     	.line	689, "main.c"; 	for(int i=0;i<LED_N;i++)
                                    1- 1158     	BANKSEL	r0x102A
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 05rr                      1- 1159     	INCR	r0x102A,F
     0047 0903                      1- 1160     	BTRSS	STATUS,2
                                    1- 1161     	MGOTO	_00001_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1162     	BANKSEL	r0x102B
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 05rr                      1- 1163     	INCR	r0x102B,F
     004B                           1- 1164     _00001_DS_:
                                    1- 1165     	MGOTO	_00664_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C                           1- 1166     _00662_DS_:
                                    1- 1167     	.line	695, "main.c"; 	Delay80us();
                                    1- 1168     	MCALL	_Delay80us
     004C 2rrr                      3-   66 m1      LCALL rom_address
     004D                           1- 1169     _00666_DS_:
                                    1- 1170     	.line	696, "main.c"; 	}
                                    1- 1171     	RETURN	
     004D 0010                      3-   40 m1      ret
                                    1- 1172     ; exit point of _sendtoLast
                                    1- 1174     ;***
                                    1- 1175     ;  pBlock Stats: dbName = C
                                    1- 1176     ;***
                                    1- 1177     ;has an exit
                                    1- 1178     ;2 compiler assigned registers:
                                    1- 1179     ;   STK00
                                    1- 1180     ;   STK01
                                    1- 1181     ;; Starting pCode block
                                    1- 1182     .segment "code"; module=main, function=_sendRGB
     0000                           1- 1184     _sendRGB:
                                    1- 1185     ; 2 exit points
                                    1- 1186     	.line	562, "main.c"; 	void sendRGB(unsigned char colorR,unsigned char colorG,unsigned char colorB)
                                    1- 1187     	BANKSEL	_Rdata
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1188     	MOVAR	_Rdata
     0002 01rr                      1- 1189     	MOVR	STK00,W
                                    1- 1190     	BANKSEL	_Gdata
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1191     	MOVAR	_Gdata
     0005 01rr                      1- 1192     	MOVR	STK01,W
                                    1- 1193     	BANKSEL	_Bdata
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 1194     	MOVAR	_Bdata
                                    1- 1195     	.line	570, "main.c"; 	DISI();	
     0008 0013                      1- 1196     	DISI
                                    1- 1197     	.line	571, "main.c"; 	if(R7)
                                    1- 1198     	BANKSEL	_Rdata
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 0Brr                      1- 1199     	BTRSS	_Rdata,7
                                    1- 1200     	MGOTO	_00440_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1201     	.line	572, "main.c"; 	NUB1();
     000C 1Drr                      1- 1202     	BCR	_PORTAbits,3
     000D 1Drr                      1- 1203     	BCR	_PORTAbits,3
     000E 19rr                      1- 1204     	BSR	_PORTAbits,3
                                    1- 1205     	MGOTO	_00445_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
     0010                           1- 1206     _00440_DS_:
                                    1- 1207     	.line	574, "main.c"; 	NUB0();
     0010 1Drr                      1- 1208     	BCR	_PORTAbits,3
     0011 19rr                      1- 1209     	BSR	_PORTAbits,3
     0012 19rr                      1- 1210     	BSR	_PORTAbits,3
     0013 0000                      1- 1211     	nop
     0014 1Drr                      1- 1212     	BCR	_PORTAbits,3
     0015                           1- 1213     _00445_DS_:
                                    1- 1214     	.line	575, "main.c"; 	if(R6)
                                    1- 1215     	BANKSEL	_Rdata
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 0Brr                      1- 1216     	BTRSS	_Rdata,6
                                    1- 1217     	MGOTO	_00449_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1218     	.line	576, "main.c"; 	NUB1();
     0018 1Drr                      1- 1219     	BCR	_PORTAbits,3
     0019 1Drr                      1- 1220     	BCR	_PORTAbits,3
     001A 19rr                      1- 1221     	BSR	_PORTAbits,3
                                    1- 1222     	MGOTO	_00454_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
     001C                           1- 1223     _00449_DS_:
                                    1- 1224     	.line	578, "main.c"; 	NUB0();
     001C 1Drr                      1- 1225     	BCR	_PORTAbits,3
     001D 19rr                      1- 1226     	BSR	_PORTAbits,3
     001E 19rr                      1- 1227     	BSR	_PORTAbits,3
     001F 0000                      1- 1228     	nop
     0020 1Drr                      1- 1229     	BCR	_PORTAbits,3
     0021                           1- 1230     _00454_DS_:
                                    1- 1231     	.line	579, "main.c"; 	if(R5)
                                    1- 1232     	BANKSEL	_Rdata
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 0Arr                      1- 1233     	BTRSS	_Rdata,5
                                    1- 1234     	MGOTO	_00458_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1235     	.line	580, "main.c"; 	NUB1();
     0024 1Drr                      1- 1236     	BCR	_PORTAbits,3
     0025 1Drr                      1- 1237     	BCR	_PORTAbits,3
     0026 19rr                      1- 1238     	BSR	_PORTAbits,3
                                    1- 1239     	MGOTO	_00463_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 1240     _00458_DS_:
                                    1- 1241     	.line	582, "main.c"; 	NUB0();
     0028 1Drr                      1- 1242     	BCR	_PORTAbits,3
     0029 19rr                      1- 1243     	BSR	_PORTAbits,3
     002A 19rr                      1- 1244     	BSR	_PORTAbits,3
     002B 0000                      1- 1245     	nop
     002C 1Drr                      1- 1246     	BCR	_PORTAbits,3
     002D                           1- 1247     _00463_DS_:
                                    1- 1248     	.line	583, "main.c"; 	if(R4)
                                    1- 1249     	BANKSEL	_Rdata
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 0Arr                      1- 1250     	BTRSS	_Rdata,4
                                    1- 1251     	MGOTO	_00467_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1252     	.line	584, "main.c"; 	NUB1();
     0030 1Drr                      1- 1253     	BCR	_PORTAbits,3
     0031 1Drr                      1- 1254     	BCR	_PORTAbits,3
     0032 19rr                      1- 1255     	BSR	_PORTAbits,3
                                    1- 1256     	MGOTO	_00472_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
     0034                           1- 1257     _00467_DS_:
                                    1- 1258     	.line	586, "main.c"; 	NUB0();
     0034 1Drr                      1- 1259     	BCR	_PORTAbits,3
     0035 19rr                      1- 1260     	BSR	_PORTAbits,3
     0036 19rr                      1- 1261     	BSR	_PORTAbits,3
     0037 0000                      1- 1262     	nop
     0038 1Drr                      1- 1263     	BCR	_PORTAbits,3
     0039                           1- 1264     _00472_DS_:
                                    1- 1265     	.line	587, "main.c"; 	if(R3)
                                    1- 1266     	BANKSEL	_Rdata
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 09rr                      1- 1267     	BTRSS	_Rdata,3
                                    1- 1268     	MGOTO	_00476_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1269     	.line	588, "main.c"; 	NUB1();
     003C 1Drr                      1- 1270     	BCR	_PORTAbits,3
     003D 1Drr                      1- 1271     	BCR	_PORTAbits,3
     003E 19rr                      1- 1272     	BSR	_PORTAbits,3
                                    1- 1273     	MGOTO	_00481_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
     0040                           1- 1274     _00476_DS_:
                                    1- 1275     	.line	590, "main.c"; 	NUB0();
     0040 1Drr                      1- 1276     	BCR	_PORTAbits,3
     0041 19rr                      1- 1277     	BSR	_PORTAbits,3
     0042 19rr                      1- 1278     	BSR	_PORTAbits,3
     0043 0000                      1- 1279     	nop
     0044 1Drr                      1- 1280     	BCR	_PORTAbits,3
     0045                           1- 1281     _00481_DS_:
                                    1- 1282     	.line	591, "main.c"; 	if(R2)
                                    1- 1283     	BANKSEL	_Rdata
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 09rr                      1- 1284     	BTRSS	_Rdata,2
                                    1- 1285     	MGOTO	_00485_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1286     	.line	592, "main.c"; 	NUB1();
     0048 1Drr                      1- 1287     	BCR	_PORTAbits,3
     0049 1Drr                      1- 1288     	BCR	_PORTAbits,3
     004A 19rr                      1- 1289     	BSR	_PORTAbits,3
                                    1- 1290     	MGOTO	_00490_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C                           1- 1291     _00485_DS_:
                                    1- 1292     	.line	594, "main.c"; 	NUB0();
     004C 1Drr                      1- 1293     	BCR	_PORTAbits,3
     004D 19rr                      1- 1294     	BSR	_PORTAbits,3
     004E 19rr                      1- 1295     	BSR	_PORTAbits,3
     004F 0000                      1- 1296     	nop
     0050 1Drr                      1- 1297     	BCR	_PORTAbits,3
     0051                           1- 1298     _00490_DS_:
                                    1- 1299     	.line	595, "main.c"; 	if(R1)
                                    1- 1300     	BANKSEL	_Rdata
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 08rr                      1- 1301     	BTRSS	_Rdata,1
                                    1- 1302     	MGOTO	_00494_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1303     	.line	596, "main.c"; 	NUB1();
     0054 1Drr                      1- 1304     	BCR	_PORTAbits,3
     0055 1Drr                      1- 1305     	BCR	_PORTAbits,3
     0056 19rr                      1- 1306     	BSR	_PORTAbits,3
                                    1- 1307     	MGOTO	_00499_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
     0058                           1- 1308     _00494_DS_:
                                    1- 1309     	.line	598, "main.c"; 	NUB0();
     0058 1Drr                      1- 1310     	BCR	_PORTAbits,3
     0059 19rr                      1- 1311     	BSR	_PORTAbits,3
     005A 19rr                      1- 1312     	BSR	_PORTAbits,3
     005B 0000                      1- 1313     	nop
     005C 1Drr                      1- 1314     	BCR	_PORTAbits,3
     005D                           1- 1315     _00499_DS_:
                                    1- 1316     	.line	599, "main.c"; 	if(R0)
                                    1- 1317     	BANKSEL	_Rdata
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 08rr                      1- 1318     	BTRSS	_Rdata,0
                                    1- 1319     	MGOTO	_00503_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1320     	.line	600, "main.c"; 	NUB1();
     0060 1Drr                      1- 1321     	BCR	_PORTAbits,3
     0061 1Drr                      1- 1322     	BCR	_PORTAbits,3
     0062 19rr                      1- 1323     	BSR	_PORTAbits,3
                                    1- 1324     	MGOTO	_00508_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
     0064                           1- 1325     _00503_DS_:
                                    1- 1326     	.line	602, "main.c"; 	NUB0();
     0064 1Drr                      1- 1327     	BCR	_PORTAbits,3
     0065 19rr                      1- 1328     	BSR	_PORTAbits,3
     0066 19rr                      1- 1329     	BSR	_PORTAbits,3
     0067 0000                      1- 1330     	nop
     0068 1Drr                      1- 1331     	BCR	_PORTAbits,3
     0069                           1- 1332     _00508_DS_:
                                    1- 1333     	.line	604, "main.c"; 	if(G7)
                                    1- 1334     	BANKSEL	_Gdata
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 0Brr                      1- 1335     	BTRSS	_Gdata,7
                                    1- 1336     	MGOTO	_00512_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1337     	.line	605, "main.c"; 	NUB1();
     006C 1Drr                      1- 1338     	BCR	_PORTAbits,3
     006D 1Drr                      1- 1339     	BCR	_PORTAbits,3
     006E 19rr                      1- 1340     	BSR	_PORTAbits,3
                                    1- 1341     	MGOTO	_00517_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
     0070                           1- 1342     _00512_DS_:
                                    1- 1343     	.line	607, "main.c"; 	NUB0();
     0070 1Drr                      1- 1344     	BCR	_PORTAbits,3
     0071 19rr                      1- 1345     	BSR	_PORTAbits,3
     0072 19rr                      1- 1346     	BSR	_PORTAbits,3
     0073 0000                      1- 1347     	nop
     0074 1Drr                      1- 1348     	BCR	_PORTAbits,3
     0075                           1- 1349     _00517_DS_:
                                    1- 1350     	.line	608, "main.c"; 	if(G6)
                                    1- 1351     	BANKSEL	_Gdata
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 0Brr                      1- 1352     	BTRSS	_Gdata,6
                                    1- 1353     	MGOTO	_00521_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1354     	.line	609, "main.c"; 	NUB1();
     0078 1Drr                      1- 1355     	BCR	_PORTAbits,3
     0079 1Drr                      1- 1356     	BCR	_PORTAbits,3
     007A 19rr                      1- 1357     	BSR	_PORTAbits,3
                                    1- 1358     	MGOTO	_00526_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
     007C                           1- 1359     _00521_DS_:
                                    1- 1360     	.line	611, "main.c"; 	NUB0();
     007C 1Drr                      1- 1361     	BCR	_PORTAbits,3
     007D 19rr                      1- 1362     	BSR	_PORTAbits,3
     007E 19rr                      1- 1363     	BSR	_PORTAbits,3
     007F 0000                      1- 1364     	nop
     0080 1Drr                      1- 1365     	BCR	_PORTAbits,3
     0081                           1- 1366     _00526_DS_:
                                    1- 1367     	.line	612, "main.c"; 	if(G5)
                                    1- 1368     	BANKSEL	_Gdata
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 0Arr                      1- 1369     	BTRSS	_Gdata,5
                                    1- 1370     	MGOTO	_00530_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1371     	.line	613, "main.c"; 	NUB1();
     0084 1Drr                      1- 1372     	BCR	_PORTAbits,3
     0085 1Drr                      1- 1373     	BCR	_PORTAbits,3
     0086 19rr                      1- 1374     	BSR	_PORTAbits,3
                                    1- 1375     	MGOTO	_00535_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
     0088                           1- 1376     _00530_DS_:
                                    1- 1377     	.line	615, "main.c"; 	NUB0();
     0088 1Drr                      1- 1378     	BCR	_PORTAbits,3
     0089 19rr                      1- 1379     	BSR	_PORTAbits,3
     008A 19rr                      1- 1380     	BSR	_PORTAbits,3
     008B 0000                      1- 1381     	nop
     008C 1Drr                      1- 1382     	BCR	_PORTAbits,3
     008D                           1- 1383     _00535_DS_:
                                    1- 1384     	.line	616, "main.c"; 	if(G4)
                                    1- 1385     	BANKSEL	_Gdata
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 0Arr                      1- 1386     	BTRSS	_Gdata,4
                                    1- 1387     	MGOTO	_00539_DS_
     008F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1388     	.line	617, "main.c"; 	NUB1();
     0090 1Drr                      1- 1389     	BCR	_PORTAbits,3
     0091 1Drr                      1- 1390     	BCR	_PORTAbits,3
     0092 19rr                      1- 1391     	BSR	_PORTAbits,3
                                    1- 1392     	MGOTO	_00544_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
     0094                           1- 1393     _00539_DS_:
                                    1- 1394     	.line	619, "main.c"; 	NUB0();
     0094 1Drr                      1- 1395     	BCR	_PORTAbits,3
     0095 19rr                      1- 1396     	BSR	_PORTAbits,3
     0096 19rr                      1- 1397     	BSR	_PORTAbits,3
     0097 0000                      1- 1398     	nop
     0098 1Drr                      1- 1399     	BCR	_PORTAbits,3
     0099                           1- 1400     _00544_DS_:
                                    1- 1401     	.line	620, "main.c"; 	if(G3)
                                    1- 1402     	BANKSEL	_Gdata
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 09rr                      1- 1403     	BTRSS	_Gdata,3
                                    1- 1404     	MGOTO	_00548_DS_
     009B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1405     	.line	621, "main.c"; 	NUB1();
     009C 1Drr                      1- 1406     	BCR	_PORTAbits,3
     009D 1Drr                      1- 1407     	BCR	_PORTAbits,3
     009E 19rr                      1- 1408     	BSR	_PORTAbits,3
                                    1- 1409     	MGOTO	_00553_DS_
     009F 3rrr                      3-   63 m1      LGOTO rom_address
     00A0                           1- 1410     _00548_DS_:
                                    1- 1411     	.line	623, "main.c"; 	NUB0();
     00A0 1Drr                      1- 1412     	BCR	_PORTAbits,3
     00A1 19rr                      1- 1413     	BSR	_PORTAbits,3
     00A2 19rr                      1- 1414     	BSR	_PORTAbits,3
     00A3 0000                      1- 1415     	nop
     00A4 1Drr                      1- 1416     	BCR	_PORTAbits,3
     00A5                           1- 1417     _00553_DS_:
                                    1- 1418     	.line	624, "main.c"; 	if(G2)
                                    1- 1419     	BANKSEL	_Gdata
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 09rr                      1- 1420     	BTRSS	_Gdata,2
                                    1- 1421     	MGOTO	_00557_DS_
     00A7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1422     	.line	625, "main.c"; 	NUB1();
     00A8 1Drr                      1- 1423     	BCR	_PORTAbits,3
     00A9 1Drr                      1- 1424     	BCR	_PORTAbits,3
     00AA 19rr                      1- 1425     	BSR	_PORTAbits,3
                                    1- 1426     	MGOTO	_00562_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
     00AC                           1- 1427     _00557_DS_:
                                    1- 1428     	.line	627, "main.c"; 	NUB0();
     00AC 1Drr                      1- 1429     	BCR	_PORTAbits,3
     00AD 19rr                      1- 1430     	BSR	_PORTAbits,3
     00AE 19rr                      1- 1431     	BSR	_PORTAbits,3
     00AF 0000                      1- 1432     	nop
     00B0 1Drr                      1- 1433     	BCR	_PORTAbits,3
     00B1                           1- 1434     _00562_DS_:
                                    1- 1435     	.line	628, "main.c"; 	if(G1)
                                    1- 1436     	BANKSEL	_Gdata
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 08rr                      1- 1437     	BTRSS	_Gdata,1
                                    1- 1438     	MGOTO	_00566_DS_
     00B3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1439     	.line	629, "main.c"; 	NUB1();
     00B4 1Drr                      1- 1440     	BCR	_PORTAbits,3
     00B5 1Drr                      1- 1441     	BCR	_PORTAbits,3
     00B6 19rr                      1- 1442     	BSR	_PORTAbits,3
                                    1- 1443     	MGOTO	_00571_DS_
     00B7 3rrr                      3-   63 m1      LGOTO rom_address
     00B8                           1- 1444     _00566_DS_:
                                    1- 1445     	.line	631, "main.c"; 	NUB0();
     00B8 1Drr                      1- 1446     	BCR	_PORTAbits,3
     00B9 19rr                      1- 1447     	BSR	_PORTAbits,3
     00BA 19rr                      1- 1448     	BSR	_PORTAbits,3
     00BB 0000                      1- 1449     	nop
     00BC 1Drr                      1- 1450     	BCR	_PORTAbits,3
     00BD                           1- 1451     _00571_DS_:
                                    1- 1452     	.line	632, "main.c"; 	if(G0)
                                    1- 1453     	BANKSEL	_Gdata
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 08rr                      1- 1454     	BTRSS	_Gdata,0
                                    1- 1455     	MGOTO	_00575_DS_
     00BF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1456     	.line	633, "main.c"; 	NUB1();
     00C0 1Drr                      1- 1457     	BCR	_PORTAbits,3
     00C1 1Drr                      1- 1458     	BCR	_PORTAbits,3
     00C2 19rr                      1- 1459     	BSR	_PORTAbits,3
                                    1- 1460     	MGOTO	_00580_DS_
     00C3 3rrr                      3-   63 m1      LGOTO rom_address
     00C4                           1- 1461     _00575_DS_:
                                    1- 1462     	.line	635, "main.c"; 	NUB0();
     00C4 1Drr                      1- 1463     	BCR	_PORTAbits,3
     00C5 19rr                      1- 1464     	BSR	_PORTAbits,3
     00C6 19rr                      1- 1465     	BSR	_PORTAbits,3
     00C7 0000                      1- 1466     	nop
     00C8 1Drr                      1- 1467     	BCR	_PORTAbits,3
     00C9                           1- 1468     _00580_DS_:
                                    1- 1469     	.line	637, "main.c"; 	if(B7)
                                    1- 1470     	BANKSEL	_Bdata
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 0Brr                      1- 1471     	BTRSS	_Bdata,7
                                    1- 1472     	MGOTO	_00584_DS_
     00CB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1473     	.line	638, "main.c"; 	NUB1();
     00CC 1Drr                      1- 1474     	BCR	_PORTAbits,3
     00CD 1Drr                      1- 1475     	BCR	_PORTAbits,3
     00CE 19rr                      1- 1476     	BSR	_PORTAbits,3
                                    1- 1477     	MGOTO	_00589_DS_
     00CF 3rrr                      3-   63 m1      LGOTO rom_address
     00D0                           1- 1478     _00584_DS_:
                                    1- 1479     	.line	640, "main.c"; 	NUB0();
     00D0 1Drr                      1- 1480     	BCR	_PORTAbits,3
     00D1 19rr                      1- 1481     	BSR	_PORTAbits,3
     00D2 19rr                      1- 1482     	BSR	_PORTAbits,3
     00D3 0000                      1- 1483     	nop
     00D4 1Drr                      1- 1484     	BCR	_PORTAbits,3
     00D5                           1- 1485     _00589_DS_:
                                    1- 1486     	.line	641, "main.c"; 	if(B6)
                                    1- 1487     	BANKSEL	_Bdata
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 0Brr                      1- 1488     	BTRSS	_Bdata,6
                                    1- 1489     	MGOTO	_00593_DS_
     00D7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1490     	.line	642, "main.c"; 	NUB1();
     00D8 1Drr                      1- 1491     	BCR	_PORTAbits,3
     00D9 1Drr                      1- 1492     	BCR	_PORTAbits,3
     00DA 19rr                      1- 1493     	BSR	_PORTAbits,3
                                    1- 1494     	MGOTO	_00598_DS_
     00DB 3rrr                      3-   63 m1      LGOTO rom_address
     00DC                           1- 1495     _00593_DS_:
                                    1- 1496     	.line	644, "main.c"; 	NUB0();
     00DC 1Drr                      1- 1497     	BCR	_PORTAbits,3
     00DD 19rr                      1- 1498     	BSR	_PORTAbits,3
     00DE 19rr                      1- 1499     	BSR	_PORTAbits,3
     00DF 0000                      1- 1500     	nop
     00E0 1Drr                      1- 1501     	BCR	_PORTAbits,3
     00E1                           1- 1502     _00598_DS_:
                                    1- 1503     	.line	645, "main.c"; 	if(B5)
                                    1- 1504     	BANKSEL	_Bdata
     00E1 rrrr                      3-  110 m1      .banksel ram_address
     00E2 0Arr                      1- 1505     	BTRSS	_Bdata,5
                                    1- 1506     	MGOTO	_00602_DS_
     00E3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1507     	.line	646, "main.c"; 	NUB1();
     00E4 1Drr                      1- 1508     	BCR	_PORTAbits,3
     00E5 1Drr                      1- 1509     	BCR	_PORTAbits,3
     00E6 19rr                      1- 1510     	BSR	_PORTAbits,3
                                    1- 1511     	MGOTO	_00607_DS_
     00E7 3rrr                      3-   63 m1      LGOTO rom_address
     00E8                           1- 1512     _00602_DS_:
                                    1- 1513     	.line	648, "main.c"; 	NUB0();
     00E8 1Drr                      1- 1514     	BCR	_PORTAbits,3
     00E9 19rr                      1- 1515     	BSR	_PORTAbits,3
     00EA 19rr                      1- 1516     	BSR	_PORTAbits,3
     00EB 0000                      1- 1517     	nop
     00EC 1Drr                      1- 1518     	BCR	_PORTAbits,3
     00ED                           1- 1519     _00607_DS_:
                                    1- 1520     	.line	649, "main.c"; 	if(B4)
                                    1- 1521     	BANKSEL	_Bdata
     00ED rrrr                      3-  110 m1      .banksel ram_address
     00EE 0Arr                      1- 1522     	BTRSS	_Bdata,4
                                    1- 1523     	MGOTO	_00611_DS_
     00EF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1524     	.line	650, "main.c"; 	NUB1();
     00F0 1Drr                      1- 1525     	BCR	_PORTAbits,3
     00F1 1Drr                      1- 1526     	BCR	_PORTAbits,3
     00F2 19rr                      1- 1527     	BSR	_PORTAbits,3
                                    1- 1528     	MGOTO	_00616_DS_
     00F3 3rrr                      3-   63 m1      LGOTO rom_address
     00F4                           1- 1529     _00611_DS_:
                                    1- 1530     	.line	652, "main.c"; 	NUB0();
     00F4 1Drr                      1- 1531     	BCR	_PORTAbits,3
     00F5 19rr                      1- 1532     	BSR	_PORTAbits,3
     00F6 19rr                      1- 1533     	BSR	_PORTAbits,3
     00F7 0000                      1- 1534     	nop
     00F8 1Drr                      1- 1535     	BCR	_PORTAbits,3
     00F9                           1- 1536     _00616_DS_:
                                    1- 1537     	.line	653, "main.c"; 	if(B3)
                                    1- 1538     	BANKSEL	_Bdata
     00F9 rrrr                      3-  110 m1      .banksel ram_address
     00FA 09rr                      1- 1539     	BTRSS	_Bdata,3
                                    1- 1540     	MGOTO	_00620_DS_
     00FB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1541     	.line	654, "main.c"; 	NUB1();
     00FC 1Drr                      1- 1542     	BCR	_PORTAbits,3
     00FD 1Drr                      1- 1543     	BCR	_PORTAbits,3
     00FE 19rr                      1- 1544     	BSR	_PORTAbits,3
                                    1- 1545     	MGOTO	_00625_DS_
     00FF 3rrr                      3-   63 m1      LGOTO rom_address
     0100                           1- 1546     _00620_DS_:
                                    1- 1547     	.line	656, "main.c"; 	NUB0();
     0100 1Drr                      1- 1548     	BCR	_PORTAbits,3
     0101 19rr                      1- 1549     	BSR	_PORTAbits,3
     0102 19rr                      1- 1550     	BSR	_PORTAbits,3
     0103 0000                      1- 1551     	nop
     0104 1Drr                      1- 1552     	BCR	_PORTAbits,3
     0105                           1- 1553     _00625_DS_:
                                    1- 1554     	.line	657, "main.c"; 	if(B2)
                                    1- 1555     	BANKSEL	_Bdata
     0105 rrrr                      3-  110 m1      .banksel ram_address
     0106 09rr                      1- 1556     	BTRSS	_Bdata,2
                                    1- 1557     	MGOTO	_00629_DS_
     0107 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1558     	.line	658, "main.c"; 	NUB1();
     0108 1Drr                      1- 1559     	BCR	_PORTAbits,3
     0109 1Drr                      1- 1560     	BCR	_PORTAbits,3
     010A 19rr                      1- 1561     	BSR	_PORTAbits,3
                                    1- 1562     	MGOTO	_00634_DS_
     010B 3rrr                      3-   63 m1      LGOTO rom_address
     010C                           1- 1563     _00629_DS_:
                                    1- 1564     	.line	660, "main.c"; 	NUB0();
     010C 1Drr                      1- 1565     	BCR	_PORTAbits,3
     010D 19rr                      1- 1566     	BSR	_PORTAbits,3
     010E 19rr                      1- 1567     	BSR	_PORTAbits,3
     010F 0000                      1- 1568     	nop
     0110 1Drr                      1- 1569     	BCR	_PORTAbits,3
     0111                           1- 1570     _00634_DS_:
                                    1- 1571     	.line	661, "main.c"; 	if(B1)
                                    1- 1572     	BANKSEL	_Bdata
     0111 rrrr                      3-  110 m1      .banksel ram_address
     0112 08rr                      1- 1573     	BTRSS	_Bdata,1
                                    1- 1574     	MGOTO	_00638_DS_
     0113 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1575     	.line	662, "main.c"; 	NUB1();
     0114 1Drr                      1- 1576     	BCR	_PORTAbits,3
     0115 1Drr                      1- 1577     	BCR	_PORTAbits,3
     0116 19rr                      1- 1578     	BSR	_PORTAbits,3
                                    1- 1579     	MGOTO	_00643_DS_
     0117 3rrr                      3-   63 m1      LGOTO rom_address
     0118                           1- 1580     _00638_DS_:
                                    1- 1581     	.line	664, "main.c"; 	NUB0();
     0118 1Drr                      1- 1582     	BCR	_PORTAbits,3
     0119 19rr                      1- 1583     	BSR	_PORTAbits,3
     011A 19rr                      1- 1584     	BSR	_PORTAbits,3
     011B 0000                      1- 1585     	nop
     011C 1Drr                      1- 1586     	BCR	_PORTAbits,3
     011D                           1- 1587     _00643_DS_:
                                    1- 1588     	.line	665, "main.c"; 	if(B0)
                                    1- 1589     	BANKSEL	_Bdata
     011D rrrr                      3-  110 m1      .banksel ram_address
     011E 08rr                      1- 1590     	BTRSS	_Bdata,0
                                    1- 1591     	MGOTO	_00647_DS_
     011F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1592     	.line	666, "main.c"; 	NUB1();
     0120 1Drr                      1- 1593     	BCR	_PORTAbits,3
     0121 1Drr                      1- 1594     	BCR	_PORTAbits,3
     0122 19rr                      1- 1595     	BSR	_PORTAbits,3
                                    1- 1596     	MGOTO	_00652_DS_
     0123 3rrr                      3-   63 m1      LGOTO rom_address
     0124                           1- 1597     _00647_DS_:
                                    1- 1598     	.line	668, "main.c"; 	NUB0();
     0124 1Drr                      1- 1599     	BCR	_PORTAbits,3
     0125 19rr                      1- 1600     	BSR	_PORTAbits,3
     0126 19rr                      1- 1601     	BSR	_PORTAbits,3
     0127 0000                      1- 1602     	nop
     0128 1Drr                      1- 1603     	BCR	_PORTAbits,3
     0129                           1- 1604     _00652_DS_:
                                    1- 1605     	.line	670, "main.c"; 	PORTAbits.PA3 = 0;
     0129 1Drr                      1- 1606     	BCR	_PORTAbits,3
                                    1- 1607     	.line	671, "main.c"; 	ENI();	
     012A 0004                      1- 1608     	ENI
                                    1- 1609     	.line	672, "main.c"; 	}
                                    1- 1610     	RETURN	
     012B 0010                      3-   40 m1      ret
                                    1- 1611     ; exit point of _sendRGB
                                    1- 1613     ;***
                                    1- 1614     ;  pBlock Stats: dbName = C
                                    1- 1615     ;***
                                    1- 1616     ;has an exit
                                    1- 1617     ;; Starting pCode block
                                    1- 1618     .segment "code"; module=main, function=_Delay10Us
     0000                           1- 1620     _Delay10Us:
                                    1- 1621     ; 2 exit points
                                    1- 1622     	.line	553, "main.c"; 	NOP();
     0000 0000                      1- 1623     	nop
                                    1- 1624     	.line	554, "main.c"; 	NOP();
     0001 0000                      1- 1625     	nop
                                    1- 1626     	.line	555, "main.c"; 	NOP();
     0002 0000                      1- 1627     	nop
                                    1- 1628     	.line	556, "main.c"; 	NOP();
     0003 0000                      1- 1629     	nop
                                    1- 1630     	.line	557, "main.c"; 	NOP();
     0004 0000                      1- 1631     	nop
                                    1- 1632     	.line	558, "main.c"; 	NOP();
     0005 0000                      1- 1633     	nop
                                    1- 1634     	.line	559, "main.c"; 	}
                                    1- 1635     	RETURN	
     0006 0010                      3-   40 m1      ret
                                    1- 1636     ; exit point of _Delay10Us
                                    1- 1638     ;***
                                    1- 1639     ;  pBlock Stats: dbName = C
                                    1- 1640     ;***
                                    1- 1641     ;has an exit
                                    1- 1642     ;1 compiler assigned register :
                                    1- 1643     ;   r0x1026
                                    1- 1644     ;; Starting pCode block
                                    1- 1645     .segment "code"; module=main, function=_Delay80us
                                    1- 1647     ;local variable name mapping:
     0000                           1- 1649     _Delay80us:
                                    1- 1650     ; 2 exit points
                                    1- 1651     	.line	544, "main.c"; 	for(unsigned char i=0;i<50;i++)
                                    1- 1652     	BANKSEL	r0x1026
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1653     	CLRR	r0x1026
                                    1- 1654     ;;unsigned compare: left < lit (0x32=50), size=1
     0002                           1- 1655     _00426_DS_:
     0002 2132                      1- 1656     	MOVIA	0x32
                                    1- 1657     	BANKSEL	r0x1026
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 04rr                      1- 1658     	SUBAR	r0x1026,W
     0005 0C03                      1- 1659     	BTRSC	STATUS,0
                                    1- 1660     	MGOTO	_00428_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1661     	.line	546, "main.c"; 	if(uartFlag)
                                    1- 1662     	BANKSEL	_uartFlag
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1- 1663     	MOVR	_uartFlag,W
     0009 0903                      1- 1664     	BTRSS	STATUS,2
                                    1- 1665     	.line	547, "main.c"; 	return;
                                    1- 1666     	MGOTO	_00428_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1667     	.line	544, "main.c"; 	for(unsigned char i=0;i<50;i++)
                                    1- 1668     	BANKSEL	r0x1026
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 1669     	INCR	r0x1026,F
                                    1- 1670     	MGOTO	_00426_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 1671     _00428_DS_:
                                    1- 1672     	.line	549, "main.c"; 	}
                                    1- 1673     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 1674     ; exit point of _Delay80us
                                    1- 1676     ;***
                                    1- 1677     ;  pBlock Stats: dbName = C
                                    1- 1678     ;***
                                    1- 1679     ;has an exit
                                    1- 1680     ;functions called:
                                    1- 1681     ;   _setColor
                                    1- 1682     ;   _setColor
                                    1- 1683     ;; Starting pCode block
                                    1- 1684     .segment "code"; module=main, function=_work10
     0000                           1- 1686     _work10:
                                    1- 1687     ; 2 exit points
                                    1- 1688     	.line	537, "main.c"; 	setColor(colorIndex);
                                    1- 1689     	BANKSEL	_colorIndex
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 1690     	MOVR	_colorIndex,W
                                    1- 1691     	MCALL	_setColor
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1692     	.line	539, "main.c"; 	}
                                    1- 1693     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 1694     ; exit point of _work10
                                    1- 1696     ;***
                                    1- 1697     ;  pBlock Stats: dbName = C
                                    1- 1698     ;***
                                    1- 1699     ;has an exit
                                    1- 1700     ;functions called:
                                    1- 1701     ;   _sendtoLast
                                    1- 1702     ;   _sendtoLast
                                    1- 1703     ;7 compiler assigned registers:
                                    1- 1704     ;   r0x102D
                                    1- 1705     ;   r0x102E
                                    1- 1706     ;   r0x102F
                                    1- 1707     ;   r0x1030
                                    1- 1708     ;   r0x1031
                                    1- 1709     ;   STK01
                                    1- 1710     ;   STK00
                                    1- 1711     ;; Starting pCode block
                                    1- 1712     .segment "code"; module=main, function=_breath3
     0000                           1- 1714     _breath3:
                                    1- 1715     ; 2 exit points
                                    1- 1716     	.line	502, "main.c"; 	if(Rdata2 > 0)
                                    1- 1717     	BANKSEL	_Rdata2
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 1718     	MOVR	_Rdata2,W
     0002 0D03                      1- 1719     	BTRSC	STATUS,2
                                    1- 1720     	MGOTO	_00350_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1721     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1722     ;;unsigned compare: left >= lit (0x51=81), size=1
                                    1- 1723     	.line	505, "main.c"; 	if(Rdata2 > 80)
     0004 2151                      1- 1724     	MOVIA	0x51
     0005 04rr                      1- 1725     	SUBAR	_Rdata2,W
     0006 0803                      1- 1726     	BTRSS	STATUS,0
                                    1- 1727     	MGOTO	_00347_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1728     	.line	506, "main.c"; 	Rdata2 = Rdata2-8;
     0008 21F8                      1- 1729     	MOVIA	0xf8
     0009 03rr                      1- 1730     	ADDAR	_Rdata2,F
                                    1- 1731     	MGOTO	_00350_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
     000B                           1- 1732     _00347_DS_:
                                    1- 1733     	.line	507, "main.c"; 	else if(Gdata2 < (10 + Rdata2) && Bdata2 < (10 + Rdata2))
                                    1- 1734     	BANKSEL	_Rdata2
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 01rr                      1- 1735     	MOVR	_Rdata2,W
                                    1- 1736     	BANKSEL	r0x102D
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 1737     	MOVAR	r0x102D
                                    1- 1738     	BANKSEL	r0x102E
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 1739     	CLRR	r0x102E
     0011 210A                      1- 1740     	MOVIA	0x0a
                                    1- 1741     	BANKSEL	r0x102D
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 03rr                      1- 1742     	ADDAR	r0x102D,F
     0014 0803                      1- 1743     	BTRSS	STATUS,0
                                    1- 1744     	MGOTO	_00002_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1745     	BANKSEL	r0x102E
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 05rr                      1- 1746     	INCR	r0x102E,F
     0018                           1- 1747     _00002_DS_:
                                    1- 1748     	BANKSEL	_Gdata2
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 01rr                      1- 1749     	MOVR	_Gdata2,W
                                    1- 1750     	BANKSEL	r0x102F
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 00rr                      1- 1751     	MOVAR	r0x102F
                                    1- 1752     ;;2	CLRR	r0x1030
     001C 2100                      1- 1753     	MOVIA	0x00
     001D 2580                      1- 1754     	ADDIA	0x80
                                    1- 1755     	BANKSEL	r0x1031
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1756     	MOVAR	r0x1031
                                    1- 1757     	BANKSEL	r0x102E
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1758     	MOVR	r0x102E,W
     0022 2580                      1- 1759     	ADDIA	0x80
                                    1- 1760     	BANKSEL	r0x1031
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 04rr                      1- 1761     	SUBAR	r0x1031,W
     0025 0903                      1- 1762     	BTRSS	STATUS,2
                                    1- 1763     	MGOTO	_00406_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1764     	BANKSEL	r0x102D
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 1765     	MOVR	r0x102D,W
                                    1- 1766     	BANKSEL	r0x102F
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 04rr                      1- 1767     	SUBAR	r0x102F,W
     002B                           1- 1768     _00406_DS_:
     002B 0C03                      1- 1769     	BTRSC	STATUS,0
                                    1- 1770     	MGOTO	_00350_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1771     	BANKSEL	_Bdata2
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 01rr                      1- 1772     	MOVR	_Bdata2,W
                                    1- 1773     	BANKSEL	r0x102F
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 00rr                      1- 1774     	MOVAR	r0x102F
                                    1- 1775     ;;2	CLRR	r0x1030
     0031 2100                      1- 1776     	MOVIA	0x00
     0032 2580                      1- 1777     	ADDIA	0x80
                                    1- 1778     	BANKSEL	r0x1031
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 00rr                      1- 1779     	MOVAR	r0x1031
                                    1- 1780     	BANKSEL	r0x102E
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 01rr                      1- 1781     	MOVR	r0x102E,W
     0037 2580                      1- 1782     	ADDIA	0x80
                                    1- 1783     	BANKSEL	r0x1031
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 04rr                      1- 1784     	SUBAR	r0x1031,W
     003A 0903                      1- 1785     	BTRSS	STATUS,2
                                    1- 1786     	MGOTO	_00407_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1787     	BANKSEL	r0x102D
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 1788     	MOVR	r0x102D,W
                                    1- 1789     	BANKSEL	r0x102F
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 04rr                      1- 1790     	SUBAR	r0x102F,W
     0040                           1- 1791     _00407_DS_:
     0040 0C03                      1- 1792     	BTRSC	STATUS,0
                                    1- 1793     	MGOTO	_00350_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1794     	.line	509, "main.c"; 	--Rdata2;
                                    1- 1795     	BANKSEL	_Rdata2
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 06rr                      1- 1796     	DECR	_Rdata2,F
     0044                           1- 1797     _00350_DS_:
                                    1- 1798     	.line	513, "main.c"; 	if(Gdata2 > 0)
                                    1- 1799     	BANKSEL	_Gdata2
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 01rr                      1- 1800     	MOVR	_Gdata2,W
     0046 0D03                      1- 1801     	BTRSC	STATUS,2
                                    1- 1802     	MGOTO	_00358_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1803     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1804     ;;unsigned compare: left >= lit (0x51=81), size=1
                                    1- 1805     	.line	516, "main.c"; 	if(Gdata2 > 80)
     0048 2151                      1- 1806     	MOVIA	0x51
     0049 04rr                      1- 1807     	SUBAR	_Gdata2,W
     004A 0803                      1- 1808     	BTRSS	STATUS,0
                                    1- 1809     	MGOTO	_00355_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1810     	.line	517, "main.c"; 	Gdata2 = Gdata2-8;
     004C 21F8                      1- 1811     	MOVIA	0xf8
     004D 03rr                      1- 1812     	ADDAR	_Gdata2,F
                                    1- 1813     	MGOTO	_00358_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
     004F                           1- 1814     _00355_DS_:
                                    1- 1815     	.line	518, "main.c"; 	else if(Rdata2 < (10 + Gdata2) && Bdata2 < (10 + Gdata2))
                                    1- 1816     	BANKSEL	_Gdata2
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 01rr                      1- 1817     	MOVR	_Gdata2,W
                                    1- 1818     	BANKSEL	r0x102D
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 00rr                      1- 1819     	MOVAR	r0x102D
                                    1- 1820     	BANKSEL	r0x102E
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 02rr                      1- 1821     	CLRR	r0x102E
     0055 210A                      1- 1822     	MOVIA	0x0a
                                    1- 1823     	BANKSEL	r0x102D
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 03rr                      1- 1824     	ADDAR	r0x102D,F
     0058 0803                      1- 1825     	BTRSS	STATUS,0
                                    1- 1826     	MGOTO	_00003_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1827     	BANKSEL	r0x102E
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 05rr                      1- 1828     	INCR	r0x102E,F
     005C                           1- 1829     _00003_DS_:
                                    1- 1830     	BANKSEL	_Rdata2
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 01rr                      1- 1831     	MOVR	_Rdata2,W
                                    1- 1832     	BANKSEL	r0x102F
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 00rr                      1- 1833     	MOVAR	r0x102F
                                    1- 1834     ;;2	CLRR	r0x1030
     0060 2100                      1- 1835     	MOVIA	0x00
     0061 2580                      1- 1836     	ADDIA	0x80
                                    1- 1837     	BANKSEL	r0x1031
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 00rr                      1- 1838     	MOVAR	r0x1031
                                    1- 1839     	BANKSEL	r0x102E
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1- 1840     	MOVR	r0x102E,W
     0066 2580                      1- 1841     	ADDIA	0x80
                                    1- 1842     	BANKSEL	r0x1031
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 04rr                      1- 1843     	SUBAR	r0x1031,W
     0069 0903                      1- 1844     	BTRSS	STATUS,2
                                    1- 1845     	MGOTO	_00409_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1846     	BANKSEL	r0x102D
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 01rr                      1- 1847     	MOVR	r0x102D,W
                                    1- 1848     	BANKSEL	r0x102F
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 04rr                      1- 1849     	SUBAR	r0x102F,W
     006F                           1- 1850     _00409_DS_:
     006F 0C03                      1- 1851     	BTRSC	STATUS,0
                                    1- 1852     	MGOTO	_00358_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1853     	BANKSEL	_Bdata2
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 01rr                      1- 1854     	MOVR	_Bdata2,W
                                    1- 1855     	BANKSEL	r0x102F
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 00rr                      1- 1856     	MOVAR	r0x102F
                                    1- 1857     ;;2	CLRR	r0x1030
     0075 2100                      1- 1858     	MOVIA	0x00
     0076 2580                      1- 1859     	ADDIA	0x80
                                    1- 1860     	BANKSEL	r0x1031
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 00rr                      1- 1861     	MOVAR	r0x1031
                                    1- 1862     	BANKSEL	r0x102E
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 01rr                      1- 1863     	MOVR	r0x102E,W
     007B 2580                      1- 1864     	ADDIA	0x80
                                    1- 1865     	BANKSEL	r0x1031
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 04rr                      1- 1866     	SUBAR	r0x1031,W
     007E 0903                      1- 1867     	BTRSS	STATUS,2
                                    1- 1868     	MGOTO	_00410_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1869     	BANKSEL	r0x102D
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 01rr                      1- 1870     	MOVR	r0x102D,W
                                    1- 1871     	BANKSEL	r0x102F
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 04rr                      1- 1872     	SUBAR	r0x102F,W
     0084                           1- 1873     _00410_DS_:
     0084 0C03                      1- 1874     	BTRSC	STATUS,0
                                    1- 1875     	MGOTO	_00358_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1876     	.line	519, "main.c"; 	--Gdata2;
                                    1- 1877     	BANKSEL	_Gdata2
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 06rr                      1- 1878     	DECR	_Gdata2,F
     0088                           1- 1879     _00358_DS_:
                                    1- 1880     	.line	522, "main.c"; 	if(Bdata2 > 0)
                                    1- 1881     	BANKSEL	_Bdata2
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 01rr                      1- 1882     	MOVR	_Bdata2,W
     008A 0D03                      1- 1883     	BTRSC	STATUS,2
                                    1- 1884     	MGOTO	_00366_DS_
     008B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1885     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1886     ;;unsigned compare: left >= lit (0x51=81), size=1
                                    1- 1887     	.line	525, "main.c"; 	if(Bdata2 > 80)
     008C 2151                      1- 1888     	MOVIA	0x51
     008D 04rr                      1- 1889     	SUBAR	_Bdata2,W
     008E 0803                      1- 1890     	BTRSS	STATUS,0
                                    1- 1891     	MGOTO	_00363_DS_
     008F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1892     	.line	526, "main.c"; 	Bdata2 = Bdata2-8;
     0090 21F8                      1- 1893     	MOVIA	0xf8
     0091 03rr                      1- 1894     	ADDAR	_Bdata2,F
                                    1- 1895     	MGOTO	_00366_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
     0093                           1- 1896     _00363_DS_:
                                    1- 1897     	.line	527, "main.c"; 	else if(Rdata2 < (10 + Bdata2) && Gdata2 < (10 + Bdata2))
                                    1- 1898     	BANKSEL	_Bdata2
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 01rr                      1- 1899     	MOVR	_Bdata2,W
                                    1- 1900     	BANKSEL	r0x102D
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 00rr                      1- 1901     	MOVAR	r0x102D
                                    1- 1902     	BANKSEL	r0x102E
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 02rr                      1- 1903     	CLRR	r0x102E
     0099 210A                      1- 1904     	MOVIA	0x0a
                                    1- 1905     	BANKSEL	r0x102D
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 03rr                      1- 1906     	ADDAR	r0x102D,F
     009C 0803                      1- 1907     	BTRSS	STATUS,0
                                    1- 1908     	MGOTO	_00004_DS_
     009D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1909     	BANKSEL	r0x102E
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 05rr                      1- 1910     	INCR	r0x102E,F
     00A0                           1- 1911     _00004_DS_:
                                    1- 1912     	BANKSEL	_Rdata2
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 01rr                      1- 1913     	MOVR	_Rdata2,W
                                    1- 1914     	BANKSEL	r0x102F
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 00rr                      1- 1915     	MOVAR	r0x102F
                                    1- 1916     ;;2	CLRR	r0x1030
     00A4 2100                      1- 1917     	MOVIA	0x00
     00A5 2580                      1- 1918     	ADDIA	0x80
                                    1- 1919     	BANKSEL	r0x1031
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 00rr                      1- 1920     	MOVAR	r0x1031
                                    1- 1921     	BANKSEL	r0x102E
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 01rr                      1- 1922     	MOVR	r0x102E,W
     00AA 2580                      1- 1923     	ADDIA	0x80
                                    1- 1924     	BANKSEL	r0x1031
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 04rr                      1- 1925     	SUBAR	r0x1031,W
     00AD 0903                      1- 1926     	BTRSS	STATUS,2
                                    1- 1927     	MGOTO	_00412_DS_
     00AE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1928     	BANKSEL	r0x102D
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 01rr                      1- 1929     	MOVR	r0x102D,W
                                    1- 1930     	BANKSEL	r0x102F
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 04rr                      1- 1931     	SUBAR	r0x102F,W
     00B3                           1- 1932     _00412_DS_:
     00B3 0C03                      1- 1933     	BTRSC	STATUS,0
                                    1- 1934     	MGOTO	_00366_DS_
     00B4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1935     	BANKSEL	_Gdata2
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 01rr                      1- 1936     	MOVR	_Gdata2,W
                                    1- 1937     	BANKSEL	r0x102F
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 00rr                      1- 1938     	MOVAR	r0x102F
                                    1- 1939     ;;2	CLRR	r0x1030
     00B9 2100                      1- 1940     	MOVIA	0x00
     00BA 2580                      1- 1941     	ADDIA	0x80
                                    1- 1942     	BANKSEL	r0x1031
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 00rr                      1- 1943     	MOVAR	r0x1031
                                    1- 1944     	BANKSEL	r0x102E
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 01rr                      1- 1945     	MOVR	r0x102E,W
     00BF 2580                      1- 1946     	ADDIA	0x80
                                    1- 1947     	BANKSEL	r0x1031
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 04rr                      1- 1948     	SUBAR	r0x1031,W
     00C2 0903                      1- 1949     	BTRSS	STATUS,2
                                    1- 1950     	MGOTO	_00413_DS_
     00C3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1951     	BANKSEL	r0x102D
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 01rr                      1- 1952     	MOVR	r0x102D,W
                                    1- 1953     	BANKSEL	r0x102F
     00C6 rrrr                      3-  110 m1      .banksel ram_address
     00C7 04rr                      1- 1954     	SUBAR	r0x102F,W
     00C8                           1- 1955     _00413_DS_:
     00C8 0C03                      1- 1956     	BTRSC	STATUS,0
                                    1- 1957     	MGOTO	_00366_DS_
     00C9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1958     	.line	528, "main.c"; 	--Bdata2;
                                    1- 1959     	BANKSEL	_Bdata2
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 06rr                      1- 1960     	DECR	_Bdata2,F
     00CC                           1- 1961     _00366_DS_:
                                    1- 1962     	.line	530, "main.c"; 	sendtoLast(Rdata2,Gdata2,Bdata2);
                                    1- 1963     	BANKSEL	_Bdata2
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 01rr                      1- 1964     	MOVR	_Bdata2,W
     00CE 00rr                      1- 1965     	MOVAR	STK01
                                    1- 1966     	BANKSEL	_Gdata2
     00CF rrrr                      3-  110 m1      .banksel ram_address
     00D0 01rr                      1- 1967     	MOVR	_Gdata2,W
     00D1 00rr                      1- 1968     	MOVAR	STK00
                                    1- 1969     	BANKSEL	_Rdata2
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 01rr                      1- 1970     	MOVR	_Rdata2,W
                                    1- 1971     	MCALL	_sendtoLast
     00D4 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1972     	.line	531, "main.c"; 	}
                                    1- 1973     	RETURN	
     00D5 0010                      3-   40 m1      ret
                                    1- 1974     ; exit point of _breath3
                                    1- 1976     ;***
                                    1- 1977     ;  pBlock Stats: dbName = C
                                    1- 1978     ;***
                                    1- 1979     ;has an exit
                                    1- 1980     ;functions called:
                                    1- 1981     ;   __divuint
                                    1- 1982     ;   _breath3
                                    1- 1983     ;   _sendtoLast
                                    1- 1984     ;   __divuint
                                    1- 1985     ;   _breath3
                                    1- 1986     ;   _sendtoLast
                                    1- 1987     ;5 compiler assigned registers:
                                    1- 1988     ;   STK02
                                    1- 1989     ;   STK01
                                    1- 1990     ;   STK00
                                    1- 1991     ;   r0x1032
                                    1- 1992     ;   r0x1033
                                    1- 1993     ;; Starting pCode block
                                    1- 1994     .segment "code"; module=main, function=_work9
     0000                           1- 1996     _work9:
                                    1- 1997     ; 2 exit points
                                    1- 1998     	.line	476, "main.c"; 	duty = timeCount / 10;
     0000 210A                      1- 1999     	MOVIA	0x0a
     0001 00rr                      1- 2000     	MOVAR	STK02
     0002 2100                      1- 2001     	MOVIA	0x00
     0003 00rr                      1- 2002     	MOVAR	STK01
                                    1- 2003     	BANKSEL	_timeCount
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 2004     	MOVR	_timeCount,W
     0006 00rr                      1- 2005     	MOVAR	STK00
     0007 01rr                      1- 2006     	MOVR	(_timeCount + 1),W
                                    1- 2007     	MCALL	__divuint
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2008     ;;1	MOVAR	r0x1032
     0009 01rr                      1- 2009     	MOVR	STK00,W
                                    1- 2010     ;;1	MOVAR	r0x1033
                                    1- 2011     	BANKSEL	_duty
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 00rr                      1- 2012     	MOVAR	_duty
                                    1- 2013     	.line	477, "main.c"; 	if(preduty != duty)
                                    1- 2014     	BANKSEL	_preduty
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 12rr                      1- 2015     	XORAR	_preduty,W
     000E 0D03                      1- 2016     	BTRSC	STATUS,2
                                    1- 2017     	MGOTO	_00331_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2018     	.line	479, "main.c"; 	preduty = duty;
                                    1- 2019     	BANKSEL	_duty
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 2020     	MOVR	_duty,W
                                    1- 2021     	BANKSEL	_preduty
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 00rr                      1- 2022     	MOVAR	_preduty
                                    1- 2023     	.line	480, "main.c"; 	breath3();
                                    1- 2024     	MCALL	_breath3
     0014 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2025     	MGOTO	_00333_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
     0016                           1- 2026     _00331_DS_:
                                    1- 2027     	.line	484, "main.c"; 	sendtoLast(Rdata2,Gdata2,Bdata2);
                                    1- 2028     	BANKSEL	_Bdata2
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 2029     	MOVR	_Bdata2,W
     0018 00rr                      1- 2030     	MOVAR	STK01
                                    1- 2031     	BANKSEL	_Gdata2
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 2032     	MOVR	_Gdata2,W
     001B 00rr                      1- 2033     	MOVAR	STK00
                                    1- 2034     	BANKSEL	_Rdata2
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 01rr                      1- 2035     	MOVR	_Rdata2,W
                                    1- 2036     	MCALL	_sendtoLast
     001E 2rrr                      3-   66 m1      LCALL rom_address
     001F                           1- 2037     _00333_DS_:
                                    1- 2038     	.line	496, "main.c"; 	}
                                    1- 2039     	RETURN	
     001F 0010                      3-   40 m1      ret
                                    1- 2040     ; exit point of _work9
                                    1- 2042     ;***
                                    1- 2043     ;  pBlock Stats: dbName = C
                                    1- 2044     ;***
                                    1- 2045     ;has an exit
                                    1- 2046     ;functions called:
                                    1- 2047     ;   _sendtoLast
                                    1- 2048     ;   _sendtoLast
                                    1- 2049     ;   _sendtoLast
                                    1- 2050     ;   _sendtoLast
                                    1- 2051     ;   _sendtoLast
                                    1- 2052     ;   _sendtoLast
                                    1- 2053     ;   _sendtoLast
                                    1- 2054     ;   _sendtoLast
                                    1- 2055     ;   _sendtoLast
                                    1- 2056     ;   _sendtoLast
                                    1- 2057     ;   _sendtoLast
                                    1- 2058     ;   _sendtoLast
                                    1- 2059     ;   _sendtoLast
                                    1- 2060     ;   _sendtoLast
                                    1- 2061     ;   _sendtoLast
                                    1- 2062     ;   _sendtoLast
                                    1- 2063     ;   _sendtoLast
                                    1- 2064     ;   _sendtoLast
                                    1- 2065     ;   _sendtoLast
                                    1- 2066     ;   _sendtoLast
                                    1- 2067     ;3 compiler assigned registers:
                                    1- 2068     ;   r0x102C
                                    1- 2069     ;   STK01
                                    1- 2070     ;   STK00
                                    1- 2071     ;; Starting pCode block
                                    1- 2072     .segment "code"; module=main, function=_setColor
                                    1- 2074     ;local variable name mapping:
     0000                           1- 2076     _setColor:
                                    1- 2077     ; 2 exit points
                                    1- 2078     	.line	423, "main.c"; 	void setColor(u8t cindex)
                                    1- 2079     	BANKSEL	r0x102C
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2080     	MOVAR	r0x102C
                                    1- 2081     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 2082     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 2083     	.line	425, "main.c"; 	switch(cindex)
     0002 2109                      1- 2084     	MOVIA	0x09
     0003 04rr                      1- 2085     	SUBAR	r0x102C,W
     0004 0C03                      1- 2086     	BTRSC	STATUS,0
                                    1- 2087     	MGOTO	_00314_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
     0006 21rr                      1- 2088     	MOVIA	((_00325_DS_ >> 8) & 0xff)
     0007 008A                      1- 2089     	MOVAR	PCHBUF
     0008 01rr                      1- 2090     	MOVR	r0x102C,W
     0009 25rr                      1- 2091     	ADDIA	_00325_DS_
     000A 0C03                      1- 2092     	BTRSC	STATUS,0
     000B 058A                      1- 2093     	INCR	PCHBUF,F
     000C 0082                      1- 2094     	MOVAR	PCL
     000D                           1- 2095     _00325_DS_:
                                    1- 2096     	MGOTO	_00302_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2097     	MGOTO	_00306_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2098     	MGOTO	_00307_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2099     	MGOTO	_00308_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2100     	MGOTO	_00309_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2101     	MGOTO	_00310_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2102     	MGOTO	_00311_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2103     	MGOTO	_00312_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2104     	MGOTO	_00313_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2105     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2106     ;;unsigned compare: left >= lit (0xB=11), size=1
     0016                           1- 2107     _00302_DS_:
                                    1- 2108     	.line	428, "main.c"; 	if(offFlag > 10)
     0016 210B                      1- 2109     	MOVIA	0x0b
                                    1- 2110     	BANKSEL	_offFlag
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 04rr                      1- 2111     	SUBAR	_offFlag,W
     0019 0803                      1- 2112     	BTRSS	STATUS,0
                                    1- 2113     	MGOTO	_00304_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2114     	.line	430, "main.c"; 	sendtoLast(COLOR0);
     001B 2100                      1- 2115     	MOVIA	0x00
     001C 00rr                      1- 2116     	MOVAR	STK01
     001D 00rr                      1- 2117     	MOVAR	STK00
                                    1- 2118     	MCALL	_sendtoLast
     001E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2119     	.line	431, "main.c"; 	offFlag = 0;
                                    1- 2120     	BANKSEL	_offFlag
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 02rr                      1- 2121     	CLRR	_offFlag
                                    1- 2122     	.line	432, "main.c"; 	colorIndex = 0;
                                    1- 2123     	BANKSEL	_colorIndex
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 02rr                      1- 2124     	CLRR	_colorIndex
                                    1- 2125     	MGOTO	_00316_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
     0024                           1- 2126     _00304_DS_:
                                    1- 2127     	.line	436, "main.c"; 	++offFlag;
                                    1- 2128     	BANKSEL	_offFlag
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 05rr                      1- 2129     	INCR	_offFlag,F
                                    1- 2130     	.line	438, "main.c"; 	break;
                                    1- 2131     	MGOTO	_00316_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 2132     _00306_DS_:
                                    1- 2133     	.line	440, "main.c"; 	sendtoLast(COLOR1);
     0027 2100                      1- 2134     	MOVIA	0x00
     0028 00rr                      1- 2135     	MOVAR	STK01
     0029 21FF                      1- 2136     	MOVIA	0xff
     002A 00rr                      1- 2137     	MOVAR	STK00
     002B 2100                      1- 2138     	MOVIA	0x00
                                    1- 2139     	MCALL	_sendtoLast
     002C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2140     	.line	441, "main.c"; 	break;
                                    1- 2141     	MGOTO	_00316_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
     002E                           1- 2142     _00307_DS_:
                                    1- 2143     	.line	443, "main.c"; 	sendtoLast(COLOR2);
     002E 2100                      1- 2144     	MOVIA	0x00
     002F 00rr                      1- 2145     	MOVAR	STK01
     0030 21FF                      1- 2146     	MOVIA	0xff
     0031 00rr                      1- 2147     	MOVAR	STK00
     0032 2125                      1- 2148     	MOVIA	0x25
                                    1- 2149     	MCALL	_sendtoLast
     0033 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2150     	.line	444, "main.c"; 	break;
                                    1- 2151     	MGOTO	_00316_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
     0035                           1- 2152     _00308_DS_:
                                    1- 2153     	.line	446, "main.c"; 	sendtoLast(COLOR3);
     0035 2100                      1- 2154     	MOVIA	0x00
     0036 00rr                      1- 2155     	MOVAR	STK01
     0037 21FF                      1- 2156     	MOVIA	0xff
     0038 00rr                      1- 2157     	MOVAR	STK00
                                    1- 2158     	MCALL	_sendtoLast
     0039 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2159     	.line	447, "main.c"; 	break;
                                    1- 2160     	MGOTO	_00316_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
     003B                           1- 2161     _00309_DS_:
                                    1- 2162     	.line	449, "main.c"; 	sendtoLast(COLOR4);
     003B 2100                      1- 2163     	MOVIA	0x00
     003C 00rr                      1- 2164     	MOVAR	STK01
     003D 00rr                      1- 2165     	MOVAR	STK00
     003E 21FF                      1- 2166     	MOVIA	0xff
                                    1- 2167     	MCALL	_sendtoLast
     003F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2168     	.line	450, "main.c"; 	break;
                                    1- 2169     	MGOTO	_00316_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041                           1- 2170     _00310_DS_:
                                    1- 2171     	.line	452, "main.c"; 	sendtoLast(COLOR5);
     0041 21FF                      1- 2172     	MOVIA	0xff
     0042 00rr                      1- 2173     	MOVAR	STK01
     0043 2100                      1- 2174     	MOVIA	0x00
     0044 00rr                      1- 2175     	MOVAR	STK00
     0045 21FF                      1- 2176     	MOVIA	0xff
                                    1- 2177     	MCALL	_sendtoLast
     0046 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2178     	.line	453, "main.c"; 	break;
                                    1- 2179     	MGOTO	_00316_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
     0048                           1- 2180     _00311_DS_:
                                    1- 2181     	.line	455, "main.c"; 	sendtoLast(COLOR6);
     0048 21FF                      1- 2182     	MOVIA	0xff
     0049 00rr                      1- 2183     	MOVAR	STK01
     004A 2100                      1- 2184     	MOVIA	0x00
     004B 00rr                      1- 2185     	MOVAR	STK00
                                    1- 2186     	MCALL	_sendtoLast
     004C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2187     	.line	456, "main.c"; 	break;
                                    1- 2188     	MGOTO	_00316_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
     004E                           1- 2189     _00312_DS_:
                                    1- 2190     	.line	458, "main.c"; 	sendtoLast(COLOR7);
     004E 21FF                      1- 2191     	MOVIA	0xff
     004F 00rr                      1- 2192     	MOVAR	STK01
     0050 00rr                      1- 2193     	MOVAR	STK00
     0051 2100                      1- 2194     	MOVIA	0x00
                                    1- 2195     	MCALL	_sendtoLast
     0052 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2196     	.line	459, "main.c"; 	break;
                                    1- 2197     	MGOTO	_00316_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
     0054                           1- 2198     _00313_DS_:
                                    1- 2199     	.line	461, "main.c"; 	sendtoLast(COLOR8);
     0054 21FF                      1- 2200     	MOVIA	0xff
     0055 00rr                      1- 2201     	MOVAR	STK01
     0056 00rr                      1- 2202     	MOVAR	STK00
                                    1- 2203     	MCALL	_sendtoLast
     0057 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2204     	.line	462, "main.c"; 	break;
                                    1- 2205     	MGOTO	_00316_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
     0059                           1- 2206     _00314_DS_:
                                    1- 2207     	.line	464, "main.c"; 	sendtoLast(COLOR0);
     0059 2100                      1- 2208     	MOVIA	0x00
     005A 00rr                      1- 2209     	MOVAR	STK01
     005B 00rr                      1- 2210     	MOVAR	STK00
                                    1- 2211     	MCALL	_sendtoLast
     005C 2rrr                      3-   66 m1      LCALL rom_address
     005D                           1- 2212     _00316_DS_:
                                    1- 2213     	.line	468, "main.c"; 	}
                                    1- 2214     	RETURN	
     005D 0010                      3-   40 m1      ret
                                    1- 2215     ; exit point of _setColor
                                    1- 2217     ;***
                                    1- 2218     ;  pBlock Stats: dbName = C
                                    1- 2219     ;***
                                    1- 2220     ;has an exit
                                    1- 2221     ;functions called:
                                    1- 2222     ;   _setColor
                                    1- 2223     ;   _work9
                                    1- 2224     ;   _work10
                                    1- 2225     ;   _setColor
                                    1- 2226     ;   _work9
                                    1- 2227     ;   _work10
                                    1- 2228     ;; Starting pCode block
                                    1- 2229     .segment "code"; module=main, function=_workCtr
     0000                           1- 2231     _workCtr:
                                    1- 2232     ; 2 exit points
                                    1- 2233     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2234     ;;unsigned compare: left >= lit (0xB=11), size=1
                                    1- 2235     	.line	407, "main.c"; 	if(workStep > 10)
     0000 210B                      1- 2236     	MOVIA	0x0b
                                    1- 2237     	BANKSEL	_workStep
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2238     	SUBAR	_workStep,W
     0003 0C03                      1- 2239     	BTRSC	STATUS,0
                                    1- 2240     	.line	408, "main.c"; 	return;
                                    1- 2241     	MGOTO	_00297_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2242     	.line	409, "main.c"; 	if(workStep < 9)
     0005 2109                      1- 2243     	MOVIA	0x09
     0006 04rr                      1- 2244     	SUBAR	_workStep,W
     0007 0C03                      1- 2245     	BTRSC	STATUS,0
                                    1- 2246     	MGOTO	_00295_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2247     	.line	411, "main.c"; 	setColor(workStep);
     0009 01rr                      1- 2248     	MOVR	_workStep,W
                                    1- 2249     	MCALL	_setColor
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2250     	MGOTO	_00297_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
     000C                           1- 2251     _00295_DS_:
                                    1- 2252     	.line	413, "main.c"; 	else if(workStep == 9)
                                    1- 2253     	BANKSEL	_workStep
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1- 2254     	MOVR	_workStep,W
     000E 2409                      1- 2255     	XORIA	0x09
     000F 0903                      1- 2256     	BTRSS	STATUS,2
                                    1- 2257     	MGOTO	_00292_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2258     	.line	415, "main.c"; 	work9();
                                    1- 2259     	MCALL	_work9
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2260     	MGOTO	_00297_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
     0013                           1- 2261     _00292_DS_:
                                    1- 2262     	.line	419, "main.c"; 	work10();
                                    1- 2263     	MCALL	_work10
     0013 2rrr                      3-   66 m1      LCALL rom_address
     0014                           1- 2264     _00297_DS_:
                                    1- 2265     	.line	421, "main.c"; 	}
                                    1- 2266     	RETURN	
     0014 0010                      3-   40 m1      ret
                                    1- 2267     ; exit point of _workCtr
                                    1- 2269     ;***
                                    1- 2270     ;  pBlock Stats: dbName = C
                                    1- 2271     ;***
                                    1- 2272     ;has an exit
                                    1- 2273     ;2 compiler assigned registers:
                                    1- 2274     ;   r0x1034
                                    1- 2275     ;   r0x1035
                                    1- 2276     ;; Starting pCode block
                                    1- 2277     .segment "code"; module=main, function=_delay
                                    1- 2279     ;local variable name mapping:
     0000                           1- 2281     _delay:
                                    1- 2282     ; 2 exit points
                                    1- 2283     	.line	399, "main.c"; 	void delay(u8t time)
                                    1- 2284     	BANKSEL	r0x1034
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2285     	MOVAR	r0x1034
     0002                           1- 2286     _00284_DS_:
                                    1- 2287     	.line	401, "main.c"; 	while(--time);
                                    1- 2288     	BANKSEL	r0x1034
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 06rr                      1- 2289     	DECR	r0x1034,W
                                    1- 2290     	BANKSEL	r0x1035
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 00rr                      1- 2291     	MOVAR	r0x1035
                                    1- 2292     	BANKSEL	r0x1034
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 2293     	MOVAR	r0x1034
                                    1- 2294     	BANKSEL	r0x1035
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 01rr                      1- 2295     	MOVR	r0x1035,W
     000A 0903                      1- 2296     	BTRSS	STATUS,2
                                    1- 2297     	MGOTO	_00284_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2298     	.line	402, "main.c"; 	}
                                    1- 2299     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2300     ; exit point of _delay
                                    1- 2302     ;***
                                    1- 2303     ;  pBlock Stats: dbName = C
                                    1- 2304     ;***
                                    1- 2305     ;has an exit
                                    1- 2306     ;functions called:
                                    1- 2307     ;   _WaitTF0
                                    1- 2308     ;   _WaitTF0
                                    1- 2309     ;   _WaitTF0
                                    1- 2310     ;   _WaitTF0
                                    1- 2311     ;   _WaitTF0
                                    1- 2312     ;   _WaitTF0
                                    1- 2313     ;3 compiler assigned registers:
                                    1- 2314     ;   r0x1036
                                    1- 2315     ;   r0x1037
                                    1- 2316     ;   r0x1038
                                    1- 2317     ;; Starting pCode block
                                    1- 2318     .segment "code"; module=main, function=_WByte
                                    1- 2320     ;local variable name mapping:
     0000                           1- 2323     _WByte:
                                    1- 2324     ; 2 exit points
                                    1- 2325     	.line	359, "main.c"; 	void WByte(u8t input) {
                                    1- 2326     	BANKSEL	r0x1036
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2327     	MOVAR	r0x1036
                                    1- 2328     	.line	362, "main.c"; 	SEND_FLAG = 1;
     0002 2101                      1- 2329     	MOVIA	0x01
                                    1- 2330     	BANKSEL	_SEND_FLAG
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 2331     	MOVAR	_SEND_FLAG
                                    1- 2332     	.line	364, "main.c"; 	TMRH = 0;
     0005 02rr                      1- 2333     	CLRR	_TMRH
                                    1- 2334     	.line	365, "main.c"; 	TMR1 = 104;
     0006 2168                      1- 2335     	MOVIA	0x68
     0007 00rr                      1- 2336     	SFUN	_TMR1
                                    1- 2337     	.line	366, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload; //���Timer1
     0008 2103                      1- 2338     	MOVIA	0x03
     0009 00rr                      1- 2339     	SFUN	_T1CR1
                                    1- 2340     	.line	367, "main.c"; 	PCON1 = C_TMR0_Dis;
     000A 0200                      1- 2341     	CLRA	
     000B 000r                      1- 2342     	IOST	_PCON1
                                    1- 2343     	.line	368, "main.c"; 	TXD = 0;
                                    1- 2344     	BANKSEL	_PORTB
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Crr                      1- 2345     	BCR	_PORTB,1
                                    1- 2346     	.line	370, "main.c"; 	WaitTF0();
                                    1- 2347     	MCALL	_WaitTF0
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2348     	.line	374, "main.c"; 	while (i--) {
     000F 2108                      1- 2349     	MOVIA	0x08
                                    1- 2350     	BANKSEL	r0x1037
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 2351     	MOVAR	r0x1037
     0012                           1- 2352     _00277_DS_:
                                    1- 2353     	BANKSEL	r0x1037
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 2354     	MOVR	r0x1037,W
                                    1- 2355     	BANKSEL	r0x1038
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 2356     	MOVAR	r0x1038
                                    1- 2357     	BANKSEL	r0x1037
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 06rr                      1- 2358     	DECR	r0x1037,F
                                    1- 2359     	BANKSEL	r0x1038
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 01rr                      1- 2360     	MOVR	r0x1038,W
     001A 0D03                      1- 2361     	BTRSC	STATUS,2
                                    1- 2362     	MGOTO	_00279_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2363     	.line	376, "main.c"; 	TXD = (input & 0x01);//�ȴ���λ
                                    1- 2364     	BANKSEL	r0x1036
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 01rr                      1- 2365     	MOVR	r0x1036,W
     001E 2201                      1- 2366     	ANDIA	0x01
                                    1- 2367     	BANKSEL	r0x1038
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 00rr                      1- 2368     	MOVAR	r0x1038
     0021 13rr                      1- 2369     	RRR	r0x1038,W
     0022 0C03                      1- 2370     	BTRSC	STATUS,0
                                    1- 2371     	MGOTO	_00005_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2372     	BANKSEL	_PORTB
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 1Crr                      1- 2373     	BCR	_PORTB,1
     0026                           1- 2374     _00005_DS_:
     0026 0803                      1- 2375     	BTRSS	STATUS,0
                                    1- 2376     	MGOTO	_00006_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2377     	BANKSEL	_PORTB
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 18rr                      1- 2378     	BSR	_PORTB,1
     002A                           1- 2379     _00006_DS_:
                                    1- 2380     	.line	378, "main.c"; 	WaitTF0();
                                    1- 2381     	MCALL	_WaitTF0
     002A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2382     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=1, sign=0, same=1, offr=0
                                    1- 2383     	.line	380, "main.c"; 	input = input >> 1;
     002B 1C03                      1- 2384     	BCR	STATUS,0
                                    1- 2385     	BANKSEL	r0x1036
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 13rr                      1- 2386     	RRR	r0x1036,F
                                    1- 2387     	MGOTO	_00277_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 2388     _00279_DS_:
                                    1- 2389     	.line	388, "main.c"; 	TXD =  1;
                                    1- 2390     	BANKSEL	_PORTB
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 18rr                      1- 2391     	BSR	_PORTB,1
                                    1- 2392     	.line	390, "main.c"; 	WaitTF0();
                                    1- 2393     	MCALL	_WaitTF0
     0031 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2394     	.line	392, "main.c"; 	T1CR1 = C_TMR1_Dis; //ֹͣTimer1
     0032 0200                      1- 2395     	CLRA	
     0033 00rr                      1- 2396     	SFUN	_T1CR1
                                    1- 2397     	.line	393, "main.c"; 	PCON1 = C_LVD_3P0V | C_TMR0_En;
     0034 2111                      1- 2398     	MOVIA	0x11
     0035 000r                      1- 2399     	IOST	_PCON1
                                    1- 2400     	.line	394, "main.c"; 	SEND_FLAG = 0;
                                    1- 2401     	BANKSEL	_SEND_FLAG
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 02rr                      1- 2402     	CLRR	_SEND_FLAG
                                    1- 2403     	.line	397, "main.c"; 	}
                                    1- 2404     	RETURN	
     0038 0010                      3-   40 m1      ret
                                    1- 2405     ; exit point of _WByte
                                    1- 2407     ;***
                                    1- 2408     ;  pBlock Stats: dbName = C
                                    1- 2409     ;***
                                    1- 2410     ;has an exit
                                    1- 2411     ;; Starting pCode block
                                    1- 2412     .segment "code"; module=main, function=_WaitTF0
     0000                           1- 2414     _WaitTF0:
                                    1- 2415     ; 2 exit points
     0000                           1- 2416     _00272_DS_:
                                    1- 2417     	.line	348, "main.c"; 	while (!TM0_FLAG);
                                    1- 2418     	BANKSEL	_TM0_FLAG
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2419     	MOVR	_TM0_FLAG,W
     0002 0D03                      1- 2420     	BTRSC	STATUS,2
                                    1- 2421     	MGOTO	_00272_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2422     	.line	350, "main.c"; 	TM0_FLAG = 0; //���־λ
     0004 02rr                      1- 2423     	CLRR	_TM0_FLAG
                                    1- 2424     	.line	352, "main.c"; 	}
                                    1- 2425     	RETURN	
     0005 0010                      3-   40 m1      ret
                                    1- 2426     ; exit point of _WaitTF0
                                    1- 2428     ;***
                                    1- 2429     ;  pBlock Stats: dbName = C
                                    1- 2430     ;***
                                    1- 2431     ;has an exit
                                    1- 2432     ;functions called:
                                    1- 2433     ;   _WaitTF0
                                    1- 2434     ;   _WaitTF0
                                    1- 2435     ;   _WaitTF0
                                    1- 2436     ;   _WaitTF0
                                    1- 2437     ;3 compiler assigned registers:
                                    1- 2438     ;   r0x1039
                                    1- 2439     ;   r0x103A
                                    1- 2440     ;   r0x103B
                                    1- 2441     ;; Starting pCode block
                                    1- 2442     .segment "code"; module=main, function=_RByte
                                    1- 2444     ;local variable name mapping:
     0000                           1- 2447     _RByte:
                                    1- 2448     ; 2 exit points
                                    1- 2449     	.line	310, "main.c"; 	REC_FLAG = 1;
     0000 2101                      1- 2450     	MOVIA	0x01
                                    1- 2451     	BANKSEL	_REC_FLAG
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2452     	MOVAR	_REC_FLAG
                                    1- 2453     	.line	311, "main.c"; 	u8t Output = 0;
                                    1- 2454     	BANKSEL	r0x1039
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 2455     	CLRR	r0x1039
                                    1- 2456     	.line	314, "main.c"; 	TMRH = 0;
     0005 02rr                      1- 2457     	CLRR	_TMRH
                                    1- 2458     	.line	315, "main.c"; 	TMR1 = 105;
     0006 2169                      1- 2459     	MOVIA	0x69
     0007 00rr                      1- 2460     	SFUN	_TMR1
                                    1- 2461     	.line	316, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload; //���Timer1
     0008 2103                      1- 2462     	MOVIA	0x03
     0009 00rr                      1- 2463     	SFUN	_T1CR1
                                    1- 2464     	.line	317, "main.c"; 	PCON1 = C_TMR0_Dis;
     000A 0200                      1- 2465     	CLRA	
     000B 000r                      1- 2466     	IOST	_PCON1
                                    1- 2467     	.line	319, "main.c"; 	WaitTF0(); //�ȹ���ʼλ
                                    1- 2468     	MCALL	_WaitTF0
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2469     	.line	323, "main.c"; 	while (i--) {
     000D 2108                      1- 2470     	MOVIA	0x08
                                    1- 2471     	BANKSEL	r0x103A
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1- 2472     	MOVAR	r0x103A
     0010                           1- 2473     _00260_DS_:
                                    1- 2474     	BANKSEL	r0x103A
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 2475     	MOVR	r0x103A,W
                                    1- 2476     	BANKSEL	r0x103B
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 00rr                      1- 2477     	MOVAR	r0x103B
                                    1- 2478     	BANKSEL	r0x103A
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 06rr                      1- 2479     	DECR	r0x103A,F
                                    1- 2480     	BANKSEL	r0x103B
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 2481     	MOVR	r0x103B,W
     0018 0D03                      1- 2482     	BTRSC	STATUS,2
                                    1- 2483     	MGOTO	_00265_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2484     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=1, sign=0, same=1, offr=0
                                    1- 2485     	.line	325, "main.c"; 	Output >>= 1;
     001A 1C03                      1- 2486     	BCR	STATUS,0
                                    1- 2487     	BANKSEL	r0x1039
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 13rr                      1- 2488     	RRR	r0x1039,F
                                    1- 2489     	.line	327, "main.c"; 	if (RXD) Output |= 0x80; //���յ�λ
                                    1- 2490     	BANKSEL	_PORTA
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 09rr                      1- 2491     	BTRSS	_PORTA,2
                                    1- 2492     	MGOTO	_00007_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2493     	BANKSEL	r0x1039
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 1Brr                      1- 2494     	BSR	r0x1039,7
     0022                           1- 2495     _00007_DS_:
                                    1- 2496     	.line	329, "main.c"; 	WaitTF0(); //λ����ʱ
                                    1- 2497     	MCALL	_WaitTF0
     0022 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2498     	MGOTO	_00260_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
     0024                           1- 2499     _00265_DS_:
                                    1- 2500     	.line	333, "main.c"; 	while (!TM0_FLAG) if (RXD) break;
                                    1- 2501     	BANKSEL	_TM0_FLAG
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 2502     	MOVR	_TM0_FLAG,W
     0026 0903                      1- 2503     	BTRSS	STATUS,2
                                    1- 2504     	MGOTO	_00267_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2505     	BANKSEL	_PORTA
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 09rr                      1- 2506     	BTRSS	_PORTA,2
                                    1- 2507     	MGOTO	_00265_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
     002B                           1- 2508     _00267_DS_:
                                    1- 2509     	.line	335, "main.c"; 	T1CR1 = C_TMR1_Dis; //ֹͣTimer1
     002B 0200                      1- 2510     	CLRA	
     002C 00rr                      1- 2511     	SFUN	_T1CR1
                                    1- 2512     	.line	336, "main.c"; 	PCON1 = C_LVD_3P0V | C_TMR0_En;
     002D 2111                      1- 2513     	MOVIA	0x11
     002E 000r                      1- 2514     	IOST	_PCON1
                                    1- 2515     	.line	337, "main.c"; 	REC_FLAG = 0;
                                    1- 2516     	BANKSEL	_REC_FLAG
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 02rr                      1- 2517     	CLRR	_REC_FLAG
                                    1- 2518     	.line	338, "main.c"; 	uartTime = 0;
                                    1- 2519     	BANKSEL	_uartTime
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 02rr                      1- 2520     	CLRR	_uartTime
                                    1- 2521     	.line	339, "main.c"; 	return Output;
                                    1- 2522     	BANKSEL	r0x1039
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 2523     	MOVR	r0x1039,W
                                    1- 2524     	.line	341, "main.c"; 	}
                                    1- 2525     	RETURN	
     0035 0010                      3-   40 m1      ret
                                    1- 2526     ; exit point of _RByte
                                    1- 2528     ;***
                                    1- 2529     ;  pBlock Stats: dbName = C
                                    1- 2530     ;***
                                    1- 2531     ;has an exit
                                    1- 2532     ;functions called:
                                    1- 2533     ;   __mulint
                                    1- 2534     ;   __mulint
                                    1- 2535     ;   __mulint
                                    1- 2536     ;   __mulint
                                    1- 2537     ;11 compiler assigned registers:
                                    1- 2538     ;   r0x103C
                                    1- 2539     ;   STK02
                                    1- 2540     ;   STK01
                                    1- 2541     ;   STK00
                                    1- 2542     ;   r0x103D
                                    1- 2543     ;   r0x103E
                                    1- 2544     ;   r0x103F
                                    1- 2545     ;   r0x1040
                                    1- 2546     ;   r0x1041
                                    1- 2547     ;   r0x1042
                                    1- 2548     ;   r0x1043
                                    1- 2549     ;; Starting pCode block
                                    1- 2550     .segment "code"; module=main, function=_rankNub
                                    1- 2552     ;local variable name mapping:
     0000                           1- 2557     _rankNub:
                                    1- 2558     ; 2 exit points
                                    1- 2559     	.line	290, "main.c"; 	void rankNub(char nub)
                                    1- 2560     	BANKSEL	r0x103C
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2561     	MOVAR	r0x103C
                                    1- 2562     	.line	292, "main.c"; 	u16t aNub = 3*randNub;
     0002 2103                      1- 2563     	MOVIA	0x03
     0003 00rr                      1- 2564     	MOVAR	STK02
     0004 02rr                      1- 2565     	CLRR	STK01
                                    1- 2566     	BANKSEL	_randNub
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 01rr                      1- 2567     	MOVR	_randNub,W
     0007 00rr                      1- 2568     	MOVAR	STK00
     0008 0200                      1- 2569     	CLRA	
                                    1- 2570     	MCALL	__mulint
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2571     	BANKSEL	r0x103D
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 00rr                      1- 2572     	MOVAR	r0x103D
     000C 01rr                      1- 2573     	MOVR	STK00,W
                                    1- 2574     	BANKSEL	r0x103E
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 2575     	MOVAR	r0x103E
                                    1- 2576     	.line	294, "main.c"; 	for(i=0;i<nub;i++)
                                    1- 2577     	BANKSEL	r0x103F
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2578     	CLRR	r0x103F
     0011                           1- 2579     _00253_DS_:
                                    1- 2580     	BANKSEL	r0x103C
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 2581     	MOVR	r0x103C,W
                                    1- 2582     	BANKSEL	r0x103F
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 04rr                      1- 2583     	SUBAR	r0x103F,W
     0015 0C03                      1- 2584     	BTRSC	STATUS,0
                                    1- 2585     	MGOTO	_00251_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2586     	.line	296, "main.c"; 	aNub += i*snub;
                                    1- 2587     	BANKSEL	_snub
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 01rr                      1- 2588     	MOVR	_snub,W
     0019 00rr                      1- 2589     	MOVAR	STK02
     001A 02rr                      1- 2590     	CLRR	STK01
                                    1- 2591     	BANKSEL	r0x103F
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1- 2592     	MOVR	r0x103F,W
     001D 00rr                      1- 2593     	MOVAR	STK00
     001E 0200                      1- 2594     	CLRA	
                                    1- 2595     	MCALL	__mulint
     001F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2596     	BANKSEL	r0x1043
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 2597     	MOVAR	r0x1043
                                    1- 2598     ;;1	MOVAR	r0x1040
     0022 01rr                      1- 2599     	MOVR	STK00,W
                                    1- 2600     ;;1	MOVAR	r0x1042
                                    1- 2601     	BANKSEL	r0x103E
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 2602     	ADDAR	r0x103E,F
                                    1- 2603     	BANKSEL	r0x1043
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1- 2604     	MOVR	r0x1043,W
     0027 0C03                      1- 2605     	BTRSC	STATUS,0
     0028 05rr                      1- 2606     	INCR	r0x1043,W
     0029 0D03                      1- 2607     	BTRSC	STATUS,2
                                    1- 2608     	MGOTO	_00008_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2609     	BANKSEL	r0x103D
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 03rr                      1- 2610     	ADDAR	r0x103D,F
                                    1- 2611     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 2612     ;;unsigned compare: left >= lit (0x5=5), size=1
     002D                           1- 2613     _00008_DS_:
                                    1- 2614     	.line	297, "main.c"; 	if(i>4)
     002D 2105                      1- 2615     	MOVIA	0x05
                                    1- 2616     	BANKSEL	r0x103F
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 04rr                      1- 2617     	SUBAR	r0x103F,W
     0030 0803                      1- 2618     	BTRSS	STATUS,0
                                    1- 2619     	MGOTO	_00009_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2620     	.line	298, "main.c"; 	aNub--;
     0032 21FF                      1- 2621     	MOVIA	0xff
                                    1- 2622     	BANKSEL	r0x103E
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 03rr                      1- 2623     	ADDAR	r0x103E,F
     0035 0C03                      1- 2624     	BTRSC	STATUS,0
                                    1- 2625     	MGOTO	_00009_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2626     	BANKSEL	r0x103D
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 06rr                      1- 2627     	DECR	r0x103D,F
     0039                           1- 2628     _00009_DS_:
                                    1- 2629     	.line	299, "main.c"; 	aNub += 3;
     0039 2103                      1- 2630     	MOVIA	0x03
                                    1- 2631     	BANKSEL	r0x103E
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 03rr                      1- 2632     	ADDAR	r0x103E,F
     003C 0803                      1- 2633     	BTRSS	STATUS,0
                                    1- 2634     	MGOTO	_00010_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2635     	BANKSEL	r0x103D
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 05rr                      1- 2636     	INCR	r0x103D,F
     0040                           1- 2637     _00010_DS_:
                                    1- 2638     	.line	294, "main.c"; 	for(i=0;i<nub;i++)
                                    1- 2639     	BANKSEL	r0x103F
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 05rr                      1- 2640     	INCR	r0x103F,F
                                    1- 2641     	MGOTO	_00253_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
     0043                           1- 2642     _00251_DS_:
                                    1- 2643     	.line	302, "main.c"; 	randNub = aNub%8 +1;
     0043 2107                      1- 2644     	MOVIA	0x07
                                    1- 2645     	BANKSEL	r0x103E
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 10rr                      1- 2646     	ANDAR	r0x103E,F
                                    1- 2647     	BANKSEL	r0x103D
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 02rr                      1- 2648     	CLRR	r0x103D
                                    1- 2649     	BANKSEL	r0x103E
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 01rr                      1- 2650     	MOVR	r0x103E,W
                                    1- 2651     	BANKSEL	r0x103C
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 00rr                      1- 2652     	MOVAR	r0x103C
     004C 05rr                      1- 2653     	INCR	r0x103C,W
                                    1- 2654     	BANKSEL	_randNub
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 00rr                      1- 2655     	MOVAR	_randNub
                                    1- 2656     	.line	303, "main.c"; 	}
                                    1- 2657     	RETURN	
     004F 0010                      3-   40 m1      ret
                                    1- 2658     ; exit point of _rankNub
                                    1- 2660     ;***
                                    1- 2661     ;  pBlock Stats: dbName = C
                                    1- 2662     ;***
                                    1- 2663     ;has an exit
                                    1- 2664     ;functions called:
                                    1- 2665     ;   _RByte
                                    1- 2666     ;   __gptrput1
                                    1- 2667     ;   _RByte
                                    1- 2668     ;   __gptrput1
                                    1- 2669     ;5 compiler assigned registers:
                                    1- 2670     ;   r0x1044
                                    1- 2671     ;   r0x1045
                                    1- 2672     ;   STK02
                                    1- 2673     ;   STK01
                                    1- 2674     ;   STK00
                                    1- 2675     ;; Starting pCode block
                                    1- 2676     .segment "code"; module=main, function=_revData
     0000                           1- 2678     _revData:
                                    1- 2679     ; 2 exit points
                                    1- 2680     	.line	220, "main.c"; 	if(REC_FLAG == 0 && (PORTA & 0x04) == 0)
                                    1- 2681     	BANKSEL	_REC_FLAG
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2682     	MOVR	_REC_FLAG,W
     0002 0903                      1- 2683     	BTRSS	STATUS,2
                                    1- 2684     	MGOTO	_00231_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2685     	BANKSEL	_PORTA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 0Drr                      1- 2686     	BTRSC	_PORTA,2
                                    1- 2687     	MGOTO	_00231_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2688     	.line	222, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1;
     0007 2109                      1- 2689     	MOVIA	0x09
     0008 00rr                      1- 2690     	MOVAR	_INTE
                                    1- 2691     	.line	223, "main.c"; 	REC_FLAG = 1;
     0009 2101                      1- 2692     	MOVIA	0x01
                                    1- 2693     	BANKSEL	_REC_FLAG
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 00rr                      1- 2694     	MOVAR	_REC_FLAG
                                    1- 2695     	.line	224, "main.c"; 	if(!SEND_FLAG)
                                    1- 2696     	BANKSEL	_SEND_FLAG
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1- 2697     	MOVR	_SEND_FLAG,W
     000E 0903                      1- 2698     	BTRSS	STATUS,2
                                    1- 2699     	MGOTO	_00228_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2700     	.line	226, "main.c"; 	recData = RByte();
                                    1- 2701     	MCALL	_RByte
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2702     	BANKSEL	_recData
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1- 2703     	MOVAR	_recData
                                    1- 2704     	.line	227, "main.c"; 	revList[index] = recData;
                                    1- 2705     	BANKSEL	_index
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2706     	MOVR	_index,W
     0015 25rr                      1- 2707     	ADDIA	(_revList + 0)
                                    1- 2708     	BANKSEL	r0x1044
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 2709     	MOVAR	r0x1044
     0018 21rr                      1- 2710     	MOVIA	((_revList + 0) >> 8) & 0xff
     0019 0C03                      1- 2711     	BTRSC	STATUS,0
     001A 2501                      1- 2712     	ADDIA	0x01
                                    1- 2713     	BANKSEL	r0x1045
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 2714     	MOVAR	r0x1045
                                    1- 2715     	BANKSEL	_recData
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 2716     	MOVR	_recData,W
     001F 00rr                      1- 2717     	MOVAR	STK02
                                    1- 2718     	BANKSEL	r0x1044
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 2719     	MOVR	r0x1044,W
     0022 00rr                      1- 2720     	MOVAR	STK01
                                    1- 2721     	BANKSEL	r0x1045
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 01rr                      1- 2722     	MOVR	r0x1045,W
     0025 00rr                      1- 2723     	MOVAR	STK00
     0026 2100                      1- 2724     	MOVIA	0x00
                                    1- 2725     	MCALL	__gptrput1
     0027 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2726     	.line	228, "main.c"; 	if(++index > 5)
                                    1- 2727     	BANKSEL	_index
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 05rr                      1- 2728     	INCR	_index,F
                                    1- 2729     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2730     ;;unsigned compare: left >= lit (0x6=6), size=1
     002A 2106                      1- 2731     	MOVIA	0x06
     002B 04rr                      1- 2732     	SUBAR	_index,W
     002C 0803                      1- 2733     	BTRSS	STATUS,0
                                    1- 2734     	MGOTO	_00229_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2735     	.line	229, "main.c"; 	index = 0;
     002E 02rr                      1- 2736     	CLRR	_index
                                    1- 2737     	MGOTO	_00229_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
     0030                           1- 2738     _00228_DS_:
                                    1- 2739     	.line	233, "main.c"; 	REC_FLAG = 0;
                                    1- 2740     	BANKSEL	_REC_FLAG
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 02rr                      1- 2741     	CLRR	_REC_FLAG
     0032                           1- 2742     _00229_DS_:
                                    1- 2743     	.line	235, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0032 210B                      1- 2744     	MOVIA	0x0b
     0033 00rr                      1- 2745     	MOVAR	_INTE
     0034                           1- 2746     _00231_DS_:
                                    1- 2747     	.line	239, "main.c"; 	uartFlag = 0;
                                    1- 2748     	BANKSEL	_uartFlag
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 02rr                      1- 2749     	CLRR	_uartFlag
                                    1- 2750     	.line	240, "main.c"; 	}
                                    1- 2751     	RETURN	
     0036 0010                      3-   40 m1      ret
                                    1- 2752     ; exit point of _revData
                                    1- 2755     ;	code size estimation:
                                    1- 2756     ;	 1056+  302 =  1358 instructions ( 3320 byte)
                                    1- 2758     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00800543
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8a054d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A054D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
