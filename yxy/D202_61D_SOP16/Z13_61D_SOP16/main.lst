
                    Nyquest Technology Co., Ltd.

NYASM 2.27

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B061D,c=on
                                    1-    9     	#include "ny8b061d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	__mulint
                                    1-   15     	extern	__divuint
                                    1-   16     	extern	_PORTAbits
                                    1-   17     	extern	_PORTBbits
                                    1-   18     	extern	_PCONbits
                                    1-   19     	extern	_BWUCONbits
                                    1-   20     	extern	_ABPLCONbits
                                    1-   21     	extern	_BPHCONbits
                                    1-   22     	extern	_INTEbits
                                    1-   23     	extern	_INTFbits
                                    1-   24     	extern	_ADMDbits
                                    1-   25     	extern	_ADRbits
                                    1-   26     	extern	_ADVREFHbits
                                    1-   27     	extern	_ADCRbits
                                    1-   28     	extern	_AWUCONbits
                                    1-   29     	extern	_PACONbits
                                    1-   30     	extern	_INTEDGbits
                                    1-   31     	extern	_RFCbits
                                    1-   32     	extern	_INTE2bits
                                    1-   33     	extern	_INDF
                                    1-   34     	extern	_TMR0
                                    1-   35     	extern	_PCL
                                    1-   36     	extern	_STATUS
                                    1-   37     	extern	_FSR
                                    1-   38     	extern	_PORTA
                                    1-   39     	extern	_PORTB
                                    1-   40     	extern	_PCON
                                    1-   41     	extern	_BWUCON
                                    1-   42     	extern	_PCHBUF
                                    1-   43     	extern	_ABPLCON
                                    1-   44     	extern	_BPHCON
                                    1-   45     	extern	_INTE
                                    1-   46     	extern	_INTF
                                    1-   47     	extern	_ADMD
                                    1-   48     	extern	_ADR
                                    1-   49     	extern	_ADD
                                    1-   50     	extern	_ADVREFH
                                    1-   51     	extern	_ADCR
                                    1-   52     	extern	_AWUCON
                                    1-   53     	extern	_PACON
                                    1-   54     	extern	_INTEDG
                                    1-   55     	extern	_TMRH
                                    1-   56     	extern	_RFC
                                    1-   57     	extern	_TM3RH
                                    1-   58     	extern	_INTE2
                                    1-   59     	extern	_TMR1
                                    1-   60     	extern	_T1CR1
                                    1-   61     	extern	_T1CR2
                                    1-   62     	extern	_PWM1DUTY
                                    1-   63     	extern	_PS1CV
                                    1-   64     	extern	_BZ1CR
                                    1-   65     	extern	_IRCR
                                    1-   66     	extern	_TBHP
                                    1-   67     	extern	_TBHD
                                    1-   68     	extern	_TMR2
                                    1-   69     	extern	_T2CR1
                                    1-   70     	extern	_T2CR2
                                    1-   71     	extern	_PWM2DUTY
                                    1-   72     	extern	_PS2CV
                                    1-   73     	extern	_BZ2CR
                                    1-   74     	extern	_OSCCR
                                    1-   75     	extern	_TMR3
                                    1-   76     	extern	_T3CR1
                                    1-   77     	extern	_T3CR2
                                    1-   78     	extern	_PWM3DUTY
                                    1-   79     	extern	_PS3CV
                                    1-   80     	extern	_BZ3CR
                                    1-   81     	extern	_IOSTA
                                    1-   82     	extern	_IOSTB
                                    1-   83     	extern	_APHCON
                                    1-   84     	extern	_PS0CV
                                    1-   85     	extern	_BODCON
                                    1-   86     	extern	_PCON1
                                    1-   87     	extern	_T0MD
                                    1-   88     	extern	___sdcc_saved_fsr
                                    1-   89     	extern	___sdcc_saved_stk00
                                    1-   90     	extern	___sdcc_saved_stk01
                                    1-   91     	extern	__nyc_ny8_startup
                                    1-   92     ;--------------------------------------------------------
                                    1-   93     ; global declarations
                                    1-   94     ;--------------------------------------------------------
                                    1-   95     	extern	_F_AIN4_Convert
                                    1-   96     	extern	_F_AIN3_Convert
                                    1-   97     	extern	_F_AIN1_Convert
                                    1-   98     	extern	_F_VDD_Convert
                                    1-   99     	extern	_delay
                                    1-  100     	extern	_F_wait_eoc
                                    1-  101     	extern	_modeLedShow
                                    1-  102     	extern	_initAD
                                    1-  103     	extern	_keyRead
                                    1-  104     	extern	_checkHotAD
                                    1-  105     	extern	_checkTouchAD
                                    1-  106     	extern	_checkKeyAD
                                    1-  107     	extern	_checkBAT
                                    1-  108     	extern	_PWM2Start
                                    1-  109     	extern	_PWM1Start
                                    1-  110     	extern	_ADKeyCtr
                                    1-  111     	extern	_startCtr
                                    1-  112     	extern	_workCtr
                                    1-  113     	extern	_chrgCtr
                                    1-  114     	extern	_LedInput
                                    1-  115     	extern	_initSys
                                    1-  116     	extern	_isr
                                    1-  117     	extern	_main
                                    1-  118     	extern	_LEDMODE4
                                    1-  119     	extern	_LEDMODE3
                                    1-  120     	extern	_LEDMODE2
                                    1-  121     	extern	_LEDMODE1
                                    1-  122     	extern	_BATHIGHT
                                    1-  123     	extern	_BATLOW
                                    1-  124     	extern	_POWERHIGHT
                                    1-  125     	extern	_POWERMID
                                    1-  126     	extern	_POWERLOW
                                    1-  127     	extern	_Status
                                    1-  128     	extern	_intCount
                                    1-  129     	extern	_modeStep
                                    1-  130     	extern	_keyNub
                                    1-  131     	extern	_R_VDD_DATA
                                    1-  132     	extern	_R_VDD_DATA_LB
                                    1-  133     	extern	_R_AIN1_DATA
                                    1-  134     	extern	_R_AIN1_DATA_LB
                                    1-  135     	extern	_R_AIN3_DATA
                                    1-  136     	extern	_R_AIN3_DATA_LB
                                    1-  137     	extern	_R_AIN4_DATA
                                    1-  138     	extern	_R_AIN4_DATA_LB
                                    1-  139     	extern	_keyCount
                                    1-  140     	extern	_powerStep
                                    1-  141     	extern	_chrgLedStep
                                    1-  142     	extern	_timeCount
                                    1-  143     	extern	_startStep
                                    1-  144     	extern	_checkTime
                                    1-  146     	extern PSAVE
                                    1-  147     	extern SSAVE
                                    1-  148     	extern WSAVE
                                    1-  149     	extern STK02
                                    1-  150     	extern STK01
                                    1-  151     	extern STK00
                                    1-  153     .segment "uninit", 0x20000020
 20000020                           1-  154     PSAVE:
                                    1-  155     	.res 1
 20000021                           1-  156     SSAVE:
                                    1-  157     	.res 1
 20000022                           1-  158     WSAVE:
                                    1-  159     	.res 1
 20000023                           1-  160     STK02:
                                    1-  161     	.res 1
 20000024                           1-  162     STK01:
                                    1-  163     	.res 1
 20000025                           1-  164     STK00:
                                    1-  165     	.res 1
                                    1-  167     ;--------------------------------------------------------
                                    1-  168     ; global definitions
                                    1-  169     ;--------------------------------------------------------
                                    1-  170     .segment "uninit"
     0000                           1-  171     _R_VDD_DATA:
                                    1-  172     	.res	2
                                    1-  175     .segment "uninit"
     0000                           1-  176     _R_VDD_DATA_LB:
                                    1-  177     	.res	1
                                    1-  180     .segment "uninit"
     0000                           1-  181     _R_AIN1_DATA:
                                    1-  182     	.res	2
                                    1-  185     .segment "uninit"
     0000                           1-  186     _R_AIN1_DATA_LB:
                                    1-  187     	.res	1
                                    1-  190     .segment "uninit"
     0000                           1-  191     _R_AIN3_DATA:
                                    1-  192     	.res	2
                                    1-  195     .segment "uninit"
     0000                           1-  196     _R_AIN3_DATA_LB:
                                    1-  197     	.res	1
                                    1-  200     .segment "uninit"
     0000                           1-  201     _R_AIN4_DATA:
                                    1-  202     	.res	2
                                    1-  205     .segment "uninit"
     0000                           1-  206     _R_AIN4_DATA_LB:
                                    1-  207     	.res	1
                                    1-  210     .segment "uninit"
     0000                           1-  211     _keyCount:
                                    1-  212     	.res	1
                                    1-  215     ;--------------------------------------------------------
                                    1-  216     ; absolute symbol definitions
                                    1-  217     ;--------------------------------------------------------
                                    1-  218     ;--------------------------------------------------------
                                    1-  219     ; compiler-defined variables
                                    1-  220     ;--------------------------------------------------------
                                    1-  221     .segment "uninit"
     0000                           1-  222     r0x1032:
                                    1-  223     	.res	1
                                    1-  224     .segment "uninit"
     0000                           1-  225     r0x1033:
                                    1-  226     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     r0x1049:
                                    1-  229     	.res	1
                                    1-  230     .segment "uninit"
     0000                           1-  231     r0x1048:
                                    1-  232     	.res	1
                                    1-  233     .segment "uninit"
     0000                           1-  234     r0x1047:
                                    1-  235     	.res	1
                                    1-  236     .segment "uninit"
     0000                           1-  237     r0x1046:
                                    1-  238     	.res	1
                                    1-  239     .segment "uninit"
     0000                           1-  240     r0x1045:
                                    1-  241     	.res	1
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x1043:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x1044:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x103D:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x1040:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x103B:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x103C:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x1037:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x1038:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x1034:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1018:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1019:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x102C:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x102D:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x102E:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x1031:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x1026:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x1027:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x1028:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x102B:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x1020:
                                    1-  301     	.res	1
                                    1-  302     .segment "uninit"
     0000                           1-  303     r0x1021:
                                    1-  304     	.res	1
                                    1-  305     .segment "uninit"
     0000                           1-  306     r0x1022:
                                    1-  307     	.res	1
                                    1-  308     .segment "uninit"
     0000                           1-  309     r0x1025:
                                    1-  310     	.res	1
                                    1-  311     .segment "uninit"
     0000                           1-  312     r0x101A:
                                    1-  313     	.res	1
                                    1-  314     .segment "uninit"
     0000                           1-  315     r0x101B:
                                    1-  316     	.res	1
                                    1-  317     .segment "uninit"
     0000                           1-  318     r0x101C:
                                    1-  319     	.res	1
                                    1-  320     .segment "uninit"
     0000                           1-  321     r0x101F:
                                    1-  322     	.res	1
                                    1-  323     ;--------------------------------------------------------
                                    1-  324     ; initialized data
                                    1-  325     ;--------------------------------------------------------
                                    1-  327     .segment "idata"
     0000                           1-  328     _Status:
     0000 0000                      1-  329     	dw	0x00
                                    1-  333     .segment "idata"
     0000                           1-  334     _intCount:
     0000 0000                      1-  335     	dw	0x00
                                    1-  339     .segment "idata"
     0000                           1-  340     _modeStep:
     0000 0000                      1-  341     	dw	0x00
                                    1-  345     .segment "idata"
     0000                           1-  346     _keyNub:
     0000 0000                      1-  347     	dw	0x00
                                    1-  351     .segment "idata"
     0000                           1-  352     _powerStep:
     0000 0000                      1-  353     	dw	0x00
                                    1-  357     .segment "idata"
     0000                           1-  358     _chrgLedStep:
     0000 0000                      1-  359     	dw	0x00
                                    1-  363     .segment "idata"
     0000                           1-  364     _timeCount:
     0000 0000                      1-  365     	dw	0x00
                                    1-  369     .segment "idata"
     0000                           1-  370     _startStep:
     0000 0000                      1-  371     	dw	0x00
                                    1-  375     .segment "idata"
     0000                           1-  376     _checkTime:
     0000 0000                      1-  377     	dw	0x00
                                    1-  380     ;--------------------------------------------------------
                                    1-  381     ; overlayable items in internal ram 
                                    1-  382     ;--------------------------------------------------------
                                    1-  383     ;	udata_ovr
                                    1-  384     ;--------------------------------------------------------
                                    1-  385     ; reset vector 
                                    1-  386     ;--------------------------------------------------------
                                    1-  387     ORG	0x0000
     0000 3rrr                      1-  388     	LGOTO	__nyc_ny8_startup
                                    1-  389     ;--------------------------------------------------------
                                    1-  390     ; interrupt and initialization code
                                    1-  391     ;--------------------------------------------------------
                                    1-  392     ORG 0x0008
     0008 3rrr                      1-  393     	lgoto	__sdcc_interrupt
                                    1-  395     .segment "code"
     0000                           1-  396     __sdcc_interrupt:
                                    1-  397     ;***
                                    1-  398     ;  pBlock Stats: dbName = I
                                    1-  399     ;***
                                    1-  400     ;2 compiler assigned registers:
                                    1-  401     ;   STK00
                                    1-  402     ;   STK01
                                    1-  403     ;; Starting pCode block
     0000                           1-  404     _isr:
                                    1-  405     ; 0 exit points
                                    1-  406     	.line	86, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  407     	MOVAR	WSAVE
     0001 1503                      1-  408     	SWAPR	STATUS,W
     0002 0283                      1-  409     	CLRR	STATUS
     0003 00rr                      1-  410     	MOVAR	SSAVE
     0004 010A                      1-  411     	MOVR	PCHBUF,W
     0005 028A                      1-  412     	CLRR	PCHBUF
     0006 00rr                      1-  413     	MOVAR	PSAVE
     0007 0104                      1-  414     	MOVR	FSR,W
     0008 00rr                      1-  415     	MOVAR	___sdcc_saved_fsr
     0009 01rr                      1-  416     	MOVR	STK00,W
     000A 00rr                      1-  417     	MOVAR	___sdcc_saved_stk00
     000B 01rr                      1-  418     	MOVR	STK01,W
     000C 00rr                      1-  419     	MOVAR	___sdcc_saved_stk01
                                    1-  420     	.line	88, "main.c"; 	if(INTFbits.T0IF)
     000D 08rr                      1-  421     	BTRSS	_INTFbits,0
     000E 3rrr                      1-  422     	LGOTO	_00108_DS_
                                    1-  423     	.line	90, "main.c"; 	TMR0 += 55;
     000F 2137                      1-  424     	MOVIA	0x37
     0010 03rr                      1-  425     	ADDAR	_TMR0,F
                                    1-  426     	.line	92, "main.c"; 	if(++intCount >= 100)
     0011 05rr                      1-  427     	INCR	_intCount,F
                                    1-  428     ;;unsigned compare: left < lit (0x64=100), size=1
     0012 2164                      1-  429     	MOVIA	0x64
     0013 04rr                      1-  430     	SUBAR	_intCount,W
     0014 0803                      1-  431     	BTRSS	STATUS,0
     0015 3rrr                      1-  432     	LGOTO	_00108_DS_
                                    1-  433     	.line	94, "main.c"; 	IntFlag = 1;
     0016 18rr                      1-  434     	BSR	_Status,0
                                    1-  435     	.line	95, "main.c"; 	intCount = 0;
     0017 02rr                      1-  436     	CLRR	_intCount
     0018                           1-  437     _00108_DS_:
                                    1-  438     	.line	101, "main.c"; 	if(INTFbits.PABIF)
     0018 08rr                      1-  439     	BTRSS	_INTFbits,1
     0019 3rrr                      1-  440     	LGOTO	_00110_DS_
                                    1-  441     	.line	103, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     001A 21FD                      1-  442     	MOVIA	0xfd
     001B 00rr                      1-  443     	MOVAR	_INTF
     001C                           1-  444     _00110_DS_:
                                    1-  445     	.line	106, "main.c"; 	INTF = 0;
     001C 02rr                      1-  446     	CLRR	_INTF
                                    1-  447     	.line	108, "main.c"; 	}
     001D 01rr                      1-  448     	MOVR	___sdcc_saved_stk01,W
     001E 00rr                      1-  449     	MOVAR	STK01
     001F 01rr                      1-  450     	MOVR	___sdcc_saved_stk00,W
     0020 00rr                      1-  451     	MOVAR	STK00
     0021 01rr                      1-  452     	MOVR	___sdcc_saved_fsr,W
     0022 0084                      1-  453     	MOVAR	FSR
     0023 01rr                      1-  454     	MOVR	PSAVE,W
     0024 008A                      1-  455     	MOVAR	PCHBUF
     0025 0283                      1-  456     	CLRR	STATUS
     0026 15rr                      1-  457     	SWAPR	SSAVE,W
     0027 0083                      1-  458     	MOVAR	STATUS
     0028 15rr                      1-  459     	SWAPR	WSAVE,F
     0029 15rr                      1-  460     	SWAPR	WSAVE,W
     002A                           1-  461     END_OF_INTERRUPT:
     002A 0011                      1-  462     	RETIE	
                                    1-  464     ;--------------------------------------------------------
                                    1-  465     ; code
                                    1-  466     ;--------------------------------------------------------
                                    1-  467     ;***
                                    1-  468     ;  pBlock Stats: dbName = M
                                    1-  469     ;***
                                    1-  470     ;has an exit
                                    1-  471     ;functions called:
                                    1-  472     ;   _initSys
                                    1-  473     ;   _initAD
                                    1-  474     ;   _modeLedShow
                                    1-  475     ;   _chrgCtr
                                    1-  476     ;   _ADKeyCtr
                                    1-  477     ;   _workCtr
                                    1-  478     ;   _LedInput
                                    1-  479     ;   _startCtr
                                    1-  480     ;   _initSys
                                    1-  481     ;   _initAD
                                    1-  482     ;   _modeLedShow
                                    1-  483     ;   _chrgCtr
                                    1-  484     ;   _ADKeyCtr
                                    1-  485     ;   _workCtr
                                    1-  486     ;   _LedInput
                                    1-  487     ;   _startCtr
                                    1-  488     ;; Starting pCode block
                                    1-  489     .segment "code"; module=main, function=_main
     0000                           1-  491     _main:
                                    1-  492     ; 2 exit points
                                    1-  493     	.line	139, "main.c"; 	initSys();
     0000 2rrr                      1-  494     	LCALL	_initSys
                                    1-  495     	.line	140, "main.c"; 	initAD();
     0001 2rrr                      1-  496     	LCALL	_initAD
     0002                           1-  497     _00130_DS_:
                                    1-  498     	.line	143, "main.c"; 	CLRWDT();
     0002 0002                      1-  499     	clrwdt
                                    1-  500     	.line	144, "main.c"; 	modeLedShow();
     0003 2rrr                      1-  501     	LCALL	_modeLedShow
                                    1-  502     	.line	145, "main.c"; 	if(!IntFlag)
     0004 08rr                      1-  503     	BTRSS	_Status,0
     0005 3rrr                      1-  504     	LGOTO	_00130_DS_
                                    1-  505     	.line	147, "main.c"; 	IntFlag = 0;
     0006 1Crr                      1-  506     	BCR	_Status,0
                                    1-  507     	.line	148, "main.c"; 	chrgCtr();
     0007 2rrr                      1-  508     	LCALL	_chrgCtr
                                    1-  509     	.line	149, "main.c"; 	if(chrgFlag == 0)
     0008 0Drr                      1-  510     	BTRSC	_Status,3
     0009 3rrr                      1-  511     	LGOTO	_00130_DS_
                                    1-  512     	.line	151, "main.c"; 	ADKeyCtr();
     000A 2rrr                      1-  513     	LCALL	_ADKeyCtr
                                    1-  514     	.line	152, "main.c"; 	if(startLedFlag == 0)
     000B 0Drr                      1-  515     	BTRSC	_Status,2
     000C 3rrr                      1-  516     	LGOTO	_00125_DS_
                                    1-  517     	.line	154, "main.c"; 	if(modeStep > 0)
     000D 01rr                      1-  518     	MOVR	_modeStep,W
     000E 0D03                      1-  519     	BTRSC	STATUS,2
     000F 3rrr                      1-  520     	LGOTO	_00122_DS_
                                    1-  521     	.line	155, "main.c"; 	workCtr();
     0010 2rrr                      1-  522     	LCALL	_workCtr
     0011 3rrr                      1-  523     	LGOTO	_00130_DS_
     0012                           1-  524     _00122_DS_:
                                    1-  525     	.line	158, "main.c"; 	LedInput();
     0012 2rrr                      1-  526     	LCALL	_LedInput
                                    1-  527     	.line	159, "main.c"; 	T1CR1 = C_TMR1_En;
     0013 2101                      1-  528     	MOVIA	0x01
     0014 00rr                      1-  529     	SFUN	_T1CR1
                                    1-  530     	.line	160, "main.c"; 	PORTB &= 0xFE;
     0015 1Crr                      1-  531     	BCR	_PORTB,0
                                    1-  532     	.line	161, "main.c"; 	HOTOFF();
     0016 1Drr                      1-  533     	BCR	_PORTB,2
                                    1-  534     	.line	162, "main.c"; 	startStep = 0;
     0017 02rr                      1-  535     	CLRR	_startStep
                                    1-  536     	.line	163, "main.c"; 	startLedFlag = 0;
     0018 1Drr                      1-  537     	BCR	_Status,2
                                    1-  538     	.line	164, "main.c"; 	ORANGEOFF();
     0019 1Err                      1-  539     	BCR	_PORTB,4
                                    1-  540     	.line	165, "main.c"; 	BLUEOFF();
     001A 1Err                      1-  541     	BCR	_PORTB,5
                                    1-  542     	.line	166, "main.c"; 	REDOFF();
     001B 1Crr                      1-  543     	BCR	_PORTA,0
     001C 3rrr                      1-  544     	LGOTO	_00130_DS_
     001D                           1-  545     _00125_DS_:
                                    1-  546     	.line	171, "main.c"; 	startCtr();
     001D 2rrr                      1-  547     	LCALL	_startCtr
     001E 3rrr                      1-  548     	LGOTO	_00130_DS_
                                    1-  549     	.line	175, "main.c"; 	}
                                    1-  550     	RETURN	
     001F 0010                      3-   26 m1      ret
                                    1-  551     ; exit point of _main
                                    1-  553     ;***
                                    1-  554     ;  pBlock Stats: dbName = C
                                    1-  555     ;***
                                    1-  556     ;has an exit
                                    1-  557     ;functions called:
                                    1-  558     ;   _delay
                                    1-  559     ;   _F_wait_eoc
                                    1-  560     ;   _delay
                                    1-  561     ;   _F_wait_eoc
                                    1-  562     ;6 compiler assigned registers:
                                    1-  563     ;   r0x101A
                                    1-  564     ;   r0x101B
                                    1-  565     ;   r0x101C
                                    1-  566     ;   r0x101D
                                    1-  567     ;   r0x101E
                                    1-  568     ;   r0x101F
                                    1-  569     ;; Starting pCode block
                                    1-  570     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1-  572     ;local variable name mapping:
     0000                           1-  575     _F_AIN4_Convert:
                                    1-  576     ; 2 exit points
                                    1-  577     	.line	780, "main.c"; 	void F_AIN4_Convert(char count)
     0000 00rr                      1-  578     	MOVAR	r0x101A
                                    1-  579     	.line	782, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
     0001 02rr                      1-  580     	CLRR	_R_AIN4_DATA_LB
     0002 02rr                      1-  581     	CLRR	_R_AIN4_DATA
     0003 02rr                      1-  582     	CLRR	(_R_AIN4_DATA + 1)
                                    1-  583     	.line	784, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0004 2194                      1-  584     	MOVIA	0x94
     0005 00rr                      1-  585     	MOVAR	_ADMD
                                    1-  586     	.line	785, "main.c"; 	delay(200);	
     0006 21C8                      1-  587     	MOVIA	0xc8
     0007 2rrr                      1-  588     	LCALL	_delay
                                    1-  589     	.line	786, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1-  590     	MOVIA	0x01
     0009 00rr                      1-  591     	MOVAR	r0x101B
     000A                           1-  592     _00538_DS_:
     000A 01rr                      1-  593     	MOVR	r0x101B,W
     000B 04rr                      1-  594     	SUBAR	r0x101A,W
     000C 0803                      1-  595     	BTRSS	STATUS,0
     000D 3rrr                      1-  596     	LGOTO	_00540_DS_
                                    1-  597     	.line	788, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000E 1Brr                      1-  598     	BSR	_ADMDbits,6
                                    1-  599     	.line	789, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     000F 2rrr                      1-  600     	LCALL	_F_wait_eoc
                                    1-  601     	.line	790, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0010 210F                      1-  602     	MOVIA	0x0f
     0011 10rr                      1-  603     	ANDAR	_ADR,W
                                    1-  604     ;;3	MOVAR	r0x101C
     0012 03rr                      1-  605     	ADDAR	_R_AIN4_DATA_LB,F
                                    1-  606     	.line	791, "main.c"; 	R_AIN4_DATA    += ADD; 
     0013 01rr                      1-  607     	MOVR	_ADD,W
     0014 00rr                      1-  608     	MOVAR	r0x101C
                                    1-  609     ;;1	CLRR	r0x101D
                                    1-  610     ;;116	MOVR	r0x101C,W
                                    1-  611     ;;114	MOVAR	r0x101E
     0015 2100                      1-  612     	MOVIA	0x00
     0016 00rr                      1-  613     	MOVAR	r0x101F
                                    1-  614     ;;115	MOVR	r0x101E,W
     0017 01rr                      1-  615     	MOVR	r0x101C,W
     0018 03rr                      1-  616     	ADDAR	_R_AIN4_DATA,F
     0019 01rr                      1-  617     	MOVR	r0x101F,W
     001A 0C03                      1-  618     	BTRSC	STATUS,0
     001B 16rr                      1-  619     	INCRSZ	r0x101F,W
     001C 03rr                      1-  620     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1-  621     	.line	786, "main.c"; 	for(i=1;i<=count;i++)
     001D 05rr                      1-  622     	INCR	r0x101B,F
     001E 3rrr                      1-  623     	LGOTO	_00538_DS_
     001F                           1-  624     _00540_DS_:
                                    1-  625     	.line	793, "main.c"; 	}
                                    1-  626     	RETURN	
     001F 0010                      3-   26 m1      ret
                                    1-  627     ; exit point of _F_AIN4_Convert
                                    1-  629     ;***
                                    1-  630     ;  pBlock Stats: dbName = C
                                    1-  631     ;***
                                    1-  632     ;has an exit
                                    1-  633     ;functions called:
                                    1-  634     ;   _delay
                                    1-  635     ;   _F_wait_eoc
                                    1-  636     ;   _delay
                                    1-  637     ;   _F_wait_eoc
                                    1-  638     ;6 compiler assigned registers:
                                    1-  639     ;   r0x1020
                                    1-  640     ;   r0x1021
                                    1-  641     ;   r0x1022
                                    1-  642     ;   r0x1023
                                    1-  643     ;   r0x1024
                                    1-  644     ;   r0x1025
                                    1-  645     ;; Starting pCode block
                                    1-  646     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1-  648     ;local variable name mapping:
     0000                           1-  651     _F_AIN3_Convert:
                                    1-  652     ; 2 exit points
                                    1-  653     	.line	764, "main.c"; 	void F_AIN3_Convert(char count)
     0000 00rr                      1-  654     	MOVAR	r0x1020
                                    1-  655     	.line	766, "main.c"; 	R_AIN3_DATA=R_AIN3_DATA_LB=0x00;   
     0001 02rr                      1-  656     	CLRR	_R_AIN3_DATA_LB
     0002 02rr                      1-  657     	CLRR	_R_AIN3_DATA
     0003 02rr                      1-  658     	CLRR	(_R_AIN3_DATA + 1)
                                    1-  659     	.line	768, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0004 2193                      1-  660     	MOVIA	0x93
     0005 00rr                      1-  661     	MOVAR	_ADMD
                                    1-  662     	.line	769, "main.c"; 	delay(200);	
     0006 21C8                      1-  663     	MOVIA	0xc8
     0007 2rrr                      1-  664     	LCALL	_delay
                                    1-  665     	.line	770, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1-  666     	MOVIA	0x01
     0009 00rr                      1-  667     	MOVAR	r0x1021
     000A                           1-  668     _00529_DS_:
     000A 01rr                      1-  669     	MOVR	r0x1021,W
     000B 04rr                      1-  670     	SUBAR	r0x1020,W
     000C 0803                      1-  671     	BTRSS	STATUS,0
     000D 3rrr                      1-  672     	LGOTO	_00531_DS_
                                    1-  673     	.line	772, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000E 1Brr                      1-  674     	BSR	_ADMDbits,6
                                    1-  675     	.line	773, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     000F 2rrr                      1-  676     	LCALL	_F_wait_eoc
                                    1-  677     	.line	774, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0010 210F                      1-  678     	MOVIA	0x0f
     0011 10rr                      1-  679     	ANDAR	_ADR,W
                                    1-  680     ;;3	MOVAR	r0x1022
     0012 03rr                      1-  681     	ADDAR	_R_AIN3_DATA_LB,F
                                    1-  682     	.line	775, "main.c"; 	R_AIN3_DATA    += ADD; 
     0013 01rr                      1-  683     	MOVR	_ADD,W
     0014 00rr                      1-  684     	MOVAR	r0x1022
                                    1-  685     ;;1	CLRR	r0x1023
                                    1-  686     ;;113	MOVR	r0x1022,W
                                    1-  687     ;;111	MOVAR	r0x1024
     0015 2100                      1-  688     	MOVIA	0x00
     0016 00rr                      1-  689     	MOVAR	r0x1025
                                    1-  690     ;;112	MOVR	r0x1024,W
     0017 01rr                      1-  691     	MOVR	r0x1022,W
     0018 03rr                      1-  692     	ADDAR	_R_AIN3_DATA,F
     0019 01rr                      1-  693     	MOVR	r0x1025,W
     001A 0C03                      1-  694     	BTRSC	STATUS,0
     001B 16rr                      1-  695     	INCRSZ	r0x1025,W
     001C 03rr                      1-  696     	ADDAR	(_R_AIN3_DATA + 1),F
                                    1-  697     	.line	770, "main.c"; 	for(i=1;i<=count;i++)
     001D 05rr                      1-  698     	INCR	r0x1021,F
     001E 3rrr                      1-  699     	LGOTO	_00529_DS_
     001F                           1-  700     _00531_DS_:
                                    1-  701     	.line	777, "main.c"; 	}
                                    1-  702     	RETURN	
     001F 0010                      3-   26 m1      ret
                                    1-  703     ; exit point of _F_AIN3_Convert
                                    1-  705     ;***
                                    1-  706     ;  pBlock Stats: dbName = C
                                    1-  707     ;***
                                    1-  708     ;has an exit
                                    1-  709     ;functions called:
                                    1-  710     ;   _delay
                                    1-  711     ;   _F_wait_eoc
                                    1-  712     ;   _delay
                                    1-  713     ;   _F_wait_eoc
                                    1-  714     ;6 compiler assigned registers:
                                    1-  715     ;   r0x1026
                                    1-  716     ;   r0x1027
                                    1-  717     ;   r0x1028
                                    1-  718     ;   r0x1029
                                    1-  719     ;   r0x102A
                                    1-  720     ;   r0x102B
                                    1-  721     ;; Starting pCode block
                                    1-  722     .segment "code"; module=main, function=_F_AIN1_Convert
                                    1-  724     ;local variable name mapping:
     0000                           1-  727     _F_AIN1_Convert:
                                    1-  728     ; 2 exit points
                                    1-  729     	.line	748, "main.c"; 	void F_AIN1_Convert(char count)
     0000 00rr                      1-  730     	MOVAR	r0x1026
                                    1-  731     	.line	750, "main.c"; 	R_AIN1_DATA=R_AIN1_DATA_LB=0x00;   
     0001 02rr                      1-  732     	CLRR	_R_AIN1_DATA_LB
     0002 02rr                      1-  733     	CLRR	_R_AIN1_DATA
     0003 02rr                      1-  734     	CLRR	(_R_AIN1_DATA + 1)
                                    1-  735     	.line	752, "main.c"; 	ADMD  = 0x90 | C_ADC_PA1;				// Select AIN6(PB1) pad as ADC input
     0004 2191                      1-  736     	MOVIA	0x91
     0005 00rr                      1-  737     	MOVAR	_ADMD
                                    1-  738     	.line	753, "main.c"; 	delay(200);	
     0006 21C8                      1-  739     	MOVIA	0xc8
     0007 2rrr                      1-  740     	LCALL	_delay
                                    1-  741     	.line	754, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1-  742     	MOVIA	0x01
     0009 00rr                      1-  743     	MOVAR	r0x1027
     000A                           1-  744     _00520_DS_:
     000A 01rr                      1-  745     	MOVR	r0x1027,W
     000B 04rr                      1-  746     	SUBAR	r0x1026,W
     000C 0803                      1-  747     	BTRSS	STATUS,0
     000D 3rrr                      1-  748     	LGOTO	_00522_DS_
                                    1-  749     	.line	756, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000E 1Brr                      1-  750     	BSR	_ADMDbits,6
                                    1-  751     	.line	757, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     000F 2rrr                      1-  752     	LCALL	_F_wait_eoc
                                    1-  753     	.line	758, "main.c"; 	R_AIN1_DATA_LB += ( 0x0F & ADR); 
     0010 210F                      1-  754     	MOVIA	0x0f
     0011 10rr                      1-  755     	ANDAR	_ADR,W
                                    1-  756     ;;3	MOVAR	r0x1028
     0012 03rr                      1-  757     	ADDAR	_R_AIN1_DATA_LB,F
                                    1-  758     	.line	759, "main.c"; 	R_AIN1_DATA    += ADD; 
     0013 01rr                      1-  759     	MOVR	_ADD,W
     0014 00rr                      1-  760     	MOVAR	r0x1028
                                    1-  761     ;;1	CLRR	r0x1029
                                    1-  762     ;;110	MOVR	r0x1028,W
                                    1-  763     ;;108	MOVAR	r0x102A
     0015 2100                      1-  764     	MOVIA	0x00
     0016 00rr                      1-  765     	MOVAR	r0x102B
                                    1-  766     ;;109	MOVR	r0x102A,W
     0017 01rr                      1-  767     	MOVR	r0x1028,W
     0018 03rr                      1-  768     	ADDAR	_R_AIN1_DATA,F
     0019 01rr                      1-  769     	MOVR	r0x102B,W
     001A 0C03                      1-  770     	BTRSC	STATUS,0
     001B 16rr                      1-  771     	INCRSZ	r0x102B,W
     001C 03rr                      1-  772     	ADDAR	(_R_AIN1_DATA + 1),F
                                    1-  773     	.line	754, "main.c"; 	for(i=1;i<=count;i++)
     001D 05rr                      1-  774     	INCR	r0x1027,F
     001E 3rrr                      1-  775     	LGOTO	_00520_DS_
     001F                           1-  776     _00522_DS_:
                                    1-  777     	.line	761, "main.c"; 	}
                                    1-  778     	RETURN	
     001F 0010                      3-   26 m1      ret
                                    1-  779     ; exit point of _F_AIN1_Convert
                                    1-  781     ;***
                                    1-  782     ;  pBlock Stats: dbName = C
                                    1-  783     ;***
                                    1-  784     ;has an exit
                                    1-  785     ;functions called:
                                    1-  786     ;   _delay
                                    1-  787     ;   _F_wait_eoc
                                    1-  788     ;   _delay
                                    1-  789     ;   _F_wait_eoc
                                    1-  790     ;6 compiler assigned registers:
                                    1-  791     ;   r0x102C
                                    1-  792     ;   r0x102D
                                    1-  793     ;   r0x102E
                                    1-  794     ;   r0x102F
                                    1-  795     ;   r0x1030
                                    1-  796     ;   r0x1031
                                    1-  797     ;; Starting pCode block
                                    1-  798     .segment "code"; module=main, function=_F_VDD_Convert
                                    1-  800     ;local variable name mapping:
     0000                           1-  803     _F_VDD_Convert:
                                    1-  804     ; 2 exit points
                                    1-  805     	.line	733, "main.c"; 	void F_VDD_Convert(char count)
     0000 00rr                      1-  806     	MOVAR	r0x102C
                                    1-  807     	.line	735, "main.c"; 	R_VDD_DATA=R_VDD_DATA_LB=0x00;   
     0001 02rr                      1-  808     	CLRR	_R_VDD_DATA_LB
     0002 02rr                      1-  809     	CLRR	_R_VDD_DATA
     0003 02rr                      1-  810     	CLRR	(_R_VDD_DATA + 1)
                                    1-  811     	.line	737, "main.c"; 	ADMD  = 0x90 | C_Quarter_VDD;				// Select AIN6(PB1) pad as ADC input
     0004 219B                      1-  812     	MOVIA	0x9b
     0005 00rr                      1-  813     	MOVAR	_ADMD
                                    1-  814     	.line	738, "main.c"; 	delay(200);	
     0006 21C8                      1-  815     	MOVIA	0xc8
     0007 2rrr                      1-  816     	LCALL	_delay
                                    1-  817     	.line	739, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1-  818     	MOVIA	0x01
     0009 00rr                      1-  819     	MOVAR	r0x102D
     000A                           1-  820     _00511_DS_:
     000A 01rr                      1-  821     	MOVR	r0x102D,W
     000B 04rr                      1-  822     	SUBAR	r0x102C,W
     000C 0803                      1-  823     	BTRSS	STATUS,0
     000D 3rrr                      1-  824     	LGOTO	_00513_DS_
                                    1-  825     	.line	741, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000E 1Brr                      1-  826     	BSR	_ADMDbits,6
                                    1-  827     	.line	742, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     000F 2rrr                      1-  828     	LCALL	_F_wait_eoc
                                    1-  829     	.line	743, "main.c"; 	R_VDD_DATA_LB += ( 0x0F & ADR); 
     0010 210F                      1-  830     	MOVIA	0x0f
     0011 10rr                      1-  831     	ANDAR	_ADR,W
                                    1-  832     ;;3	MOVAR	r0x102E
     0012 03rr                      1-  833     	ADDAR	_R_VDD_DATA_LB,F
                                    1-  834     	.line	744, "main.c"; 	R_VDD_DATA    += ADD; 
     0013 01rr                      1-  835     	MOVR	_ADD,W
     0014 00rr                      1-  836     	MOVAR	r0x102E
                                    1-  837     ;;1	CLRR	r0x102F
                                    1-  838     ;;107	MOVR	r0x102E,W
                                    1-  839     ;;105	MOVAR	r0x1030
     0015 2100                      1-  840     	MOVIA	0x00
     0016 00rr                      1-  841     	MOVAR	r0x1031
                                    1-  842     ;;106	MOVR	r0x1030,W
     0017 01rr                      1-  843     	MOVR	r0x102E,W
     0018 03rr                      1-  844     	ADDAR	_R_VDD_DATA,F
     0019 01rr                      1-  845     	MOVR	r0x1031,W
     001A 0C03                      1-  846     	BTRSC	STATUS,0
     001B 16rr                      1-  847     	INCRSZ	r0x1031,W
     001C 03rr                      1-  848     	ADDAR	(_R_VDD_DATA + 1),F
                                    1-  849     	.line	739, "main.c"; 	for(i=1;i<=count;i++)
     001D 05rr                      1-  850     	INCR	r0x102D,F
     001E 3rrr                      1-  851     	LGOTO	_00511_DS_
     001F                           1-  852     _00513_DS_:
                                    1-  853     	.line	746, "main.c"; 	}
                                    1-  854     	RETURN	
     001F 0010                      3-   26 m1      ret
                                    1-  855     ; exit point of _F_VDD_Convert
                                    1-  857     ;***
                                    1-  858     ;  pBlock Stats: dbName = C
                                    1-  859     ;***
                                    1-  860     ;has an exit
                                    1-  861     ;2 compiler assigned registers:
                                    1-  862     ;   r0x1018
                                    1-  863     ;   r0x1019
                                    1-  864     ;; Starting pCode block
                                    1-  865     .segment "code"; module=main, function=_delay
                                    1-  867     ;local variable name mapping:
     0000                           1-  870     _delay:
                                    1-  871     ; 2 exit points
                                    1-  872     	.line	726, "main.c"; 	void delay(u8t time)
     0000 00rr                      1-  873     	MOVAR	r0x1018
                                    1-  874     	.line	728, "main.c"; 	for(u8t i=0;i<time;i++)
     0001 02rr                      1-  875     	CLRR	r0x1019
     0002                           1-  876     _00502_DS_:
     0002 01rr                      1-  877     	MOVR	r0x1018,W
     0003 04rr                      1-  878     	SUBAR	r0x1019,W
     0004 0C03                      1-  879     	BTRSC	STATUS,0
     0005 3rrr                      1-  880     	LGOTO	_00504_DS_
                                    1-  881     	.line	729, "main.c"; 	NOP();
     0006 0000                      1-  882     	nop
                                    1-  883     	.line	728, "main.c"; 	for(u8t i=0;i<time;i++)
     0007 05rr                      1-  884     	INCR	r0x1019,F
     0008 3rrr                      1-  885     	LGOTO	_00502_DS_
     0009                           1-  886     _00504_DS_:
                                    1-  887     	.line	730, "main.c"; 	}
                                    1-  888     	RETURN	
     0009 0010                      3-   26 m1      ret
                                    1-  889     ; exit point of _delay
                                    1-  891     ;***
                                    1-  892     ;  pBlock Stats: dbName = C
                                    1-  893     ;***
                                    1-  894     ;has an exit
                                    1-  895     ;; Starting pCode block
                                    1-  896     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  898     _F_wait_eoc:
                                    1-  899     ; 2 exit points
     0000                           1-  900     _00495_DS_:
                                    1-  901     	.line	720, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  902     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  903     	LGOTO	_00495_DS_
                                    1-  904     	.line	722, "main.c"; 	}
                                    1-  905     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  906     ; exit point of _F_wait_eoc
                                    1-  908     ;***
                                    1-  909     ;  pBlock Stats: dbName = C
                                    1-  910     ;***
                                    1-  911     ;has an exit
                                    1-  912     ;functions called:
                                    1-  913     ;   _LedInput
                                    1-  914     ;   _LedInput
                                    1-  915     ;   _LEDMODE4
                                    1-  916     ;   _LEDMODE3
                                    1-  917     ;   _LEDMODE2
                                    1-  918     ;   _LEDMODE1
                                    1-  919     ;   _LedInput
                                    1-  920     ;   _LedInput
                                    1-  921     ;   _BATLOW
                                    1-  922     ;   _BATLOW
                                    1-  923     ;   _BATHIGHT
                                    1-  924     ;   _LedInput
                                    1-  925     ;   _POWERLOW
                                    1-  926     ;   _POWERLOW
                                    1-  927     ;   _POWERMID
                                    1-  928     ;   _POWERLOW
                                    1-  929     ;   _POWERMID
                                    1-  930     ;   _POWERHIGHT
                                    1-  931     ;   _LedInput
                                    1-  932     ;   _LedInput
                                    1-  933     ;   _LEDMODE4
                                    1-  934     ;   _LEDMODE3
                                    1-  935     ;   _LEDMODE2
                                    1-  936     ;   _LEDMODE1
                                    1-  937     ;   _LedInput
                                    1-  938     ;   _LedInput
                                    1-  939     ;   _BATLOW
                                    1-  940     ;   _BATLOW
                                    1-  941     ;   _BATHIGHT
                                    1-  942     ;   _LedInput
                                    1-  943     ;   _POWERLOW
                                    1-  944     ;   _POWERLOW
                                    1-  945     ;   _POWERMID
                                    1-  946     ;   _POWERLOW
                                    1-  947     ;   _POWERMID
                                    1-  948     ;   _POWERHIGHT
                                    1-  949     ;; Starting pCode block
                                    1-  950     .segment "code"; module=main, function=_modeLedShow
     0000                           1-  952     _modeLedShow:
                                    1-  953     ; 2 exit points
                                    1-  954     	.line	660, "main.c"; 	LedInput();
     0000 2rrr                      1-  955     	LCALL	_LedInput
                                    1-  956     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  957     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1-  958     	.line	661, "main.c"; 	switch(modeStep)
     0001 2105                      1-  959     	MOVIA	0x05
     0002 04rr                      1-  960     	SUBAR	_modeStep,W
     0003 0C03                      1-  961     	BTRSC	STATUS,0
     0004 3rrr                      1-  962     	LGOTO	_00463_DS_
     0005 21rr                      1-  963     	MOVIA	((_00486_DS_ >> 8) & 0xff)
     0006 008A                      1-  964     	MOVAR	PCHBUF
     0007 01rr                      1-  965     	MOVR	_modeStep,W
     0008 25rr                      1-  966     	ADDIA	_00486_DS_
     0009 0C03                      1-  967     	BTRSC	STATUS,0
     000A 058A                      1-  968     	INCR	PCHBUF,F
     000B 0082                      1-  969     	MOVAR	PCL
     000C                           1-  970     _00486_DS_:
     000C 3rrr                      1-  971     	LGOTO	_00458_DS_
     000D 3rrr                      1-  972     	LGOTO	_00462_DS_
     000E 3rrr                      1-  973     	LGOTO	_00461_DS_
     000F 3rrr                      1-  974     	LGOTO	_00460_DS_
     0010 3rrr                      1-  975     	LGOTO	_00459_DS_
     0011                           1-  976     _00458_DS_:
                                    1-  977     	.line	664, "main.c"; 	LedInput();
     0011 2rrr                      1-  978     	LCALL	_LedInput
                                    1-  979     	.line	665, "main.c"; 	break;
     0012 3rrr                      1-  980     	LGOTO	_00464_DS_
     0013                           1-  981     _00459_DS_:
                                    1-  982     	.line	667, "main.c"; 	LEDMODE4();
     0013 2rrr                      1-  983     	LCALL	_LEDMODE4
                                    1-  984     	.line	668, "main.c"; 	break;
     0014 3rrr                      1-  985     	LGOTO	_00464_DS_
     0015                           1-  986     _00460_DS_:
                                    1-  987     	.line	670, "main.c"; 	LEDMODE3();
     0015 2rrr                      1-  988     	LCALL	_LEDMODE3
                                    1-  989     	.line	671, "main.c"; 	break;
     0016 3rrr                      1-  990     	LGOTO	_00464_DS_
     0017                           1-  991     _00461_DS_:
                                    1-  992     	.line	673, "main.c"; 	LEDMODE2();
     0017 2rrr                      1-  993     	LCALL	_LEDMODE2
                                    1-  994     	.line	674, "main.c"; 	break;
     0018 3rrr                      1-  995     	LGOTO	_00464_DS_
     0019                           1-  996     _00462_DS_:
                                    1-  997     	.line	676, "main.c"; 	LEDMODE1();
     0019 2rrr                      1-  998     	LCALL	_LEDMODE1
                                    1-  999     	.line	677, "main.c"; 	break;
     001A 3rrr                      1- 1000     	LGOTO	_00464_DS_
     001B                           1- 1001     _00463_DS_:
                                    1- 1002     	.line	679, "main.c"; 	LedInput();
     001B 2rrr                      1- 1003     	LCALL	_LedInput
                                    1- 1004     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1005     ;;unsigned compare: left >= lit (0x3=3), size=1
     001C                           1- 1006     _00464_DS_:
                                    1- 1007     	.line	683, "main.c"; 	switch(chrgLedStep)
     001C 2103                      1- 1008     	MOVIA	0x03
     001D 04rr                      1- 1009     	SUBAR	_chrgLedStep,W
     001E 0C03                      1- 1010     	BTRSC	STATUS,0
     001F 3rrr                      1- 1011     	LGOTO	_00468_DS_
     0020 21rr                      1- 1012     	MOVIA	((_00488_DS_ >> 8) & 0xff)
     0021 008A                      1- 1013     	MOVAR	PCHBUF
     0022 01rr                      1- 1014     	MOVR	_chrgLedStep,W
     0023 25rr                      1- 1015     	ADDIA	_00488_DS_
     0024 0C03                      1- 1016     	BTRSC	STATUS,0
     0025 058A                      1- 1017     	INCR	PCHBUF,F
     0026 0082                      1- 1018     	MOVAR	PCL
     0027                           1- 1019     _00488_DS_:
     0027 3rrr                      1- 1020     	LGOTO	_00465_DS_
     0028 3rrr                      1- 1021     	LGOTO	_00466_DS_
     0029 3rrr                      1- 1022     	LGOTO	_00467_DS_
     002A                           1- 1023     _00465_DS_:
                                    1- 1024     	.line	686, "main.c"; 	LedInput();
     002A 2rrr                      1- 1025     	LCALL	_LedInput
                                    1- 1026     	.line	687, "main.c"; 	break;
     002B 3rrr                      1- 1027     	LGOTO	_00468_DS_
     002C                           1- 1028     _00466_DS_:
                                    1- 1029     	.line	689, "main.c"; 	BATLOW();
     002C 2rrr                      1- 1030     	LCALL	_BATLOW
                                    1- 1031     	.line	690, "main.c"; 	break;
     002D 3rrr                      1- 1032     	LGOTO	_00468_DS_
     002E                           1- 1033     _00467_DS_:
                                    1- 1034     	.line	692, "main.c"; 	BATLOW();
     002E 2rrr                      1- 1035     	LCALL	_BATLOW
                                    1- 1036     	.line	693, "main.c"; 	BATHIGHT();
     002F 2rrr                      1- 1037     	LCALL	_BATHIGHT
                                    1- 1038     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1039     ;;unsigned compare: left >= lit (0x4=4), size=1
     0030                           1- 1040     _00468_DS_:
                                    1- 1041     	.line	697, "main.c"; 	switch(powerStep)
     0030 2104                      1- 1042     	MOVIA	0x04
     0031 04rr                      1- 1043     	SUBAR	_powerStep,W
     0032 0C03                      1- 1044     	BTRSC	STATUS,0
     0033 3rrr                      1- 1045     	LGOTO	_00474_DS_
     0034 21rr                      1- 1046     	MOVIA	((_00490_DS_ >> 8) & 0xff)
     0035 008A                      1- 1047     	MOVAR	PCHBUF
     0036 01rr                      1- 1048     	MOVR	_powerStep,W
     0037 25rr                      1- 1049     	ADDIA	_00490_DS_
     0038 0C03                      1- 1050     	BTRSC	STATUS,0
     0039 058A                      1- 1051     	INCR	PCHBUF,F
     003A 0082                      1- 1052     	MOVAR	PCL
     003B                           1- 1053     _00490_DS_:
     003B 3rrr                      1- 1054     	LGOTO	_00469_DS_
     003C 3rrr                      1- 1055     	LGOTO	_00470_DS_
     003D 3rrr                      1- 1056     	LGOTO	_00471_DS_
     003E 3rrr                      1- 1057     	LGOTO	_00472_DS_
     003F                           1- 1058     _00469_DS_:
                                    1- 1059     	.line	700, "main.c"; 	LedInput();
     003F 2rrr                      1- 1060     	LCALL	_LedInput
                                    1- 1061     	.line	701, "main.c"; 	break;
     0040 3rrr                      1- 1062     	LGOTO	_00474_DS_
     0041                           1- 1063     _00470_DS_:
                                    1- 1064     	.line	703, "main.c"; 	POWERLOW();
     0041 2rrr                      1- 1065     	LCALL	_POWERLOW
                                    1- 1066     	.line	704, "main.c"; 	break;
     0042 3rrr                      1- 1067     	LGOTO	_00474_DS_
     0043                           1- 1068     _00471_DS_:
                                    1- 1069     	.line	706, "main.c"; 	POWERLOW();
     0043 2rrr                      1- 1070     	LCALL	_POWERLOW
                                    1- 1071     	.line	707, "main.c"; 	POWERMID();
     0044 2rrr                      1- 1072     	LCALL	_POWERMID
                                    1- 1073     	.line	708, "main.c"; 	break;
     0045 3rrr                      1- 1074     	LGOTO	_00474_DS_
     0046                           1- 1075     _00472_DS_:
                                    1- 1076     	.line	710, "main.c"; 	POWERLOW();
     0046 2rrr                      1- 1077     	LCALL	_POWERLOW
                                    1- 1078     	.line	711, "main.c"; 	POWERMID();
     0047 2rrr                      1- 1079     	LCALL	_POWERMID
                                    1- 1080     	.line	712, "main.c"; 	POWERHIGHT();
     0048 2rrr                      1- 1081     	LCALL	_POWERHIGHT
     0049                           1- 1082     _00474_DS_:
                                    1- 1083     	.line	715, "main.c"; 	}
                                    1- 1084     	RETURN	
     0049 0010                      3-   26 m1      ret
                                    1- 1085     ; exit point of _modeLedShow
                                    1- 1087     ;***
                                    1- 1088     ;  pBlock Stats: dbName = C
                                    1- 1089     ;***
                                    1- 1090     ;has an exit
                                    1- 1091     ;functions called:
                                    1- 1092     ;   _delay
                                    1- 1093     ;   _delay
                                    1- 1094     ;; Starting pCode block
                                    1- 1095     .segment "code"; module=main, function=_initAD
     0000                           1- 1097     _initAD:
                                    1- 1098     ; 2 exit points
                                    1- 1099     	.line	637, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1100     	MOVIA	0x84
     0001 00rr                      1- 1101     	MOVAR	_ADMD
                                    1- 1102     	.line	640, "main.c"; 	ADVREFH = C_Vrefh_4V;					// ADC reference high voltage is supplied by internal 4V  (Note: ADC clock freq. must be equal or less than 1MHz)
     0002 2102                      1- 1103     	MOVIA	0x02
     0003 00rr                      1- 1104     	MOVAR	_ADVREFH
                                    1- 1105     	.line	647, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0004 2110                      1- 1106     	MOVIA	0x10
     0005 00rr                      1- 1107     	MOVAR	_ADR
                                    1- 1108     	.line	649, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0006 2103                      1- 1109     	MOVIA	0x03
     0007 00rr                      1- 1110     	MOVAR	_ADCR
                                    1- 1111     	.line	652, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0008 1Arr                      1- 1112     	BSR	_ADMDbits,4
                                    1- 1113     	.line	653, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0009 2164                      1- 1114     	MOVIA	0x64
     000A 2rrr                      1- 1115     	LCALL	_delay
                                    1- 1116     	.line	656, "main.c"; 	}
                                    1- 1117     	RETURN	
     000B 0010                      3-   26 m1      ret
                                    1- 1118     ; exit point of _initAD
                                    1- 1120     ;***
                                    1- 1121     ;  pBlock Stats: dbName = C
                                    1- 1122     ;***
                                    1- 1123     ;has an exit
                                    1- 1124     ;1 compiler assigned register :
                                    1- 1125     ;   r0x1034
                                    1- 1126     ;; Starting pCode block
                                    1- 1127     .segment "code"; module=main, function=_keyRead
                                    1- 1129     ;local variable name mapping:
     0000                           1- 1131     _keyRead:
                                    1- 1132     ; 2 exit points
                                    1- 1133     	.line	598, "main.c"; 	char keyRead(char keyStatus)	
     0000 00rr                      1- 1134     	MOVAR	r0x1034
                                    1- 1135     	.line	600, "main.c"; 	if(keyStatus)
     0001 01rr                      1- 1136     	MOVR	r0x1034,W
     0002 0D03                      1- 1137     	BTRSC	STATUS,2
     0003 3rrr                      1- 1138     	LGOTO	_00447_DS_
                                    1- 1139     	.line	602, "main.c"; 	keyNub = keyStatus;
     0004 01rr                      1- 1140     	MOVR	r0x1034,W
     0005 00rr                      1- 1141     	MOVAR	_keyNub
                                    1- 1142     	.line	603, "main.c"; 	keyCount++;
     0006 05rr                      1- 1143     	INCR	_keyCount,F
                                    1- 1144     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 1145     	.line	604, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 1146     	MOVIA	0xc8
     0008 04rr                      1- 1147     	SUBAR	_keyCount,W
     0009 0803                      1- 1148     	BTRSS	STATUS,0
     000A 3rrr                      1- 1149     	LGOTO	_00448_DS_
                                    1- 1150     	.line	606, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 1151     	MOVIA	0xc8
     000C 00rr                      1- 1152     	MOVAR	_keyCount
                                    1- 1153     	.line	607, "main.c"; 	if(!longPressFlag)
     000D 0Crr                      1- 1154     	BTRSC	_Status,1
     000E 3rrr                      1- 1155     	LGOTO	_00448_DS_
                                    1- 1156     	.line	609, "main.c"; 	longPressFlag = 1;
     000F 18rr                      1- 1157     	BSR	_Status,1
                                    1- 1158     	.line	610, "main.c"; 	return 2;
     0010 2102                      1- 1159     	MOVIA	0x02
     0011 3rrr                      1- 1160     	LGOTO	_00449_DS_
                                    1- 1161     ;;unsigned compare: left < lit (0xC8=200), size=1
     0012                           1- 1162     _00447_DS_:
                                    1- 1163     	.line	616, "main.c"; 	if(keyCount >= 200)
     0012 21C8                      1- 1164     	MOVIA	0xc8
     0013 04rr                      1- 1165     	SUBAR	_keyCount,W
     0014 0803                      1- 1166     	BTRSS	STATUS,0
     0015 3rrr                      1- 1167     	LGOTO	_00444_DS_
                                    1- 1168     	.line	618, "main.c"; 	keyCount = 0;
     0016 02rr                      1- 1169     	CLRR	_keyCount
                                    1- 1170     	.line	619, "main.c"; 	longPressFlag = 0;
     0017 1Crr                      1- 1171     	BCR	_Status,1
                                    1- 1172     	.line	620, "main.c"; 	return	0;
     0018 2100                      1- 1173     	MOVIA	0x00
     0019 3rrr                      1- 1174     	LGOTO	_00449_DS_
                                    1- 1175     ;;unsigned compare: left < lit (0x8=8), size=1
     001A                           1- 1176     _00444_DS_:
                                    1- 1177     	.line	622, "main.c"; 	else if(keyCount >= 8)
     001A 2108                      1- 1178     	MOVIA	0x08
     001B 04rr                      1- 1179     	SUBAR	_keyCount,W
     001C 0803                      1- 1180     	BTRSS	STATUS,0
     001D 3rrr                      1- 1181     	LGOTO	_00445_DS_
                                    1- 1182     	.line	624, "main.c"; 	keyCount = 0;
     001E 02rr                      1- 1183     	CLRR	_keyCount
                                    1- 1184     	.line	625, "main.c"; 	return	1;
     001F 2101                      1- 1185     	MOVIA	0x01
     0020 3rrr                      1- 1186     	LGOTO	_00449_DS_
     0021                           1- 1187     _00445_DS_:
                                    1- 1188     	.line	627, "main.c"; 	keyCount = 0;
     0021 02rr                      1- 1189     	CLRR	_keyCount
                                    1- 1190     	.line	628, "main.c"; 	keyNub = 0;
     0022 02rr                      1- 1191     	CLRR	_keyNub
     0023                           1- 1192     _00448_DS_:
                                    1- 1193     	.line	630, "main.c"; 	return 0;
     0023 2100                      1- 1194     	MOVIA	0x00
     0024                           1- 1195     _00449_DS_:
                                    1- 1196     	.line	631, "main.c"; 	}
                                    1- 1197     	RETURN	
     0024 0010                      3-   26 m1      ret
                                    1- 1198     ; exit point of _keyRead
                                    1- 1200     ;***
                                    1- 1201     ;  pBlock Stats: dbName = C
                                    1- 1202     ;***
                                    1- 1203     ;has an exit
                                    1- 1204     ;functions called:
                                    1- 1205     ;   _F_AIN4_Convert
                                    1- 1206     ;   _F_AIN4_Convert
                                    1- 1207     ;4 compiler assigned registers:
                                    1- 1208     ;   r0x1035
                                    1- 1209     ;   r0x1036
                                    1- 1210     ;   r0x1037
                                    1- 1211     ;   r0x1038
                                    1- 1212     ;; Starting pCode block
                                    1- 1213     .segment "code"; module=main, function=_checkHotAD
     0000                           1- 1215     _checkHotAD:
                                    1- 1216     ; 2 exit points
                                    1- 1217     	.line	589, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
     0000 02rr                      1- 1218     	CLRR	_R_AIN4_DATA_LB
     0001 02rr                      1- 1219     	CLRR	_R_AIN4_DATA
     0002 02rr                      1- 1220     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1221     	.line	590, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0003 2108                      1- 1222     	MOVIA	0x08
     0004 2rrr                      1- 1223     	LCALL	_F_AIN4_Convert
                                    1- 1224     	.line	591, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
     0005 15rr                      1- 1225     	SWAPR	(_R_AIN4_DATA + 1),W
     0006 22F0                      1- 1226     	ANDIA	0xf0
     0007 00rr                      1- 1227     	MOVAR	(_R_AIN4_DATA + 1)
     0008 15rr                      1- 1228     	SWAPR	_R_AIN4_DATA,W
     0009 00rr                      1- 1229     	MOVAR	_R_AIN4_DATA
     000A 220F                      1- 1230     	ANDIA	0x0f
     000B 11rr                      1- 1231     	IORAR	(_R_AIN4_DATA + 1),F
     000C 12rr                      1- 1232     	XORAR	_R_AIN4_DATA,F
                                    1- 1233     	.line	592, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     000D 21F0                      1- 1234     	MOVIA	0xf0
     000E 10rr                      1- 1235     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1236     	.line	593, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     000F 01rr                      1- 1237     	MOVR	_R_AIN4_DATA_LB,W
     0010 00rr                      1- 1238     	MOVAR	r0x1037
                                    1- 1239     ;;1	MOVAR	r0x1035
                                    1- 1240     ;;1	CLRR	r0x1036
                                    1- 1241     ;;104	MOVR	r0x1035,W
     0011 2100                      1- 1242     	MOVIA	0x00
     0012 00rr                      1- 1243     	MOVAR	r0x1038
     0013 01rr                      1- 1244     	MOVR	r0x1037,W
     0014 03rr                      1- 1245     	ADDAR	_R_AIN4_DATA,F
     0015 01rr                      1- 1246     	MOVR	r0x1038,W
     0016 0C03                      1- 1247     	BTRSC	STATUS,0
     0017 16rr                      1- 1248     	INCRSZ	r0x1038,W
     0018 03rr                      1- 1249     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1250     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
                                    1- 1251     	.line	594, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0019 1C03                      1- 1252     	BCR	STATUS,0
     001A 13rr                      1- 1253     	RRR	(_R_AIN4_DATA + 1),F
     001B 13rr                      1- 1254     	RRR	_R_AIN4_DATA,F
                                    1- 1255     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     001C 1C03                      1- 1256     	BCR	STATUS,0
     001D 13rr                      1- 1257     	RRR	(_R_AIN4_DATA + 1),F
     001E 13rr                      1- 1258     	RRR	_R_AIN4_DATA,F
                                    1- 1259     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     001F 1C03                      1- 1260     	BCR	STATUS,0
     0020 13rr                      1- 1261     	RRR	(_R_AIN4_DATA + 1),F
     0021 13rr                      1- 1262     	RRR	_R_AIN4_DATA,F
                                    1- 1263     	.line	595, "main.c"; 	}
                                    1- 1264     	RETURN	
     0022 0010                      3-   26 m1      ret
                                    1- 1265     ; exit point of _checkHotAD
                                    1- 1267     ;***
                                    1- 1268     ;  pBlock Stats: dbName = C
                                    1- 1269     ;***
                                    1- 1270     ;has an exit
                                    1- 1271     ;functions called:
                                    1- 1272     ;   _F_AIN3_Convert
                                    1- 1273     ;   _F_AIN3_Convert
                                    1- 1274     ;4 compiler assigned registers:
                                    1- 1275     ;   r0x1039
                                    1- 1276     ;   r0x103A
                                    1- 1277     ;   r0x103B
                                    1- 1278     ;   r0x103C
                                    1- 1279     ;; Starting pCode block
                                    1- 1280     .segment "code"; module=main, function=_checkTouchAD
     0000                           1- 1282     _checkTouchAD:
                                    1- 1283     ; 2 exit points
                                    1- 1284     	.line	578, "main.c"; 	R_AIN3_DATA = R_AIN3_DATA_LB = 0x00;
     0000 02rr                      1- 1285     	CLRR	_R_AIN3_DATA_LB
     0001 02rr                      1- 1286     	CLRR	_R_AIN3_DATA
     0002 02rr                      1- 1287     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1288     	.line	579, "main.c"; 	F_AIN3_Convert(8);					// execute AIN0 ADC converting 8 times
     0003 2108                      1- 1289     	MOVIA	0x08
     0004 2rrr                      1- 1290     	LCALL	_F_AIN3_Convert
                                    1- 1291     	.line	580, "main.c"; 	R_AIN3_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
     0005 15rr                      1- 1292     	SWAPR	(_R_AIN3_DATA + 1),W
     0006 22F0                      1- 1293     	ANDIA	0xf0
     0007 00rr                      1- 1294     	MOVAR	(_R_AIN3_DATA + 1)
     0008 15rr                      1- 1295     	SWAPR	_R_AIN3_DATA,W
     0009 00rr                      1- 1296     	MOVAR	_R_AIN3_DATA
     000A 220F                      1- 1297     	ANDIA	0x0f
     000B 11rr                      1- 1298     	IORAR	(_R_AIN3_DATA + 1),F
     000C 12rr                      1- 1299     	XORAR	_R_AIN3_DATA,F
                                    1- 1300     	.line	581, "main.c"; 	R_AIN3_DATA_LB &= 0xF0;				// Only get Bit7~4
     000D 21F0                      1- 1301     	MOVIA	0xf0
     000E 10rr                      1- 1302     	ANDAR	_R_AIN3_DATA_LB,F
                                    1- 1303     	.line	582, "main.c"; 	R_AIN3_DATA += R_AIN3_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     000F 01rr                      1- 1304     	MOVR	_R_AIN3_DATA_LB,W
     0010 00rr                      1- 1305     	MOVAR	r0x103B
                                    1- 1306     ;;1	MOVAR	r0x1039
                                    1- 1307     ;;1	CLRR	r0x103A
                                    1- 1308     ;;103	MOVR	r0x1039,W
     0011 2100                      1- 1309     	MOVIA	0x00
     0012 00rr                      1- 1310     	MOVAR	r0x103C
     0013 01rr                      1- 1311     	MOVR	r0x103B,W
     0014 03rr                      1- 1312     	ADDAR	_R_AIN3_DATA,F
     0015 01rr                      1- 1313     	MOVR	r0x103C,W
     0016 0C03                      1- 1314     	BTRSC	STATUS,0
     0017 16rr                      1- 1315     	INCRSZ	r0x103C,W
     0018 03rr                      1- 1316     	ADDAR	(_R_AIN3_DATA + 1),F
                                    1- 1317     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
                                    1- 1318     	.line	583, "main.c"; 	R_AIN3_DATA >>=3;					// R_AIN0_DATA divided 8
     0019 1C03                      1- 1319     	BCR	STATUS,0
     001A 13rr                      1- 1320     	RRR	(_R_AIN3_DATA + 1),F
     001B 13rr                      1- 1321     	RRR	_R_AIN3_DATA,F
                                    1- 1322     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     001C 1C03                      1- 1323     	BCR	STATUS,0
     001D 13rr                      1- 1324     	RRR	(_R_AIN3_DATA + 1),F
     001E 13rr                      1- 1325     	RRR	_R_AIN3_DATA,F
                                    1- 1326     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     001F 1C03                      1- 1327     	BCR	STATUS,0
     0020 13rr                      1- 1328     	RRR	(_R_AIN3_DATA + 1),F
     0021 13rr                      1- 1329     	RRR	_R_AIN3_DATA,F
                                    1- 1330     	.line	585, "main.c"; 	}
                                    1- 1331     	RETURN	
     0022 0010                      3-   26 m1      ret
                                    1- 1332     ; exit point of _checkTouchAD
                                    1- 1334     ;***
                                    1- 1335     ;  pBlock Stats: dbName = C
                                    1- 1336     ;***
                                    1- 1337     ;has an exit
                                    1- 1338     ;functions called:
                                    1- 1339     ;   _F_AIN1_Convert
                                    1- 1340     ;   _F_AIN1_Convert
                                    1- 1341     ;4 compiler assigned registers:
                                    1- 1342     ;   r0x103D
                                    1- 1343     ;   r0x103E
                                    1- 1344     ;   r0x103F
                                    1- 1345     ;   r0x1040
                                    1- 1346     ;; Starting pCode block
                                    1- 1347     .segment "code"; module=main, function=_checkKeyAD
     0000                           1- 1349     _checkKeyAD:
                                    1- 1350     ; 2 exit points
                                    1- 1351     	.line	567, "main.c"; 	IOSTA |= 0x02;
     0000 001r                      1- 1352     	IOSTR	_IOSTA
     0001 00rr                      1- 1353     	MOVAR	r0x103D
     0002 18rr                      1- 1354     	BSR	r0x103D,1
     0003 01rr                      1- 1355     	MOVR	r0x103D,W
     0004 000r                      1- 1356     	IOST	_IOSTA
                                    1- 1357     	.line	568, "main.c"; 	R_AIN1_DATA = R_AIN1_DATA_LB = 0x00;
     0005 02rr                      1- 1358     	CLRR	_R_AIN1_DATA_LB
     0006 02rr                      1- 1359     	CLRR	_R_AIN1_DATA
     0007 02rr                      1- 1360     	CLRR	(_R_AIN1_DATA + 1)
                                    1- 1361     	.line	569, "main.c"; 	F_AIN1_Convert(8);					// execute AIN0 ADC converting 8 times
     0008 2108                      1- 1362     	MOVIA	0x08
     0009 2rrr                      1- 1363     	LCALL	_F_AIN1_Convert
                                    1- 1364     	.line	570, "main.c"; 	R_AIN1_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
     000A 15rr                      1- 1365     	SWAPR	(_R_AIN1_DATA + 1),W
     000B 22F0                      1- 1366     	ANDIA	0xf0
     000C 00rr                      1- 1367     	MOVAR	(_R_AIN1_DATA + 1)
     000D 15rr                      1- 1368     	SWAPR	_R_AIN1_DATA,W
     000E 00rr                      1- 1369     	MOVAR	_R_AIN1_DATA
     000F 220F                      1- 1370     	ANDIA	0x0f
     0010 11rr                      1- 1371     	IORAR	(_R_AIN1_DATA + 1),F
     0011 12rr                      1- 1372     	XORAR	_R_AIN1_DATA,F
                                    1- 1373     	.line	571, "main.c"; 	R_AIN1_DATA_LB &= 0xF0;				// Only get Bit7~4
     0012 21F0                      1- 1374     	MOVIA	0xf0
     0013 10rr                      1- 1375     	ANDAR	_R_AIN1_DATA_LB,F
                                    1- 1376     	.line	572, "main.c"; 	R_AIN1_DATA += R_AIN1_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0014 01rr                      1- 1377     	MOVR	_R_AIN1_DATA_LB,W
     0015 00rr                      1- 1378     	MOVAR	r0x103D
                                    1- 1379     ;;1	CLRR	r0x103E
                                    1- 1380     ;;102	MOVR	r0x103D,W
                                    1- 1381     ;;100	MOVAR	r0x103F
     0016 2100                      1- 1382     	MOVIA	0x00
     0017 00rr                      1- 1383     	MOVAR	r0x1040
                                    1- 1384     ;;101	MOVR	r0x103F,W
     0018 01rr                      1- 1385     	MOVR	r0x103D,W
     0019 03rr                      1- 1386     	ADDAR	_R_AIN1_DATA,F
     001A 01rr                      1- 1387     	MOVR	r0x1040,W
     001B 0C03                      1- 1388     	BTRSC	STATUS,0
     001C 16rr                      1- 1389     	INCRSZ	r0x1040,W
     001D 03rr                      1- 1390     	ADDAR	(_R_AIN1_DATA + 1),F
                                    1- 1391     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
                                    1- 1392     	.line	573, "main.c"; 	R_AIN1_DATA >>=3;					// R_AIN0_DATA divided 8
     001E 1C03                      1- 1393     	BCR	STATUS,0
     001F 13rr                      1- 1394     	RRR	(_R_AIN1_DATA + 1),F
     0020 13rr                      1- 1395     	RRR	_R_AIN1_DATA,F
                                    1- 1396     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0021 1C03                      1- 1397     	BCR	STATUS,0
     0022 13rr                      1- 1398     	RRR	(_R_AIN1_DATA + 1),F
     0023 13rr                      1- 1399     	RRR	_R_AIN1_DATA,F
                                    1- 1400     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0024 1C03                      1- 1401     	BCR	STATUS,0
     0025 13rr                      1- 1402     	RRR	(_R_AIN1_DATA + 1),F
     0026 13rr                      1- 1403     	RRR	_R_AIN1_DATA,F
                                    1- 1404     	.line	574, "main.c"; 	}
                                    1- 1405     	RETURN	
     0027 0010                      3-   26 m1      ret
                                    1- 1406     ; exit point of _checkKeyAD
                                    1- 1408     ;***
                                    1- 1409     ;  pBlock Stats: dbName = C
                                    1- 1410     ;***
                                    1- 1411     ;has an exit
                                    1- 1412     ;functions called:
                                    1- 1413     ;   _F_VDD_Convert
                                    1- 1414     ;   _F_VDD_Convert
                                    1- 1415     ;4 compiler assigned registers:
                                    1- 1416     ;   r0x1041
                                    1- 1417     ;   r0x1042
                                    1- 1418     ;   r0x1043
                                    1- 1419     ;   r0x1044
                                    1- 1420     ;; Starting pCode block
                                    1- 1421     .segment "code"; module=main, function=_checkBAT
     0000                           1- 1423     _checkBAT:
                                    1- 1424     ; 2 exit points
                                    1- 1425     	.line	557, "main.c"; 	R_VDD_DATA = R_VDD_DATA_LB = 0x00;
     0000 02rr                      1- 1426     	CLRR	_R_VDD_DATA_LB
     0001 02rr                      1- 1427     	CLRR	_R_VDD_DATA
     0002 02rr                      1- 1428     	CLRR	(_R_VDD_DATA + 1)
                                    1- 1429     	.line	558, "main.c"; 	F_VDD_Convert(8);					// execute AIN0 ADC converting 8 times
     0003 2108                      1- 1430     	MOVIA	0x08
     0004 2rrr                      1- 1431     	LCALL	_F_VDD_Convert
                                    1- 1432     	.line	559, "main.c"; 	R_VDD_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
     0005 15rr                      1- 1433     	SWAPR	(_R_VDD_DATA + 1),W
     0006 22F0                      1- 1434     	ANDIA	0xf0
     0007 00rr                      1- 1435     	MOVAR	(_R_VDD_DATA + 1)
     0008 15rr                      1- 1436     	SWAPR	_R_VDD_DATA,W
     0009 00rr                      1- 1437     	MOVAR	_R_VDD_DATA
     000A 220F                      1- 1438     	ANDIA	0x0f
     000B 11rr                      1- 1439     	IORAR	(_R_VDD_DATA + 1),F
     000C 12rr                      1- 1440     	XORAR	_R_VDD_DATA,F
                                    1- 1441     	.line	560, "main.c"; 	R_VDD_DATA_LB &= 0xF0;				// Only get Bit7~4
     000D 21F0                      1- 1442     	MOVIA	0xf0
     000E 10rr                      1- 1443     	ANDAR	_R_VDD_DATA_LB,F
                                    1- 1444     	.line	561, "main.c"; 	R_VDD_DATA += R_VDD_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     000F 01rr                      1- 1445     	MOVR	_R_VDD_DATA_LB,W
     0010 00rr                      1- 1446     	MOVAR	r0x1043
                                    1- 1447     ;;1	MOVAR	r0x1041
                                    1- 1448     ;;1	CLRR	r0x1042
                                    1- 1449     ;;99	MOVR	r0x1041,W
     0011 2100                      1- 1450     	MOVIA	0x00
     0012 00rr                      1- 1451     	MOVAR	r0x1044
     0013 01rr                      1- 1452     	MOVR	r0x1043,W
     0014 03rr                      1- 1453     	ADDAR	_R_VDD_DATA,F
     0015 01rr                      1- 1454     	MOVR	r0x1044,W
     0016 0C03                      1- 1455     	BTRSC	STATUS,0
     0017 16rr                      1- 1456     	INCRSZ	r0x1044,W
     0018 03rr                      1- 1457     	ADDAR	(_R_VDD_DATA + 1),F
                                    1- 1458     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
                                    1- 1459     	.line	562, "main.c"; 	R_VDD_DATA >>=3;					// R_AIN0_DATA divided 8	
     0019 1C03                      1- 1460     	BCR	STATUS,0
     001A 13rr                      1- 1461     	RRR	(_R_VDD_DATA + 1),F
     001B 13rr                      1- 1462     	RRR	_R_VDD_DATA,F
                                    1- 1463     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     001C 1C03                      1- 1464     	BCR	STATUS,0
     001D 13rr                      1- 1465     	RRR	(_R_VDD_DATA + 1),F
     001E 13rr                      1- 1466     	RRR	_R_VDD_DATA,F
                                    1- 1467     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     001F 1C03                      1- 1468     	BCR	STATUS,0
     0020 13rr                      1- 1469     	RRR	(_R_VDD_DATA + 1),F
     0021 13rr                      1- 1470     	RRR	_R_VDD_DATA,F
                                    1- 1471     	.line	563, "main.c"; 	}
                                    1- 1472     	RETURN	
     0022 0010                      3-   26 m1      ret
                                    1- 1473     ; exit point of _checkBAT
                                    1- 1475     ;***
                                    1- 1476     ;  pBlock Stats: dbName = C
                                    1- 1477     ;***
                                    1- 1478     ;has an exit
                                    1- 1479     ;1 compiler assigned register :
                                    1- 1480     ;   r0x1045
                                    1- 1481     ;; Starting pCode block
                                    1- 1482     .segment "code"; module=main, function=_PWM2Start
     0000                           1- 1484     _PWM2Start:
                                    1- 1485     ; 2 exit points
                                    1- 1486     	.line	542, "main.c"; 	if(T2CR1 & C_PWM2_En)
     0000 00rr                      1- 1487     	SFUNR	_T2CR1
     0001 00rr                      1- 1488     	MOVAR	r0x1045
     0002 0Frr                      1- 1489     	BTRSC	r0x1045,7
                                    1- 1490     	.line	543, "main.c"; 	return;
     0003 3rrr                      1- 1491     	LGOTO	_00416_DS_
                                    1- 1492     	.line	545, "main.c"; 	TMRH = 0x00;
     0004 02rr                      1- 1493     	CLRR	_TMRH
                                    1- 1494     	.line	546, "main.c"; 	TMR2 = 100;							//频率为110K
     0005 2164                      1- 1495     	MOVIA	0x64
     0006 00rr                      1- 1496     	SFUN	_TMR2
                                    1- 1497     	.line	547, "main.c"; 	PWM2DUTY = 66;				// 		
     0007 2142                      1- 1498     	MOVIA	0x42
     0008 00rr                      1- 1499     	SFUN	_PWM2DUTY
                                    1- 1500     	.line	549, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div32;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0009 2104                      1- 1501     	MOVIA	0x04
     000A 00rr                      1- 1502     	SFUN	_T2CR2
                                    1- 1503     	.line	550, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000B 2183                      1- 1504     	MOVIA	0x83
     000C 00rr                      1- 1505     	SFUN	_T2CR1
     000D                           1- 1506     _00416_DS_:
                                    1- 1507     	.line	552, "main.c"; 	}
                                    1- 1508     	RETURN	
     000D 0010                      3-   26 m1      ret
                                    1- 1509     ; exit point of _PWM2Start
                                    1- 1511     ;***
                                    1- 1512     ;  pBlock Stats: dbName = C
                                    1- 1513     ;***
                                    1- 1514     ;has an exit
                                    1- 1515     ;1 compiler assigned register :
                                    1- 1516     ;   r0x1046
                                    1- 1517     ;; Starting pCode block
                                    1- 1518     .segment "code"; module=main, function=_PWM1Start
     0000                           1- 1520     _PWM1Start:
                                    1- 1521     ; 2 exit points
                                    1- 1522     	.line	529, "main.c"; 	if(T1CR1 & C_PWM1_En)
     0000 00rr                      1- 1523     	SFUNR	_T1CR1
     0001 00rr                      1- 1524     	MOVAR	r0x1046
     0002 0Frr                      1- 1525     	BTRSC	r0x1046,7
                                    1- 1526     	.line	530, "main.c"; 	return;
     0003 3rrr                      1- 1527     	LGOTO	_00409_DS_
                                    1- 1528     	.line	532, "main.c"; 	TMRH = 0x00;
     0004 02rr                      1- 1529     	CLRR	_TMRH
                                    1- 1530     	.line	533, "main.c"; 	TMR1 = 100;							//频率为110K
     0005 2164                      1- 1531     	MOVIA	0x64
     0006 00rr                      1- 1532     	SFUN	_TMR1
                                    1- 1533     	.line	534, "main.c"; 	PWM1DUTY = 66;				// 		
     0007 2142                      1- 1534     	MOVIA	0x42
     0008 00rr                      1- 1535     	SFUN	_PWM1DUTY
                                    1- 1536     	.line	536, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div32;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0009 2104                      1- 1537     	MOVIA	0x04
     000A 00rr                      1- 1538     	SFUN	_T1CR2
                                    1- 1539     	.line	537, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000B 2183                      1- 1540     	MOVIA	0x83
     000C 00rr                      1- 1541     	SFUN	_T1CR1
     000D                           1- 1542     _00409_DS_:
                                    1- 1543     	.line	538, "main.c"; 	}
                                    1- 1544     	RETURN	
     000D 0010                      3-   26 m1      ret
                                    1- 1545     ; exit point of _PWM1Start
                                    1- 1547     ;***
                                    1- 1548     ;  pBlock Stats: dbName = C
                                    1- 1549     ;***
                                    1- 1550     ;has an exit
                                    1- 1551     ;functions called:
                                    1- 1552     ;   _checkBAT
                                    1- 1553     ;   _checkKeyAD
                                    1- 1554     ;   _keyRead
                                    1- 1555     ;   _LedInput
                                    1- 1556     ;   _checkBAT
                                    1- 1557     ;   _checkKeyAD
                                    1- 1558     ;   _keyRead
                                    1- 1559     ;   _LedInput
                                    1- 1560     ;1 compiler assigned register :
                                    1- 1561     ;   r0x1047
                                    1- 1562     ;; Starting pCode block
                                    1- 1563     .segment "code"; module=main, function=_ADKeyCtr
                                    1- 1565     ;local variable name mapping:
     0000                           1- 1568     _ADKeyCtr:
                                    1- 1569     ; 2 exit points
                                    1- 1570     	.line	426, "main.c"; 	if(++checkTime > 30)
     0000 05rr                      1- 1571     	INCR	_checkTime,F
                                    1- 1572     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1573     ;;unsigned compare: left >= lit (0x1F=31), size=1
     0001 211F                      1- 1574     	MOVIA	0x1f
     0002 04rr                      1- 1575     	SUBAR	_checkTime,W
     0003 0803                      1- 1576     	BTRSS	STATUS,0
     0004 3rrr                      1- 1577     	LGOTO	_00275_DS_
                                    1- 1578     	.line	428, "main.c"; 	checkTime = 0;
     0005 02rr                      1- 1579     	CLRR	_checkTime
                                    1- 1580     	.line	429, "main.c"; 	checkBAT();
     0006 2rrr                      1- 1581     	LCALL	_checkBAT
     0007                           1- 1582     _00275_DS_:
                                    1- 1583     	.line	431, "main.c"; 	if(modeStep > 0 && startLedFlag == 0)
     0007 01rr                      1- 1584     	MOVR	_modeStep,W
     0008 0D03                      1- 1585     	BTRSC	STATUS,2
     0009 3rrr                      1- 1586     	LGOTO	_00285_DS_
     000A 0Drr                      1- 1587     	BTRSC	_Status,2
     000B 3rrr                      1- 1588     	LGOTO	_00285_DS_
                                    1- 1589     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1590     ;;unsigned compare: left >= lit (0x39A=922), size=2
                                    1- 1591     	.line	433, "main.c"; 	if(R_VDD_DATA > 921)
     000C 2103                      1- 1592     	MOVIA	0x03
     000D 04rr                      1- 1593     	SUBAR	(_R_VDD_DATA + 1),W
     000E 0903                      1- 1594     	BTRSS	STATUS,2
     000F 3rrr                      1- 1595     	LGOTO	_00396_DS_
     0010 219A                      1- 1596     	MOVIA	0x9a
     0011 04rr                      1- 1597     	SUBAR	_R_VDD_DATA,W
     0012                           1- 1598     _00396_DS_:
     0012 0803                      1- 1599     	BTRSS	STATUS,0
     0013 3rrr                      1- 1600     	LGOTO	_00282_DS_
                                    1- 1601     	.line	436, "main.c"; 	chrgLedStep = 2;
     0014 2102                      1- 1602     	MOVIA	0x02
     0015 00rr                      1- 1603     	MOVAR	_chrgLedStep
     0016 3rrr                      1- 1604     	LGOTO	_00285_DS_
     0017                           1- 1605     _00282_DS_:
                                    1- 1606     	.line	440, "main.c"; 	if(chrgLedStep == 2)
     0017 01rr                      1- 1607     	MOVR	_chrgLedStep,W
     0018 2402                      1- 1608     	XORIA	0x02
     0019 0903                      1- 1609     	BTRSS	STATUS,2
     001A 3rrr                      1- 1610     	LGOTO	_00279_DS_
                                    1- 1611     ;;unsigned compare: left < lit (0x38E=910), size=2
                                    1- 1612     	.line	442, "main.c"; 	if(R_VDD_DATA < 910)
     001B 2103                      1- 1613     	MOVIA	0x03
     001C 04rr                      1- 1614     	SUBAR	(_R_VDD_DATA + 1),W
     001D 0903                      1- 1615     	BTRSS	STATUS,2
     001E 3rrr                      1- 1616     	LGOTO	_00397_DS_
     001F 218E                      1- 1617     	MOVIA	0x8e
     0020 04rr                      1- 1618     	SUBAR	_R_VDD_DATA,W
     0021                           1- 1619     _00397_DS_:
     0021 0C03                      1- 1620     	BTRSC	STATUS,0
     0022 3rrr                      1- 1621     	LGOTO	_00285_DS_
                                    1- 1622     	.line	443, "main.c"; 	chrgLedStep = 1;
     0023 2101                      1- 1623     	MOVIA	0x01
     0024 00rr                      1- 1624     	MOVAR	_chrgLedStep
     0025 3rrr                      1- 1625     	LGOTO	_00285_DS_
     0026                           1- 1626     _00279_DS_:
                                    1- 1627     	.line	446, "main.c"; 	chrgLedStep = 1;
     0026 2101                      1- 1628     	MOVIA	0x01
     0027 00rr                      1- 1629     	MOVAR	_chrgLedStep
     0028                           1- 1630     _00285_DS_:
                                    1- 1631     	.line	449, "main.c"; 	if(modeStep == 0 && startLedFlag == 0)
     0028 01rr                      1- 1632     	MOVR	_modeStep,W
     0029 0903                      1- 1633     	BTRSS	STATUS,2
     002A 3rrr                      1- 1634     	LGOTO	_00288_DS_
     002B 0Drr                      1- 1635     	BTRSC	_Status,2
     002C 3rrr                      1- 1636     	LGOTO	_00288_DS_
                                    1- 1637     	.line	452, "main.c"; 	powerStep = 0;
     002D 02rr                      1- 1638     	CLRR	_powerStep
                                    1- 1639     	.line	453, "main.c"; 	chrgLedStep = 0;
     002E 02rr                      1- 1640     	CLRR	_chrgLedStep
                                    1- 1641     	.line	454, "main.c"; 	ORANGEOFF();
     002F 1Err                      1- 1642     	BCR	_PORTB,4
                                    1- 1643     	.line	455, "main.c"; 	BLUEOFF();
     0030 1Err                      1- 1644     	BCR	_PORTB,5
                                    1- 1645     	.line	456, "main.c"; 	REDOFF();
     0031 1Crr                      1- 1646     	BCR	_PORTA,0
                                    1- 1647     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1648     ;;unsigned compare: left >= lit (0xB=11), size=1
     0032                           1- 1649     _00288_DS_:
                                    1- 1650     	.line	458, "main.c"; 	if(checkTime > 10 && checkTime < 25)
     0032 210B                      1- 1651     	MOVIA	0x0b
     0033 04rr                      1- 1652     	SUBAR	_checkTime,W
     0034 0803                      1- 1653     	BTRSS	STATUS,0
     0035 3rrr                      1- 1654     	LGOTO	_00291_DS_
                                    1- 1655     ;;unsigned compare: left < lit (0x19=25), size=1
     0036 2119                      1- 1656     	MOVIA	0x19
     0037 04rr                      1- 1657     	SUBAR	_checkTime,W
     0038 0803                      1- 1658     	BTRSS	STATUS,0
                                    1- 1659     	.line	460, "main.c"; 	checkKeyAD();
     0039 2rrr                      1- 1660     	LCALL	_checkKeyAD
     003A                           1- 1661     _00291_DS_:
                                    1- 1662     	.line	463, "main.c"; 	if(R_AIN1_DATA > 100 && R_AIN1_DATA < 2048)
     003A 2100                      1- 1663     	MOVIA	0x00
     003B 04rr                      1- 1664     	SUBAR	(_R_AIN1_DATA + 1),W
     003C 0903                      1- 1665     	BTRSS	STATUS,2
     003D 3rrr                      1- 1666     	LGOTO	_00400_DS_
     003E 2165                      1- 1667     	MOVIA	0x65
     003F 04rr                      1- 1668     	SUBAR	_R_AIN1_DATA,W
     0040                           1- 1669     _00400_DS_:
     0040 0803                      1- 1670     	BTRSS	STATUS,0
     0041 3rrr                      1- 1671     	LGOTO	_00297_DS_
                                    1- 1672     ;;unsigned compare: left < lit (0x800=2048), size=2
     0042 2108                      1- 1673     	MOVIA	0x08
     0043 04rr                      1- 1674     	SUBAR	(_R_AIN1_DATA + 1),W
     0044 0903                      1- 1675     	BTRSS	STATUS,2
     0045 3rrr                      1- 1676     	LGOTO	_00401_DS_
     0046 2100                      1- 1677     	MOVIA	0x00
     0047 04rr                      1- 1678     	SUBAR	_R_AIN1_DATA,W
     0048                           1- 1679     _00401_DS_:
     0048 0C03                      1- 1680     	BTRSC	STATUS,0
     0049 3rrr                      1- 1681     	LGOTO	_00297_DS_
                                    1- 1682     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1683     ;;unsigned compare: left >= lit (0x601=1537), size=2
                                    1- 1684     	.line	465, "main.c"; 	if(R_AIN1_DATA > 1536)
     004A 2106                      1- 1685     	MOVIA	0x06
     004B 04rr                      1- 1686     	SUBAR	(_R_AIN1_DATA + 1),W
     004C 0903                      1- 1687     	BTRSS	STATUS,2
     004D 3rrr                      1- 1688     	LGOTO	_00402_DS_
     004E 2101                      1- 1689     	MOVIA	0x01
     004F 04rr                      1- 1690     	SUBAR	_R_AIN1_DATA,W
     0050                           1- 1691     _00402_DS_:
     0050 0803                      1- 1692     	BTRSS	STATUS,0
     0051 3rrr                      1- 1693     	LGOTO	_00294_DS_
                                    1- 1694     	.line	468, "main.c"; 	tempKey = 1;
     0052 2101                      1- 1695     	MOVIA	0x01
     0053 00rr                      1- 1696     	MOVAR	r0x1047
     0054 3rrr                      1- 1697     	LGOTO	_00298_DS_
     0055                           1- 1698     _00294_DS_:
                                    1- 1699     	.line	473, "main.c"; 	tempKey = 2;
     0055 2102                      1- 1700     	MOVIA	0x02
     0056 00rr                      1- 1701     	MOVAR	r0x1047
     0057 3rrr                      1- 1702     	LGOTO	_00298_DS_
     0058                           1- 1703     _00297_DS_:
                                    1- 1704     	.line	478, "main.c"; 	tempKey = 0;
     0058 02rr                      1- 1705     	CLRR	r0x1047
     0059                           1- 1706     _00298_DS_:
                                    1- 1707     	.line	480, "main.c"; 	char kclick = keyRead(tempKey);
     0059 01rr                      1- 1708     	MOVR	r0x1047,W
     005A 2rrr                      1- 1709     	LCALL	_keyRead
     005B 00rr                      1- 1710     	MOVAR	r0x1047
                                    1- 1711     	.line	481, "main.c"; 	if(kclick == 1)
     005C 2401                      1- 1712     	XORIA	0x01
     005D 0903                      1- 1713     	BTRSS	STATUS,2
     005E 3rrr                      1- 1714     	LGOTO	_00322_DS_
                                    1- 1715     	.line	484, "main.c"; 	if(keyNub == 1)
     005F 01rr                      1- 1716     	MOVR	_keyNub,W
     0060 2401                      1- 1717     	XORIA	0x01
     0061 0903                      1- 1718     	BTRSS	STATUS,2
     0062 3rrr                      1- 1719     	LGOTO	_00310_DS_
                                    1- 1720     	.line	486, "main.c"; 	if(modeStep == 0)
     0063 01rr                      1- 1721     	MOVR	_modeStep,W
     0064 0903                      1- 1722     	BTRSS	STATUS,2
     0065 3rrr                      1- 1723     	LGOTO	_00303_DS_
                                    1- 1724     	.line	488, "main.c"; 	LedInput();
     0066 2rrr                      1- 1725     	LCALL	_LedInput
                                    1- 1726     	.line	489, "main.c"; 	modeStep = 0;
     0067 02rr                      1- 1727     	CLRR	_modeStep
                                    1- 1728     	.line	490, "main.c"; 	powerStep = 0;
     0068 02rr                      1- 1729     	CLRR	_powerStep
                                    1- 1730     	.line	491, "main.c"; 	chrgLedStep = 0;
     0069 02rr                      1- 1731     	CLRR	_chrgLedStep
                                    1- 1732     	.line	492, "main.c"; 	startLedFlag = 1;//开机亮灯模式
     006A 19rr                      1- 1733     	BSR	_Status,2
     006B 3rrr                      1- 1734     	LGOTO	_00324_DS_
     006C                           1- 1735     _00303_DS_:
                                    1- 1736     	.line	496, "main.c"; 	if(++modeStep > 4)
     006C 05rr                      1- 1737     	INCR	_modeStep,F
                                    1- 1738     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1739     ;;unsigned compare: left >= lit (0x5=5), size=1
     006D 2105                      1- 1740     	MOVIA	0x05
     006E 04rr                      1- 1741     	SUBAR	_modeStep,W
     006F 0803                      1- 1742     	BTRSS	STATUS,0
     0070 3rrr                      1- 1743     	LGOTO	_00301_DS_
                                    1- 1744     	.line	497, "main.c"; 	modeStep = 1;
     0071 2101                      1- 1745     	MOVIA	0x01
     0072 00rr                      1- 1746     	MOVAR	_modeStep
     0073                           1- 1747     _00301_DS_:
                                    1- 1748     	.line	498, "main.c"; 	powerStep = 1;
     0073 2101                      1- 1749     	MOVIA	0x01
     0074 00rr                      1- 1750     	MOVAR	_powerStep
     0075 3rrr                      1- 1751     	LGOTO	_00324_DS_
     0076                           1- 1752     _00310_DS_:
                                    1- 1753     	.line	501, "main.c"; 	else if(modeStep > 0)
     0076 01rr                      1- 1754     	MOVR	_modeStep,W
     0077 0D03                      1- 1755     	BTRSC	STATUS,2
     0078 3rrr                      1- 1756     	LGOTO	_00324_DS_
                                    1- 1757     	.line	503, "main.c"; 	if(++powerStep > 3)
     0079 05rr                      1- 1758     	INCR	_powerStep,F
                                    1- 1759     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1760     ;;unsigned compare: left >= lit (0x4=4), size=1
     007A 2104                      1- 1761     	MOVIA	0x04
     007B 04rr                      1- 1762     	SUBAR	_powerStep,W
     007C 0803                      1- 1763     	BTRSS	STATUS,0
     007D 3rrr                      1- 1764     	LGOTO	_00324_DS_
                                    1- 1765     	.line	504, "main.c"; 	powerStep = 1;
     007E 2101                      1- 1766     	MOVIA	0x01
     007F 00rr                      1- 1767     	MOVAR	_powerStep
     0080 3rrr                      1- 1768     	LGOTO	_00324_DS_
     0081                           1- 1769     _00322_DS_:
                                    1- 1770     	.line	507, "main.c"; 	else if(kclick == 2)
     0081 01rr                      1- 1771     	MOVR	r0x1047,W
     0082 2402                      1- 1772     	XORIA	0x02
     0083 0903                      1- 1773     	BTRSS	STATUS,2
     0084 3rrr                      1- 1774     	LGOTO	_00324_DS_
                                    1- 1775     	.line	510, "main.c"; 	if(keyNub == 1)
     0085 01rr                      1- 1776     	MOVR	_keyNub,W
     0086 2401                      1- 1777     	XORIA	0x01
     0087 0903                      1- 1778     	BTRSS	STATUS,2
     0088 3rrr                      1- 1779     	LGOTO	_00317_DS_
                                    1- 1780     	.line	512, "main.c"; 	modeStep = 0;
     0089 02rr                      1- 1781     	CLRR	_modeStep
                                    1- 1782     	.line	513, "main.c"; 	powerStep = 0;
     008A 02rr                      1- 1783     	CLRR	_powerStep
                                    1- 1784     	.line	514, "main.c"; 	startLedFlag = 0;
     008B 1Drr                      1- 1785     	BCR	_Status,2
                                    1- 1786     	.line	515, "main.c"; 	chrgLedStep = 0;
     008C 02rr                      1- 1787     	CLRR	_chrgLedStep
     008D 3rrr                      1- 1788     	LGOTO	_00324_DS_
     008E                           1- 1789     _00317_DS_:
                                    1- 1790     	.line	518, "main.c"; 	else if(modeStep > 0)
     008E 01rr                      1- 1791     	MOVR	_modeStep,W
     008F 0D03                      1- 1792     	BTRSC	STATUS,2
     0090 3rrr                      1- 1793     	LGOTO	_00324_DS_
                                    1- 1794     	.line	520, "main.c"; 	if(++powerStep > 3)
     0091 05rr                      1- 1795     	INCR	_powerStep,F
                                    1- 1796     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1797     ;;unsigned compare: left >= lit (0x4=4), size=1
     0092 2104                      1- 1798     	MOVIA	0x04
     0093 04rr                      1- 1799     	SUBAR	_powerStep,W
     0094 0803                      1- 1800     	BTRSS	STATUS,0
     0095 3rrr                      1- 1801     	LGOTO	_00324_DS_
                                    1- 1802     	.line	521, "main.c"; 	powerStep = 1;
     0096 2101                      1- 1803     	MOVIA	0x01
     0097 00rr                      1- 1804     	MOVAR	_powerStep
     0098                           1- 1805     _00324_DS_:
                                    1- 1806     	.line	524, "main.c"; 	}
                                    1- 1807     	RETURN	
     0098 0010                      3-   26 m1      ret
                                    1- 1808     ; exit point of _ADKeyCtr
                                    1- 1810     ;***
                                    1- 1811     ;  pBlock Stats: dbName = C
                                    1- 1812     ;***
                                    1- 1813     ;has an exit
                                    1- 1814     ;; Starting pCode block
                                    1- 1815     .segment "code"; module=main, function=_startCtr
     0000                           1- 1817     _startCtr:
                                    1- 1818     ; 2 exit points
                                    1- 1819     	.line	361, "main.c"; 	if(++timeCount > 20)
     0000 05rr                      1- 1820     	INCR	_timeCount,F
                                    1- 1821     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1822     ;;unsigned compare: left >= lit (0x15=21), size=1
     0001 2115                      1- 1823     	MOVIA	0x15
     0002 04rr                      1- 1824     	SUBAR	_timeCount,W
     0003 0803                      1- 1825     	BTRSS	STATUS,0
     0004 3rrr                      1- 1826     	LGOTO	_00269_DS_
                                    1- 1827     	.line	363, "main.c"; 	timeCount = 0;
     0005 02rr                      1- 1828     	CLRR	_timeCount
                                    1- 1829     ;;unsigned compare: left < lit (0x5=5), size=1
                                    1- 1830     	.line	364, "main.c"; 	if(startStep < 5)
     0006 2105                      1- 1831     	MOVIA	0x05
     0007 04rr                      1- 1832     	SUBAR	_startStep,W
     0008 0C03                      1- 1833     	BTRSC	STATUS,0
     0009 3rrr                      1- 1834     	LGOTO	_00263_DS_
                                    1- 1835     	.line	366, "main.c"; 	modeStep = 5-startStep;
     000A 01rr                      1- 1836     	MOVR	_startStep,W
     000B 2705                      1- 1837     	SUBIA	0x05
     000C 00rr                      1- 1838     	MOVAR	_modeStep
                                    1- 1839     	.line	367, "main.c"; 	chrgLedStep = 0;
     000D 02rr                      1- 1840     	CLRR	_chrgLedStep
                                    1- 1841     	.line	368, "main.c"; 	powerStep = 0;
     000E 02rr                      1- 1842     	CLRR	_powerStep
     000F 3rrr                      1- 1843     	LGOTO	_00264_DS_
     0010                           1- 1844     _00263_DS_:
                                    1- 1845     	.line	370, "main.c"; 	else if(startStep == 5)
     0010 01rr                      1- 1846     	MOVR	_startStep,W
     0011 2405                      1- 1847     	XORIA	0x05
     0012 0903                      1- 1848     	BTRSS	STATUS,2
     0013 3rrr                      1- 1849     	LGOTO	_00260_DS_
                                    1- 1850     	.line	372, "main.c"; 	modeStep = 0;
     0014 02rr                      1- 1851     	CLRR	_modeStep
                                    1- 1852     	.line	373, "main.c"; 	chrgLedStep = 0;
     0015 02rr                      1- 1853     	CLRR	_chrgLedStep
                                    1- 1854     	.line	374, "main.c"; 	powerStep = 3;
     0016 2103                      1- 1855     	MOVIA	0x03
     0017 00rr                      1- 1856     	MOVAR	_powerStep
     0018 3rrr                      1- 1857     	LGOTO	_00264_DS_
     0019                           1- 1858     _00260_DS_:
                                    1- 1859     	.line	376, "main.c"; 	else if(startStep == 6)
     0019 01rr                      1- 1860     	MOVR	_startStep,W
     001A 2406                      1- 1861     	XORIA	0x06
     001B 0903                      1- 1862     	BTRSS	STATUS,2
     001C 3rrr                      1- 1863     	LGOTO	_00257_DS_
                                    1- 1864     	.line	378, "main.c"; 	modeStep = 0;
     001D 02rr                      1- 1865     	CLRR	_modeStep
                                    1- 1866     	.line	379, "main.c"; 	powerStep = 0;
     001E 02rr                      1- 1867     	CLRR	_powerStep
                                    1- 1868     	.line	380, "main.c"; 	chrgLedStep = 2;
     001F 2102                      1- 1869     	MOVIA	0x02
     0020 00rr                      1- 1870     	MOVAR	_chrgLedStep
     0021 3rrr                      1- 1871     	LGOTO	_00264_DS_
     0022                           1- 1872     _00257_DS_:
                                    1- 1873     	.line	382, "main.c"; 	else if(startStep == 7)
     0022 01rr                      1- 1874     	MOVR	_startStep,W
     0023 2407                      1- 1875     	XORIA	0x07
     0024 0903                      1- 1876     	BTRSS	STATUS,2
     0025 3rrr                      1- 1877     	LGOTO	_00254_DS_
                                    1- 1878     	.line	384, "main.c"; 	modeStep = 0;
     0026 02rr                      1- 1879     	CLRR	_modeStep
                                    1- 1880     	.line	385, "main.c"; 	chrgLedStep = 0;
     0027 02rr                      1- 1881     	CLRR	_chrgLedStep
                                    1- 1882     	.line	386, "main.c"; 	powerStep = 0;
     0028 02rr                      1- 1883     	CLRR	_powerStep
                                    1- 1884     	.line	387, "main.c"; 	ORANGEOFF();
     0029 1Err                      1- 1885     	BCR	_PORTB,4
                                    1- 1886     	.line	388, "main.c"; 	BLUEOFF();
     002A 1Err                      1- 1887     	BCR	_PORTB,5
                                    1- 1888     	.line	389, "main.c"; 	REDOFF();
     002B 1Crr                      1- 1889     	BCR	_PORTA,0
                                    1- 1890     	.line	390, "main.c"; 	REDON();
     002C 18rr                      1- 1891     	BSR	_PORTA,0
     002D 3rrr                      1- 1892     	LGOTO	_00264_DS_
     002E                           1- 1893     _00254_DS_:
                                    1- 1894     	.line	392, "main.c"; 	else if(startStep == 8)
     002E 01rr                      1- 1895     	MOVR	_startStep,W
     002F 2408                      1- 1896     	XORIA	0x08
     0030 0903                      1- 1897     	BTRSS	STATUS,2
     0031 3rrr                      1- 1898     	LGOTO	_00251_DS_
                                    1- 1899     	.line	394, "main.c"; 	REDOFF();
     0032 1Crr                      1- 1900     	BCR	_PORTA,0
                                    1- 1901     	.line	395, "main.c"; 	ORANGEOFF();
     0033 1Err                      1- 1902     	BCR	_PORTB,4
                                    1- 1903     	.line	396, "main.c"; 	BLUEOFF();
     0034 1Err                      1- 1904     	BCR	_PORTB,5
                                    1- 1905     	.line	397, "main.c"; 	REDOFF();
     0035 1Crr                      1- 1906     	BCR	_PORTA,0
                                    1- 1907     	.line	398, "main.c"; 	ORANGEON();
     0036 1Arr                      1- 1908     	BSR	_PORTB,4
     0037 3rrr                      1- 1909     	LGOTO	_00264_DS_
     0038                           1- 1910     _00251_DS_:
                                    1- 1911     	.line	400, "main.c"; 	else if(startStep == 9)
     0038 01rr                      1- 1912     	MOVR	_startStep,W
     0039 2409                      1- 1913     	XORIA	0x09
     003A 0903                      1- 1914     	BTRSS	STATUS,2
     003B 3rrr                      1- 1915     	LGOTO	_00264_DS_
                                    1- 1916     	.line	402, "main.c"; 	ORANGEOFF();
     003C 1Err                      1- 1917     	BCR	_PORTB,4
                                    1- 1918     	.line	403, "main.c"; 	BLUEOFF();
     003D 1Err                      1- 1919     	BCR	_PORTB,5
                                    1- 1920     	.line	404, "main.c"; 	REDOFF();
     003E 1Crr                      1- 1921     	BCR	_PORTA,0
                                    1- 1922     	.line	405, "main.c"; 	BLUEON();
     003F 1Arr                      1- 1923     	BSR	_PORTB,5
     0040                           1- 1924     _00264_DS_:
                                    1- 1925     	.line	408, "main.c"; 	if(++startStep > 10)
     0040 05rr                      1- 1926     	INCR	_startStep,F
                                    1- 1927     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1928     ;;unsigned compare: left >= lit (0xB=11), size=1
     0041 210B                      1- 1929     	MOVIA	0x0b
     0042 04rr                      1- 1930     	SUBAR	_startStep,W
     0043 0803                      1- 1931     	BTRSS	STATUS,0
     0044 3rrr                      1- 1932     	LGOTO	_00269_DS_
                                    1- 1933     	.line	410, "main.c"; 	ORANGEOFF();
     0045 1Err                      1- 1934     	BCR	_PORTB,4
                                    1- 1935     	.line	411, "main.c"; 	BLUEOFF();
     0046 1Err                      1- 1936     	BCR	_PORTB,5
                                    1- 1937     	.line	412, "main.c"; 	REDOFF();
     0047 1Crr                      1- 1938     	BCR	_PORTA,0
                                    1- 1939     	.line	413, "main.c"; 	startStep = 0;
     0048 02rr                      1- 1940     	CLRR	_startStep
                                    1- 1941     	.line	414, "main.c"; 	startLedFlag = 0;
     0049 1Drr                      1- 1942     	BCR	_Status,2
                                    1- 1943     	.line	415, "main.c"; 	modeStep = 1;
     004A 2101                      1- 1944     	MOVIA	0x01
     004B 00rr                      1- 1945     	MOVAR	_modeStep
                                    1- 1946     	.line	416, "main.c"; 	powerStep = 1;
     004C 00rr                      1- 1947     	MOVAR	_powerStep
                                    1- 1948     	.line	417, "main.c"; 	timeCount = 0;
     004D 02rr                      1- 1949     	CLRR	_timeCount
     004E                           1- 1950     _00269_DS_:
                                    1- 1951     	.line	420, "main.c"; 	}
                                    1- 1952     	RETURN	
     004E 0010                      3-   26 m1      ret
                                    1- 1953     ; exit point of _startCtr
                                    1- 1955     ;***
                                    1- 1956     ;  pBlock Stats: dbName = C
                                    1- 1957     ;***
                                    1- 1958     ;has an exit
                                    1- 1959     ;functions called:
                                    1- 1960     ;   _checkTouchAD
                                    1- 1961     ;   _PWM1Start
                                    1- 1962     ;   _checkHotAD
                                    1- 1963     ;   __mulint
                                    1- 1964     ;   __divuint
                                    1- 1965     ;   _checkTouchAD
                                    1- 1966     ;   _PWM1Start
                                    1- 1967     ;   _checkHotAD
                                    1- 1968     ;   __mulint
                                    1- 1969     ;   __divuint
                                    1- 1970     ;5 compiler assigned registers:
                                    1- 1971     ;   STK02
                                    1- 1972     ;   STK01
                                    1- 1973     ;   STK00
                                    1- 1974     ;   r0x1048
                                    1- 1975     ;   r0x1049
                                    1- 1976     ;; Starting pCode block
                                    1- 1977     .segment "code"; module=main, function=_workCtr
     0000                           1- 1979     _workCtr:
                                    1- 1980     ; 2 exit points
                                    1- 1981     ;;unsigned compare: left < lit (0x5=5), size=1
                                    1- 1982     	.line	303, "main.c"; 	if(checkTime < 5)
     0000 2105                      1- 1983     	MOVIA	0x05
     0001 04rr                      1- 1984     	SUBAR	_checkTime,W
     0002 0803                      1- 1985     	BTRSS	STATUS,0
                                    1- 1986     	.line	304, "main.c"; 	checkTouchAD();
     0003 2rrr                      1- 1987     	LCALL	_checkTouchAD
                                    1- 1988     	.line	305, "main.c"; 	if(R_AIN3_DATA < 1000)
     0004 2103                      1- 1989     	MOVIA	0x03
     0005 04rr                      1- 1990     	SUBAR	(_R_AIN3_DATA + 1),W
     0006 0903                      1- 1991     	BTRSS	STATUS,2
     0007 3rrr                      1- 1992     	LGOTO	_00240_DS_
     0008 21E8                      1- 1993     	MOVIA	0xe8
     0009 04rr                      1- 1994     	SUBAR	_R_AIN3_DATA,W
     000A                           1- 1995     _00240_DS_:
     000A 0C03                      1- 1996     	BTRSC	STATUS,0
     000B 3rrr                      1- 1997     	LGOTO	_00197_DS_
                                    1- 1998     	.line	308, "main.c"; 	T1CR1 = C_TMR1_En;
     000C 2101                      1- 1999     	MOVIA	0x01
     000D 00rr                      1- 2000     	SFUN	_T1CR1
                                    1- 2001     	.line	309, "main.c"; 	HOTOFF();
     000E 1Drr                      1- 2002     	BCR	_PORTB,2
     000F 3rrr                      1- 2003     	LGOTO	_00198_DS_
     0010                           1- 2004     _00197_DS_:
                                    1- 2005     	.line	313, "main.c"; 	PWM1Start();
     0010 2rrr                      1- 2006     	LCALL	_PWM1Start
                                    1- 2007     	.line	314, "main.c"; 	if(modeStep == 2)
     0011 01rr                      1- 2008     	MOVR	_modeStep,W
     0012 2402                      1- 2009     	XORIA	0x02
     0013 0903                      1- 2010     	BTRSS	STATUS,2
     0014 3rrr                      1- 2011     	LGOTO	_00198_DS_
                                    1- 2012     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2013     ;;unsigned compare: left >= lit (0x1D=29), size=1
                                    1- 2014     	.line	316, "main.c"; 	if(checkTime > 28)
     0015 211D                      1- 2015     	MOVIA	0x1d
     0016 04rr                      1- 2016     	SUBAR	_checkTime,W
     0017 0C03                      1- 2017     	BTRSC	STATUS,0
                                    1- 2018     	.line	317, "main.c"; 	checkHotAD();
     0018 2rrr                      1- 2019     	LCALL	_checkHotAD
                                    1- 2020     	.line	318, "main.c"; 	if(R_AIN3_DATA > (R_VDD_DATA*4/3))
     0019 01rr                      1- 2021     	MOVR	_R_VDD_DATA,W
     001A 00rr                      1- 2022     	MOVAR	STK02
     001B 01rr                      1- 2023     	MOVR	(_R_VDD_DATA + 1),W
     001C 00rr                      1- 2024     	MOVAR	STK01
     001D 2104                      1- 2025     	MOVIA	0x04
     001E 00rr                      1- 2026     	MOVAR	STK00
     001F 2100                      1- 2027     	MOVIA	0x00
     0020 2rrr                      1- 2028     	LCALL	__mulint
     0021 00rr                      1- 2029     	MOVAR	r0x1048
     0022 01rr                      1- 2030     	MOVR	STK00,W
     0023 00rr                      1- 2031     	MOVAR	r0x1049
     0024 2103                      1- 2032     	MOVIA	0x03
     0025 00rr                      1- 2033     	MOVAR	STK02
     0026 2100                      1- 2034     	MOVIA	0x00
     0027 00rr                      1- 2035     	MOVAR	STK01
     0028 01rr                      1- 2036     	MOVR	r0x1049,W
     0029 00rr                      1- 2037     	MOVAR	STK00
     002A 01rr                      1- 2038     	MOVR	r0x1048,W
     002B 2rrr                      1- 2039     	LCALL	__divuint
     002C 00rr                      1- 2040     	MOVAR	r0x1048
     002D 01rr                      1- 2041     	MOVR	STK00,W
     002E 00rr                      1- 2042     	MOVAR	r0x1049
     002F 01rr                      1- 2043     	MOVR	(_R_AIN3_DATA + 1),W
     0030 04rr                      1- 2044     	SUBAR	r0x1048,W
     0031 0903                      1- 2045     	BTRSS	STATUS,2
     0032 3rrr                      1- 2046     	LGOTO	_00242_DS_
     0033 01rr                      1- 2047     	MOVR	_R_AIN3_DATA,W
     0034 04rr                      1- 2048     	SUBAR	r0x1049,W
     0035                           1- 2049     _00242_DS_:
     0035 0C03                      1- 2050     	BTRSC	STATUS,0
     0036 3rrr                      1- 2051     	LGOTO	_00192_DS_
                                    1- 2052     	.line	321, "main.c"; 	HOTOFF();
     0037 1Drr                      1- 2053     	BCR	_PORTB,2
     0038 3rrr                      1- 2054     	LGOTO	_00198_DS_
     0039                           1- 2055     _00192_DS_:
                                    1- 2056     	.line	325, "main.c"; 	HOTON();
     0039 19rr                      1- 2057     	BSR	_PORTB,2
                                    1- 2058     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2059     ;;unsigned compare: left >= lit (0x3E9=1001), size=2
     003A                           1- 2060     _00198_DS_:
                                    1- 2061     	.line	329, "main.c"; 	if(R_AIN3_DATA > 1000)
     003A 2103                      1- 2062     	MOVIA	0x03
     003B 04rr                      1- 2063     	SUBAR	(_R_AIN3_DATA + 1),W
     003C 0903                      1- 2064     	BTRSS	STATUS,2
     003D 3rrr                      1- 2065     	LGOTO	_00243_DS_
     003E 21E9                      1- 2066     	MOVIA	0xe9
     003F 04rr                      1- 2067     	SUBAR	_R_AIN3_DATA,W
     0040                           1- 2068     _00243_DS_:
     0040 0803                      1- 2069     	BTRSS	STATUS,0
     0041 3rrr                      1- 2070     	LGOTO	_00208_DS_
                                    1- 2071     	.line	331, "main.c"; 	if(modeStep == 1)
     0042 01rr                      1- 2072     	MOVR	_modeStep,W
     0043 2401                      1- 2073     	XORIA	0x01
     0044 0903                      1- 2074     	BTRSS	STATUS,2
     0045 3rrr                      1- 2075     	LGOTO	_00205_DS_
                                    1- 2076     	.line	333, "main.c"; 	BLUEON();
     0046 1Arr                      1- 2077     	BSR	_PORTB,5
                                    1- 2078     	.line	334, "main.c"; 	ORANGEOFF();
     0047 1Err                      1- 2079     	BCR	_PORTB,4
                                    1- 2080     	.line	335, "main.c"; 	REDOFF();
     0048 1Crr                      1- 2081     	BCR	_PORTA,0
     0049 3rrr                      1- 2082     	LGOTO	_00210_DS_
     004A                           1- 2083     _00205_DS_:
                                    1- 2084     	.line	337, "main.c"; 	else if(modeStep == 2)
     004A 01rr                      1- 2085     	MOVR	_modeStep,W
     004B 2402                      1- 2086     	XORIA	0x02
     004C 0903                      1- 2087     	BTRSS	STATUS,2
     004D 3rrr                      1- 2088     	LGOTO	_00202_DS_
                                    1- 2089     	.line	339, "main.c"; 	BLUEOFF();
     004E 1Err                      1- 2090     	BCR	_PORTB,5
                                    1- 2091     	.line	340, "main.c"; 	ORANGEON();
     004F 1Arr                      1- 2092     	BSR	_PORTB,4
                                    1- 2093     	.line	341, "main.c"; 	REDOFF();
     0050 1Crr                      1- 2094     	BCR	_PORTA,0
     0051 3rrr                      1- 2095     	LGOTO	_00210_DS_
                                    1- 2096     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2097     ;;unsigned compare: left >= lit (0x3=3), size=1
     0052                           1- 2098     _00202_DS_:
                                    1- 2099     	.line	343, "main.c"; 	else if(modeStep > 2)
     0052 2103                      1- 2100     	MOVIA	0x03
     0053 04rr                      1- 2101     	SUBAR	_modeStep,W
     0054 0803                      1- 2102     	BTRSS	STATUS,0
     0055 3rrr                      1- 2103     	LGOTO	_00210_DS_
                                    1- 2104     	.line	345, "main.c"; 	BLUEOFF();
     0056 1Err                      1- 2105     	BCR	_PORTB,5
                                    1- 2106     	.line	346, "main.c"; 	REDON();
     0057 18rr                      1- 2107     	BSR	_PORTA,0
                                    1- 2108     	.line	347, "main.c"; 	ORANGEOFF();
     0058 1Err                      1- 2109     	BCR	_PORTB,4
     0059 3rrr                      1- 2110     	LGOTO	_00210_DS_
     005A                           1- 2111     _00208_DS_:
                                    1- 2112     	.line	352, "main.c"; 	BLUEOFF();
     005A 1Err                      1- 2113     	BCR	_PORTB,5
                                    1- 2114     	.line	353, "main.c"; 	REDOFF();
     005B 1Crr                      1- 2115     	BCR	_PORTA,0
                                    1- 2116     	.line	354, "main.c"; 	ORANGEOFF();
     005C 1Err                      1- 2117     	BCR	_PORTB,4
     005D                           1- 2118     _00210_DS_:
                                    1- 2119     	.line	356, "main.c"; 	}
                                    1- 2120     	RETURN	
     005D 0010                      3-   26 m1      ret
                                    1- 2121     ; exit point of _workCtr
                                    1- 2123     ;***
                                    1- 2124     ;  pBlock Stats: dbName = C
                                    1- 2125     ;***
                                    1- 2126     ;; Starting pCode block
                                    1- 2127     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2129     _chrgCtr:
                                    1- 2130     ; 0 exit points
                                    1- 2131     	.line	279, "main.c"; 	if(PORTA & 0x20)
     0000 0Arr                      1- 2132     	BTRSS	_PORTA,5
     0001 3rrr                      1- 2133     	LGOTO	_00180_DS_
                                    1- 2134     	.line	281, "main.c"; 	chrgFlag = 0;
     0002 1Drr                      1- 2135     	BCR	_Status,3
     0003 3rrr                      1- 2136     	LGOTO	_00182_DS_
     0004                           1- 2137     _00180_DS_:
                                    1- 2138     	.line	285, "main.c"; 	chrgFlag = 1;//充电中
     0004 19rr                      1- 2139     	BSR	_Status,3
                                    1- 2140     	.line	286, "main.c"; 	modeStep = 0;
     0005 02rr                      1- 2141     	CLRR	_modeStep
                                    1- 2142     	.line	287, "main.c"; 	powerStep = 0;
     0006 02rr                      1- 2143     	CLRR	_powerStep
                                    1- 2144     	.line	288, "main.c"; 	if(++timeCount > 50)
     0007 05rr                      1- 2145     	INCR	_timeCount,F
                                    1- 2146     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2147     ;;unsigned compare: left >= lit (0x33=51), size=1
     0008 2133                      1- 2148     	MOVIA	0x33
     0009 04rr                      1- 2149     	SUBAR	_timeCount,W
     000A 0803                      1- 2150     	BTRSS	STATUS,0
     000B 3rrr                      1- 2151     	LGOTO	_00182_DS_
                                    1- 2152     	.line	290, "main.c"; 	timeCount = 0;
     000C 02rr                      1- 2153     	CLRR	_timeCount
                                    1- 2154     	.line	292, "main.c"; 	if(++chrgLedStep > 2)
     000D 05rr                      1- 2155     	INCR	_chrgLedStep,F
                                    1- 2156     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2157     ;;unsigned compare: left >= lit (0x3=3), size=1
     000E 2103                      1- 2158     	MOVIA	0x03
     000F 04rr                      1- 2159     	SUBAR	_chrgLedStep,W
     0010 0C03                      1- 2160     	BTRSC	STATUS,0
                                    1- 2161     	.line	294, "main.c"; 	chrgLedStep = 0;
     0011 02rr                      1- 2162     	CLRR	_chrgLedStep
     0012                           1- 2163     _00182_DS_:
                                    1- 2164     	.line	298, "main.c"; 	}
                                    1- 2165     	RETURN	
     0012 0010                      3-   26 m1      ret
                                    1- 2167     ;***
                                    1- 2168     ;  pBlock Stats: dbName = C
                                    1- 2169     ;***
                                    1- 2170     ;has an exit
                                    1- 2171     ;functions called:
                                    1- 2172     ;   _delay
                                    1- 2173     ;   _LedInput
                                    1- 2174     ;   _delay
                                    1- 2175     ;   _LedInput
                                    1- 2176     ;1 compiler assigned register :
                                    1- 2177     ;   r0x1033
                                    1- 2178     ;; Starting pCode block
                                    1- 2179     .segment "code"; module=main, function=_POWERLOW
     0000                           1- 2181     _POWERLOW:
                                    1- 2182     ; 2 exit points
                                    1- 2183     	.line	268, "main.c"; 	LEDL0OUT();
     0000 001r                      1- 2184     	IOSTR	_IOSTA
     0001 00rr                      1- 2185     	MOVAR	r0x1033
     0002 1Frr                      1- 2186     	BCR	r0x1033,6
     0003 01rr                      1- 2187     	MOVR	r0x1033,W
     0004 000r                      1- 2188     	IOST	_IOSTA
                                    1- 2189     	.line	269, "main.c"; 	LEDW0OUT();
     0005 001r                      1- 2190     	IOSTR	_IOSTB
     0006 00rr                      1- 2191     	MOVAR	r0x1033
     0007 1Crr                      1- 2192     	BCR	r0x1033,0
     0008 01rr                      1- 2193     	MOVR	r0x1033,W
     0009 000r                      1- 2194     	IOST	_IOSTB
                                    1- 2195     	.line	270, "main.c"; 	LEDL0ON();
     000A 1Brr                      1- 2196     	BSR	_PORTA,6
                                    1- 2197     	.line	271, "main.c"; 	LEDW0OFF();
     000B 1Crr                      1- 2198     	BCR	_PORTB,0
                                    1- 2199     	.line	272, "main.c"; 	delay(100);
     000C 2164                      1- 2200     	MOVIA	0x64
     000D 2rrr                      1- 2201     	LCALL	_delay
                                    1- 2202     	.line	273, "main.c"; 	LedInput();
     000E 2rrr                      1- 2203     	LCALL	_LedInput
                                    1- 2204     	.line	274, "main.c"; 	}
                                    1- 2205     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 2206     ; exit point of _POWERLOW
                                    1- 2208     ;***
                                    1- 2209     ;  pBlock Stats: dbName = C
                                    1- 2210     ;***
                                    1- 2211     ;has an exit
                                    1- 2212     ;functions called:
                                    1- 2213     ;   _delay
                                    1- 2214     ;   _LedInput
                                    1- 2215     ;   _delay
                                    1- 2216     ;   _LedInput
                                    1- 2217     ;1 compiler assigned register :
                                    1- 2218     ;   r0x1033
                                    1- 2219     ;; Starting pCode block
                                    1- 2220     .segment "code"; module=main, function=_POWERMID
     0000                           1- 2222     _POWERMID:
                                    1- 2223     ; 2 exit points
                                    1- 2224     	.line	258, "main.c"; 	LEDL1OUT();
     0000 001r                      1- 2225     	IOSTR	_IOSTA
     0001 00rr                      1- 2226     	MOVAR	r0x1033
     0002 1Frr                      1- 2227     	BCR	r0x1033,7
     0003 01rr                      1- 2228     	MOVR	r0x1033,W
     0004 000r                      1- 2229     	IOST	_IOSTA
                                    1- 2230     	.line	259, "main.c"; 	LEDW0OUT();
     0005 001r                      1- 2231     	IOSTR	_IOSTB
     0006 00rr                      1- 2232     	MOVAR	r0x1033
     0007 1Crr                      1- 2233     	BCR	r0x1033,0
     0008 01rr                      1- 2234     	MOVR	r0x1033,W
     0009 000r                      1- 2235     	IOST	_IOSTB
                                    1- 2236     	.line	260, "main.c"; 	LEDL1ON();
     000A 1Brr                      1- 2237     	BSR	_PORTA,7
                                    1- 2238     	.line	261, "main.c"; 	LEDW0OFF();
     000B 1Crr                      1- 2239     	BCR	_PORTB,0
                                    1- 2240     	.line	262, "main.c"; 	delay(100);
     000C 2164                      1- 2241     	MOVIA	0x64
     000D 2rrr                      1- 2242     	LCALL	_delay
                                    1- 2243     	.line	263, "main.c"; 	LedInput();
     000E 2rrr                      1- 2244     	LCALL	_LedInput
                                    1- 2245     	.line	264, "main.c"; 	}
                                    1- 2246     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 2247     ; exit point of _POWERMID
                                    1- 2249     ;***
                                    1- 2250     ;  pBlock Stats: dbName = C
                                    1- 2251     ;***
                                    1- 2252     ;has an exit
                                    1- 2253     ;functions called:
                                    1- 2254     ;   _delay
                                    1- 2255     ;   _LedInput
                                    1- 2256     ;   _delay
                                    1- 2257     ;   _LedInput
                                    1- 2258     ;1 compiler assigned register :
                                    1- 2259     ;   r0x1033
                                    1- 2260     ;; Starting pCode block
                                    1- 2261     .segment "code"; module=main, function=_POWERHIGHT
     0000                           1- 2263     _POWERHIGHT:
                                    1- 2264     ; 2 exit points
                                    1- 2265     	.line	248, "main.c"; 	LEDL2OUT();
     0000 001r                      1- 2266     	IOSTR	_IOSTB
     0001 00rr                      1- 2267     	MOVAR	r0x1033
     0002 1Crr                      1- 2268     	BCR	r0x1033,1
     0003 01rr                      1- 2269     	MOVR	r0x1033,W
     0004 000r                      1- 2270     	IOST	_IOSTB
                                    1- 2271     	.line	249, "main.c"; 	LEDW0OUT();
     0005 001r                      1- 2272     	IOSTR	_IOSTB
     0006 00rr                      1- 2273     	MOVAR	r0x1033
     0007 1Crr                      1- 2274     	BCR	r0x1033,0
     0008 01rr                      1- 2275     	MOVR	r0x1033,W
     0009 000r                      1- 2276     	IOST	_IOSTB
                                    1- 2277     	.line	250, "main.c"; 	LEDL2ON();
     000A 18rr                      1- 2278     	BSR	_PORTB,1
                                    1- 2279     	.line	251, "main.c"; 	LEDW0OFF();
     000B 1Crr                      1- 2280     	BCR	_PORTB,0
                                    1- 2281     	.line	252, "main.c"; 	delay(100);
     000C 2164                      1- 2282     	MOVIA	0x64
     000D 2rrr                      1- 2283     	LCALL	_delay
                                    1- 2284     	.line	253, "main.c"; 	LedInput();
     000E 2rrr                      1- 2285     	LCALL	_LedInput
                                    1- 2286     	.line	254, "main.c"; 	}
                                    1- 2287     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 2288     ; exit point of _POWERHIGHT
                                    1- 2290     ;***
                                    1- 2291     ;  pBlock Stats: dbName = C
                                    1- 2292     ;***
                                    1- 2293     ;has an exit
                                    1- 2294     ;functions called:
                                    1- 2295     ;   _delay
                                    1- 2296     ;   _LedInput
                                    1- 2297     ;   _delay
                                    1- 2298     ;   _LedInput
                                    1- 2299     ;1 compiler assigned register :
                                    1- 2300     ;   r0x1033
                                    1- 2301     ;; Starting pCode block
                                    1- 2302     .segment "code"; module=main, function=_BATLOW
     0000                           1- 2304     _BATLOW:
                                    1- 2305     ; 2 exit points
                                    1- 2306     	.line	238, "main.c"; 	LEDL0OUT();
     0000 001r                      1- 2307     	IOSTR	_IOSTA
     0001 00rr                      1- 2308     	MOVAR	r0x1033
     0002 1Frr                      1- 2309     	BCR	r0x1033,6
     0003 01rr                      1- 2310     	MOVR	r0x1033,W
     0004 000r                      1- 2311     	IOST	_IOSTA
                                    1- 2312     	.line	239, "main.c"; 	LEDW1OUT();
     0005 001r                      1- 2313     	IOSTR	_IOSTA
     0006 00rr                      1- 2314     	MOVAR	r0x1033
     0007 1Drr                      1- 2315     	BCR	r0x1033,2
     0008 01rr                      1- 2316     	MOVR	r0x1033,W
     0009 000r                      1- 2317     	IOST	_IOSTA
                                    1- 2318     	.line	240, "main.c"; 	LEDL0ON();
     000A 1Brr                      1- 2319     	BSR	_PORTA,6
                                    1- 2320     	.line	241, "main.c"; 	LEDW1OFF();
     000B 1Drr                      1- 2321     	BCR	_PORTA,2
                                    1- 2322     	.line	242, "main.c"; 	delay(100);
     000C 2164                      1- 2323     	MOVIA	0x64
     000D 2rrr                      1- 2324     	LCALL	_delay
                                    1- 2325     	.line	243, "main.c"; 	LedInput();
     000E 2rrr                      1- 2326     	LCALL	_LedInput
                                    1- 2327     	.line	244, "main.c"; 	}
                                    1- 2328     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 2329     ; exit point of _BATLOW
                                    1- 2331     ;***
                                    1- 2332     ;  pBlock Stats: dbName = C
                                    1- 2333     ;***
                                    1- 2334     ;has an exit
                                    1- 2335     ;functions called:
                                    1- 2336     ;   _delay
                                    1- 2337     ;   _LedInput
                                    1- 2338     ;   _delay
                                    1- 2339     ;   _LedInput
                                    1- 2340     ;1 compiler assigned register :
                                    1- 2341     ;   r0x1033
                                    1- 2342     ;; Starting pCode block
                                    1- 2343     .segment "code"; module=main, function=_BATHIGHT
     0000                           1- 2345     _BATHIGHT:
                                    1- 2346     ; 2 exit points
                                    1- 2347     	.line	228, "main.c"; 	LEDL1OUT();
     0000 001r                      1- 2348     	IOSTR	_IOSTA
     0001 00rr                      1- 2349     	MOVAR	r0x1033
     0002 1Frr                      1- 2350     	BCR	r0x1033,7
     0003 01rr                      1- 2351     	MOVR	r0x1033,W
     0004 000r                      1- 2352     	IOST	_IOSTA
                                    1- 2353     	.line	229, "main.c"; 	LEDW1OUT();
     0005 001r                      1- 2354     	IOSTR	_IOSTA
     0006 00rr                      1- 2355     	MOVAR	r0x1033
     0007 1Drr                      1- 2356     	BCR	r0x1033,2
     0008 01rr                      1- 2357     	MOVR	r0x1033,W
     0009 000r                      1- 2358     	IOST	_IOSTA
                                    1- 2359     	.line	230, "main.c"; 	LEDL1ON();
     000A 1Brr                      1- 2360     	BSR	_PORTA,7
                                    1- 2361     	.line	231, "main.c"; 	LEDW1OFF();
     000B 1Drr                      1- 2362     	BCR	_PORTA,2
                                    1- 2363     	.line	232, "main.c"; 	delay(100);
     000C 2164                      1- 2364     	MOVIA	0x64
     000D 2rrr                      1- 2365     	LCALL	_delay
                                    1- 2366     	.line	233, "main.c"; 	LedInput();
     000E 2rrr                      1- 2367     	LCALL	_LedInput
                                    1- 2368     	.line	234, "main.c"; 	}
                                    1- 2369     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 2370     ; exit point of _BATHIGHT
                                    1- 2372     ;***
                                    1- 2373     ;  pBlock Stats: dbName = C
                                    1- 2374     ;***
                                    1- 2375     ;has an exit
                                    1- 2376     ;functions called:
                                    1- 2377     ;   _delay
                                    1- 2378     ;   _LedInput
                                    1- 2379     ;   _delay
                                    1- 2380     ;   _LedInput
                                    1- 2381     ;1 compiler assigned register :
                                    1- 2382     ;   r0x1033
                                    1- 2383     ;; Starting pCode block
                                    1- 2384     .segment "code"; module=main, function=_LEDMODE1
     0000                           1- 2386     _LEDMODE1:
                                    1- 2387     ; 2 exit points
                                    1- 2388     	.line	218, "main.c"; 	LEDL2OUT();
     0000 001r                      1- 2389     	IOSTR	_IOSTB
     0001 00rr                      1- 2390     	MOVAR	r0x1033
     0002 1Crr                      1- 2391     	BCR	r0x1033,1
     0003 01rr                      1- 2392     	MOVR	r0x1033,W
     0004 000r                      1- 2393     	IOST	_IOSTB
                                    1- 2394     	.line	219, "main.c"; 	LEDW1OUT();
     0005 001r                      1- 2395     	IOSTR	_IOSTA
     0006 00rr                      1- 2396     	MOVAR	r0x1033
     0007 1Drr                      1- 2397     	BCR	r0x1033,2
     0008 01rr                      1- 2398     	MOVR	r0x1033,W
     0009 000r                      1- 2399     	IOST	_IOSTA
                                    1- 2400     	.line	220, "main.c"; 	LEDL2ON();
     000A 18rr                      1- 2401     	BSR	_PORTB,1
                                    1- 2402     	.line	221, "main.c"; 	LEDW1OFF();
     000B 1Drr                      1- 2403     	BCR	_PORTA,2
                                    1- 2404     	.line	222, "main.c"; 	delay(100);
     000C 2164                      1- 2405     	MOVIA	0x64
     000D 2rrr                      1- 2406     	LCALL	_delay
                                    1- 2407     	.line	223, "main.c"; 	LedInput();
     000E 2rrr                      1- 2408     	LCALL	_LedInput
                                    1- 2409     	.line	224, "main.c"; 	}
                                    1- 2410     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 2411     ; exit point of _LEDMODE1
                                    1- 2413     ;***
                                    1- 2414     ;  pBlock Stats: dbName = C
                                    1- 2415     ;***
                                    1- 2416     ;has an exit
                                    1- 2417     ;functions called:
                                    1- 2418     ;   _delay
                                    1- 2419     ;   _LedInput
                                    1- 2420     ;   _delay
                                    1- 2421     ;   _LedInput
                                    1- 2422     ;1 compiler assigned register :
                                    1- 2423     ;   r0x1033
                                    1- 2424     ;; Starting pCode block
                                    1- 2425     .segment "code"; module=main, function=_LEDMODE2
     0000                           1- 2427     _LEDMODE2:
                                    1- 2428     ; 2 exit points
                                    1- 2429     	.line	208, "main.c"; 	LEDW0OUT();
     0000 001r                      1- 2430     	IOSTR	_IOSTB
     0001 00rr                      1- 2431     	MOVAR	r0x1033
     0002 1Crr                      1- 2432     	BCR	r0x1033,0
     0003 01rr                      1- 2433     	MOVR	r0x1033,W
     0004 000r                      1- 2434     	IOST	_IOSTB
                                    1- 2435     	.line	209, "main.c"; 	LEDL0OUT();
     0005 001r                      1- 2436     	IOSTR	_IOSTA
     0006 00rr                      1- 2437     	MOVAR	r0x1033
     0007 1Frr                      1- 2438     	BCR	r0x1033,6
     0008 01rr                      1- 2439     	MOVR	r0x1033,W
     0009 000r                      1- 2440     	IOST	_IOSTA
                                    1- 2441     	.line	210, "main.c"; 	LEDW0ON();
     000A 18rr                      1- 2442     	BSR	_PORTB,0
                                    1- 2443     	.line	211, "main.c"; 	LEDL0OFF();
     000B 1Frr                      1- 2444     	BCR	_PORTA,6
                                    1- 2445     	.line	212, "main.c"; 	delay(100);
     000C 2164                      1- 2446     	MOVIA	0x64
     000D 2rrr                      1- 2447     	LCALL	_delay
                                    1- 2448     	.line	213, "main.c"; 	LedInput();
     000E 2rrr                      1- 2449     	LCALL	_LedInput
                                    1- 2450     	.line	214, "main.c"; 	}
                                    1- 2451     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 2452     ; exit point of _LEDMODE2
                                    1- 2454     ;***
                                    1- 2455     ;  pBlock Stats: dbName = C
                                    1- 2456     ;***
                                    1- 2457     ;has an exit
                                    1- 2458     ;functions called:
                                    1- 2459     ;   _delay
                                    1- 2460     ;   _LedInput
                                    1- 2461     ;   _delay
                                    1- 2462     ;   _LedInput
                                    1- 2463     ;1 compiler assigned register :
                                    1- 2464     ;   r0x1033
                                    1- 2465     ;; Starting pCode block
                                    1- 2466     .segment "code"; module=main, function=_LEDMODE3
     0000                           1- 2468     _LEDMODE3:
                                    1- 2469     ; 2 exit points
                                    1- 2470     	.line	198, "main.c"; 	LEDW0OUT();
     0000 001r                      1- 2471     	IOSTR	_IOSTB
     0001 00rr                      1- 2472     	MOVAR	r0x1033
     0002 1Crr                      1- 2473     	BCR	r0x1033,0
     0003 01rr                      1- 2474     	MOVR	r0x1033,W
     0004 000r                      1- 2475     	IOST	_IOSTB
                                    1- 2476     	.line	199, "main.c"; 	LEDL1OUT();
     0005 001r                      1- 2477     	IOSTR	_IOSTA
     0006 00rr                      1- 2478     	MOVAR	r0x1033
     0007 1Frr                      1- 2479     	BCR	r0x1033,7
     0008 01rr                      1- 2480     	MOVR	r0x1033,W
     0009 000r                      1- 2481     	IOST	_IOSTA
                                    1- 2482     	.line	200, "main.c"; 	LEDW0ON();
     000A 18rr                      1- 2483     	BSR	_PORTB,0
                                    1- 2484     	.line	201, "main.c"; 	LEDL1OFF();
     000B 1Frr                      1- 2485     	BCR	_PORTA,7
                                    1- 2486     	.line	202, "main.c"; 	delay(100);
     000C 2164                      1- 2487     	MOVIA	0x64
     000D 2rrr                      1- 2488     	LCALL	_delay
                                    1- 2489     	.line	203, "main.c"; 	LedInput();
     000E 2rrr                      1- 2490     	LCALL	_LedInput
                                    1- 2491     	.line	204, "main.c"; 	}
                                    1- 2492     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 2493     ; exit point of _LEDMODE3
                                    1- 2495     ;***
                                    1- 2496     ;  pBlock Stats: dbName = C
                                    1- 2497     ;***
                                    1- 2498     ;has an exit
                                    1- 2499     ;functions called:
                                    1- 2500     ;   _delay
                                    1- 2501     ;   _LedInput
                                    1- 2502     ;   _delay
                                    1- 2503     ;   _LedInput
                                    1- 2504     ;1 compiler assigned register :
                                    1- 2505     ;   r0x1033
                                    1- 2506     ;; Starting pCode block
                                    1- 2507     .segment "code"; module=main, function=_LEDMODE4
     0000                           1- 2509     _LEDMODE4:
                                    1- 2510     ; 2 exit points
                                    1- 2511     	.line	188, "main.c"; 	LEDW1OUT();
     0000 001r                      1- 2512     	IOSTR	_IOSTA
     0001 00rr                      1- 2513     	MOVAR	r0x1033
     0002 1Drr                      1- 2514     	BCR	r0x1033,2
     0003 01rr                      1- 2515     	MOVR	r0x1033,W
     0004 000r                      1- 2516     	IOST	_IOSTA
                                    1- 2517     	.line	189, "main.c"; 	LEDL2OUT();
     0005 001r                      1- 2518     	IOSTR	_IOSTB
     0006 00rr                      1- 2519     	MOVAR	r0x1033
     0007 1Crr                      1- 2520     	BCR	r0x1033,1
     0008 01rr                      1- 2521     	MOVR	r0x1033,W
     0009 000r                      1- 2522     	IOST	_IOSTB
                                    1- 2523     	.line	190, "main.c"; 	LEDW1ON();
     000A 19rr                      1- 2524     	BSR	_PORTA,2
                                    1- 2525     	.line	191, "main.c"; 	LEDL2OFF();
     000B 1Crr                      1- 2526     	BCR	_PORTB,1
                                    1- 2527     	.line	192, "main.c"; 	delay(100);
     000C 2164                      1- 2528     	MOVIA	0x64
     000D 2rrr                      1- 2529     	LCALL	_delay
                                    1- 2530     	.line	193, "main.c"; 	LedInput();
     000E 2rrr                      1- 2531     	LCALL	_LedInput
                                    1- 2532     	.line	194, "main.c"; 	}
                                    1- 2533     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 2534     ; exit point of _LEDMODE4
                                    1- 2536     ;***
                                    1- 2537     ;  pBlock Stats: dbName = C
                                    1- 2538     ;***
                                    1- 2539     ;has an exit
                                    1- 2540     ;1 compiler assigned register :
                                    1- 2541     ;   r0x1032
                                    1- 2542     ;; Starting pCode block
                                    1- 2543     .segment "code"; module=main, function=_LedInput
     0000                           1- 2545     _LedInput:
                                    1- 2546     ; 2 exit points
                                    1- 2547     	.line	179, "main.c"; 	PORTA &= 0x3B;
     0000 213B                      1- 2548     	MOVIA	0x3b
     0001 10rr                      1- 2549     	ANDAR	_PORTA,F
                                    1- 2550     	.line	180, "main.c"; 	PORTB &= 0xFC;
     0002 21FC                      1- 2551     	MOVIA	0xfc
     0003 10rr                      1- 2552     	ANDAR	_PORTB,F
                                    1- 2553     	.line	181, "main.c"; 	IOSTA |= 0xC4;
     0004 001r                      1- 2554     	IOSTR	_IOSTA
     0005 00rr                      1- 2555     	MOVAR	r0x1032
     0006 21C4                      1- 2556     	MOVIA	0xc4
     0007 11rr                      1- 2557     	IORAR	r0x1032,F
     0008 01rr                      1- 2558     	MOVR	r0x1032,W
     0009 000r                      1- 2559     	IOST	_IOSTA
                                    1- 2560     	.line	182, "main.c"; 	IOSTB |= 0x03;
     000A 001r                      1- 2561     	IOSTR	_IOSTB
     000B 00rr                      1- 2562     	MOVAR	r0x1032
     000C 2103                      1- 2563     	MOVIA	0x03
     000D 11rr                      1- 2564     	IORAR	r0x1032,F
     000E 01rr                      1- 2565     	MOVR	r0x1032,W
     000F 000r                      1- 2566     	IOST	_IOSTB
                                    1- 2567     	.line	183, "main.c"; 	}
                                    1- 2568     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1- 2569     ; exit point of _LedInput
                                    1- 2571     ;***
                                    1- 2572     ;  pBlock Stats: dbName = C
                                    1- 2573     ;***
                                    1- 2574     ;has an exit
                                    1- 2575     ;; Starting pCode block
                                    1- 2576     .segment "code"; module=main, function=_initSys
     0000                           1- 2578     _initSys:
                                    1- 2579     ; 2 exit points
                                    1- 2580     	.line	112, "main.c"; 	DISI();
     0000 0013                      1- 2581     	DISI
                                    1- 2582     	.line	113, "main.c"; 	IOSTA = C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA1_Input;
     0001 213A                      1- 2583     	MOVIA	0x3a
     0002 000r                      1- 2584     	IOST	_IOSTA
                                    1- 2585     	.line	114, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 2586     	CLRA	
     0004 000r                      1- 2587     	IOST	_IOSTB
                                    1- 2588     	.line	115, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2589     	CLRR	_PORTB
                                    1- 2590     	.line	116, "main.c"; 	PORTA = 0x00;
     0006 02rr                      1- 2591     	CLRR	_PORTA
                                    1- 2592     	.line	117, "main.c"; 	APHCON = 0xFF;
     0007 21FF                      1- 2593     	MOVIA	0xff
     0008 000r                      1- 2594     	IOST	_APHCON
                                    1- 2595     	.line	118, "main.c"; 	BPHCON = 0xFF;
     0009 00rr                      1- 2596     	MOVAR	_BPHCON
                                    1- 2597     	.line	120, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000A 2101                      1- 2598     	MOVIA	0x01
     000B 00rr                      1- 2599     	MOVAR	_INTE
                                    1- 2600     	.line	122, "main.c"; 	PCON1 = C_TMR0_Dis;
     000C 0200                      1- 2601     	CLRA	
     000D 000r                      1- 2602     	IOST	_PCON1
                                    1- 2603     	.line	124, "main.c"; 	TMR0 = 55;
     000E 2137                      1- 2604     	MOVIA	0x37
     000F 00rr                      1- 2605     	MOVAR	_TMR0
                                    1- 2606     	.line	125, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0010 0200                      1- 2607     	CLRA	
     0011 0003                      1- 2608     	T0MD	
                                    1- 2609     	.line	127, "main.c"; 	PCON1 = C_TMR0_En;
     0012 2101                      1- 2610     	MOVIA	0x01
     0013 000r                      1- 2611     	IOST	_PCON1
                                    1- 2612     	.line	130, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0014 2188                      1- 2613     	MOVIA	0x88
     0015 00rr                      1- 2614     	MOVAR	_PCON
                                    1- 2615     	.line	133, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0016 2101                      1- 2616     	MOVIA	0x01
     0017 000r                      1- 2617     	IOST	_PCON1
                                    1- 2618     	.line	134, "main.c"; 	ENI();
     0018 0004                      1- 2619     	ENI
                                    1- 2620     	.line	135, "main.c"; 	}
                                    1- 2621     	RETURN	
     0019 0010                      3-   26 m1      ret
                                    1- 2622     ; exit point of _initSys
                                    1- 2625     ;	code size estimation:
                                    1- 2626     ;	 1040+    0 =  1040 instructions ( 2080 byte)
                                    1- 2628     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__divuint               Label    00000000
__mulint                Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810613
__sdcc_interrupt        Label    00000000
_00108_DS_              Label    00000018
_00110_DS_              Label    0000001C
_00122_DS_              Label    00000012
_00125_DS_              Label    0000001D
_00130_DS_              Label    00000002
_00180_DS_              Label    00000004
_00182_DS_              Label    00000012
_00192_DS_              Label    00000039
_00197_DS_              Label    00000010
_00198_DS_              Label    0000003A
_00202_DS_              Label    00000052
_00205_DS_              Label    0000004A
_00208_DS_              Label    0000005A
_00210_DS_              Label    0000005D
_00240_DS_              Label    0000000A
_00242_DS_              Label    00000035
_00243_DS_              Label    00000040
_00251_DS_              Label    00000038
_00254_DS_              Label    0000002E
_00257_DS_              Label    00000022
_00260_DS_              Label    00000019
_00263_DS_              Label    00000010
_00264_DS_              Label    00000040
_00269_DS_              Label    0000004E
_00275_DS_              Label    00000007
_00279_DS_              Label    00000026
_00282_DS_              Label    00000017
_00285_DS_              Label    00000028
_00288_DS_              Label    00000032
_00291_DS_              Label    0000003A
_00294_DS_              Label    00000055
_00297_DS_              Label    00000058
_00298_DS_              Label    00000059
_00301_DS_              Label    00000073
_00303_DS_              Label    0000006C
_00310_DS_              Label    00000076
_00317_DS_              Label    0000008E
_00322_DS_              Label    00000081
_00324_DS_              Label    00000098
_00396_DS_              Label    00000012
_00397_DS_              Label    00000021
_00400_DS_              Label    00000040
_00401_DS_              Label    00000048
_00402_DS_              Label    00000050
_00409_DS_              Label    0000000D
_00416_DS_              Label    0000000D
_00444_DS_              Label    0000001A
_00445_DS_              Label    00000021
_00447_DS_              Label    00000012
_00448_DS_              Label    00000023
_00449_DS_              Label    00000024
_00458_DS_              Label    00000011
_00459_DS_              Label    00000013
_00460_DS_              Label    00000015
_00461_DS_              Label    00000017
_00462_DS_              Label    00000019
_00463_DS_              Label    0000001B
_00464_DS_              Label    0000001C
_00465_DS_              Label    0000002A
_00466_DS_              Label    0000002C
_00467_DS_              Label    0000002E
_00468_DS_              Label    00000030
_00469_DS_              Label    0000003F
_00470_DS_              Label    00000041
_00471_DS_              Label    00000043
_00472_DS_              Label    00000046
_00474_DS_              Label    00000049
_00486_DS_              Label    0000000C
_00488_DS_              Label    00000027
_00490_DS_              Label    0000003B
_00495_DS_              Label    00000000
_00502_DS_              Label    00000002
_00504_DS_              Label    00000009
_00511_DS_              Label    0000000A
_00513_DS_              Label    0000001F
_00520_DS_              Label    0000000A
_00522_DS_              Label    0000001F
_00529_DS_              Label    0000000A
_00531_DS_              Label    0000001F
_00538_DS_              Label    0000000A
_00540_DS_              Label    0000001F
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADKeyCtr               Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BATHIGHT               Label    00000000
_BATLOW                 Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkBAT               Label    00000000
_checkHotAD             Label    00000000
_checkKeyAD             Label    00000000
_checkTime              Label    00000000
_checkTouchAD           Label    00000000
_chrgCtr                Label    00000000
_chrgLedStep            Label    00000000
_delay                  Label    00000000
_F_AIN1_Convert         Label    00000000
_F_AIN3_Convert         Label    00000000
_F_AIN4_Convert         Label    00000000
_F_VDD_Convert          Label    00000000
_F_wait_eoc             Label    00000000
_FSR                    Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_initSys                Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyNub                 Label    00000000
_keyRead                Label    00000000
_LedInput               Label    00000000
_LEDMODE1               Label    00000000
_LEDMODE2               Label    00000000
_LEDMODE3               Label    00000000
_LEDMODE4               Label    00000000
_main                   Label    00000000
_modeLedShow            Label    00000000
_modeStep               Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_POWERHIGHT             Label    00000000
_POWERLOW               Label    00000000
_POWERMID               Label    00000000
_powerStep              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM1Start              Label    00000000
_PWM2DUTY               Label    00000000
_PWM2Start              Label    00000000
_PWM3DUTY               Label    00000000
_R_AIN1_DATA            Label    00000000
_R_AIN1_DATA_LB         Label    00000000
_R_AIN3_DATA            Label    00000000
_R_AIN3_DATA_LB         Label    00000000
_R_AIN4_DATA            Label    00000000
_R_AIN4_DATA_LB         Label    00000000
_R_VDD_DATA             Label    00000000
_R_VDD_DATA_LB          Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_startCtr               Label    00000000
_startStep              Label    00000000
_Status                 Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_timeCount              Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
ENABLE_RAM_BANK         Variable 00000000
END_OF_INTERRUPT        Label    0000002A
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1018                 Label    00000000
r0x1019                 Label    00000000
r0x101A                 Label    00000000
r0x101B                 Label    00000000
r0x101C                 Label    00000000
r0x101F                 Label    00000000
r0x1020                 Label    00000000
r0x1021                 Label    00000000
r0x1022                 Label    00000000
r0x1025                 Label    00000000
r0x1026                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
r0x1031                 Label    00000000
r0x1032                 Label    00000000
r0x1033                 Label    00000000
r0x1034                 Label    00000000
r0x1037                 Label    00000000
r0x1038                 Label    00000000
r0x103B                 Label    00000000
r0x103C                 Label    00000000
r0x103D                 Label    00000000
r0x1040                 Label    00000000
r0x1043                 Label    00000000
r0x1044                 Label    00000000
r0x1045                 Label    00000000
r0x1046                 Label    00000000
r0x1047                 Label    00000000
r0x1048                 Label    00000000
r0x1049                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b061d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B061D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000005FF
DATA ROM     = 0x00000000 - 0x000005FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
