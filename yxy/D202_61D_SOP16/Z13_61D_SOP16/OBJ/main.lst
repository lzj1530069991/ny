
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	__mulint
                                    1-   15     	extern	__divuint
                                    1-   16     	extern	_PORTAbits
                                    1-   17     	extern	_PORTBbits
                                    1-   18     	extern	_PCONbits
                                    1-   19     	extern	_BWUCONbits
                                    1-   20     	extern	_ABPLCONbits
                                    1-   21     	extern	_BPHCONbits
                                    1-   22     	extern	_INTEbits
                                    1-   23     	extern	_INTFbits
                                    1-   24     	extern	_ADMDbits
                                    1-   25     	extern	_ADRbits
                                    1-   26     	extern	_ADVREFHbits
                                    1-   27     	extern	_ADCRbits
                                    1-   28     	extern	_AWUCONbits
                                    1-   29     	extern	_PACONbits
                                    1-   30     	extern	_INTEDGbits
                                    1-   31     	extern	_ANAENbits
                                    1-   32     	extern	_RFCbits
                                    1-   33     	extern	_INTE2bits
                                    1-   34     	extern	_INDF
                                    1-   35     	extern	_TMR0
                                    1-   36     	extern	_PCL
                                    1-   37     	extern	_STATUS
                                    1-   38     	extern	_FSR
                                    1-   39     	extern	_PORTA
                                    1-   40     	extern	_PORTB
                                    1-   41     	extern	_PCON
                                    1-   42     	extern	_BWUCON
                                    1-   43     	extern	_PCHBUF
                                    1-   44     	extern	_ABPLCON
                                    1-   45     	extern	_BPHCON
                                    1-   46     	extern	_INTE
                                    1-   47     	extern	_INTF
                                    1-   48     	extern	_ADMD
                                    1-   49     	extern	_ADR
                                    1-   50     	extern	_ADD
                                    1-   51     	extern	_ADVREFH
                                    1-   52     	extern	_ADCR
                                    1-   53     	extern	_AWUCON
                                    1-   54     	extern	_PACON
                                    1-   55     	extern	_INTEDG
                                    1-   56     	extern	_TMRH
                                    1-   57     	extern	_ANAEN
                                    1-   58     	extern	_RFC
                                    1-   59     	extern	_TM3RH
                                    1-   60     	extern	_INTE2
                                    1-   61     	extern	_TMR1
                                    1-   62     	extern	_T1CR1
                                    1-   63     	extern	_T1CR2
                                    1-   64     	extern	_PWM1DUTY
                                    1-   65     	extern	_PS1CV
                                    1-   66     	extern	_BZ1CR
                                    1-   67     	extern	_IRCR
                                    1-   68     	extern	_TBHP
                                    1-   69     	extern	_TBHD
                                    1-   70     	extern	_TMR2
                                    1-   71     	extern	_T2CR1
                                    1-   72     	extern	_T2CR2
                                    1-   73     	extern	_PWM2DUTY
                                    1-   74     	extern	_PS2CV
                                    1-   75     	extern	_BZ2CR
                                    1-   76     	extern	_OSCCR
                                    1-   77     	extern	_TMR3
                                    1-   78     	extern	_T3CR1
                                    1-   79     	extern	_T3CR2
                                    1-   80     	extern	_PWM3DUTY
                                    1-   81     	extern	_PS3CV
                                    1-   82     	extern	_BZ3CR
                                    1-   83     	extern	_IOSTA
                                    1-   84     	extern	_IOSTB
                                    1-   85     	extern	_APHCON
                                    1-   86     	extern	_PS0CV
                                    1-   87     	extern	_BODCON
                                    1-   88     	extern	_CMPCR
                                    1-   89     	extern	_PCON1
                                    1-   90     	extern	_T0MD
                                    1-   91     	extern	___sdcc_saved_fsr
                                    1-   92     	extern	___sdcc_saved_stk00
                                    1-   93     	extern	___sdcc_saved_stk01
                                    1-   94     	extern	__nyc_ny8_startup
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     ; global declarations
                                    1-   97     ;--------------------------------------------------------
                                    1-   98     	extern	_F_AIN4_Convert
                                    1-   99     	extern	_F_AIN3_Convert
                                    1-  100     	extern	_F_AIN1_Convert
                                    1-  101     	extern	_F_VDD_Convert
                                    1-  102     	extern	_delay
                                    1-  103     	extern	_F_wait_eoc
                                    1-  104     	extern	_modeLedShow
                                    1-  105     	extern	_initAD
                                    1-  106     	extern	_keyRead
                                    1-  107     	extern	_checkHotAD
                                    1-  108     	extern	_checkTouchAD
                                    1-  109     	extern	_checkKeyAD
                                    1-  110     	extern	_checkBAT
                                    1-  111     	extern	_PWM2Start
                                    1-  112     	extern	_PWM1Start
                                    1-  113     	extern	_ADKeyCtr
                                    1-  114     	extern	_startCtr
                                    1-  115     	extern	_workCtr
                                    1-  116     	extern	_chrgCtr
                                    1-  117     	extern	_LedInput
                                    1-  118     	extern	_initSys
                                    1-  119     	extern	_isr
                                    1-  120     	extern	_main
                                    1-  121     	extern	_LEDMODE4
                                    1-  122     	extern	_LEDMODE3
                                    1-  123     	extern	_LEDMODE2
                                    1-  124     	extern	_LEDMODE1
                                    1-  125     	extern	_BATHIGHT
                                    1-  126     	extern	_BATLOW
                                    1-  127     	extern	_POWERHIGHT
                                    1-  128     	extern	_POWERMID
                                    1-  129     	extern	_POWERLOW
                                    1-  130     	extern	_Status
                                    1-  131     	extern	_intCount
                                    1-  132     	extern	_modeStep
                                    1-  133     	extern	_keyNub
                                    1-  134     	extern	_R_VDD_DATA
                                    1-  135     	extern	_R_VDD_DATA_LB
                                    1-  136     	extern	_R_AIN1_DATA
                                    1-  137     	extern	_R_AIN1_DATA_LB
                                    1-  138     	extern	_R_AIN3_DATA
                                    1-  139     	extern	_R_AIN3_DATA_LB
                                    1-  140     	extern	_R_AIN4_DATA
                                    1-  141     	extern	_R_AIN4_DATA_LB
                                    1-  142     	extern	_keyCount
                                    1-  143     	extern	_powerStep
                                    1-  144     	extern	_chrgLedStep
                                    1-  145     	extern	_timeCount
                                    1-  146     	extern	_startStep
                                    1-  147     	extern	_checkTime
                                    1-  149     	extern PSAVE
                                    1-  150     	extern SSAVE
                                    1-  151     	extern WSAVE
                                    1-  152     	extern STK02
                                    1-  153     	extern STK01
                                    1-  154     	extern STK00
                                    1-  156     .segment "uninit", 0x20000040
 20000040                           1-  157     PSAVE:
                                    1-  158     	.res 1
 20000041                           1-  159     SSAVE:
                                    1-  160     	.res 1
 20000042                           1-  161     WSAVE:
                                    1-  162     	.res 1
 20000043                           1-  163     STK02:
                                    1-  164     	.res 1
 20000044                           1-  165     STK01:
                                    1-  166     	.res 1
 20000045                           1-  167     STK00:
                                    1-  168     	.res 1
                                    1-  170     ;--------------------------------------------------------
                                    1-  171     ; global definitions
                                    1-  172     ;--------------------------------------------------------
                                    1-  173     .segment "uninit"
     0000                           1-  174     _R_VDD_DATA:
                                    1-  175     	.res	2
                                    1-  178     .segment "uninit"
     0000                           1-  179     _R_VDD_DATA_LB:
                                    1-  180     	.res	1
                                    1-  183     .segment "uninit"
     0000                           1-  184     _R_AIN1_DATA:
                                    1-  185     	.res	2
                                    1-  188     .segment "uninit"
     0000                           1-  189     _R_AIN1_DATA_LB:
                                    1-  190     	.res	1
                                    1-  193     .segment "uninit"
     0000                           1-  194     _R_AIN3_DATA:
                                    1-  195     	.res	2
                                    1-  198     .segment "uninit"
     0000                           1-  199     _R_AIN3_DATA_LB:
                                    1-  200     	.res	1
                                    1-  203     .segment "uninit"
     0000                           1-  204     _R_AIN4_DATA:
                                    1-  205     	.res	2
                                    1-  208     .segment "uninit"
     0000                           1-  209     _R_AIN4_DATA_LB:
                                    1-  210     	.res	1
                                    1-  213     .segment "uninit"
     0000                           1-  214     _keyCount:
                                    1-  215     	.res	1
                                    1-  218     ;--------------------------------------------------------
                                    1-  219     ; absolute symbol definitions
                                    1-  220     ;--------------------------------------------------------
                                    1-  221     ;--------------------------------------------------------
                                    1-  222     ; compiler-defined variables
                                    1-  223     ;--------------------------------------------------------
                                    1-  224     .segment "uninit"
     0000                           1-  225     r0x1032:
                                    1-  226     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     r0x1033:
                                    1-  229     	.res	1
                                    1-  230     .segment "uninit"
     0000                           1-  231     r0x1049:
                                    1-  232     	.res	1
                                    1-  233     .segment "uninit"
     0000                           1-  234     r0x1048:
                                    1-  235     	.res	1
                                    1-  236     .segment "uninit"
     0000                           1-  237     r0x1047:
                                    1-  238     	.res	1
                                    1-  239     .segment "uninit"
     0000                           1-  240     r0x1046:
                                    1-  241     	.res	1
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x1045:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x1043:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x1044:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x103D:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x1040:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x103B:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x103C:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x1037:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x1038:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1034:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1018:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1019:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x102C:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x102D:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x102E:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x1031:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x1026:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x1027:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x1028:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x102B:
                                    1-  301     	.res	1
                                    1-  302     .segment "uninit"
     0000                           1-  303     r0x1020:
                                    1-  304     	.res	1
                                    1-  305     .segment "uninit"
     0000                           1-  306     r0x1021:
                                    1-  307     	.res	1
                                    1-  308     .segment "uninit"
     0000                           1-  309     r0x1022:
                                    1-  310     	.res	1
                                    1-  311     .segment "uninit"
     0000                           1-  312     r0x1025:
                                    1-  313     	.res	1
                                    1-  314     .segment "uninit"
     0000                           1-  315     r0x101A:
                                    1-  316     	.res	1
                                    1-  317     .segment "uninit"
     0000                           1-  318     r0x101B:
                                    1-  319     	.res	1
                                    1-  320     .segment "uninit"
     0000                           1-  321     r0x101C:
                                    1-  322     	.res	1
                                    1-  323     .segment "uninit"
     0000                           1-  324     r0x101F:
                                    1-  325     	.res	1
                                    1-  326     ;--------------------------------------------------------
                                    1-  327     ; initialized data
                                    1-  328     ;--------------------------------------------------------
                                    1-  330     .segment "idata"
     0000                           1-  331     _Status:
     0000 0000                      1-  332     	dw	0x00
                                    1-  336     .segment "idata"
     0000                           1-  337     _intCount:
     0000 0000                      1-  338     	dw	0x00
                                    1-  342     .segment "idata"
     0000                           1-  343     _modeStep:
     0000 0000                      1-  344     	dw	0x00
                                    1-  348     .segment "idata"
     0000                           1-  349     _keyNub:
     0000 0000                      1-  350     	dw	0x00
                                    1-  354     .segment "idata"
     0000                           1-  355     _powerStep:
     0000 0000                      1-  356     	dw	0x00
                                    1-  360     .segment "idata"
     0000                           1-  361     _chrgLedStep:
     0000 0000                      1-  362     	dw	0x00
                                    1-  366     .segment "idata"
     0000                           1-  367     _timeCount:
     0000 0000                      1-  368     	dw	0x00
                                    1-  372     .segment "idata"
     0000                           1-  373     _startStep:
     0000 0000                      1-  374     	dw	0x00
                                    1-  378     .segment "idata"
     0000                           1-  379     _checkTime:
     0000 0000                      1-  380     	dw	0x00
                                    1-  383     ;--------------------------------------------------------
                                    1-  384     ; overlayable items in internal ram 
                                    1-  385     ;--------------------------------------------------------
                                    1-  386     ;	udata_ovr
                                    1-  387     ;--------------------------------------------------------
                                    1-  388     ; reset vector 
                                    1-  389     ;--------------------------------------------------------
                                    1-  390     ORG	0x0000
     0000 3rrr                      1-  391     	LGOTO	__nyc_ny8_startup
                                    1-  392     ;--------------------------------------------------------
                                    1-  393     ; interrupt and initialization code
                                    1-  394     ;--------------------------------------------------------
                                    1-  395     ORG 0x0008
                                    1-  396     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  398     .segment "code"
     0000                           1-  399     __sdcc_interrupt:
                                    1-  400     ;***
                                    1-  401     ;  pBlock Stats: dbName = I
                                    1-  402     ;***
                                    1-  403     ;2 compiler assigned registers:
                                    1-  404     ;   STK00
                                    1-  405     ;   STK01
                                    1-  406     ;; Starting pCode block
     0000                           1-  407     _isr:
                                    1-  408     ; 0 exit points
                                    1-  409     	.line	86, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  410     	MOVAR	WSAVE
     0001 1503                      1-  411     	SWAPR	STATUS,W
     0002 0283                      1-  412     	CLRR	STATUS
     0003 00rr                      1-  413     	MOVAR	SSAVE
     0004 010A                      1-  414     	MOVR	PCHBUF,W
     0005 028A                      1-  415     	CLRR	PCHBUF
     0006 00rr                      1-  416     	MOVAR	PSAVE
     0007 0104                      1-  417     	MOVR	FSR,W
                                    1-  418     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  419     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  420     	MOVR	STK00,W
                                    1-  421     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  422     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  423     	MOVR	STK01,W
                                    1-  424     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  425     	MOVAR	___sdcc_saved_stk01
                                    1-  426     	.line	88, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  427     	BTRSS	_INTFbits,0
                                    1-  428     	MGOTO	_00108_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  429     	.line	90, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  430     	MOVIA	0x37
     0013 03rr                      1-  431     	ADDAR	_TMR0,F
                                    1-  432     	.line	92, "main.c"; 	if(++intCount >= 100)
                                    1-  433     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  434     	INCR	_intCount,F
                                    1-  435     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  436     	MOVIA	0x64
     0017 04rr                      1-  437     	SUBAR	_intCount,W
     0018 0803                      1-  438     	BTRSS	STATUS,0
                                    1-  439     	MGOTO	_00108_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  440     	.line	94, "main.c"; 	IntFlag = 1;
                                    1-  441     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  442     	BSR	_Status,0
                                    1-  443     	.line	95, "main.c"; 	intCount = 0;
                                    1-  444     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  445     	CLRR	_intCount
     001E                           1-  446     _00108_DS_:
                                    1-  447     	.line	101, "main.c"; 	if(INTFbits.PABIF)
     001E 08rr                      1-  448     	BTRSS	_INTFbits,1
                                    1-  449     	MGOTO	_00110_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  450     	.line	103, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0020 21FD                      1-  451     	MOVIA	0xfd
     0021 00rr                      1-  452     	MOVAR	_INTF
     0022                           1-  453     _00110_DS_:
                                    1-  454     	.line	106, "main.c"; 	INTF = 0;
     0022 02rr                      1-  455     	CLRR	_INTF
                                    1-  456     	.line	108, "main.c"; 	}
                                    1-  457     	BANKSEL	___sdcc_saved_stk01
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 01rr                      1-  458     	MOVR	___sdcc_saved_stk01,W
     0025 00rr                      1-  459     	MOVAR	STK01
                                    1-  460     	BANKSEL	___sdcc_saved_stk00
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1-  461     	MOVR	___sdcc_saved_stk00,W
     0028 00rr                      1-  462     	MOVAR	STK00
                                    1-  463     	BANKSEL	___sdcc_saved_fsr
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 01rr                      1-  464     	MOVR	___sdcc_saved_fsr,W
     002B 0084                      1-  465     	MOVAR	FSR
     002C 01rr                      1-  466     	MOVR	PSAVE,W
     002D 008A                      1-  467     	MOVAR	PCHBUF
     002E 0283                      1-  468     	CLRR	STATUS
     002F 15rr                      1-  469     	SWAPR	SSAVE,W
     0030 0083                      1-  470     	MOVAR	STATUS
     0031 15rr                      1-  471     	SWAPR	WSAVE,F
     0032 15rr                      1-  472     	SWAPR	WSAVE,W
     0033                           1-  473     END_OF_INTERRUPT:
     0033 0011                      1-  474     	RETIE	
                                    1-  476     ;--------------------------------------------------------
                                    1-  477     ; code
                                    1-  478     ;--------------------------------------------------------
                                    1-  479     ;***
                                    1-  480     ;  pBlock Stats: dbName = M
                                    1-  481     ;***
                                    1-  482     ;has an exit
                                    1-  483     ;functions called:
                                    1-  484     ;   _initSys
                                    1-  485     ;   _initAD
                                    1-  486     ;   _modeLedShow
                                    1-  487     ;   _chrgCtr
                                    1-  488     ;   _ADKeyCtr
                                    1-  489     ;   _workCtr
                                    1-  490     ;   _LedInput
                                    1-  491     ;   _startCtr
                                    1-  492     ;   _initSys
                                    1-  493     ;   _initAD
                                    1-  494     ;   _modeLedShow
                                    1-  495     ;   _chrgCtr
                                    1-  496     ;   _ADKeyCtr
                                    1-  497     ;   _workCtr
                                    1-  498     ;   _LedInput
                                    1-  499     ;   _startCtr
                                    1-  500     ;; Starting pCode block
                                    1-  501     .segment "code"; module=main, function=_main
     0000                           1-  503     _main:
                                    1-  504     ; 2 exit points
                                    1-  505     	.line	139, "main.c"; 	initSys();
                                    1-  506     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  507     	.line	140, "main.c"; 	initAD();
                                    1-  508     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  509     _00130_DS_:
                                    1-  510     	.line	143, "main.c"; 	CLRWDT();
     0002 0002                      1-  511     	clrwdt
                                    1-  512     	.line	144, "main.c"; 	modeLedShow();
                                    1-  513     	MCALL	_modeLedShow
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  514     	.line	145, "main.c"; 	if(!IntFlag)
                                    1-  515     	BANKSEL	_Status
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 08rr                      1-  516     	BTRSS	_Status,0
                                    1-  517     	MGOTO	_00130_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  518     	.line	147, "main.c"; 	IntFlag = 0;
     0007 1Crr                      1-  519     	BCR	_Status,0
                                    1-  520     	.line	148, "main.c"; 	chrgCtr();
                                    1-  521     	MCALL	_chrgCtr
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  522     	.line	149, "main.c"; 	if(chrgFlag == 0)
                                    1-  523     	BANKSEL	_Status
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 0Drr                      1-  524     	BTRSC	_Status,3
                                    1-  525     	MGOTO	_00130_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  526     	.line	151, "main.c"; 	ADKeyCtr();
                                    1-  527     	MCALL	_ADKeyCtr
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  528     	.line	152, "main.c"; 	if(startLedFlag == 0)
                                    1-  529     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Drr                      1-  530     	BTRSC	_Status,2
                                    1-  531     	MGOTO	_00125_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  532     	.line	154, "main.c"; 	if(modeStep > 0)
                                    1-  533     	BANKSEL	_modeStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1-  534     	MOVR	_modeStep,W
     0012 0D03                      1-  535     	BTRSC	STATUS,2
                                    1-  536     	MGOTO	_00122_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  537     	.line	155, "main.c"; 	workCtr();
                                    1-  538     	MCALL	_workCtr
     0014 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  539     	MGOTO	_00130_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
     0016                           1-  540     _00122_DS_:
                                    1-  541     	.line	158, "main.c"; 	LedInput();
                                    1-  542     	MCALL	_LedInput
     0016 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  543     	.line	159, "main.c"; 	T1CR1 = C_TMR1_En;
     0017 2101                      1-  544     	MOVIA	0x01
     0018 00rr                      1-  545     	SFUN	_T1CR1
                                    1-  546     	.line	160, "main.c"; 	PORTB &= 0xFE;
     0019 1Crr                      1-  547     	BCR	_PORTB,0
                                    1-  548     	.line	161, "main.c"; 	HOTOFF();
     001A 1Drr                      1-  549     	BCR	_PORTB,2
                                    1-  550     	.line	162, "main.c"; 	startStep = 0;
                                    1-  551     	BANKSEL	_startStep
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1-  552     	CLRR	_startStep
                                    1-  553     	.line	163, "main.c"; 	startLedFlag = 0;
                                    1-  554     	BANKSEL	_Status
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 1Drr                      1-  555     	BCR	_Status,2
                                    1-  556     	.line	164, "main.c"; 	ORANGEOFF();
     001F 1Err                      1-  557     	BCR	_PORTB,4
                                    1-  558     	.line	165, "main.c"; 	BLUEOFF();
     0020 1Err                      1-  559     	BCR	_PORTB,5
                                    1-  560     	.line	166, "main.c"; 	REDOFF();
     0021 1Crr                      1-  561     	BCR	_PORTA,0
                                    1-  562     	MGOTO	_00130_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023                           1-  563     _00125_DS_:
                                    1-  564     	.line	171, "main.c"; 	startCtr();
                                    1-  565     	MCALL	_startCtr
     0023 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  566     	MGOTO	_00130_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  567     	.line	175, "main.c"; 	}
                                    1-  568     	RETURN	
     0025 0010                      3-   40 m1      ret
                                    1-  569     ; exit point of _main
                                    1-  571     ;***
                                    1-  572     ;  pBlock Stats: dbName = C
                                    1-  573     ;***
                                    1-  574     ;has an exit
                                    1-  575     ;functions called:
                                    1-  576     ;   _delay
                                    1-  577     ;   _F_wait_eoc
                                    1-  578     ;   _delay
                                    1-  579     ;   _F_wait_eoc
                                    1-  580     ;6 compiler assigned registers:
                                    1-  581     ;   r0x101A
                                    1-  582     ;   r0x101B
                                    1-  583     ;   r0x101C
                                    1-  584     ;   r0x101D
                                    1-  585     ;   r0x101E
                                    1-  586     ;   r0x101F
                                    1-  587     ;; Starting pCode block
                                    1-  588     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1-  590     ;local variable name mapping:
     0000                           1-  593     _F_AIN4_Convert:
                                    1-  594     ; 2 exit points
                                    1-  595     	.line	780, "main.c"; 	void F_AIN4_Convert(char count)
                                    1-  596     	BANKSEL	r0x101A
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  597     	MOVAR	r0x101A
                                    1-  598     	.line	782, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1-  599     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  600     	CLRR	_R_AIN4_DATA_LB
                                    1-  601     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1-  602     	CLRR	_R_AIN4_DATA
     0006 02rr                      1-  603     	CLRR	(_R_AIN4_DATA + 1)
                                    1-  604     	.line	784, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1-  605     	MOVIA	0x94
     0008 00rr                      1-  606     	MOVAR	_ADMD
                                    1-  607     	.line	785, "main.c"; 	delay(200);	
     0009 21C8                      1-  608     	MOVIA	0xc8
                                    1-  609     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  610     	.line	786, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1-  611     	MOVIA	0x01
                                    1-  612     	BANKSEL	r0x101B
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1-  613     	MOVAR	r0x101B
     000E                           1-  614     _00538_DS_:
                                    1-  615     	BANKSEL	r0x101B
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1-  616     	MOVR	r0x101B,W
                                    1-  617     	BANKSEL	r0x101A
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1-  618     	SUBAR	r0x101A,W
     0012 0803                      1-  619     	BTRSS	STATUS,0
                                    1-  620     	MGOTO	_00540_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  621     	.line	788, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1-  622     	BSR	_ADMDbits,6
                                    1-  623     	.line	789, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1-  624     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  625     	.line	790, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1-  626     	MOVIA	0x0f
     0017 10rr                      1-  627     	ANDAR	_ADR,W
                                    1-  628     ;;3	MOVAR	r0x101C
                                    1-  629     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1-  630     	ADDAR	_R_AIN4_DATA_LB,F
                                    1-  631     	.line	791, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1-  632     	MOVR	_ADD,W
                                    1-  633     	BANKSEL	r0x101C
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  634     	MOVAR	r0x101C
                                    1-  635     ;;1	CLRR	r0x101D
                                    1-  636     ;;116	MOVR	r0x101C,W
                                    1-  637     ;;114	MOVAR	r0x101E
     001D 2100                      1-  638     	MOVIA	0x00
                                    1-  639     	BANKSEL	r0x101F
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1-  640     	MOVAR	r0x101F
                                    1-  641     ;;115	MOVR	r0x101E,W
                                    1-  642     	BANKSEL	r0x101C
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1-  643     	MOVR	r0x101C,W
                                    1-  644     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1-  645     	ADDAR	_R_AIN4_DATA,F
                                    1-  646     	BANKSEL	r0x101F
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1-  647     	MOVR	r0x101F,W
     0026 0C03                      1-  648     	BTRSC	STATUS,0
     0027 05rr                      1-  649     	INCR	r0x101F,W
     0028 0D03                      1-  650     	BTRSC	STATUS,2
                                    1-  651     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  652     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1-  653     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1-  654     _00001_DS_:
                                    1-  655     	.line	786, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  656     	BANKSEL	r0x101B
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1-  657     	INCR	r0x101B,F
                                    1-  658     	MGOTO	_00538_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1-  659     _00540_DS_:
                                    1-  660     	.line	793, "main.c"; 	}
                                    1-  661     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1-  662     ; exit point of _F_AIN4_Convert
                                    1-  664     ;***
                                    1-  665     ;  pBlock Stats: dbName = C
                                    1-  666     ;***
                                    1-  667     ;has an exit
                                    1-  668     ;functions called:
                                    1-  669     ;   _delay
                                    1-  670     ;   _F_wait_eoc
                                    1-  671     ;   _delay
                                    1-  672     ;   _F_wait_eoc
                                    1-  673     ;6 compiler assigned registers:
                                    1-  674     ;   r0x1020
                                    1-  675     ;   r0x1021
                                    1-  676     ;   r0x1022
                                    1-  677     ;   r0x1023
                                    1-  678     ;   r0x1024
                                    1-  679     ;   r0x1025
                                    1-  680     ;; Starting pCode block
                                    1-  681     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1-  683     ;local variable name mapping:
     0000                           1-  686     _F_AIN3_Convert:
                                    1-  687     ; 2 exit points
                                    1-  688     	.line	764, "main.c"; 	void F_AIN3_Convert(char count)
                                    1-  689     	BANKSEL	r0x1020
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  690     	MOVAR	r0x1020
                                    1-  691     	.line	766, "main.c"; 	R_AIN3_DATA=R_AIN3_DATA_LB=0x00;   
                                    1-  692     	BANKSEL	_R_AIN3_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  693     	CLRR	_R_AIN3_DATA_LB
                                    1-  694     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1-  695     	CLRR	_R_AIN3_DATA
     0006 02rr                      1-  696     	CLRR	(_R_AIN3_DATA + 1)
                                    1-  697     	.line	768, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0007 2193                      1-  698     	MOVIA	0x93
     0008 00rr                      1-  699     	MOVAR	_ADMD
                                    1-  700     	.line	769, "main.c"; 	delay(200);	
     0009 21C8                      1-  701     	MOVIA	0xc8
                                    1-  702     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  703     	.line	770, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1-  704     	MOVIA	0x01
                                    1-  705     	BANKSEL	r0x1021
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1-  706     	MOVAR	r0x1021
     000E                           1-  707     _00529_DS_:
                                    1-  708     	BANKSEL	r0x1021
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1-  709     	MOVR	r0x1021,W
                                    1-  710     	BANKSEL	r0x1020
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1-  711     	SUBAR	r0x1020,W
     0012 0803                      1-  712     	BTRSS	STATUS,0
                                    1-  713     	MGOTO	_00531_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  714     	.line	772, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1-  715     	BSR	_ADMDbits,6
                                    1-  716     	.line	773, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1-  717     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  718     	.line	774, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1-  719     	MOVIA	0x0f
     0017 10rr                      1-  720     	ANDAR	_ADR,W
                                    1-  721     ;;3	MOVAR	r0x1022
                                    1-  722     	BANKSEL	_R_AIN3_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1-  723     	ADDAR	_R_AIN3_DATA_LB,F
                                    1-  724     	.line	775, "main.c"; 	R_AIN3_DATA    += ADD; 
     001A 01rr                      1-  725     	MOVR	_ADD,W
                                    1-  726     	BANKSEL	r0x1022
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  727     	MOVAR	r0x1022
                                    1-  728     ;;1	CLRR	r0x1023
                                    1-  729     ;;113	MOVR	r0x1022,W
                                    1-  730     ;;111	MOVAR	r0x1024
     001D 2100                      1-  731     	MOVIA	0x00
                                    1-  732     	BANKSEL	r0x1025
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1-  733     	MOVAR	r0x1025
                                    1-  734     ;;112	MOVR	r0x1024,W
                                    1-  735     	BANKSEL	r0x1022
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1-  736     	MOVR	r0x1022,W
                                    1-  737     	BANKSEL	_R_AIN3_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1-  738     	ADDAR	_R_AIN3_DATA,F
                                    1-  739     	BANKSEL	r0x1025
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1-  740     	MOVR	r0x1025,W
     0026 0C03                      1-  741     	BTRSC	STATUS,0
     0027 05rr                      1-  742     	INCR	r0x1025,W
     0028 0D03                      1-  743     	BTRSC	STATUS,2
                                    1-  744     	MGOTO	_00002_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  745     	BANKSEL	_R_AIN3_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1-  746     	ADDAR	(_R_AIN3_DATA + 1),F
     002C                           1-  747     _00002_DS_:
                                    1-  748     	.line	770, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  749     	BANKSEL	r0x1021
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1-  750     	INCR	r0x1021,F
                                    1-  751     	MGOTO	_00529_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1-  752     _00531_DS_:
                                    1-  753     	.line	777, "main.c"; 	}
                                    1-  754     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1-  755     ; exit point of _F_AIN3_Convert
                                    1-  757     ;***
                                    1-  758     ;  pBlock Stats: dbName = C
                                    1-  759     ;***
                                    1-  760     ;has an exit
                                    1-  761     ;functions called:
                                    1-  762     ;   _delay
                                    1-  763     ;   _F_wait_eoc
                                    1-  764     ;   _delay
                                    1-  765     ;   _F_wait_eoc
                                    1-  766     ;6 compiler assigned registers:
                                    1-  767     ;   r0x1026
                                    1-  768     ;   r0x1027
                                    1-  769     ;   r0x1028
                                    1-  770     ;   r0x1029
                                    1-  771     ;   r0x102A
                                    1-  772     ;   r0x102B
                                    1-  773     ;; Starting pCode block
                                    1-  774     .segment "code"; module=main, function=_F_AIN1_Convert
                                    1-  776     ;local variable name mapping:
     0000                           1-  779     _F_AIN1_Convert:
                                    1-  780     ; 2 exit points
                                    1-  781     	.line	748, "main.c"; 	void F_AIN1_Convert(char count)
                                    1-  782     	BANKSEL	r0x1026
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  783     	MOVAR	r0x1026
                                    1-  784     	.line	750, "main.c"; 	R_AIN1_DATA=R_AIN1_DATA_LB=0x00;   
                                    1-  785     	BANKSEL	_R_AIN1_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  786     	CLRR	_R_AIN1_DATA_LB
                                    1-  787     	BANKSEL	_R_AIN1_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1-  788     	CLRR	_R_AIN1_DATA
     0006 02rr                      1-  789     	CLRR	(_R_AIN1_DATA + 1)
                                    1-  790     	.line	752, "main.c"; 	ADMD  = 0x90 | C_ADC_PA1;				// Select AIN6(PB1) pad as ADC input
     0007 2191                      1-  791     	MOVIA	0x91
     0008 00rr                      1-  792     	MOVAR	_ADMD
                                    1-  793     	.line	753, "main.c"; 	delay(200);	
     0009 21C8                      1-  794     	MOVIA	0xc8
                                    1-  795     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  796     	.line	754, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1-  797     	MOVIA	0x01
                                    1-  798     	BANKSEL	r0x1027
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1-  799     	MOVAR	r0x1027
     000E                           1-  800     _00520_DS_:
                                    1-  801     	BANKSEL	r0x1027
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1-  802     	MOVR	r0x1027,W
                                    1-  803     	BANKSEL	r0x1026
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1-  804     	SUBAR	r0x1026,W
     0012 0803                      1-  805     	BTRSS	STATUS,0
                                    1-  806     	MGOTO	_00522_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  807     	.line	756, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1-  808     	BSR	_ADMDbits,6
                                    1-  809     	.line	757, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1-  810     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  811     	.line	758, "main.c"; 	R_AIN1_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1-  812     	MOVIA	0x0f
     0017 10rr                      1-  813     	ANDAR	_ADR,W
                                    1-  814     ;;3	MOVAR	r0x1028
                                    1-  815     	BANKSEL	_R_AIN1_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1-  816     	ADDAR	_R_AIN1_DATA_LB,F
                                    1-  817     	.line	759, "main.c"; 	R_AIN1_DATA    += ADD; 
     001A 01rr                      1-  818     	MOVR	_ADD,W
                                    1-  819     	BANKSEL	r0x1028
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  820     	MOVAR	r0x1028
                                    1-  821     ;;1	CLRR	r0x1029
                                    1-  822     ;;110	MOVR	r0x1028,W
                                    1-  823     ;;108	MOVAR	r0x102A
     001D 2100                      1-  824     	MOVIA	0x00
                                    1-  825     	BANKSEL	r0x102B
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1-  826     	MOVAR	r0x102B
                                    1-  827     ;;109	MOVR	r0x102A,W
                                    1-  828     	BANKSEL	r0x1028
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1-  829     	MOVR	r0x1028,W
                                    1-  830     	BANKSEL	_R_AIN1_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1-  831     	ADDAR	_R_AIN1_DATA,F
                                    1-  832     	BANKSEL	r0x102B
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1-  833     	MOVR	r0x102B,W
     0026 0C03                      1-  834     	BTRSC	STATUS,0
     0027 05rr                      1-  835     	INCR	r0x102B,W
     0028 0D03                      1-  836     	BTRSC	STATUS,2
                                    1-  837     	MGOTO	_00003_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  838     	BANKSEL	_R_AIN1_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1-  839     	ADDAR	(_R_AIN1_DATA + 1),F
     002C                           1-  840     _00003_DS_:
                                    1-  841     	.line	754, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  842     	BANKSEL	r0x1027
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1-  843     	INCR	r0x1027,F
                                    1-  844     	MGOTO	_00520_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1-  845     _00522_DS_:
                                    1-  846     	.line	761, "main.c"; 	}
                                    1-  847     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1-  848     ; exit point of _F_AIN1_Convert
                                    1-  850     ;***
                                    1-  851     ;  pBlock Stats: dbName = C
                                    1-  852     ;***
                                    1-  853     ;has an exit
                                    1-  854     ;functions called:
                                    1-  855     ;   _delay
                                    1-  856     ;   _F_wait_eoc
                                    1-  857     ;   _delay
                                    1-  858     ;   _F_wait_eoc
                                    1-  859     ;6 compiler assigned registers:
                                    1-  860     ;   r0x102C
                                    1-  861     ;   r0x102D
                                    1-  862     ;   r0x102E
                                    1-  863     ;   r0x102F
                                    1-  864     ;   r0x1030
                                    1-  865     ;   r0x1031
                                    1-  866     ;; Starting pCode block
                                    1-  867     .segment "code"; module=main, function=_F_VDD_Convert
                                    1-  869     ;local variable name mapping:
     0000                           1-  872     _F_VDD_Convert:
                                    1-  873     ; 2 exit points
                                    1-  874     	.line	733, "main.c"; 	void F_VDD_Convert(char count)
                                    1-  875     	BANKSEL	r0x102C
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  876     	MOVAR	r0x102C
                                    1-  877     	.line	735, "main.c"; 	R_VDD_DATA=R_VDD_DATA_LB=0x00;   
                                    1-  878     	BANKSEL	_R_VDD_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  879     	CLRR	_R_VDD_DATA_LB
                                    1-  880     	BANKSEL	_R_VDD_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1-  881     	CLRR	_R_VDD_DATA
     0006 02rr                      1-  882     	CLRR	(_R_VDD_DATA + 1)
                                    1-  883     	.line	737, "main.c"; 	ADMD  = 0x90 | C_Quarter_VDD;				// Select AIN6(PB1) pad as ADC input
     0007 219B                      1-  884     	MOVIA	0x9b
     0008 00rr                      1-  885     	MOVAR	_ADMD
                                    1-  886     	.line	738, "main.c"; 	delay(200);	
     0009 21C8                      1-  887     	MOVIA	0xc8
                                    1-  888     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  889     	.line	739, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1-  890     	MOVIA	0x01
                                    1-  891     	BANKSEL	r0x102D
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1-  892     	MOVAR	r0x102D
     000E                           1-  893     _00511_DS_:
                                    1-  894     	BANKSEL	r0x102D
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1-  895     	MOVR	r0x102D,W
                                    1-  896     	BANKSEL	r0x102C
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1-  897     	SUBAR	r0x102C,W
     0012 0803                      1-  898     	BTRSS	STATUS,0
                                    1-  899     	MGOTO	_00513_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  900     	.line	741, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1-  901     	BSR	_ADMDbits,6
                                    1-  902     	.line	742, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1-  903     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  904     	.line	743, "main.c"; 	R_VDD_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1-  905     	MOVIA	0x0f
     0017 10rr                      1-  906     	ANDAR	_ADR,W
                                    1-  907     ;;3	MOVAR	r0x102E
                                    1-  908     	BANKSEL	_R_VDD_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1-  909     	ADDAR	_R_VDD_DATA_LB,F
                                    1-  910     	.line	744, "main.c"; 	R_VDD_DATA    += ADD; 
     001A 01rr                      1-  911     	MOVR	_ADD,W
                                    1-  912     	BANKSEL	r0x102E
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  913     	MOVAR	r0x102E
                                    1-  914     ;;1	CLRR	r0x102F
                                    1-  915     ;;107	MOVR	r0x102E,W
                                    1-  916     ;;105	MOVAR	r0x1030
     001D 2100                      1-  917     	MOVIA	0x00
                                    1-  918     	BANKSEL	r0x1031
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1-  919     	MOVAR	r0x1031
                                    1-  920     ;;106	MOVR	r0x1030,W
                                    1-  921     	BANKSEL	r0x102E
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1-  922     	MOVR	r0x102E,W
                                    1-  923     	BANKSEL	_R_VDD_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1-  924     	ADDAR	_R_VDD_DATA,F
                                    1-  925     	BANKSEL	r0x1031
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1-  926     	MOVR	r0x1031,W
     0026 0C03                      1-  927     	BTRSC	STATUS,0
     0027 05rr                      1-  928     	INCR	r0x1031,W
     0028 0D03                      1-  929     	BTRSC	STATUS,2
                                    1-  930     	MGOTO	_00004_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  931     	BANKSEL	_R_VDD_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1-  932     	ADDAR	(_R_VDD_DATA + 1),F
     002C                           1-  933     _00004_DS_:
                                    1-  934     	.line	739, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  935     	BANKSEL	r0x102D
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1-  936     	INCR	r0x102D,F
                                    1-  937     	MGOTO	_00511_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1-  938     _00513_DS_:
                                    1-  939     	.line	746, "main.c"; 	}
                                    1-  940     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1-  941     ; exit point of _F_VDD_Convert
                                    1-  943     ;***
                                    1-  944     ;  pBlock Stats: dbName = C
                                    1-  945     ;***
                                    1-  946     ;has an exit
                                    1-  947     ;2 compiler assigned registers:
                                    1-  948     ;   r0x1018
                                    1-  949     ;   r0x1019
                                    1-  950     ;; Starting pCode block
                                    1-  951     .segment "code"; module=main, function=_delay
                                    1-  953     ;local variable name mapping:
     0000                           1-  956     _delay:
                                    1-  957     ; 2 exit points
                                    1-  958     	.line	726, "main.c"; 	void delay(u8t time)
                                    1-  959     	BANKSEL	r0x1018
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  960     	MOVAR	r0x1018
                                    1-  961     	.line	728, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1-  962     	BANKSEL	r0x1019
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  963     	CLRR	r0x1019
     0004                           1-  964     _00502_DS_:
                                    1-  965     	BANKSEL	r0x1018
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  966     	MOVR	r0x1018,W
                                    1-  967     	BANKSEL	r0x1019
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1-  968     	SUBAR	r0x1019,W
     0008 0C03                      1-  969     	BTRSC	STATUS,0
                                    1-  970     	MGOTO	_00504_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  971     	.line	729, "main.c"; 	NOP();
     000A 0000                      1-  972     	nop
                                    1-  973     	.line	728, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1-  974     	BANKSEL	r0x1019
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1-  975     	INCR	r0x1019,F
                                    1-  976     	MGOTO	_00502_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1-  977     _00504_DS_:
                                    1-  978     	.line	730, "main.c"; 	}
                                    1-  979     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1-  980     ; exit point of _delay
                                    1-  982     ;***
                                    1-  983     ;  pBlock Stats: dbName = C
                                    1-  984     ;***
                                    1-  985     ;has an exit
                                    1-  986     ;; Starting pCode block
                                    1-  987     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  989     _F_wait_eoc:
                                    1-  990     ; 2 exit points
     0000                           1-  991     _00495_DS_:
                                    1-  992     	.line	720, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  993     	BTRSS	_ADMDbits,5
                                    1-  994     	MGOTO	_00495_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  995     	.line	722, "main.c"; 	}
                                    1-  996     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1-  997     ; exit point of _F_wait_eoc
                                    1-  999     ;***
                                    1- 1000     ;  pBlock Stats: dbName = C
                                    1- 1001     ;***
                                    1- 1002     ;has an exit
                                    1- 1003     ;functions called:
                                    1- 1004     ;   _LedInput
                                    1- 1005     ;   _LedInput
                                    1- 1006     ;   _LEDMODE4
                                    1- 1007     ;   _LEDMODE3
                                    1- 1008     ;   _LEDMODE2
                                    1- 1009     ;   _LEDMODE1
                                    1- 1010     ;   _LedInput
                                    1- 1011     ;   _LedInput
                                    1- 1012     ;   _BATLOW
                                    1- 1013     ;   _BATLOW
                                    1- 1014     ;   _BATHIGHT
                                    1- 1015     ;   _LedInput
                                    1- 1016     ;   _POWERLOW
                                    1- 1017     ;   _POWERLOW
                                    1- 1018     ;   _POWERMID
                                    1- 1019     ;   _POWERLOW
                                    1- 1020     ;   _POWERMID
                                    1- 1021     ;   _POWERHIGHT
                                    1- 1022     ;   _LedInput
                                    1- 1023     ;   _LedInput
                                    1- 1024     ;   _LEDMODE4
                                    1- 1025     ;   _LEDMODE3
                                    1- 1026     ;   _LEDMODE2
                                    1- 1027     ;   _LEDMODE1
                                    1- 1028     ;   _LedInput
                                    1- 1029     ;   _LedInput
                                    1- 1030     ;   _BATLOW
                                    1- 1031     ;   _BATLOW
                                    1- 1032     ;   _BATHIGHT
                                    1- 1033     ;   _LedInput
                                    1- 1034     ;   _POWERLOW
                                    1- 1035     ;   _POWERLOW
                                    1- 1036     ;   _POWERMID
                                    1- 1037     ;   _POWERLOW
                                    1- 1038     ;   _POWERMID
                                    1- 1039     ;   _POWERHIGHT
                                    1- 1040     ;; Starting pCode block
                                    1- 1041     .segment "code"; module=main, function=_modeLedShow
     0000                           1- 1043     _modeLedShow:
                                    1- 1044     ; 2 exit points
                                    1- 1045     	.line	660, "main.c"; 	LedInput();
                                    1- 1046     	MCALL	_LedInput
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1047     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1048     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 1049     	.line	661, "main.c"; 	switch(modeStep)
     0001 2105                      1- 1050     	MOVIA	0x05
                                    1- 1051     	BANKSEL	_modeStep
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 04rr                      1- 1052     	SUBAR	_modeStep,W
     0004 0C03                      1- 1053     	BTRSC	STATUS,0
                                    1- 1054     	MGOTO	_00463_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
     0006 21rr                      1- 1055     	MOVIA	((_00486_DS_ >> 8) & 0xff)
     0007 008A                      1- 1056     	MOVAR	PCHBUF
     0008 01rr                      1- 1057     	MOVR	_modeStep,W
     0009 25rr                      1- 1058     	ADDIA	_00486_DS_
     000A 0C03                      1- 1059     	BTRSC	STATUS,0
     000B 058A                      1- 1060     	INCR	PCHBUF,F
     000C 0082                      1- 1061     	MOVAR	PCL
     000D                           1- 1062     _00486_DS_:
                                    1- 1063     	MGOTO	_00458_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1064     	MGOTO	_00462_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1065     	MGOTO	_00461_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1066     	MGOTO	_00460_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1067     	MGOTO	_00459_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
     0012                           1- 1068     _00458_DS_:
                                    1- 1069     	.line	664, "main.c"; 	LedInput();
                                    1- 1070     	MCALL	_LedInput
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1071     	.line	665, "main.c"; 	break;
                                    1- 1072     	MGOTO	_00464_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
     0014                           1- 1073     _00459_DS_:
                                    1- 1074     	.line	667, "main.c"; 	LEDMODE4();
                                    1- 1075     	MCALL	_LEDMODE4
     0014 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1076     	.line	668, "main.c"; 	break;
                                    1- 1077     	MGOTO	_00464_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
     0016                           1- 1078     _00460_DS_:
                                    1- 1079     	.line	670, "main.c"; 	LEDMODE3();
                                    1- 1080     	MCALL	_LEDMODE3
     0016 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1081     	.line	671, "main.c"; 	break;
                                    1- 1082     	MGOTO	_00464_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
     0018                           1- 1083     _00461_DS_:
                                    1- 1084     	.line	673, "main.c"; 	LEDMODE2();
                                    1- 1085     	MCALL	_LEDMODE2
     0018 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1086     	.line	674, "main.c"; 	break;
                                    1- 1087     	MGOTO	_00464_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
     001A                           1- 1088     _00462_DS_:
                                    1- 1089     	.line	676, "main.c"; 	LEDMODE1();
                                    1- 1090     	MCALL	_LEDMODE1
     001A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1091     	.line	677, "main.c"; 	break;
                                    1- 1092     	MGOTO	_00464_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
     001C                           1- 1093     _00463_DS_:
                                    1- 1094     	.line	679, "main.c"; 	LedInput();
                                    1- 1095     	MCALL	_LedInput
     001C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1096     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1097     ;;unsigned compare: left >= lit (0x3=3), size=1
     001D                           1- 1098     _00464_DS_:
                                    1- 1099     	.line	683, "main.c"; 	switch(chrgLedStep)
     001D 2103                      1- 1100     	MOVIA	0x03
                                    1- 1101     	BANKSEL	_chrgLedStep
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 1102     	SUBAR	_chrgLedStep,W
     0020 0C03                      1- 1103     	BTRSC	STATUS,0
                                    1- 1104     	MGOTO	_00468_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
     0022 21rr                      1- 1105     	MOVIA	((_00488_DS_ >> 8) & 0xff)
     0023 008A                      1- 1106     	MOVAR	PCHBUF
     0024 01rr                      1- 1107     	MOVR	_chrgLedStep,W
     0025 25rr                      1- 1108     	ADDIA	_00488_DS_
     0026 0C03                      1- 1109     	BTRSC	STATUS,0
     0027 058A                      1- 1110     	INCR	PCHBUF,F
     0028 0082                      1- 1111     	MOVAR	PCL
     0029                           1- 1112     _00488_DS_:
                                    1- 1113     	MGOTO	_00465_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1114     	MGOTO	_00466_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1115     	MGOTO	_00467_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C                           1- 1116     _00465_DS_:
                                    1- 1117     	.line	686, "main.c"; 	LedInput();
                                    1- 1118     	MCALL	_LedInput
     002C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1119     	.line	687, "main.c"; 	break;
                                    1- 1120     	MGOTO	_00468_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
     002E                           1- 1121     _00466_DS_:
                                    1- 1122     	.line	689, "main.c"; 	BATLOW();
                                    1- 1123     	MCALL	_BATLOW
     002E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1124     	.line	690, "main.c"; 	break;
                                    1- 1125     	MGOTO	_00468_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
     0030                           1- 1126     _00467_DS_:
                                    1- 1127     	.line	692, "main.c"; 	BATLOW();
                                    1- 1128     	MCALL	_BATLOW
     0030 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1129     	.line	693, "main.c"; 	BATHIGHT();
                                    1- 1130     	MCALL	_BATHIGHT
     0031 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1131     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1132     ;;unsigned compare: left >= lit (0x4=4), size=1
     0032                           1- 1133     _00468_DS_:
                                    1- 1134     	.line	697, "main.c"; 	switch(powerStep)
     0032 2104                      1- 1135     	MOVIA	0x04
                                    1- 1136     	BANKSEL	_powerStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 04rr                      1- 1137     	SUBAR	_powerStep,W
     0035 0C03                      1- 1138     	BTRSC	STATUS,0
                                    1- 1139     	MGOTO	_00474_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037 21rr                      1- 1140     	MOVIA	((_00490_DS_ >> 8) & 0xff)
     0038 008A                      1- 1141     	MOVAR	PCHBUF
     0039 01rr                      1- 1142     	MOVR	_powerStep,W
     003A 25rr                      1- 1143     	ADDIA	_00490_DS_
     003B 0C03                      1- 1144     	BTRSC	STATUS,0
     003C 058A                      1- 1145     	INCR	PCHBUF,F
     003D 0082                      1- 1146     	MOVAR	PCL
     003E                           1- 1147     _00490_DS_:
                                    1- 1148     	MGOTO	_00469_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1149     	MGOTO	_00470_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1150     	MGOTO	_00471_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1151     	MGOTO	_00472_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042                           1- 1152     _00469_DS_:
                                    1- 1153     	.line	700, "main.c"; 	LedInput();
                                    1- 1154     	MCALL	_LedInput
     0042 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1155     	.line	701, "main.c"; 	break;
                                    1- 1156     	MGOTO	_00474_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
     0044                           1- 1157     _00470_DS_:
                                    1- 1158     	.line	703, "main.c"; 	POWERLOW();
                                    1- 1159     	MCALL	_POWERLOW
     0044 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1160     	.line	704, "main.c"; 	break;
                                    1- 1161     	MGOTO	_00474_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
     0046                           1- 1162     _00471_DS_:
                                    1- 1163     	.line	706, "main.c"; 	POWERLOW();
                                    1- 1164     	MCALL	_POWERLOW
     0046 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1165     	.line	707, "main.c"; 	POWERMID();
                                    1- 1166     	MCALL	_POWERMID
     0047 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1167     	.line	708, "main.c"; 	break;
                                    1- 1168     	MGOTO	_00474_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049                           1- 1169     _00472_DS_:
                                    1- 1170     	.line	710, "main.c"; 	POWERLOW();
                                    1- 1171     	MCALL	_POWERLOW
     0049 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1172     	.line	711, "main.c"; 	POWERMID();
                                    1- 1173     	MCALL	_POWERMID
     004A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1174     	.line	712, "main.c"; 	POWERHIGHT();
                                    1- 1175     	MCALL	_POWERHIGHT
     004B 2rrr                      3-   66 m1      LCALL rom_address
     004C                           1- 1176     _00474_DS_:
                                    1- 1177     	.line	715, "main.c"; 	}
                                    1- 1178     	RETURN	
     004C 0010                      3-   40 m1      ret
                                    1- 1179     ; exit point of _modeLedShow
                                    1- 1181     ;***
                                    1- 1182     ;  pBlock Stats: dbName = C
                                    1- 1183     ;***
                                    1- 1184     ;has an exit
                                    1- 1185     ;functions called:
                                    1- 1186     ;   _delay
                                    1- 1187     ;   _delay
                                    1- 1188     ;; Starting pCode block
                                    1- 1189     .segment "code"; module=main, function=_initAD
     0000                           1- 1191     _initAD:
                                    1- 1192     ; 2 exit points
                                    1- 1193     	.line	637, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1194     	MOVIA	0x84
     0001 00rr                      1- 1195     	MOVAR	_ADMD
                                    1- 1196     	.line	640, "main.c"; 	ADVREFH = C_Vrefh_4V;					// ADC reference high voltage is supplied by internal 4V  (Note: ADC clock freq. must be equal or less than 1MHz)
     0002 2102                      1- 1197     	MOVIA	0x02
     0003 00rr                      1- 1198     	MOVAR	_ADVREFH
                                    1- 1199     	.line	647, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0004 2110                      1- 1200     	MOVIA	0x10
     0005 00rr                      1- 1201     	MOVAR	_ADR
                                    1- 1202     	.line	649, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0006 2103                      1- 1203     	MOVIA	0x03
     0007 00rr                      1- 1204     	MOVAR	_ADCR
                                    1- 1205     	.line	652, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0008 1Arr                      1- 1206     	BSR	_ADMDbits,4
                                    1- 1207     	.line	653, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0009 2164                      1- 1208     	MOVIA	0x64
                                    1- 1209     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1210     	.line	656, "main.c"; 	}
                                    1- 1211     	RETURN	
     000B 0010                      3-   40 m1      ret
                                    1- 1212     ; exit point of _initAD
                                    1- 1214     ;***
                                    1- 1215     ;  pBlock Stats: dbName = C
                                    1- 1216     ;***
                                    1- 1217     ;has an exit
                                    1- 1218     ;1 compiler assigned register :
                                    1- 1219     ;   r0x1034
                                    1- 1220     ;; Starting pCode block
                                    1- 1221     .segment "code"; module=main, function=_keyRead
                                    1- 1223     ;local variable name mapping:
     0000                           1- 1225     _keyRead:
                                    1- 1226     ; 2 exit points
                                    1- 1227     	.line	598, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1228     	BANKSEL	r0x1034
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1229     	MOVAR	r0x1034
                                    1- 1230     	.line	600, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 1231     	MOVR	r0x1034,W
     0003 0D03                      1- 1232     	BTRSC	STATUS,2
                                    1- 1233     	MGOTO	_00447_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1234     	.line	602, "main.c"; 	keyNub = keyStatus;
     0005 01rr                      1- 1235     	MOVR	r0x1034,W
                                    1- 1236     	BANKSEL	_keyNub
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 1237     	MOVAR	_keyNub
                                    1- 1238     	.line	603, "main.c"; 	keyCount++;
                                    1- 1239     	BANKSEL	_keyCount
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 05rr                      1- 1240     	INCR	_keyCount,F
                                    1- 1241     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 1242     	.line	604, "main.c"; 	if(keyCount >= 200)
     000A 21C8                      1- 1243     	MOVIA	0xc8
     000B 04rr                      1- 1244     	SUBAR	_keyCount,W
     000C 0803                      1- 1245     	BTRSS	STATUS,0
                                    1- 1246     	MGOTO	_00448_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1247     	.line	606, "main.c"; 	keyCount = 200;
     000E 21C8                      1- 1248     	MOVIA	0xc8
     000F 00rr                      1- 1249     	MOVAR	_keyCount
                                    1- 1250     	.line	607, "main.c"; 	if(!longPressFlag)
                                    1- 1251     	BANKSEL	_Status
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 0Crr                      1- 1252     	BTRSC	_Status,1
                                    1- 1253     	MGOTO	_00448_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1254     	.line	609, "main.c"; 	longPressFlag = 1;
     0013 18rr                      1- 1255     	BSR	_Status,1
                                    1- 1256     	.line	610, "main.c"; 	return 2;
     0014 2102                      1- 1257     	MOVIA	0x02
                                    1- 1258     	MGOTO	_00449_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1259     ;;unsigned compare: left < lit (0xC8=200), size=1
     0016                           1- 1260     _00447_DS_:
                                    1- 1261     	.line	616, "main.c"; 	if(keyCount >= 200)
     0016 21C8                      1- 1262     	MOVIA	0xc8
                                    1- 1263     	BANKSEL	_keyCount
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 04rr                      1- 1264     	SUBAR	_keyCount,W
     0019 0803                      1- 1265     	BTRSS	STATUS,0
                                    1- 1266     	MGOTO	_00444_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1267     	.line	618, "main.c"; 	keyCount = 0;
     001B 02rr                      1- 1268     	CLRR	_keyCount
                                    1- 1269     	.line	619, "main.c"; 	longPressFlag = 0;
                                    1- 1270     	BANKSEL	_Status
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 1Crr                      1- 1271     	BCR	_Status,1
                                    1- 1272     	.line	620, "main.c"; 	return	0;
     001E 2100                      1- 1273     	MOVIA	0x00
                                    1- 1274     	MGOTO	_00449_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1275     ;;unsigned compare: left < lit (0x8=8), size=1
     0020                           1- 1276     _00444_DS_:
                                    1- 1277     	.line	622, "main.c"; 	else if(keyCount >= 8)
     0020 2108                      1- 1278     	MOVIA	0x08
                                    1- 1279     	BANKSEL	_keyCount
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 04rr                      1- 1280     	SUBAR	_keyCount,W
     0023 0803                      1- 1281     	BTRSS	STATUS,0
                                    1- 1282     	MGOTO	_00445_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1283     	.line	624, "main.c"; 	keyCount = 0;
     0025 02rr                      1- 1284     	CLRR	_keyCount
                                    1- 1285     	.line	625, "main.c"; 	return	1;
     0026 2101                      1- 1286     	MOVIA	0x01
                                    1- 1287     	MGOTO	_00449_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 1288     _00445_DS_:
                                    1- 1289     	.line	627, "main.c"; 	keyCount = 0;
                                    1- 1290     	BANKSEL	_keyCount
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 02rr                      1- 1291     	CLRR	_keyCount
                                    1- 1292     	.line	628, "main.c"; 	keyNub = 0;
                                    1- 1293     	BANKSEL	_keyNub
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 02rr                      1- 1294     	CLRR	_keyNub
     002C                           1- 1295     _00448_DS_:
                                    1- 1296     	.line	630, "main.c"; 	return 0;
     002C 2100                      1- 1297     	MOVIA	0x00
     002D                           1- 1298     _00449_DS_:
                                    1- 1299     	.line	631, "main.c"; 	}
                                    1- 1300     	RETURN	
     002D 0010                      3-   40 m1      ret
                                    1- 1301     ; exit point of _keyRead
                                    1- 1303     ;***
                                    1- 1304     ;  pBlock Stats: dbName = C
                                    1- 1305     ;***
                                    1- 1306     ;has an exit
                                    1- 1307     ;functions called:
                                    1- 1308     ;   _F_AIN4_Convert
                                    1- 1309     ;   _F_AIN4_Convert
                                    1- 1310     ;4 compiler assigned registers:
                                    1- 1311     ;   r0x1035
                                    1- 1312     ;   r0x1036
                                    1- 1313     ;   r0x1037
                                    1- 1314     ;   r0x1038
                                    1- 1315     ;; Starting pCode block
                                    1- 1316     .segment "code"; module=main, function=_checkHotAD
     0000                           1- 1318     _checkHotAD:
                                    1- 1319     ; 2 exit points
                                    1- 1320     	.line	589, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1321     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1322     	CLRR	_R_AIN4_DATA_LB
                                    1- 1323     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1324     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1325     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1326     	.line	590, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1327     	MOVIA	0x08
                                    1- 1328     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1329     	.line	591, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1330     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1331     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1332     	ANDIA	0xf0
     000A 00rr                      1- 1333     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1334     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1335     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1336     	ANDIA	0x0f
     000E 11rr                      1- 1337     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1338     	XORAR	_R_AIN4_DATA,F
                                    1- 1339     	.line	592, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1340     	MOVIA	0xf0
                                    1- 1341     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1342     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1343     	.line	593, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1344     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1345     	BANKSEL	r0x1037
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1346     	MOVAR	r0x1037
                                    1- 1347     ;;1	MOVAR	r0x1035
                                    1- 1348     ;;1	CLRR	r0x1036
                                    1- 1349     ;;104	MOVR	r0x1035,W
     0016 2100                      1- 1350     	MOVIA	0x00
                                    1- 1351     	BANKSEL	r0x1038
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1352     	MOVAR	r0x1038
                                    1- 1353     	BANKSEL	r0x1037
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1354     	MOVR	r0x1037,W
                                    1- 1355     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1356     	ADDAR	_R_AIN4_DATA,F
                                    1- 1357     	BANKSEL	r0x1038
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1358     	MOVR	r0x1038,W
     001F 0C03                      1- 1359     	BTRSC	STATUS,0
     0020 05rr                      1- 1360     	INCR	r0x1038,W
     0021 0D03                      1- 1361     	BTRSC	STATUS,2
                                    1- 1362     	MGOTO	_00005_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1363     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1364     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1365     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1366     _00005_DS_:
                                    1- 1367     	.line	594, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1368     	BCR	STATUS,0
                                    1- 1369     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1370     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1371     	RRR	_R_AIN4_DATA,F
                                    1- 1372     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1373     	BCR	STATUS,0
     002A 13rr                      1- 1374     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1375     	RRR	_R_AIN4_DATA,F
                                    1- 1376     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1377     	BCR	STATUS,0
     002D 13rr                      1- 1378     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1379     	RRR	_R_AIN4_DATA,F
                                    1- 1380     	.line	595, "main.c"; 	}
                                    1- 1381     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1382     ; exit point of _checkHotAD
                                    1- 1384     ;***
                                    1- 1385     ;  pBlock Stats: dbName = C
                                    1- 1386     ;***
                                    1- 1387     ;has an exit
                                    1- 1388     ;functions called:
                                    1- 1389     ;   _F_AIN3_Convert
                                    1- 1390     ;   _F_AIN3_Convert
                                    1- 1391     ;4 compiler assigned registers:
                                    1- 1392     ;   r0x1039
                                    1- 1393     ;   r0x103A
                                    1- 1394     ;   r0x103B
                                    1- 1395     ;   r0x103C
                                    1- 1396     ;; Starting pCode block
                                    1- 1397     .segment "code"; module=main, function=_checkTouchAD
     0000                           1- 1399     _checkTouchAD:
                                    1- 1400     ; 2 exit points
                                    1- 1401     	.line	578, "main.c"; 	R_AIN3_DATA = R_AIN3_DATA_LB = 0x00;
                                    1- 1402     	BANKSEL	_R_AIN3_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1403     	CLRR	_R_AIN3_DATA_LB
                                    1- 1404     	BANKSEL	_R_AIN3_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1405     	CLRR	_R_AIN3_DATA
     0004 02rr                      1- 1406     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1407     	.line	579, "main.c"; 	F_AIN3_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1408     	MOVIA	0x08
                                    1- 1409     	MCALL	_F_AIN3_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1410     	.line	580, "main.c"; 	R_AIN3_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1411     	BANKSEL	_R_AIN3_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1412     	SWAPR	(_R_AIN3_DATA + 1),W
     0009 22F0                      1- 1413     	ANDIA	0xf0
     000A 00rr                      1- 1414     	MOVAR	(_R_AIN3_DATA + 1)
     000B 15rr                      1- 1415     	SWAPR	_R_AIN3_DATA,W
     000C 00rr                      1- 1416     	MOVAR	_R_AIN3_DATA
     000D 220F                      1- 1417     	ANDIA	0x0f
     000E 11rr                      1- 1418     	IORAR	(_R_AIN3_DATA + 1),F
     000F 12rr                      1- 1419     	XORAR	_R_AIN3_DATA,F
                                    1- 1420     	.line	581, "main.c"; 	R_AIN3_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1421     	MOVIA	0xf0
                                    1- 1422     	BANKSEL	_R_AIN3_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1423     	ANDAR	_R_AIN3_DATA_LB,F
                                    1- 1424     	.line	582, "main.c"; 	R_AIN3_DATA += R_AIN3_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1425     	MOVR	_R_AIN3_DATA_LB,W
                                    1- 1426     	BANKSEL	r0x103B
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1427     	MOVAR	r0x103B
                                    1- 1428     ;;1	MOVAR	r0x1039
                                    1- 1429     ;;1	CLRR	r0x103A
                                    1- 1430     ;;103	MOVR	r0x1039,W
     0016 2100                      1- 1431     	MOVIA	0x00
                                    1- 1432     	BANKSEL	r0x103C
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1433     	MOVAR	r0x103C
                                    1- 1434     	BANKSEL	r0x103B
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1435     	MOVR	r0x103B,W
                                    1- 1436     	BANKSEL	_R_AIN3_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1437     	ADDAR	_R_AIN3_DATA,F
                                    1- 1438     	BANKSEL	r0x103C
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1439     	MOVR	r0x103C,W
     001F 0C03                      1- 1440     	BTRSC	STATUS,0
     0020 05rr                      1- 1441     	INCR	r0x103C,W
     0021 0D03                      1- 1442     	BTRSC	STATUS,2
                                    1- 1443     	MGOTO	_00006_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1444     	BANKSEL	_R_AIN3_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1445     	ADDAR	(_R_AIN3_DATA + 1),F
                                    1- 1446     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1447     _00006_DS_:
                                    1- 1448     	.line	583, "main.c"; 	R_AIN3_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1449     	BCR	STATUS,0
                                    1- 1450     	BANKSEL	_R_AIN3_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1451     	RRR	(_R_AIN3_DATA + 1),F
     0028 13rr                      1- 1452     	RRR	_R_AIN3_DATA,F
                                    1- 1453     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1454     	BCR	STATUS,0
     002A 13rr                      1- 1455     	RRR	(_R_AIN3_DATA + 1),F
     002B 13rr                      1- 1456     	RRR	_R_AIN3_DATA,F
                                    1- 1457     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1458     	BCR	STATUS,0
     002D 13rr                      1- 1459     	RRR	(_R_AIN3_DATA + 1),F
     002E 13rr                      1- 1460     	RRR	_R_AIN3_DATA,F
                                    1- 1461     	.line	585, "main.c"; 	}
                                    1- 1462     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1463     ; exit point of _checkTouchAD
                                    1- 1465     ;***
                                    1- 1466     ;  pBlock Stats: dbName = C
                                    1- 1467     ;***
                                    1- 1468     ;has an exit
                                    1- 1469     ;functions called:
                                    1- 1470     ;   _F_AIN1_Convert
                                    1- 1471     ;   _F_AIN1_Convert
                                    1- 1472     ;4 compiler assigned registers:
                                    1- 1473     ;   r0x103D
                                    1- 1474     ;   r0x103E
                                    1- 1475     ;   r0x103F
                                    1- 1476     ;   r0x1040
                                    1- 1477     ;; Starting pCode block
                                    1- 1478     .segment "code"; module=main, function=_checkKeyAD
     0000                           1- 1480     _checkKeyAD:
                                    1- 1481     ; 2 exit points
                                    1- 1482     	.line	567, "main.c"; 	IOSTA |= 0x02;
     0000 001r                      1- 1483     	IOSTR	_IOSTA
                                    1- 1484     	BANKSEL	r0x103D
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1485     	MOVAR	r0x103D
     0003 18rr                      1- 1486     	BSR	r0x103D,1
     0004 01rr                      1- 1487     	MOVR	r0x103D,W
     0005 000r                      1- 1488     	IOST	_IOSTA
                                    1- 1489     	.line	568, "main.c"; 	R_AIN1_DATA = R_AIN1_DATA_LB = 0x00;
                                    1- 1490     	BANKSEL	_R_AIN1_DATA_LB
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 1491     	CLRR	_R_AIN1_DATA_LB
                                    1- 1492     	BANKSEL	_R_AIN1_DATA
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 1493     	CLRR	_R_AIN1_DATA
     000A 02rr                      1- 1494     	CLRR	(_R_AIN1_DATA + 1)
                                    1- 1495     	.line	569, "main.c"; 	F_AIN1_Convert(8);					// execute AIN0 ADC converting 8 times
     000B 2108                      1- 1496     	MOVIA	0x08
                                    1- 1497     	MCALL	_F_AIN1_Convert
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1498     	.line	570, "main.c"; 	R_AIN1_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1499     	BANKSEL	_R_AIN1_DATA
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 15rr                      1- 1500     	SWAPR	(_R_AIN1_DATA + 1),W
     000F 22F0                      1- 1501     	ANDIA	0xf0
     0010 00rr                      1- 1502     	MOVAR	(_R_AIN1_DATA + 1)
     0011 15rr                      1- 1503     	SWAPR	_R_AIN1_DATA,W
     0012 00rr                      1- 1504     	MOVAR	_R_AIN1_DATA
     0013 220F                      1- 1505     	ANDIA	0x0f
     0014 11rr                      1- 1506     	IORAR	(_R_AIN1_DATA + 1),F
     0015 12rr                      1- 1507     	XORAR	_R_AIN1_DATA,F
                                    1- 1508     	.line	571, "main.c"; 	R_AIN1_DATA_LB &= 0xF0;				// Only get Bit7~4
     0016 21F0                      1- 1509     	MOVIA	0xf0
                                    1- 1510     	BANKSEL	_R_AIN1_DATA_LB
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 10rr                      1- 1511     	ANDAR	_R_AIN1_DATA_LB,F
                                    1- 1512     	.line	572, "main.c"; 	R_AIN1_DATA += R_AIN1_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0019 01rr                      1- 1513     	MOVR	_R_AIN1_DATA_LB,W
                                    1- 1514     	BANKSEL	r0x103D
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 00rr                      1- 1515     	MOVAR	r0x103D
                                    1- 1516     ;;1	CLRR	r0x103E
                                    1- 1517     ;;102	MOVR	r0x103D,W
                                    1- 1518     ;;100	MOVAR	r0x103F
     001C 2100                      1- 1519     	MOVIA	0x00
                                    1- 1520     	BANKSEL	r0x1040
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 00rr                      1- 1521     	MOVAR	r0x1040
                                    1- 1522     ;;101	MOVR	r0x103F,W
                                    1- 1523     	BANKSEL	r0x103D
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 01rr                      1- 1524     	MOVR	r0x103D,W
                                    1- 1525     	BANKSEL	_R_AIN1_DATA
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 03rr                      1- 1526     	ADDAR	_R_AIN1_DATA,F
                                    1- 1527     	BANKSEL	r0x1040
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 01rr                      1- 1528     	MOVR	r0x1040,W
     0025 0C03                      1- 1529     	BTRSC	STATUS,0
     0026 05rr                      1- 1530     	INCR	r0x1040,W
     0027 0D03                      1- 1531     	BTRSC	STATUS,2
                                    1- 1532     	MGOTO	_00007_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1533     	BANKSEL	_R_AIN1_DATA
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 03rr                      1- 1534     	ADDAR	(_R_AIN1_DATA + 1),F
                                    1- 1535     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002B                           1- 1536     _00007_DS_:
                                    1- 1537     	.line	573, "main.c"; 	R_AIN1_DATA >>=3;					// R_AIN0_DATA divided 8
     002B 1C03                      1- 1538     	BCR	STATUS,0
                                    1- 1539     	BANKSEL	_R_AIN1_DATA
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 13rr                      1- 1540     	RRR	(_R_AIN1_DATA + 1),F
     002E 13rr                      1- 1541     	RRR	_R_AIN1_DATA,F
                                    1- 1542     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002F 1C03                      1- 1543     	BCR	STATUS,0
     0030 13rr                      1- 1544     	RRR	(_R_AIN1_DATA + 1),F
     0031 13rr                      1- 1545     	RRR	_R_AIN1_DATA,F
                                    1- 1546     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0032 1C03                      1- 1547     	BCR	STATUS,0
     0033 13rr                      1- 1548     	RRR	(_R_AIN1_DATA + 1),F
     0034 13rr                      1- 1549     	RRR	_R_AIN1_DATA,F
                                    1- 1550     	.line	574, "main.c"; 	}
                                    1- 1551     	RETURN	
     0035 0010                      3-   40 m1      ret
                                    1- 1552     ; exit point of _checkKeyAD
                                    1- 1554     ;***
                                    1- 1555     ;  pBlock Stats: dbName = C
                                    1- 1556     ;***
                                    1- 1557     ;has an exit
                                    1- 1558     ;functions called:
                                    1- 1559     ;   _F_VDD_Convert
                                    1- 1560     ;   _F_VDD_Convert
                                    1- 1561     ;4 compiler assigned registers:
                                    1- 1562     ;   r0x1041
                                    1- 1563     ;   r0x1042
                                    1- 1564     ;   r0x1043
                                    1- 1565     ;   r0x1044
                                    1- 1566     ;; Starting pCode block
                                    1- 1567     .segment "code"; module=main, function=_checkBAT
     0000                           1- 1569     _checkBAT:
                                    1- 1570     ; 2 exit points
                                    1- 1571     	.line	557, "main.c"; 	R_VDD_DATA = R_VDD_DATA_LB = 0x00;
                                    1- 1572     	BANKSEL	_R_VDD_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1573     	CLRR	_R_VDD_DATA_LB
                                    1- 1574     	BANKSEL	_R_VDD_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1575     	CLRR	_R_VDD_DATA
     0004 02rr                      1- 1576     	CLRR	(_R_VDD_DATA + 1)
                                    1- 1577     	.line	558, "main.c"; 	F_VDD_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1578     	MOVIA	0x08
                                    1- 1579     	MCALL	_F_VDD_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1580     	.line	559, "main.c"; 	R_VDD_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1581     	BANKSEL	_R_VDD_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1582     	SWAPR	(_R_VDD_DATA + 1),W
     0009 22F0                      1- 1583     	ANDIA	0xf0
     000A 00rr                      1- 1584     	MOVAR	(_R_VDD_DATA + 1)
     000B 15rr                      1- 1585     	SWAPR	_R_VDD_DATA,W
     000C 00rr                      1- 1586     	MOVAR	_R_VDD_DATA
     000D 220F                      1- 1587     	ANDIA	0x0f
     000E 11rr                      1- 1588     	IORAR	(_R_VDD_DATA + 1),F
     000F 12rr                      1- 1589     	XORAR	_R_VDD_DATA,F
                                    1- 1590     	.line	560, "main.c"; 	R_VDD_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1591     	MOVIA	0xf0
                                    1- 1592     	BANKSEL	_R_VDD_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1593     	ANDAR	_R_VDD_DATA_LB,F
                                    1- 1594     	.line	561, "main.c"; 	R_VDD_DATA += R_VDD_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1595     	MOVR	_R_VDD_DATA_LB,W
                                    1- 1596     	BANKSEL	r0x1043
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1597     	MOVAR	r0x1043
                                    1- 1598     ;;1	MOVAR	r0x1041
                                    1- 1599     ;;1	CLRR	r0x1042
                                    1- 1600     ;;99	MOVR	r0x1041,W
     0016 2100                      1- 1601     	MOVIA	0x00
                                    1- 1602     	BANKSEL	r0x1044
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1603     	MOVAR	r0x1044
                                    1- 1604     	BANKSEL	r0x1043
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1605     	MOVR	r0x1043,W
                                    1- 1606     	BANKSEL	_R_VDD_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1607     	ADDAR	_R_VDD_DATA,F
                                    1- 1608     	BANKSEL	r0x1044
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1609     	MOVR	r0x1044,W
     001F 0C03                      1- 1610     	BTRSC	STATUS,0
     0020 05rr                      1- 1611     	INCR	r0x1044,W
     0021 0D03                      1- 1612     	BTRSC	STATUS,2
                                    1- 1613     	MGOTO	_00008_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1614     	BANKSEL	_R_VDD_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1615     	ADDAR	(_R_VDD_DATA + 1),F
                                    1- 1616     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1617     _00008_DS_:
                                    1- 1618     	.line	562, "main.c"; 	R_VDD_DATA >>=3;					// R_AIN0_DATA divided 8	
     0025 1C03                      1- 1619     	BCR	STATUS,0
                                    1- 1620     	BANKSEL	_R_VDD_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1621     	RRR	(_R_VDD_DATA + 1),F
     0028 13rr                      1- 1622     	RRR	_R_VDD_DATA,F
                                    1- 1623     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1624     	BCR	STATUS,0
     002A 13rr                      1- 1625     	RRR	(_R_VDD_DATA + 1),F
     002B 13rr                      1- 1626     	RRR	_R_VDD_DATA,F
                                    1- 1627     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1628     	BCR	STATUS,0
     002D 13rr                      1- 1629     	RRR	(_R_VDD_DATA + 1),F
     002E 13rr                      1- 1630     	RRR	_R_VDD_DATA,F
                                    1- 1631     	.line	563, "main.c"; 	}
                                    1- 1632     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1633     ; exit point of _checkBAT
                                    1- 1635     ;***
                                    1- 1636     ;  pBlock Stats: dbName = C
                                    1- 1637     ;***
                                    1- 1638     ;has an exit
                                    1- 1639     ;1 compiler assigned register :
                                    1- 1640     ;   r0x1045
                                    1- 1641     ;; Starting pCode block
                                    1- 1642     .segment "code"; module=main, function=_PWM2Start
     0000                           1- 1644     _PWM2Start:
                                    1- 1645     ; 2 exit points
                                    1- 1646     	.line	542, "main.c"; 	if(T2CR1 & C_PWM2_En)
     0000 00rr                      1- 1647     	SFUNR	_T2CR1
                                    1- 1648     	BANKSEL	r0x1045
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1649     	MOVAR	r0x1045
     0003 0Frr                      1- 1650     	BTRSC	r0x1045,7
                                    1- 1651     	.line	543, "main.c"; 	return;
                                    1- 1652     	MGOTO	_00416_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1653     	.line	545, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 1654     	CLRR	_TMRH
                                    1- 1655     	.line	546, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 1656     	MOVIA	0x64
     0007 00rr                      1- 1657     	SFUN	_TMR2
                                    1- 1658     	.line	547, "main.c"; 	PWM2DUTY = 66;				// 		
     0008 2142                      1- 1659     	MOVIA	0x42
     0009 00rr                      1- 1660     	SFUN	_PWM2DUTY
                                    1- 1661     	.line	549, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div32;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     000A 2104                      1- 1662     	MOVIA	0x04
     000B 00rr                      1- 1663     	SFUN	_T2CR2
                                    1- 1664     	.line	550, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000C 2183                      1- 1665     	MOVIA	0x83
     000D 00rr                      1- 1666     	SFUN	_T2CR1
     000E                           1- 1667     _00416_DS_:
                                    1- 1668     	.line	552, "main.c"; 	}
                                    1- 1669     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 1670     ; exit point of _PWM2Start
                                    1- 1672     ;***
                                    1- 1673     ;  pBlock Stats: dbName = C
                                    1- 1674     ;***
                                    1- 1675     ;has an exit
                                    1- 1676     ;1 compiler assigned register :
                                    1- 1677     ;   r0x1046
                                    1- 1678     ;; Starting pCode block
                                    1- 1679     .segment "code"; module=main, function=_PWM1Start
     0000                           1- 1681     _PWM1Start:
                                    1- 1682     ; 2 exit points
                                    1- 1683     	.line	529, "main.c"; 	if(T1CR1 & C_PWM1_En)
     0000 00rr                      1- 1684     	SFUNR	_T1CR1
                                    1- 1685     	BANKSEL	r0x1046
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1686     	MOVAR	r0x1046
     0003 0Frr                      1- 1687     	BTRSC	r0x1046,7
                                    1- 1688     	.line	530, "main.c"; 	return;
                                    1- 1689     	MGOTO	_00409_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1690     	.line	532, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 1691     	CLRR	_TMRH
                                    1- 1692     	.line	533, "main.c"; 	TMR1 = 100;							//频率为110K
     0006 2164                      1- 1693     	MOVIA	0x64
     0007 00rr                      1- 1694     	SFUN	_TMR1
                                    1- 1695     	.line	534, "main.c"; 	PWM1DUTY = 66;				// 		
     0008 2142                      1- 1696     	MOVIA	0x42
     0009 00rr                      1- 1697     	SFUN	_PWM1DUTY
                                    1- 1698     	.line	536, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div32;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     000A 2104                      1- 1699     	MOVIA	0x04
     000B 00rr                      1- 1700     	SFUN	_T1CR2
                                    1- 1701     	.line	537, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000C 2183                      1- 1702     	MOVIA	0x83
     000D 00rr                      1- 1703     	SFUN	_T1CR1
     000E                           1- 1704     _00409_DS_:
                                    1- 1705     	.line	538, "main.c"; 	}
                                    1- 1706     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 1707     ; exit point of _PWM1Start
                                    1- 1709     ;***
                                    1- 1710     ;  pBlock Stats: dbName = C
                                    1- 1711     ;***
                                    1- 1712     ;has an exit
                                    1- 1713     ;functions called:
                                    1- 1714     ;   _checkBAT
                                    1- 1715     ;   _checkKeyAD
                                    1- 1716     ;   _keyRead
                                    1- 1717     ;   _LedInput
                                    1- 1718     ;   _checkBAT
                                    1- 1719     ;   _checkKeyAD
                                    1- 1720     ;   _keyRead
                                    1- 1721     ;   _LedInput
                                    1- 1722     ;1 compiler assigned register :
                                    1- 1723     ;   r0x1047
                                    1- 1724     ;; Starting pCode block
                                    1- 1725     .segment "code"; module=main, function=_ADKeyCtr
                                    1- 1727     ;local variable name mapping:
     0000                           1- 1730     _ADKeyCtr:
                                    1- 1731     ; 2 exit points
                                    1- 1732     	.line	426, "main.c"; 	if(++checkTime > 30)
                                    1- 1733     	BANKSEL	_checkTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 05rr                      1- 1734     	INCR	_checkTime,F
                                    1- 1735     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1736     ;;unsigned compare: left >= lit (0x1F=31), size=1
     0002 211F                      1- 1737     	MOVIA	0x1f
     0003 04rr                      1- 1738     	SUBAR	_checkTime,W
     0004 0803                      1- 1739     	BTRSS	STATUS,0
                                    1- 1740     	MGOTO	_00275_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1741     	.line	428, "main.c"; 	checkTime = 0;
     0006 02rr                      1- 1742     	CLRR	_checkTime
                                    1- 1743     	.line	429, "main.c"; 	checkBAT();
                                    1- 1744     	MCALL	_checkBAT
     0007 2rrr                      3-   66 m1      LCALL rom_address
     0008                           1- 1745     _00275_DS_:
                                    1- 1746     	.line	431, "main.c"; 	if(modeStep > 0 && startLedFlag == 0)
                                    1- 1747     	BANKSEL	_modeStep
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 01rr                      1- 1748     	MOVR	_modeStep,W
     000A 0D03                      1- 1749     	BTRSC	STATUS,2
                                    1- 1750     	MGOTO	_00285_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1751     	BANKSEL	_Status
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 0Drr                      1- 1752     	BTRSC	_Status,2
                                    1- 1753     	MGOTO	_00285_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1754     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1755     ;;unsigned compare: left >= lit (0x39A=922), size=2
                                    1- 1756     	.line	433, "main.c"; 	if(R_VDD_DATA > 921)
     000F 2103                      1- 1757     	MOVIA	0x03
                                    1- 1758     	BANKSEL	_R_VDD_DATA
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1759     	SUBAR	(_R_VDD_DATA + 1),W
     0012 0903                      1- 1760     	BTRSS	STATUS,2
                                    1- 1761     	MGOTO	_00396_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
     0014 219A                      1- 1762     	MOVIA	0x9a
     0015 04rr                      1- 1763     	SUBAR	_R_VDD_DATA,W
     0016                           1- 1764     _00396_DS_:
     0016 0803                      1- 1765     	BTRSS	STATUS,0
                                    1- 1766     	MGOTO	_00282_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1767     	.line	436, "main.c"; 	chrgLedStep = 2;
     0018 2102                      1- 1768     	MOVIA	0x02
                                    1- 1769     	BANKSEL	_chrgLedStep
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 00rr                      1- 1770     	MOVAR	_chrgLedStep
                                    1- 1771     	MGOTO	_00285_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
     001C                           1- 1772     _00282_DS_:
                                    1- 1773     	.line	440, "main.c"; 	if(chrgLedStep == 2)
                                    1- 1774     	BANKSEL	_chrgLedStep
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 01rr                      1- 1775     	MOVR	_chrgLedStep,W
     001E 2402                      1- 1776     	XORIA	0x02
     001F 0903                      1- 1777     	BTRSS	STATUS,2
                                    1- 1778     	MGOTO	_00279_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1779     ;;unsigned compare: left < lit (0x38E=910), size=2
                                    1- 1780     	.line	442, "main.c"; 	if(R_VDD_DATA < 910)
     0021 2103                      1- 1781     	MOVIA	0x03
                                    1- 1782     	BANKSEL	_R_VDD_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 04rr                      1- 1783     	SUBAR	(_R_VDD_DATA + 1),W
     0024 0903                      1- 1784     	BTRSS	STATUS,2
                                    1- 1785     	MGOTO	_00397_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
     0026 218E                      1- 1786     	MOVIA	0x8e
     0027 04rr                      1- 1787     	SUBAR	_R_VDD_DATA,W
     0028                           1- 1788     _00397_DS_:
     0028 0C03                      1- 1789     	BTRSC	STATUS,0
                                    1- 1790     	MGOTO	_00285_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1791     	.line	443, "main.c"; 	chrgLedStep = 1;
     002A 2101                      1- 1792     	MOVIA	0x01
                                    1- 1793     	BANKSEL	_chrgLedStep
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 00rr                      1- 1794     	MOVAR	_chrgLedStep
                                    1- 1795     	MGOTO	_00285_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
     002E                           1- 1796     _00279_DS_:
                                    1- 1797     	.line	446, "main.c"; 	chrgLedStep = 1;
     002E 2101                      1- 1798     	MOVIA	0x01
                                    1- 1799     	BANKSEL	_chrgLedStep
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 00rr                      1- 1800     	MOVAR	_chrgLedStep
     0031                           1- 1801     _00285_DS_:
                                    1- 1802     	.line	449, "main.c"; 	if(modeStep == 0 && startLedFlag == 0)
                                    1- 1803     	BANKSEL	_modeStep
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1- 1804     	MOVR	_modeStep,W
     0033 0903                      1- 1805     	BTRSS	STATUS,2
                                    1- 1806     	MGOTO	_00288_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1807     	BANKSEL	_Status
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 0Drr                      1- 1808     	BTRSC	_Status,2
                                    1- 1809     	MGOTO	_00288_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1810     	.line	452, "main.c"; 	powerStep = 0;
                                    1- 1811     	BANKSEL	_powerStep
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 02rr                      1- 1812     	CLRR	_powerStep
                                    1- 1813     	.line	453, "main.c"; 	chrgLedStep = 0;
                                    1- 1814     	BANKSEL	_chrgLedStep
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 02rr                      1- 1815     	CLRR	_chrgLedStep
                                    1- 1816     	.line	454, "main.c"; 	ORANGEOFF();
     003C 1Err                      1- 1817     	BCR	_PORTB,4
                                    1- 1818     	.line	455, "main.c"; 	BLUEOFF();
     003D 1Err                      1- 1819     	BCR	_PORTB,5
                                    1- 1820     	.line	456, "main.c"; 	REDOFF();
     003E 1Crr                      1- 1821     	BCR	_PORTA,0
                                    1- 1822     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1823     ;;unsigned compare: left >= lit (0xB=11), size=1
     003F                           1- 1824     _00288_DS_:
                                    1- 1825     	.line	458, "main.c"; 	if(checkTime > 10 && checkTime < 25)
     003F 210B                      1- 1826     	MOVIA	0x0b
                                    1- 1827     	BANKSEL	_checkTime
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 04rr                      1- 1828     	SUBAR	_checkTime,W
     0042 0803                      1- 1829     	BTRSS	STATUS,0
                                    1- 1830     	MGOTO	_00291_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1831     ;;unsigned compare: left < lit (0x19=25), size=1
     0044 2119                      1- 1832     	MOVIA	0x19
     0045 04rr                      1- 1833     	SUBAR	_checkTime,W
     0046 0803                      1- 1834     	BTRSS	STATUS,0
                                    1- 1835     	.line	460, "main.c"; 	checkKeyAD();
                                    1- 1836     	MCALL	_checkKeyAD
     0047 2rrr                      3-   66 m1      LCALL rom_address
     0048                           1- 1837     _00291_DS_:
                                    1- 1838     	.line	463, "main.c"; 	if(R_AIN1_DATA > 100 && R_AIN1_DATA < 2048)
     0048 2100                      1- 1839     	MOVIA	0x00
                                    1- 1840     	BANKSEL	_R_AIN1_DATA
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 04rr                      1- 1841     	SUBAR	(_R_AIN1_DATA + 1),W
     004B 0903                      1- 1842     	BTRSS	STATUS,2
                                    1- 1843     	MGOTO	_00400_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
     004D 2165                      1- 1844     	MOVIA	0x65
     004E 04rr                      1- 1845     	SUBAR	_R_AIN1_DATA,W
     004F                           1- 1846     _00400_DS_:
     004F 0803                      1- 1847     	BTRSS	STATUS,0
                                    1- 1848     	MGOTO	_00297_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1849     ;;unsigned compare: left < lit (0x800=2048), size=2
     0051 2108                      1- 1850     	MOVIA	0x08
                                    1- 1851     	BANKSEL	_R_AIN1_DATA
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 04rr                      1- 1852     	SUBAR	(_R_AIN1_DATA + 1),W
     0054 0903                      1- 1853     	BTRSS	STATUS,2
                                    1- 1854     	MGOTO	_00401_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
     0056 2100                      1- 1855     	MOVIA	0x00
     0057 04rr                      1- 1856     	SUBAR	_R_AIN1_DATA,W
     0058                           1- 1857     _00401_DS_:
     0058 0C03                      1- 1858     	BTRSC	STATUS,0
                                    1- 1859     	MGOTO	_00297_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1860     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1861     ;;unsigned compare: left >= lit (0x601=1537), size=2
                                    1- 1862     	.line	465, "main.c"; 	if(R_AIN1_DATA > 1536)
     005A 2106                      1- 1863     	MOVIA	0x06
                                    1- 1864     	BANKSEL	_R_AIN1_DATA
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 04rr                      1- 1865     	SUBAR	(_R_AIN1_DATA + 1),W
     005D 0903                      1- 1866     	BTRSS	STATUS,2
                                    1- 1867     	MGOTO	_00402_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
     005F 2101                      1- 1868     	MOVIA	0x01
     0060 04rr                      1- 1869     	SUBAR	_R_AIN1_DATA,W
     0061                           1- 1870     _00402_DS_:
     0061 0803                      1- 1871     	BTRSS	STATUS,0
                                    1- 1872     	MGOTO	_00294_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1873     	.line	468, "main.c"; 	tempKey = 1;
     0063 2101                      1- 1874     	MOVIA	0x01
                                    1- 1875     	BANKSEL	r0x1047
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 00rr                      1- 1876     	MOVAR	r0x1047
                                    1- 1877     	MGOTO	_00298_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
     0067                           1- 1878     _00294_DS_:
                                    1- 1879     	.line	473, "main.c"; 	tempKey = 2;
     0067 2102                      1- 1880     	MOVIA	0x02
                                    1- 1881     	BANKSEL	r0x1047
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 00rr                      1- 1882     	MOVAR	r0x1047
                                    1- 1883     	MGOTO	_00298_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
     006B                           1- 1884     _00297_DS_:
                                    1- 1885     	.line	478, "main.c"; 	tempKey = 0;
                                    1- 1886     	BANKSEL	r0x1047
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 02rr                      1- 1887     	CLRR	r0x1047
     006D                           1- 1888     _00298_DS_:
                                    1- 1889     	.line	480, "main.c"; 	char kclick = keyRead(tempKey);
                                    1- 1890     	BANKSEL	r0x1047
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 01rr                      1- 1891     	MOVR	r0x1047,W
                                    1- 1892     	MCALL	_keyRead
     006F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1893     	BANKSEL	r0x1047
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 00rr                      1- 1894     	MOVAR	r0x1047
                                    1- 1895     	.line	481, "main.c"; 	if(kclick == 1)
     0072 2401                      1- 1896     	XORIA	0x01
     0073 0903                      1- 1897     	BTRSS	STATUS,2
                                    1- 1898     	MGOTO	_00322_DS_
     0074 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1899     	.line	484, "main.c"; 	if(keyNub == 1)
                                    1- 1900     	BANKSEL	_keyNub
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 01rr                      1- 1901     	MOVR	_keyNub,W
     0077 2401                      1- 1902     	XORIA	0x01
     0078 0903                      1- 1903     	BTRSS	STATUS,2
                                    1- 1904     	MGOTO	_00310_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1905     	.line	486, "main.c"; 	if(modeStep == 0)
                                    1- 1906     	BANKSEL	_modeStep
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 01rr                      1- 1907     	MOVR	_modeStep,W
     007C 0903                      1- 1908     	BTRSS	STATUS,2
                                    1- 1909     	MGOTO	_00303_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1910     	.line	488, "main.c"; 	LedInput();
                                    1- 1911     	MCALL	_LedInput
     007E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1912     	.line	489, "main.c"; 	modeStep = 0;
                                    1- 1913     	BANKSEL	_modeStep
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 02rr                      1- 1914     	CLRR	_modeStep
                                    1- 1915     	.line	490, "main.c"; 	powerStep = 0;
                                    1- 1916     	BANKSEL	_powerStep
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 02rr                      1- 1917     	CLRR	_powerStep
                                    1- 1918     	.line	491, "main.c"; 	chrgLedStep = 0;
                                    1- 1919     	BANKSEL	_chrgLedStep
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 02rr                      1- 1920     	CLRR	_chrgLedStep
                                    1- 1921     	.line	492, "main.c"; 	startLedFlag = 1;//开机亮灯模式
                                    1- 1922     	BANKSEL	_Status
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 19rr                      1- 1923     	BSR	_Status,2
                                    1- 1924     	MGOTO	_00324_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
     0088                           1- 1925     _00303_DS_:
                                    1- 1926     	.line	496, "main.c"; 	if(++modeStep > 4)
                                    1- 1927     	BANKSEL	_modeStep
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 05rr                      1- 1928     	INCR	_modeStep,F
                                    1- 1929     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1930     ;;unsigned compare: left >= lit (0x5=5), size=1
     008A 2105                      1- 1931     	MOVIA	0x05
     008B 04rr                      1- 1932     	SUBAR	_modeStep,W
     008C 0803                      1- 1933     	BTRSS	STATUS,0
                                    1- 1934     	MGOTO	_00301_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1935     	.line	497, "main.c"; 	modeStep = 1;
     008E 2101                      1- 1936     	MOVIA	0x01
     008F 00rr                      1- 1937     	MOVAR	_modeStep
     0090                           1- 1938     _00301_DS_:
                                    1- 1939     	.line	498, "main.c"; 	powerStep = 1;
     0090 2101                      1- 1940     	MOVIA	0x01
                                    1- 1941     	BANKSEL	_powerStep
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 00rr                      1- 1942     	MOVAR	_powerStep
                                    1- 1943     	MGOTO	_00324_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
     0094                           1- 1944     _00310_DS_:
                                    1- 1945     	.line	501, "main.c"; 	else if(modeStep > 0)
                                    1- 1946     	BANKSEL	_modeStep
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 01rr                      1- 1947     	MOVR	_modeStep,W
     0096 0D03                      1- 1948     	BTRSC	STATUS,2
                                    1- 1949     	MGOTO	_00324_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1950     	.line	503, "main.c"; 	if(++powerStep > 3)
                                    1- 1951     	BANKSEL	_powerStep
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 05rr                      1- 1952     	INCR	_powerStep,F
                                    1- 1953     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1954     ;;unsigned compare: left >= lit (0x4=4), size=1
     009A 2104                      1- 1955     	MOVIA	0x04
     009B 04rr                      1- 1956     	SUBAR	_powerStep,W
     009C 0803                      1- 1957     	BTRSS	STATUS,0
                                    1- 1958     	MGOTO	_00324_DS_
     009D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1959     	.line	504, "main.c"; 	powerStep = 1;
     009E 2101                      1- 1960     	MOVIA	0x01
     009F 00rr                      1- 1961     	MOVAR	_powerStep
                                    1- 1962     	MGOTO	_00324_DS_
     00A0 3rrr                      3-   63 m1      LGOTO rom_address
     00A1                           1- 1963     _00322_DS_:
                                    1- 1964     	.line	507, "main.c"; 	else if(kclick == 2)
                                    1- 1965     	BANKSEL	r0x1047
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 01rr                      1- 1966     	MOVR	r0x1047,W
     00A3 2402                      1- 1967     	XORIA	0x02
     00A4 0903                      1- 1968     	BTRSS	STATUS,2
                                    1- 1969     	MGOTO	_00324_DS_
     00A5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1970     	.line	510, "main.c"; 	if(keyNub == 1)
                                    1- 1971     	BANKSEL	_keyNub
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 01rr                      1- 1972     	MOVR	_keyNub,W
     00A8 2401                      1- 1973     	XORIA	0x01
     00A9 0903                      1- 1974     	BTRSS	STATUS,2
                                    1- 1975     	MGOTO	_00317_DS_
     00AA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1976     	.line	512, "main.c"; 	modeStep = 0;
                                    1- 1977     	BANKSEL	_modeStep
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 02rr                      1- 1978     	CLRR	_modeStep
                                    1- 1979     	.line	513, "main.c"; 	powerStep = 0;
                                    1- 1980     	BANKSEL	_powerStep
     00AD rrrr                      3-  110 m1      .banksel ram_address
     00AE 02rr                      1- 1981     	CLRR	_powerStep
                                    1- 1982     	.line	514, "main.c"; 	startLedFlag = 0;
                                    1- 1983     	BANKSEL	_Status
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 1Drr                      1- 1984     	BCR	_Status,2
                                    1- 1985     	.line	515, "main.c"; 	chrgLedStep = 0;
                                    1- 1986     	BANKSEL	_chrgLedStep
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 02rr                      1- 1987     	CLRR	_chrgLedStep
                                    1- 1988     	MGOTO	_00324_DS_
     00B3 3rrr                      3-   63 m1      LGOTO rom_address
     00B4                           1- 1989     _00317_DS_:
                                    1- 1990     	.line	518, "main.c"; 	else if(modeStep > 0)
                                    1- 1991     	BANKSEL	_modeStep
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 01rr                      1- 1992     	MOVR	_modeStep,W
     00B6 0D03                      1- 1993     	BTRSC	STATUS,2
                                    1- 1994     	MGOTO	_00324_DS_
     00B7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1995     	.line	520, "main.c"; 	if(++powerStep > 3)
                                    1- 1996     	BANKSEL	_powerStep
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 05rr                      1- 1997     	INCR	_powerStep,F
                                    1- 1998     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1999     ;;unsigned compare: left >= lit (0x4=4), size=1
     00BA 2104                      1- 2000     	MOVIA	0x04
     00BB 04rr                      1- 2001     	SUBAR	_powerStep,W
     00BC 0803                      1- 2002     	BTRSS	STATUS,0
                                    1- 2003     	MGOTO	_00324_DS_
     00BD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2004     	.line	521, "main.c"; 	powerStep = 1;
     00BE 2101                      1- 2005     	MOVIA	0x01
     00BF 00rr                      1- 2006     	MOVAR	_powerStep
     00C0                           1- 2007     _00324_DS_:
                                    1- 2008     	.line	524, "main.c"; 	}
                                    1- 2009     	RETURN	
     00C0 0010                      3-   40 m1      ret
                                    1- 2010     ; exit point of _ADKeyCtr
                                    1- 2012     ;***
                                    1- 2013     ;  pBlock Stats: dbName = C
                                    1- 2014     ;***
                                    1- 2015     ;has an exit
                                    1- 2016     ;; Starting pCode block
                                    1- 2017     .segment "code"; module=main, function=_startCtr
     0000                           1- 2019     _startCtr:
                                    1- 2020     ; 2 exit points
                                    1- 2021     	.line	361, "main.c"; 	if(++timeCount > 20)
                                    1- 2022     	BANKSEL	_timeCount
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 05rr                      1- 2023     	INCR	_timeCount,F
                                    1- 2024     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2025     ;;unsigned compare: left >= lit (0x15=21), size=1
     0002 2115                      1- 2026     	MOVIA	0x15
     0003 04rr                      1- 2027     	SUBAR	_timeCount,W
     0004 0803                      1- 2028     	BTRSS	STATUS,0
                                    1- 2029     	MGOTO	_00269_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2030     	.line	363, "main.c"; 	timeCount = 0;
     0006 02rr                      1- 2031     	CLRR	_timeCount
                                    1- 2032     ;;unsigned compare: left < lit (0x5=5), size=1
                                    1- 2033     	.line	364, "main.c"; 	if(startStep < 5)
     0007 2105                      1- 2034     	MOVIA	0x05
                                    1- 2035     	BANKSEL	_startStep
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 04rr                      1- 2036     	SUBAR	_startStep,W
     000A 0C03                      1- 2037     	BTRSC	STATUS,0
                                    1- 2038     	MGOTO	_00263_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2039     	.line	366, "main.c"; 	modeStep = 5-startStep;
     000C 01rr                      1- 2040     	MOVR	_startStep,W
     000D 2705                      1- 2041     	SUBIA	0x05
                                    1- 2042     	BANKSEL	_modeStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1- 2043     	MOVAR	_modeStep
                                    1- 2044     	.line	367, "main.c"; 	chrgLedStep = 0;
                                    1- 2045     	BANKSEL	_chrgLedStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 02rr                      1- 2046     	CLRR	_chrgLedStep
                                    1- 2047     	.line	368, "main.c"; 	powerStep = 0;
                                    1- 2048     	BANKSEL	_powerStep
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 02rr                      1- 2049     	CLRR	_powerStep
                                    1- 2050     	MGOTO	_00264_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
     0015                           1- 2051     _00263_DS_:
                                    1- 2052     	.line	370, "main.c"; 	else if(startStep == 5)
                                    1- 2053     	BANKSEL	_startStep
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 01rr                      1- 2054     	MOVR	_startStep,W
     0017 2405                      1- 2055     	XORIA	0x05
     0018 0903                      1- 2056     	BTRSS	STATUS,2
                                    1- 2057     	MGOTO	_00260_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2058     	.line	372, "main.c"; 	modeStep = 0;
                                    1- 2059     	BANKSEL	_modeStep
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 02rr                      1- 2060     	CLRR	_modeStep
                                    1- 2061     	.line	373, "main.c"; 	chrgLedStep = 0;
                                    1- 2062     	BANKSEL	_chrgLedStep
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1- 2063     	CLRR	_chrgLedStep
                                    1- 2064     	.line	374, "main.c"; 	powerStep = 3;
     001E 2103                      1- 2065     	MOVIA	0x03
                                    1- 2066     	BANKSEL	_powerStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 00rr                      1- 2067     	MOVAR	_powerStep
                                    1- 2068     	MGOTO	_00264_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
     0022                           1- 2069     _00260_DS_:
                                    1- 2070     	.line	376, "main.c"; 	else if(startStep == 6)
                                    1- 2071     	BANKSEL	_startStep
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 2072     	MOVR	_startStep,W
     0024 2406                      1- 2073     	XORIA	0x06
     0025 0903                      1- 2074     	BTRSS	STATUS,2
                                    1- 2075     	MGOTO	_00257_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2076     	.line	378, "main.c"; 	modeStep = 0;
                                    1- 2077     	BANKSEL	_modeStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 2078     	CLRR	_modeStep
                                    1- 2079     	.line	379, "main.c"; 	powerStep = 0;
                                    1- 2080     	BANKSEL	_powerStep
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 02rr                      1- 2081     	CLRR	_powerStep
                                    1- 2082     	.line	380, "main.c"; 	chrgLedStep = 2;
     002B 2102                      1- 2083     	MOVIA	0x02
                                    1- 2084     	BANKSEL	_chrgLedStep
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1- 2085     	MOVAR	_chrgLedStep
                                    1- 2086     	MGOTO	_00264_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 2087     _00257_DS_:
                                    1- 2088     	.line	382, "main.c"; 	else if(startStep == 7)
                                    1- 2089     	BANKSEL	_startStep
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 2090     	MOVR	_startStep,W
     0031 2407                      1- 2091     	XORIA	0x07
     0032 0903                      1- 2092     	BTRSS	STATUS,2
                                    1- 2093     	MGOTO	_00254_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2094     	.line	384, "main.c"; 	modeStep = 0;
                                    1- 2095     	BANKSEL	_modeStep
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 02rr                      1- 2096     	CLRR	_modeStep
                                    1- 2097     	.line	385, "main.c"; 	chrgLedStep = 0;
                                    1- 2098     	BANKSEL	_chrgLedStep
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 02rr                      1- 2099     	CLRR	_chrgLedStep
                                    1- 2100     	.line	386, "main.c"; 	powerStep = 0;
                                    1- 2101     	BANKSEL	_powerStep
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 02rr                      1- 2102     	CLRR	_powerStep
                                    1- 2103     	.line	387, "main.c"; 	ORANGEOFF();
     003A 1Err                      1- 2104     	BCR	_PORTB,4
                                    1- 2105     	.line	388, "main.c"; 	BLUEOFF();
     003B 1Err                      1- 2106     	BCR	_PORTB,5
                                    1- 2107     	.line	389, "main.c"; 	REDOFF();
     003C 1Crr                      1- 2108     	BCR	_PORTA,0
                                    1- 2109     	.line	390, "main.c"; 	REDON();
     003D 18rr                      1- 2110     	BSR	_PORTA,0
                                    1- 2111     	MGOTO	_00264_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
     003F                           1- 2112     _00254_DS_:
                                    1- 2113     	.line	392, "main.c"; 	else if(startStep == 8)
                                    1- 2114     	BANKSEL	_startStep
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 01rr                      1- 2115     	MOVR	_startStep,W
     0041 2408                      1- 2116     	XORIA	0x08
     0042 0903                      1- 2117     	BTRSS	STATUS,2
                                    1- 2118     	MGOTO	_00251_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2119     	.line	394, "main.c"; 	REDOFF();
     0044 1Crr                      1- 2120     	BCR	_PORTA,0
                                    1- 2121     	.line	395, "main.c"; 	ORANGEOFF();
     0045 1Err                      1- 2122     	BCR	_PORTB,4
                                    1- 2123     	.line	396, "main.c"; 	BLUEOFF();
     0046 1Err                      1- 2124     	BCR	_PORTB,5
                                    1- 2125     	.line	397, "main.c"; 	REDOFF();
     0047 1Crr                      1- 2126     	BCR	_PORTA,0
                                    1- 2127     	.line	398, "main.c"; 	ORANGEON();
     0048 1Arr                      1- 2128     	BSR	_PORTB,4
                                    1- 2129     	MGOTO	_00264_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
     004A                           1- 2130     _00251_DS_:
                                    1- 2131     	.line	400, "main.c"; 	else if(startStep == 9)
                                    1- 2132     	BANKSEL	_startStep
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1- 2133     	MOVR	_startStep,W
     004C 2409                      1- 2134     	XORIA	0x09
     004D 0903                      1- 2135     	BTRSS	STATUS,2
                                    1- 2136     	MGOTO	_00264_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2137     	.line	402, "main.c"; 	ORANGEOFF();
     004F 1Err                      1- 2138     	BCR	_PORTB,4
                                    1- 2139     	.line	403, "main.c"; 	BLUEOFF();
     0050 1Err                      1- 2140     	BCR	_PORTB,5
                                    1- 2141     	.line	404, "main.c"; 	REDOFF();
     0051 1Crr                      1- 2142     	BCR	_PORTA,0
                                    1- 2143     	.line	405, "main.c"; 	BLUEON();
     0052 1Arr                      1- 2144     	BSR	_PORTB,5
     0053                           1- 2145     _00264_DS_:
                                    1- 2146     	.line	408, "main.c"; 	if(++startStep > 10)
                                    1- 2147     	BANKSEL	_startStep
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 05rr                      1- 2148     	INCR	_startStep,F
                                    1- 2149     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2150     ;;unsigned compare: left >= lit (0xB=11), size=1
     0055 210B                      1- 2151     	MOVIA	0x0b
     0056 04rr                      1- 2152     	SUBAR	_startStep,W
     0057 0803                      1- 2153     	BTRSS	STATUS,0
                                    1- 2154     	MGOTO	_00269_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2155     	.line	410, "main.c"; 	ORANGEOFF();
     0059 1Err                      1- 2156     	BCR	_PORTB,4
                                    1- 2157     	.line	411, "main.c"; 	BLUEOFF();
     005A 1Err                      1- 2158     	BCR	_PORTB,5
                                    1- 2159     	.line	412, "main.c"; 	REDOFF();
     005B 1Crr                      1- 2160     	BCR	_PORTA,0
                                    1- 2161     	.line	413, "main.c"; 	startStep = 0;
     005C 02rr                      1- 2162     	CLRR	_startStep
                                    1- 2163     	.line	414, "main.c"; 	startLedFlag = 0;
                                    1- 2164     	BANKSEL	_Status
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 1Drr                      1- 2165     	BCR	_Status,2
                                    1- 2166     	.line	415, "main.c"; 	modeStep = 1;
     005F 2101                      1- 2167     	MOVIA	0x01
                                    1- 2168     	BANKSEL	_modeStep
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 00rr                      1- 2169     	MOVAR	_modeStep
                                    1- 2170     	.line	416, "main.c"; 	powerStep = 1;
                                    1- 2171     	BANKSEL	_powerStep
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 00rr                      1- 2172     	MOVAR	_powerStep
                                    1- 2173     	.line	417, "main.c"; 	timeCount = 0;
                                    1- 2174     	BANKSEL	_timeCount
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 02rr                      1- 2175     	CLRR	_timeCount
     0066                           1- 2176     _00269_DS_:
                                    1- 2177     	.line	420, "main.c"; 	}
                                    1- 2178     	RETURN	
     0066 0010                      3-   40 m1      ret
                                    1- 2179     ; exit point of _startCtr
                                    1- 2181     ;***
                                    1- 2182     ;  pBlock Stats: dbName = C
                                    1- 2183     ;***
                                    1- 2184     ;has an exit
                                    1- 2185     ;functions called:
                                    1- 2186     ;   _checkTouchAD
                                    1- 2187     ;   _PWM1Start
                                    1- 2188     ;   _checkHotAD
                                    1- 2189     ;   __mulint
                                    1- 2190     ;   __divuint
                                    1- 2191     ;   _checkTouchAD
                                    1- 2192     ;   _PWM1Start
                                    1- 2193     ;   _checkHotAD
                                    1- 2194     ;   __mulint
                                    1- 2195     ;   __divuint
                                    1- 2196     ;5 compiler assigned registers:
                                    1- 2197     ;   STK02
                                    1- 2198     ;   STK01
                                    1- 2199     ;   STK00
                                    1- 2200     ;   r0x1048
                                    1- 2201     ;   r0x1049
                                    1- 2202     ;; Starting pCode block
                                    1- 2203     .segment "code"; module=main, function=_workCtr
     0000                           1- 2205     _workCtr:
                                    1- 2206     ; 2 exit points
                                    1- 2207     ;;unsigned compare: left < lit (0x5=5), size=1
                                    1- 2208     	.line	303, "main.c"; 	if(checkTime < 5)
     0000 2105                      1- 2209     	MOVIA	0x05
                                    1- 2210     	BANKSEL	_checkTime
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2211     	SUBAR	_checkTime,W
     0003 0803                      1- 2212     	BTRSS	STATUS,0
                                    1- 2213     	.line	304, "main.c"; 	checkTouchAD();
                                    1- 2214     	MCALL	_checkTouchAD
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2215     	.line	305, "main.c"; 	if(R_AIN3_DATA < 1000)
     0005 2103                      1- 2216     	MOVIA	0x03
                                    1- 2217     	BANKSEL	_R_AIN3_DATA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1- 2218     	SUBAR	(_R_AIN3_DATA + 1),W
     0008 0903                      1- 2219     	BTRSS	STATUS,2
                                    1- 2220     	MGOTO	_00240_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
     000A 21E8                      1- 2221     	MOVIA	0xe8
     000B 04rr                      1- 2222     	SUBAR	_R_AIN3_DATA,W
     000C                           1- 2223     _00240_DS_:
     000C 0C03                      1- 2224     	BTRSC	STATUS,0
                                    1- 2225     	MGOTO	_00197_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2226     	.line	308, "main.c"; 	T1CR1 = C_TMR1_En;
     000E 2101                      1- 2227     	MOVIA	0x01
     000F 00rr                      1- 2228     	SFUN	_T1CR1
                                    1- 2229     	.line	309, "main.c"; 	HOTOFF();
     0010 1Drr                      1- 2230     	BCR	_PORTB,2
                                    1- 2231     	MGOTO	_00198_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
     0012                           1- 2232     _00197_DS_:
                                    1- 2233     	.line	313, "main.c"; 	PWM1Start();
                                    1- 2234     	MCALL	_PWM1Start
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2235     	.line	314, "main.c"; 	if(modeStep == 2)
                                    1- 2236     	BANKSEL	_modeStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2237     	MOVR	_modeStep,W
     0015 2402                      1- 2238     	XORIA	0x02
     0016 0903                      1- 2239     	BTRSS	STATUS,2
                                    1- 2240     	MGOTO	_00198_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2241     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2242     ;;unsigned compare: left >= lit (0x1D=29), size=1
                                    1- 2243     	.line	316, "main.c"; 	if(checkTime > 28)
     0018 211D                      1- 2244     	MOVIA	0x1d
                                    1- 2245     	BANKSEL	_checkTime
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 04rr                      1- 2246     	SUBAR	_checkTime,W
     001B 0C03                      1- 2247     	BTRSC	STATUS,0
                                    1- 2248     	.line	317, "main.c"; 	checkHotAD();
                                    1- 2249     	MCALL	_checkHotAD
     001C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2250     	.line	318, "main.c"; 	if(R_AIN3_DATA > (R_VDD_DATA*4/3))
                                    1- 2251     	BANKSEL	_R_VDD_DATA
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 2252     	MOVR	_R_VDD_DATA,W
     001F 00rr                      1- 2253     	MOVAR	STK02
     0020 01rr                      1- 2254     	MOVR	(_R_VDD_DATA + 1),W
     0021 00rr                      1- 2255     	MOVAR	STK01
     0022 2104                      1- 2256     	MOVIA	0x04
     0023 00rr                      1- 2257     	MOVAR	STK00
     0024 2100                      1- 2258     	MOVIA	0x00
                                    1- 2259     	MCALL	__mulint
     0025 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2260     	BANKSEL	r0x1048
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 00rr                      1- 2261     	MOVAR	r0x1048
     0028 01rr                      1- 2262     	MOVR	STK00,W
                                    1- 2263     	BANKSEL	r0x1049
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 2264     	MOVAR	r0x1049
     002B 2103                      1- 2265     	MOVIA	0x03
     002C 00rr                      1- 2266     	MOVAR	STK02
     002D 2100                      1- 2267     	MOVIA	0x00
     002E 00rr                      1- 2268     	MOVAR	STK01
     002F 01rr                      1- 2269     	MOVR	r0x1049,W
     0030 00rr                      1- 2270     	MOVAR	STK00
                                    1- 2271     	BANKSEL	r0x1048
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1- 2272     	MOVR	r0x1048,W
                                    1- 2273     	MCALL	__divuint
     0033 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2274     	BANKSEL	r0x1048
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 2275     	MOVAR	r0x1048
     0036 01rr                      1- 2276     	MOVR	STK00,W
                                    1- 2277     	BANKSEL	r0x1049
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 00rr                      1- 2278     	MOVAR	r0x1049
                                    1- 2279     	BANKSEL	_R_AIN3_DATA
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1- 2280     	MOVR	(_R_AIN3_DATA + 1),W
                                    1- 2281     	BANKSEL	r0x1048
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 04rr                      1- 2282     	SUBAR	r0x1048,W
     003D 0903                      1- 2283     	BTRSS	STATUS,2
                                    1- 2284     	MGOTO	_00242_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2285     	BANKSEL	_R_AIN3_DATA
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 01rr                      1- 2286     	MOVR	_R_AIN3_DATA,W
                                    1- 2287     	BANKSEL	r0x1049
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 04rr                      1- 2288     	SUBAR	r0x1049,W
     0043                           1- 2289     _00242_DS_:
     0043 0C03                      1- 2290     	BTRSC	STATUS,0
                                    1- 2291     	MGOTO	_00192_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2292     	.line	321, "main.c"; 	HOTOFF();
     0045 1Drr                      1- 2293     	BCR	_PORTB,2
                                    1- 2294     	MGOTO	_00198_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
     0047                           1- 2295     _00192_DS_:
                                    1- 2296     	.line	325, "main.c"; 	HOTON();
     0047 19rr                      1- 2297     	BSR	_PORTB,2
                                    1- 2298     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2299     ;;unsigned compare: left >= lit (0x3E9=1001), size=2
     0048                           1- 2300     _00198_DS_:
                                    1- 2301     	.line	329, "main.c"; 	if(R_AIN3_DATA > 1000)
     0048 2103                      1- 2302     	MOVIA	0x03
                                    1- 2303     	BANKSEL	_R_AIN3_DATA
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 04rr                      1- 2304     	SUBAR	(_R_AIN3_DATA + 1),W
     004B 0903                      1- 2305     	BTRSS	STATUS,2
                                    1- 2306     	MGOTO	_00243_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
     004D 21E9                      1- 2307     	MOVIA	0xe9
     004E 04rr                      1- 2308     	SUBAR	_R_AIN3_DATA,W
     004F                           1- 2309     _00243_DS_:
     004F 0803                      1- 2310     	BTRSS	STATUS,0
                                    1- 2311     	MGOTO	_00208_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2312     	.line	331, "main.c"; 	if(modeStep == 1)
                                    1- 2313     	BANKSEL	_modeStep
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 01rr                      1- 2314     	MOVR	_modeStep,W
     0053 2401                      1- 2315     	XORIA	0x01
     0054 0903                      1- 2316     	BTRSS	STATUS,2
                                    1- 2317     	MGOTO	_00205_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2318     	.line	333, "main.c"; 	BLUEON();
     0056 1Arr                      1- 2319     	BSR	_PORTB,5
                                    1- 2320     	.line	334, "main.c"; 	ORANGEOFF();
     0057 1Err                      1- 2321     	BCR	_PORTB,4
                                    1- 2322     	.line	335, "main.c"; 	REDOFF();
     0058 1Crr                      1- 2323     	BCR	_PORTA,0
                                    1- 2324     	MGOTO	_00210_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
     005A                           1- 2325     _00205_DS_:
                                    1- 2326     	.line	337, "main.c"; 	else if(modeStep == 2)
                                    1- 2327     	BANKSEL	_modeStep
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 01rr                      1- 2328     	MOVR	_modeStep,W
     005C 2402                      1- 2329     	XORIA	0x02
     005D 0903                      1- 2330     	BTRSS	STATUS,2
                                    1- 2331     	MGOTO	_00202_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2332     	.line	339, "main.c"; 	BLUEOFF();
     005F 1Err                      1- 2333     	BCR	_PORTB,5
                                    1- 2334     	.line	340, "main.c"; 	ORANGEON();
     0060 1Arr                      1- 2335     	BSR	_PORTB,4
                                    1- 2336     	.line	341, "main.c"; 	REDOFF();
     0061 1Crr                      1- 2337     	BCR	_PORTA,0
                                    1- 2338     	MGOTO	_00210_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2339     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2340     ;;unsigned compare: left >= lit (0x3=3), size=1
     0063                           1- 2341     _00202_DS_:
                                    1- 2342     	.line	343, "main.c"; 	else if(modeStep > 2)
     0063 2103                      1- 2343     	MOVIA	0x03
                                    1- 2344     	BANKSEL	_modeStep
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 04rr                      1- 2345     	SUBAR	_modeStep,W
     0066 0803                      1- 2346     	BTRSS	STATUS,0
                                    1- 2347     	MGOTO	_00210_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2348     	.line	345, "main.c"; 	BLUEOFF();
     0068 1Err                      1- 2349     	BCR	_PORTB,5
                                    1- 2350     	.line	346, "main.c"; 	REDON();
     0069 18rr                      1- 2351     	BSR	_PORTA,0
                                    1- 2352     	.line	347, "main.c"; 	ORANGEOFF();
     006A 1Err                      1- 2353     	BCR	_PORTB,4
                                    1- 2354     	MGOTO	_00210_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
     006C                           1- 2355     _00208_DS_:
                                    1- 2356     	.line	352, "main.c"; 	BLUEOFF();
     006C 1Err                      1- 2357     	BCR	_PORTB,5
                                    1- 2358     	.line	353, "main.c"; 	REDOFF();
     006D 1Crr                      1- 2359     	BCR	_PORTA,0
                                    1- 2360     	.line	354, "main.c"; 	ORANGEOFF();
     006E 1Err                      1- 2361     	BCR	_PORTB,4
     006F                           1- 2362     _00210_DS_:
                                    1- 2363     	.line	356, "main.c"; 	}
                                    1- 2364     	RETURN	
     006F 0010                      3-   40 m1      ret
                                    1- 2365     ; exit point of _workCtr
                                    1- 2367     ;***
                                    1- 2368     ;  pBlock Stats: dbName = C
                                    1- 2369     ;***
                                    1- 2370     ;; Starting pCode block
                                    1- 2371     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2373     _chrgCtr:
                                    1- 2374     ; 0 exit points
                                    1- 2375     	.line	279, "main.c"; 	if(PORTA & 0x20)
     0000 0Arr                      1- 2376     	BTRSS	_PORTA,5
                                    1- 2377     	MGOTO	_00180_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2378     	.line	281, "main.c"; 	chrgFlag = 0;
                                    1- 2379     	BANKSEL	_Status
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 1Drr                      1- 2380     	BCR	_Status,3
                                    1- 2381     	MGOTO	_00182_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
     0005                           1- 2382     _00180_DS_:
                                    1- 2383     	.line	285, "main.c"; 	chrgFlag = 1;//充电中
                                    1- 2384     	BANKSEL	_Status
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 19rr                      1- 2385     	BSR	_Status,3
                                    1- 2386     	.line	286, "main.c"; 	modeStep = 0;
                                    1- 2387     	BANKSEL	_modeStep
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1- 2388     	CLRR	_modeStep
                                    1- 2389     	.line	287, "main.c"; 	powerStep = 0;
                                    1- 2390     	BANKSEL	_powerStep
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 02rr                      1- 2391     	CLRR	_powerStep
                                    1- 2392     	.line	288, "main.c"; 	if(++timeCount > 50)
                                    1- 2393     	BANKSEL	_timeCount
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 2394     	INCR	_timeCount,F
                                    1- 2395     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2396     ;;unsigned compare: left >= lit (0x33=51), size=1
     000D 2133                      1- 2397     	MOVIA	0x33
     000E 04rr                      1- 2398     	SUBAR	_timeCount,W
     000F 0803                      1- 2399     	BTRSS	STATUS,0
                                    1- 2400     	MGOTO	_00182_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2401     	.line	290, "main.c"; 	timeCount = 0;
     0011 02rr                      1- 2402     	CLRR	_timeCount
                                    1- 2403     	.line	292, "main.c"; 	if(++chrgLedStep > 2)
                                    1- 2404     	BANKSEL	_chrgLedStep
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 05rr                      1- 2405     	INCR	_chrgLedStep,F
                                    1- 2406     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2407     ;;unsigned compare: left >= lit (0x3=3), size=1
     0014 2103                      1- 2408     	MOVIA	0x03
     0015 04rr                      1- 2409     	SUBAR	_chrgLedStep,W
     0016 0C03                      1- 2410     	BTRSC	STATUS,0
                                    1- 2411     	.line	294, "main.c"; 	chrgLedStep = 0;
     0017 02rr                      1- 2412     	CLRR	_chrgLedStep
     0018                           1- 2413     _00182_DS_:
                                    1- 2414     	.line	298, "main.c"; 	}
                                    1- 2415     	RETURN	
     0018 0010                      3-   40 m1      ret
                                    1- 2417     ;***
                                    1- 2418     ;  pBlock Stats: dbName = C
                                    1- 2419     ;***
                                    1- 2420     ;has an exit
                                    1- 2421     ;functions called:
                                    1- 2422     ;   _delay
                                    1- 2423     ;   _LedInput
                                    1- 2424     ;   _delay
                                    1- 2425     ;   _LedInput
                                    1- 2426     ;1 compiler assigned register :
                                    1- 2427     ;   r0x1033
                                    1- 2428     ;; Starting pCode block
                                    1- 2429     .segment "code"; module=main, function=_POWERLOW
     0000                           1- 2431     _POWERLOW:
                                    1- 2432     ; 2 exit points
                                    1- 2433     	.line	268, "main.c"; 	LEDL0OUT();
     0000 001r                      1- 2434     	IOSTR	_IOSTA
                                    1- 2435     	BANKSEL	r0x1033
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2436     	MOVAR	r0x1033
     0003 1Frr                      1- 2437     	BCR	r0x1033,6
     0004 01rr                      1- 2438     	MOVR	r0x1033,W
     0005 000r                      1- 2439     	IOST	_IOSTA
                                    1- 2440     	.line	269, "main.c"; 	LEDW0OUT();
     0006 001r                      1- 2441     	IOSTR	_IOSTB
     0007 00rr                      1- 2442     	MOVAR	r0x1033
     0008 1Crr                      1- 2443     	BCR	r0x1033,0
     0009 01rr                      1- 2444     	MOVR	r0x1033,W
     000A 000r                      1- 2445     	IOST	_IOSTB
                                    1- 2446     	.line	270, "main.c"; 	LEDL0ON();
     000B 1Brr                      1- 2447     	BSR	_PORTA,6
                                    1- 2448     	.line	271, "main.c"; 	LEDW0OFF();
     000C 1Crr                      1- 2449     	BCR	_PORTB,0
                                    1- 2450     	.line	272, "main.c"; 	delay(100);
     000D 2164                      1- 2451     	MOVIA	0x64
                                    1- 2452     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2453     	.line	273, "main.c"; 	LedInput();
                                    1- 2454     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2455     	.line	274, "main.c"; 	}
                                    1- 2456     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2457     ; exit point of _POWERLOW
                                    1- 2459     ;***
                                    1- 2460     ;  pBlock Stats: dbName = C
                                    1- 2461     ;***
                                    1- 2462     ;has an exit
                                    1- 2463     ;functions called:
                                    1- 2464     ;   _delay
                                    1- 2465     ;   _LedInput
                                    1- 2466     ;   _delay
                                    1- 2467     ;   _LedInput
                                    1- 2468     ;1 compiler assigned register :
                                    1- 2469     ;   r0x1033
                                    1- 2470     ;; Starting pCode block
                                    1- 2471     .segment "code"; module=main, function=_POWERMID
     0000                           1- 2473     _POWERMID:
                                    1- 2474     ; 2 exit points
                                    1- 2475     	.line	258, "main.c"; 	LEDL1OUT();
     0000 001r                      1- 2476     	IOSTR	_IOSTA
                                    1- 2477     	BANKSEL	r0x1033
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2478     	MOVAR	r0x1033
     0003 1Frr                      1- 2479     	BCR	r0x1033,7
     0004 01rr                      1- 2480     	MOVR	r0x1033,W
     0005 000r                      1- 2481     	IOST	_IOSTA
                                    1- 2482     	.line	259, "main.c"; 	LEDW0OUT();
     0006 001r                      1- 2483     	IOSTR	_IOSTB
     0007 00rr                      1- 2484     	MOVAR	r0x1033
     0008 1Crr                      1- 2485     	BCR	r0x1033,0
     0009 01rr                      1- 2486     	MOVR	r0x1033,W
     000A 000r                      1- 2487     	IOST	_IOSTB
                                    1- 2488     	.line	260, "main.c"; 	LEDL1ON();
     000B 1Brr                      1- 2489     	BSR	_PORTA,7
                                    1- 2490     	.line	261, "main.c"; 	LEDW0OFF();
     000C 1Crr                      1- 2491     	BCR	_PORTB,0
                                    1- 2492     	.line	262, "main.c"; 	delay(100);
     000D 2164                      1- 2493     	MOVIA	0x64
                                    1- 2494     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2495     	.line	263, "main.c"; 	LedInput();
                                    1- 2496     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2497     	.line	264, "main.c"; 	}
                                    1- 2498     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2499     ; exit point of _POWERMID
                                    1- 2501     ;***
                                    1- 2502     ;  pBlock Stats: dbName = C
                                    1- 2503     ;***
                                    1- 2504     ;has an exit
                                    1- 2505     ;functions called:
                                    1- 2506     ;   _delay
                                    1- 2507     ;   _LedInput
                                    1- 2508     ;   _delay
                                    1- 2509     ;   _LedInput
                                    1- 2510     ;1 compiler assigned register :
                                    1- 2511     ;   r0x1033
                                    1- 2512     ;; Starting pCode block
                                    1- 2513     .segment "code"; module=main, function=_POWERHIGHT
     0000                           1- 2515     _POWERHIGHT:
                                    1- 2516     ; 2 exit points
                                    1- 2517     	.line	248, "main.c"; 	LEDL2OUT();
     0000 001r                      1- 2518     	IOSTR	_IOSTB
                                    1- 2519     	BANKSEL	r0x1033
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2520     	MOVAR	r0x1033
     0003 1Crr                      1- 2521     	BCR	r0x1033,1
     0004 01rr                      1- 2522     	MOVR	r0x1033,W
     0005 000r                      1- 2523     	IOST	_IOSTB
                                    1- 2524     	.line	249, "main.c"; 	LEDW0OUT();
     0006 001r                      1- 2525     	IOSTR	_IOSTB
     0007 00rr                      1- 2526     	MOVAR	r0x1033
     0008 1Crr                      1- 2527     	BCR	r0x1033,0
     0009 01rr                      1- 2528     	MOVR	r0x1033,W
     000A 000r                      1- 2529     	IOST	_IOSTB
                                    1- 2530     	.line	250, "main.c"; 	LEDL2ON();
     000B 18rr                      1- 2531     	BSR	_PORTB,1
                                    1- 2532     	.line	251, "main.c"; 	LEDW0OFF();
     000C 1Crr                      1- 2533     	BCR	_PORTB,0
                                    1- 2534     	.line	252, "main.c"; 	delay(100);
     000D 2164                      1- 2535     	MOVIA	0x64
                                    1- 2536     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2537     	.line	253, "main.c"; 	LedInput();
                                    1- 2538     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2539     	.line	254, "main.c"; 	}
                                    1- 2540     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2541     ; exit point of _POWERHIGHT
                                    1- 2543     ;***
                                    1- 2544     ;  pBlock Stats: dbName = C
                                    1- 2545     ;***
                                    1- 2546     ;has an exit
                                    1- 2547     ;functions called:
                                    1- 2548     ;   _delay
                                    1- 2549     ;   _LedInput
                                    1- 2550     ;   _delay
                                    1- 2551     ;   _LedInput
                                    1- 2552     ;1 compiler assigned register :
                                    1- 2553     ;   r0x1033
                                    1- 2554     ;; Starting pCode block
                                    1- 2555     .segment "code"; module=main, function=_BATLOW
     0000                           1- 2557     _BATLOW:
                                    1- 2558     ; 2 exit points
                                    1- 2559     	.line	238, "main.c"; 	LEDL0OUT();
     0000 001r                      1- 2560     	IOSTR	_IOSTA
                                    1- 2561     	BANKSEL	r0x1033
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2562     	MOVAR	r0x1033
     0003 1Frr                      1- 2563     	BCR	r0x1033,6
     0004 01rr                      1- 2564     	MOVR	r0x1033,W
     0005 000r                      1- 2565     	IOST	_IOSTA
                                    1- 2566     	.line	239, "main.c"; 	LEDW1OUT();
     0006 001r                      1- 2567     	IOSTR	_IOSTA
     0007 00rr                      1- 2568     	MOVAR	r0x1033
     0008 1Drr                      1- 2569     	BCR	r0x1033,2
     0009 01rr                      1- 2570     	MOVR	r0x1033,W
     000A 000r                      1- 2571     	IOST	_IOSTA
                                    1- 2572     	.line	240, "main.c"; 	LEDL0ON();
     000B 1Brr                      1- 2573     	BSR	_PORTA,6
                                    1- 2574     	.line	241, "main.c"; 	LEDW1OFF();
     000C 1Drr                      1- 2575     	BCR	_PORTA,2
                                    1- 2576     	.line	242, "main.c"; 	delay(100);
     000D 2164                      1- 2577     	MOVIA	0x64
                                    1- 2578     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2579     	.line	243, "main.c"; 	LedInput();
                                    1- 2580     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2581     	.line	244, "main.c"; 	}
                                    1- 2582     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2583     ; exit point of _BATLOW
                                    1- 2585     ;***
                                    1- 2586     ;  pBlock Stats: dbName = C
                                    1- 2587     ;***
                                    1- 2588     ;has an exit
                                    1- 2589     ;functions called:
                                    1- 2590     ;   _delay
                                    1- 2591     ;   _LedInput
                                    1- 2592     ;   _delay
                                    1- 2593     ;   _LedInput
                                    1- 2594     ;1 compiler assigned register :
                                    1- 2595     ;   r0x1033
                                    1- 2596     ;; Starting pCode block
                                    1- 2597     .segment "code"; module=main, function=_BATHIGHT
     0000                           1- 2599     _BATHIGHT:
                                    1- 2600     ; 2 exit points
                                    1- 2601     	.line	228, "main.c"; 	LEDL1OUT();
     0000 001r                      1- 2602     	IOSTR	_IOSTA
                                    1- 2603     	BANKSEL	r0x1033
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2604     	MOVAR	r0x1033
     0003 1Frr                      1- 2605     	BCR	r0x1033,7
     0004 01rr                      1- 2606     	MOVR	r0x1033,W
     0005 000r                      1- 2607     	IOST	_IOSTA
                                    1- 2608     	.line	229, "main.c"; 	LEDW1OUT();
     0006 001r                      1- 2609     	IOSTR	_IOSTA
     0007 00rr                      1- 2610     	MOVAR	r0x1033
     0008 1Drr                      1- 2611     	BCR	r0x1033,2
     0009 01rr                      1- 2612     	MOVR	r0x1033,W
     000A 000r                      1- 2613     	IOST	_IOSTA
                                    1- 2614     	.line	230, "main.c"; 	LEDL1ON();
     000B 1Brr                      1- 2615     	BSR	_PORTA,7
                                    1- 2616     	.line	231, "main.c"; 	LEDW1OFF();
     000C 1Drr                      1- 2617     	BCR	_PORTA,2
                                    1- 2618     	.line	232, "main.c"; 	delay(100);
     000D 2164                      1- 2619     	MOVIA	0x64
                                    1- 2620     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2621     	.line	233, "main.c"; 	LedInput();
                                    1- 2622     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2623     	.line	234, "main.c"; 	}
                                    1- 2624     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2625     ; exit point of _BATHIGHT
                                    1- 2627     ;***
                                    1- 2628     ;  pBlock Stats: dbName = C
                                    1- 2629     ;***
                                    1- 2630     ;has an exit
                                    1- 2631     ;functions called:
                                    1- 2632     ;   _delay
                                    1- 2633     ;   _LedInput
                                    1- 2634     ;   _delay
                                    1- 2635     ;   _LedInput
                                    1- 2636     ;1 compiler assigned register :
                                    1- 2637     ;   r0x1033
                                    1- 2638     ;; Starting pCode block
                                    1- 2639     .segment "code"; module=main, function=_LEDMODE1
     0000                           1- 2641     _LEDMODE1:
                                    1- 2642     ; 2 exit points
                                    1- 2643     	.line	218, "main.c"; 	LEDL2OUT();
     0000 001r                      1- 2644     	IOSTR	_IOSTB
                                    1- 2645     	BANKSEL	r0x1033
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2646     	MOVAR	r0x1033
     0003 1Crr                      1- 2647     	BCR	r0x1033,1
     0004 01rr                      1- 2648     	MOVR	r0x1033,W
     0005 000r                      1- 2649     	IOST	_IOSTB
                                    1- 2650     	.line	219, "main.c"; 	LEDW1OUT();
     0006 001r                      1- 2651     	IOSTR	_IOSTA
     0007 00rr                      1- 2652     	MOVAR	r0x1033
     0008 1Drr                      1- 2653     	BCR	r0x1033,2
     0009 01rr                      1- 2654     	MOVR	r0x1033,W
     000A 000r                      1- 2655     	IOST	_IOSTA
                                    1- 2656     	.line	220, "main.c"; 	LEDL2ON();
     000B 18rr                      1- 2657     	BSR	_PORTB,1
                                    1- 2658     	.line	221, "main.c"; 	LEDW1OFF();
     000C 1Drr                      1- 2659     	BCR	_PORTA,2
                                    1- 2660     	.line	222, "main.c"; 	delay(100);
     000D 2164                      1- 2661     	MOVIA	0x64
                                    1- 2662     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2663     	.line	223, "main.c"; 	LedInput();
                                    1- 2664     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2665     	.line	224, "main.c"; 	}
                                    1- 2666     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2667     ; exit point of _LEDMODE1
                                    1- 2669     ;***
                                    1- 2670     ;  pBlock Stats: dbName = C
                                    1- 2671     ;***
                                    1- 2672     ;has an exit
                                    1- 2673     ;functions called:
                                    1- 2674     ;   _delay
                                    1- 2675     ;   _LedInput
                                    1- 2676     ;   _delay
                                    1- 2677     ;   _LedInput
                                    1- 2678     ;1 compiler assigned register :
                                    1- 2679     ;   r0x1033
                                    1- 2680     ;; Starting pCode block
                                    1- 2681     .segment "code"; module=main, function=_LEDMODE2
     0000                           1- 2683     _LEDMODE2:
                                    1- 2684     ; 2 exit points
                                    1- 2685     	.line	208, "main.c"; 	LEDW0OUT();
     0000 001r                      1- 2686     	IOSTR	_IOSTB
                                    1- 2687     	BANKSEL	r0x1033
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2688     	MOVAR	r0x1033
     0003 1Crr                      1- 2689     	BCR	r0x1033,0
     0004 01rr                      1- 2690     	MOVR	r0x1033,W
     0005 000r                      1- 2691     	IOST	_IOSTB
                                    1- 2692     	.line	209, "main.c"; 	LEDL0OUT();
     0006 001r                      1- 2693     	IOSTR	_IOSTA
     0007 00rr                      1- 2694     	MOVAR	r0x1033
     0008 1Frr                      1- 2695     	BCR	r0x1033,6
     0009 01rr                      1- 2696     	MOVR	r0x1033,W
     000A 000r                      1- 2697     	IOST	_IOSTA
                                    1- 2698     	.line	210, "main.c"; 	LEDW0ON();
     000B 18rr                      1- 2699     	BSR	_PORTB,0
                                    1- 2700     	.line	211, "main.c"; 	LEDL0OFF();
     000C 1Frr                      1- 2701     	BCR	_PORTA,6
                                    1- 2702     	.line	212, "main.c"; 	delay(100);
     000D 2164                      1- 2703     	MOVIA	0x64
                                    1- 2704     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2705     	.line	213, "main.c"; 	LedInput();
                                    1- 2706     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2707     	.line	214, "main.c"; 	}
                                    1- 2708     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2709     ; exit point of _LEDMODE2
                                    1- 2711     ;***
                                    1- 2712     ;  pBlock Stats: dbName = C
                                    1- 2713     ;***
                                    1- 2714     ;has an exit
                                    1- 2715     ;functions called:
                                    1- 2716     ;   _delay
                                    1- 2717     ;   _LedInput
                                    1- 2718     ;   _delay
                                    1- 2719     ;   _LedInput
                                    1- 2720     ;1 compiler assigned register :
                                    1- 2721     ;   r0x1033
                                    1- 2722     ;; Starting pCode block
                                    1- 2723     .segment "code"; module=main, function=_LEDMODE3
     0000                           1- 2725     _LEDMODE3:
                                    1- 2726     ; 2 exit points
                                    1- 2727     	.line	198, "main.c"; 	LEDW0OUT();
     0000 001r                      1- 2728     	IOSTR	_IOSTB
                                    1- 2729     	BANKSEL	r0x1033
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2730     	MOVAR	r0x1033
     0003 1Crr                      1- 2731     	BCR	r0x1033,0
     0004 01rr                      1- 2732     	MOVR	r0x1033,W
     0005 000r                      1- 2733     	IOST	_IOSTB
                                    1- 2734     	.line	199, "main.c"; 	LEDL1OUT();
     0006 001r                      1- 2735     	IOSTR	_IOSTA
     0007 00rr                      1- 2736     	MOVAR	r0x1033
     0008 1Frr                      1- 2737     	BCR	r0x1033,7
     0009 01rr                      1- 2738     	MOVR	r0x1033,W
     000A 000r                      1- 2739     	IOST	_IOSTA
                                    1- 2740     	.line	200, "main.c"; 	LEDW0ON();
     000B 18rr                      1- 2741     	BSR	_PORTB,0
                                    1- 2742     	.line	201, "main.c"; 	LEDL1OFF();
     000C 1Frr                      1- 2743     	BCR	_PORTA,7
                                    1- 2744     	.line	202, "main.c"; 	delay(100);
     000D 2164                      1- 2745     	MOVIA	0x64
                                    1- 2746     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2747     	.line	203, "main.c"; 	LedInput();
                                    1- 2748     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2749     	.line	204, "main.c"; 	}
                                    1- 2750     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2751     ; exit point of _LEDMODE3
                                    1- 2753     ;***
                                    1- 2754     ;  pBlock Stats: dbName = C
                                    1- 2755     ;***
                                    1- 2756     ;has an exit
                                    1- 2757     ;functions called:
                                    1- 2758     ;   _delay
                                    1- 2759     ;   _LedInput
                                    1- 2760     ;   _delay
                                    1- 2761     ;   _LedInput
                                    1- 2762     ;1 compiler assigned register :
                                    1- 2763     ;   r0x1033
                                    1- 2764     ;; Starting pCode block
                                    1- 2765     .segment "code"; module=main, function=_LEDMODE4
     0000                           1- 2767     _LEDMODE4:
                                    1- 2768     ; 2 exit points
                                    1- 2769     	.line	188, "main.c"; 	LEDW1OUT();
     0000 001r                      1- 2770     	IOSTR	_IOSTA
                                    1- 2771     	BANKSEL	r0x1033
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2772     	MOVAR	r0x1033
     0003 1Drr                      1- 2773     	BCR	r0x1033,2
     0004 01rr                      1- 2774     	MOVR	r0x1033,W
     0005 000r                      1- 2775     	IOST	_IOSTA
                                    1- 2776     	.line	189, "main.c"; 	LEDL2OUT();
     0006 001r                      1- 2777     	IOSTR	_IOSTB
     0007 00rr                      1- 2778     	MOVAR	r0x1033
     0008 1Crr                      1- 2779     	BCR	r0x1033,1
     0009 01rr                      1- 2780     	MOVR	r0x1033,W
     000A 000r                      1- 2781     	IOST	_IOSTB
                                    1- 2782     	.line	190, "main.c"; 	LEDW1ON();
     000B 19rr                      1- 2783     	BSR	_PORTA,2
                                    1- 2784     	.line	191, "main.c"; 	LEDL2OFF();
     000C 1Crr                      1- 2785     	BCR	_PORTB,1
                                    1- 2786     	.line	192, "main.c"; 	delay(100);
     000D 2164                      1- 2787     	MOVIA	0x64
                                    1- 2788     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2789     	.line	193, "main.c"; 	LedInput();
                                    1- 2790     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2791     	.line	194, "main.c"; 	}
                                    1- 2792     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2793     ; exit point of _LEDMODE4
                                    1- 2795     ;***
                                    1- 2796     ;  pBlock Stats: dbName = C
                                    1- 2797     ;***
                                    1- 2798     ;has an exit
                                    1- 2799     ;1 compiler assigned register :
                                    1- 2800     ;   r0x1032
                                    1- 2801     ;; Starting pCode block
                                    1- 2802     .segment "code"; module=main, function=_LedInput
     0000                           1- 2804     _LedInput:
                                    1- 2805     ; 2 exit points
                                    1- 2806     	.line	179, "main.c"; 	PORTA &= 0x3B;
     0000 213B                      1- 2807     	MOVIA	0x3b
     0001 10rr                      1- 2808     	ANDAR	_PORTA,F
                                    1- 2809     	.line	180, "main.c"; 	PORTB &= 0xFC;
     0002 21FC                      1- 2810     	MOVIA	0xfc
     0003 10rr                      1- 2811     	ANDAR	_PORTB,F
                                    1- 2812     	.line	181, "main.c"; 	IOSTA |= 0xC4;
     0004 001r                      1- 2813     	IOSTR	_IOSTA
                                    1- 2814     	BANKSEL	r0x1032
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 00rr                      1- 2815     	MOVAR	r0x1032
     0007 21C4                      1- 2816     	MOVIA	0xc4
     0008 11rr                      1- 2817     	IORAR	r0x1032,F
     0009 01rr                      1- 2818     	MOVR	r0x1032,W
     000A 000r                      1- 2819     	IOST	_IOSTA
                                    1- 2820     	.line	182, "main.c"; 	IOSTB |= 0x03;
     000B 001r                      1- 2821     	IOSTR	_IOSTB
     000C 00rr                      1- 2822     	MOVAR	r0x1032
     000D 2103                      1- 2823     	MOVIA	0x03
     000E 11rr                      1- 2824     	IORAR	r0x1032,F
     000F 01rr                      1- 2825     	MOVR	r0x1032,W
     0010 000r                      1- 2826     	IOST	_IOSTB
                                    1- 2827     	.line	183, "main.c"; 	}
                                    1- 2828     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2829     ; exit point of _LedInput
                                    1- 2831     ;***
                                    1- 2832     ;  pBlock Stats: dbName = C
                                    1- 2833     ;***
                                    1- 2834     ;has an exit
                                    1- 2835     ;; Starting pCode block
                                    1- 2836     .segment "code"; module=main, function=_initSys
     0000                           1- 2838     _initSys:
                                    1- 2839     ; 2 exit points
                                    1- 2840     	.line	112, "main.c"; 	DISI();
     0000 0013                      1- 2841     	DISI
                                    1- 2842     	.line	113, "main.c"; 	IOSTA = C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA1_Input;
     0001 213A                      1- 2843     	MOVIA	0x3a
     0002 000r                      1- 2844     	IOST	_IOSTA
                                    1- 2845     	.line	114, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 2846     	CLRA	
     0004 000r                      1- 2847     	IOST	_IOSTB
                                    1- 2848     	.line	115, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2849     	CLRR	_PORTB
                                    1- 2850     	.line	116, "main.c"; 	PORTA = 0x00;
     0006 02rr                      1- 2851     	CLRR	_PORTA
                                    1- 2852     	.line	117, "main.c"; 	APHCON = 0xFF;
     0007 21FF                      1- 2853     	MOVIA	0xff
     0008 000r                      1- 2854     	IOST	_APHCON
                                    1- 2855     	.line	118, "main.c"; 	BPHCON = 0xFF;
     0009 00rr                      1- 2856     	MOVAR	_BPHCON
                                    1- 2857     	.line	120, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000A 2101                      1- 2858     	MOVIA	0x01
     000B 00rr                      1- 2859     	MOVAR	_INTE
                                    1- 2860     	.line	122, "main.c"; 	PCON1 = C_TMR0_Dis;
     000C 0200                      1- 2861     	CLRA	
     000D 000r                      1- 2862     	IOST	_PCON1
                                    1- 2863     	.line	124, "main.c"; 	TMR0 = 55;
     000E 2137                      1- 2864     	MOVIA	0x37
     000F 00rr                      1- 2865     	MOVAR	_TMR0
                                    1- 2866     	.line	125, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0010 0200                      1- 2867     	CLRA	
     0011 0003                      1- 2868     	T0MD	
                                    1- 2869     	.line	127, "main.c"; 	PCON1 = C_TMR0_En;
     0012 2101                      1- 2870     	MOVIA	0x01
     0013 000r                      1- 2871     	IOST	_PCON1
                                    1- 2872     	.line	130, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0014 2188                      1- 2873     	MOVIA	0x88
     0015 00rr                      1- 2874     	MOVAR	_PCON
                                    1- 2875     	.line	133, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0016 2101                      1- 2876     	MOVIA	0x01
     0017 000r                      1- 2877     	IOST	_PCON1
                                    1- 2878     	.line	134, "main.c"; 	ENI();
     0018 0004                      1- 2879     	ENI
                                    1- 2880     	.line	135, "main.c"; 	}
                                    1- 2881     	RETURN	
     0019 0010                      3-   40 m1      ret
                                    1- 2882     ; exit point of _initSys
                                    1- 2885     ;	code size estimation:
                                    1- 2886     ;	 1056+  233 =  1289 instructions ( 3044 byte)
                                    1- 2888     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
