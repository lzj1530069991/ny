
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A054D,c=on
                                    1-    9     	#include "ny8a054d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	__moduint
                                    1-   15     	extern	__divuchar
                                    1-   16     	extern	__divuint
                                    1-   17     	extern	_PORTAbits
                                    1-   18     	extern	_PORTBbits
                                    1-   19     	extern	_PCONbits
                                    1-   20     	extern	_BWUCONbits
                                    1-   21     	extern	_ABPLCONbits
                                    1-   22     	extern	_BPHCONbits
                                    1-   23     	extern	_INTEbits
                                    1-   24     	extern	_INTFbits
                                    1-   25     	extern	_AWUCONbits
                                    1-   26     	extern	_INTEDGbits
                                    1-   27     	extern	_RFCbits
                                    1-   28     	extern	_INTE2bits
                                    1-   29     	extern	_INDF
                                    1-   30     	extern	_TMR0
                                    1-   31     	extern	_PCL
                                    1-   32     	extern	_STATUS
                                    1-   33     	extern	_FSR
                                    1-   34     	extern	_PORTA
                                    1-   35     	extern	_PORTB
                                    1-   36     	extern	_PCON
                                    1-   37     	extern	_BWUCON
                                    1-   38     	extern	_PCHBUF
                                    1-   39     	extern	_ABPLCON
                                    1-   40     	extern	_BPHCON
                                    1-   41     	extern	_INTE
                                    1-   42     	extern	_INTF
                                    1-   43     	extern	_AWUCON
                                    1-   44     	extern	_INTEDG
                                    1-   45     	extern	_TMRH
                                    1-   46     	extern	_RFC
                                    1-   47     	extern	_TM34RH
                                    1-   48     	extern	_INTE2
                                    1-   49     	extern	_TMR1
                                    1-   50     	extern	_T1CR1
                                    1-   51     	extern	_T1CR2
                                    1-   52     	extern	_PWM1DUTY
                                    1-   53     	extern	_PS1CV
                                    1-   54     	extern	_BZ1CR
                                    1-   55     	extern	_IRCR
                                    1-   56     	extern	_TBHP
                                    1-   57     	extern	_TBHD
                                    1-   58     	extern	_P2CR1
                                    1-   59     	extern	_PWM2DUTY
                                    1-   60     	extern	_OSCCR
                                    1-   61     	extern	_TMR3
                                    1-   62     	extern	_T3CR1
                                    1-   63     	extern	_T3CR2
                                    1-   64     	extern	_PWM3DUTY
                                    1-   65     	extern	_PS3CV
                                    1-   66     	extern	_P4CR1
                                    1-   67     	extern	_PWM4DUTY
                                    1-   68     	extern	_P5CR1
                                    1-   69     	extern	_PWM5DUTY
                                    1-   70     	extern	_PWM5RH
                                    1-   71     	extern	_IOSTA
                                    1-   72     	extern	_IOSTB
                                    1-   73     	extern	_APHCON
                                    1-   74     	extern	_PS0CV
                                    1-   75     	extern	_BODCON
                                    1-   76     	extern	_CMPCR
                                    1-   77     	extern	_PCON1
                                    1-   78     	extern	_T0MD
                                    1-   79     	extern	___sdcc_saved_fsr
                                    1-   80     	extern	___sdcc_saved_stk00
                                    1-   81     	extern	___sdcc_saved_stk01
                                    1-   82     	extern	__gptrput1
                                    1-   83     	extern	__mulchar
                                    1-   84     	extern	__mulint
                                    1-   85     	extern	__nyc_ny8_startup
                                    1-   86     ;--------------------------------------------------------
                                    1-   87     ; global declarations
                                    1-   88     ;--------------------------------------------------------
                                    1-   89     	extern	_sendtoLast
                                    1-   90     	extern	_sendRGB
                                    1-   91     	extern	_Delay80us
                                    1-   92     	extern	_work10
                                    1-   93     	extern	_breath3
                                    1-   94     	extern	_work9
                                    1-   95     	extern	_setColor
                                    1-   96     	extern	_workCtr
                                    1-   97     	extern	_delay
                                    1-   98     	extern	_WByte
                                    1-   99     	extern	_WaitTF0
                                    1-  100     	extern	_RByte
                                    1-  101     	extern	_rankNub
                                    1-  102     	extern	_revData
                                    1-  103     	extern	_isr
                                    1-  104     	extern	_main
                                    1-  105     	extern	_Delay10Us
                                    1-  106     	extern	_TM0_FLAG
                                    1-  107     	extern	_REC_FLAG
                                    1-  108     	extern	_SEND_FLAG
                                    1-  109     	extern	_intCount
                                    1-  110     	extern	_IntFlag
                                    1-  111     	extern	_uartFlag
                                    1-  112     	extern	_revList
                                    1-  113     	extern	_data
                                    1-  114     	extern	_recData
                                    1-  115     	extern	_Hcount
                                    1-  116     	extern	_index
                                    1-  117     	extern	_uartTime
                                    1-  118     	extern	_workStep
                                    1-  119     	extern	_colorIndex
                                    1-  120     	extern	_timeCount
                                    1-  121     	extern	_firstFlag
                                    1-  122     	extern	_randNub
                                    1-  123     	extern	_snub
                                    1-  124     	extern	_preColorIndex
                                    1-  125     	extern	_preduty
                                    1-  126     	extern	_offFlag
                                    1-  127     	extern	_preColor
                                    1-  128     	extern	_colorTime
                                    1-  129     	extern	_Rdata
                                    1-  130     	extern	_Gdata
                                    1-  131     	extern	_Bdata
                                    1-  132     	extern	_Rdata1
                                    1-  133     	extern	_Gdata1
                                    1-  134     	extern	_Bdata1
                                    1-  135     	extern	_Rdata2
                                    1-  136     	extern	_Gdata2
                                    1-  137     	extern	_Bdata2
                                    1-  138     	extern	_duty
                                    1-  139     	extern	_ledCount
                                    1-  141     	extern PSAVE
                                    1-  142     	extern SSAVE
                                    1-  143     	extern WSAVE
                                    1-  144     	extern STK12
                                    1-  145     	extern STK11
                                    1-  146     	extern STK10
                                    1-  147     	extern STK09
                                    1-  148     	extern STK08
                                    1-  149     	extern STK07
                                    1-  150     	extern STK06
                                    1-  151     	extern STK05
                                    1-  152     	extern STK04
                                    1-  153     	extern STK03
                                    1-  154     	extern STK02
                                    1-  155     	extern STK01
                                    1-  156     	extern STK00
                                    1-  158     .segment "uninit", 0x20000040
 20000040                           1-  159     PSAVE:
                                    1-  160     	.res 1
 20000041                           1-  161     SSAVE:
                                    1-  162     	.res 1
 20000042                           1-  163     WSAVE:
                                    1-  164     	.res 1
 20000043                           1-  165     STK12:
                                    1-  166     	.res 1
 20000044                           1-  167     STK11:
                                    1-  168     	.res 1
 20000045                           1-  169     STK10:
                                    1-  170     	.res 1
 20000046                           1-  171     STK09:
                                    1-  172     	.res 1
 20000047                           1-  173     STK08:
                                    1-  174     	.res 1
 20000048                           1-  175     STK07:
                                    1-  176     	.res 1
 20000049                           1-  177     STK06:
                                    1-  178     	.res 1
 2000004A                           1-  179     STK05:
                                    1-  180     	.res 1
 2000004B                           1-  181     STK04:
                                    1-  182     	.res 1
 2000004C                           1-  183     STK03:
                                    1-  184     	.res 1
 2000004D                           1-  185     STK02:
                                    1-  186     	.res 1
 2000004E                           1-  187     STK01:
                                    1-  188     	.res 1
 2000004F                           1-  189     STK00:
                                    1-  190     	.res 1
                                    1-  192     ;--------------------------------------------------------
                                    1-  193     ; global definitions
                                    1-  194     ;--------------------------------------------------------
                                    1-  195     .segment "uninit"
     0000                           1-  196     _revList:
                                    1-  197     	.res	5
                                    1-  200     ;--------------------------------------------------------
                                    1-  201     ; absolute symbol definitions
                                    1-  202     ;--------------------------------------------------------
                                    1-  203     ;--------------------------------------------------------
                                    1-  204     ; compiler-defined variables
                                    1-  205     ;--------------------------------------------------------
                                    1-  206     .segment "uninit"
     0000                           1-  207     r0x1046:
                                    1-  208     	.res	1
                                    1-  209     .segment "uninit"
     0000                           1-  210     r0x1047:
                                    1-  211     	.res	1
                                    1-  212     .segment "uninit"
     0000                           1-  213     r0x1048:
                                    1-  214     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     r0x1049:
                                    1-  217     	.res	1
                                    1-  218     .segment "uninit"
     0000                           1-  219     r0x104A:
                                    1-  220     	.res	1
                                    1-  221     .segment "uninit"
     0000                           1-  222     r0x104B:
                                    1-  223     	.res	1
                                    1-  224     .segment "uninit"
     0000                           1-  225     r0x1044:
                                    1-  226     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     r0x1045:
                                    1-  229     	.res	1
                                    1-  230     .segment "uninit"
     0000                           1-  231     r0x103C:
                                    1-  232     	.res	1
                                    1-  233     .segment "uninit"
     0000                           1-  234     r0x103D:
                                    1-  235     	.res	1
                                    1-  236     .segment "uninit"
     0000                           1-  237     r0x103E:
                                    1-  238     	.res	1
                                    1-  239     .segment "uninit"
     0000                           1-  240     r0x103F:
                                    1-  241     	.res	1
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x1043:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x1039:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x103A:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x103B:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x1036:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x1037:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x1038:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x1034:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x1035:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x102C:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x102D:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x102E:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x102F:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x1030:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x1031:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x1026:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x1027:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x1028:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x1029:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x102A:
                                    1-  301     	.res	1
                                    1-  302     .segment "uninit"
     0000                           1-  303     r0x102B:
                                    1-  304     	.res	1
                                    1-  305     ;--------------------------------------------------------
                                    1-  306     ; initialized data
                                    1-  307     ;--------------------------------------------------------
                                    1-  309     .segment "idata"
     0000                           1-  310     _TM0_FLAG:
     0000 0000                      1-  311     	dw	0x00
                                    1-  315     .segment "idata"
     0000                           1-  316     _REC_FLAG:
     0000 0000                      1-  317     	dw	0x00
                                    1-  321     .segment "idata"
     0000                           1-  322     _SEND_FLAG:
     0000 0000                      1-  323     	dw	0x00
                                    1-  327     .segment "idata"
     0000                           1-  328     _intCount:
     0000 0000                      1-  329     	dw	0x00
                                    1-  333     .segment "idata"
     0000                           1-  334     _IntFlag:
     0000 0000                      1-  335     	dw	0x00
                                    1-  339     .segment "idata"
     0000                           1-  340     _uartFlag:
     0000 0000                      1-  341     	dw	0x00
                                    1-  345     .segment "idata"
     0000                           1-  346     _data:
     0000 0025                      1-  347     	dw	0x25
                                    1-  351     .segment "idata"
     0000                           1-  352     _recData:
     0000 0000                      1-  353     	dw	0x00
                                    1-  357     .segment "idata"
     0000                           1-  358     _Hcount:
     0000 0000                      1-  359     	dw	0x00
                                    1-  363     .segment "idata"
     0000                           1-  364     _index:
     0000 0000                      1-  365     	dw	0x00
                                    1-  369     .segment "idata"
     0000                           1-  370     _uartTime:
     0000 0000                      1-  371     	dw	0x00
                                    1-  375     .segment "idata"
     0000                           1-  376     _workStep:
     0000 0000                      1-  377     	dw	0x00
                                    1-  381     .segment "idata"
     0000                           1-  382     _colorIndex:
     0000 0001                      1-  383     	dw	0x01
                                    1-  387     .segment "idata"
     0000                           1-  388     _timeCount:
     0000 0000 0000                 1-  389     	dw	0x00, 0x00
                                    1-  393     .segment "idata"
     0000                           1-  394     _firstFlag:
     0000 0002                      1-  395     	dw	0x02
                                    1-  399     .segment "idata"
     0000                           1-  400     _randNub:
     0000 0000                      1-  401     	dw	0x00
                                    1-  405     .segment "idata"
     0000                           1-  406     _snub:
     0000 0000                      1-  407     	dw	0x00
                                    1-  411     .segment "idata"
     0000                           1-  412     _preColorIndex:
     0000 0000                      1-  413     	dw	0x00
                                    1-  417     .segment "idata"
     0000                           1-  418     _preduty:
     0000 0000                      1-  419     	dw	0x00
                                    1-  423     .segment "idata"
     0000                           1-  424     _offFlag:
     0000 0000                      1-  425     	dw	0x00
                                    1-  429     .segment "idata"
     0000                           1-  430     _preColor:
     0000 0000                      1-  431     	dw	0x00
                                    1-  435     .segment "idata"
     0000                           1-  436     _colorTime:
     0000 0000                      1-  437     	dw	0x00
                                    1-  441     .segment "idata"
     0000                           1-  442     _Rdata:
     0000 0000                      1-  443     	dw	0x00
                                    1-  447     .segment "idata"
     0000                           1-  448     _Gdata:
     0000 0000                      1-  449     	dw	0x00
                                    1-  453     .segment "idata"
     0000                           1-  454     _Bdata:
     0000 0000                      1-  455     	dw	0x00
                                    1-  459     .segment "idata"
     0000                           1-  460     _Rdata1:
     0000 0000                      1-  461     	dw	0x00
                                    1-  465     .segment "idata"
     0000                           1-  466     _Gdata1:
     0000 0000                      1-  467     	dw	0x00
                                    1-  471     .segment "idata"
     0000                           1-  472     _Bdata1:
     0000 0000                      1-  473     	dw	0x00
                                    1-  477     .segment "idata"
     0000                           1-  478     _Rdata2:
     0000 0000                      1-  479     	dw	0x00
                                    1-  483     .segment "idata"
     0000                           1-  484     _Gdata2:
     0000 0000                      1-  485     	dw	0x00
                                    1-  489     .segment "idata"
     0000                           1-  490     _Bdata2:
     0000 0000                      1-  491     	dw	0x00
                                    1-  495     .segment "idata"
     0000                           1-  496     _duty:
     0000 0000                      1-  497     	dw	0x00
                                    1-  501     .segment "idata"
     0000                           1-  502     _ledCount:
     0000 0000                      1-  503     	dw	0x00
                                    1-  506     ;--------------------------------------------------------
                                    1-  507     ; overlayable items in internal ram 
                                    1-  508     ;--------------------------------------------------------
                                    1-  509     ;	udata_ovr
                                    1-  510     ;--------------------------------------------------------
                                    1-  511     ; reset vector 
                                    1-  512     ;--------------------------------------------------------
                                    1-  513     ORG	0x0000
     0000 3rrr                      1-  514     	LGOTO	__nyc_ny8_startup
                                    1-  515     ;--------------------------------------------------------
                                    1-  516     ; interrupt and initialization code
                                    1-  517     ;--------------------------------------------------------
                                    1-  518     ORG 0x0008
     0008 3rrr                      1-  519     	lgoto	__sdcc_interrupt
                                    1-  521     .segment "code"
     0000                           1-  522     __sdcc_interrupt:
                                    1-  523     ;***
                                    1-  524     ;  pBlock Stats: dbName = I
                                    1-  525     ;***
                                    1-  526     ;functions called:
                                    1-  527     ;   _setColor
                                    1-  528     ;   _setColor
                                    1-  529     ;   _setColor
                                    1-  530     ;   __moduint
                                    1-  531     ;   _rankNub
                                    1-  532     ;   _rankNub
                                    1-  533     ;   __divuchar
                                    1-  534     ;   _setColor
                                    1-  535     ;   _setColor
                                    1-  536     ;   _setColor
                                    1-  537     ;   __moduint
                                    1-  538     ;   _rankNub
                                    1-  539     ;   _rankNub
                                    1-  540     ;   __divuchar
                                    1-  541     ;9 compiler assigned registers:
                                    1-  542     ;   STK00
                                    1-  543     ;   STK01
                                    1-  544     ;   r0x1046
                                    1-  545     ;   r0x1047
                                    1-  546     ;   r0x1048
                                    1-  547     ;   r0x1049
                                    1-  548     ;   r0x104A
                                    1-  549     ;   r0x104B
                                    1-  550     ;   STK02
                                    1-  551     ;; Starting pCode block
     0000                           1-  552     _isr:
                                    1-  553     ; 0 exit points
                                    1-  554     	.line	127, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  555     	MOVAR	WSAVE
     0001 1503                      1-  556     	SWAPR	STATUS,W
     0002 0283                      1-  557     	CLRR	STATUS
     0003 00rr                      1-  558     	MOVAR	SSAVE
     0004 010A                      1-  559     	MOVR	PCHBUF,W
     0005 028A                      1-  560     	CLRR	PCHBUF
     0006 00rr                      1-  561     	MOVAR	PSAVE
     0007 0104                      1-  562     	MOVR	FSR,W
                                    1-  563     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  564     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  565     	MOVR	STK00,W
                                    1-  566     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  567     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  568     	MOVR	STK01,W
                                    1-  569     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  570     	MOVAR	___sdcc_saved_stk01
                                    1-  571     	.line	129, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  572     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  573     	LGOTO	_00137_DS_
                                    1-  574     	.line	132, "main.c"; 	TMR0 += 65;
     0012 2141                      1-  575     	MOVIA	0x41
     0013 03rr                      1-  576     	ADDAR	_TMR0,F
                                    1-  577     	.line	133, "main.c"; 	intCount++;
                                    1-  578     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  579     	INCR	_intCount,F
                                    1-  580     	.line	134, "main.c"; 	if(intCount == 50)
     0016 01rr                      1-  581     	MOVR	_intCount,W
     0017 2432                      1-  582     	XORIA	0x32
     0018 0903                      1-  583     	BTRSS	STATUS,2
     0019 3rrr                      1-  584     	LGOTO	_00137_DS_
                                    1-  585     	.line	136, "main.c"; 	intCount = 0;
     001A 02rr                      1-  586     	CLRR	_intCount
                                    1-  587     	.line	137, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  588     	MOVIA	0x01
                                    1-  589     	BANKSEL	_IntFlag
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 00rr                      1-  590     	MOVAR	_IntFlag
                                    1-  591     ;;unsigned compare: left < lit (0x14=20), size=1
                                    1-  592     	.line	138, "main.c"; 	if(uartTime < 20)
     001E 2114                      1-  593     	MOVIA	0x14
                                    1-  594     	BANKSEL	_uartTime
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 04rr                      1-  595     	SUBAR	_uartTime,W
     0021 0C03                      1-  596     	BTRSC	STATUS,0
     0022 3rrr                      1-  597     	LGOTO	_00120_DS_
                                    1-  598     	.line	140, "main.c"; 	if(++uartTime == 20)
     0023 05rr                      1-  599     	INCR	_uartTime,F
     0024 01rr                      1-  600     	MOVR	_uartTime,W
     0025 2414                      1-  601     	XORIA	0x14
     0026 0903                      1-  602     	BTRSS	STATUS,2
     0027 3rrr                      1-  603     	LGOTO	_00120_DS_
                                    1-  604     	.line	142, "main.c"; 	index = 0;
                                    1-  605     	BANKSEL	_index
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 02rr                      1-  606     	CLRR	_index
                                    1-  607     	.line	148, "main.c"; 	if(revList[4] == 0xBF && revList[1] == 3 && (revList[1] + revList[2]) == revList[3])
                                    1-  608     	BANKSEL	_revList
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1-  609     	MOVR	(_revList + 4),W
                                    1-  610     	BANKSEL	r0x1046
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 00rr                      1-  611     	MOVAR	r0x1046
     002E 24BF                      1-  612     	XORIA	0xbf
     002F 0903                      1-  613     	BTRSS	STATUS,2
     0030 3rrr                      1-  614     	LGOTO	_00108_DS_
                                    1-  615     	BANKSEL	_revList
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 01rr                      1-  616     	MOVR	(_revList + 1),W
                                    1-  617     	BANKSEL	r0x1046
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 00rr                      1-  618     	MOVAR	r0x1046
     0035 2403                      1-  619     	XORIA	0x03
     0036 0903                      1-  620     	BTRSS	STATUS,2
     0037 3rrr                      1-  621     	LGOTO	_00108_DS_
     0038 01rr                      1-  622     	MOVR	r0x1046,W
                                    1-  623     	BANKSEL	r0x1047
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 00rr                      1-  624     	MOVAR	r0x1047
                                    1-  625     	BANKSEL	r0x1048
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 02rr                      1-  626     	CLRR	r0x1048
                                    1-  627     	BANKSEL	_revList
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 01rr                      1-  628     	MOVR	(_revList + 2),W
                                    1-  629     	BANKSEL	r0x1046
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 00rr                      1-  630     	MOVAR	r0x1046
                                    1-  631     	BANKSEL	r0x1049
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 00rr                      1-  632     	MOVAR	r0x1049
                                    1-  633     	BANKSEL	r0x104A
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 02rr                      1-  634     	CLRR	r0x104A
                                    1-  635     	BANKSEL	r0x1049
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 01rr                      1-  636     	MOVR	r0x1049,W
                                    1-  637     	BANKSEL	r0x1047
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 03rr                      1-  638     	ADDAR	r0x1047,F
     0049 2100                      1-  639     	MOVIA	0x00
     004A 0803                      1-  640     	BTRSS	STATUS,0
     004B 3rrr                      1-  641     	LGOTO	_00011_DS_
                                    1-  642     	BANKSEL	r0x104A
     004C rrrr                      3-   71 m1      .banksel ram_address
     004D 05rr                      1-  643     	INCR	r0x104A,W
     004E 0D03                      1-  644     	BTRSC	STATUS,2
     004F 3rrr                      1-  645     	LGOTO	_00012_DS_
     0050                           1-  646     _00011_DS_:
                                    1-  647     	BANKSEL	r0x1048
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 03rr                      1-  648     	ADDAR	r0x1048,F
     0052                           1-  649     _00012_DS_:
                                    1-  650     	BANKSEL	_revList
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 01rr                      1-  651     	MOVR	(_revList + 3),W
                                    1-  652     	BANKSEL	r0x1049
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 00rr                      1-  653     	MOVAR	r0x1049
                                    1-  654     	BANKSEL	r0x104A
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 00rr                      1-  655     	MOVAR	r0x104A
                                    1-  656     	BANKSEL	r0x104B
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 02rr                      1-  657     	CLRR	r0x104B
                                    1-  658     	BANKSEL	r0x104A
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 01rr                      1-  659     	MOVR	r0x104A,W
                                    1-  660     	BANKSEL	r0x1047
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 12rr                      1-  661     	XORAR	r0x1047,W
     005E 0903                      1-  662     	BTRSS	STATUS,2
     005F 3rrr                      1-  663     	LGOTO	_00108_DS_
                                    1-  664     	BANKSEL	r0x104B
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 01rr                      1-  665     	MOVR	r0x104B,W
                                    1-  666     	BANKSEL	r0x1048
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 12rr                      1-  667     	XORAR	r0x1048,W
     0064 0903                      1-  668     	BTRSS	STATUS,2
     0065 3rrr                      1-  669     	LGOTO	_00108_DS_
                                    1-  670     	.line	150, "main.c"; 	workStep = revList[2];
                                    1-  671     	BANKSEL	r0x1046
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 01rr                      1-  672     	MOVR	r0x1046,W
                                    1-  673     	BANKSEL	_workStep
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 00rr                      1-  674     	MOVAR	_workStep
                                    1-  675     	.line	151, "main.c"; 	colorIndex = 1;
     006A 2101                      1-  676     	MOVIA	0x01
                                    1-  677     	BANKSEL	_colorIndex
     006B rrrr                      3-   71 m1      .banksel ram_address
     006C 00rr                      1-  678     	MOVAR	_colorIndex
                                    1-  679     	.line	152, "main.c"; 	if(workStep == 9)
                                    1-  680     	BANKSEL	_workStep
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 01rr                      1-  681     	MOVR	_workStep,W
     006F 2409                      1-  682     	XORIA	0x09
     0070 0903                      1-  683     	BTRSS	STATUS,2
     0071 3rrr                      1-  684     	LGOTO	_00106_DS_
                                    1-  685     	.line	153, "main.c"; 	setColor(colorIndex);
     0072 2101                      1-  686     	MOVIA	0x01
     0073 2rrr                      1-  687     	LCALL	_setColor
     0074                           1-  688     _00106_DS_:
                                    1-  689     	.line	154, "main.c"; 	timeCount = 0;
                                    1-  690     	BANKSEL	_timeCount
     0074 rrrr                      3-   71 m1      .banksel ram_address
     0075 02rr                      1-  691     	CLRR	_timeCount
     0076 02rr                      1-  692     	CLRR	(_timeCount + 1)
     0077                           1-  693     _00108_DS_:
                                    1-  694     	.line	156, "main.c"; 	if(firstFlag)
                                    1-  695     	BANKSEL	_firstFlag
     0077 rrrr                      3-   71 m1      .banksel ram_address
     0078 01rr                      1-  696     	MOVR	_firstFlag,W
     0079 0D03                      1-  697     	BTRSC	STATUS,2
     007A 3rrr                      1-  698     	LGOTO	_00120_DS_
                                    1-  699     	.line	158, "main.c"; 	TM0_FLAG=1; 
     007B 2101                      1-  700     	MOVIA	0x01
                                    1-  701     	BANKSEL	_TM0_FLAG
     007C rrrr                      3-   71 m1      .banksel ram_address
     007D 00rr                      1-  702     	MOVAR	_TM0_FLAG
                                    1-  703     	.line	159, "main.c"; 	REC_FLAG = 0;
                                    1-  704     	BANKSEL	_REC_FLAG
     007E rrrr                      3-   71 m1      .banksel ram_address
     007F 02rr                      1-  705     	CLRR	_REC_FLAG
                                    1-  706     	.line	160, "main.c"; 	recData = 0;
                                    1-  707     	BANKSEL	_recData
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 02rr                      1-  708     	CLRR	_recData
                                    1-  709     	.line	161, "main.c"; 	colorIndex = 1;
     0082 2101                      1-  710     	MOVIA	0x01
                                    1-  711     	BANKSEL	_colorIndex
     0083 rrrr                      3-   71 m1      .banksel ram_address
     0084 00rr                      1-  712     	MOVAR	_colorIndex
                                    1-  713     	.line	162, "main.c"; 	timeCount = 0;
                                    1-  714     	BANKSEL	_timeCount
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 02rr                      1-  715     	CLRR	_timeCount
     0087 02rr                      1-  716     	CLRR	(_timeCount + 1)
                                    1-  717     	.line	163, "main.c"; 	if(--firstFlag == 0)
                                    1-  718     	BANKSEL	_firstFlag
     0088 rrrr                      3-   71 m1      .banksel ram_address
     0089 17rr                      1-  719     	DECRSZ	_firstFlag,F
     008A 3rrr                      1-  720     	LGOTO	_00112_DS_
                                    1-  721     	.line	164, "main.c"; 	workStep = revList[2];
                                    1-  722     	BANKSEL	_revList
     008B rrrr                      3-   71 m1      .banksel ram_address
     008C 01rr                      1-  723     	MOVR	(_revList + 2),W
                                    1-  724     	BANKSEL	_workStep
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 00rr                      1-  725     	MOVAR	_workStep
                                    1-  726     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
     008F                           1-  727     _00112_DS_:
                                    1-  728     	.line	165, "main.c"; 	revList[0] = revList[1] = revList[2] = revList[3] = revList[4] = 0;
                                    1-  729     	BANKSEL	_revList
     008F rrrr                      3-   71 m1      .banksel ram_address
     0090 02rr                      1-  730     	CLRR	(_revList + 4)
                                    1-  731     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
     0091 02rr                      1-  732     	CLRR	(_revList + 3)
                                    1-  733     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
     0092 02rr                      1-  734     	CLRR	(_revList + 2)
                                    1-  735     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
     0093 02rr                      1-  736     	CLRR	(_revList + 1)
                                    1-  737     ;;gen.c:6903: size=0, offset=0, AOP_TYPE (res)=8
     0094 02rr                      1-  738     	CLRR	(_revList + 0)
                                    1-  739     	.line	166, "main.c"; 	if(workStep == 9)
                                    1-  740     	BANKSEL	_workStep
     0095 rrrr                      3-   71 m1      .banksel ram_address
     0096 01rr                      1-  741     	MOVR	_workStep,W
     0097 2409                      1-  742     	XORIA	0x09
     0098 0903                      1-  743     	BTRSS	STATUS,2
     0099 3rrr                      1-  744     	LGOTO	_00120_DS_
                                    1-  745     	.line	167, "main.c"; 	setColor(colorIndex);
                                    1-  746     	BANKSEL	_colorIndex
     009A rrrr                      3-   71 m1      .banksel ram_address
     009B 01rr                      1-  747     	MOVR	_colorIndex,W
     009C 2rrr                      1-  748     	LCALL	_setColor
     009D                           1-  749     _00120_DS_:
                                    1-  750     	.line	172, "main.c"; 	if(++timeCount >= 1000)
                                    1-  751     	BANKSEL	_timeCount
     009D rrrr                      3-   71 m1      .banksel ram_address
     009E 05rr                      1-  752     	INCR	_timeCount,F
     009F 0D03                      1-  753     	BTRSC	STATUS,2
     00A0 05rr                      1-  754     	INCR	(_timeCount + 1),F
                                    1-  755     ;;unsigned compare: left < lit (0x3E8=1000), size=2
     00A1 2103                      1-  756     	MOVIA	0x03
     00A2 04rr                      1-  757     	SUBAR	(_timeCount + 1),W
     00A3 0903                      1-  758     	BTRSS	STATUS,2
     00A4 3rrr                      1-  759     	LGOTO	_00217_DS_
     00A5 21E8                      1-  760     	MOVIA	0xe8
     00A6 04rr                      1-  761     	SUBAR	_timeCount,W
     00A7                           1-  762     _00217_DS_:
     00A7 0803                      1-  763     	BTRSS	STATUS,0
     00A8 3rrr                      1-  764     	LGOTO	_00127_DS_
                                    1-  765     	.line	174, "main.c"; 	timeCount = 0;
                                    1-  766     	BANKSEL	_timeCount
     00A9 rrrr                      3-   71 m1      .banksel ram_address
     00AA 02rr                      1-  767     	CLRR	_timeCount
     00AB 02rr                      1-  768     	CLRR	(_timeCount + 1)
                                    1-  769     	.line	175, "main.c"; 	if(workStep == 9 && ++colorIndex > 8)
                                    1-  770     	BANKSEL	r0x1046
     00AC rrrr                      3-   71 m1      .banksel ram_address
     00AD 02rr                      1-  771     	CLRR	r0x1046
                                    1-  772     	BANKSEL	_workStep
     00AE rrrr                      3-   71 m1      .banksel ram_address
     00AF 01rr                      1-  773     	MOVR	_workStep,W
     00B0 2409                      1-  774     	XORIA	0x09
     00B1 0903                      1-  775     	BTRSS	STATUS,2
     00B2 3rrr                      1-  776     	LGOTO	_00013_DS_
                                    1-  777     	BANKSEL	r0x1046
     00B3 rrrr                      3-   71 m1      .banksel ram_address
     00B4 05rr                      1-  778     	INCR	r0x1046,F
     00B5                           1-  779     _00013_DS_:
                                    1-  780     	BANKSEL	r0x1046
     00B5 rrrr                      3-   71 m1      .banksel ram_address
     00B6 01rr                      1-  781     	MOVR	r0x1046,W
     00B7 0D03                      1-  782     	BTRSC	STATUS,2
     00B8 3rrr                      1-  783     	LGOTO	_00122_DS_
                                    1-  784     	BANKSEL	_colorIndex
     00B9 rrrr                      3-   71 m1      .banksel ram_address
     00BA 05rr                      1-  785     	INCR	_colorIndex,F
                                    1-  786     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  787     ;;unsigned compare: left >= lit (0x9=9), size=1
     00BB 2109                      1-  788     	MOVIA	0x09
     00BC 04rr                      1-  789     	SUBAR	_colorIndex,W
     00BD 0803                      1-  790     	BTRSS	STATUS,0
     00BE 3rrr                      1-  791     	LGOTO	_00122_DS_
                                    1-  792     	.line	177, "main.c"; 	colorIndex = 1;
     00BF 2101                      1-  793     	MOVIA	0x01
     00C0 00rr                      1-  794     	MOVAR	_colorIndex
     00C1                           1-  795     _00122_DS_:
                                    1-  796     	.line	179, "main.c"; 	if(workStep == 9)
                                    1-  797     	BANKSEL	r0x1046
     00C1 rrrr                      3-   71 m1      .banksel ram_address
     00C2 01rr                      1-  798     	MOVR	r0x1046,W
     00C3 0D03                      1-  799     	BTRSC	STATUS,2
     00C4 3rrr                      1-  800     	LGOTO	_00127_DS_
                                    1-  801     	.line	180, "main.c"; 	setColor(colorIndex);
                                    1-  802     	BANKSEL	_colorIndex
     00C5 rrrr                      3-   71 m1      .banksel ram_address
     00C6 01rr                      1-  803     	MOVR	_colorIndex,W
     00C7 2rrr                      1-  804     	LCALL	_setColor
     00C8                           1-  805     _00127_DS_:
                                    1-  806     	.line	183, "main.c"; 	if(workStep == 10 && (timeCount % 200 == 0))
                                    1-  807     	BANKSEL	_workStep
     00C8 rrrr                      3-   71 m1      .banksel ram_address
     00C9 01rr                      1-  808     	MOVR	_workStep,W
     00CA 240A                      1-  809     	XORIA	0x0a
     00CB 0903                      1-  810     	BTRSS	STATUS,2
     00CC 3rrr                      1-  811     	LGOTO	_00137_DS_
     00CD 21C8                      1-  812     	MOVIA	0xc8
     00CE 00rr                      1-  813     	MOVAR	STK02
     00CF 2100                      1-  814     	MOVIA	0x00
     00D0 00rr                      1-  815     	MOVAR	STK01
                                    1-  816     	BANKSEL	_timeCount
     00D1 rrrr                      3-   71 m1      .banksel ram_address
     00D2 01rr                      1-  817     	MOVR	_timeCount,W
     00D3 00rr                      1-  818     	MOVAR	STK00
     00D4 01rr                      1-  819     	MOVR	(_timeCount + 1),W
     00D5 2rrr                      1-  820     	LCALL	__moduint
                                    1-  821     	BANKSEL	r0x1047
     00D6 rrrr                      3-   71 m1      .banksel ram_address
     00D7 00rr                      1-  822     	MOVAR	r0x1047
     00D8 01rr                      1-  823     	MOVR	STK00,W
                                    1-  824     	BANKSEL	r0x1046
     00D9 rrrr                      3-   71 m1      .banksel ram_address
     00DA 00rr                      1-  825     	MOVAR	r0x1046
                                    1-  826     	BANKSEL	r0x1047
     00DB rrrr                      3-   71 m1      .banksel ram_address
     00DC 11rr                      1-  827     	IORAR	r0x1047,W
     00DD 0903                      1-  828     	BTRSS	STATUS,2
     00DE 3rrr                      1-  829     	LGOTO	_00137_DS_
                                    1-  830     	.line	185, "main.c"; 	rankNub(randNub+3);
     00DF 2103                      1-  831     	MOVIA	0x03
                                    1-  832     	BANKSEL	_randNub
     00E0 rrrr                      3-   71 m1      .banksel ram_address
     00E1 03rr                      1-  833     	ADDAR	_randNub,W
                                    1-  834     	BANKSEL	r0x1046
     00E2 rrrr                      3-   71 m1      .banksel ram_address
     00E3 00rr                      1-  835     	MOVAR	r0x1046
     00E4 2rrr                      1-  836     	LCALL	_rankNub
                                    1-  837     	.line	186, "main.c"; 	preColorIndex = colorIndex;
                                    1-  838     	BANKSEL	_colorIndex
     00E5 rrrr                      3-   71 m1      .banksel ram_address
     00E6 01rr                      1-  839     	MOVR	_colorIndex,W
                                    1-  840     	BANKSEL	_preColorIndex
     00E7 rrrr                      3-   71 m1      .banksel ram_address
     00E8 00rr                      1-  841     	MOVAR	_preColorIndex
     00E9                           1-  842     _00128_DS_:
                                    1-  843     	.line	189, "main.c"; 	colorIndex = (randNub%8)  + 1;
     00E9 2107                      1-  844     	MOVIA	0x07
                                    1-  845     	BANKSEL	_randNub
     00EA rrrr                      3-   71 m1      .banksel ram_address
     00EB 10rr                      1-  846     	ANDAR	_randNub,W
                                    1-  847     	BANKSEL	r0x1046
     00EC rrrr                      3-   71 m1      .banksel ram_address
     00ED 00rr                      1-  848     	MOVAR	r0x1046
     00EE 05rr                      1-  849     	INCR	r0x1046,W
                                    1-  850     	BANKSEL	_colorIndex
     00EF rrrr                      3-   71 m1      .banksel ram_address
     00F0 00rr                      1-  851     	MOVAR	_colorIndex
                                    1-  852     	.line	190, "main.c"; 	rankNub(randNub+3);
     00F1 2103                      1-  853     	MOVIA	0x03
                                    1-  854     	BANKSEL	_randNub
     00F2 rrrr                      3-   71 m1      .banksel ram_address
     00F3 03rr                      1-  855     	ADDAR	_randNub,W
                                    1-  856     	BANKSEL	r0x1046
     00F4 rrrr                      3-   71 m1      .banksel ram_address
     00F5 00rr                      1-  857     	MOVAR	r0x1046
     00F6 2rrr                      1-  858     	LCALL	_rankNub
                                    1-  859     	.line	191, "main.c"; 	snub+=3;
     00F7 2103                      1-  860     	MOVIA	0x03
                                    1-  861     	BANKSEL	_snub
     00F8 rrrr                      3-   71 m1      .banksel ram_address
     00F9 03rr                      1-  862     	ADDAR	_snub,F
                                    1-  863     	.line	192, "main.c"; 	CLRWDT();
     00FA 0002                      1-  864     	clrwdt
                                    1-  865     	.line	194, "main.c"; 	while(preColorIndex == colorIndex);
                                    1-  866     	BANKSEL	_colorIndex
     00FB rrrr                      3-   71 m1      .banksel ram_address
     00FC 01rr                      1-  867     	MOVR	_colorIndex,W
                                    1-  868     	BANKSEL	_preColorIndex
     00FD rrrr                      3-   71 m1      .banksel ram_address
     00FE 12rr                      1-  869     	XORAR	_preColorIndex,W
     00FF 0D03                      1-  870     	BTRSC	STATUS,2
     0100 3rrr                      1-  871     	LGOTO	_00128_DS_
                                    1-  872     	.line	195, "main.c"; 	randNub = randNub/3;
     0101 2103                      1-  873     	MOVIA	0x03
     0102 00rr                      1-  874     	MOVAR	STK00
                                    1-  875     	BANKSEL	_randNub
     0103 rrrr                      3-   71 m1      .banksel ram_address
     0104 01rr                      1-  876     	MOVR	_randNub,W
     0105 2rrr                      1-  877     	LCALL	__divuchar
                                    1-  878     	BANKSEL	_randNub
     0106 rrrr                      3-   71 m1      .banksel ram_address
     0107 00rr                      1-  879     	MOVAR	_randNub
     0108                           1-  880     _00137_DS_:
                                    1-  881     	.line	199, "main.c"; 	if(INTFbits.T1IF)
     0108 09rr                      1-  882     	BTRSS	_INTFbits,3
     0109 3rrr                      1-  883     	LGOTO	_00139_DS_
                                    1-  884     	.line	201, "main.c"; 	INTF= (unsigned char)~(C_INT_TMR1);	// Clear PABIF(PortB input change interrupt flag bit)
     010A 21F7                      1-  885     	MOVIA	0xf7
     010B 00rr                      1-  886     	MOVAR	_INTF
                                    1-  887     	.line	202, "main.c"; 	TM0_FLAG=1; //���ñ�־λ��
     010C 2101                      1-  888     	MOVIA	0x01
                                    1-  889     	BANKSEL	_TM0_FLAG
     010D rrrr                      3-   71 m1      .banksel ram_address
     010E 00rr                      1-  890     	MOVAR	_TM0_FLAG
     010F                           1-  891     _00139_DS_:
                                    1-  892     	.line	204, "main.c"; 	if(INTFbits.PABIF)
     010F 08rr                      1-  893     	BTRSS	_INTFbits,1
     0110 3rrr                      1-  894     	LGOTO	_00144_DS_
                                    1-  895     	.line	206, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0111 21FD                      1-  896     	MOVIA	0xfd
     0112 00rr                      1-  897     	MOVAR	_INTF
                                    1-  898     	.line	207, "main.c"; 	if(REC_FLAG == 0 && (PORTA & 0x04) == 0)
                                    1-  899     	BANKSEL	_REC_FLAG
     0113 rrrr                      3-   71 m1      .banksel ram_address
     0114 01rr                      1-  900     	MOVR	_REC_FLAG,W
     0115 0903                      1-  901     	BTRSS	STATUS,2
     0116 3rrr                      1-  902     	LGOTO	_00144_DS_
                                    1-  903     	BANKSEL	_PORTA
     0117 rrrr                      3-   71 m1      .banksel ram_address
     0118 0Drr                      1-  904     	BTRSC	_PORTA,2
     0119 3rrr                      1-  905     	LGOTO	_00144_DS_
                                    1-  906     	.line	209, "main.c"; 	uartFlag = 1;
     011A 2101                      1-  907     	MOVIA	0x01
                                    1-  908     	BANKSEL	_uartFlag
     011B rrrr                      3-   71 m1      .banksel ram_address
     011C 00rr                      1-  909     	MOVAR	_uartFlag
     011D                           1-  910     _00144_DS_:
                                    1-  911     	.line	214, "main.c"; 	INTF = 0;
     011D 02rr                      1-  912     	CLRR	_INTF
                                    1-  913     	.line	216, "main.c"; 	}
                                    1-  914     	BANKSEL	___sdcc_saved_stk01
     011E rrrr                      3-   71 m1      .banksel ram_address
     011F 01rr                      1-  915     	MOVR	___sdcc_saved_stk01,W
     0120 00rr                      1-  916     	MOVAR	STK01
                                    1-  917     	BANKSEL	___sdcc_saved_stk00
     0121 rrrr                      3-   71 m1      .banksel ram_address
     0122 01rr                      1-  918     	MOVR	___sdcc_saved_stk00,W
     0123 00rr                      1-  919     	MOVAR	STK00
                                    1-  920     	BANKSEL	___sdcc_saved_fsr
     0124 rrrr                      3-   71 m1      .banksel ram_address
     0125 01rr                      1-  921     	MOVR	___sdcc_saved_fsr,W
     0126 0084                      1-  922     	MOVAR	FSR
     0127 01rr                      1-  923     	MOVR	PSAVE,W
     0128 008A                      1-  924     	MOVAR	PCHBUF
     0129 0283                      1-  925     	CLRR	STATUS
     012A 15rr                      1-  926     	SWAPR	SSAVE,W
     012B 0083                      1-  927     	MOVAR	STATUS
     012C 15rr                      1-  928     	SWAPR	WSAVE,F
     012D 15rr                      1-  929     	SWAPR	WSAVE,W
     012E                           1-  930     END_OF_INTERRUPT:
     012E 0011                      1-  931     	RETIE	
                                    1-  933     ;--------------------------------------------------------
                                    1-  934     ; code
                                    1-  935     ;--------------------------------------------------------
                                    1-  936     ;***
                                    1-  937     ;  pBlock Stats: dbName = M
                                    1-  938     ;***
                                    1-  939     ;has an exit
                                    1-  940     ;functions called:
                                    1-  941     ;   _revData
                                    1-  942     ;   _workCtr
                                    1-  943     ;   _setColor
                                    1-  944     ;   _revData
                                    1-  945     ;   _workCtr
                                    1-  946     ;   _setColor
                                    1-  947     ;; Starting pCode block
                                    1-  948     .segment "code"; module=main, function=_main
     0000                           1-  950     _main:
                                    1-  951     ; 2 exit points
                                    1-  952     	.line	245, "main.c"; 	PORTA = 0x00;
                                    1-  953     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  954     	CLRR	_PORTA
                                    1-  955     	.line	246, "main.c"; 	APHCON = 0xDB;		//PA5����
     0002 21DB                      1-  956     	MOVIA	0xdb
     0003 000r                      1-  957     	IOST	_APHCON
                                    1-  958     	.line	248, "main.c"; 	IOSTA =  C_PA2_Input | C_PA5_Input;					//PA5����
     0004 2124                      1-  959     	MOVIA	0x24
     0005 000r                      1-  960     	IOST	_IOSTA
                                    1-  961     	.line	249, "main.c"; 	IOSTB =  C_PB0_Input;					//PB0����
     0006 2101                      1-  962     	MOVIA	0x01
     0007 000r                      1-  963     	IOST	_IOSTB
                                    1-  964     	.line	250, "main.c"; 	PORTA = 0x00;  
     0008 02rr                      1-  965     	CLRR	_PORTA
                                    1-  966     	.line	251, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT & LVR
     0009 21A8                      1-  967     	MOVIA	0xa8
     000A 00rr                      1-  968     	MOVAR	_PCON
                                    1-  969     	.line	252, "main.c"; 	ABPLCON = 0xFF;
     000B 21FF                      1-  970     	MOVIA	0xff
     000C 00rr                      1-  971     	MOVAR	_ABPLCON
                                    1-  972     	.line	253, "main.c"; 	PCON1 = C_TMR0_Dis;
     000D 0200                      1-  973     	CLRA	
     000E 000r                      1-  974     	IOST	_PCON1
                                    1-  975     	.line	255, "main.c"; 	TMR0 = 55;
     000F 2137                      1-  976     	MOVIA	0x37
     0010 00rr                      1-  977     	MOVAR	_TMR0
                                    1-  978     	.line	256, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0011 2101                      1-  979     	MOVIA	0x01
     0012 0003                      1-  980     	T0MD	
                                    1-  981     	.line	257, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0013 210B                      1-  982     	MOVIA	0x0b
     0014 00rr                      1-  983     	MOVAR	_INTE
                                    1-  984     	.line	258, "main.c"; 	PCON1 = C_LVD_3P0V | C_TMR0_En;
     0015 2111                      1-  985     	MOVIA	0x11
     0016 000r                      1-  986     	IOST	_PCON1
                                    1-  987     	.line	261, "main.c"; 	TMRH = 0;
     0017 02rr                      1-  988     	CLRR	_TMRH
                                    1-  989     	.line	262, "main.c"; 	TMR1 = 104;
     0018 2168                      1-  990     	MOVIA	0x68
     0019 00rr                      1-  991     	SFUN	_TMR1
                                    1-  992     	.line	263, "main.c"; 	T1CR2 = C_PS1_Div8 | C_PS1_EN | C_TMR1_ClkSrc_Inst;
     001A 2102                      1-  993     	MOVIA	0x02
     001B 00rr                      1-  994     	SFUN	_T1CR2
                                    1-  995     	.line	264, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload;
     001C 2103                      1-  996     	MOVIA	0x03
     001D 00rr                      1-  997     	SFUN	_T1CR1
                                    1-  998     	.line	268, "main.c"; 	ENI();
     001E 0004                      1-  999     	ENI
                                    1- 1000     	.line	269, "main.c"; 	workStep = 0;
                                    1- 1001     	BANKSEL	_workStep
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 02rr                      1- 1002     	CLRR	_workStep
     0021                           1- 1003     _00244_DS_:
                                    1- 1004     	.line	272, "main.c"; 	CLRWDT();
     0021 0002                      1- 1005     	clrwdt
                                    1- 1006     	.line	273, "main.c"; 	revData();
     0022 2rrr                      1- 1007     	LCALL	_revData
                                    1- 1008     	.line	274, "main.c"; 	snub++;
                                    1- 1009     	BANKSEL	_snub
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 05rr                      1- 1010     	INCR	_snub,F
                                    1- 1011     	.line	275, "main.c"; 	if(!IntFlag)
                                    1- 1012     	BANKSEL	_IntFlag
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 01rr                      1- 1013     	MOVR	_IntFlag,W
     0027 0D03                      1- 1014     	BTRSC	STATUS,2
     0028 3rrr                      1- 1015     	LGOTO	_00244_DS_
                                    1- 1016     	.line	277, "main.c"; 	IntFlag = 0;
     0029 02rr                      1- 1017     	CLRR	_IntFlag
                                    1- 1018     	.line	278, "main.c"; 	if(uartFlag == 0)
                                    1- 1019     	BANKSEL	_uartFlag
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1- 1020     	MOVR	_uartFlag,W
     002C 0D03                      1- 1021     	BTRSC	STATUS,2
                                    1- 1022     	.line	279, "main.c"; 	workCtr();
     002D 2rrr                      1- 1023     	LCALL	_workCtr
                                    1- 1024     	.line	280, "main.c"; 	if(workStep == 0 || workStep > 10)
                                    1- 1025     	BANKSEL	_workStep
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 01rr                      1- 1026     	MOVR	_workStep,W
     0030 0D03                      1- 1027     	BTRSC	STATUS,2
     0031 3rrr                      1- 1028     	LGOTO	_00240_DS_
                                    1- 1029     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1030     ;;unsigned compare: left >= lit (0xB=11), size=1
     0032 210B                      1- 1031     	MOVIA	0x0b
     0033 04rr                      1- 1032     	SUBAR	_workStep,W
     0034 0803                      1- 1033     	BTRSS	STATUS,0
     0035 3rrr                      1- 1034     	LGOTO	_00244_DS_
     0036                           1- 1035     _00240_DS_:
                                    1- 1036     	.line	282, "main.c"; 	setColor(0);
     0036 2100                      1- 1037     	MOVIA	0x00
     0037 2rrr                      1- 1038     	LCALL	_setColor
                                    1- 1039     	.line	283, "main.c"; 	workStep = 0;
                                    1- 1040     	BANKSEL	_workStep
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 02rr                      1- 1041     	CLRR	_workStep
     003A 3rrr                      1- 1042     	LGOTO	_00244_DS_
                                    1- 1043     	.line	288, "main.c"; 	}
                                    1- 1044     	RETURN	
     003B 0010                      3-   26 m1      ret
                                    1- 1045     ; exit point of _main
                                    1- 1047     ;***
                                    1- 1048     ;  pBlock Stats: dbName = C
                                    1- 1049     ;***
                                    1- 1050     ;has an exit
                                    1- 1051     ;functions called:
                                    1- 1052     ;   _sendRGB
                                    1- 1053     ;   _Delay80us
                                    1- 1054     ;   _sendRGB
                                    1- 1055     ;   _Delay80us
                                    1- 1056     ;7 compiler assigned registers:
                                    1- 1057     ;   r0x1027
                                    1- 1058     ;   STK00
                                    1- 1059     ;   r0x1028
                                    1- 1060     ;   STK01
                                    1- 1061     ;   r0x1029
                                    1- 1062     ;   r0x102A
                                    1- 1063     ;   r0x102B
                                    1- 1064     ;; Starting pCode block
                                    1- 1065     .segment "code"; module=main, function=_sendtoLast
                                    1- 1067     ;local variable name mapping:
     0000                           1- 1073     _sendtoLast:
                                    1- 1074     ; 2 exit points
                                    1- 1075     	BANKSEL	_Rdata1
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1076     	MOVAR	_Rdata1
                                    1- 1077     	.line	674, "main.c"; 	void sendtoLast(unsigned char colorR,unsigned char colorG,unsigned char colorB)
                                    1- 1078     	BANKSEL	r0x1027
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 00rr                      1- 1079     	MOVAR	r0x1027
     0004 01rr                      1- 1080     	MOVR	STK00,W
                                    1- 1081     	BANKSEL	_Gdata1
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 00rr                      1- 1082     	MOVAR	_Gdata1
                                    1- 1083     	BANKSEL	r0x1028
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 00rr                      1- 1084     	MOVAR	r0x1028
     0009 01rr                      1- 1085     	MOVR	STK01,W
                                    1- 1086     	BANKSEL	_Bdata1
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1- 1087     	MOVAR	_Bdata1
                                    1- 1088     	BANKSEL	r0x1029
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1089     	MOVAR	r0x1029
                                    1- 1090     ;;100	MOVR	r0x1027,W
                                    1- 1091     ;;101	MOVR	r0x1028,W
                                    1- 1092     ;;102	MOVR	r0x1029,W
                                    1- 1093     	.line	682, "main.c"; 	if(workStep == 9 && preColor != colorIndex)
                                    1- 1094     	BANKSEL	_workStep
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 1095     	MOVR	_workStep,W
     0010 2409                      1- 1096     	XORIA	0x09
     0011 0903                      1- 1097     	BTRSS	STATUS,2
     0012 3rrr                      1- 1098     	LGOTO	_00672_DS_
                                    1- 1099     	BANKSEL	_colorIndex
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 1100     	MOVR	_colorIndex,W
                                    1- 1101     	BANKSEL	_preColor
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 12rr                      1- 1102     	XORAR	_preColor,W
     0017 0D03                      1- 1103     	BTRSC	STATUS,2
     0018 3rrr                      1- 1104     	LGOTO	_00672_DS_
                                    1- 1105     	.line	684, "main.c"; 	preColor = colorIndex;
                                    1- 1106     	BANKSEL	_colorIndex
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1107     	MOVR	_colorIndex,W
                                    1- 1108     	BANKSEL	_preColor
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1109     	MOVAR	_preColor
                                    1- 1110     	.line	685, "main.c"; 	Rdata2 = colorR;
                                    1- 1111     	BANKSEL	r0x1027
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1112     	MOVR	r0x1027,W
                                    1- 1113     	BANKSEL	_Rdata2
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 00rr                      1- 1114     	MOVAR	_Rdata2
                                    1- 1115     	.line	686, "main.c"; 	Gdata2 = colorG;
                                    1- 1116     	BANKSEL	r0x1028
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1- 1117     	MOVR	r0x1028,W
                                    1- 1118     	BANKSEL	_Gdata2
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 00rr                      1- 1119     	MOVAR	_Gdata2
                                    1- 1120     	.line	687, "main.c"; 	Bdata2 = colorB;
                                    1- 1121     	BANKSEL	r0x1029
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 01rr                      1- 1122     	MOVR	r0x1029,W
                                    1- 1123     	BANKSEL	_Bdata2
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 00rr                      1- 1124     	MOVAR	_Bdata2
     0029                           1- 1125     _00672_DS_:
                                    1- 1126     	.line	689, "main.c"; 	for(int i=0;i<LED_N;i++)
                                    1- 1127     	BANKSEL	r0x102A
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 02rr                      1- 1128     	CLRR	r0x102A
                                    1- 1129     	BANKSEL	r0x102B
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 02rr                      1- 1130     	CLRR	r0x102B
                                    1- 1131     ;;signed compare: left < lit (0x4=4), size=2, mask=ffff
     002D                           1- 1132     _00664_DS_:
                                    1- 1133     	BANKSEL	r0x102B
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 01rr                      1- 1134     	MOVR	r0x102B,W
     002F 2580                      1- 1135     	ADDIA	0x80
     0030 2580                      1- 1136     	ADDIA	0x80
     0031 0903                      1- 1137     	BTRSS	STATUS,2
     0032 3rrr                      1- 1138     	LGOTO	_00684_DS_
     0033 2104                      1- 1139     	MOVIA	0x04
                                    1- 1140     	BANKSEL	r0x102A
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 04rr                      1- 1141     	SUBAR	r0x102A,W
     0036                           1- 1142     _00684_DS_:
     0036 0C03                      1- 1143     	BTRSC	STATUS,0
     0037 3rrr                      1- 1144     	LGOTO	_00662_DS_
                                    1- 1145     	.line	691, "main.c"; 	sendRGB(colorR,colorG,colorB);
                                    1- 1146     	BANKSEL	r0x1029
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 01rr                      1- 1147     	MOVR	r0x1029,W
     003A 00rr                      1- 1148     	MOVAR	STK01
                                    1- 1149     	BANKSEL	r0x1028
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 01rr                      1- 1150     	MOVR	r0x1028,W
     003D 00rr                      1- 1151     	MOVAR	STK00
                                    1- 1152     	BANKSEL	r0x1027
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 01rr                      1- 1153     	MOVR	r0x1027,W
     0040 2rrr                      1- 1154     	LCALL	_sendRGB
                                    1- 1155     	.line	692, "main.c"; 	if(uartFlag)
                                    1- 1156     	BANKSEL	_uartFlag
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 01rr                      1- 1157     	MOVR	_uartFlag,W
     0043 0903                      1- 1158     	BTRSS	STATUS,2
                                    1- 1159     	.line	693, "main.c"; 	return;
     0044 3rrr                      1- 1160     	LGOTO	_00666_DS_
                                    1- 1161     	.line	689, "main.c"; 	for(int i=0;i<LED_N;i++)
                                    1- 1162     	BANKSEL	r0x102A
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 05rr                      1- 1163     	INCR	r0x102A,F
     0047 0903                      1- 1164     	BTRSS	STATUS,2
     0048 3rrr                      1- 1165     	LGOTO	_00001_DS_
                                    1- 1166     	BANKSEL	r0x102B
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 05rr                      1- 1167     	INCR	r0x102B,F
     004B                           1- 1168     _00001_DS_:
     004B 3rrr                      1- 1169     	LGOTO	_00664_DS_
     004C                           1- 1170     _00662_DS_:
                                    1- 1171     	.line	695, "main.c"; 	Delay80us();
     004C 2rrr                      1- 1172     	LCALL	_Delay80us
     004D                           1- 1173     _00666_DS_:
                                    1- 1174     	.line	696, "main.c"; 	}
                                    1- 1175     	RETURN	
     004D 0010                      3-   26 m1      ret
                                    1- 1176     ; exit point of _sendtoLast
                                    1- 1178     ;***
                                    1- 1179     ;  pBlock Stats: dbName = C
                                    1- 1180     ;***
                                    1- 1181     ;has an exit
                                    1- 1182     ;2 compiler assigned registers:
                                    1- 1183     ;   STK00
                                    1- 1184     ;   STK01
                                    1- 1185     ;; Starting pCode block
                                    1- 1186     .segment "code"; module=main, function=_sendRGB
     0000                           1- 1188     _sendRGB:
                                    1- 1189     ; 2 exit points
                                    1- 1190     	.line	562, "main.c"; 	void sendRGB(unsigned char colorR,unsigned char colorG,unsigned char colorB)
                                    1- 1191     	BANKSEL	_Rdata
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1192     	MOVAR	_Rdata
     0002 01rr                      1- 1193     	MOVR	STK00,W
                                    1- 1194     	BANKSEL	_Gdata
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1195     	MOVAR	_Gdata
     0005 01rr                      1- 1196     	MOVR	STK01,W
                                    1- 1197     	BANKSEL	_Bdata
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1- 1198     	MOVAR	_Bdata
                                    1- 1199     	.line	570, "main.c"; 	DISI();	
     0008 0013                      1- 1200     	DISI
                                    1- 1201     	.line	571, "main.c"; 	if(R7)
                                    1- 1202     	BANKSEL	_Rdata
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 0Brr                      1- 1203     	BTRSS	_Rdata,7
     000B 3rrr                      1- 1204     	LGOTO	_00440_DS_
                                    1- 1205     	.line	572, "main.c"; 	NUB1();
     000C 1Drr                      1- 1206     	BCR	_PORTAbits,3
     000D 1Drr                      1- 1207     	BCR	_PORTAbits,3
     000E 19rr                      1- 1208     	BSR	_PORTAbits,3
     000F 3rrr                      1- 1209     	LGOTO	_00445_DS_
     0010                           1- 1210     _00440_DS_:
                                    1- 1211     	.line	574, "main.c"; 	NUB0();
     0010 1Drr                      1- 1212     	BCR	_PORTAbits,3
     0011 19rr                      1- 1213     	BSR	_PORTAbits,3
     0012 19rr                      1- 1214     	BSR	_PORTAbits,3
     0013 0000                      1- 1215     	nop
     0014 1Drr                      1- 1216     	BCR	_PORTAbits,3
     0015                           1- 1217     _00445_DS_:
                                    1- 1218     	.line	575, "main.c"; 	if(R6)
                                    1- 1219     	BANKSEL	_Rdata
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 0Brr                      1- 1220     	BTRSS	_Rdata,6
     0017 3rrr                      1- 1221     	LGOTO	_00449_DS_
                                    1- 1222     	.line	576, "main.c"; 	NUB1();
     0018 1Drr                      1- 1223     	BCR	_PORTAbits,3
     0019 1Drr                      1- 1224     	BCR	_PORTAbits,3
     001A 19rr                      1- 1225     	BSR	_PORTAbits,3
     001B 3rrr                      1- 1226     	LGOTO	_00454_DS_
     001C                           1- 1227     _00449_DS_:
                                    1- 1228     	.line	578, "main.c"; 	NUB0();
     001C 1Drr                      1- 1229     	BCR	_PORTAbits,3
     001D 19rr                      1- 1230     	BSR	_PORTAbits,3
     001E 19rr                      1- 1231     	BSR	_PORTAbits,3
     001F 0000                      1- 1232     	nop
     0020 1Drr                      1- 1233     	BCR	_PORTAbits,3
     0021                           1- 1234     _00454_DS_:
                                    1- 1235     	.line	579, "main.c"; 	if(R5)
                                    1- 1236     	BANKSEL	_Rdata
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 0Arr                      1- 1237     	BTRSS	_Rdata,5
     0023 3rrr                      1- 1238     	LGOTO	_00458_DS_
                                    1- 1239     	.line	580, "main.c"; 	NUB1();
     0024 1Drr                      1- 1240     	BCR	_PORTAbits,3
     0025 1Drr                      1- 1241     	BCR	_PORTAbits,3
     0026 19rr                      1- 1242     	BSR	_PORTAbits,3
     0027 3rrr                      1- 1243     	LGOTO	_00463_DS_
     0028                           1- 1244     _00458_DS_:
                                    1- 1245     	.line	582, "main.c"; 	NUB0();
     0028 1Drr                      1- 1246     	BCR	_PORTAbits,3
     0029 19rr                      1- 1247     	BSR	_PORTAbits,3
     002A 19rr                      1- 1248     	BSR	_PORTAbits,3
     002B 0000                      1- 1249     	nop
     002C 1Drr                      1- 1250     	BCR	_PORTAbits,3
     002D                           1- 1251     _00463_DS_:
                                    1- 1252     	.line	583, "main.c"; 	if(R4)
                                    1- 1253     	BANKSEL	_Rdata
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 0Arr                      1- 1254     	BTRSS	_Rdata,4
     002F 3rrr                      1- 1255     	LGOTO	_00467_DS_
                                    1- 1256     	.line	584, "main.c"; 	NUB1();
     0030 1Drr                      1- 1257     	BCR	_PORTAbits,3
     0031 1Drr                      1- 1258     	BCR	_PORTAbits,3
     0032 19rr                      1- 1259     	BSR	_PORTAbits,3
     0033 3rrr                      1- 1260     	LGOTO	_00472_DS_
     0034                           1- 1261     _00467_DS_:
                                    1- 1262     	.line	586, "main.c"; 	NUB0();
     0034 1Drr                      1- 1263     	BCR	_PORTAbits,3
     0035 19rr                      1- 1264     	BSR	_PORTAbits,3
     0036 19rr                      1- 1265     	BSR	_PORTAbits,3
     0037 0000                      1- 1266     	nop
     0038 1Drr                      1- 1267     	BCR	_PORTAbits,3
     0039                           1- 1268     _00472_DS_:
                                    1- 1269     	.line	587, "main.c"; 	if(R3)
                                    1- 1270     	BANKSEL	_Rdata
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 09rr                      1- 1271     	BTRSS	_Rdata,3
     003B 3rrr                      1- 1272     	LGOTO	_00476_DS_
                                    1- 1273     	.line	588, "main.c"; 	NUB1();
     003C 1Drr                      1- 1274     	BCR	_PORTAbits,3
     003D 1Drr                      1- 1275     	BCR	_PORTAbits,3
     003E 19rr                      1- 1276     	BSR	_PORTAbits,3
     003F 3rrr                      1- 1277     	LGOTO	_00481_DS_
     0040                           1- 1278     _00476_DS_:
                                    1- 1279     	.line	590, "main.c"; 	NUB0();
     0040 1Drr                      1- 1280     	BCR	_PORTAbits,3
     0041 19rr                      1- 1281     	BSR	_PORTAbits,3
     0042 19rr                      1- 1282     	BSR	_PORTAbits,3
     0043 0000                      1- 1283     	nop
     0044 1Drr                      1- 1284     	BCR	_PORTAbits,3
     0045                           1- 1285     _00481_DS_:
                                    1- 1286     	.line	591, "main.c"; 	if(R2)
                                    1- 1287     	BANKSEL	_Rdata
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 09rr                      1- 1288     	BTRSS	_Rdata,2
     0047 3rrr                      1- 1289     	LGOTO	_00485_DS_
                                    1- 1290     	.line	592, "main.c"; 	NUB1();
     0048 1Drr                      1- 1291     	BCR	_PORTAbits,3
     0049 1Drr                      1- 1292     	BCR	_PORTAbits,3
     004A 19rr                      1- 1293     	BSR	_PORTAbits,3
     004B 3rrr                      1- 1294     	LGOTO	_00490_DS_
     004C                           1- 1295     _00485_DS_:
                                    1- 1296     	.line	594, "main.c"; 	NUB0();
     004C 1Drr                      1- 1297     	BCR	_PORTAbits,3
     004D 19rr                      1- 1298     	BSR	_PORTAbits,3
     004E 19rr                      1- 1299     	BSR	_PORTAbits,3
     004F 0000                      1- 1300     	nop
     0050 1Drr                      1- 1301     	BCR	_PORTAbits,3
     0051                           1- 1302     _00490_DS_:
                                    1- 1303     	.line	595, "main.c"; 	if(R1)
                                    1- 1304     	BANKSEL	_Rdata
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 08rr                      1- 1305     	BTRSS	_Rdata,1
     0053 3rrr                      1- 1306     	LGOTO	_00494_DS_
                                    1- 1307     	.line	596, "main.c"; 	NUB1();
     0054 1Drr                      1- 1308     	BCR	_PORTAbits,3
     0055 1Drr                      1- 1309     	BCR	_PORTAbits,3
     0056 19rr                      1- 1310     	BSR	_PORTAbits,3
     0057 3rrr                      1- 1311     	LGOTO	_00499_DS_
     0058                           1- 1312     _00494_DS_:
                                    1- 1313     	.line	598, "main.c"; 	NUB0();
     0058 1Drr                      1- 1314     	BCR	_PORTAbits,3
     0059 19rr                      1- 1315     	BSR	_PORTAbits,3
     005A 19rr                      1- 1316     	BSR	_PORTAbits,3
     005B 0000                      1- 1317     	nop
     005C 1Drr                      1- 1318     	BCR	_PORTAbits,3
     005D                           1- 1319     _00499_DS_:
                                    1- 1320     	.line	599, "main.c"; 	if(R0)
                                    1- 1321     	BANKSEL	_Rdata
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 08rr                      1- 1322     	BTRSS	_Rdata,0
     005F 3rrr                      1- 1323     	LGOTO	_00503_DS_
                                    1- 1324     	.line	600, "main.c"; 	NUB1();
     0060 1Drr                      1- 1325     	BCR	_PORTAbits,3
     0061 1Drr                      1- 1326     	BCR	_PORTAbits,3
     0062 19rr                      1- 1327     	BSR	_PORTAbits,3
     0063 3rrr                      1- 1328     	LGOTO	_00508_DS_
     0064                           1- 1329     _00503_DS_:
                                    1- 1330     	.line	602, "main.c"; 	NUB0();
     0064 1Drr                      1- 1331     	BCR	_PORTAbits,3
     0065 19rr                      1- 1332     	BSR	_PORTAbits,3
     0066 19rr                      1- 1333     	BSR	_PORTAbits,3
     0067 0000                      1- 1334     	nop
     0068 1Drr                      1- 1335     	BCR	_PORTAbits,3
     0069                           1- 1336     _00508_DS_:
                                    1- 1337     	.line	604, "main.c"; 	if(G7)
                                    1- 1338     	BANKSEL	_Gdata
     0069 rrrr                      3-   71 m1      .banksel ram_address
     006A 0Brr                      1- 1339     	BTRSS	_Gdata,7
     006B 3rrr                      1- 1340     	LGOTO	_00512_DS_
                                    1- 1341     	.line	605, "main.c"; 	NUB1();
     006C 1Drr                      1- 1342     	BCR	_PORTAbits,3
     006D 1Drr                      1- 1343     	BCR	_PORTAbits,3
     006E 19rr                      1- 1344     	BSR	_PORTAbits,3
     006F 3rrr                      1- 1345     	LGOTO	_00517_DS_
     0070                           1- 1346     _00512_DS_:
                                    1- 1347     	.line	607, "main.c"; 	NUB0();
     0070 1Drr                      1- 1348     	BCR	_PORTAbits,3
     0071 19rr                      1- 1349     	BSR	_PORTAbits,3
     0072 19rr                      1- 1350     	BSR	_PORTAbits,3
     0073 0000                      1- 1351     	nop
     0074 1Drr                      1- 1352     	BCR	_PORTAbits,3
     0075                           1- 1353     _00517_DS_:
                                    1- 1354     	.line	608, "main.c"; 	if(G6)
                                    1- 1355     	BANKSEL	_Gdata
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 0Brr                      1- 1356     	BTRSS	_Gdata,6
     0077 3rrr                      1- 1357     	LGOTO	_00521_DS_
                                    1- 1358     	.line	609, "main.c"; 	NUB1();
     0078 1Drr                      1- 1359     	BCR	_PORTAbits,3
     0079 1Drr                      1- 1360     	BCR	_PORTAbits,3
     007A 19rr                      1- 1361     	BSR	_PORTAbits,3
     007B 3rrr                      1- 1362     	LGOTO	_00526_DS_
     007C                           1- 1363     _00521_DS_:
                                    1- 1364     	.line	611, "main.c"; 	NUB0();
     007C 1Drr                      1- 1365     	BCR	_PORTAbits,3
     007D 19rr                      1- 1366     	BSR	_PORTAbits,3
     007E 19rr                      1- 1367     	BSR	_PORTAbits,3
     007F 0000                      1- 1368     	nop
     0080 1Drr                      1- 1369     	BCR	_PORTAbits,3
     0081                           1- 1370     _00526_DS_:
                                    1- 1371     	.line	612, "main.c"; 	if(G5)
                                    1- 1372     	BANKSEL	_Gdata
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 0Arr                      1- 1373     	BTRSS	_Gdata,5
     0083 3rrr                      1- 1374     	LGOTO	_00530_DS_
                                    1- 1375     	.line	613, "main.c"; 	NUB1();
     0084 1Drr                      1- 1376     	BCR	_PORTAbits,3
     0085 1Drr                      1- 1377     	BCR	_PORTAbits,3
     0086 19rr                      1- 1378     	BSR	_PORTAbits,3
     0087 3rrr                      1- 1379     	LGOTO	_00535_DS_
     0088                           1- 1380     _00530_DS_:
                                    1- 1381     	.line	615, "main.c"; 	NUB0();
     0088 1Drr                      1- 1382     	BCR	_PORTAbits,3
     0089 19rr                      1- 1383     	BSR	_PORTAbits,3
     008A 19rr                      1- 1384     	BSR	_PORTAbits,3
     008B 0000                      1- 1385     	nop
     008C 1Drr                      1- 1386     	BCR	_PORTAbits,3
     008D                           1- 1387     _00535_DS_:
                                    1- 1388     	.line	616, "main.c"; 	if(G4)
                                    1- 1389     	BANKSEL	_Gdata
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 0Arr                      1- 1390     	BTRSS	_Gdata,4
     008F 3rrr                      1- 1391     	LGOTO	_00539_DS_
                                    1- 1392     	.line	617, "main.c"; 	NUB1();
     0090 1Drr                      1- 1393     	BCR	_PORTAbits,3
     0091 1Drr                      1- 1394     	BCR	_PORTAbits,3
     0092 19rr                      1- 1395     	BSR	_PORTAbits,3
     0093 3rrr                      1- 1396     	LGOTO	_00544_DS_
     0094                           1- 1397     _00539_DS_:
                                    1- 1398     	.line	619, "main.c"; 	NUB0();
     0094 1Drr                      1- 1399     	BCR	_PORTAbits,3
     0095 19rr                      1- 1400     	BSR	_PORTAbits,3
     0096 19rr                      1- 1401     	BSR	_PORTAbits,3
     0097 0000                      1- 1402     	nop
     0098 1Drr                      1- 1403     	BCR	_PORTAbits,3
     0099                           1- 1404     _00544_DS_:
                                    1- 1405     	.line	620, "main.c"; 	if(G3)
                                    1- 1406     	BANKSEL	_Gdata
     0099 rrrr                      3-   71 m1      .banksel ram_address
     009A 09rr                      1- 1407     	BTRSS	_Gdata,3
     009B 3rrr                      1- 1408     	LGOTO	_00548_DS_
                                    1- 1409     	.line	621, "main.c"; 	NUB1();
     009C 1Drr                      1- 1410     	BCR	_PORTAbits,3
     009D 1Drr                      1- 1411     	BCR	_PORTAbits,3
     009E 19rr                      1- 1412     	BSR	_PORTAbits,3
     009F 3rrr                      1- 1413     	LGOTO	_00553_DS_
     00A0                           1- 1414     _00548_DS_:
                                    1- 1415     	.line	623, "main.c"; 	NUB0();
     00A0 1Drr                      1- 1416     	BCR	_PORTAbits,3
     00A1 19rr                      1- 1417     	BSR	_PORTAbits,3
     00A2 19rr                      1- 1418     	BSR	_PORTAbits,3
     00A3 0000                      1- 1419     	nop
     00A4 1Drr                      1- 1420     	BCR	_PORTAbits,3
     00A5                           1- 1421     _00553_DS_:
                                    1- 1422     	.line	624, "main.c"; 	if(G2)
                                    1- 1423     	BANKSEL	_Gdata
     00A5 rrrr                      3-   71 m1      .banksel ram_address
     00A6 09rr                      1- 1424     	BTRSS	_Gdata,2
     00A7 3rrr                      1- 1425     	LGOTO	_00557_DS_
                                    1- 1426     	.line	625, "main.c"; 	NUB1();
     00A8 1Drr                      1- 1427     	BCR	_PORTAbits,3
     00A9 1Drr                      1- 1428     	BCR	_PORTAbits,3
     00AA 19rr                      1- 1429     	BSR	_PORTAbits,3
     00AB 3rrr                      1- 1430     	LGOTO	_00562_DS_
     00AC                           1- 1431     _00557_DS_:
                                    1- 1432     	.line	627, "main.c"; 	NUB0();
     00AC 1Drr                      1- 1433     	BCR	_PORTAbits,3
     00AD 19rr                      1- 1434     	BSR	_PORTAbits,3
     00AE 19rr                      1- 1435     	BSR	_PORTAbits,3
     00AF 0000                      1- 1436     	nop
     00B0 1Drr                      1- 1437     	BCR	_PORTAbits,3
     00B1                           1- 1438     _00562_DS_:
                                    1- 1439     	.line	628, "main.c"; 	if(G1)
                                    1- 1440     	BANKSEL	_Gdata
     00B1 rrrr                      3-   71 m1      .banksel ram_address
     00B2 08rr                      1- 1441     	BTRSS	_Gdata,1
     00B3 3rrr                      1- 1442     	LGOTO	_00566_DS_
                                    1- 1443     	.line	629, "main.c"; 	NUB1();
     00B4 1Drr                      1- 1444     	BCR	_PORTAbits,3
     00B5 1Drr                      1- 1445     	BCR	_PORTAbits,3
     00B6 19rr                      1- 1446     	BSR	_PORTAbits,3
     00B7 3rrr                      1- 1447     	LGOTO	_00571_DS_
     00B8                           1- 1448     _00566_DS_:
                                    1- 1449     	.line	631, "main.c"; 	NUB0();
     00B8 1Drr                      1- 1450     	BCR	_PORTAbits,3
     00B9 19rr                      1- 1451     	BSR	_PORTAbits,3
     00BA 19rr                      1- 1452     	BSR	_PORTAbits,3
     00BB 0000                      1- 1453     	nop
     00BC 1Drr                      1- 1454     	BCR	_PORTAbits,3
     00BD                           1- 1455     _00571_DS_:
                                    1- 1456     	.line	632, "main.c"; 	if(G0)
                                    1- 1457     	BANKSEL	_Gdata
     00BD rrrr                      3-   71 m1      .banksel ram_address
     00BE 08rr                      1- 1458     	BTRSS	_Gdata,0
     00BF 3rrr                      1- 1459     	LGOTO	_00575_DS_
                                    1- 1460     	.line	633, "main.c"; 	NUB1();
     00C0 1Drr                      1- 1461     	BCR	_PORTAbits,3
     00C1 1Drr                      1- 1462     	BCR	_PORTAbits,3
     00C2 19rr                      1- 1463     	BSR	_PORTAbits,3
     00C3 3rrr                      1- 1464     	LGOTO	_00580_DS_
     00C4                           1- 1465     _00575_DS_:
                                    1- 1466     	.line	635, "main.c"; 	NUB0();
     00C4 1Drr                      1- 1467     	BCR	_PORTAbits,3
     00C5 19rr                      1- 1468     	BSR	_PORTAbits,3
     00C6 19rr                      1- 1469     	BSR	_PORTAbits,3
     00C7 0000                      1- 1470     	nop
     00C8 1Drr                      1- 1471     	BCR	_PORTAbits,3
     00C9                           1- 1472     _00580_DS_:
                                    1- 1473     	.line	637, "main.c"; 	if(B7)
                                    1- 1474     	BANKSEL	_Bdata
     00C9 rrrr                      3-   71 m1      .banksel ram_address
     00CA 0Brr                      1- 1475     	BTRSS	_Bdata,7
     00CB 3rrr                      1- 1476     	LGOTO	_00584_DS_
                                    1- 1477     	.line	638, "main.c"; 	NUB1();
     00CC 1Drr                      1- 1478     	BCR	_PORTAbits,3
     00CD 1Drr                      1- 1479     	BCR	_PORTAbits,3
     00CE 19rr                      1- 1480     	BSR	_PORTAbits,3
     00CF 3rrr                      1- 1481     	LGOTO	_00589_DS_
     00D0                           1- 1482     _00584_DS_:
                                    1- 1483     	.line	640, "main.c"; 	NUB0();
     00D0 1Drr                      1- 1484     	BCR	_PORTAbits,3
     00D1 19rr                      1- 1485     	BSR	_PORTAbits,3
     00D2 19rr                      1- 1486     	BSR	_PORTAbits,3
     00D3 0000                      1- 1487     	nop
     00D4 1Drr                      1- 1488     	BCR	_PORTAbits,3
     00D5                           1- 1489     _00589_DS_:
                                    1- 1490     	.line	641, "main.c"; 	if(B6)
                                    1- 1491     	BANKSEL	_Bdata
     00D5 rrrr                      3-   71 m1      .banksel ram_address
     00D6 0Brr                      1- 1492     	BTRSS	_Bdata,6
     00D7 3rrr                      1- 1493     	LGOTO	_00593_DS_
                                    1- 1494     	.line	642, "main.c"; 	NUB1();
     00D8 1Drr                      1- 1495     	BCR	_PORTAbits,3
     00D9 1Drr                      1- 1496     	BCR	_PORTAbits,3
     00DA 19rr                      1- 1497     	BSR	_PORTAbits,3
     00DB 3rrr                      1- 1498     	LGOTO	_00598_DS_
     00DC                           1- 1499     _00593_DS_:
                                    1- 1500     	.line	644, "main.c"; 	NUB0();
     00DC 1Drr                      1- 1501     	BCR	_PORTAbits,3
     00DD 19rr                      1- 1502     	BSR	_PORTAbits,3
     00DE 19rr                      1- 1503     	BSR	_PORTAbits,3
     00DF 0000                      1- 1504     	nop
     00E0 1Drr                      1- 1505     	BCR	_PORTAbits,3
     00E1                           1- 1506     _00598_DS_:
                                    1- 1507     	.line	645, "main.c"; 	if(B5)
                                    1- 1508     	BANKSEL	_Bdata
     00E1 rrrr                      3-   71 m1      .banksel ram_address
     00E2 0Arr                      1- 1509     	BTRSS	_Bdata,5
     00E3 3rrr                      1- 1510     	LGOTO	_00602_DS_
                                    1- 1511     	.line	646, "main.c"; 	NUB1();
     00E4 1Drr                      1- 1512     	BCR	_PORTAbits,3
     00E5 1Drr                      1- 1513     	BCR	_PORTAbits,3
     00E6 19rr                      1- 1514     	BSR	_PORTAbits,3
     00E7 3rrr                      1- 1515     	LGOTO	_00607_DS_
     00E8                           1- 1516     _00602_DS_:
                                    1- 1517     	.line	648, "main.c"; 	NUB0();
     00E8 1Drr                      1- 1518     	BCR	_PORTAbits,3
     00E9 19rr                      1- 1519     	BSR	_PORTAbits,3
     00EA 19rr                      1- 1520     	BSR	_PORTAbits,3
     00EB 0000                      1- 1521     	nop
     00EC 1Drr                      1- 1522     	BCR	_PORTAbits,3
     00ED                           1- 1523     _00607_DS_:
                                    1- 1524     	.line	649, "main.c"; 	if(B4)
                                    1- 1525     	BANKSEL	_Bdata
     00ED rrrr                      3-   71 m1      .banksel ram_address
     00EE 0Arr                      1- 1526     	BTRSS	_Bdata,4
     00EF 3rrr                      1- 1527     	LGOTO	_00611_DS_
                                    1- 1528     	.line	650, "main.c"; 	NUB1();
     00F0 1Drr                      1- 1529     	BCR	_PORTAbits,3
     00F1 1Drr                      1- 1530     	BCR	_PORTAbits,3
     00F2 19rr                      1- 1531     	BSR	_PORTAbits,3
     00F3 3rrr                      1- 1532     	LGOTO	_00616_DS_
     00F4                           1- 1533     _00611_DS_:
                                    1- 1534     	.line	652, "main.c"; 	NUB0();
     00F4 1Drr                      1- 1535     	BCR	_PORTAbits,3
     00F5 19rr                      1- 1536     	BSR	_PORTAbits,3
     00F6 19rr                      1- 1537     	BSR	_PORTAbits,3
     00F7 0000                      1- 1538     	nop
     00F8 1Drr                      1- 1539     	BCR	_PORTAbits,3
     00F9                           1- 1540     _00616_DS_:
                                    1- 1541     	.line	653, "main.c"; 	if(B3)
                                    1- 1542     	BANKSEL	_Bdata
     00F9 rrrr                      3-   71 m1      .banksel ram_address
     00FA 09rr                      1- 1543     	BTRSS	_Bdata,3
     00FB 3rrr                      1- 1544     	LGOTO	_00620_DS_
                                    1- 1545     	.line	654, "main.c"; 	NUB1();
     00FC 1Drr                      1- 1546     	BCR	_PORTAbits,3
     00FD 1Drr                      1- 1547     	BCR	_PORTAbits,3
     00FE 19rr                      1- 1548     	BSR	_PORTAbits,3
     00FF 3rrr                      1- 1549     	LGOTO	_00625_DS_
     0100                           1- 1550     _00620_DS_:
                                    1- 1551     	.line	656, "main.c"; 	NUB0();
     0100 1Drr                      1- 1552     	BCR	_PORTAbits,3
     0101 19rr                      1- 1553     	BSR	_PORTAbits,3
     0102 19rr                      1- 1554     	BSR	_PORTAbits,3
     0103 0000                      1- 1555     	nop
     0104 1Drr                      1- 1556     	BCR	_PORTAbits,3
     0105                           1- 1557     _00625_DS_:
                                    1- 1558     	.line	657, "main.c"; 	if(B2)
                                    1- 1559     	BANKSEL	_Bdata
     0105 rrrr                      3-   71 m1      .banksel ram_address
     0106 09rr                      1- 1560     	BTRSS	_Bdata,2
     0107 3rrr                      1- 1561     	LGOTO	_00629_DS_
                                    1- 1562     	.line	658, "main.c"; 	NUB1();
     0108 1Drr                      1- 1563     	BCR	_PORTAbits,3
     0109 1Drr                      1- 1564     	BCR	_PORTAbits,3
     010A 19rr                      1- 1565     	BSR	_PORTAbits,3
     010B 3rrr                      1- 1566     	LGOTO	_00634_DS_
     010C                           1- 1567     _00629_DS_:
                                    1- 1568     	.line	660, "main.c"; 	NUB0();
     010C 1Drr                      1- 1569     	BCR	_PORTAbits,3
     010D 19rr                      1- 1570     	BSR	_PORTAbits,3
     010E 19rr                      1- 1571     	BSR	_PORTAbits,3
     010F 0000                      1- 1572     	nop
     0110 1Drr                      1- 1573     	BCR	_PORTAbits,3
     0111                           1- 1574     _00634_DS_:
                                    1- 1575     	.line	661, "main.c"; 	if(B1)
                                    1- 1576     	BANKSEL	_Bdata
     0111 rrrr                      3-   71 m1      .banksel ram_address
     0112 08rr                      1- 1577     	BTRSS	_Bdata,1
     0113 3rrr                      1- 1578     	LGOTO	_00638_DS_
                                    1- 1579     	.line	662, "main.c"; 	NUB1();
     0114 1Drr                      1- 1580     	BCR	_PORTAbits,3
     0115 1Drr                      1- 1581     	BCR	_PORTAbits,3
     0116 19rr                      1- 1582     	BSR	_PORTAbits,3
     0117 3rrr                      1- 1583     	LGOTO	_00643_DS_
     0118                           1- 1584     _00638_DS_:
                                    1- 1585     	.line	664, "main.c"; 	NUB0();
     0118 1Drr                      1- 1586     	BCR	_PORTAbits,3
     0119 19rr                      1- 1587     	BSR	_PORTAbits,3
     011A 19rr                      1- 1588     	BSR	_PORTAbits,3
     011B 0000                      1- 1589     	nop
     011C 1Drr                      1- 1590     	BCR	_PORTAbits,3
     011D                           1- 1591     _00643_DS_:
                                    1- 1592     	.line	665, "main.c"; 	if(B0)
                                    1- 1593     	BANKSEL	_Bdata
     011D rrrr                      3-   71 m1      .banksel ram_address
     011E 08rr                      1- 1594     	BTRSS	_Bdata,0
     011F 3rrr                      1- 1595     	LGOTO	_00647_DS_
                                    1- 1596     	.line	666, "main.c"; 	NUB1();
     0120 1Drr                      1- 1597     	BCR	_PORTAbits,3
     0121 1Drr                      1- 1598     	BCR	_PORTAbits,3
     0122 19rr                      1- 1599     	BSR	_PORTAbits,3
     0123 3rrr                      1- 1600     	LGOTO	_00652_DS_
     0124                           1- 1601     _00647_DS_:
                                    1- 1602     	.line	668, "main.c"; 	NUB0();
     0124 1Drr                      1- 1603     	BCR	_PORTAbits,3
     0125 19rr                      1- 1604     	BSR	_PORTAbits,3
     0126 19rr                      1- 1605     	BSR	_PORTAbits,3
     0127 0000                      1- 1606     	nop
     0128 1Drr                      1- 1607     	BCR	_PORTAbits,3
     0129                           1- 1608     _00652_DS_:
                                    1- 1609     	.line	670, "main.c"; 	PORTAbits.PA3 = 0;
     0129 1Drr                      1- 1610     	BCR	_PORTAbits,3
                                    1- 1611     	.line	671, "main.c"; 	ENI();	
     012A 0004                      1- 1612     	ENI
                                    1- 1613     	.line	672, "main.c"; 	}
                                    1- 1614     	RETURN	
     012B 0010                      3-   26 m1      ret
                                    1- 1615     ; exit point of _sendRGB
                                    1- 1617     ;***
                                    1- 1618     ;  pBlock Stats: dbName = C
                                    1- 1619     ;***
                                    1- 1620     ;has an exit
                                    1- 1621     ;; Starting pCode block
                                    1- 1622     .segment "code"; module=main, function=_Delay10Us
     0000                           1- 1624     _Delay10Us:
                                    1- 1625     ; 2 exit points
                                    1- 1626     	.line	553, "main.c"; 	NOP();
     0000 0000                      1- 1627     	nop
                                    1- 1628     	.line	554, "main.c"; 	NOP();
     0001 0000                      1- 1629     	nop
                                    1- 1630     	.line	555, "main.c"; 	NOP();
     0002 0000                      1- 1631     	nop
                                    1- 1632     	.line	556, "main.c"; 	NOP();
     0003 0000                      1- 1633     	nop
                                    1- 1634     	.line	557, "main.c"; 	NOP();
     0004 0000                      1- 1635     	nop
                                    1- 1636     	.line	558, "main.c"; 	NOP();
     0005 0000                      1- 1637     	nop
                                    1- 1638     	.line	559, "main.c"; 	}
                                    1- 1639     	RETURN	
     0006 0010                      3-   26 m1      ret
                                    1- 1640     ; exit point of _Delay10Us
                                    1- 1642     ;***
                                    1- 1643     ;  pBlock Stats: dbName = C
                                    1- 1644     ;***
                                    1- 1645     ;has an exit
                                    1- 1646     ;1 compiler assigned register :
                                    1- 1647     ;   r0x1026
                                    1- 1648     ;; Starting pCode block
                                    1- 1649     .segment "code"; module=main, function=_Delay80us
                                    1- 1651     ;local variable name mapping:
     0000                           1- 1653     _Delay80us:
                                    1- 1654     ; 2 exit points
                                    1- 1655     	.line	544, "main.c"; 	for(unsigned char i=0;i<50;i++)
                                    1- 1656     	BANKSEL	r0x1026
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1657     	CLRR	r0x1026
                                    1- 1658     ;;unsigned compare: left < lit (0x32=50), size=1
     0002                           1- 1659     _00426_DS_:
     0002 2132                      1- 1660     	MOVIA	0x32
                                    1- 1661     	BANKSEL	r0x1026
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 04rr                      1- 1662     	SUBAR	r0x1026,W
     0005 0C03                      1- 1663     	BTRSC	STATUS,0
     0006 3rrr                      1- 1664     	LGOTO	_00428_DS_
                                    1- 1665     	.line	546, "main.c"; 	if(uartFlag)
                                    1- 1666     	BANKSEL	_uartFlag
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 01rr                      1- 1667     	MOVR	_uartFlag,W
     0009 0903                      1- 1668     	BTRSS	STATUS,2
                                    1- 1669     	.line	547, "main.c"; 	return;
     000A 3rrr                      1- 1670     	LGOTO	_00428_DS_
                                    1- 1671     	.line	544, "main.c"; 	for(unsigned char i=0;i<50;i++)
                                    1- 1672     	BANKSEL	r0x1026
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 05rr                      1- 1673     	INCR	r0x1026,F
     000D 3rrr                      1- 1674     	LGOTO	_00426_DS_
     000E                           1- 1675     _00428_DS_:
                                    1- 1676     	.line	549, "main.c"; 	}
                                    1- 1677     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 1678     ; exit point of _Delay80us
                                    1- 1680     ;***
                                    1- 1681     ;  pBlock Stats: dbName = C
                                    1- 1682     ;***
                                    1- 1683     ;has an exit
                                    1- 1684     ;functions called:
                                    1- 1685     ;   _setColor
                                    1- 1686     ;   _setColor
                                    1- 1687     ;; Starting pCode block
                                    1- 1688     .segment "code"; module=main, function=_work10
     0000                           1- 1690     _work10:
                                    1- 1691     ; 2 exit points
                                    1- 1692     	.line	537, "main.c"; 	setColor(colorIndex);
                                    1- 1693     	BANKSEL	_colorIndex
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1694     	MOVR	_colorIndex,W
     0002 2rrr                      1- 1695     	LCALL	_setColor
                                    1- 1696     	.line	539, "main.c"; 	}
                                    1- 1697     	RETURN	
     0003 0010                      3-   26 m1      ret
                                    1- 1698     ; exit point of _work10
                                    1- 1700     ;***
                                    1- 1701     ;  pBlock Stats: dbName = C
                                    1- 1702     ;***
                                    1- 1703     ;has an exit
                                    1- 1704     ;functions called:
                                    1- 1705     ;   _sendtoLast
                                    1- 1706     ;   _sendtoLast
                                    1- 1707     ;7 compiler assigned registers:
                                    1- 1708     ;   r0x102D
                                    1- 1709     ;   r0x102E
                                    1- 1710     ;   r0x102F
                                    1- 1711     ;   r0x1030
                                    1- 1712     ;   r0x1031
                                    1- 1713     ;   STK01
                                    1- 1714     ;   STK00
                                    1- 1715     ;; Starting pCode block
                                    1- 1716     .segment "code"; module=main, function=_breath3
     0000                           1- 1718     _breath3:
                                    1- 1719     ; 2 exit points
                                    1- 1720     	.line	502, "main.c"; 	if(Rdata2 > 0)
                                    1- 1721     	BANKSEL	_Rdata2
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1722     	MOVR	_Rdata2,W
     0002 0D03                      1- 1723     	BTRSC	STATUS,2
     0003 3rrr                      1- 1724     	LGOTO	_00350_DS_
                                    1- 1725     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1726     ;;unsigned compare: left >= lit (0x51=81), size=1
                                    1- 1727     	.line	505, "main.c"; 	if(Rdata2 > 80)
     0004 2151                      1- 1728     	MOVIA	0x51
     0005 04rr                      1- 1729     	SUBAR	_Rdata2,W
     0006 0803                      1- 1730     	BTRSS	STATUS,0
     0007 3rrr                      1- 1731     	LGOTO	_00347_DS_
                                    1- 1732     	.line	506, "main.c"; 	Rdata2 = Rdata2-8;
     0008 21F8                      1- 1733     	MOVIA	0xf8
     0009 03rr                      1- 1734     	ADDAR	_Rdata2,F
     000A 3rrr                      1- 1735     	LGOTO	_00350_DS_
     000B                           1- 1736     _00347_DS_:
                                    1- 1737     	.line	507, "main.c"; 	else if(Gdata2 < (10 + Rdata2) && Bdata2 < (10 + Rdata2))
                                    1- 1738     	BANKSEL	_Rdata2
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 1739     	MOVR	_Rdata2,W
                                    1- 1740     	BANKSEL	r0x102D
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1- 1741     	MOVAR	r0x102D
                                    1- 1742     	BANKSEL	r0x102E
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 02rr                      1- 1743     	CLRR	r0x102E
     0011 210A                      1- 1744     	MOVIA	0x0a
                                    1- 1745     	BANKSEL	r0x102D
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 03rr                      1- 1746     	ADDAR	r0x102D,F
     0014 0803                      1- 1747     	BTRSS	STATUS,0
     0015 3rrr                      1- 1748     	LGOTO	_00002_DS_
                                    1- 1749     	BANKSEL	r0x102E
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 05rr                      1- 1750     	INCR	r0x102E,F
     0018                           1- 1751     _00002_DS_:
                                    1- 1752     	BANKSEL	_Gdata2
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1- 1753     	MOVR	_Gdata2,W
                                    1- 1754     	BANKSEL	r0x102F
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 00rr                      1- 1755     	MOVAR	r0x102F
                                    1- 1756     	BANKSEL	r0x1030
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 02rr                      1- 1757     	CLRR	r0x1030
     001E 2100                      1- 1758     	MOVIA	0x00
     001F 2580                      1- 1759     	ADDIA	0x80
                                    1- 1760     	BANKSEL	r0x1031
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1761     	MOVAR	r0x1031
                                    1- 1762     	BANKSEL	r0x102E
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1763     	MOVR	r0x102E,W
     0024 2580                      1- 1764     	ADDIA	0x80
                                    1- 1765     	BANKSEL	r0x1031
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 04rr                      1- 1766     	SUBAR	r0x1031,W
     0027 0903                      1- 1767     	BTRSS	STATUS,2
     0028 3rrr                      1- 1768     	LGOTO	_00406_DS_
                                    1- 1769     	BANKSEL	r0x102D
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1- 1770     	MOVR	r0x102D,W
                                    1- 1771     	BANKSEL	r0x102F
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 04rr                      1- 1772     	SUBAR	r0x102F,W
     002D                           1- 1773     _00406_DS_:
     002D 0C03                      1- 1774     	BTRSC	STATUS,0
     002E 3rrr                      1- 1775     	LGOTO	_00350_DS_
                                    1- 1776     	BANKSEL	_Bdata2
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1777     	MOVR	_Bdata2,W
                                    1- 1778     	BANKSEL	r0x102F
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 00rr                      1- 1779     	MOVAR	r0x102F
                                    1- 1780     	BANKSEL	r0x1030
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 02rr                      1- 1781     	CLRR	r0x1030
     0035 2100                      1- 1782     	MOVIA	0x00
     0036 2580                      1- 1783     	ADDIA	0x80
                                    1- 1784     	BANKSEL	r0x1031
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 00rr                      1- 1785     	MOVAR	r0x1031
                                    1- 1786     	BANKSEL	r0x102E
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1- 1787     	MOVR	r0x102E,W
     003B 2580                      1- 1788     	ADDIA	0x80
                                    1- 1789     	BANKSEL	r0x1031
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 04rr                      1- 1790     	SUBAR	r0x1031,W
     003E 0903                      1- 1791     	BTRSS	STATUS,2
     003F 3rrr                      1- 1792     	LGOTO	_00407_DS_
                                    1- 1793     	BANKSEL	r0x102D
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 01rr                      1- 1794     	MOVR	r0x102D,W
                                    1- 1795     	BANKSEL	r0x102F
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 04rr                      1- 1796     	SUBAR	r0x102F,W
     0044                           1- 1797     _00407_DS_:
     0044 0C03                      1- 1798     	BTRSC	STATUS,0
     0045 3rrr                      1- 1799     	LGOTO	_00350_DS_
                                    1- 1800     	.line	509, "main.c"; 	--Rdata2;
                                    1- 1801     	BANKSEL	_Rdata2
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 06rr                      1- 1802     	DECR	_Rdata2,F
     0048                           1- 1803     _00350_DS_:
                                    1- 1804     	.line	513, "main.c"; 	if(Gdata2 > 0)
                                    1- 1805     	BANKSEL	_Gdata2
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 01rr                      1- 1806     	MOVR	_Gdata2,W
     004A 0D03                      1- 1807     	BTRSC	STATUS,2
     004B 3rrr                      1- 1808     	LGOTO	_00358_DS_
                                    1- 1809     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1810     ;;unsigned compare: left >= lit (0x51=81), size=1
                                    1- 1811     	.line	516, "main.c"; 	if(Gdata2 > 80)
     004C 2151                      1- 1812     	MOVIA	0x51
     004D 04rr                      1- 1813     	SUBAR	_Gdata2,W
     004E 0803                      1- 1814     	BTRSS	STATUS,0
     004F 3rrr                      1- 1815     	LGOTO	_00355_DS_
                                    1- 1816     	.line	517, "main.c"; 	Gdata2 = Gdata2-8;
     0050 21F8                      1- 1817     	MOVIA	0xf8
     0051 03rr                      1- 1818     	ADDAR	_Gdata2,F
     0052 3rrr                      1- 1819     	LGOTO	_00358_DS_
     0053                           1- 1820     _00355_DS_:
                                    1- 1821     	.line	518, "main.c"; 	else if(Rdata2 < (10 + Gdata2) && Bdata2 < (10 + Gdata2))
                                    1- 1822     	BANKSEL	_Gdata2
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 01rr                      1- 1823     	MOVR	_Gdata2,W
                                    1- 1824     	BANKSEL	r0x102D
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 00rr                      1- 1825     	MOVAR	r0x102D
                                    1- 1826     	BANKSEL	r0x102E
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 02rr                      1- 1827     	CLRR	r0x102E
     0059 210A                      1- 1828     	MOVIA	0x0a
                                    1- 1829     	BANKSEL	r0x102D
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 03rr                      1- 1830     	ADDAR	r0x102D,F
     005C 0803                      1- 1831     	BTRSS	STATUS,0
     005D 3rrr                      1- 1832     	LGOTO	_00003_DS_
                                    1- 1833     	BANKSEL	r0x102E
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 05rr                      1- 1834     	INCR	r0x102E,F
     0060                           1- 1835     _00003_DS_:
                                    1- 1836     	BANKSEL	_Rdata2
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 01rr                      1- 1837     	MOVR	_Rdata2,W
                                    1- 1838     	BANKSEL	r0x102F
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 00rr                      1- 1839     	MOVAR	r0x102F
                                    1- 1840     	BANKSEL	r0x1030
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 02rr                      1- 1841     	CLRR	r0x1030
     0066 2100                      1- 1842     	MOVIA	0x00
     0067 2580                      1- 1843     	ADDIA	0x80
                                    1- 1844     	BANKSEL	r0x1031
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 00rr                      1- 1845     	MOVAR	r0x1031
                                    1- 1846     	BANKSEL	r0x102E
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 01rr                      1- 1847     	MOVR	r0x102E,W
     006C 2580                      1- 1848     	ADDIA	0x80
                                    1- 1849     	BANKSEL	r0x1031
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 04rr                      1- 1850     	SUBAR	r0x1031,W
     006F 0903                      1- 1851     	BTRSS	STATUS,2
     0070 3rrr                      1- 1852     	LGOTO	_00409_DS_
                                    1- 1853     	BANKSEL	r0x102D
     0071 rrrr                      3-   71 m1      .banksel ram_address
     0072 01rr                      1- 1854     	MOVR	r0x102D,W
                                    1- 1855     	BANKSEL	r0x102F
     0073 rrrr                      3-   71 m1      .banksel ram_address
     0074 04rr                      1- 1856     	SUBAR	r0x102F,W
     0075                           1- 1857     _00409_DS_:
     0075 0C03                      1- 1858     	BTRSC	STATUS,0
     0076 3rrr                      1- 1859     	LGOTO	_00358_DS_
                                    1- 1860     	BANKSEL	_Bdata2
     0077 rrrr                      3-   71 m1      .banksel ram_address
     0078 01rr                      1- 1861     	MOVR	_Bdata2,W
                                    1- 1862     	BANKSEL	r0x102F
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 00rr                      1- 1863     	MOVAR	r0x102F
                                    1- 1864     	BANKSEL	r0x1030
     007B rrrr                      3-   71 m1      .banksel ram_address
     007C 02rr                      1- 1865     	CLRR	r0x1030
     007D 2100                      1- 1866     	MOVIA	0x00
     007E 2580                      1- 1867     	ADDIA	0x80
                                    1- 1868     	BANKSEL	r0x1031
     007F rrrr                      3-   71 m1      .banksel ram_address
     0080 00rr                      1- 1869     	MOVAR	r0x1031
                                    1- 1870     	BANKSEL	r0x102E
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 01rr                      1- 1871     	MOVR	r0x102E,W
     0083 2580                      1- 1872     	ADDIA	0x80
                                    1- 1873     	BANKSEL	r0x1031
     0084 rrrr                      3-   71 m1      .banksel ram_address
     0085 04rr                      1- 1874     	SUBAR	r0x1031,W
     0086 0903                      1- 1875     	BTRSS	STATUS,2
     0087 3rrr                      1- 1876     	LGOTO	_00410_DS_
                                    1- 1877     	BANKSEL	r0x102D
     0088 rrrr                      3-   71 m1      .banksel ram_address
     0089 01rr                      1- 1878     	MOVR	r0x102D,W
                                    1- 1879     	BANKSEL	r0x102F
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 04rr                      1- 1880     	SUBAR	r0x102F,W
     008C                           1- 1881     _00410_DS_:
     008C 0C03                      1- 1882     	BTRSC	STATUS,0
     008D 3rrr                      1- 1883     	LGOTO	_00358_DS_
                                    1- 1884     	.line	519, "main.c"; 	--Gdata2;
                                    1- 1885     	BANKSEL	_Gdata2
     008E rrrr                      3-   71 m1      .banksel ram_address
     008F 06rr                      1- 1886     	DECR	_Gdata2,F
     0090                           1- 1887     _00358_DS_:
                                    1- 1888     	.line	522, "main.c"; 	if(Bdata2 > 0)
                                    1- 1889     	BANKSEL	_Bdata2
     0090 rrrr                      3-   71 m1      .banksel ram_address
     0091 01rr                      1- 1890     	MOVR	_Bdata2,W
     0092 0D03                      1- 1891     	BTRSC	STATUS,2
     0093 3rrr                      1- 1892     	LGOTO	_00366_DS_
                                    1- 1893     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1894     ;;unsigned compare: left >= lit (0x51=81), size=1
                                    1- 1895     	.line	525, "main.c"; 	if(Bdata2 > 80)
     0094 2151                      1- 1896     	MOVIA	0x51
     0095 04rr                      1- 1897     	SUBAR	_Bdata2,W
     0096 0803                      1- 1898     	BTRSS	STATUS,0
     0097 3rrr                      1- 1899     	LGOTO	_00363_DS_
                                    1- 1900     	.line	526, "main.c"; 	Bdata2 = Bdata2-8;
     0098 21F8                      1- 1901     	MOVIA	0xf8
     0099 03rr                      1- 1902     	ADDAR	_Bdata2,F
     009A 3rrr                      1- 1903     	LGOTO	_00366_DS_
     009B                           1- 1904     _00363_DS_:
                                    1- 1905     	.line	527, "main.c"; 	else if(Rdata2 < (10 + Bdata2) && Gdata2 < (10 + Bdata2))
                                    1- 1906     	BANKSEL	_Bdata2
     009B rrrr                      3-   71 m1      .banksel ram_address
     009C 01rr                      1- 1907     	MOVR	_Bdata2,W
                                    1- 1908     	BANKSEL	r0x102D
     009D rrrr                      3-   71 m1      .banksel ram_address
     009E 00rr                      1- 1909     	MOVAR	r0x102D
                                    1- 1910     	BANKSEL	r0x102E
     009F rrrr                      3-   71 m1      .banksel ram_address
     00A0 02rr                      1- 1911     	CLRR	r0x102E
     00A1 210A                      1- 1912     	MOVIA	0x0a
                                    1- 1913     	BANKSEL	r0x102D
     00A2 rrrr                      3-   71 m1      .banksel ram_address
     00A3 03rr                      1- 1914     	ADDAR	r0x102D,F
     00A4 0803                      1- 1915     	BTRSS	STATUS,0
     00A5 3rrr                      1- 1916     	LGOTO	_00004_DS_
                                    1- 1917     	BANKSEL	r0x102E
     00A6 rrrr                      3-   71 m1      .banksel ram_address
     00A7 05rr                      1- 1918     	INCR	r0x102E,F
     00A8                           1- 1919     _00004_DS_:
                                    1- 1920     	BANKSEL	_Rdata2
     00A8 rrrr                      3-   71 m1      .banksel ram_address
     00A9 01rr                      1- 1921     	MOVR	_Rdata2,W
                                    1- 1922     	BANKSEL	r0x102F
     00AA rrrr                      3-   71 m1      .banksel ram_address
     00AB 00rr                      1- 1923     	MOVAR	r0x102F
                                    1- 1924     	BANKSEL	r0x1030
     00AC rrrr                      3-   71 m1      .banksel ram_address
     00AD 02rr                      1- 1925     	CLRR	r0x1030
     00AE 2100                      1- 1926     	MOVIA	0x00
     00AF 2580                      1- 1927     	ADDIA	0x80
                                    1- 1928     	BANKSEL	r0x1031
     00B0 rrrr                      3-   71 m1      .banksel ram_address
     00B1 00rr                      1- 1929     	MOVAR	r0x1031
                                    1- 1930     	BANKSEL	r0x102E
     00B2 rrrr                      3-   71 m1      .banksel ram_address
     00B3 01rr                      1- 1931     	MOVR	r0x102E,W
     00B4 2580                      1- 1932     	ADDIA	0x80
                                    1- 1933     	BANKSEL	r0x1031
     00B5 rrrr                      3-   71 m1      .banksel ram_address
     00B6 04rr                      1- 1934     	SUBAR	r0x1031,W
     00B7 0903                      1- 1935     	BTRSS	STATUS,2
     00B8 3rrr                      1- 1936     	LGOTO	_00412_DS_
                                    1- 1937     	BANKSEL	r0x102D
     00B9 rrrr                      3-   71 m1      .banksel ram_address
     00BA 01rr                      1- 1938     	MOVR	r0x102D,W
                                    1- 1939     	BANKSEL	r0x102F
     00BB rrrr                      3-   71 m1      .banksel ram_address
     00BC 04rr                      1- 1940     	SUBAR	r0x102F,W
     00BD                           1- 1941     _00412_DS_:
     00BD 0C03                      1- 1942     	BTRSC	STATUS,0
     00BE 3rrr                      1- 1943     	LGOTO	_00366_DS_
                                    1- 1944     	BANKSEL	_Gdata2
     00BF rrrr                      3-   71 m1      .banksel ram_address
     00C0 01rr                      1- 1945     	MOVR	_Gdata2,W
                                    1- 1946     	BANKSEL	r0x102F
     00C1 rrrr                      3-   71 m1      .banksel ram_address
     00C2 00rr                      1- 1947     	MOVAR	r0x102F
                                    1- 1948     	BANKSEL	r0x1030
     00C3 rrrr                      3-   71 m1      .banksel ram_address
     00C4 02rr                      1- 1949     	CLRR	r0x1030
     00C5 2100                      1- 1950     	MOVIA	0x00
     00C6 2580                      1- 1951     	ADDIA	0x80
                                    1- 1952     	BANKSEL	r0x1031
     00C7 rrrr                      3-   71 m1      .banksel ram_address
     00C8 00rr                      1- 1953     	MOVAR	r0x1031
                                    1- 1954     	BANKSEL	r0x102E
     00C9 rrrr                      3-   71 m1      .banksel ram_address
     00CA 01rr                      1- 1955     	MOVR	r0x102E,W
     00CB 2580                      1- 1956     	ADDIA	0x80
                                    1- 1957     	BANKSEL	r0x1031
     00CC rrrr                      3-   71 m1      .banksel ram_address
     00CD 04rr                      1- 1958     	SUBAR	r0x1031,W
     00CE 0903                      1- 1959     	BTRSS	STATUS,2
     00CF 3rrr                      1- 1960     	LGOTO	_00413_DS_
                                    1- 1961     	BANKSEL	r0x102D
     00D0 rrrr                      3-   71 m1      .banksel ram_address
     00D1 01rr                      1- 1962     	MOVR	r0x102D,W
                                    1- 1963     	BANKSEL	r0x102F
     00D2 rrrr                      3-   71 m1      .banksel ram_address
     00D3 04rr                      1- 1964     	SUBAR	r0x102F,W
     00D4                           1- 1965     _00413_DS_:
     00D4 0C03                      1- 1966     	BTRSC	STATUS,0
     00D5 3rrr                      1- 1967     	LGOTO	_00366_DS_
                                    1- 1968     	.line	528, "main.c"; 	--Bdata2;
                                    1- 1969     	BANKSEL	_Bdata2
     00D6 rrrr                      3-   71 m1      .banksel ram_address
     00D7 06rr                      1- 1970     	DECR	_Bdata2,F
     00D8                           1- 1971     _00366_DS_:
                                    1- 1972     	.line	530, "main.c"; 	sendtoLast(Rdata2,Gdata2,Bdata2);
                                    1- 1973     	BANKSEL	_Bdata2
     00D8 rrrr                      3-   71 m1      .banksel ram_address
     00D9 01rr                      1- 1974     	MOVR	_Bdata2,W
     00DA 00rr                      1- 1975     	MOVAR	STK01
                                    1- 1976     	BANKSEL	_Gdata2
     00DB rrrr                      3-   71 m1      .banksel ram_address
     00DC 01rr                      1- 1977     	MOVR	_Gdata2,W
     00DD 00rr                      1- 1978     	MOVAR	STK00
                                    1- 1979     	BANKSEL	_Rdata2
     00DE rrrr                      3-   71 m1      .banksel ram_address
     00DF 01rr                      1- 1980     	MOVR	_Rdata2,W
     00E0 2rrr                      1- 1981     	LCALL	_sendtoLast
                                    1- 1982     	.line	531, "main.c"; 	}
                                    1- 1983     	RETURN	
     00E1 0010                      3-   26 m1      ret
                                    1- 1984     ; exit point of _breath3
                                    1- 1986     ;***
                                    1- 1987     ;  pBlock Stats: dbName = C
                                    1- 1988     ;***
                                    1- 1989     ;has an exit
                                    1- 1990     ;functions called:
                                    1- 1991     ;   __divuint
                                    1- 1992     ;   _breath3
                                    1- 1993     ;   _sendtoLast
                                    1- 1994     ;   __divuint
                                    1- 1995     ;   _breath3
                                    1- 1996     ;   _sendtoLast
                                    1- 1997     ;5 compiler assigned registers:
                                    1- 1998     ;   STK02
                                    1- 1999     ;   STK01
                                    1- 2000     ;   STK00
                                    1- 2001     ;   r0x1032
                                    1- 2002     ;   r0x1033
                                    1- 2003     ;; Starting pCode block
                                    1- 2004     .segment "code"; module=main, function=_work9
     0000                           1- 2006     _work9:
                                    1- 2007     ; 2 exit points
                                    1- 2008     	.line	476, "main.c"; 	duty = timeCount / 10;
     0000 210A                      1- 2009     	MOVIA	0x0a
     0001 00rr                      1- 2010     	MOVAR	STK02
     0002 2100                      1- 2011     	MOVIA	0x00
     0003 00rr                      1- 2012     	MOVAR	STK01
                                    1- 2013     	BANKSEL	_timeCount
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 2014     	MOVR	_timeCount,W
     0006 00rr                      1- 2015     	MOVAR	STK00
     0007 01rr                      1- 2016     	MOVR	(_timeCount + 1),W
     0008 2rrr                      1- 2017     	LCALL	__divuint
                                    1- 2018     ;;1	MOVAR	r0x1032
     0009 01rr                      1- 2019     	MOVR	STK00,W
                                    1- 2020     ;;1	MOVAR	r0x1033
                                    1- 2021     	BANKSEL	_duty
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1- 2022     	MOVAR	_duty
                                    1- 2023     	.line	477, "main.c"; 	if(preduty != duty)
                                    1- 2024     	BANKSEL	_preduty
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 12rr                      1- 2025     	XORAR	_preduty,W
     000E 0D03                      1- 2026     	BTRSC	STATUS,2
     000F 3rrr                      1- 2027     	LGOTO	_00331_DS_
                                    1- 2028     	.line	479, "main.c"; 	preduty = duty;
                                    1- 2029     	BANKSEL	_duty
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 2030     	MOVR	_duty,W
                                    1- 2031     	BANKSEL	_preduty
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 00rr                      1- 2032     	MOVAR	_preduty
                                    1- 2033     	.line	480, "main.c"; 	breath3();
     0014 2rrr                      1- 2034     	LCALL	_breath3
     0015 3rrr                      1- 2035     	LGOTO	_00333_DS_
     0016                           1- 2036     _00331_DS_:
                                    1- 2037     	.line	484, "main.c"; 	sendtoLast(Rdata2,Gdata2,Bdata2);
                                    1- 2038     	BANKSEL	_Bdata2
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1- 2039     	MOVR	_Bdata2,W
     0018 00rr                      1- 2040     	MOVAR	STK01
                                    1- 2041     	BANKSEL	_Gdata2
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 2042     	MOVR	_Gdata2,W
     001B 00rr                      1- 2043     	MOVAR	STK00
                                    1- 2044     	BANKSEL	_Rdata2
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1- 2045     	MOVR	_Rdata2,W
     001E 2rrr                      1- 2046     	LCALL	_sendtoLast
     001F                           1- 2047     _00333_DS_:
                                    1- 2048     	.line	496, "main.c"; 	}
                                    1- 2049     	RETURN	
     001F 0010                      3-   26 m1      ret
                                    1- 2050     ; exit point of _work9
                                    1- 2052     ;***
                                    1- 2053     ;  pBlock Stats: dbName = C
                                    1- 2054     ;***
                                    1- 2055     ;has an exit
                                    1- 2056     ;functions called:
                                    1- 2057     ;   _sendtoLast
                                    1- 2058     ;   _sendtoLast
                                    1- 2059     ;   _sendtoLast
                                    1- 2060     ;   _sendtoLast
                                    1- 2061     ;   _sendtoLast
                                    1- 2062     ;   _sendtoLast
                                    1- 2063     ;   _sendtoLast
                                    1- 2064     ;   _sendtoLast
                                    1- 2065     ;   _sendtoLast
                                    1- 2066     ;   _sendtoLast
                                    1- 2067     ;   _sendtoLast
                                    1- 2068     ;   _sendtoLast
                                    1- 2069     ;   _sendtoLast
                                    1- 2070     ;   _sendtoLast
                                    1- 2071     ;   _sendtoLast
                                    1- 2072     ;   _sendtoLast
                                    1- 2073     ;   _sendtoLast
                                    1- 2074     ;   _sendtoLast
                                    1- 2075     ;   _sendtoLast
                                    1- 2076     ;   _sendtoLast
                                    1- 2077     ;3 compiler assigned registers:
                                    1- 2078     ;   r0x102C
                                    1- 2079     ;   STK01
                                    1- 2080     ;   STK00
                                    1- 2081     ;; Starting pCode block
                                    1- 2082     .segment "code"; module=main, function=_setColor
                                    1- 2084     ;local variable name mapping:
     0000                           1- 2086     _setColor:
                                    1- 2087     ; 2 exit points
                                    1- 2088     	.line	423, "main.c"; 	void setColor(u8t cindex)
                                    1- 2089     	BANKSEL	r0x102C
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 2090     	MOVAR	r0x102C
                                    1- 2091     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 2092     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 2093     	.line	425, "main.c"; 	switch(cindex)
     0002 2109                      1- 2094     	MOVIA	0x09
     0003 04rr                      1- 2095     	SUBAR	r0x102C,W
     0004 0C03                      1- 2096     	BTRSC	STATUS,0
     0005 3rrr                      1- 2097     	LGOTO	_00314_DS_
     0006 21rr                      1- 2098     	MOVIA	((_00325_DS_ >> 8) & 0xff)
     0007 008A                      1- 2099     	MOVAR	PCHBUF
     0008 01rr                      1- 2100     	MOVR	r0x102C,W
     0009 25rr                      1- 2101     	ADDIA	_00325_DS_
     000A 0C03                      1- 2102     	BTRSC	STATUS,0
     000B 058A                      1- 2103     	INCR	PCHBUF,F
     000C 0082                      1- 2104     	MOVAR	PCL
     000D                           1- 2105     _00325_DS_:
     000D 3rrr                      1- 2106     	LGOTO	_00302_DS_
     000E 3rrr                      1- 2107     	LGOTO	_00306_DS_
     000F 3rrr                      1- 2108     	LGOTO	_00307_DS_
     0010 3rrr                      1- 2109     	LGOTO	_00308_DS_
     0011 3rrr                      1- 2110     	LGOTO	_00309_DS_
     0012 3rrr                      1- 2111     	LGOTO	_00310_DS_
     0013 3rrr                      1- 2112     	LGOTO	_00311_DS_
     0014 3rrr                      1- 2113     	LGOTO	_00312_DS_
     0015 3rrr                      1- 2114     	LGOTO	_00313_DS_
                                    1- 2115     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2116     ;;unsigned compare: left >= lit (0xB=11), size=1
     0016                           1- 2117     _00302_DS_:
                                    1- 2118     	.line	428, "main.c"; 	if(offFlag > 10)
     0016 210B                      1- 2119     	MOVIA	0x0b
                                    1- 2120     	BANKSEL	_offFlag
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 04rr                      1- 2121     	SUBAR	_offFlag,W
     0019 0803                      1- 2122     	BTRSS	STATUS,0
     001A 3rrr                      1- 2123     	LGOTO	_00304_DS_
                                    1- 2124     	.line	430, "main.c"; 	sendtoLast(COLOR0);
     001B 2100                      1- 2125     	MOVIA	0x00
     001C 00rr                      1- 2126     	MOVAR	STK01
     001D 00rr                      1- 2127     	MOVAR	STK00
     001E 2rrr                      1- 2128     	LCALL	_sendtoLast
                                    1- 2129     	.line	431, "main.c"; 	offFlag = 0;
                                    1- 2130     	BANKSEL	_offFlag
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 02rr                      1- 2131     	CLRR	_offFlag
                                    1- 2132     	.line	432, "main.c"; 	colorIndex = 0;
                                    1- 2133     	BANKSEL	_colorIndex
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 02rr                      1- 2134     	CLRR	_colorIndex
     0023 3rrr                      1- 2135     	LGOTO	_00316_DS_
     0024                           1- 2136     _00304_DS_:
                                    1- 2137     	.line	436, "main.c"; 	++offFlag;
                                    1- 2138     	BANKSEL	_offFlag
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 05rr                      1- 2139     	INCR	_offFlag,F
                                    1- 2140     	.line	438, "main.c"; 	break;
     0026 3rrr                      1- 2141     	LGOTO	_00316_DS_
     0027                           1- 2142     _00306_DS_:
                                    1- 2143     	.line	440, "main.c"; 	sendtoLast(COLOR1);
     0027 2100                      1- 2144     	MOVIA	0x00
     0028 00rr                      1- 2145     	MOVAR	STK01
     0029 21FF                      1- 2146     	MOVIA	0xff
     002A 00rr                      1- 2147     	MOVAR	STK00
     002B 2100                      1- 2148     	MOVIA	0x00
     002C 2rrr                      1- 2149     	LCALL	_sendtoLast
                                    1- 2150     	.line	441, "main.c"; 	break;
     002D 3rrr                      1- 2151     	LGOTO	_00316_DS_
     002E                           1- 2152     _00307_DS_:
                                    1- 2153     	.line	443, "main.c"; 	sendtoLast(COLOR2);
     002E 2100                      1- 2154     	MOVIA	0x00
     002F 00rr                      1- 2155     	MOVAR	STK01
     0030 21FF                      1- 2156     	MOVIA	0xff
     0031 00rr                      1- 2157     	MOVAR	STK00
     0032 2125                      1- 2158     	MOVIA	0x25
     0033 2rrr                      1- 2159     	LCALL	_sendtoLast
                                    1- 2160     	.line	444, "main.c"; 	break;
     0034 3rrr                      1- 2161     	LGOTO	_00316_DS_
     0035                           1- 2162     _00308_DS_:
                                    1- 2163     	.line	446, "main.c"; 	sendtoLast(COLOR3);
     0035 2100                      1- 2164     	MOVIA	0x00
     0036 00rr                      1- 2165     	MOVAR	STK01
     0037 21FF                      1- 2166     	MOVIA	0xff
     0038 00rr                      1- 2167     	MOVAR	STK00
     0039 2rrr                      1- 2168     	LCALL	_sendtoLast
                                    1- 2169     	.line	447, "main.c"; 	break;
     003A 3rrr                      1- 2170     	LGOTO	_00316_DS_
     003B                           1- 2171     _00309_DS_:
                                    1- 2172     	.line	449, "main.c"; 	sendtoLast(COLOR4);
     003B 2100                      1- 2173     	MOVIA	0x00
     003C 00rr                      1- 2174     	MOVAR	STK01
     003D 00rr                      1- 2175     	MOVAR	STK00
     003E 21FF                      1- 2176     	MOVIA	0xff
     003F 2rrr                      1- 2177     	LCALL	_sendtoLast
                                    1- 2178     	.line	450, "main.c"; 	break;
     0040 3rrr                      1- 2179     	LGOTO	_00316_DS_
     0041                           1- 2180     _00310_DS_:
                                    1- 2181     	.line	452, "main.c"; 	sendtoLast(COLOR5);
     0041 21FF                      1- 2182     	MOVIA	0xff
     0042 00rr                      1- 2183     	MOVAR	STK01
     0043 2100                      1- 2184     	MOVIA	0x00
     0044 00rr                      1- 2185     	MOVAR	STK00
     0045 21FF                      1- 2186     	MOVIA	0xff
     0046 2rrr                      1- 2187     	LCALL	_sendtoLast
                                    1- 2188     	.line	453, "main.c"; 	break;
     0047 3rrr                      1- 2189     	LGOTO	_00316_DS_
     0048                           1- 2190     _00311_DS_:
                                    1- 2191     	.line	455, "main.c"; 	sendtoLast(COLOR6);
     0048 21FF                      1- 2192     	MOVIA	0xff
     0049 00rr                      1- 2193     	MOVAR	STK01
     004A 2100                      1- 2194     	MOVIA	0x00
     004B 00rr                      1- 2195     	MOVAR	STK00
     004C 2rrr                      1- 2196     	LCALL	_sendtoLast
                                    1- 2197     	.line	456, "main.c"; 	break;
     004D 3rrr                      1- 2198     	LGOTO	_00316_DS_
     004E                           1- 2199     _00312_DS_:
                                    1- 2200     	.line	458, "main.c"; 	sendtoLast(COLOR7);
     004E 21FF                      1- 2201     	MOVIA	0xff
     004F 00rr                      1- 2202     	MOVAR	STK01
     0050 00rr                      1- 2203     	MOVAR	STK00
     0051 2100                      1- 2204     	MOVIA	0x00
     0052 2rrr                      1- 2205     	LCALL	_sendtoLast
                                    1- 2206     	.line	459, "main.c"; 	break;
     0053 3rrr                      1- 2207     	LGOTO	_00316_DS_
     0054                           1- 2208     _00313_DS_:
                                    1- 2209     	.line	461, "main.c"; 	sendtoLast(COLOR8);
     0054 21FF                      1- 2210     	MOVIA	0xff
     0055 00rr                      1- 2211     	MOVAR	STK01
     0056 00rr                      1- 2212     	MOVAR	STK00
     0057 2rrr                      1- 2213     	LCALL	_sendtoLast
                                    1- 2214     	.line	462, "main.c"; 	break;
     0058 3rrr                      1- 2215     	LGOTO	_00316_DS_
     0059                           1- 2216     _00314_DS_:
                                    1- 2217     	.line	464, "main.c"; 	sendtoLast(COLOR0);
     0059 2100                      1- 2218     	MOVIA	0x00
     005A 00rr                      1- 2219     	MOVAR	STK01
     005B 00rr                      1- 2220     	MOVAR	STK00
     005C 2rrr                      1- 2221     	LCALL	_sendtoLast
     005D                           1- 2222     _00316_DS_:
                                    1- 2223     	.line	468, "main.c"; 	}
                                    1- 2224     	RETURN	
     005D 0010                      3-   26 m1      ret
                                    1- 2225     ; exit point of _setColor
                                    1- 2227     ;***
                                    1- 2228     ;  pBlock Stats: dbName = C
                                    1- 2229     ;***
                                    1- 2230     ;has an exit
                                    1- 2231     ;functions called:
                                    1- 2232     ;   _setColor
                                    1- 2233     ;   _work9
                                    1- 2234     ;   _work10
                                    1- 2235     ;   _setColor
                                    1- 2236     ;   _work9
                                    1- 2237     ;   _work10
                                    1- 2238     ;; Starting pCode block
                                    1- 2239     .segment "code"; module=main, function=_workCtr
     0000                           1- 2241     _workCtr:
                                    1- 2242     ; 2 exit points
                                    1- 2243     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2244     ;;unsigned compare: left >= lit (0xB=11), size=1
                                    1- 2245     	.line	407, "main.c"; 	if(workStep > 10)
     0000 210B                      1- 2246     	MOVIA	0x0b
                                    1- 2247     	BANKSEL	_workStep
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 2248     	SUBAR	_workStep,W
     0003 0C03                      1- 2249     	BTRSC	STATUS,0
                                    1- 2250     	.line	408, "main.c"; 	return;
     0004 3rrr                      1- 2251     	LGOTO	_00297_DS_
                                    1- 2252     	.line	409, "main.c"; 	if(workStep < 9)
     0005 2109                      1- 2253     	MOVIA	0x09
     0006 04rr                      1- 2254     	SUBAR	_workStep,W
     0007 0C03                      1- 2255     	BTRSC	STATUS,0
     0008 3rrr                      1- 2256     	LGOTO	_00295_DS_
                                    1- 2257     	.line	411, "main.c"; 	setColor(workStep);
     0009 01rr                      1- 2258     	MOVR	_workStep,W
     000A 2rrr                      1- 2259     	LCALL	_setColor
     000B 3rrr                      1- 2260     	LGOTO	_00297_DS_
     000C                           1- 2261     _00295_DS_:
                                    1- 2262     	.line	413, "main.c"; 	else if(workStep == 9)
                                    1- 2263     	BANKSEL	_workStep
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1- 2264     	MOVR	_workStep,W
     000E 2409                      1- 2265     	XORIA	0x09
     000F 0903                      1- 2266     	BTRSS	STATUS,2
     0010 3rrr                      1- 2267     	LGOTO	_00292_DS_
                                    1- 2268     	.line	415, "main.c"; 	work9();
     0011 2rrr                      1- 2269     	LCALL	_work9
     0012 3rrr                      1- 2270     	LGOTO	_00297_DS_
     0013                           1- 2271     _00292_DS_:
                                    1- 2272     	.line	419, "main.c"; 	work10();
     0013 2rrr                      1- 2273     	LCALL	_work10
     0014                           1- 2274     _00297_DS_:
                                    1- 2275     	.line	421, "main.c"; 	}
                                    1- 2276     	RETURN	
     0014 0010                      3-   26 m1      ret
                                    1- 2277     ; exit point of _workCtr
                                    1- 2279     ;***
                                    1- 2280     ;  pBlock Stats: dbName = C
                                    1- 2281     ;***
                                    1- 2282     ;has an exit
                                    1- 2283     ;2 compiler assigned registers:
                                    1- 2284     ;   r0x1034
                                    1- 2285     ;   r0x1035
                                    1- 2286     ;; Starting pCode block
                                    1- 2287     .segment "code"; module=main, function=_delay
                                    1- 2289     ;local variable name mapping:
     0000                           1- 2291     _delay:
                                    1- 2292     ; 2 exit points
                                    1- 2293     	.line	399, "main.c"; 	void delay(u8t time)
                                    1- 2294     	BANKSEL	r0x1034
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 2295     	MOVAR	r0x1034
     0002                           1- 2296     _00284_DS_:
                                    1- 2297     	.line	401, "main.c"; 	while(--time);
                                    1- 2298     	BANKSEL	r0x1034
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 06rr                      1- 2299     	DECR	r0x1034,W
                                    1- 2300     	BANKSEL	r0x1035
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1- 2301     	MOVAR	r0x1035
                                    1- 2302     	BANKSEL	r0x1034
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1- 2303     	MOVAR	r0x1034
                                    1- 2304     	BANKSEL	r0x1035
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 01rr                      1- 2305     	MOVR	r0x1035,W
     000A 0903                      1- 2306     	BTRSS	STATUS,2
     000B 3rrr                      1- 2307     	LGOTO	_00284_DS_
                                    1- 2308     	.line	402, "main.c"; 	}
                                    1- 2309     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1- 2310     ; exit point of _delay
                                    1- 2312     ;***
                                    1- 2313     ;  pBlock Stats: dbName = C
                                    1- 2314     ;***
                                    1- 2315     ;has an exit
                                    1- 2316     ;functions called:
                                    1- 2317     ;   _WaitTF0
                                    1- 2318     ;   _WaitTF0
                                    1- 2319     ;   _WaitTF0
                                    1- 2320     ;   _WaitTF0
                                    1- 2321     ;   _WaitTF0
                                    1- 2322     ;   _WaitTF0
                                    1- 2323     ;3 compiler assigned registers:
                                    1- 2324     ;   r0x1036
                                    1- 2325     ;   r0x1037
                                    1- 2326     ;   r0x1038
                                    1- 2327     ;; Starting pCode block
                                    1- 2328     .segment "code"; module=main, function=_WByte
                                    1- 2330     ;local variable name mapping:
     0000                           1- 2333     _WByte:
                                    1- 2334     ; 2 exit points
                                    1- 2335     	.line	359, "main.c"; 	void WByte(u8t input) {
                                    1- 2336     	BANKSEL	r0x1036
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 2337     	MOVAR	r0x1036
                                    1- 2338     	.line	362, "main.c"; 	SEND_FLAG = 1;
     0002 2101                      1- 2339     	MOVIA	0x01
                                    1- 2340     	BANKSEL	_SEND_FLAG
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 2341     	MOVAR	_SEND_FLAG
                                    1- 2342     	.line	364, "main.c"; 	TMRH = 0;
     0005 02rr                      1- 2343     	CLRR	_TMRH
                                    1- 2344     	.line	365, "main.c"; 	TMR1 = 104;
     0006 2168                      1- 2345     	MOVIA	0x68
     0007 00rr                      1- 2346     	SFUN	_TMR1
                                    1- 2347     	.line	366, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload; //���Timer1
     0008 2103                      1- 2348     	MOVIA	0x03
     0009 00rr                      1- 2349     	SFUN	_T1CR1
                                    1- 2350     	.line	367, "main.c"; 	PCON1 = C_TMR0_Dis;
     000A 0200                      1- 2351     	CLRA	
     000B 000r                      1- 2352     	IOST	_PCON1
                                    1- 2353     	.line	368, "main.c"; 	TXD = 0;
                                    1- 2354     	BANKSEL	_PORTB
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 1Crr                      1- 2355     	BCR	_PORTB,1
                                    1- 2356     	.line	370, "main.c"; 	WaitTF0();
     000E 2rrr                      1- 2357     	LCALL	_WaitTF0
                                    1- 2358     	.line	374, "main.c"; 	while (i--) {
     000F 2108                      1- 2359     	MOVIA	0x08
                                    1- 2360     	BANKSEL	r0x1037
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1- 2361     	MOVAR	r0x1037
     0012                           1- 2362     _00277_DS_:
                                    1- 2363     	BANKSEL	r0x1037
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1- 2364     	MOVR	r0x1037,W
                                    1- 2365     	BANKSEL	r0x1038
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 2366     	MOVAR	r0x1038
                                    1- 2367     	BANKSEL	r0x1037
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 06rr                      1- 2368     	DECR	r0x1037,F
                                    1- 2369     	BANKSEL	r0x1038
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1- 2370     	MOVR	r0x1038,W
     001A 0D03                      1- 2371     	BTRSC	STATUS,2
     001B 3rrr                      1- 2372     	LGOTO	_00279_DS_
                                    1- 2373     	.line	376, "main.c"; 	TXD = (input & 0x01);//�ȴ���λ
                                    1- 2374     	BANKSEL	r0x1036
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1- 2375     	MOVR	r0x1036,W
     001E 2201                      1- 2376     	ANDIA	0x01
                                    1- 2377     	BANKSEL	r0x1038
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 00rr                      1- 2378     	MOVAR	r0x1038
     0021 13rr                      1- 2379     	RRR	r0x1038,W
     0022 0C03                      1- 2380     	BTRSC	STATUS,0
     0023 3rrr                      1- 2381     	LGOTO	_00005_DS_
                                    1- 2382     	BANKSEL	_PORTB
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 1Crr                      1- 2383     	BCR	_PORTB,1
     0026                           1- 2384     _00005_DS_:
     0026 0803                      1- 2385     	BTRSS	STATUS,0
     0027 3rrr                      1- 2386     	LGOTO	_00006_DS_
                                    1- 2387     	BANKSEL	_PORTB
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 18rr                      1- 2388     	BSR	_PORTB,1
     002A                           1- 2389     _00006_DS_:
                                    1- 2390     	.line	378, "main.c"; 	WaitTF0();
     002A 2rrr                      1- 2391     	LCALL	_WaitTF0
                                    1- 2392     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=1, sign=0, same=1, offr=0
                                    1- 2393     	.line	380, "main.c"; 	input = input >> 1;
     002B 1C03                      1- 2394     	BCR	STATUS,0
                                    1- 2395     	BANKSEL	r0x1036
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 13rr                      1- 2396     	RRR	r0x1036,F
     002E 3rrr                      1- 2397     	LGOTO	_00277_DS_
     002F                           1- 2398     _00279_DS_:
                                    1- 2399     	.line	388, "main.c"; 	TXD =  1;
                                    1- 2400     	BANKSEL	_PORTB
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 18rr                      1- 2401     	BSR	_PORTB,1
                                    1- 2402     	.line	390, "main.c"; 	WaitTF0();
     0031 2rrr                      1- 2403     	LCALL	_WaitTF0
                                    1- 2404     	.line	392, "main.c"; 	T1CR1 = C_TMR1_Dis; //ֹͣTimer1
     0032 0200                      1- 2405     	CLRA	
     0033 00rr                      1- 2406     	SFUN	_T1CR1
                                    1- 2407     	.line	393, "main.c"; 	PCON1 = C_LVD_3P0V | C_TMR0_En;
     0034 2111                      1- 2408     	MOVIA	0x11
     0035 000r                      1- 2409     	IOST	_PCON1
                                    1- 2410     	.line	394, "main.c"; 	SEND_FLAG = 0;
                                    1- 2411     	BANKSEL	_SEND_FLAG
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 02rr                      1- 2412     	CLRR	_SEND_FLAG
                                    1- 2413     	.line	397, "main.c"; 	}
                                    1- 2414     	RETURN	
     0038 0010                      3-   26 m1      ret
                                    1- 2415     ; exit point of _WByte
                                    1- 2417     ;***
                                    1- 2418     ;  pBlock Stats: dbName = C
                                    1- 2419     ;***
                                    1- 2420     ;has an exit
                                    1- 2421     ;; Starting pCode block
                                    1- 2422     .segment "code"; module=main, function=_WaitTF0
     0000                           1- 2424     _WaitTF0:
                                    1- 2425     ; 2 exit points
     0000                           1- 2426     _00272_DS_:
                                    1- 2427     	.line	348, "main.c"; 	while (!TM0_FLAG);
                                    1- 2428     	BANKSEL	_TM0_FLAG
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 2429     	MOVR	_TM0_FLAG,W
     0002 0D03                      1- 2430     	BTRSC	STATUS,2
     0003 3rrr                      1- 2431     	LGOTO	_00272_DS_
                                    1- 2432     	.line	350, "main.c"; 	TM0_FLAG = 0; //���־λ
     0004 02rr                      1- 2433     	CLRR	_TM0_FLAG
                                    1- 2434     	.line	352, "main.c"; 	}
                                    1- 2435     	RETURN	
     0005 0010                      3-   26 m1      ret
                                    1- 2436     ; exit point of _WaitTF0
                                    1- 2438     ;***
                                    1- 2439     ;  pBlock Stats: dbName = C
                                    1- 2440     ;***
                                    1- 2441     ;has an exit
                                    1- 2442     ;functions called:
                                    1- 2443     ;   _WaitTF0
                                    1- 2444     ;   _WaitTF0
                                    1- 2445     ;   _WaitTF0
                                    1- 2446     ;   _WaitTF0
                                    1- 2447     ;3 compiler assigned registers:
                                    1- 2448     ;   r0x1039
                                    1- 2449     ;   r0x103A
                                    1- 2450     ;   r0x103B
                                    1- 2451     ;; Starting pCode block
                                    1- 2452     .segment "code"; module=main, function=_RByte
                                    1- 2454     ;local variable name mapping:
     0000                           1- 2457     _RByte:
                                    1- 2458     ; 2 exit points
                                    1- 2459     	.line	310, "main.c"; 	REC_FLAG = 1;
     0000 2101                      1- 2460     	MOVIA	0x01
                                    1- 2461     	BANKSEL	_REC_FLAG
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2462     	MOVAR	_REC_FLAG
                                    1- 2463     	.line	311, "main.c"; 	u8t Output = 0;
                                    1- 2464     	BANKSEL	r0x1039
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 02rr                      1- 2465     	CLRR	r0x1039
                                    1- 2466     	.line	314, "main.c"; 	TMRH = 0;
     0005 02rr                      1- 2467     	CLRR	_TMRH
                                    1- 2468     	.line	315, "main.c"; 	TMR1 = 105;
     0006 2169                      1- 2469     	MOVIA	0x69
     0007 00rr                      1- 2470     	SFUN	_TMR1
                                    1- 2471     	.line	316, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload; //���Timer1
     0008 2103                      1- 2472     	MOVIA	0x03
     0009 00rr                      1- 2473     	SFUN	_T1CR1
                                    1- 2474     	.line	317, "main.c"; 	PCON1 = C_TMR0_Dis;
     000A 0200                      1- 2475     	CLRA	
     000B 000r                      1- 2476     	IOST	_PCON1
                                    1- 2477     	.line	319, "main.c"; 	WaitTF0(); //�ȹ���ʼλ
     000C 2rrr                      1- 2478     	LCALL	_WaitTF0
                                    1- 2479     	.line	323, "main.c"; 	while (i--) {
     000D 2108                      1- 2480     	MOVIA	0x08
                                    1- 2481     	BANKSEL	r0x103A
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 2482     	MOVAR	r0x103A
     0010                           1- 2483     _00260_DS_:
                                    1- 2484     	BANKSEL	r0x103A
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 2485     	MOVR	r0x103A,W
                                    1- 2486     	BANKSEL	r0x103B
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 00rr                      1- 2487     	MOVAR	r0x103B
                                    1- 2488     	BANKSEL	r0x103A
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 06rr                      1- 2489     	DECR	r0x103A,F
                                    1- 2490     	BANKSEL	r0x103B
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1- 2491     	MOVR	r0x103B,W
     0018 0D03                      1- 2492     	BTRSC	STATUS,2
     0019 3rrr                      1- 2493     	LGOTO	_00265_DS_
                                    1- 2494     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=1, sign=0, same=1, offr=0
                                    1- 2495     	.line	325, "main.c"; 	Output >>= 1;
     001A 1C03                      1- 2496     	BCR	STATUS,0
                                    1- 2497     	BANKSEL	r0x1039
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 13rr                      1- 2498     	RRR	r0x1039,F
                                    1- 2499     	.line	327, "main.c"; 	if (RXD) Output |= 0x80; //���յ�λ
                                    1- 2500     	BANKSEL	_PORTA
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 09rr                      1- 2501     	BTRSS	_PORTA,2
     001F 3rrr                      1- 2502     	LGOTO	_00007_DS_
                                    1- 2503     	BANKSEL	r0x1039
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 1Brr                      1- 2504     	BSR	r0x1039,7
     0022                           1- 2505     _00007_DS_:
                                    1- 2506     	.line	329, "main.c"; 	WaitTF0(); //λ����ʱ
     0022 2rrr                      1- 2507     	LCALL	_WaitTF0
     0023 3rrr                      1- 2508     	LGOTO	_00260_DS_
     0024                           1- 2509     _00265_DS_:
                                    1- 2510     	.line	333, "main.c"; 	while (!TM0_FLAG) if (RXD) break;
                                    1- 2511     	BANKSEL	_TM0_FLAG
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 2512     	MOVR	_TM0_FLAG,W
     0026 0903                      1- 2513     	BTRSS	STATUS,2
     0027 3rrr                      1- 2514     	LGOTO	_00267_DS_
                                    1- 2515     	BANKSEL	_PORTA
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 09rr                      1- 2516     	BTRSS	_PORTA,2
     002A 3rrr                      1- 2517     	LGOTO	_00265_DS_
     002B                           1- 2518     _00267_DS_:
                                    1- 2519     	.line	335, "main.c"; 	T1CR1 = C_TMR1_Dis; //ֹͣTimer1
     002B 0200                      1- 2520     	CLRA	
     002C 00rr                      1- 2521     	SFUN	_T1CR1
                                    1- 2522     	.line	336, "main.c"; 	PCON1 = C_LVD_3P0V | C_TMR0_En;
     002D 2111                      1- 2523     	MOVIA	0x11
     002E 000r                      1- 2524     	IOST	_PCON1
                                    1- 2525     	.line	337, "main.c"; 	REC_FLAG = 0;
                                    1- 2526     	BANKSEL	_REC_FLAG
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 02rr                      1- 2527     	CLRR	_REC_FLAG
                                    1- 2528     	.line	338, "main.c"; 	uartTime = 0;
                                    1- 2529     	BANKSEL	_uartTime
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 02rr                      1- 2530     	CLRR	_uartTime
                                    1- 2531     	.line	339, "main.c"; 	return Output;
                                    1- 2532     	BANKSEL	r0x1039
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1- 2533     	MOVR	r0x1039,W
                                    1- 2534     	.line	341, "main.c"; 	}
                                    1- 2535     	RETURN	
     0035 0010                      3-   26 m1      ret
                                    1- 2536     ; exit point of _RByte
                                    1- 2538     ;***
                                    1- 2539     ;  pBlock Stats: dbName = C
                                    1- 2540     ;***
                                    1- 2541     ;has an exit
                                    1- 2542     ;functions called:
                                    1- 2543     ;   __mulchar
                                    1- 2544     ;   __mulint
                                    1- 2545     ;   __mulchar
                                    1- 2546     ;   __mulint
                                    1- 2547     ;11 compiler assigned registers:
                                    1- 2548     ;   r0x103C
                                    1- 2549     ;   STK00
                                    1- 2550     ;   r0x103D
                                    1- 2551     ;   r0x103E
                                    1- 2552     ;   r0x103F
                                    1- 2553     ;   STK02
                                    1- 2554     ;   STK01
                                    1- 2555     ;   r0x1040
                                    1- 2556     ;   r0x1041
                                    1- 2557     ;   r0x1042
                                    1- 2558     ;   r0x1043
                                    1- 2559     ;; Starting pCode block
                                    1- 2560     .segment "code"; module=main, function=_rankNub
                                    1- 2562     ;local variable name mapping:
     0000                           1- 2567     _rankNub:
                                    1- 2568     ; 2 exit points
                                    1- 2569     	.line	290, "main.c"; 	void rankNub(char nub)
                                    1- 2570     	BANKSEL	r0x103C
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 2571     	MOVAR	r0x103C
                                    1- 2572     	.line	292, "main.c"; 	u16t aNub = 3*randNub;
     0002 2103                      1- 2573     	MOVIA	0x03
     0003 00rr                      1- 2574     	MOVAR	STK00
                                    1- 2575     	BANKSEL	_randNub
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 2576     	MOVR	_randNub,W
     0006 2rrr                      1- 2577     	LCALL	__mulchar
                                    1- 2578     	BANKSEL	r0x103D
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 00rr                      1- 2579     	MOVAR	r0x103D
                                    1- 2580     	BANKSEL	r0x103E
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 02rr                      1- 2581     	CLRR	r0x103E
                                    1- 2582     	.line	294, "main.c"; 	for(i=0;i<nub;i++)
                                    1- 2583     	BANKSEL	r0x103F
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 02rr                      1- 2584     	CLRR	r0x103F
     000D                           1- 2585     _00253_DS_:
                                    1- 2586     	BANKSEL	r0x103C
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1- 2587     	MOVR	r0x103C,W
                                    1- 2588     	BANKSEL	r0x103F
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 04rr                      1- 2589     	SUBAR	r0x103F,W
     0011 0C03                      1- 2590     	BTRSC	STATUS,0
     0012 3rrr                      1- 2591     	LGOTO	_00251_DS_
                                    1- 2592     	.line	296, "main.c"; 	aNub += i*snub;
                                    1- 2593     	BANKSEL	_snub
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 2594     	MOVR	_snub,W
     0015 00rr                      1- 2595     	MOVAR	STK02
     0016 0200                      1- 2596     	CLRA	
     0017 00rr                      1- 2597     	MOVAR	STK01
                                    1- 2598     	BANKSEL	r0x103F
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1- 2599     	MOVR	r0x103F,W
     001A 00rr                      1- 2600     	MOVAR	STK00
     001B 0200                      1- 2601     	CLRA	
     001C 2rrr                      1- 2602     	LCALL	__mulint
                                    1- 2603     	BANKSEL	r0x1043
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 2604     	MOVAR	r0x1043
                                    1- 2605     ;;1	MOVAR	r0x1040
     001F 01rr                      1- 2606     	MOVR	STK00,W
                                    1- 2607     ;;1	MOVAR	r0x1042
                                    1- 2608     	BANKSEL	r0x103D
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 03rr                      1- 2609     	ADDAR	r0x103D,F
                                    1- 2610     	BANKSEL	r0x1043
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 2611     	MOVR	r0x1043,W
     0024 0C03                      1- 2612     	BTRSC	STATUS,0
     0025 05rr                      1- 2613     	INCR	r0x1043,W
     0026 0D03                      1- 2614     	BTRSC	STATUS,2
     0027 3rrr                      1- 2615     	LGOTO	_00008_DS_
                                    1- 2616     	BANKSEL	r0x103E
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 03rr                      1- 2617     	ADDAR	r0x103E,F
                                    1- 2618     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 2619     ;;unsigned compare: left >= lit (0x5=5), size=1
     002A                           1- 2620     _00008_DS_:
                                    1- 2621     	.line	297, "main.c"; 	if(i>4)
     002A 2105                      1- 2622     	MOVIA	0x05
                                    1- 2623     	BANKSEL	r0x103F
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 04rr                      1- 2624     	SUBAR	r0x103F,W
     002D 0803                      1- 2625     	BTRSS	STATUS,0
     002E 3rrr                      1- 2626     	LGOTO	_00009_DS_
                                    1- 2627     	.line	298, "main.c"; 	aNub--;
     002F 21FF                      1- 2628     	MOVIA	0xff
                                    1- 2629     	BANKSEL	r0x103D
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 03rr                      1- 2630     	ADDAR	r0x103D,F
     0032 0C03                      1- 2631     	BTRSC	STATUS,0
     0033 3rrr                      1- 2632     	LGOTO	_00009_DS_
                                    1- 2633     	BANKSEL	r0x103E
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 06rr                      1- 2634     	DECR	r0x103E,F
     0036                           1- 2635     _00009_DS_:
                                    1- 2636     	.line	299, "main.c"; 	aNub += 3;
     0036 2103                      1- 2637     	MOVIA	0x03
                                    1- 2638     	BANKSEL	r0x103D
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 03rr                      1- 2639     	ADDAR	r0x103D,F
     0039 0803                      1- 2640     	BTRSS	STATUS,0
     003A 3rrr                      1- 2641     	LGOTO	_00010_DS_
                                    1- 2642     	BANKSEL	r0x103E
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 05rr                      1- 2643     	INCR	r0x103E,F
     003D                           1- 2644     _00010_DS_:
                                    1- 2645     	.line	294, "main.c"; 	for(i=0;i<nub;i++)
                                    1- 2646     	BANKSEL	r0x103F
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 05rr                      1- 2647     	INCR	r0x103F,F
     003F 3rrr                      1- 2648     	LGOTO	_00253_DS_
     0040                           1- 2649     _00251_DS_:
                                    1- 2650     	.line	302, "main.c"; 	randNub = aNub%8 +1;
     0040 2107                      1- 2651     	MOVIA	0x07
                                    1- 2652     	BANKSEL	r0x103D
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 10rr                      1- 2653     	ANDAR	r0x103D,F
                                    1- 2654     	BANKSEL	r0x103E
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 02rr                      1- 2655     	CLRR	r0x103E
                                    1- 2656     	BANKSEL	r0x103D
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 01rr                      1- 2657     	MOVR	r0x103D,W
                                    1- 2658     	BANKSEL	r0x103C
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 00rr                      1- 2659     	MOVAR	r0x103C
     0049 05rr                      1- 2660     	INCR	r0x103C,W
                                    1- 2661     	BANKSEL	_randNub
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 00rr                      1- 2662     	MOVAR	_randNub
                                    1- 2663     	.line	303, "main.c"; 	}
                                    1- 2664     	RETURN	
     004C 0010                      3-   26 m1      ret
                                    1- 2665     ; exit point of _rankNub
                                    1- 2667     ;***
                                    1- 2668     ;  pBlock Stats: dbName = C
                                    1- 2669     ;***
                                    1- 2670     ;has an exit
                                    1- 2671     ;functions called:
                                    1- 2672     ;   _RByte
                                    1- 2673     ;   __gptrput1
                                    1- 2674     ;   _RByte
                                    1- 2675     ;   __gptrput1
                                    1- 2676     ;5 compiler assigned registers:
                                    1- 2677     ;   r0x1044
                                    1- 2678     ;   r0x1045
                                    1- 2679     ;   STK02
                                    1- 2680     ;   STK01
                                    1- 2681     ;   STK00
                                    1- 2682     ;; Starting pCode block
                                    1- 2683     .segment "code"; module=main, function=_revData
     0000                           1- 2685     _revData:
                                    1- 2686     ; 2 exit points
                                    1- 2687     	.line	220, "main.c"; 	if(REC_FLAG == 0 && (PORTA & 0x04) == 0)
                                    1- 2688     	BANKSEL	_REC_FLAG
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 2689     	MOVR	_REC_FLAG,W
     0002 0903                      1- 2690     	BTRSS	STATUS,2
     0003 3rrr                      1- 2691     	LGOTO	_00231_DS_
                                    1- 2692     	BANKSEL	_PORTA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 0Drr                      1- 2693     	BTRSC	_PORTA,2
     0006 3rrr                      1- 2694     	LGOTO	_00231_DS_
                                    1- 2695     	.line	222, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1;
     0007 2109                      1- 2696     	MOVIA	0x09
     0008 00rr                      1- 2697     	MOVAR	_INTE
                                    1- 2698     	.line	223, "main.c"; 	REC_FLAG = 1;
     0009 2101                      1- 2699     	MOVIA	0x01
                                    1- 2700     	BANKSEL	_REC_FLAG
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1- 2701     	MOVAR	_REC_FLAG
                                    1- 2702     	.line	224, "main.c"; 	if(!SEND_FLAG)
                                    1- 2703     	BANKSEL	_SEND_FLAG
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1- 2704     	MOVR	_SEND_FLAG,W
     000E 0903                      1- 2705     	BTRSS	STATUS,2
     000F 3rrr                      1- 2706     	LGOTO	_00228_DS_
                                    1- 2707     	.line	226, "main.c"; 	recData = RByte();
     0010 2rrr                      1- 2708     	LCALL	_RByte
                                    1- 2709     	BANKSEL	_recData
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 00rr                      1- 2710     	MOVAR	_recData
                                    1- 2711     	.line	227, "main.c"; 	revList[index] = recData;
                                    1- 2712     	BANKSEL	_index
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 01rr                      1- 2713     	MOVR	_index,W
     0015 25rr                      1- 2714     	ADDIA	(_revList + 0)
                                    1- 2715     	BANKSEL	r0x1044
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1- 2716     	MOVAR	r0x1044
     0018 21rr                      1- 2717     	MOVIA	((_revList + 0) >> 8) & 0xff
     0019 0C03                      1- 2718     	BTRSC	STATUS,0
     001A 2501                      1- 2719     	ADDIA	0x01
                                    1- 2720     	BANKSEL	r0x1045
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 2721     	MOVAR	r0x1045
                                    1- 2722     	BANKSEL	_recData
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 2723     	MOVR	_recData,W
     001F 00rr                      1- 2724     	MOVAR	STK02
                                    1- 2725     	BANKSEL	r0x1044
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 2726     	MOVR	r0x1044,W
     0022 00rr                      1- 2727     	MOVAR	STK01
                                    1- 2728     	BANKSEL	r0x1045
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 01rr                      1- 2729     	MOVR	r0x1045,W
     0025 00rr                      1- 2730     	MOVAR	STK00
     0026 2100                      1- 2731     	MOVIA	0x00
     0027 2rrr                      1- 2732     	LCALL	__gptrput1
                                    1- 2733     	.line	228, "main.c"; 	if(++index > 5)
                                    1- 2734     	BANKSEL	_index
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 05rr                      1- 2735     	INCR	_index,F
                                    1- 2736     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2737     ;;unsigned compare: left >= lit (0x6=6), size=1
     002A 2106                      1- 2738     	MOVIA	0x06
     002B 04rr                      1- 2739     	SUBAR	_index,W
     002C 0803                      1- 2740     	BTRSS	STATUS,0
     002D 3rrr                      1- 2741     	LGOTO	_00229_DS_
                                    1- 2742     	.line	229, "main.c"; 	index = 0;
     002E 02rr                      1- 2743     	CLRR	_index
     002F 3rrr                      1- 2744     	LGOTO	_00229_DS_
     0030                           1- 2745     _00228_DS_:
                                    1- 2746     	.line	233, "main.c"; 	REC_FLAG = 0;
                                    1- 2747     	BANKSEL	_REC_FLAG
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 02rr                      1- 2748     	CLRR	_REC_FLAG
     0032                           1- 2749     _00229_DS_:
                                    1- 2750     	.line	235, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0032 210B                      1- 2751     	MOVIA	0x0b
     0033 00rr                      1- 2752     	MOVAR	_INTE
     0034                           1- 2753     _00231_DS_:
                                    1- 2754     	.line	239, "main.c"; 	uartFlag = 0;
                                    1- 2755     	BANKSEL	_uartFlag
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 02rr                      1- 2756     	CLRR	_uartFlag
                                    1- 2757     	.line	240, "main.c"; 	}
                                    1- 2758     	RETURN	
     0036 0010                      3-   26 m1      ret
                                    1- 2759     ; exit point of _revData
                                    1- 2762     ;	code size estimation:
                                    1- 2763     ;	 1059+  308 =  1367 instructions ( 3350 byte)
                                    1- 2765     	end
                                    1- 2765     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__divuchar              Label    00000000
__divuint               Label    00000000
__gptrput1              Label    00000000
__moduint               Label    00000000
__mulchar               Label    00000000
__mulint                Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00800543
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000004B
_00002_DS_              Label    00000018
_00003_DS_              Label    00000060
_00004_DS_              Label    000000A8
_00005_DS_              Label    00000026
_00006_DS_              Label    0000002A
_00007_DS_              Label    00000022
_00008_DS_              Label    0000002A
_00009_DS_              Label    00000036
_00010_DS_              Label    0000003D
_00011_DS_              Label    00000050
_00012_DS_              Label    00000052
_00013_DS_              Label    000000B5
_00106_DS_              Label    00000074
_00108_DS_              Label    00000077
_00112_DS_              Label    0000008F
_00120_DS_              Label    0000009D
_00122_DS_              Label    000000C1
_00127_DS_              Label    000000C8
_00128_DS_              Label    000000E9
_00137_DS_              Label    00000108
_00139_DS_              Label    0000010F
_00144_DS_              Label    0000011D
_00217_DS_              Label    000000A7
_00228_DS_              Label    00000030
_00229_DS_              Label    00000032
_00231_DS_              Label    00000034
_00240_DS_              Label    00000036
_00244_DS_              Label    00000021
_00251_DS_              Label    00000040
_00253_DS_              Label    0000000D
_00260_DS_              Label    00000010
_00265_DS_              Label    00000024
_00267_DS_              Label    0000002B
_00272_DS_              Label    00000000
_00277_DS_              Label    00000012
_00279_DS_              Label    0000002F
_00284_DS_              Label    00000002
_00292_DS_              Label    00000013
_00295_DS_              Label    0000000C
_00297_DS_              Label    00000014
_00302_DS_              Label    00000016
_00304_DS_              Label    00000024
_00306_DS_              Label    00000027
_00307_DS_              Label    0000002E
_00308_DS_              Label    00000035
_00309_DS_              Label    0000003B
_00310_DS_              Label    00000041
_00311_DS_              Label    00000048
_00312_DS_              Label    0000004E
_00313_DS_              Label    00000054
_00314_DS_              Label    00000059
_00316_DS_              Label    0000005D
_00325_DS_              Label    0000000D
_00331_DS_              Label    00000016
_00333_DS_              Label    0000001F
_00347_DS_              Label    0000000B
_00350_DS_              Label    00000048
_00355_DS_              Label    00000053
_00358_DS_              Label    00000090
_00363_DS_              Label    0000009B
_00366_DS_              Label    000000D8
_00406_DS_              Label    0000002D
_00407_DS_              Label    00000044
_00409_DS_              Label    00000075
_00410_DS_              Label    0000008C
_00412_DS_              Label    000000BD
_00413_DS_              Label    000000D4
_00426_DS_              Label    00000002
_00428_DS_              Label    0000000E
_00440_DS_              Label    00000010
_00445_DS_              Label    00000015
_00449_DS_              Label    0000001C
_00454_DS_              Label    00000021
_00458_DS_              Label    00000028
_00463_DS_              Label    0000002D
_00467_DS_              Label    00000034
_00472_DS_              Label    00000039
_00476_DS_              Label    00000040
_00481_DS_              Label    00000045
_00485_DS_              Label    0000004C
_00490_DS_              Label    00000051
_00494_DS_              Label    00000058
_00499_DS_              Label    0000005D
_00503_DS_              Label    00000064
_00508_DS_              Label    00000069
_00512_DS_              Label    00000070
_00517_DS_              Label    00000075
_00521_DS_              Label    0000007C
_00526_DS_              Label    00000081
_00530_DS_              Label    00000088
_00535_DS_              Label    0000008D
_00539_DS_              Label    00000094
_00544_DS_              Label    00000099
_00548_DS_              Label    000000A0
_00553_DS_              Label    000000A5
_00557_DS_              Label    000000AC
_00562_DS_              Label    000000B1
_00566_DS_              Label    000000B8
_00571_DS_              Label    000000BD
_00575_DS_              Label    000000C4
_00580_DS_              Label    000000C9
_00584_DS_              Label    000000D0
_00589_DS_              Label    000000D5
_00593_DS_              Label    000000DC
_00598_DS_              Label    000000E1
_00602_DS_              Label    000000E8
_00607_DS_              Label    000000ED
_00611_DS_              Label    000000F4
_00616_DS_              Label    000000F9
_00620_DS_              Label    00000100
_00625_DS_              Label    00000105
_00629_DS_              Label    0000010C
_00634_DS_              Label    00000111
_00638_DS_              Label    00000118
_00643_DS_              Label    0000011D
_00647_DS_              Label    00000124
_00652_DS_              Label    00000129
_00662_DS_              Label    0000004C
_00664_DS_              Label    0000002D
_00666_DS_              Label    0000004D
_00672_DS_              Label    00000029
_00684_DS_              Label    00000036
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_Bdata                  Label    00000000
_Bdata1                 Label    00000000
_Bdata2                 Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_breath3                Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_CMPCR                  Label    00000000
_colorIndex             Label    00000000
_colorTime              Label    00000000
_data                   Label    00000000
_delay                  Label    00000000
_Delay10Us              Label    00000000
_Delay80us              Label    00000000
_duty                   Label    00000000
_firstFlag              Label    00000000
_FSR                    Label    00000000
_Gdata                  Label    00000000
_Gdata1                 Label    00000000
_Gdata2                 Label    00000000
_Hcount                 Label    00000000
_index                  Label    00000000
_INDF                   Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_ledCount               Label    00000000
_main                   Label    00000000
_offFlag                Label    00000000
_OSCCR                  Label    00000000
_P2CR1                  Label    00000000
_P4CR1                  Label    00000000
_P5CR1                  Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_preColor               Label    00000000
_preColorIndex          Label    00000000
_preduty                Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_PWM4DUTY               Label    00000000
_PWM5DUTY               Label    00000000
_PWM5RH                 Label    00000000
_randNub                Label    00000000
_rankNub                Label    00000000
_RByte                  Label    00000000
_Rdata                  Label    00000000
_Rdata1                 Label    00000000
_Rdata2                 Label    00000000
_REC_FLAG               Label    00000000
_recData                Label    00000000
_revData                Label    00000000
_revList                Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_SEND_FLAG              Label    00000000
_sendRGB                Label    00000000
_sendtoLast             Label    00000000
_setColor               Label    00000000
_snub                   Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_timeCount              Label    00000000
_TM0_FLAG               Label    00000000
_TM34RH                 Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_uartFlag               Label    00000000
_uartTime               Label    00000000
_WaitTF0                Label    00000000
_WByte                  Label    00000000
_work10                 Label    00000000
_work9                  Label    00000000
_workCtr                Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    0000012E
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1026                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
r0x102F                 Label    00000000
r0x1030                 Label    00000000
r0x1031                 Label    00000000
r0x1034                 Label    00000000
r0x1035                 Label    00000000
r0x1036                 Label    00000000
r0x1037                 Label    00000000
r0x1038                 Label    00000000
r0x1039                 Label    00000000
r0x103A                 Label    00000000
r0x103B                 Label    00000000
r0x103C                 Label    00000000
r0x103D                 Label    00000000
r0x103E                 Label    00000000
r0x103F                 Label    00000000
r0x1043                 Label    00000000
r0x1044                 Label    00000000
r0x1045                 Label    00000000
r0x1046                 Label    00000000
r0x1047                 Label    00000000
r0x1048                 Label    00000000
r0x1049                 Label    00000000
r0x104A                 Label    00000000
r0x104B                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    0000000F
STK01                   Label    0000000E
STK02                   Label    0000000D
STK03                   Label    0000000C
STK04                   Label    0000000B
STK05                   Label    0000000A
STK06                   Label    00000009
STK07                   Label    00000008
STK08                   Label    00000007
STK09                   Label    00000006
STK10                   Label    00000005
STK11                   Label    00000004
STK12                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8a054d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A054D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
