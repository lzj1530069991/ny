
                    Nyquest Technology Co., Ltd.

NYASM 2.30

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062E,c=on
                                    1-    9     	#include "ny8b062e.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_ADMDbits
                                    1-   23     	extern	_ADRbits
                                    1-   24     	extern	_ADVREFHbits
                                    1-   25     	extern	_ADCRbits
                                    1-   26     	extern	_AWUCONbits
                                    1-   27     	extern	_PACONbits
                                    1-   28     	extern	_ADJMDbits
                                    1-   29     	extern	_INTEDGbits
                                    1-   30     	extern	_ANAENbits
                                    1-   31     	extern	_RFCbits
                                    1-   32     	extern	_INTE2bits
                                    1-   33     	extern	_INDF
                                    1-   34     	extern	_TMR0
                                    1-   35     	extern	_PCL
                                    1-   36     	extern	_STATUS
                                    1-   37     	extern	_FSR
                                    1-   38     	extern	_PORTA
                                    1-   39     	extern	_PORTB
                                    1-   40     	extern	_PCON
                                    1-   41     	extern	_BWUCON
                                    1-   42     	extern	_PCHBUF
                                    1-   43     	extern	_ABPLCON
                                    1-   44     	extern	_BPHCON
                                    1-   45     	extern	_INTE
                                    1-   46     	extern	_INTF
                                    1-   47     	extern	_ADMD
                                    1-   48     	extern	_ADR
                                    1-   49     	extern	_ADD
                                    1-   50     	extern	_ADVREFH
                                    1-   51     	extern	_ADCR
                                    1-   52     	extern	_AWUCON
                                    1-   53     	extern	_PACON
                                    1-   54     	extern	_ADJMD
                                    1-   55     	extern	_INTEDG
                                    1-   56     	extern	_TMRH
                                    1-   57     	extern	_ANAEN
                                    1-   58     	extern	_RFC
                                    1-   59     	extern	_TM3RH
                                    1-   60     	extern	_INTE2
                                    1-   61     	extern	_TMR1
                                    1-   62     	extern	_T1CR1
                                    1-   63     	extern	_T1CR2
                                    1-   64     	extern	_PWM1DUTY
                                    1-   65     	extern	_PS1CV
                                    1-   66     	extern	_BZ1CR
                                    1-   67     	extern	_IRCR
                                    1-   68     	extern	_TBHP
                                    1-   69     	extern	_TBHD
                                    1-   70     	extern	_TMR2
                                    1-   71     	extern	_T2CR1
                                    1-   72     	extern	_T2CR2
                                    1-   73     	extern	_PWM2DUTY
                                    1-   74     	extern	_PS2CV
                                    1-   75     	extern	_BZ2CR
                                    1-   76     	extern	_OSCCR
                                    1-   77     	extern	_TMR3
                                    1-   78     	extern	_T3CR1
                                    1-   79     	extern	_T3CR2
                                    1-   80     	extern	_PWM3DUTY
                                    1-   81     	extern	_PS3CV
                                    1-   82     	extern	_BZ3CR
                                    1-   83     	extern	_P4CR1
                                    1-   84     	extern	_PWM4DUTY
                                    1-   85     	extern	_IOSTA
                                    1-   86     	extern	_IOSTB
                                    1-   87     	extern	_APHCON
                                    1-   88     	extern	_PS0CV
                                    1-   89     	extern	_BODCON
                                    1-   90     	extern	_CMPCR
                                    1-   91     	extern	_PCON1
                                    1-   92     	extern	_T0MD
                                    1-   93     	extern	__nyc_ny8_startup
                                    1-   94     ;--------------------------------------------------------
                                    1-   95     ; global declarations
                                    1-   96     ;--------------------------------------------------------
                                    1-   97     	extern	_delay
                                    1-   98     	extern	_F_wait_eoc
                                    1-   99     	extern	_F_Quarter_VDD_Convert
                                    1-  100     	extern	_F_AIN0_Convert
                                    1-  101     	extern	_main
                                    1-  102     	extern	_R_AIN0_DATA
                                    1-  103     	extern	_R_AIN0_DATA_LB
                                    1-  104     	extern	_R_Quarter_VDD_DATA
                                    1-  105     	extern	_R_Quarter_VDD_DATA_LB
                                    1-  107     	extern PSAVE
                                    1-  108     	extern SSAVE
                                    1-  109     	extern WSAVE
                                    1-  110     	extern STK04
                                    1-  111     	extern STK03
                                    1-  112     	extern STK02
                                    1-  113     	extern STK01
                                    1-  114     	extern STK00
                                    1-  116     .segment "uninit", 0x20000040
 20000040                           1-  117     PSAVE:
                                    1-  118     	.res 1
 20000041                           1-  119     SSAVE:
                                    1-  120     	.res 1
 20000042                           1-  121     WSAVE:
                                    1-  122     	.res 1
 20000043                           1-  123     STK04:
                                    1-  124     	.res 1
 20000044                           1-  125     STK03:
                                    1-  126     	.res 1
 20000045                           1-  127     STK02:
                                    1-  128     	.res 1
 20000046                           1-  129     STK01:
                                    1-  130     	.res 1
 20000047                           1-  131     STK00:
                                    1-  132     	.res 1
                                    1-  134     ;--------------------------------------------------------
                                    1-  135     ; global definitions
                                    1-  136     ;--------------------------------------------------------
                                    1-  137     .segment "uninit"
     0000                           1-  138     _R_AIN0_DATA:
                                    1-  139     	.res	2
                                    1-  142     .segment "uninit"
     0000                           1-  143     _R_AIN0_DATA_LB:
                                    1-  144     	.res	1
                                    1-  147     .segment "uninit"
     0000                           1-  148     _R_Quarter_VDD_DATA:
                                    1-  149     	.res	2
                                    1-  152     .segment "uninit"
     0000                           1-  153     _R_Quarter_VDD_DATA_LB:
                                    1-  154     	.res	1
                                    1-  157     ;--------------------------------------------------------
                                    1-  158     ; absolute symbol definitions
                                    1-  159     ;--------------------------------------------------------
                                    1-  160     ;--------------------------------------------------------
                                    1-  161     ; compiler-defined variables
                                    1-  162     ;--------------------------------------------------------
                                    1-  163     .segment "uninit"
     0000                           1-  164     r0x1017:
                                    1-  165     	.res	1
                                    1-  166     .segment "uninit"
     0000                           1-  167     r0x1019:
                                    1-  168     	.res	1
                                    1-  169     .segment "uninit"
     0000                           1-  170     r0x101A:
                                    1-  171     	.res	1
                                    1-  172     .segment "uninit"
     0000                           1-  173     r0x1011:
                                    1-  174     	.res	1
                                    1-  175     .segment "uninit"
     0000                           1-  176     r0x1012:
                                    1-  177     	.res	1
                                    1-  178     .segment "uninit"
     0000                           1-  179     r0x1013:
                                    1-  180     	.res	1
                                    1-  181     .segment "uninit"
     0000                           1-  182     r0x1016:
                                    1-  183     	.res	1
                                    1-  184     .segment "uninit"
     0000                           1-  185     r0x100B:
                                    1-  186     	.res	1
                                    1-  187     .segment "uninit"
     0000                           1-  188     r0x100C:
                                    1-  189     	.res	1
                                    1-  190     .segment "uninit"
     0000                           1-  191     r0x100D:
                                    1-  192     	.res	1
                                    1-  193     .segment "uninit"
     0000                           1-  194     r0x1010:
                                    1-  195     	.res	1
                                    1-  196     .segment "uninit"
     0000                           1-  197     r0x1007:
                                    1-  198     	.res	1
                                    1-  199     .segment "uninit"
     0000                           1-  200     r0x1006:
                                    1-  201     	.res	1
                                    1-  202     .segment "uninit"
     0000                           1-  203     r0x1008:
                                    1-  204     	.res	1
                                    1-  205     .segment "uninit"
     0000                           1-  206     r0x1009:
                                    1-  207     	.res	1
                                    1-  208     .segment "uninit"
     0000                           1-  209     r0x100A:
                                    1-  210     	.res	1
                                    1-  211     ;--------------------------------------------------------
                                    1-  212     ; initialized data
                                    1-  213     ;--------------------------------------------------------
                                    1-  214     ;--------------------------------------------------------
                                    1-  215     ; overlayable items in internal ram 
                                    1-  216     ;--------------------------------------------------------
                                    1-  217     ;	udata_ovr
                                    1-  218     ;--------------------------------------------------------
                                    1-  219     ; reset vector 
                                    1-  220     ;--------------------------------------------------------
                                    1-  221     ORG	0x0000
     0000 3rrr                      1-  222     	LGOTO	__nyc_ny8_startup
                                    1-  223     ;--------------------------------------------------------
                                    1-  224     ; code
                                    1-  225     ;--------------------------------------------------------
                                    1-  226     ;***
                                    1-  227     ;  pBlock Stats: dbName = M
                                    1-  228     ;***
                                    1-  229     ;has an exit
                                    1-  230     ;functions called:
                                    1-  231     ;   _delay
                                    1-  232     ;   _F_AIN0_Convert
                                    1-  233     ;   _F_Quarter_VDD_Convert
                                    1-  234     ;   _delay
                                    1-  235     ;   _F_AIN0_Convert
                                    1-  236     ;   _F_Quarter_VDD_Convert
                                    1-  237     ;5 compiler assigned registers:
                                    1-  238     ;   STK00
                                    1-  239     ;   r0x1017
                                    1-  240     ;   r0x1018
                                    1-  241     ;   r0x1019
                                    1-  242     ;   r0x101A
                                    1-  243     ;; Starting pCode block
                                    1-  244     .segment "code"; module=main, function=_main
     0000                           1-  246     _main:
                                    1-  247     ; 2 exit points
                                    1-  248     	.line	33, "main.c"; 	IOSTA = C_PA_Input;						// Set PortA as input port
     0000 21FF                      1-  249     	MOVIA	0xff
     0001 000r                      1-  250     	IOST	_IOSTA
                                    1-  251     	.line	34, "main.c"; 	PORTA = 0xFF;							// PortA Data Register = 0xFF
     0002 00rr                      1-  252     	MOVAR	_PORTA
                                    1-  253     	.line	35, "main.c"; 	INTE  = 0x00;							// INTE = 0x00
     0003 02rr                      1-  254     	CLRR	_INTE
                                    1-  255     	.line	38, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA0 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0004 2180                      1-  256     	MOVIA	0x80
     0005 00rr                      1-  257     	MOVAR	_ADMD
                                    1-  258     	.line	41, "main.c"; 	ADVREFH = C_Vrefh_4V;					// ADC reference high voltage is supplied by internal 4V  (Note: ADC clock freq. must be equal or less than 1MHz)
     0006 2102                      1-  259     	MOVIA	0x02
     0007 00rr                      1-  260     	MOVAR	_ADVREFH
                                    1-  261     	.line	48, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0008 2110                      1-  262     	MOVIA	0x10
     0009 00rr                      1-  263     	MOVAR	_ADR
                                    1-  264     	.line	52, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;		// Sample pulse width=1 adc clock, ADC select 12-bit conversion ( Note: ADC clock freq. must be equal or less than 500KHz)
     000A 2103                      1-  265     	MOVIA	0x03
     000B 00rr                      1-  266     	MOVAR	_ADCR
                                    1-  267     	.line	58, "main.c"; 	PACON = C_PA0_AIN0;						// Set AIN0(PA0) as pure ADC input for reduce power consumption (SFR "PACON")
     000C 2101                      1-  268     	MOVIA	0x01
     000D 00rr                      1-  269     	MOVAR	_PACON
                                    1-  270     	.line	59, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     000E 1Arr                      1-  271     	BSR	_ADMDbits,4
                                    1-  272     	.line	60, "main.c"; 	delay(50);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     000F 2132                      1-  273     	MOVIA	0x32
     0010 00rr                      1-  274     	MOVAR	STK00
     0011 2100                      1-  275     	MOVIA	0x00
                                    1-  276     	MCALL	_delay
     0012 2rrr                      3-   66 m1      LCALL rom_address
     0013                           1-  277     _00106_DS_:
                                    1-  278     	.line	63, "main.c"; 	CLRWDT();							// Clear WatchDog
     0013 0002                      1-  279     	clrwdt
                                    1-  280     	.line	64, "main.c"; 	R_AIN0_DATA=R_AIN0_DATA_LB=R_Quarter_VDD_DATA=R_Quarter_VDD_DATA_LB=0x00;            
                                    1-  281     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 02rr                      1-  282     	CLRR	_R_Quarter_VDD_DATA_LB
                                    1-  283     	BANKSEL	_R_Quarter_VDD_DATA
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 02rr                      1-  284     	CLRR	_R_Quarter_VDD_DATA
     0018 02rr                      1-  285     	CLRR	(_R_Quarter_VDD_DATA + 1)
                                    1-  286     	BANKSEL	_R_AIN0_DATA_LB
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 02rr                      1-  287     	CLRR	_R_AIN0_DATA_LB
                                    1-  288     	BANKSEL	_R_AIN0_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1-  289     	CLRR	_R_AIN0_DATA
     001D 02rr                      1-  290     	CLRR	(_R_AIN0_DATA + 1)
                                    1-  291     	.line	65, "main.c"; 	F_AIN0_Convert(8);					// execute AIN0 ADC converting 8 times
     001E 2108                      1-  292     	MOVIA	0x08
                                    1-  293     	MCALL	_F_AIN0_Convert
     001F 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  294     	.line	66, "main.c"; 	R_AIN0_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1-  295     	BANKSEL	_R_AIN0_DATA
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 15rr                      1-  296     	SWAPR	(_R_AIN0_DATA + 1),W
     0022 22F0                      1-  297     	ANDIA	0xf0
     0023 00rr                      1-  298     	MOVAR	(_R_AIN0_DATA + 1)
     0024 15rr                      1-  299     	SWAPR	_R_AIN0_DATA,W
     0025 00rr                      1-  300     	MOVAR	_R_AIN0_DATA
     0026 220F                      1-  301     	ANDIA	0x0f
     0027 11rr                      1-  302     	IORAR	(_R_AIN0_DATA + 1),F
     0028 12rr                      1-  303     	XORAR	_R_AIN0_DATA,F
                                    1-  304     	.line	67, "main.c"; 	R_AIN0_DATA_LB &= 0xF0;				// Only get Bit7~4
     0029 21F0                      1-  305     	MOVIA	0xf0
                                    1-  306     	BANKSEL	_R_AIN0_DATA_LB
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 10rr                      1-  307     	ANDAR	_R_AIN0_DATA_LB,F
                                    1-  308     	.line	68, "main.c"; 	R_AIN0_DATA += R_AIN0_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     002C 01rr                      1-  309     	MOVR	_R_AIN0_DATA_LB,W
                                    1-  310     	BANKSEL	r0x1017
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 00rr                      1-  311     	MOVAR	r0x1017
     002F 2100                      1-  312     	MOVIA	0x00
                                    1-  313     	BANKSEL	r0x101A
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 00rr                      1-  314     	MOVAR	r0x101A
                                    1-  315     ;;106	MOVR	r0x1019,W
                                    1-  316     	BANKSEL	r0x1017
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 01rr                      1-  317     	MOVR	r0x1017,W
                                    1-  318     	BANKSEL	r0x1019
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1-  319     	MOVAR	r0x1019
                                    1-  320     	BANKSEL	_R_AIN0_DATA
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 03rr                      1-  321     	ADDAR	_R_AIN0_DATA,F
                                    1-  322     	BANKSEL	r0x101A
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 01rr                      1-  323     	MOVR	r0x101A,W
     003A 0C03                      1-  324     	BTRSC	STATUS,0
     003B 05rr                      1-  325     	INCR	r0x101A,W
     003C 0D03                      1-  326     	BTRSC	STATUS,2
                                    1-  327     	MGOTO	_00004_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  328     	BANKSEL	_R_AIN0_DATA
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 03rr                      1-  329     	ADDAR	(_R_AIN0_DATA + 1),F
                                    1-  330     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0040                           1-  331     _00004_DS_:
                                    1-  332     	.line	69, "main.c"; 	R_AIN0_DATA >>=3;					// R_AIN0_DATA divided 8
     0040 1C03                      1-  333     	BCR	STATUS,0
                                    1-  334     	BANKSEL	_R_AIN0_DATA
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 13rr                      1-  335     	RRR	(_R_AIN0_DATA + 1),F
     0043 13rr                      1-  336     	RRR	_R_AIN0_DATA,F
                                    1-  337     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0044 1C03                      1-  338     	BCR	STATUS,0
     0045 13rr                      1-  339     	RRR	(_R_AIN0_DATA + 1),F
     0046 13rr                      1-  340     	RRR	_R_AIN0_DATA,F
                                    1-  341     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0047 1C03                      1-  342     	BCR	STATUS,0
     0048 13rr                      1-  343     	RRR	(_R_AIN0_DATA + 1),F
     0049 13rr                      1-  344     	RRR	_R_AIN0_DATA,F
                                    1-  345     	.line	71, "main.c"; 	F_Quarter_VDD_Convert(8);			// execute 1/4VDD input channel ADC converting 8 times
     004A 2108                      1-  346     	MOVIA	0x08
                                    1-  347     	MCALL	_F_Quarter_VDD_Convert
     004B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  348     	.line	72, "main.c"; 	R_Quarter_VDD_DATA <<= 4;			// R_Quarter_VDD_DATA shift left 4 bit
                                    1-  349     	BANKSEL	_R_Quarter_VDD_DATA
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 15rr                      1-  350     	SWAPR	(_R_Quarter_VDD_DATA + 1),W
     004E 22F0                      1-  351     	ANDIA	0xf0
     004F 00rr                      1-  352     	MOVAR	(_R_Quarter_VDD_DATA + 1)
     0050 15rr                      1-  353     	SWAPR	_R_Quarter_VDD_DATA,W
     0051 00rr                      1-  354     	MOVAR	_R_Quarter_VDD_DATA
     0052 220F                      1-  355     	ANDIA	0x0f
     0053 11rr                      1-  356     	IORAR	(_R_Quarter_VDD_DATA + 1),F
     0054 12rr                      1-  357     	XORAR	_R_Quarter_VDD_DATA,F
                                    1-  358     	.line	73, "main.c"; 	R_Quarter_VDD_DATA_LB &= 0xF0;		// Only get Bit7~4
     0055 21F0                      1-  359     	MOVIA	0xf0
                                    1-  360     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 10rr                      1-  361     	ANDAR	_R_Quarter_VDD_DATA_LB,F
                                    1-  362     	.line	74, "main.c"; 	R_Quarter_VDD_DATA += R_Quarter_VDD_DATA_LB; //// R_Quarter_VDD_DATA + R_Quarter_VDD_DATA_LB
     0058 01rr                      1-  363     	MOVR	_R_Quarter_VDD_DATA_LB,W
                                    1-  364     	BANKSEL	r0x1019
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 00rr                      1-  365     	MOVAR	r0x1019
                                    1-  366     	BANKSEL	r0x1017
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 00rr                      1-  367     	MOVAR	r0x1017
                                    1-  368     ;;107	CLRR	r0x1018
                                    1-  369     ;;105	MOVR	r0x1017,W
     005D 2100                      1-  370     	MOVIA	0x00
                                    1-  371     	BANKSEL	r0x101A
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 00rr                      1-  372     	MOVAR	r0x101A
                                    1-  373     	BANKSEL	r0x1019
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1-  374     	MOVR	r0x1019,W
                                    1-  375     	BANKSEL	_R_Quarter_VDD_DATA
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 03rr                      1-  376     	ADDAR	_R_Quarter_VDD_DATA,F
                                    1-  377     	BANKSEL	r0x101A
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1-  378     	MOVR	r0x101A,W
     0066 0C03                      1-  379     	BTRSC	STATUS,0
     0067 05rr                      1-  380     	INCR	r0x101A,W
     0068 0D03                      1-  381     	BTRSC	STATUS,2
                                    1-  382     	MGOTO	_00005_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  383     	BANKSEL	_R_Quarter_VDD_DATA
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 03rr                      1-  384     	ADDAR	(_R_Quarter_VDD_DATA + 1),F
                                    1-  385     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     006C                           1-  386     _00005_DS_:
                                    1-  387     	.line	75, "main.c"; 	R_Quarter_VDD_DATA >>=3;			// R_Quarter_VDD_DATA dividing 8
     006C 1C03                      1-  388     	BCR	STATUS,0
                                    1-  389     	BANKSEL	_R_Quarter_VDD_DATA
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 13rr                      1-  390     	RRR	(_R_Quarter_VDD_DATA + 1),F
     006F 13rr                      1-  391     	RRR	_R_Quarter_VDD_DATA,F
                                    1-  392     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0070 1C03                      1-  393     	BCR	STATUS,0
     0071 13rr                      1-  394     	RRR	(_R_Quarter_VDD_DATA + 1),F
     0072 13rr                      1-  395     	RRR	_R_Quarter_VDD_DATA,F
                                    1-  396     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0073 1C03                      1-  397     	BCR	STATUS,0
     0074 13rr                      1-  398     	RRR	(_R_Quarter_VDD_DATA + 1),F
     0075 13rr                      1-  399     	RRR	_R_Quarter_VDD_DATA,F
                                    1-  400     	MGOTO	_00106_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  401     	.line	77, "main.c"; 	}
                                    1-  402     	RETURN	
     0077 0010                      3-   40 m1      ret
                                    1-  403     ; exit point of _main
                                    1-  405     ;***
                                    1-  406     ;  pBlock Stats: dbName = C
                                    1-  407     ;***
                                    1-  408     ;has an exit
                                    1-  409     ;6 compiler assigned registers:
                                    1-  410     ;   r0x1006
                                    1-  411     ;   STK00
                                    1-  412     ;   r0x1007
                                    1-  413     ;   r0x1008
                                    1-  414     ;   r0x1009
                                    1-  415     ;   r0x100A
                                    1-  416     ;; Starting pCode block
                                    1-  417     .segment "code"; module=main, function=_delay
                                    1-  419     ;local variable name mapping:
     0000                           1-  424     _delay:
                                    1-  425     ; 2 exit points
                                    1-  426     	.line	112, "main.c"; 	void delay(int count)
                                    1-  427     	BANKSEL	r0x1006
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  428     	MOVAR	r0x1006
     0002 01rr                      1-  429     	MOVR	STK00,W
                                    1-  430     	BANKSEL	r0x1007
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1-  431     	MOVAR	r0x1007
                                    1-  432     	.line	115, "main.c"; 	for(i=1;i<=count;i++)
     0005 2101                      1-  433     	MOVIA	0x01
                                    1-  434     	BANKSEL	r0x1008
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1-  435     	MOVAR	r0x1008
                                    1-  436     	BANKSEL	r0x1009
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1-  437     	CLRR	r0x1009
     000A                           1-  438     _00136_DS_:
                                    1-  439     	BANKSEL	r0x1006
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1-  440     	MOVR	r0x1006,W
     000C 2580                      1-  441     	ADDIA	0x80
                                    1-  442     	BANKSEL	r0x100A
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1-  443     	MOVAR	r0x100A
                                    1-  444     	BANKSEL	r0x1009
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1-  445     	MOVR	r0x1009,W
     0011 2580                      1-  446     	ADDIA	0x80
                                    1-  447     	BANKSEL	r0x100A
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1-  448     	SUBAR	r0x100A,W
     0014 0903                      1-  449     	BTRSS	STATUS,2
                                    1-  450     	MGOTO	_00147_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  451     	BANKSEL	r0x1008
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1-  452     	MOVR	r0x1008,W
                                    1-  453     	BANKSEL	r0x1007
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 04rr                      1-  454     	SUBAR	r0x1007,W
     001A                           1-  455     _00147_DS_:
     001A 0803                      1-  456     	BTRSS	STATUS,0
                                    1-  457     	MGOTO	_00138_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  458     	BANKSEL	r0x1008
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 05rr                      1-  459     	INCR	r0x1008,F
     001E 0903                      1-  460     	BTRSS	STATUS,2
                                    1-  461     	MGOTO	_00001_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  462     	BANKSEL	r0x1009
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 05rr                      1-  463     	INCR	r0x1009,F
     0022                           1-  464     _00001_DS_:
                                    1-  465     	MGOTO	_00136_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023                           1-  466     _00138_DS_:
                                    1-  467     	.line	117, "main.c"; 	}
                                    1-  468     	RETURN	
     0023 0010                      3-   40 m1      ret
                                    1-  469     ; exit point of _delay
                                    1-  471     ;***
                                    1-  472     ;  pBlock Stats: dbName = C
                                    1-  473     ;***
                                    1-  474     ;has an exit
                                    1-  475     ;; Starting pCode block
                                    1-  476     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  478     _F_wait_eoc:
                                    1-  479     ; 2 exit points
     0000                           1-  480     _00129_DS_:
                                    1-  481     	.line	108, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  482     	BTRSS	_ADMDbits,5
                                    1-  483     	MGOTO	_00129_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  484     	.line	110, "main.c"; 	}
                                    1-  485     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1-  486     ; exit point of _F_wait_eoc
                                    1-  488     ;***
                                    1-  489     ;  pBlock Stats: dbName = C
                                    1-  490     ;***
                                    1-  491     ;has an exit
                                    1-  492     ;functions called:
                                    1-  493     ;   _F_wait_eoc
                                    1-  494     ;   _F_wait_eoc
                                    1-  495     ;6 compiler assigned registers:
                                    1-  496     ;   r0x100B
                                    1-  497     ;   r0x100C
                                    1-  498     ;   r0x100D
                                    1-  499     ;   r0x100E
                                    1-  500     ;   r0x100F
                                    1-  501     ;   r0x1010
                                    1-  502     ;; Starting pCode block
                                    1-  503     .segment "code"; module=main, function=_F_Quarter_VDD_Convert
                                    1-  505     ;local variable name mapping:
     0000                           1-  508     _F_Quarter_VDD_Convert:
                                    1-  509     ; 2 exit points
                                    1-  510     	.line	93, "main.c"; 	void F_Quarter_VDD_Convert(char count)
                                    1-  511     	BANKSEL	r0x100B
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  512     	MOVAR	r0x100B
                                    1-  513     	.line	96, "main.c"; 	ADMD  = 0x90 | C_Quarter_VDD;			// Select internal 1/4VDD as ADC input
     0002 219B                      1-  514     	MOVIA	0x9b
     0003 00rr                      1-  515     	MOVAR	_ADMD
                                    1-  516     	.line	97, "main.c"; 	for(i=1;i<=count;i++)
     0004 2101                      1-  517     	MOVIA	0x01
                                    1-  518     	BANKSEL	r0x100C
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 00rr                      1-  519     	MOVAR	r0x100C
     0007                           1-  520     _00122_DS_:
                                    1-  521     	BANKSEL	r0x100C
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1-  522     	MOVR	r0x100C,W
                                    1-  523     	BANKSEL	r0x100B
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1-  524     	SUBAR	r0x100B,W
     000B 0803                      1-  525     	BTRSS	STATUS,0
                                    1-  526     	MGOTO	_00124_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  527     	.line	99, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000D 1Brr                      1-  528     	BSR	_ADMDbits,6
                                    1-  529     	.line	100, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete	
                                    1-  530     	MCALL	_F_wait_eoc
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  531     	.line	101, "main.c"; 	R_Quarter_VDD_DATA_LB += ( 0x0F & ADR); 
     000F 210F                      1-  532     	MOVIA	0x0f
     0010 10rr                      1-  533     	ANDAR	_ADR,W
                                    1-  534     ;;3	MOVAR	r0x100D
                                    1-  535     	BANKSEL	_R_Quarter_VDD_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 03rr                      1-  536     	ADDAR	_R_Quarter_VDD_DATA_LB,F
                                    1-  537     	.line	102, "main.c"; 	R_Quarter_VDD_DATA    += ADD; 
     0013 01rr                      1-  538     	MOVR	_ADD,W
                                    1-  539     	BANKSEL	r0x100D
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1-  540     	MOVAR	r0x100D
                                    1-  541     ;;1	CLRR	r0x100E
                                    1-  542     ;;104	MOVR	r0x100D,W
                                    1-  543     ;;102	MOVAR	r0x100F
     0016 2100                      1-  544     	MOVIA	0x00
                                    1-  545     	BANKSEL	r0x1010
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1-  546     	MOVAR	r0x1010
                                    1-  547     ;;103	MOVR	r0x100F,W
                                    1-  548     	BANKSEL	r0x100D
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1-  549     	MOVR	r0x100D,W
                                    1-  550     	BANKSEL	_R_Quarter_VDD_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1-  551     	ADDAR	_R_Quarter_VDD_DATA,F
                                    1-  552     	BANKSEL	r0x1010
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1-  553     	MOVR	r0x1010,W
     001F 0C03                      1-  554     	BTRSC	STATUS,0
     0020 05rr                      1-  555     	INCR	r0x1010,W
     0021 0D03                      1-  556     	BTRSC	STATUS,2
                                    1-  557     	MGOTO	_00002_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  558     	BANKSEL	_R_Quarter_VDD_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1-  559     	ADDAR	(_R_Quarter_VDD_DATA + 1),F
     0025                           1-  560     _00002_DS_:
                                    1-  561     	.line	97, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  562     	BANKSEL	r0x100C
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 05rr                      1-  563     	INCR	r0x100C,F
                                    1-  564     	MGOTO	_00122_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1-  565     _00124_DS_:
                                    1-  566     	.line	104, "main.c"; 	}
                                    1-  567     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1-  568     ; exit point of _F_Quarter_VDD_Convert
                                    1-  570     ;***
                                    1-  571     ;  pBlock Stats: dbName = C
                                    1-  572     ;***
                                    1-  573     ;has an exit
                                    1-  574     ;functions called:
                                    1-  575     ;   _F_wait_eoc
                                    1-  576     ;   _F_wait_eoc
                                    1-  577     ;6 compiler assigned registers:
                                    1-  578     ;   r0x1011
                                    1-  579     ;   r0x1012
                                    1-  580     ;   r0x1013
                                    1-  581     ;   r0x1014
                                    1-  582     ;   r0x1015
                                    1-  583     ;   r0x1016
                                    1-  584     ;; Starting pCode block
                                    1-  585     .segment "code"; module=main, function=_F_AIN0_Convert
                                    1-  587     ;local variable name mapping:
     0000                           1-  590     _F_AIN0_Convert:
                                    1-  591     ; 2 exit points
                                    1-  592     	.line	80, "main.c"; 	void F_AIN0_Convert(char count)
                                    1-  593     	BANKSEL	r0x1011
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  594     	MOVAR	r0x1011
                                    1-  595     	.line	83, "main.c"; 	ADMD  = 0x90 | C_ADC_PA0;				// Select AIN0(PA0) pad as ADC input
     0002 2190                      1-  596     	MOVIA	0x90
     0003 00rr                      1-  597     	MOVAR	_ADMD
                                    1-  598     	.line	84, "main.c"; 	for(i=1;i<=count;i++)
     0004 2101                      1-  599     	MOVIA	0x01
                                    1-  600     	BANKSEL	r0x1012
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 00rr                      1-  601     	MOVAR	r0x1012
     0007                           1-  602     _00113_DS_:
                                    1-  603     	BANKSEL	r0x1012
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1-  604     	MOVR	r0x1012,W
                                    1-  605     	BANKSEL	r0x1011
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1-  606     	SUBAR	r0x1011,W
     000B 0803                      1-  607     	BTRSS	STATUS,0
                                    1-  608     	MGOTO	_00115_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  609     	.line	86, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000D 1Brr                      1-  610     	BSR	_ADMDbits,6
                                    1-  611     	.line	87, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1-  612     	MCALL	_F_wait_eoc
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  613     	.line	88, "main.c"; 	R_AIN0_DATA_LB += ( 0x0F & ADR); 
     000F 210F                      1-  614     	MOVIA	0x0f
     0010 10rr                      1-  615     	ANDAR	_ADR,W
                                    1-  616     ;;3	MOVAR	r0x1013
                                    1-  617     	BANKSEL	_R_AIN0_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 03rr                      1-  618     	ADDAR	_R_AIN0_DATA_LB,F
                                    1-  619     	.line	89, "main.c"; 	R_AIN0_DATA    += ADD; 
     0013 01rr                      1-  620     	MOVR	_ADD,W
                                    1-  621     	BANKSEL	r0x1013
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1-  622     	MOVAR	r0x1013
                                    1-  623     ;;1	CLRR	r0x1014
                                    1-  624     ;;101	MOVR	r0x1013,W
                                    1-  625     ;;99	MOVAR	r0x1015
     0016 2100                      1-  626     	MOVIA	0x00
                                    1-  627     	BANKSEL	r0x1016
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1-  628     	MOVAR	r0x1016
                                    1-  629     ;;100	MOVR	r0x1015,W
                                    1-  630     	BANKSEL	r0x1013
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1-  631     	MOVR	r0x1013,W
                                    1-  632     	BANKSEL	_R_AIN0_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1-  633     	ADDAR	_R_AIN0_DATA,F
                                    1-  634     	BANKSEL	r0x1016
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1-  635     	MOVR	r0x1016,W
     001F 0C03                      1-  636     	BTRSC	STATUS,0
     0020 05rr                      1-  637     	INCR	r0x1016,W
     0021 0D03                      1-  638     	BTRSC	STATUS,2
                                    1-  639     	MGOTO	_00003_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  640     	BANKSEL	_R_AIN0_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1-  641     	ADDAR	(_R_AIN0_DATA + 1),F
     0025                           1-  642     _00003_DS_:
                                    1-  643     	.line	84, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  644     	BANKSEL	r0x1012
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 05rr                      1-  645     	INCR	r0x1012,F
                                    1-  646     	MGOTO	_00113_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1-  647     _00115_DS_:
                                    1-  648     	.line	91, "main.c"; 	}
                                    1-  649     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1-  650     ; exit point of _F_AIN0_Convert
                                    1-  653     ;	code size estimation:
                                    1-  654     ;	  180+   60 =   240 instructions (  600 byte)
                                    1-  656     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810624
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062e.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
