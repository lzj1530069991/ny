
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A050D,c=on
                                    1-    9     	#include "ny8a050d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTBbits
                                    1-   15     	extern	_PCONbits
                                    1-   16     	extern	_BWUCONbits
                                    1-   17     	extern	_BPLCONbits
                                    1-   18     	extern	_BPHCONbits
                                    1-   19     	extern	_INTEbits
                                    1-   20     	extern	_INTFbits
                                    1-   21     	extern	_INDF
                                    1-   22     	extern	_TMR0
                                    1-   23     	extern	_PCL
                                    1-   24     	extern	_STATUS
                                    1-   25     	extern	_FSR
                                    1-   26     	extern	_PORTB
                                    1-   27     	extern	_PCON
                                    1-   28     	extern	_BWUCON
                                    1-   29     	extern	_PCHBUF
                                    1-   30     	extern	_BPLCON
                                    1-   31     	extern	_BPHCON
                                    1-   32     	extern	_INTE
                                    1-   33     	extern	_INTF
                                    1-   34     	extern	_TBHP
                                    1-   35     	extern	_TBHD
                                    1-   36     	extern	_OSCCR
                                    1-   37     	extern	_IOSTB
                                    1-   38     	extern	_PS0CV
                                    1-   39     	extern	_BODCON
                                    1-   40     	extern	_PCON1
                                    1-   41     	extern	_T0MD
                                    1-   42     	extern	___sdcc_saved_fsr
                                    1-   43     	extern	___sdcc_saved_stk00
                                    1-   44     	extern	___sdcc_saved_stk01
                                    1-   45     	extern	__nyc_ny8_startup
                                    1-   46     ;--------------------------------------------------------
                                    1-   47     ; global declarations
                                    1-   48     ;--------------------------------------------------------
                                    1-   49     	extern	_rainbow
                                    1-   50     	extern	_keyRead
                                    1-   51     	extern	_showRGB
                                    1-   52     	extern	_gotoSleep
                                    1-   53     	extern	_shanRed
                                    1-   54     	extern	_shandeng
                                    1-   55     	extern	_workCtr
                                    1-   56     	extern	_isr
                                    1-   57     	extern	_main
                                    1-   58     	extern	_intCount
                                    1-   59     	extern	_IntFlag
                                    1-   60     	extern	_ledCount
                                    1-   61     	extern	_workStep
                                    1-   62     	extern	_keyCount
                                    1-   63     	extern	_red
                                    1-   64     	extern	_green
                                    1-   65     	extern	_blue
                                    1-   66     	extern	_colorStep
                                    1-   67     	extern	_lastRed
                                    1-   68     	extern	_lastGreen
                                    1-   69     	extern	_lastBlue
                                    1-   70     	extern	_ledFlag
                                    1-   71     	extern	_count200ms
                                    1-   72     	extern	_delayTime
                                    1-   74     	extern PSAVE
                                    1-   75     	extern SSAVE
                                    1-   76     	extern WSAVE
                                    1-   77     	extern STK04
                                    1-   78     	extern STK03
                                    1-   79     	extern STK02
                                    1-   80     	extern STK01
                                    1-   81     	extern STK00
                                    1-   83     .segment "uninit", 0x20000010
 20000010                           1-   84     PSAVE:
                                    1-   85     	.res 1
 20000011                           1-   86     SSAVE:
                                    1-   87     	.res 1
 20000012                           1-   88     WSAVE:
                                    1-   89     	.res 1
 20000013                           1-   90     STK04:
                                    1-   91     	.res 1
 20000014                           1-   92     STK03:
                                    1-   93     	.res 1
 20000015                           1-   94     STK02:
                                    1-   95     	.res 1
 20000016                           1-   96     STK01:
                                    1-   97     	.res 1
 20000017                           1-   98     STK00:
                                    1-   99     	.res 1
                                    1-  101     ;--------------------------------------------------------
                                    1-  102     ; global definitions
                                    1-  103     ;--------------------------------------------------------
                                    1-  104     ;--------------------------------------------------------
                                    1-  105     ; absolute symbol definitions
                                    1-  106     ;--------------------------------------------------------
                                    1-  107     ;--------------------------------------------------------
                                    1-  108     ; compiler-defined variables
                                    1-  109     ;--------------------------------------------------------
                                    1-  110     .segment "uninit"
     0000                           1-  111     r0x1013:
                                    1-  112     	.res	1
                                    1-  113     .segment "uninit"
     0000                           1-  114     r0x1012:
                                    1-  115     	.res	1
                                    1-  116     ;--------------------------------------------------------
                                    1-  117     ; initialized data
                                    1-  118     ;--------------------------------------------------------
                                    1-  120     .segment "idata"
     0000                           1-  121     _intCount:
     0000 0000                      1-  122     	dw	0x00
                                    1-  126     .segment "idata"
     0000                           1-  127     _IntFlag:
     0000 0000                      1-  128     	dw	0x00
                                    1-  132     .segment "idata"
     0000                           1-  133     _ledCount:
     0000 0000                      1-  134     	dw	0x00
                                    1-  138     .segment "idata"
     0000                           1-  139     _workStep:
     0000 0000                      1-  140     	dw	0x00
                                    1-  144     .segment "idata"
     0000                           1-  145     _keyCount:
     0000 0000                      1-  146     	dw	0x00
                                    1-  150     .segment "idata"
     0000                           1-  151     _red:
     0000 0000                      1-  152     	dw	0x00
                                    1-  156     .segment "idata"
     0000                           1-  157     _green:
     0000 0000                      1-  158     	dw	0x00
                                    1-  162     .segment "idata"
     0000                           1-  163     _blue:
     0000 0000                      1-  164     	dw	0x00
                                    1-  168     .segment "idata"
     0000                           1-  169     _colorStep:
     0000 0000                      1-  170     	dw	0x00
                                    1-  174     .segment "idata"
     0000                           1-  175     _lastRed:
     0000 0000                      1-  176     	dw	0x00
                                    1-  180     .segment "idata"
     0000                           1-  181     _lastGreen:
     0000 0000                      1-  182     	dw	0x00
                                    1-  186     .segment "idata"
     0000                           1-  187     _lastBlue:
     0000 0000                      1-  188     	dw	0x00
                                    1-  192     .segment "idata"
     0000                           1-  193     _ledFlag:
     0000 0000                      1-  194     	dw	0x00
                                    1-  198     .segment "idata"
     0000                           1-  199     _count200ms:
     0000 0000                      1-  200     	dw	0x00
                                    1-  204     .segment "idata"
     0000                           1-  205     _delayTime:
     0000 0000                      1-  206     	dw	0x00
                                    1-  209     ;--------------------------------------------------------
                                    1-  210     ; overlayable items in internal ram 
                                    1-  211     ;--------------------------------------------------------
                                    1-  212     ;	udata_ovr
                                    1-  213     ;--------------------------------------------------------
                                    1-  214     ; reset vector 
                                    1-  215     ;--------------------------------------------------------
                                    1-  216     ORG	0x0000
     0000 3rrr                      1-  217     	LGOTO	__nyc_ny8_startup
                                    1-  218     ;--------------------------------------------------------
                                    1-  219     ; interrupt and initialization code
                                    1-  220     ;--------------------------------------------------------
                                    1-  221     ORG 0x0008
                                    1-  222     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  224     .segment "code"
     0000                           1-  225     __sdcc_interrupt:
                                    1-  226     ;***
                                    1-  227     ;  pBlock Stats: dbName = I
                                    1-  228     ;***
                                    1-  229     ;2 compiler assigned registers:
                                    1-  230     ;   STK00
                                    1-  231     ;   STK01
                                    1-  232     ;; Starting pCode block
     0000                           1-  233     _isr:
                                    1-  234     ; 0 exit points
                                    1-  235     	.line	34, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  236     	MOVAR	WSAVE
     0001 1503                      1-  237     	SWAPR	STATUS,W
     0002 0283                      1-  238     	CLRR	STATUS
     0003 00rr                      1-  239     	MOVAR	SSAVE
     0004 010A                      1-  240     	MOVR	PCHBUF,W
     0005 028A                      1-  241     	CLRR	PCHBUF
     0006 00rr                      1-  242     	MOVAR	PSAVE
     0007 0104                      1-  243     	MOVR	FSR,W
     0008 00rr                      1-  244     	MOVAR	___sdcc_saved_fsr
     0009 01rr                      1-  245     	MOVR	STK00,W
     000A 00rr                      1-  246     	MOVAR	___sdcc_saved_stk00
     000B 01rr                      1-  247     	MOVR	STK01,W
     000C 00rr                      1-  248     	MOVAR	___sdcc_saved_stk01
                                    1-  249     	.line	36, "main.c"; 	if(INTFbits.T0IF)
     000D 08rr                      1-  250     	BTRSS	_INTFbits,0
                                    1-  251     	MGOTO	_00110_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  252     	.line	38, "main.c"; 	TMR0 += 56;
     000F 2138                      1-  253     	MOVIA	0x38
     0010 03rr                      1-  254     	ADDAR	_TMR0,F
                                    1-  255     	.line	39, "main.c"; 	if(++intCount >= 100)
     0011 05rr                      1-  256     	INCR	_intCount,F
                                    1-  257     ;;unsigned compare: left < lit (0x64=100), size=1
     0012 2164                      1-  258     	MOVIA	0x64
     0013 04rr                      1-  259     	SUBAR	_intCount,W
     0014 0803                      1-  260     	BTRSS	STATUS,0
                                    1-  261     	MGOTO	_00110_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  262     	.line	41, "main.c"; 	intCount = 0;
     0016 02rr                      1-  263     	CLRR	_intCount
                                    1-  264     	.line	42, "main.c"; 	IntFlag = 1;
     0017 2101                      1-  265     	MOVIA	0x01
     0018 00rr                      1-  266     	MOVAR	_IntFlag
                                    1-  267     	.line	43, "main.c"; 	if(++count200ms >= 20)
     0019 05rr                      1-  268     	INCR	_count200ms,F
                                    1-  269     ;;unsigned compare: left < lit (0x14=20), size=1
     001A 2114                      1-  270     	MOVIA	0x14
     001B 04rr                      1-  271     	SUBAR	_count200ms,W
     001C 0C03                      1-  272     	BTRSC	STATUS,0
                                    1-  273     	.line	44, "main.c"; 	count200ms = 0;
     001D 02rr                      1-  274     	CLRR	_count200ms
     001E                           1-  275     _00110_DS_:
                                    1-  276     	.line	47, "main.c"; 	if(INTFbits.PBIF)
     001E 08rr                      1-  277     	BTRSS	_INTFbits,1
                                    1-  278     	MGOTO	_00112_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  279     	.line	49, "main.c"; 	INTF= (unsigned char)~(C_INT_PBKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     0020 21FD                      1-  280     	MOVIA	0xfd
     0021 00rr                      1-  281     	MOVAR	_INTF
     0022                           1-  282     _00112_DS_:
                                    1-  283     	.line	52, "main.c"; 	INTF = 0;
     0022 02rr                      1-  284     	CLRR	_INTF
                                    1-  285     	.line	54, "main.c"; 	}
     0023 01rr                      1-  286     	MOVR	___sdcc_saved_stk01,W
     0024 00rr                      1-  287     	MOVAR	STK01
     0025 01rr                      1-  288     	MOVR	___sdcc_saved_stk00,W
     0026 00rr                      1-  289     	MOVAR	STK00
     0027 01rr                      1-  290     	MOVR	___sdcc_saved_fsr,W
     0028 0084                      1-  291     	MOVAR	FSR
     0029 01rr                      1-  292     	MOVR	PSAVE,W
     002A 008A                      1-  293     	MOVAR	PCHBUF
     002B 0283                      1-  294     	CLRR	STATUS
     002C 15rr                      1-  295     	SWAPR	SSAVE,W
     002D 0083                      1-  296     	MOVAR	STATUS
     002E 15rr                      1-  297     	SWAPR	WSAVE,F
     002F 15rr                      1-  298     	SWAPR	WSAVE,W
     0030                           1-  299     END_OF_INTERRUPT:
     0030 0011                      1-  300     	RETIE	
                                    1-  302     ;--------------------------------------------------------
                                    1-  303     ; code
                                    1-  304     ;--------------------------------------------------------
                                    1-  305     ;***
                                    1-  306     ;  pBlock Stats: dbName = M
                                    1-  307     ;***
                                    1-  308     ;has an exit
                                    1-  309     ;functions called:
                                    1-  310     ;   _showRGB
                                    1-  311     ;   _gotoSleep
                                    1-  312     ;   _keyRead
                                    1-  313     ;   _workCtr
                                    1-  314     ;   _showRGB
                                    1-  315     ;   _gotoSleep
                                    1-  316     ;   _keyRead
                                    1-  317     ;   _workCtr
                                    1-  318     ;1 compiler assigned register :
                                    1-  319     ;   r0x1013
                                    1-  320     ;; Starting pCode block
                                    1-  321     .segment "code"; module=main, function=_main
                                    1-  323     ;local variable name mapping:
     0000                           1-  325     _main:
                                    1-  326     ; 2 exit points
                                    1-  327     	.line	60, "main.c"; 	DISI();
     0000 0013                      1-  328     	DISI
                                    1-  329     	.line	61, "main.c"; 	BPHCON = (unsigned char)~C_PB5_PHB;				// Enable PB4 Pull-High Resistor,others disable
     0001 21DF                      1-  330     	MOVIA	0xdf
     0002 00rr                      1-  331     	MOVAR	_BPHCON
                                    1-  332     	.line	62, "main.c"; 	IOSTB =  C_PB5_Input;	// Set PB4 & PB1 to input mode,others set to output mode
     0003 2120                      1-  333     	MOVIA	0x20
     0004 000r                      1-  334     	IOST	_IOSTB
                                    1-  335     	.line	63, "main.c"; 	PORTB = 0x07;                       // PB2 & PB0 output high
     0005 2107                      1-  336     	MOVIA	0x07
     0006 00rr                      1-  337     	MOVAR	_PORTB
                                    1-  338     	.line	64, "main.c"; 	INTE =  C_INT_TMR0;
     0007 2101                      1-  339     	MOVIA	0x01
     0008 00rr                      1-  340     	MOVAR	_INTE
                                    1-  341     	.line	65, "main.c"; 	TMR0 = 55;
     0009 2137                      1-  342     	MOVIA	0x37
     000A 00rr                      1-  343     	MOVAR	_TMR0
                                    1-  344     	.line	66, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     000B 0200                      1-  345     	CLRA	
     000C 0003                      1-  346     	T0MD	
                                    1-  347     	.line	69, "main.c"; 	PCON = C_WDT_En;				// Enable WDT ,  Enable LVR
     000D 2180                      1-  348     	MOVIA	0x80
     000E 00rr                      1-  349     	MOVAR	_PCON
                                    1-  350     	.line	72, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     000F 2101                      1-  351     	MOVIA	0x01
     0010 000r                      1-  352     	IOST	_PCON1
                                    1-  353     	.line	73, "main.c"; 	ENI();
     0011 0004                      1-  354     	ENI
                                    1-  355     	.line	74, "main.c"; 	workStep = 1;
     0012 2101                      1-  356     	MOVIA	0x01
     0013 00rr                      1-  357     	MOVAR	_workStep
                                    1-  358     	.line	75, "main.c"; 	ledFlag = 1;
     0014 00rr                      1-  359     	MOVAR	_ledFlag
     0015                           1-  360     _00130_DS_:
                                    1-  361     	.line	79, "main.c"; 	CLRWDT();
     0015 0002                      1-  362     	clrwdt
                                    1-  363     	.line	80, "main.c"; 	showRGB();
                                    1-  364     	MCALL	_showRGB
     0016 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  365     	.line	81, "main.c"; 	if(!IntFlag)
     0017 01rr                      1-  366     	MOVR	_IntFlag,W
     0018 0D03                      1-  367     	BTRSC	STATUS,2
                                    1-  368     	MGOTO	_00130_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  369     	.line	83, "main.c"; 	IntFlag = 0;   
     001A 02rr                      1-  370     	CLRR	_IntFlag
                                    1-  371     	.line	84, "main.c"; 	if(workStep == 0 && keyCount == 0)
     001B 01rr                      1-  372     	MOVR	_workStep,W
     001C 0903                      1-  373     	BTRSS	STATUS,2
                                    1-  374     	MGOTO	_00120_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
     001E 01rr                      1-  375     	MOVR	_keyCount,W
     001F 0D03                      1-  376     	BTRSC	STATUS,2
                                    1-  377     	.line	85, "main.c"; 	gotoSleep();
                                    1-  378     	MCALL	_gotoSleep
     0020 2rrr                      3-   66 m1      LCALL rom_address
     0021                           1-  379     _00120_DS_:
                                    1-  380     	.line	86, "main.c"; 	char kclick = keyRead(0x20 & (~PORTB));
     0021 07rr                      1-  381     	COMR	_PORTB,W
     0022 00rr                      1-  382     	MOVAR	r0x1013
     0023 2120                      1-  383     	MOVIA	0x20
     0024 10rr                      1-  384     	ANDAR	r0x1013,F
     0025 01rr                      1-  385     	MOVR	r0x1013,W
                                    1-  386     	MCALL	_keyRead
     0026 2rrr                      3-   66 m1      LCALL rom_address
     0027 00rr                      1-  387     	MOVAR	r0x1013
                                    1-  388     	.line	87, "main.c"; 	if(kclick > 0)
     0028 01rr                      1-  389     	MOVR	r0x1013,W
     0029 0D03                      1-  390     	BTRSC	STATUS,2
                                    1-  391     	MGOTO	_00127_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  392     	.line	89, "main.c"; 	if(++workStep > 6)
     002B 05rr                      1-  393     	INCR	_workStep,F
                                    1-  394     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  395     ;;unsigned compare: left >= lit (0x7=7), size=1
     002C 2107                      1-  396     	MOVIA	0x07
     002D 04rr                      1-  397     	SUBAR	_workStep,W
     002E 0C03                      1-  398     	BTRSC	STATUS,0
                                    1-  399     	.line	90, "main.c"; 	workStep = 0;
     002F 02rr                      1-  400     	CLRR	_workStep
                                    1-  401     	.line	91, "main.c"; 	if(workStep == 1)
     0030 01rr                      1-  402     	MOVR	_workStep,W
     0031 2401                      1-  403     	XORIA	0x01
     0032 0903                      1-  404     	BTRSS	STATUS,2
                                    1-  405     	MGOTO	_00125_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  406     	.line	93, "main.c"; 	colorStep = 1;
     0034 2101                      1-  407     	MOVIA	0x01
     0035 00rr                      1-  408     	MOVAR	_colorStep
                                    1-  409     	.line	94, "main.c"; 	ledFlag = 1;
     0036 00rr                      1-  410     	MOVAR	_ledFlag
     0037                           1-  411     _00125_DS_:
                                    1-  412     	.line	96, "main.c"; 	count200ms = 0;
     0037 02rr                      1-  413     	CLRR	_count200ms
     0038                           1-  414     _00127_DS_:
                                    1-  415     	.line	98, "main.c"; 	workCtr();
                                    1-  416     	MCALL	_workCtr
     0038 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  417     	MGOTO	_00130_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  418     	.line	100, "main.c"; 	}
                                    1-  419     	RETURN	
     003A 0010                      3-   40 m1      ret
                                    1-  420     ; exit point of _main
                                    1-  422     ;***
                                    1-  423     ;  pBlock Stats: dbName = C
                                    1-  424     ;***
                                    1-  425     ;has an exit
                                    1-  426     ;; Starting pCode block
                                    1-  427     .segment "code"; module=main, function=_rainbow
     0000                           1-  429     _rainbow:
                                    1-  430     ; 2 exit points
                                    1-  431     	.line	245, "main.c"; 	if(red > lastRed)
     0000 01rr                      1-  432     	MOVR	_red,W
     0001 04rr                      1-  433     	SUBAR	_lastRed,W
     0002 0803                      1-  434     	BTRSS	STATUS,0
                                    1-  435     	.line	246, "main.c"; 	red--;
     0003 06rr                      1-  436     	DECR	_red,F
                                    1-  437     	.line	247, "main.c"; 	if(green > lastGreen)
     0004 01rr                      1-  438     	MOVR	_green,W
     0005 04rr                      1-  439     	SUBAR	_lastGreen,W
     0006 0803                      1-  440     	BTRSS	STATUS,0
                                    1-  441     	.line	248, "main.c"; 	green--;
     0007 06rr                      1-  442     	DECR	_green,F
                                    1-  443     	.line	249, "main.c"; 	if(blue > lastBlue)
     0008 01rr                      1-  444     	MOVR	_blue,W
     0009 04rr                      1-  445     	SUBAR	_lastBlue,W
     000A 0803                      1-  446     	BTRSS	STATUS,0
                                    1-  447     	.line	250, "main.c"; 	blue--;
     000B 06rr                      1-  448     	DECR	_blue,F
                                    1-  449     	.line	251, "main.c"; 	if(red < lastRed)
     000C 01rr                      1-  450     	MOVR	_lastRed,W
     000D 04rr                      1-  451     	SUBAR	_red,W
     000E 0803                      1-  452     	BTRSS	STATUS,0
                                    1-  453     	.line	252, "main.c"; 	red++;
     000F 05rr                      1-  454     	INCR	_red,F
                                    1-  455     	.line	253, "main.c"; 	if(green < lastGreen)
     0010 01rr                      1-  456     	MOVR	_lastGreen,W
     0011 04rr                      1-  457     	SUBAR	_green,W
     0012 0803                      1-  458     	BTRSS	STATUS,0
                                    1-  459     	.line	254, "main.c"; 	green++;
     0013 05rr                      1-  460     	INCR	_green,F
                                    1-  461     	.line	255, "main.c"; 	if(blue < lastBlue)
     0014 01rr                      1-  462     	MOVR	_lastBlue,W
     0015 04rr                      1-  463     	SUBAR	_blue,W
     0016 0803                      1-  464     	BTRSS	STATUS,0
                                    1-  465     	.line	256, "main.c"; 	blue++;
     0017 05rr                      1-  466     	INCR	_blue,F
                                    1-  467     	.line	257, "main.c"; 	if(delayTime > 0)
     0018 01rr                      1-  468     	MOVR	_delayTime,W
     0019 0D03                      1-  469     	BTRSC	STATUS,2
                                    1-  470     	MGOTO	_00217_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  471     	.line	259, "main.c"; 	delayTime--;
     001B 06rr                      1-  472     	DECR	_delayTime,F
                                    1-  473     	.line	260, "main.c"; 	return;
                                    1-  474     	MGOTO	_00249_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
     001D                           1-  475     _00217_DS_:
                                    1-  476     	.line	262, "main.c"; 	if(colorStep == 1)
     001D 01rr                      1-  477     	MOVR	_colorStep,W
     001E 2401                      1-  478     	XORIA	0x01
     001F 0903                      1-  479     	BTRSS	STATUS,2
                                    1-  480     	MGOTO	_00239_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  481     	.line	264, "main.c"; 	lastRed = 255;
     0021 21FF                      1-  482     	MOVIA	0xff
     0022 00rr                      1-  483     	MOVAR	_lastRed
                                    1-  484     	.line	265, "main.c"; 	lastGreen = 0;
     0023 02rr                      1-  485     	CLRR	_lastGreen
                                    1-  486     	.line	266, "main.c"; 	lastBlue = 0;
     0024 02rr                      1-  487     	CLRR	_lastBlue
                                    1-  488     	MGOTO	_00240_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
     0026                           1-  489     _00239_DS_:
                                    1-  490     	.line	269, "main.c"; 	else if(colorStep == 2)
     0026 01rr                      1-  491     	MOVR	_colorStep,W
     0027 2402                      1-  492     	XORIA	0x02
     0028 0903                      1-  493     	BTRSS	STATUS,2
                                    1-  494     	MGOTO	_00236_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  495     	.line	271, "main.c"; 	lastRed = 255;
     002A 21FF                      1-  496     	MOVIA	0xff
     002B 00rr                      1-  497     	MOVAR	_lastRed
                                    1-  498     	.line	272, "main.c"; 	lastGreen = 255;
     002C 00rr                      1-  499     	MOVAR	_lastGreen
                                    1-  500     	.line	273, "main.c"; 	lastBlue = 0;
     002D 02rr                      1-  501     	CLRR	_lastBlue
                                    1-  502     	MGOTO	_00240_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1-  503     _00236_DS_:
                                    1-  504     	.line	275, "main.c"; 	else if(colorStep == 3)
     002F 01rr                      1-  505     	MOVR	_colorStep,W
     0030 2403                      1-  506     	XORIA	0x03
     0031 0903                      1-  507     	BTRSS	STATUS,2
                                    1-  508     	MGOTO	_00233_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  509     	.line	277, "main.c"; 	lastRed = 0;
     0033 02rr                      1-  510     	CLRR	_lastRed
                                    1-  511     	.line	278, "main.c"; 	lastGreen = 255;
     0034 21FF                      1-  512     	MOVIA	0xff
     0035 00rr                      1-  513     	MOVAR	_lastGreen
                                    1-  514     	.line	279, "main.c"; 	lastBlue = 0;
     0036 02rr                      1-  515     	CLRR	_lastBlue
                                    1-  516     	MGOTO	_00240_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
     0038                           1-  517     _00233_DS_:
                                    1-  518     	.line	281, "main.c"; 	else if(colorStep == 4)
     0038 01rr                      1-  519     	MOVR	_colorStep,W
     0039 2404                      1-  520     	XORIA	0x04
     003A 0903                      1-  521     	BTRSS	STATUS,2
                                    1-  522     	MGOTO	_00230_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  523     	.line	283, "main.c"; 	lastRed = 0;
     003C 02rr                      1-  524     	CLRR	_lastRed
                                    1-  525     	.line	284, "main.c"; 	lastGreen = 0;
     003D 02rr                      1-  526     	CLRR	_lastGreen
                                    1-  527     	.line	285, "main.c"; 	lastBlue = 255;
     003E 21FF                      1-  528     	MOVIA	0xff
     003F 00rr                      1-  529     	MOVAR	_lastBlue
                                    1-  530     	MGOTO	_00240_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041                           1-  531     _00230_DS_:
                                    1-  532     	.line	287, "main.c"; 	else if(colorStep == 5)
     0041 01rr                      1-  533     	MOVR	_colorStep,W
     0042 2405                      1-  534     	XORIA	0x05
     0043 0903                      1-  535     	BTRSS	STATUS,2
                                    1-  536     	MGOTO	_00227_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  537     	.line	289, "main.c"; 	lastRed = 255;
     0045 21FF                      1-  538     	MOVIA	0xff
     0046 00rr                      1-  539     	MOVAR	_lastRed
                                    1-  540     	.line	290, "main.c"; 	lastGreen = 0;
     0047 02rr                      1-  541     	CLRR	_lastGreen
                                    1-  542     	.line	291, "main.c"; 	lastBlue = 255;
     0048 21FF                      1-  543     	MOVIA	0xff
     0049 00rr                      1-  544     	MOVAR	_lastBlue
                                    1-  545     	MGOTO	_00240_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
     004B                           1-  546     _00227_DS_:
                                    1-  547     	.line	293, "main.c"; 	else if(colorStep == 6)
     004B 01rr                      1-  548     	MOVR	_colorStep,W
     004C 2406                      1-  549     	XORIA	0x06
     004D 0903                      1-  550     	BTRSS	STATUS,2
                                    1-  551     	MGOTO	_00224_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  552     	.line	295, "main.c"; 	lastRed = 255;
     004F 21FF                      1-  553     	MOVIA	0xff
     0050 00rr                      1-  554     	MOVAR	_lastRed
                                    1-  555     	.line	296, "main.c"; 	lastGreen = 0;
     0051 02rr                      1-  556     	CLRR	_lastGreen
                                    1-  557     	.line	297, "main.c"; 	lastBlue = 0;
     0052 02rr                      1-  558     	CLRR	_lastBlue
                                    1-  559     	MGOTO	_00240_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
     0054                           1-  560     _00224_DS_:
                                    1-  561     	.line	299, "main.c"; 	else if(colorStep == 7)
     0054 01rr                      1-  562     	MOVR	_colorStep,W
     0055 2407                      1-  563     	XORIA	0x07
     0056 0903                      1-  564     	BTRSS	STATUS,2
                                    1-  565     	MGOTO	_00221_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  566     	.line	301, "main.c"; 	lastRed = 255;
     0058 21FF                      1-  567     	MOVIA	0xff
     0059 00rr                      1-  568     	MOVAR	_lastRed
                                    1-  569     	.line	302, "main.c"; 	lastGreen = 255;
     005A 00rr                      1-  570     	MOVAR	_lastGreen
                                    1-  571     	.line	303, "main.c"; 	lastBlue = 0;
     005B 02rr                      1-  572     	CLRR	_lastBlue
                                    1-  573     	MGOTO	_00240_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
     005D                           1-  574     _00221_DS_:
                                    1-  575     	.line	305, "main.c"; 	else if(colorStep == 8)
     005D 01rr                      1-  576     	MOVR	_colorStep,W
     005E 2408                      1-  577     	XORIA	0x08
     005F 0903                      1-  578     	BTRSS	STATUS,2
                                    1-  579     	MGOTO	_00240_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  580     	.line	307, "main.c"; 	lastRed = 0;
     0061 02rr                      1-  581     	CLRR	_lastRed
                                    1-  582     	.line	308, "main.c"; 	lastGreen = 255;
     0062 21FF                      1-  583     	MOVIA	0xff
     0063 00rr                      1-  584     	MOVAR	_lastGreen
                                    1-  585     	.line	309, "main.c"; 	lastBlue = 0;
     0064 02rr                      1-  586     	CLRR	_lastBlue
     0065                           1-  587     _00240_DS_:
                                    1-  588     	.line	313, "main.c"; 	if(red == lastRed && blue == lastBlue && green == lastGreen)
     0065 01rr                      1-  589     	MOVR	_lastRed,W
     0066 12rr                      1-  590     	XORAR	_red,W
     0067 0903                      1-  591     	BTRSS	STATUS,2
                                    1-  592     	MGOTO	_00249_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
     0069 01rr                      1-  593     	MOVR	_lastBlue,W
     006A 12rr                      1-  594     	XORAR	_blue,W
     006B 0903                      1-  595     	BTRSS	STATUS,2
                                    1-  596     	MGOTO	_00249_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
     006D 01rr                      1-  597     	MOVR	_lastGreen,W
     006E 12rr                      1-  598     	XORAR	_green,W
     006F 0903                      1-  599     	BTRSS	STATUS,2
                                    1-  600     	MGOTO	_00249_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  601     	.line	315, "main.c"; 	if(++colorStep > 8)
     0071 05rr                      1-  602     	INCR	_colorStep,F
                                    1-  603     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  604     ;;unsigned compare: left >= lit (0x9=9), size=1
     0072 2109                      1-  605     	MOVIA	0x09
     0073 04rr                      1-  606     	SUBAR	_colorStep,W
     0074 0803                      1-  607     	BTRSS	STATUS,0
                                    1-  608     	MGOTO	_00242_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  609     	.line	317, "main.c"; 	colorStep = 4;
     0076 2104                      1-  610     	MOVIA	0x04
     0077 00rr                      1-  611     	MOVAR	_colorStep
     0078                           1-  612     _00242_DS_:
                                    1-  613     	.line	319, "main.c"; 	if(delayTime == 0)
     0078 01rr                      1-  614     	MOVR	_delayTime,W
     0079 0903                      1-  615     	BTRSS	STATUS,2
                                    1-  616     	MGOTO	_00249_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  617     	.line	320, "main.c"; 	delayTime = 90;
     007B 215A                      1-  618     	MOVIA	0x5a
     007C 00rr                      1-  619     	MOVAR	_delayTime
     007D                           1-  620     _00249_DS_:
                                    1-  621     	.line	322, "main.c"; 	}
                                    1-  622     	RETURN	
     007D 0010                      3-   40 m1      ret
                                    1-  623     ; exit point of _rainbow
                                    1-  625     ;***
                                    1-  626     ;  pBlock Stats: dbName = C
                                    1-  627     ;***
                                    1-  628     ;has an exit
                                    1-  629     ;1 compiler assigned register :
                                    1-  630     ;   r0x1012
                                    1-  631     ;; Starting pCode block
                                    1-  632     .segment "code"; module=main, function=_keyRead
                                    1-  634     ;local variable name mapping:
     0000                           1-  636     _keyRead:
                                    1-  637     ; 2 exit points
                                    1-  638     	.line	219, "main.c"; 	char keyRead(char keyStatus)	
     0000 00rr                      1-  639     	MOVAR	r0x1012
                                    1-  640     	.line	221, "main.c"; 	if(keyStatus)
     0001 01rr                      1-  641     	MOVR	r0x1012,W
     0002 0D03                      1-  642     	BTRSC	STATUS,2
                                    1-  643     	MGOTO	_00197_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  644     	.line	223, "main.c"; 	keyCount++;
     0004 05rr                      1-  645     	INCR	_keyCount,F
                                    1-  646     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1-  647     	.line	224, "main.c"; 	if(keyCount >= 200)
     0005 21C8                      1-  648     	MOVIA	0xc8
     0006 04rr                      1-  649     	SUBAR	_keyCount,W
     0007 0803                      1-  650     	BTRSS	STATUS,0
                                    1-  651     	MGOTO	_00198_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  652     	.line	226, "main.c"; 	keyCount = 200;
     0009 21C8                      1-  653     	MOVIA	0xc8
     000A 00rr                      1-  654     	MOVAR	_keyCount
                                    1-  655     	MGOTO	_00198_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  656     ;;unsigned compare: left < lit (0xA=10), size=1
     000C                           1-  657     _00197_DS_:
                                    1-  658     	.line	231, "main.c"; 	if(keyCount >= 10)
     000C 210A                      1-  659     	MOVIA	0x0a
     000D 04rr                      1-  660     	SUBAR	_keyCount,W
     000E 0803                      1-  661     	BTRSS	STATUS,0
                                    1-  662     	MGOTO	_00195_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  663     	.line	233, "main.c"; 	keyCount = 0;
     0010 02rr                      1-  664     	CLRR	_keyCount
                                    1-  665     	.line	234, "main.c"; 	return	1;
     0011 2101                      1-  666     	MOVIA	0x01
                                    1-  667     	MGOTO	_00199_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
     0013                           1-  668     _00195_DS_:
                                    1-  669     	.line	236, "main.c"; 	keyCount = 0;
     0013 02rr                      1-  670     	CLRR	_keyCount
     0014                           1-  671     _00198_DS_:
                                    1-  672     	.line	238, "main.c"; 	return 0;
     0014 2100                      1-  673     	MOVIA	0x00
     0015                           1-  674     _00199_DS_:
                                    1-  675     	.line	239, "main.c"; 	}
                                    1-  676     	RETURN	
     0015 0010                      3-   40 m1      ret
                                    1-  677     ; exit point of _keyRead
                                    1-  679     ;***
                                    1-  680     ;  pBlock Stats: dbName = C
                                    1-  681     ;***
                                    1-  682     ;; Starting pCode block
                                    1-  683     .segment "code"; module=main, function=_showRGB
     0000                           1-  685     _showRGB:
                                    1-  686     ; 0 exit points
                                    1-  687     	.line	183, "main.c"; 	if(ledFlag == 0)
     0000 01rr                      1-  688     	MOVR	_ledFlag,W
     0001 0903                      1-  689     	BTRSS	STATUS,2
                                    1-  690     	MGOTO	_00175_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  691     	.line	185, "main.c"; 	PORTB |= 0x07;
     0003 2107                      1-  692     	MOVIA	0x07
     0004 11rr                      1-  693     	IORAR	_PORTB,F
                                    1-  694     	.line	186, "main.c"; 	return;
                                    1-  695     	MGOTO	_00187_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
     0006                           1-  696     _00175_DS_:
                                    1-  697     	.line	188, "main.c"; 	if(blue <= ledCount)
     0006 01rr                      1-  698     	MOVR	_blue,W
     0007 04rr                      1-  699     	SUBAR	_ledCount,W
     0008 0803                      1-  700     	BTRSS	STATUS,0
                                    1-  701     	MGOTO	_00177_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  702     	.line	190, "main.c"; 	PORTB |= 0x04;
     000A 19rr                      1-  703     	BSR	_PORTB,2
                                    1-  704     	MGOTO	_00178_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
     000C                           1-  705     _00177_DS_:
                                    1-  706     	.line	194, "main.c"; 	PORTB &= 0xFB;
     000C 1Drr                      1-  707     	BCR	_PORTB,2
     000D                           1-  708     _00178_DS_:
                                    1-  709     	.line	197, "main.c"; 	if(green <= ledCount)
     000D 01rr                      1-  710     	MOVR	_green,W
     000E 04rr                      1-  711     	SUBAR	_ledCount,W
     000F 0803                      1-  712     	BTRSS	STATUS,0
                                    1-  713     	MGOTO	_00180_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  714     	.line	199, "main.c"; 	PORTB |= 0x02;
     0011 18rr                      1-  715     	BSR	_PORTB,1
                                    1-  716     	MGOTO	_00181_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
     0013                           1-  717     _00180_DS_:
                                    1-  718     	.line	203, "main.c"; 	PORTB &= 0xFD;
     0013 1Crr                      1-  719     	BCR	_PORTB,1
     0014                           1-  720     _00181_DS_:
                                    1-  721     	.line	206, "main.c"; 	if(red <= ledCount)
     0014 01rr                      1-  722     	MOVR	_red,W
     0015 04rr                      1-  723     	SUBAR	_ledCount,W
     0016 0803                      1-  724     	BTRSS	STATUS,0
                                    1-  725     	MGOTO	_00183_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  726     	.line	208, "main.c"; 	PORTB |= 0x01;
     0018 18rr                      1-  727     	BSR	_PORTB,0
                                    1-  728     	MGOTO	_00184_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
     001A                           1-  729     _00183_DS_:
                                    1-  730     	.line	212, "main.c"; 	PORTB &= 0xFE;
     001A 1Crr                      1-  731     	BCR	_PORTB,0
     001B                           1-  732     _00184_DS_:
                                    1-  733     	.line	214, "main.c"; 	if(++ledCount > 254)
     001B 05rr                      1-  734     	INCR	_ledCount,F
                                    1-  735     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  736     ;;unsigned compare: left >= lit (0xFF=255), size=1
     001C 21FF                      1-  737     	MOVIA	0xff
     001D 04rr                      1-  738     	SUBAR	_ledCount,W
     001E 0C03                      1-  739     	BTRSC	STATUS,0
                                    1-  740     	.line	215, "main.c"; 	ledCount = 0;
     001F 02rr                      1-  741     	CLRR	_ledCount
     0020                           1-  742     _00187_DS_:
                                    1-  743     	.line	216, "main.c"; 	}
                                    1-  744     	RETURN	
     0020 0010                      3-   40 m1      ret
                                    1-  746     ;***
                                    1-  747     ;  pBlock Stats: dbName = C
                                    1-  748     ;***
                                    1-  749     ;has an exit
                                    1-  750     ;; Starting pCode block
                                    1-  751     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  753     _gotoSleep:
                                    1-  754     ; 2 exit points
                                    1-  755     	.line	162, "main.c"; 	PORTB = 0x07;
     0000 2107                      1-  756     	MOVIA	0x07
     0001 00rr                      1-  757     	MOVAR	_PORTB
                                    1-  758     	.line	163, "main.c"; 	workStep = 0;
     0002 02rr                      1-  759     	CLRR	_workStep
                                    1-  760     	.line	164, "main.c"; 	BWUCON = 0x20;
     0003 2120                      1-  761     	MOVIA	0x20
     0004 00rr                      1-  762     	MOVAR	_BWUCON
                                    1-  763     	.line	165, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_PBKey;
     0005 2103                      1-  764     	MOVIA	0x03
     0006 00rr                      1-  765     	MOVAR	_INTE
                                    1-  766     	.line	166, "main.c"; 	PCON =  0;	
     0007 02rr                      1-  767     	CLRR	_PCON
                                    1-  768     	.line	167, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0008 02rr                      1-  769     	CLRR	_INTF
                                    1-  770     	.line	168, "main.c"; 	CLRWDT();
     0009 0002                      1-  771     	clrwdt
                                    1-  772     	.line	169, "main.c"; 	ENI();
     000A 0004                      1-  773     	ENI
                                    1-  774     	.line	170, "main.c"; 	SLEEP();
     000B 0001                      1-  775     	sleep
                                    1-  776     	.line	171, "main.c"; 	BWUCON = 0x00;
     000C 02rr                      1-  777     	CLRR	_BWUCON
                                    1-  778     	.line	172, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000D 2101                      1-  779     	MOVIA	0x01
     000E 00rr                      1-  780     	MOVAR	_INTE
                                    1-  781     	.line	173, "main.c"; 	INTF = 0;
     000F 02rr                      1-  782     	CLRR	_INTF
                                    1-  783     	.line	175, "main.c"; 	PCON = C_WDT_En;				// Enable WDT ,  Enable LVR
     0010 2180                      1-  784     	MOVIA	0x80
     0011 00rr                      1-  785     	MOVAR	_PCON
                                    1-  786     	.line	177, "main.c"; 	}
                                    1-  787     	RETURN	
     0012 0010                      3-   40 m1      ret
                                    1-  788     ; exit point of _gotoSleep
                                    1-  790     ;***
                                    1-  791     ;  pBlock Stats: dbName = C
                                    1-  792     ;***
                                    1-  793     ;has an exit
                                    1-  794     ;; Starting pCode block
                                    1-  795     .segment "code"; module=main, function=_shanRed
     0000                           1-  797     _shanRed:
                                    1-  798     ; 2 exit points
                                    1-  799     ;;unsigned compare: left < lit (0xA=10), size=1
                                    1-  800     	.line	149, "main.c"; 	if(count200ms < 10)
     0000 210A                      1-  801     	MOVIA	0x0a
     0001 04rr                      1-  802     	SUBAR	_count200ms,W
     0002 0C03                      1-  803     	BTRSC	STATUS,0
                                    1-  804     	MGOTO	_00163_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  805     	.line	151, "main.c"; 	red =  255;
     0004 21FF                      1-  806     	MOVIA	0xff
     0005 00rr                      1-  807     	MOVAR	_red
                                    1-  808     	.line	152, "main.c"; 	green = blue = 0;
     0006 02rr                      1-  809     	CLRR	_blue
     0007 02rr                      1-  810     	CLRR	_green
                                    1-  811     	MGOTO	_00165_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
     0009                           1-  812     _00163_DS_:
                                    1-  813     	.line	156, "main.c"; 	red = green = blue = 0;
     0009 02rr                      1-  814     	CLRR	_blue
     000A 02rr                      1-  815     	CLRR	_green
     000B 02rr                      1-  816     	CLRR	_red
     000C                           1-  817     _00165_DS_:
                                    1-  818     	.line	158, "main.c"; 	}
                                    1-  819     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1-  820     ; exit point of _shanRed
                                    1-  822     ;***
                                    1-  823     ;  pBlock Stats: dbName = C
                                    1-  824     ;***
                                    1-  825     ;has an exit
                                    1-  826     ;; Starting pCode block
                                    1-  827     .segment "code"; module=main, function=_shandeng
     0000                           1-  829     _shandeng:
                                    1-  830     ; 2 exit points
                                    1-  831     ;;unsigned compare: left < lit (0xA=10), size=1
                                    1-  832     	.line	137, "main.c"; 	if(count200ms < 10)
     0000 210A                      1-  833     	MOVIA	0x0a
     0001 04rr                      1-  834     	SUBAR	_count200ms,W
     0002 0C03                      1-  835     	BTRSC	STATUS,0
                                    1-  836     	MGOTO	_00155_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  837     	.line	139, "main.c"; 	red = green = blue = 255;
     0004 21FF                      1-  838     	MOVIA	0xff
     0005 00rr                      1-  839     	MOVAR	_blue
     0006 00rr                      1-  840     	MOVAR	_green
     0007 00rr                      1-  841     	MOVAR	_red
                                    1-  842     	MGOTO	_00157_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
     0009                           1-  843     _00155_DS_:
                                    1-  844     	.line	143, "main.c"; 	red = green = blue = 0;
     0009 02rr                      1-  845     	CLRR	_blue
     000A 02rr                      1-  846     	CLRR	_green
     000B 02rr                      1-  847     	CLRR	_red
     000C                           1-  848     _00157_DS_:
                                    1-  849     	.line	145, "main.c"; 	}
                                    1-  850     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1-  851     ; exit point of _shandeng
                                    1-  853     ;***
                                    1-  854     ;  pBlock Stats: dbName = C
                                    1-  855     ;***
                                    1-  856     ;has an exit
                                    1-  857     ;functions called:
                                    1-  858     ;   _showRGB
                                    1-  859     ;   _rainbow
                                    1-  860     ;   _shandeng
                                    1-  861     ;   _shanRed
                                    1-  862     ;   _showRGB
                                    1-  863     ;   _rainbow
                                    1-  864     ;   _shandeng
                                    1-  865     ;   _shanRed
                                    1-  866     ;; Starting pCode block
                                    1-  867     .segment "code"; module=main, function=_workCtr
     0000                           1-  869     _workCtr:
                                    1-  870     ; 2 exit points
                                    1-  871     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  872     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1-  873     	.line	104, "main.c"; 	switch(workStep)
     0000 2107                      1-  874     	MOVIA	0x07
     0001 04rr                      1-  875     	SUBAR	_workStep,W
     0002 0C03                      1-  876     	BTRSC	STATUS,0
                                    1-  877     	MGOTO	_00143_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
     0004 21rr                      1-  878     	MOVIA	((_00149_DS_ >> 8) & 0xff)
     0005 008A                      1-  879     	MOVAR	PCHBUF
     0006 01rr                      1-  880     	MOVR	_workStep,W
     0007 25rr                      1-  881     	ADDIA	_00149_DS_
     0008 0C03                      1-  882     	BTRSC	STATUS,0
     0009 058A                      1-  883     	INCR	PCHBUF,F
     000A 0082                      1-  884     	MOVAR	PCL
     000B                           1-  885     _00149_DS_:
                                    1-  886     	MGOTO	_00135_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  887     	MGOTO	_00136_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  888     	MGOTO	_00137_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  889     	MGOTO	_00138_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  890     	MGOTO	_00139_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  891     	MGOTO	_00140_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  892     	MGOTO	_00141_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
     0012                           1-  893     _00135_DS_:
                                    1-  894     	.line	107, "main.c"; 	ledFlag = 0;
     0012 02rr                      1-  895     	CLRR	_ledFlag
                                    1-  896     	.line	108, "main.c"; 	showRGB();
                                    1-  897     	MCALL	_showRGB
     0013 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  898     	.line	109, "main.c"; 	break;
                                    1-  899     	MGOTO	_00143_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
     0015                           1-  900     _00136_DS_:
                                    1-  901     	.line	111, "main.c"; 	rainbow();
                                    1-  902     	MCALL	_rainbow
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  903     	.line	112, "main.c"; 	break;
                                    1-  904     	MGOTO	_00143_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
     0017                           1-  905     _00137_DS_:
                                    1-  906     	.line	114, "main.c"; 	shandeng();
                                    1-  907     	MCALL	_shandeng
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  908     	.line	115, "main.c"; 	break;
                                    1-  909     	MGOTO	_00143_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
     0019                           1-  910     _00138_DS_:
                                    1-  911     	.line	117, "main.c"; 	red = 255;
     0019 21FF                      1-  912     	MOVIA	0xff
     001A 00rr                      1-  913     	MOVAR	_red
                                    1-  914     	.line	118, "main.c"; 	green = blue = 0;
     001B 02rr                      1-  915     	CLRR	_blue
     001C 02rr                      1-  916     	CLRR	_green
                                    1-  917     	.line	119, "main.c"; 	break;
                                    1-  918     	MGOTO	_00143_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
     001E                           1-  919     _00139_DS_:
                                    1-  920     	.line	121, "main.c"; 	green = 255;
     001E 21FF                      1-  921     	MOVIA	0xff
     001F 00rr                      1-  922     	MOVAR	_green
                                    1-  923     	.line	122, "main.c"; 	red = blue = 0;
     0020 02rr                      1-  924     	CLRR	_blue
     0021 02rr                      1-  925     	CLRR	_red
                                    1-  926     	.line	123, "main.c"; 	break;
                                    1-  927     	MGOTO	_00143_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023                           1-  928     _00140_DS_:
                                    1-  929     	.line	125, "main.c"; 	blue = 255;
     0023 21FF                      1-  930     	MOVIA	0xff
     0024 00rr                      1-  931     	MOVAR	_blue
                                    1-  932     	.line	126, "main.c"; 	red = green = 0;
     0025 02rr                      1-  933     	CLRR	_green
     0026 02rr                      1-  934     	CLRR	_red
                                    1-  935     	.line	127, "main.c"; 	break;
                                    1-  936     	MGOTO	_00143_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1-  937     _00141_DS_:
                                    1-  938     	.line	129, "main.c"; 	shanRed();
                                    1-  939     	MCALL	_shanRed
     0028 2rrr                      3-   66 m1      LCALL rom_address
     0029                           1-  940     _00143_DS_:
                                    1-  941     	.line	132, "main.c"; 	}
                                    1-  942     	RETURN	
     0029 0010                      3-   40 m1      ret
                                    1-  943     ; exit point of _workCtr
                                    1-  946     ;	code size estimation:
                                    1-  947     ;	  370+    0 =   370 instructions (  740 byte)
                                    1-  949     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 00000006
__PROCESSOR__           Constant 00800503
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000000
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8a050d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A050D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000001FF
DATA ROM     = 0x00000000 - 0x000001FF
RESERVED MEM = 0x00000200 - 0x00000210
SRAM / SFR   = 0x00000000 - 0x00000000
