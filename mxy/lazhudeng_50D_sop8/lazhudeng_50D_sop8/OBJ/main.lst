
                    Nyquest Technology Co., Ltd.

NYASM 2.30

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A050D,c=on
                                    1-    9     	#include "ny8a050d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTBbits
                                    1-   15     	extern	_PCONbits
                                    1-   16     	extern	_BWUCONbits
                                    1-   17     	extern	_BPLCONbits
                                    1-   18     	extern	_BPHCONbits
                                    1-   19     	extern	_INTEbits
                                    1-   20     	extern	_INTFbits
                                    1-   21     	extern	_INDF
                                    1-   22     	extern	_TMR0
                                    1-   23     	extern	_PCL
                                    1-   24     	extern	_STATUS
                                    1-   25     	extern	_FSR
                                    1-   26     	extern	_PORTB
                                    1-   27     	extern	_PCON
                                    1-   28     	extern	_BWUCON
                                    1-   29     	extern	_PCHBUF
                                    1-   30     	extern	_BPLCON
                                    1-   31     	extern	_BPHCON
                                    1-   32     	extern	_INTE
                                    1-   33     	extern	_INTF
                                    1-   34     	extern	_TBHP
                                    1-   35     	extern	_TBHD
                                    1-   36     	extern	_OSCCR
                                    1-   37     	extern	_IOSTB
                                    1-   38     	extern	_PS0CV
                                    1-   39     	extern	_BODCON
                                    1-   40     	extern	_PCON1
                                    1-   41     	extern	_T0MD
                                    1-   42     	extern	___sdcc_saved_fsr
                                    1-   43     	extern	___sdcc_saved_stk00
                                    1-   44     	extern	___sdcc_saved_stk01
                                    1-   45     	extern	__nyc_ny8_startup
                                    1-   46     ;--------------------------------------------------------
                                    1-   47     ; global declarations
                                    1-   48     ;--------------------------------------------------------
                                    1-   49     	extern	_pwmCtr
                                    1-   50     	extern	_led45Ctr
                                    1-   51     	extern	_led3Off
                                    1-   52     	extern	_led3On
                                    1-   53     	extern	_workCtr
                                    1-   54     	extern	_workCtr2
                                    1-   55     	extern	_isr
                                    1-   56     	extern	_main
                                    1-   57     	extern	_intCount
                                    1-   58     	extern	_IntFlag
                                    1-   59     	extern	_ledCount
                                    1-   60     	extern	_currentDuty
                                    1-   61     	extern	_addFlag
                                    1-   62     	extern	_waitTime
                                    1-   63     	extern	_count100ms
                                    1-   64     	extern	_workStep
                                    1-   65     	extern	_maxTime
                                    1-   67     	extern PSAVE
                                    1-   68     	extern SSAVE
                                    1-   69     	extern WSAVE
                                    1-   70     	extern STK04
                                    1-   71     	extern STK03
                                    1-   72     	extern STK02
                                    1-   73     	extern STK01
                                    1-   74     	extern STK00
                                    1-   76     .segment "uninit", 0x20000010
 20000010                           1-   77     PSAVE:
                                    1-   78     	.res 1
 20000011                           1-   79     SSAVE:
                                    1-   80     	.res 1
 20000012                           1-   81     WSAVE:
                                    1-   82     	.res 1
 20000013                           1-   83     STK04:
                                    1-   84     	.res 1
 20000014                           1-   85     STK03:
                                    1-   86     	.res 1
 20000015                           1-   87     STK02:
                                    1-   88     	.res 1
 20000016                           1-   89     STK01:
                                    1-   90     	.res 1
 20000017                           1-   91     STK00:
                                    1-   92     	.res 1
                                    1-   94     ;--------------------------------------------------------
                                    1-   95     ; global definitions
                                    1-   96     ;--------------------------------------------------------
                                    1-   97     ;--------------------------------------------------------
                                    1-   98     ; absolute symbol definitions
                                    1-   99     ;--------------------------------------------------------
                                    1-  100     ;--------------------------------------------------------
                                    1-  101     ; compiler-defined variables
                                    1-  102     ;--------------------------------------------------------
                                    1-  103     .segment "uninit"
     0000                           1-  104     r0x100F:
                                    1-  105     	.res	1
                                    1-  106     .segment "uninit"
     0000                           1-  107     r0x100E:
                                    1-  108     	.res	1
                                    1-  109     .segment "uninit"
     0000                           1-  110     r0x100D:
                                    1-  111     	.res	1
                                    1-  112     .segment "uninit"
     0000                           1-  113     r0x100C:
                                    1-  114     	.res	1
                                    1-  115     ;--------------------------------------------------------
                                    1-  116     ; initialized data
                                    1-  117     ;--------------------------------------------------------
                                    1-  119     .segment "idata"
     0000                           1-  120     _intCount:
     0000 0000                      1-  121     	dw	0x00
                                    1-  125     .segment "idata"
     0000                           1-  126     _IntFlag:
     0000 0000                      1-  127     	dw	0x00
                                    1-  131     .segment "idata"
     0000                           1-  132     _ledCount:
     0000 0000                      1-  133     	dw	0x00
                                    1-  137     .segment "idata"
     0000                           1-  138     _currentDuty:
     0000 0000                      1-  139     	dw	0x00
                                    1-  143     .segment "idata"
     0000                           1-  144     _addFlag:
     0000 0000                      1-  145     	dw	0x00
                                    1-  149     .segment "idata"
     0000                           1-  150     _waitTime:
     0000 000E                      1-  151     	dw	0x0e
                                    1-  155     .segment "idata"
     0000                           1-  156     _count100ms:
     0000 0000                      1-  157     	dw	0x00
                                    1-  161     .segment "idata"
     0000                           1-  162     _workStep:
     0000 0000                      1-  163     	dw	0x00
                                    1-  167     .segment "idata"
     0000                           1-  168     _maxTime:
     0000 0000                      1-  169     	dw	0x00
                                    1-  172     ;--------------------------------------------------------
                                    1-  173     ; overlayable items in internal ram 
                                    1-  174     ;--------------------------------------------------------
                                    1-  175     ;	udata_ovr
                                    1-  176     ;--------------------------------------------------------
                                    1-  177     ; reset vector 
                                    1-  178     ;--------------------------------------------------------
                                    1-  179     ORG	0x0000
     0000 3rrr                      1-  180     	LGOTO	__nyc_ny8_startup
                                    1-  181     ;--------------------------------------------------------
                                    1-  182     ; interrupt and initialization code
                                    1-  183     ;--------------------------------------------------------
                                    1-  184     ORG 0x0008
                                    1-  185     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  187     .segment "code"
     0000                           1-  188     __sdcc_interrupt:
                                    1-  189     ;***
                                    1-  190     ;  pBlock Stats: dbName = I
                                    1-  191     ;***
                                    1-  192     ;2 compiler assigned registers:
                                    1-  193     ;   STK00
                                    1-  194     ;   STK01
                                    1-  195     ;; Starting pCode block
     0000                           1-  196     _isr:
                                    1-  197     ; 0 exit points
                                    1-  198     	.line	47, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  199     	MOVAR	WSAVE
     0001 1503                      1-  200     	SWAPR	STATUS,W
     0002 0283                      1-  201     	CLRR	STATUS
     0003 00rr                      1-  202     	MOVAR	SSAVE
     0004 010A                      1-  203     	MOVR	PCHBUF,W
     0005 028A                      1-  204     	CLRR	PCHBUF
     0006 00rr                      1-  205     	MOVAR	PSAVE
     0007 0104                      1-  206     	MOVR	FSR,W
     0008 00rr                      1-  207     	MOVAR	___sdcc_saved_fsr
     0009 01rr                      1-  208     	MOVR	STK00,W
     000A 00rr                      1-  209     	MOVAR	___sdcc_saved_stk00
     000B 01rr                      1-  210     	MOVR	STK01,W
     000C 00rr                      1-  211     	MOVAR	___sdcc_saved_stk01
                                    1-  212     	.line	49, "main.c"; 	if(INTFbits.T0IF)
     000D 08rr                      1-  213     	BTRSS	_INTFbits,0
                                    1-  214     	MGOTO	_00108_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  215     	.line	51, "main.c"; 	TMR0 += 48;
     000F 2130                      1-  216     	MOVIA	0x30
     0010 03rr                      1-  217     	ADDAR	_TMR0,F
                                    1-  218     	.line	52, "main.c"; 	if(++intCount >= 10)
     0011 05rr                      1-  219     	INCR	_intCount,F
                                    1-  220     ;;unsigned compare: left < lit (0xA=10), size=1
     0012 210A                      1-  221     	MOVIA	0x0a
     0013 04rr                      1-  222     	SUBAR	_intCount,W
     0014 0803                      1-  223     	BTRSS	STATUS,0
                                    1-  224     	MGOTO	_00108_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  225     	.line	54, "main.c"; 	intCount = 0;
     0016 02rr                      1-  226     	CLRR	_intCount
                                    1-  227     	.line	55, "main.c"; 	IntFlag = 1;
     0017 2101                      1-  228     	MOVIA	0x01
     0018 00rr                      1-  229     	MOVAR	_IntFlag
     0019                           1-  230     _00108_DS_:
                                    1-  231     	.line	58, "main.c"; 	if(INTFbits.PBIF)
     0019 08rr                      1-  232     	BTRSS	_INTFbits,1
                                    1-  233     	MGOTO	_00110_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  234     	.line	60, "main.c"; 	INTF= (unsigned char)~(C_INT_PBKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     001B 21FD                      1-  235     	MOVIA	0xfd
     001C 00rr                      1-  236     	MOVAR	_INTF
     001D                           1-  237     _00110_DS_:
                                    1-  238     	.line	63, "main.c"; 	INTF = 0;
     001D 02rr                      1-  239     	CLRR	_INTF
                                    1-  240     	.line	65, "main.c"; 	}
     001E 01rr                      1-  241     	MOVR	___sdcc_saved_stk01,W
     001F 00rr                      1-  242     	MOVAR	STK01
     0020 01rr                      1-  243     	MOVR	___sdcc_saved_stk00,W
     0021 00rr                      1-  244     	MOVAR	STK00
     0022 01rr                      1-  245     	MOVR	___sdcc_saved_fsr,W
     0023 0084                      1-  246     	MOVAR	FSR
     0024 01rr                      1-  247     	MOVR	PSAVE,W
     0025 008A                      1-  248     	MOVAR	PCHBUF
     0026 0283                      1-  249     	CLRR	STATUS
     0027 15rr                      1-  250     	SWAPR	SSAVE,W
     0028 0083                      1-  251     	MOVAR	STATUS
     0029 15rr                      1-  252     	SWAPR	WSAVE,F
     002A 15rr                      1-  253     	SWAPR	WSAVE,W
     002B                           1-  254     END_OF_INTERRUPT:
     002B 0011                      1-  255     	RETIE	
                                    1-  257     ;--------------------------------------------------------
                                    1-  258     ; code
                                    1-  259     ;--------------------------------------------------------
                                    1-  260     ;***
                                    1-  261     ;  pBlock Stats: dbName = M
                                    1-  262     ;***
                                    1-  263     ;has an exit
                                    1-  264     ;functions called:
                                    1-  265     ;   _pwmCtr
                                    1-  266     ;   _led45Ctr
                                    1-  267     ;   _workCtr
                                    1-  268     ;   _workCtr2
                                    1-  269     ;   _pwmCtr
                                    1-  270     ;   _led45Ctr
                                    1-  271     ;   _workCtr
                                    1-  272     ;   _workCtr2
                                    1-  273     ;; Starting pCode block
                                    1-  274     .segment "code"; module=main, function=_main
     0000                           1-  276     _main:
                                    1-  277     ; 2 exit points
                                    1-  278     	.line	70, "main.c"; 	DISI();
     0000 0013                      1-  279     	DISI
                                    1-  280     	.line	71, "main.c"; 	BPHCON = 0xFF;				// Enable PB4 Pull-High Resistor,others disable
     0001 21FF                      1-  281     	MOVIA	0xff
     0002 00rr                      1-  282     	MOVAR	_BPHCON
                                    1-  283     	.line	72, "main.c"; 	IOSTB =  0x00;	// Set PB4 & PB1 to input mode,others set to output mode
     0003 0200                      1-  284     	CLRA	
     0004 000r                      1-  285     	IOST	_IOSTB
                                    1-  286     	.line	73, "main.c"; 	PORTB = 0xFF;                       // PB2 & PB0 output high
     0005 21FF                      1-  287     	MOVIA	0xff
     0006 00rr                      1-  288     	MOVAR	_PORTB
                                    1-  289     	.line	74, "main.c"; 	INTE =  C_INT_TMR0;
     0007 2101                      1-  290     	MOVIA	0x01
     0008 00rr                      1-  291     	MOVAR	_INTE
                                    1-  292     	.line	75, "main.c"; 	TMR0 = 48;
     0009 2130                      1-  293     	MOVIA	0x30
     000A 00rr                      1-  294     	MOVAR	_TMR0
                                    1-  295     	.line	76, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     000B 0200                      1-  296     	CLRA	
     000C 0003                      1-  297     	T0MD	
                                    1-  298     	.line	79, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     000D 2188                      1-  299     	MOVIA	0x88
     000E 00rr                      1-  300     	MOVAR	_PCON
                                    1-  301     	.line	82, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     000F 2101                      1-  302     	MOVIA	0x01
     0010 000r                      1-  303     	IOST	_PCON1
                                    1-  304     	.line	83, "main.c"; 	ENI();
     0011 0004                      1-  305     	ENI
                                    1-  306     	.line	84, "main.c"; 	currentDuty = 244;
     0012 21F4                      1-  307     	MOVIA	0xf4
     0013 00rr                      1-  308     	MOVAR	_currentDuty
                                    1-  309     	.line	85, "main.c"; 	addFlag = 0;
     0014 02rr                      1-  310     	CLRR	_addFlag
                                    1-  311     	.line	86, "main.c"; 	maxTime = 100;
     0015 2164                      1-  312     	MOVIA	0x64
     0016 00rr                      1-  313     	MOVAR	_maxTime
     0017                           1-  314     _00139_DS_:
                                    1-  315     	.line	89, "main.c"; 	CLRWDT();
     0017 0002                      1-  316     	clrwdt
                                    1-  317     	.line	90, "main.c"; 	pwmCtr();
                                    1-  318     	MCALL	_pwmCtr
     0018 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  319     	.line	91, "main.c"; 	if(!IntFlag)
     0019 01rr                      1-  320     	MOVR	_IntFlag,W
     001A 0D03                      1-  321     	BTRSC	STATUS,2
                                    1-  322     	MGOTO	_00139_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  323     	.line	93, "main.c"; 	IntFlag = 0;
     001C 02rr                      1-  324     	CLRR	_IntFlag
                                    1-  325     	.line	94, "main.c"; 	led45Ctr();
                                    1-  326     	MCALL	_led45Ctr
     001D 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  327     	.line	95, "main.c"; 	if(count100ms == 0)
     001E 01rr                      1-  328     	MOVR	_count100ms,W
     001F 0903                      1-  329     	BTRSS	STATUS,2
                                    1-  330     	MGOTO	_00121_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  331     ;;unsigned compare: left < lit (0x12=18), size=1
                                    1-  332     	.line	97, "main.c"; 	if(workStep < 18)
     0021 2112                      1-  333     	MOVIA	0x12
     0022 04rr                      1-  334     	SUBAR	_workStep,W
     0023 0C03                      1-  335     	BTRSC	STATUS,0
                                    1-  336     	MGOTO	_00118_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  337     	.line	98, "main.c"; 	workCtr();
                                    1-  338     	MCALL	_workCtr
     0025 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  339     	MGOTO	_00121_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1-  340     _00118_DS_:
                                    1-  341     	.line	100, "main.c"; 	workCtr2();
                                    1-  342     	MCALL	_workCtr2
     0027 2rrr                      3-   66 m1      LCALL rom_address
     0028                           1-  343     _00121_DS_:
                                    1-  344     	.line	102, "main.c"; 	if(++count100ms > maxTime)
     0028 05rr                      1-  345     	INCR	_count100ms,F
     0029 01rr                      1-  346     	MOVR	_count100ms,W
     002A 04rr                      1-  347     	SUBAR	_maxTime,W
     002B 0C03                      1-  348     	BTRSC	STATUS,0
                                    1-  349     	MGOTO	_00139_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  350     	.line	104, "main.c"; 	count100ms = 0;
     002D 02rr                      1-  351     	CLRR	_count100ms
                                    1-  352     	.line	105, "main.c"; 	if(++workStep > 34)
     002E 05rr                      1-  353     	INCR	_workStep,F
                                    1-  354     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  355     ;;unsigned compare: left >= lit (0x23=35), size=1
     002F 2123                      1-  356     	MOVIA	0x23
     0030 04rr                      1-  357     	SUBAR	_workStep,W
     0031 0C03                      1-  358     	BTRSC	STATUS,0
                                    1-  359     	.line	107, "main.c"; 	workStep = 0;
     0032 02rr                      1-  360     	CLRR	_workStep
                                    1-  361     	.line	109, "main.c"; 	if(workStep < 17)
     0033 2111                      1-  362     	MOVIA	0x11
     0034 04rr                      1-  363     	SUBAR	_workStep,W
     0035 0C03                      1-  364     	BTRSC	STATUS,0
                                    1-  365     	MGOTO	_00133_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  366     	.line	111, "main.c"; 	maxTime = 100;
     0037 2164                      1-  367     	MOVIA	0x64
     0038 00rr                      1-  368     	MOVAR	_maxTime
                                    1-  369     	MGOTO	_00139_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
     003A                           1-  370     _00133_DS_:
                                    1-  371     	.line	113, "main.c"; 	else if(workStep == 17)
     003A 01rr                      1-  372     	MOVR	_workStep,W
     003B 2411                      1-  373     	XORIA	0x11
     003C 0903                      1-  374     	BTRSS	STATUS,2
                                    1-  375     	MGOTO	_00130_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  376     	.line	115, "main.c"; 	maxTime = 80;
     003E 2150                      1-  377     	MOVIA	0x50
     003F 00rr                      1-  378     	MOVAR	_maxTime
                                    1-  379     	MGOTO	_00139_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  380     ;;unsigned compare: left < lit (0x21=33), size=1
     0041                           1-  381     _00130_DS_:
                                    1-  382     	.line	117, "main.c"; 	else if(workStep < 33)
     0041 2121                      1-  383     	MOVIA	0x21
     0042 04rr                      1-  384     	SUBAR	_workStep,W
     0043 0C03                      1-  385     	BTRSC	STATUS,0
                                    1-  386     	MGOTO	_00127_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  387     	.line	119, "main.c"; 	maxTime = 60;
     0045 213C                      1-  388     	MOVIA	0x3c
     0046 00rr                      1-  389     	MOVAR	_maxTime
                                    1-  390     	MGOTO	_00139_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
     0048                           1-  391     _00127_DS_:
                                    1-  392     	.line	121, "main.c"; 	else if(workStep == 33)
     0048 01rr                      1-  393     	MOVR	_workStep,W
     0049 2421                      1-  394     	XORIA	0x21
     004A 0903                      1-  395     	BTRSS	STATUS,2
                                    1-  396     	MGOTO	_00139_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  397     	.line	123, "main.c"; 	maxTime = 40;
     004C 2128                      1-  398     	MOVIA	0x28
     004D 00rr                      1-  399     	MOVAR	_maxTime
                                    1-  400     	MGOTO	_00139_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  401     	.line	128, "main.c"; 	}
                                    1-  402     	RETURN	
     004F 0010                      3-   40 m1      ret
                                    1-  403     ; exit point of _main
                                    1-  405     ;***
                                    1-  406     ;  pBlock Stats: dbName = C
                                    1-  407     ;***
                                    1-  408     ;; Starting pCode block
                                    1-  409     .segment "code"; module=main, function=_pwmCtr
     0000                           1-  411     _pwmCtr:
                                    1-  412     ; 0 exit points
                                    1-  413     	.line	258, "main.c"; 	if(currentDuty > ledCount)
     0000 01rr                      1-  414     	MOVR	_currentDuty,W
     0001 04rr                      1-  415     	SUBAR	_ledCount,W
     0002 0C03                      1-  416     	BTRSC	STATUS,0
                                    1-  417     	MGOTO	_00239_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  418     	.line	260, "main.c"; 	PORTB |= 0x30;
     0004 2130                      1-  419     	MOVIA	0x30
     0005 11rr                      1-  420     	IORAR	_PORTB,F
                                    1-  421     	MGOTO	_00240_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
     0007                           1-  422     _00239_DS_:
                                    1-  423     	.line	264, "main.c"; 	PORTB &= 0xCF;
     0007 21CF                      1-  424     	MOVIA	0xcf
     0008 10rr                      1-  425     	ANDAR	_PORTB,F
     0009                           1-  426     _00240_DS_:
                                    1-  427     	.line	266, "main.c"; 	if(++ledCount > 243)
     0009 05rr                      1-  428     	INCR	_ledCount,F
                                    1-  429     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  430     ;;unsigned compare: left >= lit (0xF4=244), size=1
     000A 21F4                      1-  431     	MOVIA	0xf4
     000B 04rr                      1-  432     	SUBAR	_ledCount,W
     000C 0C03                      1-  433     	BTRSC	STATUS,0
                                    1-  434     	.line	267, "main.c"; 	ledCount = 0;
     000D 02rr                      1-  435     	CLRR	_ledCount
                                    1-  436     	.line	268, "main.c"; 	}
                                    1-  437     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1-  439     ;***
                                    1-  440     ;  pBlock Stats: dbName = C
                                    1-  441     ;***
                                    1-  442     ;has an exit
                                    1-  443     ;; Starting pCode block
                                    1-  444     .segment "code"; module=main, function=_led45Ctr
     0000                           1-  446     _led45Ctr:
                                    1-  447     ; 2 exit points
                                    1-  448     	.line	230, "main.c"; 	if(waitTime > 0)
     0000 01rr                      1-  449     	MOVR	_waitTime,W
     0001 0D03                      1-  450     	BTRSC	STATUS,2
                                    1-  451     	MGOTO	_00231_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  452     	.line	232, "main.c"; 	waitTime--;
     0003 06rr                      1-  453     	DECR	_waitTime,F
                                    1-  454     	MGOTO	_00233_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
     0005                           1-  455     _00231_DS_:
                                    1-  456     	.line	236, "main.c"; 	if(addFlag)
     0005 01rr                      1-  457     	MOVR	_addFlag,W
     0006 0D03                      1-  458     	BTRSC	STATUS,2
                                    1-  459     	MGOTO	_00228_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  460     	.line	238, "main.c"; 	if(++currentDuty > 242)
     0008 05rr                      1-  461     	INCR	_currentDuty,F
                                    1-  462     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  463     ;;unsigned compare: left >= lit (0xF3=243), size=1
     0009 21F3                      1-  464     	MOVIA	0xf3
     000A 04rr                      1-  465     	SUBAR	_currentDuty,W
     000B 0803                      1-  466     	BTRSS	STATUS,0
                                    1-  467     	MGOTO	_00233_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  468     	.line	240, "main.c"; 	currentDuty = 243;
     000D 21F3                      1-  469     	MOVIA	0xf3
     000E 00rr                      1-  470     	MOVAR	_currentDuty
                                    1-  471     	.line	241, "main.c"; 	addFlag = 0;
     000F 02rr                      1-  472     	CLRR	_addFlag
                                    1-  473     	MGOTO	_00233_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
     0011                           1-  474     _00228_DS_:
                                    1-  475     	.line	246, "main.c"; 	if(--currentDuty == 0)
     0011 17rr                      1-  476     	DECRSZ	_currentDuty,F
                                    1-  477     	MGOTO	_00233_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  478     	.line	248, "main.c"; 	currentDuty = 0;
     0013 02rr                      1-  479     	CLRR	_currentDuty
                                    1-  480     	.line	249, "main.c"; 	addFlag = 1;
     0014 2101                      1-  481     	MOVIA	0x01
     0015 00rr                      1-  482     	MOVAR	_addFlag
                                    1-  483     	.line	250, "main.c"; 	waitTime = 11;
     0016 210B                      1-  484     	MOVIA	0x0b
     0017 00rr                      1-  485     	MOVAR	_waitTime
     0018                           1-  486     _00233_DS_:
                                    1-  487     	.line	254, "main.c"; 	}
                                    1-  488     	RETURN	
     0018 0010                      3-   40 m1      ret
                                    1-  489     ; exit point of _led45Ctr
                                    1-  491     ;***
                                    1-  492     ;  pBlock Stats: dbName = C
                                    1-  493     ;***
                                    1-  494     ;has an exit
                                    1-  495     ;1 compiler assigned register :
                                    1-  496     ;   r0x100C
                                    1-  497     ;; Starting pCode block
                                    1-  498     .segment "code"; module=main, function=_led3Off
     0000                           1-  500     _led3Off:
                                    1-  501     ; 2 exit points
                                    1-  502     	.line	224, "main.c"; 	PORTB |= 0x08;
     0000 19rr                      1-  503     	BSR	_PORTB,3
                                    1-  504     	.line	225, "main.c"; 	IOSTB |= 0x08;
     0001 001r                      1-  505     	IOSTR	_IOSTB
     0002 00rr                      1-  506     	MOVAR	r0x100C
     0003 19rr                      1-  507     	BSR	r0x100C,3
     0004 01rr                      1-  508     	MOVR	r0x100C,W
     0005 000r                      1-  509     	IOST	_IOSTB
                                    1-  510     	.line	226, "main.c"; 	}
                                    1-  511     	RETURN	
     0006 0010                      3-   40 m1      ret
                                    1-  512     ; exit point of _led3Off
                                    1-  514     ;***
                                    1-  515     ;  pBlock Stats: dbName = C
                                    1-  516     ;***
                                    1-  517     ;has an exit
                                    1-  518     ;1 compiler assigned register :
                                    1-  519     ;   r0x100D
                                    1-  520     ;; Starting pCode block
                                    1-  521     .segment "code"; module=main, function=_led3On
     0000                           1-  523     _led3On:
                                    1-  524     ; 2 exit points
                                    1-  525     	.line	218, "main.c"; 	IOSTB &= 0xF7;
     0000 001r                      1-  526     	IOSTR	_IOSTB
     0001 00rr                      1-  527     	MOVAR	r0x100D
     0002 1Drr                      1-  528     	BCR	r0x100D,3
     0003 01rr                      1-  529     	MOVR	r0x100D,W
     0004 000r                      1-  530     	IOST	_IOSTB
                                    1-  531     	.line	219, "main.c"; 	PORTB &= 0xF7;
     0005 1Drr                      1-  532     	BCR	_PORTB,3
                                    1-  533     	.line	220, "main.c"; 	}
                                    1-  534     	RETURN	
     0006 0010                      3-   40 m1      ret
                                    1-  535     ; exit point of _led3On
                                    1-  537     ;***
                                    1-  538     ;  pBlock Stats: dbName = C
                                    1-  539     ;***
                                    1-  540     ;has an exit
                                    1-  541     ;functions called:
                                    1-  542     ;   _led3On
                                    1-  543     ;   _led3Off
                                    1-  544     ;   _led3On
                                    1-  545     ;   _led3Off
                                    1-  546     ;1 compiler assigned register :
                                    1-  547     ;   r0x100E
                                    1-  548     ;; Starting pCode block
                                    1-  549     .segment "code"; module=main, function=_workCtr
                                    1-  551     ;local variable name mapping:
     0000                           1-  553     _workCtr:
                                    1-  554     ; 2 exit points
                                    1-  555     	.line	177, "main.c"; 	u8t tempStep = 0;
     0000 02rr                      1-  556     	CLRR	r0x100E
                                    1-  557     ;;unsigned compare: left < lit (0x6=6), size=1
                                    1-  558     	.line	178, "main.c"; 	if(workStep < 6)
     0001 2106                      1-  559     	MOVIA	0x06
     0002 04rr                      1-  560     	SUBAR	_workStep,W
     0003 0C03                      1-  561     	BTRSC	STATUS,0
                                    1-  562     	MGOTO	_00183_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  563     	.line	180, "main.c"; 	tempStep = workStep;
     0005 01rr                      1-  564     	MOVR	_workStep,W
     0006 00rr                      1-  565     	MOVAR	r0x100E
                                    1-  566     	MGOTO	_00184_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  567     ;;unsigned compare: left < lit (0xC=12), size=1
     0008                           1-  568     _00183_DS_:
                                    1-  569     	.line	182, "main.c"; 	else if(workStep < 12)
     0008 210C                      1-  570     	MOVIA	0x0c
     0009 04rr                      1-  571     	SUBAR	_workStep,W
     000A 0C03                      1-  572     	BTRSC	STATUS,0
                                    1-  573     	MGOTO	_00180_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  574     	.line	184, "main.c"; 	tempStep = workStep-6;
     000C 21FA                      1-  575     	MOVIA	0xfa
     000D 03rr                      1-  576     	ADDAR	_workStep,W
     000E 00rr                      1-  577     	MOVAR	r0x100E
                                    1-  578     	MGOTO	_00184_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  579     ;;unsigned compare: left < lit (0x12=18), size=1
     0010                           1-  580     _00180_DS_:
                                    1-  581     	.line	186, "main.c"; 	else if(workStep < 18)
     0010 2112                      1-  582     	MOVIA	0x12
     0011 04rr                      1-  583     	SUBAR	_workStep,W
     0012 0C03                      1-  584     	BTRSC	STATUS,0
                                    1-  585     	MGOTO	_00184_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  586     	.line	188, "main.c"; 	tempStep = workStep-12;
     0014 21F4                      1-  587     	MOVIA	0xf4
     0015 03rr                      1-  588     	ADDAR	_workStep,W
     0016 00rr                      1-  589     	MOVAR	r0x100E
                                    1-  590     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1-  591     ;;unsigned compare: left >= lit (0x6=6), size=1
     0017                           1-  592     _00184_DS_:
                                    1-  593     	.line	191, "main.c"; 	switch(tempStep)
     0017 2106                      1-  594     	MOVIA	0x06
     0018 04rr                      1-  595     	SUBAR	r0x100E,W
     0019 0C03                      1-  596     	BTRSC	STATUS,0
                                    1-  597     	MGOTO	_00192_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
     001B 21rr                      1-  598     	MOVIA	((_00210_DS_ >> 8) & 0xff)
     001C 008A                      1-  599     	MOVAR	PCHBUF
     001D 01rr                      1-  600     	MOVR	r0x100E,W
     001E 25rr                      1-  601     	ADDIA	_00210_DS_
     001F 0C03                      1-  602     	BTRSC	STATUS,0
     0020 058A                      1-  603     	INCR	PCHBUF,F
     0021 0082                      1-  604     	MOVAR	PCL
     0022                           1-  605     _00210_DS_:
                                    1-  606     	MGOTO	_00185_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  607     	MGOTO	_00186_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  608     	MGOTO	_00187_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  609     	MGOTO	_00188_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  610     	MGOTO	_00189_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  611     	MGOTO	_00190_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1-  612     _00185_DS_:
                                    1-  613     	.line	194, "main.c"; 	led3On();
                                    1-  614     	MCALL	_led3On
     0028 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  615     	.line	195, "main.c"; 	break;
                                    1-  616     	MGOTO	_00192_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
     002A                           1-  617     _00186_DS_:
                                    1-  618     	.line	197, "main.c"; 	led2On();
     002A 1Drr                      1-  619     	BCR	_PORTB,2
                                    1-  620     	.line	198, "main.c"; 	break;
                                    1-  621     	MGOTO	_00192_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C                           1-  622     _00187_DS_:
                                    1-  623     	.line	200, "main.c"; 	led1On();
     002C 1Crr                      1-  624     	BCR	_PORTB,1
                                    1-  625     	.line	201, "main.c"; 	break;
                                    1-  626     	MGOTO	_00192_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
     002E                           1-  627     _00188_DS_:
                                    1-  628     	.line	203, "main.c"; 	led1Off();
     002E 18rr                      1-  629     	BSR	_PORTB,1
                                    1-  630     	.line	204, "main.c"; 	break;
                                    1-  631     	MGOTO	_00192_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
     0030                           1-  632     _00189_DS_:
                                    1-  633     	.line	206, "main.c"; 	led2Off();
     0030 19rr                      1-  634     	BSR	_PORTB,2
                                    1-  635     	.line	207, "main.c"; 	break;
                                    1-  636     	MGOTO	_00192_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
     0032                           1-  637     _00190_DS_:
                                    1-  638     	.line	209, "main.c"; 	led3Off();
                                    1-  639     	MCALL	_led3Off
     0032 2rrr                      3-   66 m1      LCALL rom_address
     0033                           1-  640     _00192_DS_:
                                    1-  641     	.line	213, "main.c"; 	}
                                    1-  642     	RETURN	
     0033 0010                      3-   40 m1      ret
                                    1-  643     ; exit point of _workCtr
                                    1-  645     ;***
                                    1-  646     ;  pBlock Stats: dbName = C
                                    1-  647     ;***
                                    1-  648     ;has an exit
                                    1-  649     ;functions called:
                                    1-  650     ;   _led3On
                                    1-  651     ;   _led3Off
                                    1-  652     ;   _led3On
                                    1-  653     ;   _led3Off
                                    1-  654     ;1 compiler assigned register :
                                    1-  655     ;   r0x100F
                                    1-  656     ;; Starting pCode block
                                    1-  657     .segment "code"; module=main, function=_workCtr2
                                    1-  659     ;local variable name mapping:
     0000                           1-  661     _workCtr2:
                                    1-  662     ; 2 exit points
                                    1-  663     	.line	134, "main.c"; 	u8t tempStep = 0;
     0000 02rr                      1-  664     	CLRR	r0x100F
                                    1-  665     ;;unsigned compare: left < lit (0x1A=26), size=1
                                    1-  666     	.line	135, "main.c"; 	if(workStep < 26)
     0001 211A                      1-  667     	MOVIA	0x1a
     0002 04rr                      1-  668     	SUBAR	_workStep,W
     0003 0C03                      1-  669     	BTRSC	STATUS,0
                                    1-  670     	MGOTO	_00147_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  671     	.line	137, "main.c"; 	tempStep = workStep - 18;
     0005 21EE                      1-  672     	MOVIA	0xee
     0006 03rr                      1-  673     	ADDAR	_workStep,W
     0007 00rr                      1-  674     	MOVAR	r0x100F
                                    1-  675     	MGOTO	_00148_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  676     ;;unsigned compare: left < lit (0x22=34), size=1
     0009                           1-  677     _00147_DS_:
                                    1-  678     	.line	139, "main.c"; 	else if(workStep < 34)
     0009 2122                      1-  679     	MOVIA	0x22
     000A 04rr                      1-  680     	SUBAR	_workStep,W
     000B 0C03                      1-  681     	BTRSC	STATUS,0
                                    1-  682     	MGOTO	_00148_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  683     	.line	141, "main.c"; 	tempStep = workStep-26;
     000D 21E6                      1-  684     	MOVIA	0xe6
     000E 03rr                      1-  685     	ADDAR	_workStep,W
     000F 00rr                      1-  686     	MOVAR	r0x100F
                                    1-  687     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1-  688     ;;unsigned compare: left >= lit (0x8=8), size=1
     0010                           1-  689     _00148_DS_:
                                    1-  690     	.line	144, "main.c"; 	switch(tempStep)
     0010 2108                      1-  691     	MOVIA	0x08
     0011 04rr                      1-  692     	SUBAR	r0x100F,W
     0012 0C03                      1-  693     	BTRSC	STATUS,0
                                    1-  694     	MGOTO	_00158_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
     0014 21rr                      1-  695     	MOVIA	((_00172_DS_ >> 8) & 0xff)
     0015 008A                      1-  696     	MOVAR	PCHBUF
     0016 01rr                      1-  697     	MOVR	r0x100F,W
     0017 25rr                      1-  698     	ADDIA	_00172_DS_
     0018 0C03                      1-  699     	BTRSC	STATUS,0
     0019 058A                      1-  700     	INCR	PCHBUF,F
     001A 0082                      1-  701     	MOVAR	PCL
     001B                           1-  702     _00172_DS_:
                                    1-  703     	MGOTO	_00149_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  704     	MGOTO	_00150_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  705     	MGOTO	_00151_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  706     	MGOTO	_00152_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  707     	MGOTO	_00153_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  708     	MGOTO	_00154_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  709     	MGOTO	_00155_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  710     	MGOTO	_00156_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023                           1-  711     _00149_DS_:
                                    1-  712     	.line	147, "main.c"; 	led3On();
                                    1-  713     	MCALL	_led3On
     0023 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  714     	.line	148, "main.c"; 	break;
                                    1-  715     	MGOTO	_00158_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1-  716     _00150_DS_:
                                    1-  717     	.line	150, "main.c"; 	led2On();
     0025 1Drr                      1-  718     	BCR	_PORTB,2
                                    1-  719     	.line	151, "main.c"; 	break;
                                    1-  720     	MGOTO	_00158_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1-  721     _00151_DS_:
                                    1-  722     	.line	153, "main.c"; 	led1On();
     0027 1Crr                      1-  723     	BCR	_PORTB,1
                                    1-  724     	.line	154, "main.c"; 	break;
                                    1-  725     	MGOTO	_00158_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
     0029                           1-  726     _00152_DS_:
                                    1-  727     	.line	156, "main.c"; 	led0On();
     0029 1Crr                      1-  728     	BCR	_PORTB,0
                                    1-  729     	.line	157, "main.c"; 	break;
                                    1-  730     	MGOTO	_00158_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
     002B                           1-  731     _00153_DS_:
                                    1-  732     	.line	159, "main.c"; 	led0Off();
     002B 18rr                      1-  733     	BSR	_PORTB,0
                                    1-  734     	.line	160, "main.c"; 	break;
                                    1-  735     	MGOTO	_00158_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
     002D                           1-  736     _00154_DS_:
                                    1-  737     	.line	162, "main.c"; 	led1Off();
     002D 18rr                      1-  738     	BSR	_PORTB,1
                                    1-  739     	.line	163, "main.c"; 	break;
                                    1-  740     	MGOTO	_00158_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1-  741     _00155_DS_:
                                    1-  742     	.line	165, "main.c"; 	led2Off();
     002F 19rr                      1-  743     	BSR	_PORTB,2
                                    1-  744     	.line	166, "main.c"; 	break;
                                    1-  745     	MGOTO	_00158_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1-  746     _00156_DS_:
                                    1-  747     	.line	168, "main.c"; 	led3Off();
                                    1-  748     	MCALL	_led3Off
     0031 2rrr                      3-   66 m1      LCALL rom_address
     0032                           1-  749     _00158_DS_:
                                    1-  750     	.line	172, "main.c"; 	}
                                    1-  751     	RETURN	
     0032 0010                      3-   40 m1      ret
                                    1-  752     ; exit point of _workCtr2
                                    1-  755     ;	code size estimation:
                                    1-  756     ;	  278+    0 =   278 instructions (  556 byte)
                                    1-  758     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 00000006
__PROCESSOR__           Constant 00800503
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000000
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8a050d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A050D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000001FF
DATA ROM     = 0x00000000 - 0x000001FF
RESERVED MEM = 0x00000200 - 0x00000210
SRAM / SFR   = 0x00000000 - 0x00000000
