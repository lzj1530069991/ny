
                    Nyquest Technology Co., Ltd.

NYASM 2.30

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A053D,c=on
                                    1-    9     	#include "ny8a053d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_keyCallBack
                                    1-   15     	extern	_PORTAbits
                                    1-   16     	extern	_PORTBbits
                                    1-   17     	extern	_PCONbits
                                    1-   18     	extern	_BWUCONbits
                                    1-   19     	extern	_ABPLCONbits
                                    1-   20     	extern	_BPHCONbits
                                    1-   21     	extern	_INTEbits
                                    1-   22     	extern	_INTFbits
                                    1-   23     	extern	_INDF
                                    1-   24     	extern	_TMR0
                                    1-   25     	extern	_PCL
                                    1-   26     	extern	_STATUS
                                    1-   27     	extern	_FSR
                                    1-   28     	extern	_PORTA
                                    1-   29     	extern	_PORTB
                                    1-   30     	extern	_PCON
                                    1-   31     	extern	_BWUCON
                                    1-   32     	extern	_PCHBUF
                                    1-   33     	extern	_ABPLCON
                                    1-   34     	extern	_BPHCON
                                    1-   35     	extern	_INTE
                                    1-   36     	extern	_INTF
                                    1-   37     	extern	_TMR1
                                    1-   38     	extern	_T1CR1
                                    1-   39     	extern	_T1CR2
                                    1-   40     	extern	_PWM1DUTY
                                    1-   41     	extern	_PS1CV
                                    1-   42     	extern	_BZ1CR
                                    1-   43     	extern	_IRCR
                                    1-   44     	extern	_TBHP
                                    1-   45     	extern	_TBHD
                                    1-   46     	extern	_OSCCR
                                    1-   47     	extern	_IOSTA
                                    1-   48     	extern	_IOSTB
                                    1-   49     	extern	_PS0CV
                                    1-   50     	extern	_BODCON
                                    1-   51     	extern	_PCON1
                                    1-   52     	extern	_T0MD
                                    1-   53     	extern	___sdcc_saved_fsr
                                    1-   54     	extern	___sdcc_saved_stk00
                                    1-   55     	extern	___sdcc_saved_stk01
                                    1-   56     	extern	__nyc_ny8_startup
                                    1-   57     ;--------------------------------------------------------
                                    1-   58     ; global declarations
                                    1-   59     ;--------------------------------------------------------
                                    1-   60     	extern	_setPWMduty
                                    1-   61     	extern	_keyCtr
                                    1-   62     	extern	_setWorkStep
                                    1-   63     	extern	_setIRWorkStep
                                    1-   64     	extern	_keyRead
                                    1-   65     	extern	_workCtr
                                    1-   66     	extern	_setModeStep
                                    1-   67     	extern	_breathCtr
                                    1-   68     	extern	_gotoSleep
                                    1-   69     	extern	_proData
                                    1-   70     	extern	_GetOneByte
                                    1-   71     	extern	_proLow
                                    1-   72     	extern	_proHight
                                    1-   73     	extern	_cleanData
                                    1-   74     	extern	_isr
                                    1-   75     	extern	_main
                                    1-   76     	extern	_IntFlag
                                    1-   77     	extern	_count
                                    1-   78     	extern	_bitIndex
                                    1-   79     	extern	_data1
                                    1-   80     	extern	_data2
                                    1-   81     	extern	_data3
                                    1-   82     	extern	_data4
                                    1-   83     	extern	_irCode
                                    1-   84     	extern	_irCode2
                                    1-   85     	extern	_value
                                    1-   86     	extern	_sleepFlag
                                    1-   87     	extern	_sleepCount
                                    1-   88     	extern	_Status
                                    1-   89     	extern	_workStep
                                    1-   90     	extern	_keyCount
                                    1-   91     	extern	_duty
                                    1-   92     	extern	_ledCount
                                    1-   93     	extern	_modeStep
                                    1-   94     	extern	_count1s
                                    1-   95     	extern	_deadTime
                                    1-   96     	extern	_timeStep
                                    1-   97     	extern	_breathFlag
                                    1-   98     	extern	_T1Counter
                                    1-   99     	extern	_accTimeH
                                    1-  101     	extern PSAVE
                                    1-  102     	extern SSAVE
                                    1-  103     	extern WSAVE
                                    1-  104     	extern STK04
                                    1-  105     	extern STK03
                                    1-  106     	extern STK02
                                    1-  107     	extern STK01
                                    1-  108     	extern STK00
                                    1-  110     .segment "uninit", 0x20000020
 20000020                           1-  111     PSAVE:
                                    1-  112     	.res 1
 20000021                           1-  113     SSAVE:
                                    1-  114     	.res 1
 20000022                           1-  115     WSAVE:
                                    1-  116     	.res 1
 20000023                           1-  117     STK04:
                                    1-  118     	.res 1
 20000024                           1-  119     STK03:
                                    1-  120     	.res 1
 20000025                           1-  121     STK02:
                                    1-  122     	.res 1
 20000026                           1-  123     STK01:
                                    1-  124     	.res 1
 20000027                           1-  125     STK00:
                                    1-  126     	.res 1
                                    1-  128     ;--------------------------------------------------------
                                    1-  129     ; global definitions
                                    1-  130     ;--------------------------------------------------------
                                    1-  131     .segment "uninit"
     0000                           1-  132     _IntFlag:
                                    1-  133     	.res	1
                                    1-  136     .segment "uninit"
     0000                           1-  137     _count:
                                    1-  138     	.res	1
                                    1-  141     .segment "uninit"
     0000                           1-  142     _data1:
                                    1-  143     	.res	1
                                    1-  146     .segment "uninit"
     0000                           1-  147     _data2:
                                    1-  148     	.res	1
                                    1-  151     .segment "uninit"
     0000                           1-  152     _data3:
                                    1-  153     	.res	1
                                    1-  156     .segment "uninit"
     0000                           1-  157     _data4:
                                    1-  158     	.res	1
                                    1-  161     .segment "uninit"
     0000                           1-  162     _irCode:
                                    1-  163     	.res	1
                                    1-  166     .segment "uninit"
     0000                           1-  167     _irCode2:
                                    1-  168     	.res	1
                                    1-  171     .segment "uninit"
     0000                           1-  172     _value:
                                    1-  173     	.res	1
                                    1-  176     .segment "uninit"
     0000                           1-  177     _T1Counter:
                                    1-  178     	.res	2
                                    1-  181     ;--------------------------------------------------------
                                    1-  182     ; absolute symbol definitions
                                    1-  183     ;--------------------------------------------------------
                                    1-  184     ;--------------------------------------------------------
                                    1-  185     ; compiler-defined variables
                                    1-  186     ;--------------------------------------------------------
                                    1-  187     .segment "uninit"
     0000                           1-  188     r0x1022:
                                    1-  189     	.res	1
                                    1-  190     .segment "uninit"
     0000                           1-  191     r0x1023:
                                    1-  192     	.res	1
                                    1-  193     .segment "uninit"
     0000                           1-  194     r0x1024:
                                    1-  195     	.res	1
                                    1-  196     .segment "uninit"
     0000                           1-  197     r0x1021:
                                    1-  198     	.res	1
                                    1-  199     .segment "uninit"
     0000                           1-  200     r0x101F:
                                    1-  201     	.res	1
                                    1-  202     .segment "uninit"
     0000                           1-  203     r0x1020:
                                    1-  204     	.res	1
                                    1-  205     ;--------------------------------------------------------
                                    1-  206     ; initialized data
                                    1-  207     ;--------------------------------------------------------
                                    1-  209     .segment "idata"
     0000                           1-  210     _bitIndex:
     0000 0000                      1-  211     	dw	0x00
                                    1-  215     .segment "idata"
     0000                           1-  216     _sleepFlag:
     0000 0000                      1-  217     	dw	0x00
                                    1-  221     .segment "idata"
     0000                           1-  222     _sleepCount:
     0000 0000 0000                 1-  223     	dw	0x00, 0x00
                                    1-  227     .segment "idata"
     0000                           1-  228     _Status:
     0000 0000                      1-  229     	dw	0x00
                                    1-  233     .segment "idata"
     0000                           1-  234     _workStep:
     0000 0000                      1-  235     	dw	0x00
                                    1-  239     .segment "idata"
     0000                           1-  240     _keyCount:
     0000 0000                      1-  241     	dw	0x00
                                    1-  245     .segment "idata"
     0000                           1-  246     _duty:
     0000 0000 0000                 1-  247     	dw	0x00, 0x00
                                    1-  251     .segment "idata"
     0000                           1-  252     _ledCount:
     0000 0000 0000                 1-  253     	dw	0x00, 0x00
                                    1-  257     .segment "idata"
     0000                           1-  258     _modeStep:
     0000 0000                      1-  259     	dw	0x00
                                    1-  263     .segment "idata"
     0000                           1-  264     _count1s:
     0000 0000                      1-  265     	dw	0x00
                                    1-  269     .segment "idata"
     0000                           1-  270     _deadTime:
     0000 0000 0000                 1-  271     	dw	0x00, 0x00
                                    1-  275     .segment "idata"
     0000                           1-  276     _timeStep:
     0000 0000 0000                 1-  277     	dw	0x00, 0x00
                                    1-  281     .segment "idata"
     0000                           1-  282     _breathFlag:
     0000 0000                      1-  283     	dw	0x00
                                    1-  287     .segment "idata"
     0000                           1-  288     _accTimeH:
     0000 0000                      1-  289     	dw	0x00
                                    1-  292     ;--------------------------------------------------------
                                    1-  293     ; overlayable items in internal ram 
                                    1-  294     ;--------------------------------------------------------
                                    1-  295     ;	udata_ovr
                                    1-  296     ;--------------------------------------------------------
                                    1-  297     ; reset vector 
                                    1-  298     ;--------------------------------------------------------
                                    1-  299     ORG	0x0000
     0000 3rrr                      1-  300     	LGOTO	__nyc_ny8_startup
                                    1-  301     ;--------------------------------------------------------
                                    1-  302     ; interrupt and initialization code
                                    1-  303     ;--------------------------------------------------------
                                    1-  304     ORG 0x0008
                                    1-  305     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  307     .segment "code"
     0000                           1-  308     __sdcc_interrupt:
                                    1-  309     ;***
                                    1-  310     ;  pBlock Stats: dbName = I
                                    1-  311     ;***
                                    1-  312     ;2 compiler assigned registers:
                                    1-  313     ;   STK00
                                    1-  314     ;   STK01
                                    1-  315     ;; Starting pCode block
     0000                           1-  316     _isr:
                                    1-  317     ; 0 exit points
                                    1-  318     	.line	78, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  319     	MOVAR	WSAVE
     0001 1503                      1-  320     	SWAPR	STATUS,W
     0002 0283                      1-  321     	CLRR	STATUS
     0003 00rr                      1-  322     	MOVAR	SSAVE
     0004 010A                      1-  323     	MOVR	PCHBUF,W
     0005 028A                      1-  324     	CLRR	PCHBUF
     0006 00rr                      1-  325     	MOVAR	PSAVE
     0007 0104                      1-  326     	MOVR	FSR,W
                                    1-  327     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  328     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  329     	MOVR	STK00,W
                                    1-  330     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  331     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  332     	MOVR	STK01,W
                                    1-  333     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  334     	MOVAR	___sdcc_saved_stk01
                                    1-  335     	.line	80, "main.c"; 	if(INTFbits.T1IF)
     0010 09rr                      1-  336     	BTRSS	_INTFbits,3
                                    1-  337     	MGOTO	_00106_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  338     	.line	82, "main.c"; 	accTimeH++;		//0.256ms执行一次
                                    1-  339     	BANKSEL	_accTimeH
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 05rr                      1-  340     	INCR	_accTimeH,F
                                    1-  341     	.line	84, "main.c"; 	INTF= (unsigned char)~(C_INT_TMR1);	// Clear T1IF flag bit	
     0014 21F7                      1-  342     	MOVIA	0xf7
     0015 00rr                      1-  343     	MOVAR	_INTF
     0016                           1-  344     _00106_DS_:
                                    1-  345     	.line	87, "main.c"; 	if(INTFbits.T0IF)
     0016 08rr                      1-  346     	BTRSS	_INTFbits,0
                                    1-  347     	MGOTO	_00114_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  348     	.line	89, "main.c"; 	TMR0 += 56;
     0018 2138                      1-  349     	MOVIA	0x38
     0019 03rr                      1-  350     	ADDAR	_TMR0,F
                                    1-  351     	.line	90, "main.c"; 	if(++count == 100)
                                    1-  352     	BANKSEL	_count
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 05rr                      1-  353     	INCR	_count,F
     001C 01rr                      1-  354     	MOVR	_count,W
     001D 2464                      1-  355     	XORIA	0x64
     001E 0903                      1-  356     	BTRSS	STATUS,2
                                    1-  357     	MGOTO	_00114_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  358     	.line	92, "main.c"; 	count = 0;
     0020 02rr                      1-  359     	CLRR	_count
                                    1-  360     	.line	93, "main.c"; 	IntFlag = 1;
     0021 2101                      1-  361     	MOVIA	0x01
                                    1-  362     	BANKSEL	_IntFlag
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 00rr                      1-  363     	MOVAR	_IntFlag
                                    1-  364     	.line	95, "main.c"; 	if(++count1s > 100)
                                    1-  365     	BANKSEL	_count1s
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 05rr                      1-  366     	INCR	_count1s,F
                                    1-  367     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  368     ;;unsigned compare: left >= lit (0x65=101), size=1
     0026 2165                      1-  369     	MOVIA	0x65
     0027 04rr                      1-  370     	SUBAR	_count1s,W
     0028 0803                      1-  371     	BTRSS	STATUS,0
                                    1-  372     	MGOTO	_00114_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  373     	.line	97, "main.c"; 	count1s = 0;
     002A 02rr                      1-  374     	CLRR	_count1s
                                    1-  375     	.line	98, "main.c"; 	if(deadTime > 0)
                                    1-  376     	BANKSEL	_deadTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1-  377     	MOVR	_deadTime,W
     002D 11rr                      1-  378     	IORAR	(_deadTime + 1),W
     002E 0D03                      1-  379     	BTRSC	STATUS,2
                                    1-  380     	MGOTO	_00114_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  381     	.line	100, "main.c"; 	deadTime--;
     0030 21FF                      1-  382     	MOVIA	0xff
     0031 03rr                      1-  383     	ADDAR	_deadTime,F
     0032 0803                      1-  384     	BTRSS	STATUS,0
     0033 06rr                      1-  385     	DECR	(_deadTime + 1),F
     0034                           1-  386     _00114_DS_:
                                    1-  387     	.line	106, "main.c"; 	if(INTFbits.PBIF)
     0034 08rr                      1-  388     	BTRSS	_INTFbits,1
                                    1-  389     	MGOTO	_00116_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  390     	.line	108, "main.c"; 	INTF= (unsigned char)~(C_INT_PBKey);
     0036 21FD                      1-  391     	MOVIA	0xfd
     0037 00rr                      1-  392     	MOVAR	_INTF
     0038                           1-  393     _00116_DS_:
                                    1-  394     	.line	111, "main.c"; 	INTF = 0;
     0038 02rr                      1-  395     	CLRR	_INTF
                                    1-  396     	.line	114, "main.c"; 	}
                                    1-  397     	BANKSEL	___sdcc_saved_stk01
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1-  398     	MOVR	___sdcc_saved_stk01,W
     003B 00rr                      1-  399     	MOVAR	STK01
                                    1-  400     	BANKSEL	___sdcc_saved_stk00
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1-  401     	MOVR	___sdcc_saved_stk00,W
     003E 00rr                      1-  402     	MOVAR	STK00
                                    1-  403     	BANKSEL	___sdcc_saved_fsr
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 01rr                      1-  404     	MOVR	___sdcc_saved_fsr,W
     0041 0084                      1-  405     	MOVAR	FSR
     0042 01rr                      1-  406     	MOVR	PSAVE,W
     0043 008A                      1-  407     	MOVAR	PCHBUF
     0044 0283                      1-  408     	CLRR	STATUS
     0045 15rr                      1-  409     	SWAPR	SSAVE,W
     0046 0083                      1-  410     	MOVAR	STATUS
     0047 15rr                      1-  411     	SWAPR	WSAVE,F
     0048 15rr                      1-  412     	SWAPR	WSAVE,W
     0049                           1-  413     END_OF_INTERRUPT:
     0049 0011                      1-  414     	RETIE	
                                    1-  416     ;--------------------------------------------------------
                                    1-  417     ; code
                                    1-  418     ;--------------------------------------------------------
                                    1-  419     ;***
                                    1-  420     ;  pBlock Stats: dbName = M
                                    1-  421     ;***
                                    1-  422     ;has an exit
                                    1-  423     ;functions called:
                                    1-  424     ;   _proData
                                    1-  425     ;   _proLow
                                    1-  426     ;   _proHight
                                    1-  427     ;   _setPWMduty
                                    1-  428     ;   _setModeStep
                                    1-  429     ;   _keyCtr
                                    1-  430     ;   _workCtr
                                    1-  431     ;   _gotoSleep
                                    1-  432     ;   _proData
                                    1-  433     ;   _proLow
                                    1-  434     ;   _proHight
                                    1-  435     ;   _setPWMduty
                                    1-  436     ;   _setModeStep
                                    1-  437     ;   _keyCtr
                                    1-  438     ;   _workCtr
                                    1-  439     ;   _gotoSleep
                                    1-  440     ;; Starting pCode block
                                    1-  441     .segment "code"; module=main, function=_main
     0000                           1-  443     _main:
                                    1-  444     ; 2 exit points
                                    1-  445     	.line	336, "main.c"; 	IOSTB =   0x0F;     // Set PB0 & PB1 to input mode,others set to output mode
     0000 210F                      1-  446     	MOVIA	0x0f
     0001 000r                      1-  447     	IOST	_IOSTB
                                    1-  448     	.line	337, "main.c"; 	BPHCON = 0xF0;
     0002 21F0                      1-  449     	MOVIA	0xf0
     0003 00rr                      1-  450     	MOVAR	_BPHCON
                                    1-  451     	.line	338, "main.c"; 	ABPLCON = 0xFF;
     0004 21FF                      1-  452     	MOVIA	0xff
     0005 00rr                      1-  453     	MOVAR	_ABPLCON
                                    1-  454     	.line	339, "main.c"; 	PORTB = 0x30;                           // PB0、PB1 & PB2 are output High
     0006 2130                      1-  455     	MOVIA	0x30
     0007 00rr                      1-  456     	MOVAR	_PORTB
                                    1-  457     	.line	340, "main.c"; 	DISI();
     0008 0013                      1-  458     	DISI
                                    1-  459     	.line	342, "main.c"; 	PCON1 = C_TMR0_Dis;						// Disable Timer0
     0009 0200                      1-  460     	CLRA	
     000A 000r                      1-  461     	IOST	_PCON1
                                    1-  462     	.line	346, "main.c"; 	TMR1 = 0xFF;
     000B 21FF                      1-  463     	MOVIA	0xff
     000C 002r                      1-  464     	SFUN	_TMR1
                                    1-  465     	.line	347, "main.c"; 	T1CR2 = C_PS1_Div64 | C_PS1_EN | C_TMR1_ClkSrc_Inst;
     000D 2105                      1-  466     	MOVIA	0x05
     000E 002r                      1-  467     	SFUN	_T1CR2
                                    1-  468     	.line	348, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload;
     000F 2103                      1-  469     	MOVIA	0x03
     0010 002r                      1-  470     	SFUN	_T1CR1
                                    1-  471     	.line	351, "main.c"; 	INT1Level = 1;
                                    1-  472     	BANKSEL	_Status
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 1Arr                      1-  473     	BSR	_Status,5
                                    1-  474     	.line	354, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PBKey;	// Enable Timer0、Timer1、WDT overflow interrupt
     0013 210B                      1-  475     	MOVIA	0x0b
     0014 00rr                      1-  476     	MOVAR	_INTE
                                    1-  477     	.line	356, "main.c"; 	TMR0 = 55;
     0015 2137                      1-  478     	MOVIA	0x37
     0016 00rr                      1-  479     	MOVAR	_TMR0
                                    1-  480     	.line	357, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0017 0200                      1-  481     	CLRA	
     0018 0003                      1-  482     	T0MD	
                                    1-  483     	.line	360, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0019 2188                      1-  484     	MOVIA	0x88
     001A 00rr                      1-  485     	MOVAR	_PCON
                                    1-  486     	.line	363, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001B 2101                      1-  487     	MOVIA	0x01
     001C 000r                      1-  488     	IOST	_PCON1
                                    1-  489     	.line	364, "main.c"; 	ENI();									// Enable all unmasked interrupts			
     001D 0004                      1-  490     	ENI
                                    1-  491     	.line	365, "main.c"; 	data1 = data2 = data3 = data4 = 0;
                                    1-  492     	BANKSEL	_data4
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 02rr                      1-  493     	CLRR	_data4
                                    1-  494     	BANKSEL	_data3
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 02rr                      1-  495     	CLRR	_data3
                                    1-  496     	BANKSEL	_data2
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 02rr                      1-  497     	CLRR	_data2
                                    1-  498     	BANKSEL	_data1
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 02rr                      1-  499     	CLRR	_data1
     0026                           1-  500     _00291_DS_:
                                    1-  501     	.line	368, "main.c"; 	if(ReadOver)
                                    1-  502     	BANKSEL	_Status
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 0Err                      1-  503     	BTRSC	_Status,4
                                    1-  504     	.line	370, "main.c"; 	proData();
                                    1-  505     	MCALL	_proData
     0028 2rrr                      3-   66 m1      LCALL rom_address
     0029                           1-  506     _00271_DS_:
                                    1-  507     	.line	372, "main.c"; 	if(INT1Level && (PORTB & 0x08))
                                    1-  508     	BANKSEL	_Status
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 0Arr                      1-  509     	BTRSS	_Status,5
                                    1-  510     	MGOTO	_00276_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C 09rr                      1-  511     	BTRSS	_PORTB,3
                                    1-  512     	MGOTO	_00276_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  513     	.line	374, "main.c"; 	INT1Level = 0;
     002E 1Err                      1-  514     	BCR	_Status,5
                                    1-  515     	.line	375, "main.c"; 	proLow();
                                    1-  516     	MCALL	_proLow
     002F 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  517     	MGOTO	_00277_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1-  518     _00276_DS_:
                                    1-  519     	.line	377, "main.c"; 	else if(INT1Level == 0 && (PORTB & 0x08) == 0)
                                    1-  520     	BANKSEL	_Status
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 0Err                      1-  521     	BTRSC	_Status,5
                                    1-  522     	MGOTO	_00277_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
     0034 0Drr                      1-  523     	BTRSC	_PORTB,3
                                    1-  524     	MGOTO	_00277_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  525     	.line	380, "main.c"; 	INT1Level = 1;
     0036 1Arr                      1-  526     	BSR	_Status,5
                                    1-  527     	.line	381, "main.c"; 	proHight();
                                    1-  528     	MCALL	_proHight
     0037 2rrr                      3-   66 m1      LCALL rom_address
     0038                           1-  529     _00277_DS_:
                                    1-  530     	.line	383, "main.c"; 	CLRWDT();
     0038 0002                      1-  531     	clrwdt
                                    1-  532     	.line	384, "main.c"; 	if(breathFlag)
                                    1-  533     	BANKSEL	_breathFlag
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1-  534     	MOVR	_breathFlag,W
     003B 0903                      1-  535     	BTRSS	STATUS,2
                                    1-  536     	.line	385, "main.c"; 	setPWMduty();
                                    1-  537     	MCALL	_setPWMduty
     003C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  538     	.line	386, "main.c"; 	if(!IntFlag)
                                    1-  539     	BANKSEL	_IntFlag
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 01rr                      1-  540     	MOVR	_IntFlag,W
     003F 0D03                      1-  541     	BTRSC	STATUS,2
                                    1-  542     	MGOTO	_00291_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  543     	.line	388, "main.c"; 	IntFlag = 0;		//10ms执行一次
     0041 02rr                      1-  544     	CLRR	_IntFlag
                                    1-  545     	.line	389, "main.c"; 	setModeStep();
                                    1-  546     	MCALL	_setModeStep
     0042 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  547     	.line	390, "main.c"; 	keyCtr();
                                    1-  548     	MCALL	_keyCtr
     0043 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  549     	.line	391, "main.c"; 	if(workStep > 0)
                                    1-  550     	BANKSEL	_workStep
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 01rr                      1-  551     	MOVR	_workStep,W
     0046 0903                      1-  552     	BTRSS	STATUS,2
                                    1-  553     	.line	392, "main.c"; 	workCtr();
                                    1-  554     	MCALL	_workCtr
     0047 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  555     	.line	393, "main.c"; 	if(bitIndex == 0 &&  keyCount == 0 && workStep == 0 && ++sleepCount >= 100)
                                    1-  556     	BANKSEL	_bitIndex
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 01rr                      1-  557     	MOVR	_bitIndex,W
     004A 0903                      1-  558     	BTRSS	STATUS,2
                                    1-  559     	MGOTO	_00291_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  560     	BANKSEL	_keyCount
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 01rr                      1-  561     	MOVR	_keyCount,W
     004E 0903                      1-  562     	BTRSS	STATUS,2
                                    1-  563     	MGOTO	_00291_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  564     	BANKSEL	_workStep
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 01rr                      1-  565     	MOVR	_workStep,W
     0052 0903                      1-  566     	BTRSS	STATUS,2
                                    1-  567     	MGOTO	_00291_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  568     	BANKSEL	_sleepCount
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 05rr                      1-  569     	INCR	_sleepCount,F
     0056 0D03                      1-  570     	BTRSC	STATUS,2
     0057 05rr                      1-  571     	INCR	(_sleepCount + 1),F
                                    1-  572     ;;unsigned compare: left < lit (0x64=100), size=2
     0058 2100                      1-  573     	MOVIA	0x00
     0059 04rr                      1-  574     	SUBAR	(_sleepCount + 1),W
     005A 0903                      1-  575     	BTRSS	STATUS,2
                                    1-  576     	MGOTO	_00334_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
     005C 2164                      1-  577     	MOVIA	0x64
     005D 04rr                      1-  578     	SUBAR	_sleepCount,W
     005E                           1-  579     _00334_DS_:
     005E 0803                      1-  580     	BTRSS	STATUS,0
                                    1-  581     	MGOTO	_00291_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  582     	.line	395, "main.c"; 	gotoSleep();
                                    1-  583     	MCALL	_gotoSleep
     0060 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  584     	MGOTO	_00291_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  585     	.line	402, "main.c"; 	}
                                    1-  586     	RETURN	
     0062 0010                      3-   40 m1      ret
                                    1-  587     ; exit point of _main
                                    1-  589     ;***
                                    1-  590     ;  pBlock Stats: dbName = C
                                    1-  591     ;***
                                    1-  592     ;has an exit
                                    1-  593     ;; Starting pCode block
                                    1-  594     .segment "code"; module=main, function=_setPWMduty
     0000                           1-  596     _setPWMduty:
                                    1-  597     ; 2 exit points
                                    1-  598     	.line	609, "main.c"; 	if(duty > ledCount)
                                    1-  599     	BANKSEL	_duty
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1-  600     	MOVR	(_duty + 1),W
                                    1-  601     	BANKSEL	_ledCount
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 04rr                      1-  602     	SUBAR	(_ledCount + 1),W
     0004 0903                      1-  603     	BTRSS	STATUS,2
                                    1-  604     	MGOTO	_00507_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  605     	BANKSEL	_duty
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 01rr                      1-  606     	MOVR	_duty,W
                                    1-  607     	BANKSEL	_ledCount
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 04rr                      1-  608     	SUBAR	_ledCount,W
     000A                           1-  609     _00507_DS_:
     000A 0C03                      1-  610     	BTRSC	STATUS,0
                                    1-  611     	MGOTO	_00495_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  612     	.line	611, "main.c"; 	PORTB |= 0x30;
     000C 2130                      1-  613     	MOVIA	0x30
     000D 11rr                      1-  614     	IORAR	_PORTB,F
                                    1-  615     	MGOTO	_00496_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
     000F                           1-  616     _00495_DS_:
                                    1-  617     	.line	615, "main.c"; 	PORTB &= 0xCF;
     000F 21CF                      1-  618     	MOVIA	0xcf
     0010 10rr                      1-  619     	ANDAR	_PORTB,F
     0011                           1-  620     _00496_DS_:
                                    1-  621     	.line	618, "main.c"; 	if(++ledCount>313)
                                    1-  622     	BANKSEL	_ledCount
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 05rr                      1-  623     	INCR	_ledCount,F
     0013 0D03                      1-  624     	BTRSC	STATUS,2
     0014 05rr                      1-  625     	INCR	(_ledCount + 1),F
                                    1-  626     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  627     ;;unsigned compare: left >= lit (0x13A=314), size=2
     0015 2101                      1-  628     	MOVIA	0x01
     0016 04rr                      1-  629     	SUBAR	(_ledCount + 1),W
     0017 0903                      1-  630     	BTRSS	STATUS,2
                                    1-  631     	MGOTO	_00508_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
     0019 213A                      1-  632     	MOVIA	0x3a
     001A 04rr                      1-  633     	SUBAR	_ledCount,W
     001B                           1-  634     _00508_DS_:
     001B 0803                      1-  635     	BTRSS	STATUS,0
                                    1-  636     	MGOTO	_00499_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  637     	.line	620, "main.c"; 	ledCount = 0;
                                    1-  638     	BANKSEL	_ledCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  639     	CLRR	_ledCount
     001F 02rr                      1-  640     	CLRR	(_ledCount + 1)
     0020                           1-  641     _00499_DS_:
                                    1-  642     	.line	622, "main.c"; 	}
                                    1-  643     	RETURN	
     0020 0010                      3-   40 m1      ret
                                    1-  644     ; exit point of _setPWMduty
                                    1-  646     ;***
                                    1-  647     ;  pBlock Stats: dbName = C
                                    1-  648     ;***
                                    1-  649     ;functions called:
                                    1-  650     ;   _keyRead
                                    1-  651     ;   _setWorkStep
                                    1-  652     ;   _keyRead
                                    1-  653     ;   _setWorkStep
                                    1-  654     ;1 compiler assigned register :
                                    1-  655     ;   r0x1020
                                    1-  656     ;; Starting pCode block
                                    1-  657     .segment "code"; module=main, function=_keyCtr
                                    1-  659     ;local variable name mapping:
     0000                           1-  661     _keyCtr:
                                    1-  662     ; 0 exit points
                                    1-  663     	.line	597, "main.c"; 	char kclick = keyRead(0x01 & (~PORTB));
     0000 07rr                      1-  664     	COMR	_PORTB,W
                                    1-  665     	BANKSEL	r0x1020
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1-  666     	MOVAR	r0x1020
     0003 2101                      1-  667     	MOVIA	0x01
     0004 10rr                      1-  668     	ANDAR	r0x1020,F
     0005 01rr                      1-  669     	MOVR	r0x1020,W
                                    1-  670     	MCALL	_keyRead
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  671     	BANKSEL	r0x1020
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 00rr                      1-  672     	MOVAR	r0x1020
                                    1-  673     	.line	598, "main.c"; 	if(kclick == 1)
     0009 2401                      1-  674     	XORIA	0x01
     000A 0D03                      1-  675     	BTRSC	STATUS,2
                                    1-  676     	.line	600, "main.c"; 	setWorkStep();
                                    1-  677     	MCALL	_setWorkStep
     000B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  678     	.line	603, "main.c"; 	}
                                    1-  679     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1-  681     ;***
                                    1-  682     ;  pBlock Stats: dbName = C
                                    1-  683     ;***
                                    1-  684     ;has an exit
                                    1-  685     ;; Starting pCode block
                                    1-  686     .segment "code"; module=main, function=_setWorkStep
     0000                           1-  688     _setWorkStep:
                                    1-  689     ; 2 exit points
                                    1-  690     	.line	550, "main.c"; 	if(workStep > 0)
                                    1-  691     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1-  692     	MOVR	_workStep,W
     0002 0D03                      1-  693     	BTRSC	STATUS,2
                                    1-  694     	MGOTO	_00480_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  695     	.line	553, "main.c"; 	if(modeStep == 1)
                                    1-  696     	BANKSEL	_modeStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  697     	MOVR	_modeStep,W
     0006 2401                      1-  698     	XORIA	0x01
     0007 0903                      1-  699     	BTRSS	STATUS,2
                                    1-  700     	MGOTO	_00472_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  701     	.line	555, "main.c"; 	if(++workStep > 2)
                                    1-  702     	BANKSEL	_workStep
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 05rr                      1-  703     	INCR	_workStep,F
                                    1-  704     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  705     ;;unsigned compare: left >= lit (0x3=3), size=1
     000B 2103                      1-  706     	MOVIA	0x03
     000C 04rr                      1-  707     	SUBAR	_workStep,W
     000D 0803                      1-  708     	BTRSS	STATUS,0
                                    1-  709     	MGOTO	_00468_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  710     	.line	557, "main.c"; 	workStep = 0;
     000F 02rr                      1-  711     	CLRR	_workStep
                                    1-  712     	.line	558, "main.c"; 	deadTime = 0;
                                    1-  713     	BANKSEL	_deadTime
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 02rr                      1-  714     	CLRR	_deadTime
     0012 02rr                      1-  715     	CLRR	(_deadTime + 1)
                                    1-  716     	.line	559, "main.c"; 	breathFlag = 0;
                                    1-  717     	BANKSEL	_breathFlag
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 02rr                      1-  718     	CLRR	_breathFlag
                                    1-  719     	.line	560, "main.c"; 	PORTB |= 0x30;
     0015 2130                      1-  720     	MOVIA	0x30
     0016 11rr                      1-  721     	IORAR	_PORTB,F
     0017                           1-  722     _00468_DS_:
                                    1-  723     	.line	562, "main.c"; 	if(workStep == 2)
                                    1-  724     	BANKSEL	_workStep
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 01rr                      1-  725     	MOVR	_workStep,W
     0019 2402                      1-  726     	XORIA	0x02
     001A 0903                      1-  727     	BTRSS	STATUS,2
                                    1-  728     	MGOTO	_00482_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  729     	.line	564, "main.c"; 	ledCount = 0;
                                    1-  730     	BANKSEL	_ledCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  731     	CLRR	_ledCount
     001E 02rr                      1-  732     	CLRR	(_ledCount + 1)
                                    1-  733     	.line	565, "main.c"; 	duty = 0;
                                    1-  734     	BANKSEL	_duty
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 02rr                      1-  735     	CLRR	_duty
     0021 02rr                      1-  736     	CLRR	(_duty + 1)
                                    1-  737     	.line	566, "main.c"; 	timeStep = 0;
                                    1-  738     	BANKSEL	_timeStep
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 02rr                      1-  739     	CLRR	_timeStep
     0024 02rr                      1-  740     	CLRR	(_timeStep + 1)
                                    1-  741     	MGOTO	_00482_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
     0026                           1-  742     _00472_DS_:
                                    1-  743     	.line	571, "main.c"; 	workStep = 0;
                                    1-  744     	BANKSEL	_workStep
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 02rr                      1-  745     	CLRR	_workStep
                                    1-  746     	.line	572, "main.c"; 	deadTime = 0;
                                    1-  747     	BANKSEL	_deadTime
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 02rr                      1-  748     	CLRR	_deadTime
     002A 02rr                      1-  749     	CLRR	(_deadTime + 1)
                                    1-  750     	.line	573, "main.c"; 	breathFlag = 0;
                                    1-  751     	BANKSEL	_breathFlag
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 02rr                      1-  752     	CLRR	_breathFlag
                                    1-  753     	.line	574, "main.c"; 	PORTB |= 0x30;
     002D 2130                      1-  754     	MOVIA	0x30
     002E 11rr                      1-  755     	IORAR	_PORTB,F
                                    1-  756     	MGOTO	_00482_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
     0030                           1-  757     _00480_DS_:
                                    1-  758     	.line	579, "main.c"; 	workStep = 1;
     0030 2101                      1-  759     	MOVIA	0x01
                                    1-  760     	BANKSEL	_workStep
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 00rr                      1-  761     	MOVAR	_workStep
                                    1-  762     	.line	580, "main.c"; 	breathFlag = 0;
                                    1-  763     	BANKSEL	_breathFlag
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 02rr                      1-  764     	CLRR	_breathFlag
                                    1-  765     	.line	581, "main.c"; 	if(modeStep == 2)
                                    1-  766     	BANKSEL	_modeStep
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 01rr                      1-  767     	MOVR	_modeStep,W
     0037 2402                      1-  768     	XORIA	0x02
     0038 0903                      1-  769     	BTRSS	STATUS,2
                                    1-  770     	MGOTO	_00477_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  771     	.line	583, "main.c"; 	deadTime = 600;
     003A 2158                      1-  772     	MOVIA	0x58
                                    1-  773     	BANKSEL	_deadTime
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 00rr                      1-  774     	MOVAR	_deadTime
     003D 2102                      1-  775     	MOVIA	0x02
     003E 00rr                      1-  776     	MOVAR	(_deadTime + 1)
                                    1-  777     	MGOTO	_00482_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
     0040                           1-  778     _00477_DS_:
                                    1-  779     	.line	586, "main.c"; 	else if(modeStep == 3)
                                    1-  780     	BANKSEL	_modeStep
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 01rr                      1-  781     	MOVR	_modeStep,W
     0042 2403                      1-  782     	XORIA	0x03
     0043 0903                      1-  783     	BTRSS	STATUS,2
                                    1-  784     	MGOTO	_00482_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  785     	.line	588, "main.c"; 	deadTime = 30;
     0045 211E                      1-  786     	MOVIA	0x1e
                                    1-  787     	BANKSEL	_deadTime
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1-  788     	MOVAR	_deadTime
     0048 02rr                      1-  789     	CLRR	(_deadTime + 1)
     0049                           1-  790     _00482_DS_:
                                    1-  791     	.line	592, "main.c"; 	}
                                    1-  792     	RETURN	
     0049 0010                      3-   40 m1      ret
                                    1-  793     ; exit point of _setWorkStep
                                    1-  795     ;***
                                    1-  796     ;  pBlock Stats: dbName = C
                                    1-  797     ;***
                                    1-  798     ;has an exit
                                    1-  799     ;; Starting pCode block
                                    1-  800     .segment "code"; module=main, function=_setIRWorkStep
     0000                           1-  802     _setIRWorkStep:
                                    1-  803     ; 2 exit points
                                    1-  804     	.line	515, "main.c"; 	if(modeStep == 1)
                                    1-  805     	BANKSEL	_modeStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1-  806     	MOVR	_modeStep,W
     0002 2401                      1-  807     	XORIA	0x01
     0003 0903                      1-  808     	BTRSS	STATUS,2
                                    1-  809     	MGOTO	_00460_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  810     	.line	517, "main.c"; 	if(++workStep > 2)
                                    1-  811     	BANKSEL	_workStep
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1-  812     	INCR	_workStep,F
                                    1-  813     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  814     ;;unsigned compare: left >= lit (0x3=3), size=1
     0007 2103                      1-  815     	MOVIA	0x03
     0008 04rr                      1-  816     	SUBAR	_workStep,W
     0009 0803                      1-  817     	BTRSS	STATUS,0
                                    1-  818     	MGOTO	_00451_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  819     	.line	519, "main.c"; 	workStep = 1;
     000B 2101                      1-  820     	MOVIA	0x01
     000C 00rr                      1-  821     	MOVAR	_workStep
                                    1-  822     	.line	520, "main.c"; 	breathFlag = 0;
                                    1-  823     	BANKSEL	_breathFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1-  824     	CLRR	_breathFlag
     000F                           1-  825     _00451_DS_:
                                    1-  826     	.line	522, "main.c"; 	if(workStep == 2)
                                    1-  827     	BANKSEL	_workStep
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1-  828     	MOVR	_workStep,W
     0011 2402                      1-  829     	XORIA	0x02
     0012 0903                      1-  830     	BTRSS	STATUS,2
                                    1-  831     	MGOTO	_00462_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  832     	.line	524, "main.c"; 	ledCount = 0;
                                    1-  833     	BANKSEL	_ledCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 02rr                      1-  834     	CLRR	_ledCount
     0016 02rr                      1-  835     	CLRR	(_ledCount + 1)
                                    1-  836     	.line	525, "main.c"; 	duty = 0;
                                    1-  837     	BANKSEL	_duty
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 02rr                      1-  838     	CLRR	_duty
     0019 02rr                      1-  839     	CLRR	(_duty + 1)
                                    1-  840     	.line	526, "main.c"; 	timeStep = 0;
                                    1-  841     	BANKSEL	_timeStep
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 02rr                      1-  842     	CLRR	_timeStep
     001C 02rr                      1-  843     	CLRR	(_timeStep + 1)
                                    1-  844     	MGOTO	_00462_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
     001E                           1-  845     _00460_DS_:
                                    1-  846     	.line	531, "main.c"; 	workStep = 1;
     001E 2101                      1-  847     	MOVIA	0x01
                                    1-  848     	BANKSEL	_workStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 00rr                      1-  849     	MOVAR	_workStep
                                    1-  850     	.line	532, "main.c"; 	breathFlag = 0;
                                    1-  851     	BANKSEL	_breathFlag
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 02rr                      1-  852     	CLRR	_breathFlag
                                    1-  853     	.line	533, "main.c"; 	if(modeStep == 2)
                                    1-  854     	BANKSEL	_modeStep
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 01rr                      1-  855     	MOVR	_modeStep,W
     0025 2402                      1-  856     	XORIA	0x02
     0026 0903                      1-  857     	BTRSS	STATUS,2
                                    1-  858     	MGOTO	_00457_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  859     	.line	535, "main.c"; 	deadTime = 600;
     0028 2158                      1-  860     	MOVIA	0x58
                                    1-  861     	BANKSEL	_deadTime
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1-  862     	MOVAR	_deadTime
     002B 2102                      1-  863     	MOVIA	0x02
     002C 00rr                      1-  864     	MOVAR	(_deadTime + 1)
                                    1-  865     	MGOTO	_00462_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
     002E                           1-  866     _00457_DS_:
                                    1-  867     	.line	538, "main.c"; 	else if(modeStep == 3)
                                    1-  868     	BANKSEL	_modeStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1-  869     	MOVR	_modeStep,W
     0030 2403                      1-  870     	XORIA	0x03
     0031 0903                      1-  871     	BTRSS	STATUS,2
                                    1-  872     	MGOTO	_00462_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  873     	.line	540, "main.c"; 	deadTime = 30;
     0033 211E                      1-  874     	MOVIA	0x1e
                                    1-  875     	BANKSEL	_deadTime
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1-  876     	MOVAR	_deadTime
     0036 02rr                      1-  877     	CLRR	(_deadTime + 1)
     0037                           1-  878     _00462_DS_:
                                    1-  879     	.line	544, "main.c"; 	}
                                    1-  880     	RETURN	
     0037 0010                      3-   40 m1      ret
                                    1-  881     ; exit point of _setIRWorkStep
                                    1-  883     ;***
                                    1-  884     ;  pBlock Stats: dbName = C
                                    1-  885     ;***
                                    1-  886     ;has an exit
                                    1-  887     ;1 compiler assigned register :
                                    1-  888     ;   r0x101F
                                    1-  889     ;; Starting pCode block
                                    1-  890     .segment "code"; module=main, function=_keyRead
                                    1-  892     ;local variable name mapping:
     0000                           1-  894     _keyRead:
                                    1-  895     ; 2 exit points
                                    1-  896     	.line	489, "main.c"; 	char keyRead(uint8 keyStatus)	
                                    1-  897     	BANKSEL	r0x101F
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  898     	MOVAR	r0x101F
                                    1-  899     	.line	491, "main.c"; 	if(keyStatus)
     0002 01rr                      1-  900     	MOVR	r0x101F,W
     0003 0D03                      1-  901     	BTRSC	STATUS,2
                                    1-  902     	MGOTO	_00443_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  903     	.line	493, "main.c"; 	keyCount++;
                                    1-  904     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1-  905     	INCR	_keyCount,F
                                    1-  906     	.line	494, "main.c"; 	sleepCount = 0;
                                    1-  907     	BANKSEL	_sleepCount
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1-  908     	CLRR	_sleepCount
     0009 02rr                      1-  909     	CLRR	(_sleepCount + 1)
                                    1-  910     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1-  911     	.line	495, "main.c"; 	if(keyCount >= 200)
     000A 21C8                      1-  912     	MOVIA	0xc8
                                    1-  913     	BANKSEL	_keyCount
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 04rr                      1-  914     	SUBAR	_keyCount,W
     000D 0803                      1-  915     	BTRSS	STATUS,0
                                    1-  916     	MGOTO	_00444_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  917     	.line	497, "main.c"; 	keyCount = 200;
     000F 21C8                      1-  918     	MOVIA	0xc8
     0010 00rr                      1-  919     	MOVAR	_keyCount
                                    1-  920     	MGOTO	_00444_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  921     ;;unsigned compare: left < lit (0x8=8), size=1
     0012                           1-  922     _00443_DS_:
                                    1-  923     	.line	502, "main.c"; 	if(keyCount >= 8)
     0012 2108                      1-  924     	MOVIA	0x08
                                    1-  925     	BANKSEL	_keyCount
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 04rr                      1-  926     	SUBAR	_keyCount,W
     0015 0803                      1-  927     	BTRSS	STATUS,0
                                    1-  928     	MGOTO	_00441_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  929     	.line	504, "main.c"; 	keyCount = 0;
     0017 02rr                      1-  930     	CLRR	_keyCount
                                    1-  931     	.line	505, "main.c"; 	return	1;
     0018 2101                      1-  932     	MOVIA	0x01
                                    1-  933     	MGOTO	_00445_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
     001A                           1-  934     _00441_DS_:
                                    1-  935     	.line	507, "main.c"; 	keyCount = 0;
                                    1-  936     	BANKSEL	_keyCount
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 02rr                      1-  937     	CLRR	_keyCount
     001C                           1-  938     _00444_DS_:
                                    1-  939     	.line	509, "main.c"; 	return 0;
     001C 2100                      1-  940     	MOVIA	0x00
     001D                           1-  941     _00445_DS_:
                                    1-  942     	.line	510, "main.c"; 	}
                                    1-  943     	RETURN	
     001D 0010                      3-   40 m1      ret
                                    1-  944     ; exit point of _keyRead
                                    1-  946     ;***
                                    1-  947     ;  pBlock Stats: dbName = C
                                    1-  948     ;***
                                    1-  949     ;has an exit
                                    1-  950     ;functions called:
                                    1-  951     ;   _breathCtr
                                    1-  952     ;   _breathCtr
                                    1-  953     ;; Starting pCode block
                                    1-  954     .segment "code"; module=main, function=_workCtr
     0000                           1-  956     _workCtr:
                                    1-  957     ; 2 exit points
                                    1-  958     	.line	456, "main.c"; 	if(workStep == 0)
                                    1-  959     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1-  960     	MOVR	_workStep,W
     0002 0903                      1-  961     	BTRSS	STATUS,2
                                    1-  962     	MGOTO	_00394_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  963     	.line	458, "main.c"; 	PORTB |= 0x30;
     0004 2130                      1-  964     	MOVIA	0x30
     0005 11rr                      1-  965     	IORAR	_PORTB,F
     0006                           1-  966     _00394_DS_:
                                    1-  967     	.line	461, "main.c"; 	if(modeStep == 1)
                                    1-  968     	BANKSEL	_modeStep
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 01rr                      1-  969     	MOVR	_modeStep,W
     0008 2401                      1-  970     	XORIA	0x01
     0009 0903                      1-  971     	BTRSS	STATUS,2
                                    1-  972     	MGOTO	_00408_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  973     	.line	463, "main.c"; 	if(workStep == 1)
                                    1-  974     	BANKSEL	_workStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 01rr                      1-  975     	MOVR	_workStep,W
     000D 2401                      1-  976     	XORIA	0x01
     000E 0903                      1-  977     	BTRSS	STATUS,2
                                    1-  978     	MGOTO	_00398_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  979     	.line	465, "main.c"; 	breathFlag = 0;
                                    1-  980     	BANKSEL	_breathFlag
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 02rr                      1-  981     	CLRR	_breathFlag
                                    1-  982     	.line	466, "main.c"; 	PORTB &= 0xCF;
     0012 21CF                      1-  983     	MOVIA	0xcf
     0013 10rr                      1-  984     	ANDAR	_PORTB,F
                                    1-  985     	MGOTO	_00410_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
     0015                           1-  986     _00398_DS_:
                                    1-  987     	.line	468, "main.c"; 	else if(workStep == 2)
                                    1-  988     	BANKSEL	_workStep
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 01rr                      1-  989     	MOVR	_workStep,W
     0017 2402                      1-  990     	XORIA	0x02
     0018 0903                      1-  991     	BTRSS	STATUS,2
                                    1-  992     	MGOTO	_00410_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  993     	.line	470, "main.c"; 	breathCtr();
                                    1-  994     	MCALL	_breathCtr
     001A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  995     	MGOTO	_00410_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
     001C                           1-  996     _00408_DS_:
                                    1-  997     	.line	473, "main.c"; 	else if(modeStep == 2 || modeStep == 3)
                                    1-  998     	BANKSEL	_modeStep
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 01rr                      1-  999     	MOVR	_modeStep,W
     001E 2402                      1- 1000     	XORIA	0x02
     001F 0D03                      1- 1001     	BTRSC	STATUS,2
                                    1- 1002     	MGOTO	_00404_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
     0021 01rr                      1- 1003     	MOVR	_modeStep,W
     0022 2403                      1- 1004     	XORIA	0x03
     0023 0903                      1- 1005     	BTRSS	STATUS,2
                                    1- 1006     	MGOTO	_00410_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 1007     _00404_DS_:
                                    1- 1008     	.line	475, "main.c"; 	if(deadTime > 0 && workStep == 1)
                                    1- 1009     	BANKSEL	_deadTime
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1- 1010     	MOVR	_deadTime,W
     0027 11rr                      1- 1011     	IORAR	(_deadTime + 1),W
     0028 0D03                      1- 1012     	BTRSC	STATUS,2
                                    1- 1013     	MGOTO	_00401_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1014     	BANKSEL	_workStep
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1- 1015     	MOVR	_workStep,W
     002C 2401                      1- 1016     	XORIA	0x01
     002D 0903                      1- 1017     	BTRSS	STATUS,2
                                    1- 1018     	MGOTO	_00401_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1019     	.line	477, "main.c"; 	PORTB &= 0xCF;
     002F 21CF                      1- 1020     	MOVIA	0xcf
     0030 10rr                      1- 1021     	ANDAR	_PORTB,F
                                    1- 1022     	.line	478, "main.c"; 	breathFlag = 0;
                                    1- 1023     	BANKSEL	_breathFlag
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 02rr                      1- 1024     	CLRR	_breathFlag
                                    1- 1025     	MGOTO	_00410_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
     0034                           1- 1026     _00401_DS_:
                                    1- 1027     	.line	482, "main.c"; 	breathFlag = 0;
                                    1- 1028     	BANKSEL	_breathFlag
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 02rr                      1- 1029     	CLRR	_breathFlag
                                    1- 1030     	.line	483, "main.c"; 	workStep = 0;
                                    1- 1031     	BANKSEL	_workStep
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 02rr                      1- 1032     	CLRR	_workStep
                                    1- 1033     	.line	484, "main.c"; 	PORTB |= 0x30;
     0038 2130                      1- 1034     	MOVIA	0x30
     0039 11rr                      1- 1035     	IORAR	_PORTB,F
     003A                           1- 1036     _00410_DS_:
                                    1- 1037     	.line	487, "main.c"; 	}
                                    1- 1038     	RETURN	
     003A 0010                      3-   40 m1      ret
                                    1- 1039     ; exit point of _workCtr
                                    1- 1041     ;***
                                    1- 1042     ;  pBlock Stats: dbName = C
                                    1- 1043     ;***
                                    1- 1044     ;has an exit
                                    1- 1045     ;; Starting pCode block
                                    1- 1046     .segment "code"; module=main, function=_setModeStep
     0000                           1- 1048     _setModeStep:
                                    1- 1049     ; 2 exit points
                                    1- 1050     	.line	434, "main.c"; 	if((PORTB & 0x02) && (PORTB & 0x04))
     0000 08rr                      1- 1051     	BTRSS	_PORTB,1
                                    1- 1052     	MGOTO	_00385_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
     0002 09rr                      1- 1053     	BTRSS	_PORTB,2
                                    1- 1054     	MGOTO	_00385_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1055     	.line	436, "main.c"; 	modeStep = 1;
     0004 2101                      1- 1056     	MOVIA	0x01
                                    1- 1057     	BANKSEL	_modeStep
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 00rr                      1- 1058     	MOVAR	_modeStep
                                    1- 1059     	MGOTO	_00388_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
     0008                           1- 1060     _00385_DS_:
                                    1- 1061     	.line	438, "main.c"; 	else if(PORTB & 0x04)
     0008 09rr                      1- 1062     	BTRSS	_PORTB,2
                                    1- 1063     	MGOTO	_00382_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1064     	.line	440, "main.c"; 	breathFlag = 0;
                                    1- 1065     	BANKSEL	_breathFlag
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 02rr                      1- 1066     	CLRR	_breathFlag
                                    1- 1067     	.line	441, "main.c"; 	modeStep = 2;
     000C 2102                      1- 1068     	MOVIA	0x02
                                    1- 1069     	BANKSEL	_modeStep
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 1070     	MOVAR	_modeStep
                                    1- 1071     	MGOTO	_00388_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
     0010                           1- 1072     _00382_DS_:
                                    1- 1073     	.line	443, "main.c"; 	else if((PORTB & 0x02))
     0010 08rr                      1- 1074     	BTRSS	_PORTB,1
                                    1- 1075     	MGOTO	_00379_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1076     	.line	445, "main.c"; 	breathFlag = 0;
                                    1- 1077     	BANKSEL	_breathFlag
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 02rr                      1- 1078     	CLRR	_breathFlag
                                    1- 1079     	.line	446, "main.c"; 	modeStep = 3;
     0014 2103                      1- 1080     	MOVIA	0x03
                                    1- 1081     	BANKSEL	_modeStep
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 00rr                      1- 1082     	MOVAR	_modeStep
                                    1- 1083     	MGOTO	_00388_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
     0018                           1- 1084     _00379_DS_:
                                    1- 1085     	.line	450, "main.c"; 	modeStep = 0;
                                    1- 1086     	BANKSEL	_modeStep
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1087     	CLRR	_modeStep
     001A                           1- 1088     _00388_DS_:
                                    1- 1089     	.line	452, "main.c"; 	}
                                    1- 1090     	RETURN	
     001A 0010                      3-   40 m1      ret
                                    1- 1091     ; exit point of _setModeStep
                                    1- 1093     ;***
                                    1- 1094     ;  pBlock Stats: dbName = C
                                    1- 1095     ;***
                                    1- 1096     ;has an exit
                                    1- 1097     ;; Starting pCode block
                                    1- 1098     .segment "code"; module=main, function=_breathCtr
     0000                           1- 1100     _breathCtr:
                                    1- 1101     ; 2 exit points
                                    1- 1102     ;;unsigned compare: left < lit (0xBB=187), size=2
                                    1- 1103     	.line	407, "main.c"; 	if(timeStep < 187)
     0000 2100                      1- 1104     	MOVIA	0x00
                                    1- 1105     	BANKSEL	_timeStep
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 1106     	SUBAR	(_timeStep + 1),W
     0003 0903                      1- 1107     	BTRSS	STATUS,2
                                    1- 1108     	MGOTO	_00369_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
     0005 21BB                      1- 1109     	MOVIA	0xbb
     0006 04rr                      1- 1110     	SUBAR	_timeStep,W
     0007                           1- 1111     _00369_DS_:
     0007 0C03                      1- 1112     	BTRSC	STATUS,0
                                    1- 1113     	MGOTO	_00348_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1114     	.line	409, "main.c"; 	breathFlag = 0;
                                    1- 1115     	BANKSEL	_breathFlag
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 02rr                      1- 1116     	CLRR	_breathFlag
                                    1- 1117     	.line	410, "main.c"; 	PORTB &= 0xCF;
     000B 21CF                      1- 1118     	MOVIA	0xcf
     000C 10rr                      1- 1119     	ANDAR	_PORTB,F
                                    1- 1120     	MGOTO	_00349_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1121     ;;unsigned compare: left < lit (0x1E7=487), size=2
     000E                           1- 1122     _00348_DS_:
                                    1- 1123     	.line	412, "main.c"; 	else if(timeStep < 487)
     000E 2101                      1- 1124     	MOVIA	0x01
                                    1- 1125     	BANKSEL	_timeStep
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 04rr                      1- 1126     	SUBAR	(_timeStep + 1),W
     0011 0903                      1- 1127     	BTRSS	STATUS,2
                                    1- 1128     	MGOTO	_00370_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
     0013 21E7                      1- 1129     	MOVIA	0xe7
     0014 04rr                      1- 1130     	SUBAR	_timeStep,W
     0015                           1- 1131     _00370_DS_:
     0015 0C03                      1- 1132     	BTRSC	STATUS,0
                                    1- 1133     	MGOTO	_00345_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1134     	.line	414, "main.c"; 	breathFlag = 1;
     0017 2101                      1- 1135     	MOVIA	0x01
                                    1- 1136     	BANKSEL	_breathFlag
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 00rr                      1- 1137     	MOVAR	_breathFlag
                                    1- 1138     	.line	415, "main.c"; 	duty = timeStep-187;
     001A 2145                      1- 1139     	MOVIA	0x45
                                    1- 1140     	BANKSEL	_timeStep
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1141     	ADDAR	_timeStep,W
                                    1- 1142     	BANKSEL	_duty
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 00rr                      1- 1143     	MOVAR	_duty
     001F 21FF                      1- 1144     	MOVIA	0xff
     0020 00rr                      1- 1145     	MOVAR	(_duty + 1)
                                    1- 1146     	BANKSEL	_timeStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1147     	MOVR	(_timeStep + 1),W
     0023 0C03                      1- 1148     	BTRSC	STATUS,0
     0024 05rr                      1- 1149     	INCR	(_timeStep + 1),W
     0025 0D03                      1- 1150     	BTRSC	STATUS,2
                                    1- 1151     	MGOTO	_00001_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1152     	BANKSEL	_duty
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1153     	ADDAR	(_duty + 1),F
     0029                           1- 1154     _00001_DS_:
                                    1- 1155     	MGOTO	_00349_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1156     ;;unsigned compare: left < lit (0x2AF=687), size=2
     002A                           1- 1157     _00345_DS_:
                                    1- 1158     	.line	417, "main.c"; 	else if(timeStep < 687)
     002A 2102                      1- 1159     	MOVIA	0x02
                                    1- 1160     	BANKSEL	_timeStep
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 04rr                      1- 1161     	SUBAR	(_timeStep + 1),W
     002D 0903                      1- 1162     	BTRSS	STATUS,2
                                    1- 1163     	MGOTO	_00371_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F 21AF                      1- 1164     	MOVIA	0xaf
     0030 04rr                      1- 1165     	SUBAR	_timeStep,W
     0031                           1- 1166     _00371_DS_:
     0031 0C03                      1- 1167     	BTRSC	STATUS,0
                                    1- 1168     	MGOTO	_00342_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1169     	.line	419, "main.c"; 	breathFlag = 1;
     0033 2101                      1- 1170     	MOVIA	0x01
                                    1- 1171     	BANKSEL	_breathFlag
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1172     	MOVAR	_breathFlag
                                    1- 1173     	.line	420, "main.c"; 	duty = 300;
     0036 212C                      1- 1174     	MOVIA	0x2c
                                    1- 1175     	BANKSEL	_duty
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 00rr                      1- 1176     	MOVAR	_duty
     0039 2101                      1- 1177     	MOVIA	0x01
     003A 00rr                      1- 1178     	MOVAR	(_duty + 1)
                                    1- 1179     	MGOTO	_00349_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1180     ;;unsigned compare: left < lit (0x3DB=987), size=2
     003C                           1- 1181     _00342_DS_:
                                    1- 1182     	.line	422, "main.c"; 	else if(timeStep < 987)
     003C 2103                      1- 1183     	MOVIA	0x03
                                    1- 1184     	BANKSEL	_timeStep
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 04rr                      1- 1185     	SUBAR	(_timeStep + 1),W
     003F 0903                      1- 1186     	BTRSS	STATUS,2
                                    1- 1187     	MGOTO	_00372_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041 21DB                      1- 1188     	MOVIA	0xdb
     0042 04rr                      1- 1189     	SUBAR	_timeStep,W
     0043                           1- 1190     _00372_DS_:
     0043 0C03                      1- 1191     	BTRSC	STATUS,0
                                    1- 1192     	MGOTO	_00349_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1193     	.line	424, "main.c"; 	breathFlag = 1;
     0045 2101                      1- 1194     	MOVIA	0x01
                                    1- 1195     	BANKSEL	_breathFlag
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1- 1196     	MOVAR	_breathFlag
                                    1- 1197     	.line	425, "main.c"; 	duty = 987 - timeStep;
                                    1- 1198     	BANKSEL	_timeStep
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 01rr                      1- 1199     	MOVR	_timeStep,W
     004A 27DB                      1- 1200     	SUBIA	0xdb
                                    1- 1201     	BANKSEL	_duty
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 00rr                      1- 1202     	MOVAR	_duty
                                    1- 1203     	BANKSEL	_timeStep
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 01rr                      1- 1204     	MOVR	(_timeStep + 1),W
     004F 0803                      1- 1205     	BTRSS	STATUS,0
     0050 05rr                      1- 1206     	INCR	(_timeStep + 1),W
     0051 2703                      1- 1207     	SUBIA	0x03
                                    1- 1208     	BANKSEL	_duty
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 00rr                      1- 1209     	MOVAR	(_duty + 1)
     0054                           1- 1210     _00349_DS_:
                                    1- 1211     	.line	428, "main.c"; 	if(++timeStep > 987)
                                    1- 1212     	BANKSEL	_timeStep
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 05rr                      1- 1213     	INCR	_timeStep,F
     0056 0D03                      1- 1214     	BTRSC	STATUS,2
     0057 05rr                      1- 1215     	INCR	(_timeStep + 1),F
                                    1- 1216     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1217     ;;unsigned compare: left >= lit (0x3DC=988), size=2
     0058 2103                      1- 1218     	MOVIA	0x03
     0059 04rr                      1- 1219     	SUBAR	(_timeStep + 1),W
     005A 0903                      1- 1220     	BTRSS	STATUS,2
                                    1- 1221     	MGOTO	_00373_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
     005C 21DC                      1- 1222     	MOVIA	0xdc
     005D 04rr                      1- 1223     	SUBAR	_timeStep,W
     005E                           1- 1224     _00373_DS_:
     005E 0803                      1- 1225     	BTRSS	STATUS,0
                                    1- 1226     	MGOTO	_00352_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1227     	.line	429, "main.c"; 	timeStep = 0;
                                    1- 1228     	BANKSEL	_timeStep
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 02rr                      1- 1229     	CLRR	_timeStep
     0062 02rr                      1- 1230     	CLRR	(_timeStep + 1)
     0063                           1- 1231     _00352_DS_:
                                    1- 1232     	.line	430, "main.c"; 	}
                                    1- 1233     	RETURN	
     0063 0010                      3-   40 m1      ret
                                    1- 1234     ; exit point of _breathCtr
                                    1- 1236     ;***
                                    1- 1237     ;  pBlock Stats: dbName = C
                                    1- 1238     ;***
                                    1- 1239     ;has an exit
                                    1- 1240     ;; Starting pCode block
                                    1- 1241     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1243     _gotoSleep:
                                    1- 1244     ; 2 exit points
                                    1- 1245     	.line	314, "main.c"; 	sleepCount = 0;
                                    1- 1246     	BANKSEL	_sleepCount
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1247     	CLRR	_sleepCount
     0002 02rr                      1- 1248     	CLRR	(_sleepCount + 1)
                                    1- 1249     	.line	315, "main.c"; 	workStep = 0;
                                    1- 1250     	BANKSEL	_workStep
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 1251     	CLRR	_workStep
                                    1- 1252     	.line	316, "main.c"; 	BWUCON = 0X09;
     0005 2109                      1- 1253     	MOVIA	0x09
     0006 00rr                      1- 1254     	MOVAR	_BWUCON
                                    1- 1255     	.line	317, "main.c"; 	PORTB = 0x30;
     0007 2130                      1- 1256     	MOVIA	0x30
     0008 00rr                      1- 1257     	MOVAR	_PORTB
                                    1- 1258     	.line	318, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PBKey;
     0009 210B                      1- 1259     	MOVIA	0x0b
     000A 00rr                      1- 1260     	MOVAR	_INTE
                                    1- 1261     	.line	319, "main.c"; 	PCON =  C_LVR_En;	
     000B 2108                      1- 1262     	MOVIA	0x08
     000C 00rr                      1- 1263     	MOVAR	_PCON
                                    1- 1264     	.line	320, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     000D 02rr                      1- 1265     	CLRR	_INTF
                                    1- 1266     	.line	321, "main.c"; 	CLRWDT();
     000E 0002                      1- 1267     	clrwdt
                                    1- 1268     	.line	322, "main.c"; 	SLEEP();
     000F 0001                      1- 1269     	sleep
                                    1- 1270     	.line	323, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PBKey;	// Enable Timer0、Timer1、WDT overflow interrupt
     0010 210B                      1- 1271     	MOVIA	0x0b
     0011 00rr                      1- 1272     	MOVAR	_INTE
                                    1- 1273     	.line	324, "main.c"; 	INTF = 0;
     0012 02rr                      1- 1274     	CLRR	_INTF
                                    1- 1275     	.line	326, "main.c"; 	PCON = C_WDT_En;				// Enable WDT ,  Enable LVR
     0013 2180                      1- 1276     	MOVIA	0x80
     0014 00rr                      1- 1277     	MOVAR	_PCON
                                    1- 1278     	.line	327, "main.c"; 	sleepFlag = 0;
                                    1- 1279     	BANKSEL	_sleepFlag
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 1280     	CLRR	_sleepFlag
                                    1- 1281     	.line	328, "main.c"; 	bitIndex = 0;
                                    1- 1282     	BANKSEL	_bitIndex
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 02rr                      1- 1283     	CLRR	_bitIndex
                                    1- 1284     	.line	329, "main.c"; 	value = 0;
                                    1- 1285     	BANKSEL	_value
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 02rr                      1- 1286     	CLRR	_value
                                    1- 1287     	.line	330, "main.c"; 	}
                                    1- 1288     	RETURN	
     001B 0010                      3-   40 m1      ret
                                    1- 1289     ; exit point of _gotoSleep
                                    1- 1291     ;***
                                    1- 1292     ;  pBlock Stats: dbName = C
                                    1- 1293     ;***
                                    1- 1294     ;has an exit
                                    1- 1295     ;functions called:
                                    1- 1296     ;   _setIRWorkStep
                                    1- 1297     ;   _setIRWorkStep
                                    1- 1298     ;; Starting pCode block
                                    1- 1299     .segment "code"; module=main, function=_proData
     0000                           1- 1301     _proData:
                                    1- 1302     ; 2 exit points
                                    1- 1303     	.line	287, "main.c"; 	irCode = (uint8)(~data4);
                                    1- 1304     	BANKSEL	_data4
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 1305     	COMR	_data4,W
                                    1- 1306     	BANKSEL	_irCode
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 1307     	MOVAR	_irCode
                                    1- 1308     	.line	288, "main.c"; 	if(irCode == data3)
                                    1- 1309     	BANKSEL	_data3
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 12rr                      1- 1310     	XORAR	_data3,W
     0006 0903                      1- 1311     	BTRSS	STATUS,2
                                    1- 1312     	MGOTO	_00249_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1313     	.line	290, "main.c"; 	switch(irCode)
                                    1- 1314     	BANKSEL	_irCode
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 01rr                      1- 1315     	MOVR	_irCode,W
     000A 2415                      1- 1316     	XORIA	0x15
     000B 0D03                      1- 1317     	BTRSC	STATUS,2
                                    1- 1318     	MGOTO	_00246_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
     000D 01rr                      1- 1319     	MOVR	_irCode,W
     000E 2446                      1- 1320     	XORIA	0x46
     000F 0903                      1- 1321     	BTRSS	STATUS,2
                                    1- 1322     	MGOTO	_00249_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1323     	.line	293, "main.c"; 	setIRWorkStep();
                                    1- 1324     	MCALL	_setIRWorkStep
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1325     	.line	294, "main.c"; 	break;
                                    1- 1326     	MGOTO	_00249_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
     0013                           1- 1327     _00246_DS_:
                                    1- 1328     	.line	296, "main.c"; 	workStep = 0;
                                    1- 1329     	BANKSEL	_workStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 02rr                      1- 1330     	CLRR	_workStep
                                    1- 1331     	.line	297, "main.c"; 	deadTime = 0;
                                    1- 1332     	BANKSEL	_deadTime
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 1333     	CLRR	_deadTime
     0017 02rr                      1- 1334     	CLRR	(_deadTime + 1)
                                    1- 1335     	.line	298, "main.c"; 	breathFlag = 0;
                                    1- 1336     	BANKSEL	_breathFlag
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1337     	CLRR	_breathFlag
                                    1- 1338     	.line	299, "main.c"; 	PORTB |= 0x30;
     001A 2130                      1- 1339     	MOVIA	0x30
     001B 11rr                      1- 1340     	IORAR	_PORTB,F
     001C                           1- 1341     _00249_DS_:
                                    1- 1342     	.line	303, "main.c"; 	ReadOver = 0;
                                    1- 1343     	BANKSEL	_Status
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 1Err                      1- 1344     	BCR	_Status,4
                                    1- 1345     	.line	304, "main.c"; 	}
                                    1- 1346     	RETURN	
     001E 0010                      3-   40 m1      ret
                                    1- 1347     ; exit point of _proData
                                    1- 1349     ;***
                                    1- 1350     ;  pBlock Stats: dbName = C
                                    1- 1351     ;***
                                    1- 1352     ;has an exit
                                    1- 1353     ;1 compiler assigned register :
                                    1- 1354     ;   r0x1021
                                    1- 1355     ;; Starting pCode block
                                    1- 1356     .segment "code"; module=main, function=_GetOneByte
                                    1- 1358     ;local variable name mapping:
     0000                           1- 1360     _GetOneByte:
                                    1- 1361     ; 2 exit points
                                    1- 1362     	.line	240, "main.c"; 	void GetOneByte(uint8 bitNub)
                                    1- 1363     	BANKSEL	r0x1021
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1364     	MOVAR	r0x1021
                                    1- 1365     	.line	242, "main.c"; 	if(RemoteStart)
                                    1- 1366     	BANKSEL	_Status
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 09rr                      1- 1367     	BTRSS	_Status,3
                                    1- 1368     	MGOTO	_00240_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1369     	.line	244, "main.c"; 	if(bitIndex == 0)
                                    1- 1370     	BANKSEL	_bitIndex
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 01rr                      1- 1371     	MOVR	_bitIndex,W
     0007 0903                      1- 1372     	BTRSS	STATUS,2
                                    1- 1373     	MGOTO	_00224_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1374     	.line	246, "main.c"; 	bitIndex = 0;
     0009 02rr                      1- 1375     	CLRR	_bitIndex
                                    1- 1376     	.line	247, "main.c"; 	value = 0;
                                    1- 1377     	BANKSEL	_value
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 02rr                      1- 1378     	CLRR	_value
                                    1- 1379     	.line	248, "main.c"; 	data1 = data2 = data3 = data4 = 0;
                                    1- 1380     	BANKSEL	_data4
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 02rr                      1- 1381     	CLRR	_data4
                                    1- 1382     	BANKSEL	_data3
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1- 1383     	CLRR	_data3
                                    1- 1384     	BANKSEL	_data2
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 02rr                      1- 1385     	CLRR	_data2
                                    1- 1386     	BANKSEL	_data1
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 02rr                      1- 1387     	CLRR	_data1
     0014                           1- 1388     _00224_DS_:
                                    1- 1389     	.line	250, "main.c"; 	++bitIndex;
                                    1- 1390     	BANKSEL	_bitIndex
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1- 1391     	INCR	_bitIndex,F
                                    1- 1392     	.line	251, "main.c"; 	if(bitNub)
                                    1- 1393     	BANKSEL	r0x1021
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 1394     	MOVR	r0x1021,W
     0018 0D03                      1- 1395     	BTRSC	STATUS,2
                                    1- 1396     	MGOTO	_00002_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1397     	.line	253, "main.c"; 	value |= 0x80;
                                    1- 1398     	BANKSEL	_value
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 1Brr                      1- 1399     	BSR	_value,7
     001C                           1- 1400     _00002_DS_:
                                    1- 1401     	.line	256, "main.c"; 	if(bitIndex == 8)
                                    1- 1402     	BANKSEL	_bitIndex
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 01rr                      1- 1403     	MOVR	_bitIndex,W
     001E 2408                      1- 1404     	XORIA	0x08
     001F 0903                      1- 1405     	BTRSS	STATUS,2
                                    1- 1406     	MGOTO	_00236_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1407     	.line	258, "main.c"; 	data1 = value;
                                    1- 1408     	BANKSEL	_value
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1409     	MOVR	_value,W
                                    1- 1410     	BANKSEL	_data1
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 1411     	MOVAR	_data1
                                    1- 1412     	MGOTO	_00237_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
     0026                           1- 1413     _00236_DS_:
                                    1- 1414     	.line	260, "main.c"; 	else if(bitIndex == 16)
                                    1- 1415     	BANKSEL	_bitIndex
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 1416     	MOVR	_bitIndex,W
     0028 2410                      1- 1417     	XORIA	0x10
     0029 0903                      1- 1418     	BTRSS	STATUS,2
                                    1- 1419     	MGOTO	_00233_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1420     	.line	262, "main.c"; 	data2 = value;
                                    1- 1421     	BANKSEL	_value
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1- 1422     	MOVR	_value,W
                                    1- 1423     	BANKSEL	_data2
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 00rr                      1- 1424     	MOVAR	_data2
                                    1- 1425     	MGOTO	_00237_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
     0030                           1- 1426     _00233_DS_:
                                    1- 1427     	.line	265, "main.c"; 	else if(bitIndex == 24)
                                    1- 1428     	BANKSEL	_bitIndex
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1- 1429     	MOVR	_bitIndex,W
     0032 2418                      1- 1430     	XORIA	0x18
     0033 0903                      1- 1431     	BTRSS	STATUS,2
                                    1- 1432     	MGOTO	_00230_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1433     	.line	267, "main.c"; 	data3 = value;
                                    1- 1434     	BANKSEL	_value
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 01rr                      1- 1435     	MOVR	_value,W
                                    1- 1436     	BANKSEL	_data3
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 00rr                      1- 1437     	MOVAR	_data3
                                    1- 1438     	MGOTO	_00237_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
     003A                           1- 1439     _00230_DS_:
                                    1- 1440     	.line	270, "main.c"; 	else if(bitIndex == 32)
                                    1- 1441     	BANKSEL	_bitIndex
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1- 1442     	MOVR	_bitIndex,W
     003C 2420                      1- 1443     	XORIA	0x20
     003D 0903                      1- 1444     	BTRSS	STATUS,2
                                    1- 1445     	MGOTO	_00237_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1446     	.line	272, "main.c"; 	data4 = value;
                                    1- 1447     	BANKSEL	_value
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 01rr                      1- 1448     	MOVR	_value,W
                                    1- 1449     	BANKSEL	_data4
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 00rr                      1- 1450     	MOVAR	_data4
                                    1- 1451     	.line	273, "main.c"; 	ReadOver = 1;
                                    1- 1452     	BANKSEL	_Status
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 1Arr                      1- 1453     	BSR	_Status,4
                                    1- 1454     	.line	274, "main.c"; 	OneCode = 0;
     0045 1Crr                      1- 1455     	BCR	_Status,1
                                    1- 1456     	.line	275, "main.c"; 	ZeroCode = 0;
     0046 1Crr                      1- 1457     	BCR	_Status,0
                                    1- 1458     	.line	276, "main.c"; 	RemoteStart = 0;
     0047 1Drr                      1- 1459     	BCR	_Status,3
                                    1- 1460     	.line	277, "main.c"; 	bitIndex = 0;
                                    1- 1461     	BANKSEL	_bitIndex
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 02rr                      1- 1462     	CLRR	_bitIndex
                                    1- 1463     	.line	278, "main.c"; 	sleepCount = 0;
                                    1- 1464     	BANKSEL	_sleepCount
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 02rr                      1- 1465     	CLRR	_sleepCount
     004C 02rr                      1- 1466     	CLRR	(_sleepCount + 1)
                                    1- 1467     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=1, sign=0, same=1, offr=0
     004D                           1- 1468     _00237_DS_:
                                    1- 1469     	.line	281, "main.c"; 	value = value >> 1;
     004D 1C03                      1- 1470     	BCR	STATUS,0
                                    1- 1471     	BANKSEL	_value
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 13rr                      1- 1472     	RRR	_value,F
     0050                           1- 1473     _00240_DS_:
                                    1- 1474     	.line	283, "main.c"; 	}
                                    1- 1475     	RETURN	
     0050 0010                      3-   40 m1      ret
                                    1- 1476     ; exit point of _GetOneByte
                                    1- 1478     ;***
                                    1- 1479     ;  pBlock Stats: dbName = C
                                    1- 1480     ;***
                                    1- 1481     ;has an exit
                                    1- 1482     ;functions called:
                                    1- 1483     ;   _cleanData
                                    1- 1484     ;   _cleanData
                                    1- 1485     ;4 compiler assigned registers:
                                    1- 1486     ;   r0x1021
                                    1- 1487     ;   r0x1022
                                    1- 1488     ;   r0x1023
                                    1- 1489     ;   r0x1024
                                    1- 1490     ;; Starting pCode block
                                    1- 1491     .segment "code"; module=main, function=_proLow
     0000                           1- 1493     _proLow:
                                    1- 1494     ; 2 exit points
                                    1- 1495     	.line	196, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 1496     	CLRA	
     0001 002r                      1- 1497     	SFUN	_T1CR1
                                    1- 1498     	.line	197, "main.c"; 	T1Counter = accTimeH;
                                    1- 1499     	BANKSEL	_accTimeH
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 01rr                      1- 1500     	MOVR	_accTimeH,W
                                    1- 1501     	BANKSEL	_T1Counter
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 00rr                      1- 1502     	MOVAR	_T1Counter
     0006 02rr                      1- 1503     	CLRR	(_T1Counter + 1)
                                    1- 1504     	.line	198, "main.c"; 	T1Counter <<= 8;
     0007 01rr                      1- 1505     	MOVR	_T1Counter,W
     0008 00rr                      1- 1506     	MOVAR	(_T1Counter + 1)
     0009 02rr                      1- 1507     	CLRR	_T1Counter
                                    1- 1508     	.line	199, "main.c"; 	T1Counter += (0xFF - TMR1);
     000A 003r                      1- 1509     	SFUNR	_TMR1
                                    1- 1510     ;;3	MOVAR	r0x1021
                                    1- 1511     	BANKSEL	r0x1022
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1- 1512     	MOVAR	r0x1022
                                    1- 1513     	BANKSEL	r0x1023
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 1514     	CLRR	r0x1023
                                    1- 1515     	BANKSEL	r0x1022
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 1516     	MOVR	r0x1022,W
     0011 27FF                      1- 1517     	SUBIA	0xff
                                    1- 1518     	BANKSEL	r0x1021
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 00rr                      1- 1519     	MOVAR	r0x1021
     0014 2100                      1- 1520     	MOVIA	0x00
     0015 0C03                      1- 1521     	BTRSC	STATUS,0
                                    1- 1522     	MGOTO	_00003_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1523     	BANKSEL	r0x1023
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 05rr                      1- 1524     	INCR	r0x1023,W
     0019                           1- 1525     _00003_DS_:
     0019 2700                      1- 1526     	SUBIA	0x00
                                    1- 1527     	BANKSEL	r0x1023
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 00rr                      1- 1528     	MOVAR	r0x1023
                                    1- 1529     ;;1	MOVAR	r0x1024
                                    1- 1530     	BANKSEL	r0x1021
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 01rr                      1- 1531     	MOVR	r0x1021,W
                                    1- 1532     	BANKSEL	r0x1022
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1533     	MOVAR	r0x1022
                                    1- 1534     	BANKSEL	_T1Counter
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 03rr                      1- 1535     	ADDAR	_T1Counter,F
                                    1- 1536     	BANKSEL	r0x1023
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 1537     	MOVR	r0x1023,W
     0024 0C03                      1- 1538     	BTRSC	STATUS,0
     0025 05rr                      1- 1539     	INCR	r0x1023,W
     0026 0D03                      1- 1540     	BTRSC	STATUS,2
                                    1- 1541     	MGOTO	_00004_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1542     	BANKSEL	_T1Counter
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 03rr                      1- 1543     	ADDAR	(_T1Counter + 1),F
     002A                           1- 1544     _00004_DS_:
                                    1- 1545     	.line	200, "main.c"; 	accTimeH = 0;
                                    1- 1546     	BANKSEL	_accTimeH
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 02rr                      1- 1547     	CLRR	_accTimeH
                                    1- 1548     	.line	201, "main.c"; 	TMR1 = 0xFF;
     002C 21FF                      1- 1549     	MOVIA	0xff
     002D 002r                      1- 1550     	SFUN	_TMR1
                                    1- 1551     	.line	202, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload; 
     002E 2103                      1- 1552     	MOVIA	0x03
     002F 002r                      1- 1553     	SFUN	_T1CR1
                                    1- 1554     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1555     ;;unsigned compare: left >= lit (0x205=517), size=2
                                    1- 1556     	.line	203, "main.c"; 	if((T1Counter > (HeadCont_L - (FaultTolerant*FaultTolerantX)))&&(T1Counter < (HeadCont_L + (FaultTolerant*FaultTolerantX))))
     0030 2102                      1- 1557     	MOVIA	0x02
                                    1- 1558     	BANKSEL	_T1Counter
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 04rr                      1- 1559     	SUBAR	(_T1Counter + 1),W
     0033 0903                      1- 1560     	BTRSS	STATUS,2
                                    1- 1561     	MGOTO	_00215_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
     0035 2105                      1- 1562     	MOVIA	0x05
     0036 04rr                      1- 1563     	SUBAR	_T1Counter,W
     0037                           1- 1564     _00215_DS_:
     0037 0803                      1- 1565     	BTRSS	STATUS,0
                                    1- 1566     	MGOTO	_00195_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1567     ;;unsigned compare: left < lit (0x27C=636), size=2
     0039 2102                      1- 1568     	MOVIA	0x02
                                    1- 1569     	BANKSEL	_T1Counter
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 04rr                      1- 1570     	SUBAR	(_T1Counter + 1),W
     003C 0903                      1- 1571     	BTRSS	STATUS,2
                                    1- 1572     	MGOTO	_00216_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
     003E 217C                      1- 1573     	MOVIA	0x7c
     003F 04rr                      1- 1574     	SUBAR	_T1Counter,W
     0040                           1- 1575     _00216_DS_:
     0040 0C03                      1- 1576     	BTRSC	STATUS,0
                                    1- 1577     	MGOTO	_00195_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1578     	.line	205, "main.c"; 	RemoteStart = 0;       //遥控数据头
                                    1- 1579     	BANKSEL	_Status
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 1Drr                      1- 1580     	BCR	_Status,3
                                    1- 1581     	.line	206, "main.c"; 	MaybeRemoteStart = 1;		//疑似遥控数据头
     0044 19rr                      1- 1582     	BSR	_Status,2
                                    1- 1583     	.line	207, "main.c"; 	sleepFlag = 0;
                                    1- 1584     	BANKSEL	_sleepFlag
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 02rr                      1- 1585     	CLRR	_sleepFlag
                                    1- 1586     	.line	208, "main.c"; 	bitIndex = 0;
                                    1- 1587     	BANKSEL	_bitIndex
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 02rr                      1- 1588     	CLRR	_bitIndex
                                    1- 1589     	.line	209, "main.c"; 	OneCode = 0;
                                    1- 1590     	BANKSEL	_Status
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 1Crr                      1- 1591     	BCR	_Status,1
                                    1- 1592     	.line	210, "main.c"; 	ZeroCode = 0;
     004B 1Crr                      1- 1593     	BCR	_Status,0
                                    1- 1594     	.line	211, "main.c"; 	ReadOver = 0;
     004C 1Err                      1- 1595     	BCR	_Status,4
                                    1- 1596     	.line	211, "main.c"; 	}
                                    1- 1597     	MGOTO	_00198_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
     004E                           1- 1598     _00195_DS_:
                                    1- 1599     	.line	213, "main.c"; 	else if(RemoteStart)
                                    1- 1600     	BANKSEL	_Status
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 09rr                      1- 1601     	BTRSS	_Status,3
                                    1- 1602     	MGOTO	_00198_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1603     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1604     ;;unsigned compare: left >= lit (0x20=32), size=2
                                    1- 1605     	.line	224, "main.c"; 	if((T1Counter >(OneCode_L - FaultTolerant))&&(T1Counter < (OneCode_L + FaultTolerant)))
     0051 2100                      1- 1606     	MOVIA	0x00
                                    1- 1607     	BANKSEL	_T1Counter
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 04rr                      1- 1608     	SUBAR	(_T1Counter + 1),W
     0054 0903                      1- 1609     	BTRSS	STATUS,2
                                    1- 1610     	MGOTO	_00217_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
     0056 2120                      1- 1611     	MOVIA	0x20
     0057 04rr                      1- 1612     	SUBAR	_T1Counter,W
     0058                           1- 1613     _00217_DS_:
     0058 0803                      1- 1614     	BTRSS	STATUS,0
                                    1- 1615     	MGOTO	_00189_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1616     ;;unsigned compare: left < lit (0x33=51), size=2
     005A 2100                      1- 1617     	MOVIA	0x00
                                    1- 1618     	BANKSEL	_T1Counter
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 04rr                      1- 1619     	SUBAR	(_T1Counter + 1),W
     005D 0903                      1- 1620     	BTRSS	STATUS,2
                                    1- 1621     	MGOTO	_00218_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
     005F 2133                      1- 1622     	MOVIA	0x33
     0060 04rr                      1- 1623     	SUBAR	_T1Counter,W
     0061                           1- 1624     _00218_DS_:
     0061 0C03                      1- 1625     	BTRSC	STATUS,0
                                    1- 1626     	MGOTO	_00189_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1627     	.line	227, "main.c"; 	NOP();
     0063 0000                      1- 1628     	nop
                                    1- 1629     	MGOTO	_00198_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
     0065                           1- 1630     _00189_DS_:
                                    1- 1631     	.line	232, "main.c"; 	cleanData();
                                    1- 1632     	MCALL	_cleanData
     0065 2rrr                      3-   66 m1      LCALL rom_address
     0066                           1- 1633     _00198_DS_:
                                    1- 1634     	.line	237, "main.c"; 	}
                                    1- 1635     	RETURN	
     0066 0010                      3-   40 m1      ret
                                    1- 1636     ; exit point of _proLow
                                    1- 1638     ;***
                                    1- 1639     ;  pBlock Stats: dbName = C
                                    1- 1640     ;***
                                    1- 1641     ;has an exit
                                    1- 1642     ;functions called:
                                    1- 1643     ;   _GetOneByte
                                    1- 1644     ;   _GetOneByte
                                    1- 1645     ;   _GetOneByte
                                    1- 1646     ;   _GetOneByte
                                    1- 1647     ;4 compiler assigned registers:
                                    1- 1648     ;   r0x1022
                                    1- 1649     ;   r0x1023
                                    1- 1650     ;   r0x1024
                                    1- 1651     ;   r0x1025
                                    1- 1652     ;; Starting pCode block
                                    1- 1653     .segment "code"; module=main, function=_proHight
     0000                           1- 1655     _proHight:
                                    1- 1656     ; 2 exit points
                                    1- 1657     	.line	130, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 1658     	CLRA	
     0001 002r                      1- 1659     	SFUN	_T1CR1
                                    1- 1660     	.line	131, "main.c"; 	T1Counter = accTimeH;
                                    1- 1661     	BANKSEL	_accTimeH
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 01rr                      1- 1662     	MOVR	_accTimeH,W
                                    1- 1663     	BANKSEL	_T1Counter
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 00rr                      1- 1664     	MOVAR	_T1Counter
     0006 02rr                      1- 1665     	CLRR	(_T1Counter + 1)
                                    1- 1666     	.line	132, "main.c"; 	T1Counter <<= 8;
     0007 01rr                      1- 1667     	MOVR	_T1Counter,W
     0008 00rr                      1- 1668     	MOVAR	(_T1Counter + 1)
     0009 02rr                      1- 1669     	CLRR	_T1Counter
                                    1- 1670     	.line	133, "main.c"; 	T1Counter += (0xFF - TMR1);
     000A 003r                      1- 1671     	SFUNR	_TMR1
                                    1- 1672     ;;3	MOVAR	r0x1022
                                    1- 1673     	BANKSEL	r0x1023
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1- 1674     	MOVAR	r0x1023
                                    1- 1675     	BANKSEL	r0x1024
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 1676     	CLRR	r0x1024
                                    1- 1677     	BANKSEL	r0x1023
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 1678     	MOVR	r0x1023,W
     0011 27FF                      1- 1679     	SUBIA	0xff
                                    1- 1680     	BANKSEL	r0x1022
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 00rr                      1- 1681     	MOVAR	r0x1022
     0014 2100                      1- 1682     	MOVIA	0x00
     0015 0C03                      1- 1683     	BTRSC	STATUS,0
                                    1- 1684     	MGOTO	_00005_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1685     	BANKSEL	r0x1024
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 05rr                      1- 1686     	INCR	r0x1024,W
     0019                           1- 1687     _00005_DS_:
     0019 2700                      1- 1688     	SUBIA	0x00
                                    1- 1689     	BANKSEL	r0x1024
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 00rr                      1- 1690     	MOVAR	r0x1024
                                    1- 1691     ;;1	MOVAR	r0x1025
                                    1- 1692     	BANKSEL	r0x1022
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 01rr                      1- 1693     	MOVR	r0x1022,W
                                    1- 1694     	BANKSEL	r0x1023
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1695     	MOVAR	r0x1023
                                    1- 1696     	BANKSEL	_T1Counter
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 03rr                      1- 1697     	ADDAR	_T1Counter,F
                                    1- 1698     	BANKSEL	r0x1024
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 1699     	MOVR	r0x1024,W
     0024 0C03                      1- 1700     	BTRSC	STATUS,0
     0025 05rr                      1- 1701     	INCR	r0x1024,W
     0026 0D03                      1- 1702     	BTRSC	STATUS,2
                                    1- 1703     	MGOTO	_00006_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1704     	BANKSEL	_T1Counter
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 03rr                      1- 1705     	ADDAR	(_T1Counter + 1),F
     002A                           1- 1706     _00006_DS_:
                                    1- 1707     	.line	134, "main.c"; 	accTimeH = 0;
                                    1- 1708     	BANKSEL	_accTimeH
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 02rr                      1- 1709     	CLRR	_accTimeH
                                    1- 1710     	.line	135, "main.c"; 	TMR1 = 0xFF;
     002C 21FF                      1- 1711     	MOVIA	0xff
     002D 002r                      1- 1712     	SFUN	_TMR1
                                    1- 1713     	.line	136, "main.c"; 	T1CR1 = C_TMR1_En | C_TMR1_Reload;
     002E 2103                      1- 1714     	MOVIA	0x03
     002F 002r                      1- 1715     	SFUN	_T1CR1
                                    1- 1716     	.line	137, "main.c"; 	if(MaybeRemoteStart && T1Counter > (HeadCont_H - (FaultTolerant*FaultTolerantX)) && T1Counter < (HeadCont_H + (FaultTolerant*FaultTolerantX)))
                                    1- 1717     	BANKSEL	_Status
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 09rr                      1- 1718     	BTRSS	_Status,2
                                    1- 1719     	MGOTO	_00142_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1720     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1721     ;;unsigned compare: left >= lit (0xD9=217), size=2
     0033 2100                      1- 1722     	MOVIA	0x00
                                    1- 1723     	BANKSEL	_T1Counter
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 04rr                      1- 1724     	SUBAR	(_T1Counter + 1),W
     0036 0903                      1- 1725     	BTRSS	STATUS,2
                                    1- 1726     	MGOTO	_00178_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
     0038 21D9                      1- 1727     	MOVIA	0xd9
     0039 04rr                      1- 1728     	SUBAR	_T1Counter,W
     003A                           1- 1729     _00178_DS_:
     003A 0803                      1- 1730     	BTRSS	STATUS,0
                                    1- 1731     	MGOTO	_00142_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1732     ;;unsigned compare: left < lit (0x150=336), size=2
     003C 2101                      1- 1733     	MOVIA	0x01
                                    1- 1734     	BANKSEL	_T1Counter
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 04rr                      1- 1735     	SUBAR	(_T1Counter + 1),W
     003F 0903                      1- 1736     	BTRSS	STATUS,2
                                    1- 1737     	MGOTO	_00179_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041 2150                      1- 1738     	MOVIA	0x50
     0042 04rr                      1- 1739     	SUBAR	_T1Counter,W
     0043                           1- 1740     _00179_DS_:
     0043 0C03                      1- 1741     	BTRSC	STATUS,0
                                    1- 1742     	MGOTO	_00142_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1743     	.line	139, "main.c"; 	MaybeRemoteStart = 0;       //遥控数据头
                                    1- 1744     	BANKSEL	_Status
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 1Drr                      1- 1745     	BCR	_Status,2
                                    1- 1746     	.line	140, "main.c"; 	RemoteStart = 1;
     0047 19rr                      1- 1747     	BSR	_Status,3
                                    1- 1748     	.line	141, "main.c"; 	sleepFlag = 0;
                                    1- 1749     	BANKSEL	_sleepFlag
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 02rr                      1- 1750     	CLRR	_sleepFlag
                                    1- 1751     	.line	142, "main.c"; 	bitIndex = 0;
                                    1- 1752     	BANKSEL	_bitIndex
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 02rr                      1- 1753     	CLRR	_bitIndex
                                    1- 1754     	.line	143, "main.c"; 	OneCode = 0;
                                    1- 1755     	BANKSEL	_Status
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 1Crr                      1- 1756     	BCR	_Status,1
                                    1- 1757     	.line	144, "main.c"; 	ZeroCode = 0;
     004E 1Crr                      1- 1758     	BCR	_Status,0
                                    1- 1759     	.line	145, "main.c"; 	ReadOver = 0;
     004F 1Err                      1- 1760     	BCR	_Status,4
                                    1- 1761     	MGOTO	_00146_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
     0051                           1- 1762     _00142_DS_:
                                    1- 1763     	.line	147, "main.c"; 	else if(RemoteStart)
                                    1- 1764     	BANKSEL	_Status
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 09rr                      1- 1765     	BTRSS	_Status,3
                                    1- 1766     	MGOTO	_00139_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1767     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1768     ;;unsigned compare: left >= lit (0x59=89), size=2
                                    1- 1769     	.line	149, "main.c"; 	if((T1Counter> (OneCode_H - FaultTolerant))&&(T1Counter < (OneCode_H + FaultTolerant)))
     0054 2100                      1- 1770     	MOVIA	0x00
                                    1- 1771     	BANKSEL	_T1Counter
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 04rr                      1- 1772     	SUBAR	(_T1Counter + 1),W
     0057 0903                      1- 1773     	BTRSS	STATUS,2
                                    1- 1774     	MGOTO	_00180_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
     0059 2159                      1- 1775     	MOVIA	0x59
     005A 04rr                      1- 1776     	SUBAR	_T1Counter,W
     005B                           1- 1777     _00180_DS_:
     005B 0803                      1- 1778     	BTRSS	STATUS,0
                                    1- 1779     	MGOTO	_00130_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1780     ;;unsigned compare: left < lit (0x6C=108), size=2
     005D 2100                      1- 1781     	MOVIA	0x00
                                    1- 1782     	BANKSEL	_T1Counter
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 04rr                      1- 1783     	SUBAR	(_T1Counter + 1),W
     0060 0903                      1- 1784     	BTRSS	STATUS,2
                                    1- 1785     	MGOTO	_00181_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
     0062 216C                      1- 1786     	MOVIA	0x6c
     0063 04rr                      1- 1787     	SUBAR	_T1Counter,W
     0064                           1- 1788     _00181_DS_:
     0064 0C03                      1- 1789     	BTRSC	STATUS,0
                                    1- 1790     	MGOTO	_00130_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1791     	.line	151, "main.c"; 	OneCode = 1;
                                    1- 1792     	BANKSEL	_Status
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 18rr                      1- 1793     	BSR	_Status,1
                                    1- 1794     	.line	152, "main.c"; 	ZeroCode = 0;
     0068 1Crr                      1- 1795     	BCR	_Status,0
                                    1- 1796     	MGOTO	_00131_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1797     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1798     ;;unsigned compare: left >= lit (0x17=23), size=2
     006A                           1- 1799     _00130_DS_:
                                    1- 1800     	.line	156, "main.c"; 	if((T1Counter > (Zero_H - FaultTolerant))&&(T1Counter < (Zero_H + FaultTolerant)))
     006A 2100                      1- 1801     	MOVIA	0x00
                                    1- 1802     	BANKSEL	_T1Counter
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 04rr                      1- 1803     	SUBAR	(_T1Counter + 1),W
     006D 0903                      1- 1804     	BTRSS	STATUS,2
                                    1- 1805     	MGOTO	_00182_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
     006F 2117                      1- 1806     	MOVIA	0x17
     0070 04rr                      1- 1807     	SUBAR	_T1Counter,W
     0071                           1- 1808     _00182_DS_:
     0071 0803                      1- 1809     	BTRSS	STATUS,0
                                    1- 1810     	MGOTO	_00126_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1811     ;;unsigned compare: left < lit (0x2A=42), size=2
     0073 2100                      1- 1812     	MOVIA	0x00
                                    1- 1813     	BANKSEL	_T1Counter
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 04rr                      1- 1814     	SUBAR	(_T1Counter + 1),W
     0076 0903                      1- 1815     	BTRSS	STATUS,2
                                    1- 1816     	MGOTO	_00183_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
     0078 212A                      1- 1817     	MOVIA	0x2a
     0079 04rr                      1- 1818     	SUBAR	_T1Counter,W
     007A                           1- 1819     _00183_DS_:
     007A 0C03                      1- 1820     	BTRSC	STATUS,0
                                    1- 1821     	MGOTO	_00126_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1822     	.line	158, "main.c"; 	ZeroCode = 1;
                                    1- 1823     	BANKSEL	_Status
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 18rr                      1- 1824     	BSR	_Status,0
                                    1- 1825     	.line	159, "main.c"; 	OneCode = 0;
     007E 1Crr                      1- 1826     	BCR	_Status,1
                                    1- 1827     	MGOTO	_00131_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
     0080                           1- 1828     _00126_DS_:
                                    1- 1829     	.line	163, "main.c"; 	ZeroCode = 0;
                                    1- 1830     	BANKSEL	_Status
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 1Crr                      1- 1831     	BCR	_Status,0
                                    1- 1832     	.line	164, "main.c"; 	OneCode = 0;
     0082 1Crr                      1- 1833     	BCR	_Status,1
     0083                           1- 1834     _00131_DS_:
                                    1- 1835     	.line	168, "main.c"; 	if(OneCode)
                                    1- 1836     	BANKSEL	_Status
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 08rr                      1- 1837     	BTRSS	_Status,1
                                    1- 1838     	MGOTO	_00136_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1839     	.line	171, "main.c"; 	GetOneByte(1);
     0086 2101                      1- 1840     	MOVIA	0x01
                                    1- 1841     	MCALL	_GetOneByte
     0087 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1842     	MGOTO	_00146_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
     0089                           1- 1843     _00136_DS_:
                                    1- 1844     	.line	173, "main.c"; 	else if(ZeroCode)
                                    1- 1845     	BANKSEL	_Status
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 08rr                      1- 1846     	BTRSS	_Status,0
                                    1- 1847     	MGOTO	_00146_DS_
     008B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1848     	.line	176, "main.c"; 	GetOneByte(0);
     008C 2100                      1- 1849     	MOVIA	0x00
                                    1- 1850     	MCALL	_GetOneByte
     008D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1851     	MGOTO	_00146_DS_
     008E 3rrr                      3-   63 m1      LGOTO rom_address
     008F                           1- 1852     _00139_DS_:
                                    1- 1853     	.line	181, "main.c"; 	MaybeRemoteStart = 0;       //遥控数据头
                                    1- 1854     	BANKSEL	_Status
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 1Drr                      1- 1855     	BCR	_Status,2
                                    1- 1856     	.line	182, "main.c"; 	RemoteStart = 0;
     0091 1Drr                      1- 1857     	BCR	_Status,3
                                    1- 1858     	.line	183, "main.c"; 	sleepFlag = 0;
                                    1- 1859     	BANKSEL	_sleepFlag
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 02rr                      1- 1860     	CLRR	_sleepFlag
                                    1- 1861     	.line	184, "main.c"; 	bitIndex = 0;
                                    1- 1862     	BANKSEL	_bitIndex
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 02rr                      1- 1863     	CLRR	_bitIndex
                                    1- 1864     	.line	185, "main.c"; 	OneCode = 0;
                                    1- 1865     	BANKSEL	_Status
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 1Crr                      1- 1866     	BCR	_Status,1
                                    1- 1867     	.line	186, "main.c"; 	ZeroCode = 0;
     0098 1Crr                      1- 1868     	BCR	_Status,0
                                    1- 1869     	.line	187, "main.c"; 	ReadOver = 0;
     0099 1Err                      1- 1870     	BCR	_Status,4
     009A                           1- 1871     _00146_DS_:
                                    1- 1872     	.line	192, "main.c"; 	}
                                    1- 1873     	RETURN	
     009A 0010                      3-   40 m1      ret
                                    1- 1874     ; exit point of _proHight
                                    1- 1876     ;***
                                    1- 1877     ;  pBlock Stats: dbName = C
                                    1- 1878     ;***
                                    1- 1879     ;has an exit
                                    1- 1880     ;; Starting pCode block
                                    1- 1881     .segment "code"; module=main, function=_cleanData
     0000                           1- 1883     _cleanData:
                                    1- 1884     ; 2 exit points
                                    1- 1885     	.line	118, "main.c"; 	MaybeRemoteStart = 0;       //遥控数据头
                                    1- 1886     	BANKSEL	_Status
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 1Drr                      1- 1887     	BCR	_Status,2
                                    1- 1888     	.line	119, "main.c"; 	RemoteStart = 0;
     0002 1Drr                      1- 1889     	BCR	_Status,3
                                    1- 1890     	.line	120, "main.c"; 	sleepFlag = 0;
                                    1- 1891     	BANKSEL	_sleepFlag
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 1892     	CLRR	_sleepFlag
                                    1- 1893     	.line	121, "main.c"; 	bitIndex = 0;
                                    1- 1894     	BANKSEL	_bitIndex
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1- 1895     	CLRR	_bitIndex
                                    1- 1896     	.line	122, "main.c"; 	OneCode = 0;
                                    1- 1897     	BANKSEL	_Status
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 1Crr                      1- 1898     	BCR	_Status,1
                                    1- 1899     	.line	123, "main.c"; 	ZeroCode = 0;
     0009 1Crr                      1- 1900     	BCR	_Status,0
                                    1- 1901     	.line	124, "main.c"; 	ReadOver = 0;
     000A 1Err                      1- 1902     	BCR	_Status,4
                                    1- 1903     	.line	125, "main.c"; 	}
                                    1- 1904     	RETURN	
     000B 0010                      3-   40 m1      ret
                                    1- 1905     ; exit point of _cleanData
                                    1- 1908     ;	code size estimation:
                                    1- 1909     ;	  760+  209 =   969 instructions ( 2356 byte)
                                    1- 1911     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000C
__PROCESSOR__           Constant 00800533
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8a053d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A053D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000003FF
DATA ROM     = 0x00000000 - 0x000003FF
RESERVED MEM = 0x00000400 - 0x00000410
SRAM / SFR   = 0x00000000 - 0x00000000
