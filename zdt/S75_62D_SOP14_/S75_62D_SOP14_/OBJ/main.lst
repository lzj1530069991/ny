
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_fgCtr
                                    1-   18     	extern	_LedCtr2
                                    1-   19     	extern	_checkInAD
                                    1-   20     	extern	_F_AIN3_Convert
                                    1-   21     	extern	_PORTAbits
                                    1-   22     	extern	_PORTBbits
                                    1-   23     	extern	_PCONbits
                                    1-   24     	extern	_BWUCONbits
                                    1-   25     	extern	_ABPLCONbits
                                    1-   26     	extern	_BPHCONbits
                                    1-   27     	extern	_INTEbits
                                    1-   28     	extern	_INTFbits
                                    1-   29     	extern	_ADMDbits
                                    1-   30     	extern	_ADRbits
                                    1-   31     	extern	_ADVREFHbits
                                    1-   32     	extern	_ADCRbits
                                    1-   33     	extern	_AWUCONbits
                                    1-   34     	extern	_PACONbits
                                    1-   35     	extern	_INTEDGbits
                                    1-   36     	extern	_ANAENbits
                                    1-   37     	extern	_RFCbits
                                    1-   38     	extern	_INTE2bits
                                    1-   39     	extern	_INDF
                                    1-   40     	extern	_TMR0
                                    1-   41     	extern	_PCL
                                    1-   42     	extern	_STATUS
                                    1-   43     	extern	_FSR
                                    1-   44     	extern	_PORTA
                                    1-   45     	extern	_PORTB
                                    1-   46     	extern	_PCON
                                    1-   47     	extern	_BWUCON
                                    1-   48     	extern	_PCHBUF
                                    1-   49     	extern	_ABPLCON
                                    1-   50     	extern	_BPHCON
                                    1-   51     	extern	_INTE
                                    1-   52     	extern	_INTF
                                    1-   53     	extern	_ADMD
                                    1-   54     	extern	_ADR
                                    1-   55     	extern	_ADD
                                    1-   56     	extern	_ADVREFH
                                    1-   57     	extern	_ADCR
                                    1-   58     	extern	_AWUCON
                                    1-   59     	extern	_PACON
                                    1-   60     	extern	_INTEDG
                                    1-   61     	extern	_TMRH
                                    1-   62     	extern	_ANAEN
                                    1-   63     	extern	_RFC
                                    1-   64     	extern	_TM3RH
                                    1-   65     	extern	_INTE2
                                    1-   66     	extern	_TMR1
                                    1-   67     	extern	_T1CR1
                                    1-   68     	extern	_T1CR2
                                    1-   69     	extern	_PWM1DUTY
                                    1-   70     	extern	_PS1CV
                                    1-   71     	extern	_BZ1CR
                                    1-   72     	extern	_IRCR
                                    1-   73     	extern	_TBHP
                                    1-   74     	extern	_TBHD
                                    1-   75     	extern	_TMR2
                                    1-   76     	extern	_T2CR1
                                    1-   77     	extern	_T2CR2
                                    1-   78     	extern	_PWM2DUTY
                                    1-   79     	extern	_PS2CV
                                    1-   80     	extern	_BZ2CR
                                    1-   81     	extern	_OSCCR
                                    1-   82     	extern	_TMR3
                                    1-   83     	extern	_T3CR1
                                    1-   84     	extern	_T3CR2
                                    1-   85     	extern	_PWM3DUTY
                                    1-   86     	extern	_PS3CV
                                    1-   87     	extern	_BZ3CR
                                    1-   88     	extern	_IOSTA
                                    1-   89     	extern	_IOSTB
                                    1-   90     	extern	_APHCON
                                    1-   91     	extern	_PS0CV
                                    1-   92     	extern	_BODCON
                                    1-   93     	extern	_CMPCR
                                    1-   94     	extern	_PCON1
                                    1-   95     	extern	_T0MD
                                    1-   96     	extern	___sdcc_saved_fsr
                                    1-   97     	extern	___sdcc_saved_stk00
                                    1-   98     	extern	___sdcc_saved_stk01
                                    1-   99     	extern	__nyc_ny8_startup
                                    1-  100     ;--------------------------------------------------------
                                    1-  101     ; global declarations
                                    1-  102     ;--------------------------------------------------------
                                    1-  103     	extern	_F_wait_eoc
                                    1-  104     	extern	_F_AIN2_Convert
                                    1-  105     	extern	_F_AIN4_Convert
                                    1-  106     	extern	_checkOutA
                                    1-  107     	extern	_checkBatAD
                                    1-  108     	extern	_initAD
                                    1-  109     	extern	_delay
                                    1-  110     	extern	_chrgCtr
                                    1-  111     	extern	_keyRead2
                                    1-  112     	extern	_keyRead
                                    1-  113     	extern	_gotoSleep
                                    1-  114     	extern	_pwmStop
                                    1-  115     	extern	_pwmInit
                                    1-  116     	extern	_LED6ON
                                    1-  117     	extern	_LED5ON
                                    1-  118     	extern	_LED4ON
                                    1-  119     	extern	_LED3ON
                                    1-  120     	extern	_LED2ON
                                    1-  121     	extern	_LED1ON
                                    1-  122     	extern	_LedInput
                                    1-  123     	extern	_ledShow
                                    1-  124     	extern	_initSys
                                    1-  125     	extern	_powerOff
                                    1-  126     	extern	_keyCtr
                                    1-  127     	extern	_isr
                                    1-  128     	extern	_main
                                    1-  129     	extern	_Status
                                    1-  130     	extern	_duty
                                    1-  131     	extern	_intCount
                                    1-  132     	extern	_count500ms
                                    1-  133     	extern	_keyCount
                                    1-  134     	extern	_workStep
                                    1-  135     	extern	_ledStep
                                    1-  136     	extern	_preFG
                                    1-  137     	extern	_maxDuty
                                    1-  138     	extern	_pwStep
                                    1-  139     	extern	_R_AIN4_DATA
                                    1-  140     	extern	_R_AIN4_DATA_LB
                                    1-  141     	extern	_R_AIN2_DATA
                                    1-  142     	extern	_R_AIN2_DATA_LB
                                    1-  143     	extern	_chrgTime
                                    1-  144     	extern	_startStep
                                    1-  145     	extern	_sleepTime
                                    1-  146     	extern	_count200ms
                                    1-  147     	extern	_count1s
                                    1-  148     	extern	_count900s
                                    1-  149     	extern	_lowBatTime
                                    1-  150     	extern	_ledTime
                                    1-  151     	extern	_overCount
                                    1-  152     	extern	_chrgCount
                                    1-  153     	extern	_ledLightTime
                                    1-  154     	extern	_currentDuty
                                    1-  155     	extern	_fullCount
                                    1-  156     	extern	_shanshuoTime
                                    1-  157     	extern	_firstTime
                                    1-  158     	extern	_tempDuty
                                    1-  159     	extern	_lowCount
                                    1-  160     	extern	_cDuty
                                    1-  161     	extern	_tempLedStep
                                    1-  162     	extern	_count5S
                                    1-  163     	extern	_ledDeadTime
                                    1-  164     	extern	_lockLedStep
                                    1-  165     	extern	_closeCount
                                    1-  166     	extern	_chrgStep
                                    1-  167     	extern	_prePwStep
                                    1-  168     	extern	_chrgduty
                                    1-  169     	extern	_maxduty
                                    1-  170     	extern	_count50ms
                                    1-  171     	extern	_chrgFullFlag
                                    1-  172     	extern	_lockLedTime
                                    1-  173     	extern	_keyCount2
                                    1-  174     	extern	_debug
                                    1-  176     	extern PSAVE
                                    1-  177     	extern SSAVE
                                    1-  178     	extern WSAVE
                                    1-  179     	extern STK04
                                    1-  180     	extern STK03
                                    1-  181     	extern STK02
                                    1-  182     	extern STK01
                                    1-  183     	extern STK00
                                    1-  185     .segment "uninit", 0x20000040
 20000040                           1-  186     PSAVE:
                                    1-  187     	.res 1
 20000041                           1-  188     SSAVE:
                                    1-  189     	.res 1
 20000042                           1-  190     WSAVE:
                                    1-  191     	.res 1
 20000043                           1-  192     STK04:
                                    1-  193     	.res 1
 20000044                           1-  194     STK03:
                                    1-  195     	.res 1
 20000045                           1-  196     STK02:
                                    1-  197     	.res 1
 20000046                           1-  198     STK01:
                                    1-  199     	.res 1
 20000047                           1-  200     STK00:
                                    1-  201     	.res 1
                                    1-  203     ;--------------------------------------------------------
                                    1-  204     ; global definitions
                                    1-  205     ;--------------------------------------------------------
                                    1-  206     .segment "uninit"
     0000                           1-  207     _R_AIN4_DATA:
                                    1-  208     	.res	2
                                    1-  211     .segment "uninit"
     0000                           1-  212     _R_AIN4_DATA_LB:
                                    1-  213     	.res	1
                                    1-  216     .segment "uninit"
     0000                           1-  217     _R_AIN2_DATA:
                                    1-  218     	.res	2
                                    1-  221     .segment "uninit"
     0000                           1-  222     _R_AIN2_DATA_LB:
                                    1-  223     	.res	1
                                    1-  226     ;--------------------------------------------------------
                                    1-  227     ; absolute symbol definitions
                                    1-  228     ;--------------------------------------------------------
                                    1-  229     ;--------------------------------------------------------
                                    1-  230     ; compiler-defined variables
                                    1-  231     ;--------------------------------------------------------
                                    1-  232     .segment "uninit"
     0000                           1-  233     r0x1057:
                                    1-  234     	.res	1
                                    1-  235     .segment "uninit"
     0000                           1-  236     r0x104F:
                                    1-  237     	.res	1
                                    1-  238     .segment "uninit"
     0000                           1-  239     r0x1056:
                                    1-  240     	.res	1
                                    1-  241     .segment "uninit"
     0000                           1-  242     r0x1055:
                                    1-  243     	.res	1
                                    1-  244     .segment "uninit"
     0000                           1-  245     r0x1054:
                                    1-  246     	.res	1
                                    1-  247     .segment "uninit"
     0000                           1-  248     r0x1053:
                                    1-  249     	.res	1
                                    1-  250     .segment "uninit"
     0000                           1-  251     r0x1052:
                                    1-  252     	.res	1
                                    1-  253     .segment "uninit"
     0000                           1-  254     r0x1051:
                                    1-  255     	.res	1
                                    1-  256     .segment "uninit"
     0000                           1-  257     r0x1050:
                                    1-  258     	.res	1
                                    1-  259     .segment "uninit"
     0000                           1-  260     r0x104E:
                                    1-  261     	.res	1
                                    1-  262     .segment "uninit"
     0000                           1-  263     r0x104D:
                                    1-  264     	.res	1
                                    1-  265     .segment "uninit"
     0000                           1-  266     r0x1048:
                                    1-  267     	.res	1
                                    1-  268     .segment "uninit"
     0000                           1-  269     r0x1049:
                                    1-  270     	.res	1
                                    1-  271     .segment "uninit"
     0000                           1-  272     r0x104A:
                                    1-  273     	.res	1
                                    1-  274     .segment "uninit"
     0000                           1-  275     r0x104C:
                                    1-  276     	.res	1
                                    1-  277     .segment "uninit"
     0000                           1-  278     r0x1032:
                                    1-  279     	.res	1
                                    1-  280     .segment "uninit"
     0000                           1-  281     r0x1033:
                                    1-  282     	.res	1
                                    1-  283     .segment "uninit"
     0000                           1-  284     r0x1046:
                                    1-  285     	.res	1
                                    1-  286     .segment "uninit"
     0000                           1-  287     r0x1047:
                                    1-  288     	.res	1
                                    1-  289     .segment "uninit"
     0000                           1-  290     r0x1042:
                                    1-  291     	.res	1
                                    1-  292     .segment "uninit"
     0000                           1-  293     r0x1043:
                                    1-  294     	.res	1
                                    1-  295     .segment "uninit"
     0000                           1-  296     r0x103A:
                                    1-  297     	.res	1
                                    1-  298     .segment "uninit"
     0000                           1-  299     r0x103B:
                                    1-  300     	.res	1
                                    1-  301     .segment "uninit"
     0000                           1-  302     r0x103C:
                                    1-  303     	.res	1
                                    1-  304     .segment "uninit"
     0000                           1-  305     r0x103F:
                                    1-  306     	.res	1
                                    1-  307     .segment "uninit"
     0000                           1-  308     r0x1034:
                                    1-  309     	.res	1
                                    1-  310     .segment "uninit"
     0000                           1-  311     r0x1035:
                                    1-  312     	.res	1
                                    1-  313     .segment "uninit"
     0000                           1-  314     r0x1036:
                                    1-  315     	.res	1
                                    1-  316     .segment "uninit"
     0000                           1-  317     r0x1039:
                                    1-  318     	.res	1
                                    1-  319     ;--------------------------------------------------------
                                    1-  320     ; initialized data
                                    1-  321     ;--------------------------------------------------------
                                    1-  323     .segment "idata"
     0000                           1-  324     _Status:
     0000 0000                      1-  325     	dw	0x00
                                    1-  329     .segment "idata"
     0000                           1-  330     _duty:
     0000 0000 0000                 1-  331     	dw	0x00, 0x00
                                    1-  335     .segment "idata"
     0000                           1-  336     _intCount:
     0000 0000                      1-  337     	dw	0x00
                                    1-  341     .segment "idata"
     0000                           1-  342     _count500ms:
     0000 0000                      1-  343     	dw	0x00
                                    1-  347     .segment "idata"
     0000                           1-  348     _keyCount:
     0000 0000                      1-  349     	dw	0x00
                                    1-  353     .segment "idata"
     0000                           1-  354     _workStep:
     0000 0000                      1-  355     	dw	0x00
                                    1-  359     .segment "idata"
     0000                           1-  360     _ledStep:
     0000 0000                      1-  361     	dw	0x00
                                    1-  365     .segment "idata"
     0000                           1-  366     _preFG:
     0000 0000                      1-  367     	dw	0x00
                                    1-  371     .segment "idata"
     0000                           1-  372     _maxDuty:
     0000 0000                      1-  373     	dw	0x00
                                    1-  377     .segment "idata"
     0000                           1-  378     _pwStep:
     0000 0000                      1-  379     	dw	0x00
                                    1-  383     .segment "idata"
     0000                           1-  384     _chrgTime:
     0000 0000 0000                 1-  385     	dw	0x00, 0x00
                                    1-  389     .segment "idata"
     0000                           1-  390     _startStep:
     0000 0000                      1-  391     	dw	0x00
                                    1-  395     .segment "idata"
     0000                           1-  396     _sleepTime:
     0000 0000 0000                 1-  397     	dw	0x00, 0x00
                                    1-  401     .segment "idata"
     0000                           1-  402     _count200ms:
     0000 0000                      1-  403     	dw	0x00
                                    1-  407     .segment "idata"
     0000                           1-  408     _count1s:
     0000 0000                      1-  409     	dw	0x00
                                    1-  413     .segment "idata"
     0000                           1-  414     _count900s:
     0000 0000 0000                 1-  415     	dw	0x00, 0x00
                                    1-  419     .segment "idata"
     0000                           1-  420     _lowBatTime:
     0000 0000                      1-  421     	dw	0x00
                                    1-  425     .segment "idata"
     0000                           1-  426     _ledTime:
     0000 0000                      1-  427     	dw	0x00
                                    1-  431     .segment "idata"
     0000                           1-  432     _overCount:
     0000 0000                      1-  433     	dw	0x00
                                    1-  437     .segment "idata"
     0000                           1-  438     _chrgCount:
     0000 0000                      1-  439     	dw	0x00
                                    1-  443     .segment "idata"
     0000                           1-  444     _ledLightTime:
     0000 0000                      1-  445     	dw	0x00
                                    1-  449     .segment "idata"
     0000                           1-  450     _currentDuty:
     0000 0000                      1-  451     	dw	0x00
                                    1-  455     .segment "idata"
     0000                           1-  456     _fullCount:
     0000 0000 0000                 1-  457     	dw	0x00, 0x00
                                    1-  461     .segment "idata"
     0000                           1-  462     _shanshuoTime:
     0000 0000                      1-  463     	dw	0x00
                                    1-  467     .segment "idata"
     0000                           1-  468     _firstTime:
     0000 0000                      1-  469     	dw	0x00
                                    1-  473     .segment "idata"
     0000                           1-  474     _tempDuty:
     0000 0000                      1-  475     	dw	0x00
                                    1-  479     .segment "idata"
     0000                           1-  480     _lowCount:
     0000 0000                      1-  481     	dw	0x00
                                    1-  485     .segment "idata"
     0000                           1-  486     _cDuty:
     0000 0000                      1-  487     	dw	0x00
                                    1-  491     .segment "idata"
     0000                           1-  492     _tempLedStep:
     0000 0000                      1-  493     	dw	0x00
                                    1-  497     .segment "idata"
     0000                           1-  498     _count5S:
     0000 0000 0000                 1-  499     	dw	0x00, 0x00
                                    1-  503     .segment "idata"
     0000                           1-  504     _ledDeadTime:
     0000 0000                      1-  505     	dw	0x00
                                    1-  509     .segment "idata"
     0000                           1-  510     _lockLedStep:
     0000 0000                      1-  511     	dw	0x00
                                    1-  515     .segment "idata"
     0000                           1-  516     _closeCount:
     0000 0000 0000                 1-  517     	dw	0x00, 0x00
                                    1-  521     .segment "idata"
     0000                           1-  522     _chrgStep:
     0000 0000                      1-  523     	dw	0x00
                                    1-  527     .segment "idata"
     0000                           1-  528     _prePwStep:
     0000 0000                      1-  529     	dw	0x00
                                    1-  533     .segment "idata"
     0000                           1-  534     _chrgduty:
     0000 0000                      1-  535     	dw	0x00
                                    1-  539     .segment "idata"
     0000                           1-  540     _maxduty:
     0000 0000                      1-  541     	dw	0x00
                                    1-  545     .segment "idata"
     0000                           1-  546     _count50ms:
     0000 0000                      1-  547     	dw	0x00
                                    1-  551     .segment "idata"
     0000                           1-  552     _chrgFullFlag:
     0000 0000                      1-  553     	dw	0x00
                                    1-  557     .segment "idata"
     0000                           1-  558     _lockLedTime:
     0000 0000                      1-  559     	dw	0x00
                                    1-  563     .segment "idata"
     0000                           1-  564     _keyCount2:
     0000 0000                      1-  565     	dw	0x00
                                    1-  569     .segment "idata"
     0000                           1-  570     _debug:
     0000 0000                      1-  571     	dw	0x00
                                    1-  574     ;--------------------------------------------------------
                                    1-  575     ; overlayable items in internal ram 
                                    1-  576     ;--------------------------------------------------------
                                    1-  577     ;	udata_ovr
                                    1-  578     ;--------------------------------------------------------
                                    1-  579     ; reset vector 
                                    1-  580     ;--------------------------------------------------------
                                    1-  581     ORG	0x0000
     0000 3rrr                      1-  582     	LGOTO	__nyc_ny8_startup
                                    1-  583     ;--------------------------------------------------------
                                    1-  584     ; interrupt and initialization code
                                    1-  585     ;--------------------------------------------------------
                                    1-  586     ORG 0x0008
                                    1-  587     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  589     .segment "code"
     0000                           1-  590     __sdcc_interrupt:
                                    1-  591     ;***
                                    1-  592     ;  pBlock Stats: dbName = I
                                    1-  593     ;***
                                    1-  594     ;2 compiler assigned registers:
                                    1-  595     ;   STK00
                                    1-  596     ;   STK01
                                    1-  597     ;; Starting pCode block
     0000                           1-  598     _isr:
                                    1-  599     ; 0 exit points
                                    1-  600     	.line	118, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  601     	MOVAR	WSAVE
     0001 1503                      1-  602     	SWAPR	STATUS,W
     0002 0283                      1-  603     	CLRR	STATUS
     0003 00rr                      1-  604     	MOVAR	SSAVE
     0004 010A                      1-  605     	MOVR	PCHBUF,W
     0005 028A                      1-  606     	CLRR	PCHBUF
     0006 00rr                      1-  607     	MOVAR	PSAVE
     0007 0104                      1-  608     	MOVR	FSR,W
                                    1-  609     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  610     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  611     	MOVR	STK00,W
                                    1-  612     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  613     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  614     	MOVR	STK01,W
                                    1-  615     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  616     	MOVAR	___sdcc_saved_stk01
                                    1-  617     	.line	120, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  618     	BTRSS	_INTFbits,0
                                    1-  619     	MGOTO	_00126_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  620     	.line	122, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  621     	MOVIA	0x37
     0013 03rr                      1-  622     	ADDAR	_TMR0,F
                                    1-  623     	.line	124, "main.c"; 	if(++intCount >= 100)
                                    1-  624     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  625     	INCR	_intCount,F
                                    1-  626     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  627     	MOVIA	0x64
     0017 04rr                      1-  628     	SUBAR	_intCount,W
     0018 0803                      1-  629     	BTRSS	STATUS,0
                                    1-  630     	MGOTO	_00126_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  631     	.line	126, "main.c"; 	IntFlag = 1;
                                    1-  632     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  633     	BSR	_Status,0
                                    1-  634     	.line	127, "main.c"; 	intCount = 0;
                                    1-  635     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  636     	CLRR	_intCount
                                    1-  637     	.line	128, "main.c"; 	if(++count500ms >= 40)
                                    1-  638     	BANKSEL	_count500ms
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 05rr                      1-  639     	INCR	_count500ms,F
                                    1-  640     ;;unsigned compare: left < lit (0x28=40), size=1
     0020 2128                      1-  641     	MOVIA	0x28
     0021 04rr                      1-  642     	SUBAR	_count500ms,W
     0022 0C03                      1-  643     	BTRSC	STATUS,0
                                    1-  644     	.line	129, "main.c"; 	count500ms = 0;
     0023 02rr                      1-  645     	CLRR	_count500ms
                                    1-  646     	.line	130, "main.c"; 	if(++count200ms >= 20)
                                    1-  647     	BANKSEL	_count200ms
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 05rr                      1-  648     	INCR	_count200ms,F
     0026 2114                      1-  649     	MOVIA	0x14
     0027 04rr                      1-  650     	SUBAR	_count200ms,W
     0028 0803                      1-  651     	BTRSS	STATUS,0
                                    1-  652     	MGOTO	_00110_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  653     	.line	132, "main.c"; 	count200ms = 0;
     002A 02rr                      1-  654     	CLRR	_count200ms
                                    1-  655     	.line	133, "main.c"; 	if(ledDeadTime > 0)
                                    1-  656     	BANKSEL	_ledDeadTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1-  657     	MOVR	_ledDeadTime,W
     002D 0903                      1-  658     	BTRSS	STATUS,2
                                    1-  659     	.line	134, "main.c"; 	--ledDeadTime;
     002E 06rr                      1-  660     	DECR	_ledDeadTime,F
     002F                           1-  661     _00110_DS_:
                                    1-  662     	.line	136, "main.c"; 	if(++count1s >= 100)
                                    1-  663     	BANKSEL	_count1s
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 05rr                      1-  664     	INCR	_count1s,F
     0031 2164                      1-  665     	MOVIA	0x64
     0032 04rr                      1-  666     	SUBAR	_count1s,W
     0033 0803                      1-  667     	BTRSS	STATUS,0
                                    1-  668     	MGOTO	_00126_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  669     	.line	138, "main.c"; 	count1s = 0;
     0035 02rr                      1-  670     	CLRR	_count1s
                                    1-  671     	.line	139, "main.c"; 	if(chrgFlag == 1 && pwStep == 6)
                                    1-  672     	BANKSEL	_Status
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 09rr                      1-  673     	BTRSS	_Status,3
                                    1-  674     	MGOTO	_00112_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  675     	BANKSEL	_pwStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1-  676     	MOVR	_pwStep,W
     003B 2406                      1-  677     	XORIA	0x06
     003C 0903                      1-  678     	BTRSS	STATUS,2
                                    1-  679     	MGOTO	_00112_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  680     	.line	141, "main.c"; 	++chrgTime;
                                    1-  681     	BANKSEL	_chrgTime
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 05rr                      1-  682     	INCR	_chrgTime,F
     0040 0D03                      1-  683     	BTRSC	STATUS,2
     0041 05rr                      1-  684     	INCR	(_chrgTime + 1),F
     0042                           1-  685     _00112_DS_:
                                    1-  686     	.line	144, "main.c"; 	if(ledLightTime > 0)
                                    1-  687     	BANKSEL	_ledLightTime
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1-  688     	MOVR	_ledLightTime,W
     0044 0903                      1-  689     	BTRSS	STATUS,2
                                    1-  690     	.line	145, "main.c"; 	--ledLightTime;
     0045 06rr                      1-  691     	DECR	_ledLightTime,F
                                    1-  692     	.line	146, "main.c"; 	if(shanshuoTime > 0)
                                    1-  693     	BANKSEL	_shanshuoTime
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 01rr                      1-  694     	MOVR	_shanshuoTime,W
     0048 0903                      1-  695     	BTRSS	STATUS,2
                                    1-  696     	.line	147, "main.c"; 	--shanshuoTime;
     0049 06rr                      1-  697     	DECR	_shanshuoTime,F
                                    1-  698     	.line	148, "main.c"; 	if(workStep)
                                    1-  699     	BANKSEL	_workStep
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1-  700     	MOVR	_workStep,W
     004C 0D03                      1-  701     	BTRSC	STATUS,2
                                    1-  702     	MGOTO	_00119_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  703     	.line	150, "main.c"; 	++count900s;
                                    1-  704     	BANKSEL	_count900s
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 05rr                      1-  705     	INCR	_count900s,F
     0050 0D03                      1-  706     	BTRSC	STATUS,2
     0051 05rr                      1-  707     	INCR	(_count900s + 1),F
                                    1-  708     	MGOTO	_00126_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
     0053                           1-  709     _00119_DS_:
                                    1-  710     	.line	154, "main.c"; 	count900s = 0;
                                    1-  711     	BANKSEL	_count900s
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 02rr                      1-  712     	CLRR	_count900s
     0055 02rr                      1-  713     	CLRR	(_count900s + 1)
     0056                           1-  714     _00126_DS_:
                                    1-  715     	.line	163, "main.c"; 	if(INTFbits.PABIF)
     0056 08rr                      1-  716     	BTRSS	_INTFbits,1
                                    1-  717     	MGOTO	_00128_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  718     	.line	165, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0058 21FD                      1-  719     	MOVIA	0xfd
     0059 00rr                      1-  720     	MOVAR	_INTF
     005A                           1-  721     _00128_DS_:
                                    1-  722     	.line	168, "main.c"; 	INTF = 0;
     005A 02rr                      1-  723     	CLRR	_INTF
                                    1-  724     	.line	170, "main.c"; 	}
                                    1-  725     	BANKSEL	___sdcc_saved_stk01
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 01rr                      1-  726     	MOVR	___sdcc_saved_stk01,W
     005D 00rr                      1-  727     	MOVAR	STK01
                                    1-  728     	BANKSEL	___sdcc_saved_stk00
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 01rr                      1-  729     	MOVR	___sdcc_saved_stk00,W
     0060 00rr                      1-  730     	MOVAR	STK00
                                    1-  731     	BANKSEL	___sdcc_saved_fsr
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1-  732     	MOVR	___sdcc_saved_fsr,W
     0063 0084                      1-  733     	MOVAR	FSR
     0064 01rr                      1-  734     	MOVR	PSAVE,W
     0065 008A                      1-  735     	MOVAR	PCHBUF
     0066 0283                      1-  736     	CLRR	STATUS
     0067 15rr                      1-  737     	SWAPR	SSAVE,W
     0068 0083                      1-  738     	MOVAR	STATUS
     0069 15rr                      1-  739     	SWAPR	WSAVE,F
     006A 15rr                      1-  740     	SWAPR	WSAVE,W
     006B                           1-  741     END_OF_INTERRUPT:
     006B 0011                      1-  742     	RETIE	
                                    1-  744     ;--------------------------------------------------------
                                    1-  745     ; code
                                    1-  746     ;--------------------------------------------------------
                                    1-  747     ;***
                                    1-  748     ;  pBlock Stats: dbName = M
                                    1-  749     ;***
                                    1-  750     ;has an exit
                                    1-  751     ;functions called:
                                    1-  752     ;   _initSys
                                    1-  753     ;   _initAD
                                    1-  754     ;   _ledShow
                                    1-  755     ;   _pwmStop
                                    1-  756     ;   _powerOff
                                    1-  757     ;   _keyCtr
                                    1-  758     ;   _checkBatAD
                                    1-  759     ;   _checkOutA
                                    1-  760     ;   _chrgCtr
                                    1-  761     ;   _gotoSleep
                                    1-  762     ;   _powerOff
                                    1-  763     ;   _initSys
                                    1-  764     ;   _initAD
                                    1-  765     ;   _ledShow
                                    1-  766     ;   _pwmStop
                                    1-  767     ;   _powerOff
                                    1-  768     ;   _keyCtr
                                    1-  769     ;   _checkBatAD
                                    1-  770     ;   _checkOutA
                                    1-  771     ;   _chrgCtr
                                    1-  772     ;   _gotoSleep
                                    1-  773     ;   _powerOff
                                    1-  774     ;; Starting pCode block
                                    1-  775     .segment "code"; module=main, function=_main
     0000                           1-  777     _main:
                                    1-  778     ; 2 exit points
                                    1-  779     	.line	174, "main.c"; 	initSys();
                                    1-  780     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  781     	.line	175, "main.c"; 	initAD();
                                    1-  782     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  783     _00180_DS_:
                                    1-  784     	.line	178, "main.c"; 	CLRWDT();
     0002 0002                      1-  785     	clrwdt
                                    1-  786     	.line	179, "main.c"; 	ledShow();
                                    1-  787     	MCALL	_ledShow
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  788     	.line	180, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  789     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  790     	MOVR	_workStep,W
     0006 0D03                      1-  791     	BTRSC	STATUS,2
                                    1-  792     	MGOTO	_00142_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  793     	BANKSEL	_currentDuty
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 01rr                      1-  794     	MOVR	_currentDuty,W
                                    1-  795     	BANKSEL	_maxDuty
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 04rr                      1-  796     	SUBAR	_maxDuty,W
     000C 0C03                      1-  797     	BTRSC	STATUS,0
                                    1-  798     	MGOTO	_00142_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  799     	.line	182, "main.c"; 	currentDuty = currentDuty - 1;
                                    1-  800     	BANKSEL	_currentDuty
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 06rr                      1-  801     	DECR	_currentDuty,F
                                    1-  802     	.line	183, "main.c"; 	PWM2DUTY = currentDuty;
     0010 01rr                      1-  803     	MOVR	_currentDuty,W
     0011 00rr                      1-  804     	SFUN	_PWM2DUTY
                                    1-  805     	.line	184, "main.c"; 	cDuty = currentDuty;
     0012 01rr                      1-  806     	MOVR	_currentDuty,W
                                    1-  807     	BANKSEL	_cDuty
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 00rr                      1-  808     	MOVAR	_cDuty
                                    1-  809     	MGOTO	_00143_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
     0016                           1-  810     _00142_DS_:
                                    1-  811     	.line	186, "main.c"; 	else if(workStep > 0 && tempDuty >= 45)
                                    1-  812     	BANKSEL	_workStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1-  813     	MOVR	_workStep,W
     0018 0D03                      1-  814     	BTRSC	STATUS,2
                                    1-  815     	MGOTO	_00143_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  816     ;;unsigned compare: left < lit (0x2D=45), size=1
     001A 212D                      1-  817     	MOVIA	0x2d
                                    1-  818     	BANKSEL	_tempDuty
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 04rr                      1-  819     	SUBAR	_tempDuty,W
     001D 0803                      1-  820     	BTRSS	STATUS,0
                                    1-  821     	MGOTO	_00143_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  822     	.line	188, "main.c"; 	if(cDuty > tempDuty)
                                    1-  823     	BANKSEL	_cDuty
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 01rr                      1-  824     	MOVR	_cDuty,W
                                    1-  825     	BANKSEL	_tempDuty
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 04rr                      1-  826     	SUBAR	_tempDuty,W
     0023 0C03                      1-  827     	BTRSC	STATUS,0
                                    1-  828     	MGOTO	_00136_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  829     	.line	190, "main.c"; 	cDuty--;
                                    1-  830     	BANKSEL	_cDuty
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 06rr                      1-  831     	DECR	_cDuty,F
                                    1-  832     	.line	191, "main.c"; 	PWM2DUTY = cDuty;
     0027 01rr                      1-  833     	MOVR	_cDuty,W
     0028 00rr                      1-  834     	SFUN	_PWM2DUTY
                                    1-  835     	MGOTO	_00143_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
     002A                           1-  836     _00136_DS_:
                                    1-  837     	.line	193, "main.c"; 	else if(cDuty < tempDuty)
                                    1-  838     	BANKSEL	_tempDuty
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1-  839     	MOVR	_tempDuty,W
                                    1-  840     	BANKSEL	_cDuty
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 04rr                      1-  841     	SUBAR	_cDuty,W
     002E 0C03                      1-  842     	BTRSC	STATUS,0
                                    1-  843     	MGOTO	_00143_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  844     	.line	195, "main.c"; 	cDuty++;
     0030 05rr                      1-  845     	INCR	_cDuty,F
                                    1-  846     	.line	196, "main.c"; 	PWM2DUTY = cDuty;
     0031 01rr                      1-  847     	MOVR	_cDuty,W
     0032 00rr                      1-  848     	SFUN	_PWM2DUTY
     0033                           1-  849     _00143_DS_:
                                    1-  850     	.line	200, "main.c"; 	if(!IntFlag)
                                    1-  851     	BANKSEL	_Status
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 08rr                      1-  852     	BTRSS	_Status,0
                                    1-  853     	MGOTO	_00180_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  854     	.line	202, "main.c"; 	IntFlag = 0;
     0036 1Crr                      1-  855     	BCR	_Status,0
                                    1-  856     	.line	204, "main.c"; 	if(shanshuoTime == 0 && pwStep == 0 && workStep > 0)
                                    1-  857     	BANKSEL	_shanshuoTime
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 01rr                      1-  858     	MOVR	_shanshuoTime,W
     0039 0903                      1-  859     	BTRSS	STATUS,2
                                    1-  860     	MGOTO	_00150_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  861     	BANKSEL	_pwStep
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 01rr                      1-  862     	MOVR	_pwStep,W
     003D 0903                      1-  863     	BTRSS	STATUS,2
                                    1-  864     	MGOTO	_00150_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  865     	BANKSEL	_workStep
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 01rr                      1-  866     	MOVR	_workStep,W
     0041 0D03                      1-  867     	BTRSC	STATUS,2
                                    1-  868     	MGOTO	_00150_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  869     	.line	206, "main.c"; 	if(++closeCount >= 1000)
                                    1-  870     	BANKSEL	_closeCount
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 05rr                      1-  871     	INCR	_closeCount,F
     0045 0D03                      1-  872     	BTRSC	STATUS,2
     0046 05rr                      1-  873     	INCR	(_closeCount + 1),F
                                    1-  874     ;;unsigned compare: left < lit (0x3E8=1000), size=2
     0047 2103                      1-  875     	MOVIA	0x03
     0048 04rr                      1-  876     	SUBAR	(_closeCount + 1),W
     0049 0903                      1-  877     	BTRSS	STATUS,2
                                    1-  878     	MGOTO	_00269_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
     004B 21E8                      1-  879     	MOVIA	0xe8
     004C 04rr                      1-  880     	SUBAR	_closeCount,W
     004D                           1-  881     _00269_DS_:
     004D 0803                      1-  882     	BTRSS	STATUS,0
                                    1-  883     	MGOTO	_00151_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  884     	.line	208, "main.c"; 	closeCount = 0;
                                    1-  885     	BANKSEL	_closeCount
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 02rr                      1-  886     	CLRR	_closeCount
     0051 02rr                      1-  887     	CLRR	(_closeCount + 1)
                                    1-  888     	.line	209, "main.c"; 	workStep = 0;
                                    1-  889     	BANKSEL	_workStep
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 02rr                      1-  890     	CLRR	_workStep
                                    1-  891     	.line	210, "main.c"; 	ledStep = 0;
                                    1-  892     	BANKSEL	_ledStep
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 02rr                      1-  893     	CLRR	_ledStep
                                    1-  894     	.line	211, "main.c"; 	pwmStop();
                                    1-  895     	MCALL	_pwmStop
     0056 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  896     	MGOTO	_00151_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
     0058                           1-  897     _00150_DS_:
                                    1-  898     	.line	216, "main.c"; 	closeCount = 0;
                                    1-  899     	BANKSEL	_closeCount
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 02rr                      1-  900     	CLRR	_closeCount
     005A 02rr                      1-  901     	CLRR	(_closeCount + 1)
                                    1-  902     ;;unsigned compare: left < lit (0x5=5), size=1
     005B                           1-  903     _00151_DS_:
                                    1-  904     	.line	219, "main.c"; 	if(overCount >= 5 && workStep > 0)
     005B 2105                      1-  905     	MOVIA	0x05
                                    1-  906     	BANKSEL	_overCount
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 04rr                      1-  907     	SUBAR	_overCount,W
     005E 0803                      1-  908     	BTRSS	STATUS,0
                                    1-  909     	MGOTO	_00157_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  910     	BANKSEL	_workStep
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1-  911     	MOVR	_workStep,W
     0062 0D03                      1-  912     	BTRSC	STATUS,2
                                    1-  913     	MGOTO	_00157_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  914     	.line	221, "main.c"; 	if(++count5S > 500)
                                    1-  915     	BANKSEL	_count5S
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 05rr                      1-  916     	INCR	_count5S,F
     0066 0D03                      1-  917     	BTRSC	STATUS,2
     0067 05rr                      1-  918     	INCR	(_count5S + 1),F
                                    1-  919     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  920     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     0068 2101                      1-  921     	MOVIA	0x01
     0069 04rr                      1-  922     	SUBAR	(_count5S + 1),W
     006A 0903                      1-  923     	BTRSS	STATUS,2
                                    1-  924     	MGOTO	_00271_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
     006C 21F5                      1-  925     	MOVIA	0xf5
     006D 04rr                      1-  926     	SUBAR	_count5S,W
     006E                           1-  927     _00271_DS_:
     006E 0803                      1-  928     	BTRSS	STATUS,0
                                    1-  929     	MGOTO	_00158_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  930     	.line	223, "main.c"; 	overCount = 0;
                                    1-  931     	BANKSEL	_overCount
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 02rr                      1-  932     	CLRR	_overCount
                                    1-  933     	.line	224, "main.c"; 	count5S = 0;
                                    1-  934     	BANKSEL	_count5S
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 02rr                      1-  935     	CLRR	_count5S
     0074 02rr                      1-  936     	CLRR	(_count5S + 1)
                                    1-  937     	.line	225, "main.c"; 	ledDeadTime = 25;
     0075 2119                      1-  938     	MOVIA	0x19
                                    1-  939     	BANKSEL	_ledDeadTime
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 00rr                      1-  940     	MOVAR	_ledDeadTime
                                    1-  941     	.line	226, "main.c"; 	powerOff();
                                    1-  942     	MCALL	_powerOff
     0078 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  943     	MGOTO	_00158_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
     007A                           1-  944     _00157_DS_:
                                    1-  945     	.line	231, "main.c"; 	count5S = 0;
                                    1-  946     	BANKSEL	_count5S
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 02rr                      1-  947     	CLRR	_count5S
     007C 02rr                      1-  948     	CLRR	(_count5S + 1)
     007D                           1-  949     _00158_DS_:
                                    1-  950     	.line	233, "main.c"; 	if(chrgFlag == 0)
                                    1-  951     	BANKSEL	_Status
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 09rr                      1-  952     	BTRSS	_Status,3
                                    1-  953     	.line	234, "main.c"; 	keyCtr();
                                    1-  954     	MCALL	_keyCtr
     007F 2rrr                      3-   66 m1      LCALL rom_address
     0080                           1-  955     _00161_DS_:
                                    1-  956     	.line	235, "main.c"; 	if(count200ms < 3)
     0080 2103                      1-  957     	MOVIA	0x03
                                    1-  958     	BANKSEL	_count200ms
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 04rr                      1-  959     	SUBAR	_count200ms,W
     0083 0C03                      1-  960     	BTRSC	STATUS,0
                                    1-  961     	MGOTO	_00166_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  962     	.line	237, "main.c"; 	checkBatAD();
                                    1-  963     	MCALL	_checkBatAD
     0085 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  964     	MGOTO	_00167_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  965     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  966     ;;unsigned compare: left >= lit (0x6=6), size=1
     0087                           1-  967     _00166_DS_:
                                    1-  968     	.line	239, "main.c"; 	else if(count200ms > 5 && count200ms < 19)
     0087 2106                      1-  969     	MOVIA	0x06
                                    1-  970     	BANKSEL	_count200ms
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 04rr                      1-  971     	SUBAR	_count200ms,W
     008A 0803                      1-  972     	BTRSS	STATUS,0
                                    1-  973     	MGOTO	_00167_DS_
     008B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  974     ;;unsigned compare: left < lit (0x13=19), size=1
     008C 2113                      1-  975     	MOVIA	0x13
     008D 04rr                      1-  976     	SUBAR	_count200ms,W
     008E 0803                      1-  977     	BTRSS	STATUS,0
                                    1-  978     	.line	241, "main.c"; 	checkOutA();
                                    1-  979     	MCALL	_checkOutA
     008F 2rrr                      3-   66 m1      LCALL rom_address
     0090                           1-  980     _00167_DS_:
                                    1-  981     	.line	243, "main.c"; 	chrgCtr();
                                    1-  982     	MCALL	_chrgCtr
     0090 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  983     	.line	246, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x04) == 0 && ledLightTime == 0 && ledDeadTime == 0 && shanshuoTime == 0)
                                    1-  984     	BANKSEL	_workStep
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 01rr                      1-  985     	MOVR	_workStep,W
     0093 0903                      1-  986     	BTRSS	STATUS,2
                                    1-  987     	MGOTO	_00171_DS_
     0094 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  988     	BANKSEL	_keyCount
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 01rr                      1-  989     	MOVR	_keyCount,W
     0097 0903                      1-  990     	BTRSS	STATUS,2
                                    1-  991     	MGOTO	_00171_DS_
     0098 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  992     	BANKSEL	_PORTA
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 0Drr                      1-  993     	BTRSC	_PORTA,2
                                    1-  994     	MGOTO	_00171_DS_
     009B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  995     	BANKSEL	_ledLightTime
     009C rrrr                      3-  110 m1      .banksel ram_address
     009D 01rr                      1-  996     	MOVR	_ledLightTime,W
     009E 0903                      1-  997     	BTRSS	STATUS,2
                                    1-  998     	MGOTO	_00171_DS_
     009F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  999     	BANKSEL	_ledDeadTime
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 01rr                      1- 1000     	MOVR	_ledDeadTime,W
     00A2 0903                      1- 1001     	BTRSS	STATUS,2
                                    1- 1002     	MGOTO	_00171_DS_
     00A3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1003     	BANKSEL	_shanshuoTime
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 01rr                      1- 1004     	MOVR	_shanshuoTime,W
     00A6 0903                      1- 1005     	BTRSS	STATUS,2
                                    1- 1006     	MGOTO	_00171_DS_
     00A7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1007     	.line	248, "main.c"; 	if(++sleepTime > 20)
                                    1- 1008     	BANKSEL	_sleepTime
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 05rr                      1- 1009     	INCR	_sleepTime,F
     00AA 0D03                      1- 1010     	BTRSC	STATUS,2
     00AB 05rr                      1- 1011     	INCR	(_sleepTime + 1),F
                                    1- 1012     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1013     ;;unsigned compare: left >= lit (0x15=21), size=2
     00AC 2100                      1- 1014     	MOVIA	0x00
     00AD 04rr                      1- 1015     	SUBAR	(_sleepTime + 1),W
     00AE 0903                      1- 1016     	BTRSS	STATUS,2
                                    1- 1017     	MGOTO	_00275_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
     00B0 2115                      1- 1018     	MOVIA	0x15
     00B1 04rr                      1- 1019     	SUBAR	_sleepTime,W
     00B2                           1- 1020     _00275_DS_:
     00B2 0803                      1- 1021     	BTRSS	STATUS,0
                                    1- 1022     	MGOTO	_00171_DS_
     00B3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1023     	.line	250, "main.c"; 	gotoSleep();
                                    1- 1024     	MCALL	_gotoSleep
     00B4 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1025     ;;unsigned compare: left < lit (0x384=900), size=2
     00B5                           1- 1026     _00171_DS_:
                                    1- 1027     	.line	254, "main.c"; 	if(count900s >= 900)
     00B5 2103                      1- 1028     	MOVIA	0x03
                                    1- 1029     	BANKSEL	_count900s
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 04rr                      1- 1030     	SUBAR	(_count900s + 1),W
     00B8 0903                      1- 1031     	BTRSS	STATUS,2
                                    1- 1032     	MGOTO	_00276_DS_
     00B9 3rrr                      3-   63 m1      LGOTO rom_address
     00BA 2184                      1- 1033     	MOVIA	0x84
     00BB 04rr                      1- 1034     	SUBAR	_count900s,W
     00BC                           1- 1035     _00276_DS_:
     00BC 0803                      1- 1036     	BTRSS	STATUS,0
                                    1- 1037     	MGOTO	_00180_DS_
     00BD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1038     	.line	256, "main.c"; 	powerOff();
                                    1- 1039     	MCALL	_powerOff
     00BE 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1040     	MGOTO	_00180_DS_
     00BF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1041     	.line	260, "main.c"; 	}
                                    1- 1042     	RETURN	
     00C0 0010                      3-   40 m1      ret
                                    1- 1043     ; exit point of _main
                                    1- 1045     ;***
                                    1- 1046     ;  pBlock Stats: dbName = C
                                    1- 1047     ;***
                                    1- 1048     ;has an exit
                                    1- 1049     ;; Starting pCode block
                                    1- 1050     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1052     _F_wait_eoc:
                                    1- 1053     ; 2 exit points
     0000                           1- 1054     _00756_DS_:
                                    1- 1055     	.line	932, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1056     	BTRSS	_ADMDbits,5
                                    1- 1057     	MGOTO	_00756_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1058     	.line	934, "main.c"; 	}
                                    1- 1059     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1060     ; exit point of _F_wait_eoc
                                    1- 1062     ;***
                                    1- 1063     ;  pBlock Stats: dbName = C
                                    1- 1064     ;***
                                    1- 1065     ;has an exit
                                    1- 1066     ;functions called:
                                    1- 1067     ;   _delay
                                    1- 1068     ;   _F_wait_eoc
                                    1- 1069     ;   _delay
                                    1- 1070     ;   _F_wait_eoc
                                    1- 1071     ;6 compiler assigned registers:
                                    1- 1072     ;   r0x1034
                                    1- 1073     ;   r0x1035
                                    1- 1074     ;   r0x1036
                                    1- 1075     ;   r0x1037
                                    1- 1076     ;   r0x1038
                                    1- 1077     ;   r0x1039
                                    1- 1078     ;; Starting pCode block
                                    1- 1079     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1081     ;local variable name mapping:
     0000                           1- 1084     _F_AIN2_Convert:
                                    1- 1085     ; 2 exit points
                                    1- 1086     	.line	915, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1087     	BANKSEL	r0x1034
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1088     	MOVAR	r0x1034
                                    1- 1089     	.line	917, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1090     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1091     	CLRR	_R_AIN2_DATA_LB
                                    1- 1092     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1093     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1094     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1095     	.line	919, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0007 2193                      1- 1096     	MOVIA	0x93
     0008 00rr                      1- 1097     	MOVAR	_ADMD
                                    1- 1098     	.line	920, "main.c"; 	delay(200);	
     0009 21C8                      1- 1099     	MOVIA	0xc8
                                    1- 1100     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1101     	.line	921, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1102     	MOVIA	0x01
                                    1- 1103     	BANKSEL	r0x1035
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1104     	MOVAR	r0x1035
     000E                           1- 1105     _00749_DS_:
                                    1- 1106     	BANKSEL	r0x1035
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1107     	MOVR	r0x1035,W
                                    1- 1108     	BANKSEL	r0x1034
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1109     	SUBAR	r0x1034,W
     0012 0803                      1- 1110     	BTRSS	STATUS,0
                                    1- 1111     	MGOTO	_00751_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1112     	.line	923, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1113     	BSR	_ADMDbits,6
                                    1- 1114     	.line	924, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1115     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1116     	.line	925, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1117     	MOVIA	0x0f
     0017 10rr                      1- 1118     	ANDAR	_ADR,W
                                    1- 1119     ;;3	MOVAR	r0x1036
                                    1- 1120     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1121     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1122     	.line	926, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1- 1123     	MOVR	_ADD,W
                                    1- 1124     	BANKSEL	r0x1036
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1125     	MOVAR	r0x1036
                                    1- 1126     ;;1	CLRR	r0x1037
                                    1- 1127     ;;106	MOVR	r0x1036,W
                                    1- 1128     ;;104	MOVAR	r0x1038
     001D 2100                      1- 1129     	MOVIA	0x00
                                    1- 1130     	BANKSEL	r0x1039
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1131     	MOVAR	r0x1039
                                    1- 1132     ;;105	MOVR	r0x1038,W
                                    1- 1133     	BANKSEL	r0x1036
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1134     	MOVR	r0x1036,W
                                    1- 1135     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1136     	ADDAR	_R_AIN2_DATA,F
                                    1- 1137     	BANKSEL	r0x1039
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1138     	MOVR	r0x1039,W
     0026 0C03                      1- 1139     	BTRSC	STATUS,0
     0027 05rr                      1- 1140     	INCR	r0x1039,W
     0028 0D03                      1- 1141     	BTRSC	STATUS,2
                                    1- 1142     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1143     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1144     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1- 1145     _00001_DS_:
                                    1- 1146     	.line	921, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1147     	BANKSEL	r0x1035
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1148     	INCR	r0x1035,F
                                    1- 1149     	MGOTO	_00749_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1150     _00751_DS_:
                                    1- 1151     	.line	928, "main.c"; 	}
                                    1- 1152     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1153     ; exit point of _F_AIN2_Convert
                                    1- 1155     ;***
                                    1- 1156     ;  pBlock Stats: dbName = C
                                    1- 1157     ;***
                                    1- 1158     ;has an exit
                                    1- 1159     ;functions called:
                                    1- 1160     ;   _delay
                                    1- 1161     ;   _F_wait_eoc
                                    1- 1162     ;   _delay
                                    1- 1163     ;   _F_wait_eoc
                                    1- 1164     ;6 compiler assigned registers:
                                    1- 1165     ;   r0x103A
                                    1- 1166     ;   r0x103B
                                    1- 1167     ;   r0x103C
                                    1- 1168     ;   r0x103D
                                    1- 1169     ;   r0x103E
                                    1- 1170     ;   r0x103F
                                    1- 1171     ;; Starting pCode block
                                    1- 1172     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1174     ;local variable name mapping:
     0000                           1- 1177     _F_AIN4_Convert:
                                    1- 1178     ; 2 exit points
                                    1- 1179     	.line	900, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1180     	BANKSEL	r0x103A
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1181     	MOVAR	r0x103A
                                    1- 1182     	.line	902, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1183     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1184     	CLRR	_R_AIN4_DATA_LB
                                    1- 1185     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1186     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1187     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1188     	.line	904, "main.c"; 	ADMD  = 0x90 | C_ADC_PB0;				// Select AIN6(PB1) pad as ADC input
     0007 2195                      1- 1189     	MOVIA	0x95
     0008 00rr                      1- 1190     	MOVAR	_ADMD
                                    1- 1191     	.line	905, "main.c"; 	delay(200);	
     0009 21C8                      1- 1192     	MOVIA	0xc8
                                    1- 1193     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1194     	.line	906, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1195     	MOVIA	0x01
                                    1- 1196     	BANKSEL	r0x103B
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1197     	MOVAR	r0x103B
     000E                           1- 1198     _00740_DS_:
                                    1- 1199     	BANKSEL	r0x103B
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1200     	MOVR	r0x103B,W
                                    1- 1201     	BANKSEL	r0x103A
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1202     	SUBAR	r0x103A,W
     0012 0803                      1- 1203     	BTRSS	STATUS,0
                                    1- 1204     	MGOTO	_00742_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1205     	.line	908, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1206     	BSR	_ADMDbits,6
                                    1- 1207     	.line	909, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1208     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1209     	.line	910, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1210     	MOVIA	0x0f
     0017 10rr                      1- 1211     	ANDAR	_ADR,W
                                    1- 1212     ;;3	MOVAR	r0x103C
                                    1- 1213     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1214     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1215     	.line	911, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1216     	MOVR	_ADD,W
                                    1- 1217     	BANKSEL	r0x103C
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1218     	MOVAR	r0x103C
                                    1- 1219     ;;1	CLRR	r0x103D
                                    1- 1220     ;;103	MOVR	r0x103C,W
                                    1- 1221     ;;101	MOVAR	r0x103E
     001D 2100                      1- 1222     	MOVIA	0x00
                                    1- 1223     	BANKSEL	r0x103F
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1224     	MOVAR	r0x103F
                                    1- 1225     ;;102	MOVR	r0x103E,W
                                    1- 1226     	BANKSEL	r0x103C
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1227     	MOVR	r0x103C,W
                                    1- 1228     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1229     	ADDAR	_R_AIN4_DATA,F
                                    1- 1230     	BANKSEL	r0x103F
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1231     	MOVR	r0x103F,W
     0026 0C03                      1- 1232     	BTRSC	STATUS,0
     0027 05rr                      1- 1233     	INCR	r0x103F,W
     0028 0D03                      1- 1234     	BTRSC	STATUS,2
                                    1- 1235     	MGOTO	_00002_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1236     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1237     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1238     _00002_DS_:
                                    1- 1239     	.line	906, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1240     	BANKSEL	r0x103B
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1241     	INCR	r0x103B,F
                                    1- 1242     	MGOTO	_00740_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1243     _00742_DS_:
                                    1- 1244     	.line	913, "main.c"; 	}
                                    1- 1245     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1246     ; exit point of _F_AIN4_Convert
                                    1- 1248     ;***
                                    1- 1249     ;  pBlock Stats: dbName = C
                                    1- 1250     ;***
                                    1- 1251     ;has an exit
                                    1- 1252     ;functions called:
                                    1- 1253     ;   _F_AIN4_Convert
                                    1- 1254     ;   _F_AIN4_Convert
                                    1- 1255     ;4 compiler assigned registers:
                                    1- 1256     ;   r0x1040
                                    1- 1257     ;   r0x1041
                                    1- 1258     ;   r0x1042
                                    1- 1259     ;   r0x1043
                                    1- 1260     ;; Starting pCode block
                                    1- 1261     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1263     _checkOutA:
                                    1- 1264     ; 2 exit points
                                    1- 1265     	.line	811, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1266     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1267     	CLRR	_R_AIN4_DATA_LB
                                    1- 1268     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1269     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1270     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1271     	.line	812, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1272     	MOVIA	0x08
                                    1- 1273     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1274     	.line	813, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1275     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1276     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1277     	ANDIA	0xf0
     000A 00rr                      1- 1278     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1279     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1280     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1281     	ANDIA	0x0f
     000E 11rr                      1- 1282     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1283     	XORAR	_R_AIN4_DATA,F
                                    1- 1284     	.line	814, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1285     	MOVIA	0xf0
                                    1- 1286     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1287     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1288     	.line	815, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1289     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1290     	BANKSEL	r0x1042
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1291     	MOVAR	r0x1042
                                    1- 1292     ;;1	MOVAR	r0x1040
                                    1- 1293     ;;1	CLRR	r0x1041
                                    1- 1294     ;;100	MOVR	r0x1040,W
     0016 2100                      1- 1295     	MOVIA	0x00
                                    1- 1296     	BANKSEL	r0x1043
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1297     	MOVAR	r0x1043
                                    1- 1298     	BANKSEL	r0x1042
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1299     	MOVR	r0x1042,W
                                    1- 1300     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1301     	ADDAR	_R_AIN4_DATA,F
                                    1- 1302     	BANKSEL	r0x1043
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1303     	MOVR	r0x1043,W
     001F 0C03                      1- 1304     	BTRSC	STATUS,0
     0020 05rr                      1- 1305     	INCR	r0x1043,W
     0021 0D03                      1- 1306     	BTRSC	STATUS,2
                                    1- 1307     	MGOTO	_00003_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1308     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1309     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1310     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1311     _00003_DS_:
                                    1- 1312     	.line	816, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1313     	BCR	STATUS,0
                                    1- 1314     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1315     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1316     	RRR	_R_AIN4_DATA,F
                                    1- 1317     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1318     	BCR	STATUS,0
     002A 13rr                      1- 1319     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1320     	RRR	_R_AIN4_DATA,F
                                    1- 1321     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1322     	BCR	STATUS,0
     002D 13rr                      1- 1323     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1324     	RRR	_R_AIN4_DATA,F
                                    1- 1325     ;;unsigned compare: left < lit (0x6=6), size=1
                                    1- 1326     	.line	817, "main.c"; 	if(workStep < 6 && R_AIN4_DATA > 200)
     002F 2106                      1- 1327     	MOVIA	0x06
                                    1- 1328     	BANKSEL	_workStep
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 04rr                      1- 1329     	SUBAR	_workStep,W
     0032 0C03                      1- 1330     	BTRSC	STATUS,0
                                    1- 1331     	MGOTO	_00691_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1332     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1333     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0034 2100                      1- 1334     	MOVIA	0x00
                                    1- 1335     	BANKSEL	_R_AIN4_DATA
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 04rr                      1- 1336     	SUBAR	(_R_AIN4_DATA + 1),W
     0037 0903                      1- 1337     	BTRSS	STATUS,2
                                    1- 1338     	MGOTO	_00729_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
     0039 21C9                      1- 1339     	MOVIA	0xc9
     003A 04rr                      1- 1340     	SUBAR	_R_AIN4_DATA,W
     003B                           1- 1341     _00729_DS_:
     003B 0803                      1- 1342     	BTRSS	STATUS,0
                                    1- 1343     	MGOTO	_00691_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1344     	.line	819, "main.c"; 	if(++overCount > 5)
                                    1- 1345     	BANKSEL	_overCount
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 05rr                      1- 1346     	INCR	_overCount,F
                                    1- 1347     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1348     ;;unsigned compare: left >= lit (0x6=6), size=1
     003F 2106                      1- 1349     	MOVIA	0x06
     0040 04rr                      1- 1350     	SUBAR	_overCount,W
     0041 0803                      1- 1351     	BTRSS	STATUS,0
                                    1- 1352     	MGOTO	_00692_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1353     	.line	821, "main.c"; 	overCount = 5;
     0043 2105                      1- 1354     	MOVIA	0x05
     0044 00rr                      1- 1355     	MOVAR	_overCount
                                    1- 1356     	.line	821, "main.c"; 	}
                                    1- 1357     	MGOTO	_00692_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1358     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1359     ;;unsigned compare: left >= lit (0x191=401), size=2
     0046                           1- 1360     _00691_DS_:
                                    1- 1361     	.line	824, "main.c"; 	else if(R_AIN4_DATA > 400)
     0046 2101                      1- 1362     	MOVIA	0x01
                                    1- 1363     	BANKSEL	_R_AIN4_DATA
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 04rr                      1- 1364     	SUBAR	(_R_AIN4_DATA + 1),W
     0049 0903                      1- 1365     	BTRSS	STATUS,2
                                    1- 1366     	MGOTO	_00731_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
     004B 2191                      1- 1367     	MOVIA	0x91
     004C 04rr                      1- 1368     	SUBAR	_R_AIN4_DATA,W
     004D                           1- 1369     _00731_DS_:
     004D 0803                      1- 1370     	BTRSS	STATUS,0
                                    1- 1371     	MGOTO	_00688_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1372     	.line	826, "main.c"; 	if(++overCount > 5)
                                    1- 1373     	BANKSEL	_overCount
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 05rr                      1- 1374     	INCR	_overCount,F
                                    1- 1375     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1376     ;;unsigned compare: left >= lit (0x6=6), size=1
     0051 2106                      1- 1377     	MOVIA	0x06
     0052 04rr                      1- 1378     	SUBAR	_overCount,W
     0053 0803                      1- 1379     	BTRSS	STATUS,0
                                    1- 1380     	MGOTO	_00692_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1381     	.line	828, "main.c"; 	overCount = 5;
     0055 2105                      1- 1382     	MOVIA	0x05
     0056 00rr                      1- 1383     	MOVAR	_overCount
                                    1- 1384     	.line	828, "main.c"; 	//        		if(tempDuty > 50)
                                    1- 1385     	MGOTO	_00692_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1386     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1387     ;;unsigned compare: left >= lit (0x4E=78), size=2
     0058                           1- 1388     _00688_DS_:
                                    1- 1389     	.line	836, "main.c"; 	else if(R_AIN4_DATA > 77)
     0058 2100                      1- 1390     	MOVIA	0x00
                                    1- 1391     	BANKSEL	_R_AIN4_DATA
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 04rr                      1- 1392     	SUBAR	(_R_AIN4_DATA + 1),W
     005B 0903                      1- 1393     	BTRSS	STATUS,2
                                    1- 1394     	MGOTO	_00733_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
     005D 214E                      1- 1395     	MOVIA	0x4e
     005E 04rr                      1- 1396     	SUBAR	_R_AIN4_DATA,W
     005F                           1- 1397     _00733_DS_:
     005F 0803                      1- 1398     	BTRSS	STATUS,0
                                    1- 1399     	MGOTO	_00685_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1400     	.line	838, "main.c"; 	if(overCount > 0)
                                    1- 1401     	BANKSEL	_overCount
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1- 1402     	MOVR	_overCount,W
     0063 0D03                      1- 1403     	BTRSC	STATUS,2
                                    1- 1404     	MGOTO	_00692_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1405     	.line	840, "main.c"; 	overCount--;
     0065 06rr                      1- 1406     	DECR	_overCount,F
                                    1- 1407     	.line	840, "main.c"; 	}
                                    1- 1408     	MGOTO	_00692_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
     0067                           1- 1409     _00685_DS_:
                                    1- 1410     	.line	871, "main.c"; 	if(overCount > 0)
                                    1- 1411     	BANKSEL	_overCount
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 01rr                      1- 1412     	MOVR	_overCount,W
     0069 0903                      1- 1413     	BTRSS	STATUS,2
                                    1- 1414     	.line	873, "main.c"; 	overCount--;
     006A 06rr                      1- 1415     	DECR	_overCount,F
                                    1- 1416     	.line	885, "main.c"; 	if(workStep > 0)
                                    1- 1417     	BANKSEL	_workStep
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 01rr                      1- 1418     	MOVR	_workStep,W
     006D 0D03                      1- 1419     	BTRSC	STATUS,2
                                    1- 1420     	MGOTO	_00692_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1421     	.line	886, "main.c"; 	ledStep = workStep;
     006F 01rr                      1- 1422     	MOVR	_workStep,W
                                    1- 1423     	BANKSEL	_ledStep
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 00rr                      1- 1424     	MOVAR	_ledStep
     0072                           1- 1425     _00692_DS_:
                                    1- 1426     	.line	889, "main.c"; 	if(workStep > 0)
                                    1- 1427     	BANKSEL	_workStep
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 01rr                      1- 1428     	MOVR	_workStep,W
     0074 0D03                      1- 1429     	BTRSC	STATUS,2
                                    1- 1430     	MGOTO	_00696_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1431     	.line	890, "main.c"; 	ledStep = workStep;
     0076 01rr                      1- 1432     	MOVR	_workStep,W
                                    1- 1433     	BANKSEL	_ledStep
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 00rr                      1- 1434     	MOVAR	_ledStep
     0079                           1- 1435     _00696_DS_:
                                    1- 1436     	.line	892, "main.c"; 	}
                                    1- 1437     	RETURN	
     0079 0010                      3-   40 m1      ret
                                    1- 1438     ; exit point of _checkOutA
                                    1- 1440     ;***
                                    1- 1441     ;  pBlock Stats: dbName = C
                                    1- 1442     ;***
                                    1- 1443     ;has an exit
                                    1- 1444     ;functions called:
                                    1- 1445     ;   _F_AIN2_Convert
                                    1- 1446     ;   _F_AIN2_Convert
                                    1- 1447     ;4 compiler assigned registers:
                                    1- 1448     ;   r0x1044
                                    1- 1449     ;   r0x1045
                                    1- 1450     ;   r0x1046
                                    1- 1451     ;   r0x1047
                                    1- 1452     ;; Starting pCode block
                                    1- 1453     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1455     _checkBatAD:
                                    1- 1456     ; 2 exit points
                                    1- 1457     	.line	753, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1458     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1459     	CLRR	_R_AIN2_DATA_LB
                                    1- 1460     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1461     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1462     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1463     	.line	754, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1464     	MOVIA	0x08
                                    1- 1465     	MCALL	_F_AIN2_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1466     	.line	755, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1467     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1468     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1469     	ANDIA	0xf0
     000A 00rr                      1- 1470     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1471     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1472     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1473     	ANDIA	0x0f
     000E 11rr                      1- 1474     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1475     	XORAR	_R_AIN2_DATA,F
                                    1- 1476     	.line	756, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1477     	MOVIA	0xf0
                                    1- 1478     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1479     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1480     	.line	757, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1481     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1482     	BANKSEL	r0x1046
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1483     	MOVAR	r0x1046
                                    1- 1484     ;;1	MOVAR	r0x1044
                                    1- 1485     ;;1	CLRR	r0x1045
                                    1- 1486     ;;99	MOVR	r0x1044,W
     0016 2100                      1- 1487     	MOVIA	0x00
                                    1- 1488     	BANKSEL	r0x1047
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1489     	MOVAR	r0x1047
                                    1- 1490     	BANKSEL	r0x1046
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1491     	MOVR	r0x1046,W
                                    1- 1492     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1493     	ADDAR	_R_AIN2_DATA,F
                                    1- 1494     	BANKSEL	r0x1047
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1495     	MOVR	r0x1047,W
     001F 0C03                      1- 1496     	BTRSC	STATUS,0
     0020 05rr                      1- 1497     	INCR	r0x1047,W
     0021 0D03                      1- 1498     	BTRSC	STATUS,2
                                    1- 1499     	MGOTO	_00004_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1500     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1501     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1502     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1503     _00004_DS_:
                                    1- 1504     	.line	758, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0025 1C03                      1- 1505     	BCR	STATUS,0
                                    1- 1506     	BANKSEL	_R_AIN2_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1507     	RRR	(_R_AIN2_DATA + 1),F
     0028 13rr                      1- 1508     	RRR	_R_AIN2_DATA,F
                                    1- 1509     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1510     	BCR	STATUS,0
     002A 13rr                      1- 1511     	RRR	(_R_AIN2_DATA + 1),F
     002B 13rr                      1- 1512     	RRR	_R_AIN2_DATA,F
                                    1- 1513     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1514     	BCR	STATUS,0
     002D 13rr                      1- 1515     	RRR	(_R_AIN2_DATA + 1),F
     002E 13rr                      1- 1516     	RRR	_R_AIN2_DATA,F
                                    1- 1517     	.line	759, "main.c"; 	if(debug)
                                    1- 1518     	BANKSEL	_debug
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1519     	MOVR	_debug,W
     0031 0D03                      1- 1520     	BTRSC	STATUS,2
                                    1- 1521     	MGOTO	_00587_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1522     	.line	760, "main.c"; 	R_AIN2_DATA = BATTLE;
     0033 210E                      1- 1523     	MOVIA	0x0e
                                    1- 1524     	BANKSEL	_R_AIN2_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1525     	MOVAR	_R_AIN2_DATA
     0036 2106                      1- 1526     	MOVIA	0x06
     0037 00rr                      1- 1527     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1528     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1529     ;;unsigned compare: left >= lit (0x623=1571), size=2
     0038                           1- 1530     _00587_DS_:
                                    1- 1531     	.line	762, "main.c"; 	if(R_AIN2_DATA > 1570)
     0038 2106                      1- 1532     	MOVIA	0x06
                                    1- 1533     	BANKSEL	_R_AIN2_DATA
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1534     	SUBAR	(_R_AIN2_DATA + 1),W
     003B 0903                      1- 1535     	BTRSS	STATUS,2
                                    1- 1536     	MGOTO	_00661_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 2123                      1- 1537     	MOVIA	0x23
     003E 04rr                      1- 1538     	SUBAR	_R_AIN2_DATA,W
     003F                           1- 1539     _00661_DS_:
     003F 0803                      1- 1540     	BTRSS	STATUS,0
                                    1- 1541     	MGOTO	_00612_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1542     	.line	765, "main.c"; 	lowCount = 0;
                                    1- 1543     	BANKSEL	_lowCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 1544     	CLRR	_lowCount
                                    1- 1545     	.line	766, "main.c"; 	pwStep = 8;
     0043 2108                      1- 1546     	MOVIA	0x08
                                    1- 1547     	BANKSEL	_pwStep
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 1548     	MOVAR	_pwStep
                                    1- 1549     	MGOTO	_00613_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1550     ;;unsigned compare: left < lit (0x47E=1150), size=2
     0047                           1- 1551     _00612_DS_:
                                    1- 1552     	.line	768, "main.c"; 	else if(R_AIN2_DATA < 1150)
     0047 2104                      1- 1553     	MOVIA	0x04
                                    1- 1554     	BANKSEL	_R_AIN2_DATA
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 04rr                      1- 1555     	SUBAR	(_R_AIN2_DATA + 1),W
     004A 0903                      1- 1556     	BTRSS	STATUS,2
                                    1- 1557     	MGOTO	_00662_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C 217E                      1- 1558     	MOVIA	0x7e
     004D 04rr                      1- 1559     	SUBAR	_R_AIN2_DATA,W
     004E                           1- 1560     _00662_DS_:
     004E 0C03                      1- 1561     	BTRSC	STATUS,0
                                    1- 1562     	MGOTO	_00609_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1563     	.line	770, "main.c"; 	if(++lowCount < 10)
                                    1- 1564     	BANKSEL	_lowCount
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 05rr                      1- 1565     	INCR	_lowCount,F
                                    1- 1566     ;;unsigned compare: left < lit (0xA=10), size=1
     0052 210A                      1- 1567     	MOVIA	0x0a
     0053 04rr                      1- 1568     	SUBAR	_lowCount,W
     0054 0803                      1- 1569     	BTRSS	STATUS,0
                                    1- 1570     	.line	771, "main.c"; 	return;
                                    1- 1571     	MGOTO	_00620_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1572     	.line	772, "main.c"; 	lowCount = 10;
     0056 210A                      1- 1573     	MOVIA	0x0a
     0057 00rr                      1- 1574     	MOVAR	_lowCount
                                    1- 1575     	.line	773, "main.c"; 	pwStep = 0;
                                    1- 1576     	BANKSEL	_pwStep
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 02rr                      1- 1577     	CLRR	_pwStep
                                    1- 1578     	.line	774, "main.c"; 	R_AIN2_DATA = 1150;
     005A 217E                      1- 1579     	MOVIA	0x7e
                                    1- 1580     	BANKSEL	_R_AIN2_DATA
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 00rr                      1- 1581     	MOVAR	_R_AIN2_DATA
     005D 2104                      1- 1582     	MOVIA	0x04
     005E 00rr                      1- 1583     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1584     	MGOTO	_00613_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
     0060                           1- 1585     _00609_DS_:
                                    1- 1586     	.line	779, "main.c"; 	lowCount = 0;
                                    1- 1587     	BANKSEL	_lowCount
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 02rr                      1- 1588     	CLRR	_lowCount
                                    1- 1589     	.line	780, "main.c"; 	firstTime = 0;
                                    1- 1590     	BANKSEL	_firstTime
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 02rr                      1- 1591     	CLRR	_firstTime
                                    1- 1592     ;;unsigned compare: left < lit (0x4F6=1270), size=2
                                    1- 1593     	.line	781, "main.c"; 	if(R_AIN2_DATA < 1270)
     0064 2104                      1- 1594     	MOVIA	0x04
                                    1- 1595     	BANKSEL	_R_AIN2_DATA
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 04rr                      1- 1596     	SUBAR	(_R_AIN2_DATA + 1),W
     0067 0903                      1- 1597     	BTRSS	STATUS,2
                                    1- 1598     	MGOTO	_00664_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
     0069 21F6                      1- 1599     	MOVIA	0xf6
     006A 04rr                      1- 1600     	SUBAR	_R_AIN2_DATA,W
     006B                           1- 1601     _00664_DS_:
     006B 0C03                      1- 1602     	BTRSC	STATUS,0
                                    1- 1603     	MGOTO	_00606_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1604     	.line	782, "main.c"; 	pwStep = 1;
     006D 2101                      1- 1605     	MOVIA	0x01
                                    1- 1606     	BANKSEL	_pwStep
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 00rr                      1- 1607     	MOVAR	_pwStep
                                    1- 1608     	MGOTO	_00613_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1609     ;;unsigned compare: left < lit (0x53C=1340), size=2
     0071                           1- 1610     _00606_DS_:
                                    1- 1611     	.line	783, "main.c"; 	else if(R_AIN2_DATA < 1340)
     0071 2105                      1- 1612     	MOVIA	0x05
                                    1- 1613     	BANKSEL	_R_AIN2_DATA
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 04rr                      1- 1614     	SUBAR	(_R_AIN2_DATA + 1),W
     0074 0903                      1- 1615     	BTRSS	STATUS,2
                                    1- 1616     	MGOTO	_00665_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
     0076 213C                      1- 1617     	MOVIA	0x3c
     0077 04rr                      1- 1618     	SUBAR	_R_AIN2_DATA,W
     0078                           1- 1619     _00665_DS_:
     0078 0C03                      1- 1620     	BTRSC	STATUS,0
                                    1- 1621     	MGOTO	_00603_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1622     	.line	784, "main.c"; 	pwStep = 2;
     007A 2102                      1- 1623     	MOVIA	0x02
                                    1- 1624     	BANKSEL	_pwStep
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 00rr                      1- 1625     	MOVAR	_pwStep
                                    1- 1626     	MGOTO	_00613_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1627     ;;unsigned compare: left < lit (0x56E=1390), size=2
     007E                           1- 1628     _00603_DS_:
                                    1- 1629     	.line	785, "main.c"; 	else if(R_AIN2_DATA < 1390)
     007E 2105                      1- 1630     	MOVIA	0x05
                                    1- 1631     	BANKSEL	_R_AIN2_DATA
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 04rr                      1- 1632     	SUBAR	(_R_AIN2_DATA + 1),W
     0081 0903                      1- 1633     	BTRSS	STATUS,2
                                    1- 1634     	MGOTO	_00666_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
     0083 216E                      1- 1635     	MOVIA	0x6e
     0084 04rr                      1- 1636     	SUBAR	_R_AIN2_DATA,W
     0085                           1- 1637     _00666_DS_:
     0085 0C03                      1- 1638     	BTRSC	STATUS,0
                                    1- 1639     	MGOTO	_00600_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1640     	.line	786, "main.c"; 	pwStep = 3;
     0087 2103                      1- 1641     	MOVIA	0x03
                                    1- 1642     	BANKSEL	_pwStep
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 00rr                      1- 1643     	MOVAR	_pwStep
                                    1- 1644     	MGOTO	_00613_DS_
     008A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1645     ;;unsigned compare: left < lit (0x5AA=1450), size=2
     008B                           1- 1646     _00600_DS_:
                                    1- 1647     	.line	787, "main.c"; 	else if(R_AIN2_DATA < 1450)
     008B 2105                      1- 1648     	MOVIA	0x05
                                    1- 1649     	BANKSEL	_R_AIN2_DATA
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 04rr                      1- 1650     	SUBAR	(_R_AIN2_DATA + 1),W
     008E 0903                      1- 1651     	BTRSS	STATUS,2
                                    1- 1652     	MGOTO	_00667_DS_
     008F 3rrr                      3-   63 m1      LGOTO rom_address
     0090 21AA                      1- 1653     	MOVIA	0xaa
     0091 04rr                      1- 1654     	SUBAR	_R_AIN2_DATA,W
     0092                           1- 1655     _00667_DS_:
     0092 0C03                      1- 1656     	BTRSC	STATUS,0
                                    1- 1657     	MGOTO	_00597_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1658     	.line	788, "main.c"; 	pwStep = 4;
     0094 2104                      1- 1659     	MOVIA	0x04
                                    1- 1660     	BANKSEL	_pwStep
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 00rr                      1- 1661     	MOVAR	_pwStep
                                    1- 1662     	MGOTO	_00613_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1663     ;;unsigned compare: left < lit (0x5E6=1510), size=2
     0098                           1- 1664     _00597_DS_:
                                    1- 1665     	.line	789, "main.c"; 	else if(R_AIN2_DATA < 1510)
     0098 2105                      1- 1666     	MOVIA	0x05
                                    1- 1667     	BANKSEL	_R_AIN2_DATA
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 04rr                      1- 1668     	SUBAR	(_R_AIN2_DATA + 1),W
     009B 0903                      1- 1669     	BTRSS	STATUS,2
                                    1- 1670     	MGOTO	_00668_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
     009D 21E6                      1- 1671     	MOVIA	0xe6
     009E 04rr                      1- 1672     	SUBAR	_R_AIN2_DATA,W
     009F                           1- 1673     _00668_DS_:
     009F 0C03                      1- 1674     	BTRSC	STATUS,0
                                    1- 1675     	MGOTO	_00594_DS_
     00A0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1676     	.line	790, "main.c"; 	pwStep = 5;
     00A1 2105                      1- 1677     	MOVIA	0x05
                                    1- 1678     	BANKSEL	_pwStep
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 00rr                      1- 1679     	MOVAR	_pwStep
                                    1- 1680     	MGOTO	_00613_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1681     ;;unsigned compare: left < lit (0x604=1540), size=2
     00A5                           1- 1682     _00594_DS_:
                                    1- 1683     	.line	791, "main.c"; 	else if(R_AIN2_DATA < 1540)
     00A5 2106                      1- 1684     	MOVIA	0x06
                                    1- 1685     	BANKSEL	_R_AIN2_DATA
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 04rr                      1- 1686     	SUBAR	(_R_AIN2_DATA + 1),W
     00A8 0903                      1- 1687     	BTRSS	STATUS,2
                                    1- 1688     	MGOTO	_00669_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
     00AA 2104                      1- 1689     	MOVIA	0x04
     00AB 04rr                      1- 1690     	SUBAR	_R_AIN2_DATA,W
     00AC                           1- 1691     _00669_DS_:
     00AC 0C03                      1- 1692     	BTRSC	STATUS,0
                                    1- 1693     	MGOTO	_00591_DS_
     00AD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1694     	.line	792, "main.c"; 	pwStep = 6;
     00AE 2106                      1- 1695     	MOVIA	0x06
                                    1- 1696     	BANKSEL	_pwStep
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 00rr                      1- 1697     	MOVAR	_pwStep
                                    1- 1698     	MGOTO	_00613_DS_
     00B1 3rrr                      3-   63 m1      LGOTO rom_address
     00B2                           1- 1699     _00591_DS_:
                                    1- 1700     	.line	794, "main.c"; 	pwStep = 7;
     00B2 2107                      1- 1701     	MOVIA	0x07
                                    1- 1702     	BANKSEL	_pwStep
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 00rr                      1- 1703     	MOVAR	_pwStep
     00B5                           1- 1704     _00613_DS_:
                                    1- 1705     	.line	797, "main.c"; 	if(prePwStep == 0 || prePwStep < pwStep)
                                    1- 1706     	BANKSEL	_prePwStep
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 01rr                      1- 1707     	MOVR	_prePwStep,W
     00B7 0D03                      1- 1708     	BTRSC	STATUS,2
                                    1- 1709     	MGOTO	_00614_DS_
     00B8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1710     	BANKSEL	_pwStep
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 01rr                      1- 1711     	MOVR	_pwStep,W
                                    1- 1712     	BANKSEL	_prePwStep
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 04rr                      1- 1713     	SUBAR	_prePwStep,W
     00BD 0C03                      1- 1714     	BTRSC	STATUS,0
                                    1- 1715     	MGOTO	_00615_DS_
     00BE 3rrr                      3-   63 m1      LGOTO rom_address
     00BF                           1- 1716     _00614_DS_:
                                    1- 1717     	.line	798, "main.c"; 	prePwStep = pwStep;
                                    1- 1718     	BANKSEL	_pwStep
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 01rr                      1- 1719     	MOVR	_pwStep,W
                                    1- 1720     	BANKSEL	_prePwStep
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 00rr                      1- 1721     	MOVAR	_prePwStep
     00C3                           1- 1722     _00615_DS_:
                                    1- 1723     	.line	800, "main.c"; 	if(ledLightTime > 0 && prePwStep > 0)
                                    1- 1724     	BANKSEL	_ledLightTime
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 01rr                      1- 1725     	MOVR	_ledLightTime,W
     00C5 0D03                      1- 1726     	BTRSC	STATUS,2
                                    1- 1727     	MGOTO	_00620_DS_
     00C6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1728     	BANKSEL	_prePwStep
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 01rr                      1- 1729     	MOVR	_prePwStep,W
     00C9 0D03                      1- 1730     	BTRSC	STATUS,2
                                    1- 1731     	MGOTO	_00620_DS_
     00CA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1732     	.line	801, "main.c"; 	pwStep = prePwStep;
     00CB 01rr                      1- 1733     	MOVR	_prePwStep,W
                                    1- 1734     	BANKSEL	_pwStep
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 00rr                      1- 1735     	MOVAR	_pwStep
     00CE                           1- 1736     _00620_DS_:
                                    1- 1737     	.line	803, "main.c"; 	}
                                    1- 1738     	RETURN	
     00CE 0010                      3-   40 m1      ret
                                    1- 1739     ; exit point of _checkBatAD
                                    1- 1741     ;***
                                    1- 1742     ;  pBlock Stats: dbName = C
                                    1- 1743     ;***
                                    1- 1744     ;has an exit
                                    1- 1745     ;functions called:
                                    1- 1746     ;   _delay
                                    1- 1747     ;   _delay
                                    1- 1748     ;; Starting pCode block
                                    1- 1749     .segment "code"; module=main, function=_initAD
     0000                           1- 1751     _initAD:
                                    1- 1752     ; 2 exit points
                                    1- 1753     	.line	729, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1754     	MOVIA	0x84
     0001 00rr                      1- 1755     	MOVAR	_ADMD
                                    1- 1756     	.line	734, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1757     	CLRR	_ADVREFH
                                    1- 1758     	.line	739, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1759     	MOVIA	0x10
     0004 00rr                      1- 1760     	MOVAR	_ADR
                                    1- 1761     	.line	741, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1762     	MOVIA	0x03
     0006 00rr                      1- 1763     	MOVAR	_ADCR
                                    1- 1764     	.line	744, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1765     	BSR	_ADMDbits,4
                                    1- 1766     	.line	745, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1767     	MOVIA	0x64
                                    1- 1768     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1769     	.line	748, "main.c"; 	}
                                    1- 1770     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1771     ; exit point of _initAD
                                    1- 1773     ;***
                                    1- 1774     ;  pBlock Stats: dbName = C
                                    1- 1775     ;***
                                    1- 1776     ;has an exit
                                    1- 1777     ;2 compiler assigned registers:
                                    1- 1778     ;   r0x1032
                                    1- 1779     ;   r0x1033
                                    1- 1780     ;; Starting pCode block
                                    1- 1781     .segment "code"; module=main, function=_delay
                                    1- 1783     ;local variable name mapping:
     0000                           1- 1786     _delay:
                                    1- 1787     ; 2 exit points
                                    1- 1788     	.line	719, "main.c"; 	void delay(u8t time)
                                    1- 1789     	BANKSEL	r0x1032
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1790     	MOVAR	r0x1032
                                    1- 1791     	.line	721, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1792     	BANKSEL	r0x1033
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1793     	CLRR	r0x1033
     0004                           1- 1794     _00575_DS_:
                                    1- 1795     	BANKSEL	r0x1032
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 1796     	MOVR	r0x1032,W
                                    1- 1797     	BANKSEL	r0x1033
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1- 1798     	SUBAR	r0x1033,W
     0008 0C03                      1- 1799     	BTRSC	STATUS,0
                                    1- 1800     	MGOTO	_00577_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1801     	.line	722, "main.c"; 	NOP();
     000A 0000                      1- 1802     	nop
                                    1- 1803     	.line	721, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1804     	BANKSEL	r0x1033
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 1805     	INCR	r0x1033,F
                                    1- 1806     	MGOTO	_00575_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 1807     _00577_DS_:
                                    1- 1808     	.line	723, "main.c"; 	}
                                    1- 1809     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 1810     ; exit point of _delay
                                    1- 1812     ;***
                                    1- 1813     ;  pBlock Stats: dbName = C
                                    1- 1814     ;***
                                    1- 1815     ;has an exit
                                    1- 1816     ;functions called:
                                    1- 1817     ;   _pwmStop
                                    1- 1818     ;   _pwmStop
                                    1- 1819     ;5 compiler assigned registers:
                                    1- 1820     ;   r0x1048
                                    1- 1821     ;   r0x1049
                                    1- 1822     ;   r0x104A
                                    1- 1823     ;   r0x104B
                                    1- 1824     ;   r0x104C
                                    1- 1825     ;; Starting pCode block
                                    1- 1826     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1828     _chrgCtr:
                                    1- 1829     ; 2 exit points
                                    1- 1830     	.line	649, "main.c"; 	if(PORTA & 0x04)
                                    1- 1831     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 09rr                      1- 1832     	BTRSS	_PORTA,2
                                    1- 1833     	MGOTO	_00531_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1834     	.line	652, "main.c"; 	chrgFlag = 1;
                                    1- 1835     	BANKSEL	_Status
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 19rr                      1- 1836     	BSR	_Status,3
                                    1- 1837     	.line	653, "main.c"; 	workStep = 0;
                                    1- 1838     	BANKSEL	_workStep
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1- 1839     	CLRR	_workStep
                                    1- 1840     	.line	654, "main.c"; 	ledLightTime = 0;
                                    1- 1841     	BANKSEL	_ledLightTime
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1- 1842     	CLRR	_ledLightTime
                                    1- 1843     	.line	655, "main.c"; 	pwmStop();
                                    1- 1844     	MCALL	_pwmStop
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1845     ;;unsigned compare: left < lit (0x8=8), size=1
                                    1- 1846     	.line	657, "main.c"; 	if(pwStep >= 8 || chrgFullFlag)
     000A 2108                      1- 1847     	MOVIA	0x08
                                    1- 1848     	BANKSEL	_pwStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 04rr                      1- 1849     	SUBAR	_pwStep,W
     000D 0C03                      1- 1850     	BTRSC	STATUS,0
                                    1- 1851     	MGOTO	_00524_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1852     	BANKSEL	_chrgFullFlag
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 1853     	MOVR	_chrgFullFlag,W
     0011 0D03                      1- 1854     	BTRSC	STATUS,2
                                    1- 1855     	MGOTO	_00525_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
     0013                           1- 1856     _00524_DS_:
                                    1- 1857     	.line	659, "main.c"; 	chrgStep = 6;
     0013 2106                      1- 1858     	MOVIA	0x06
                                    1- 1859     	BANKSEL	_chrgStep
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1860     	MOVAR	_chrgStep
                                    1- 1861     	.line	661, "main.c"; 	ledStep = 6;
                                    1- 1862     	BANKSEL	_ledStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1863     	MOVAR	_ledStep
                                    1- 1864     	.line	662, "main.c"; 	if(++fullCount >= 2000)
                                    1- 1865     	BANKSEL	_fullCount
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 05rr                      1- 1866     	INCR	_fullCount,F
     001A 0D03                      1- 1867     	BTRSC	STATUS,2
     001B 05rr                      1- 1868     	INCR	(_fullCount + 1),F
                                    1- 1869     ;;unsigned compare: left < lit (0x7D0=2000), size=2
     001C 2107                      1- 1870     	MOVIA	0x07
     001D 04rr                      1- 1871     	SUBAR	(_fullCount + 1),W
     001E 0903                      1- 1872     	BTRSS	STATUS,2
                                    1- 1873     	MGOTO	_00566_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020 21D0                      1- 1874     	MOVIA	0xd0
     0021 04rr                      1- 1875     	SUBAR	_fullCount,W
     0022                           1- 1876     _00566_DS_:
     0022 0803                      1- 1877     	BTRSS	STATUS,0
                                    1- 1878     	MGOTO	_00533_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1879     	.line	664, "main.c"; 	fullCount = 2000;
     0024 21D0                      1- 1880     	MOVIA	0xd0
                                    1- 1881     	BANKSEL	_fullCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 00rr                      1- 1882     	MOVAR	_fullCount
     0027 2107                      1- 1883     	MOVIA	0x07
     0028 00rr                      1- 1884     	MOVAR	(_fullCount + 1)
                                    1- 1885     	.line	665, "main.c"; 	chrgFullFlag = 1;
     0029 2101                      1- 1886     	MOVIA	0x01
                                    1- 1887     	BANKSEL	_chrgFullFlag
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1- 1888     	MOVAR	_chrgFullFlag
                                    1- 1889     	.line	667, "main.c"; 	PORTA |= 0X40;
                                    1- 1890     	BANKSEL	_PORTA
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 1Brr                      1- 1891     	BSR	_PORTA,6
                                    1- 1892     	MGOTO	_00533_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1893     _00525_DS_:
                                    1- 1894     	.line	676, "main.c"; 	PORTA |= 0X40;
                                    1- 1895     	BANKSEL	_PORTA
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 1Brr                      1- 1896     	BSR	_PORTA,6
                                    1- 1897     	.line	677, "main.c"; 	fullCount = 0;
                                    1- 1898     	BANKSEL	_fullCount
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 02rr                      1- 1899     	CLRR	_fullCount
     0033 02rr                      1- 1900     	CLRR	(_fullCount + 1)
                                    1- 1901     	.line	679, "main.c"; 	if(count500ms == 0 && pwStep < 7)
                                    1- 1902     	BANKSEL	_count500ms
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 01rr                      1- 1903     	MOVR	_count500ms,W
     0036 0903                      1- 1904     	BTRSS	STATUS,2
                                    1- 1905     	MGOTO	_00520_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1906     ;;unsigned compare: left < lit (0x7=7), size=1
     0038 2107                      1- 1907     	MOVIA	0x07
                                    1- 1908     	BANKSEL	_pwStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1909     	SUBAR	_pwStep,W
     003B 0C03                      1- 1910     	BTRSC	STATUS,0
                                    1- 1911     	MGOTO	_00520_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1912     	.line	681, "main.c"; 	if(lockLedStep < pwStep - 1)
     003D 01rr                      1- 1913     	MOVR	_pwStep,W
                                    1- 1914     	BANKSEL	r0x1048
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 00rr                      1- 1915     	MOVAR	r0x1048
                                    1- 1916     	BANKSEL	r0x1049
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 02rr                      1- 1917     	CLRR	r0x1049
     0042 21FF                      1- 1918     	MOVIA	0xff
                                    1- 1919     	BANKSEL	r0x1048
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 03rr                      1- 1920     	ADDAR	r0x1048,F
     0045 0C03                      1- 1921     	BTRSC	STATUS,0
                                    1- 1922     	MGOTO	_00005_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1923     	BANKSEL	r0x1049
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 06rr                      1- 1924     	DECR	r0x1049,F
     0049                           1- 1925     _00005_DS_:
                                    1- 1926     	BANKSEL	_lockLedStep
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 01rr                      1- 1927     	MOVR	_lockLedStep,W
                                    1- 1928     	BANKSEL	r0x104A
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 00rr                      1- 1929     	MOVAR	r0x104A
                                    1- 1930     ;;1	CLRR	r0x104B
     004D 2100                      1- 1931     	MOVIA	0x00
     004E 2580                      1- 1932     	ADDIA	0x80
                                    1- 1933     	BANKSEL	r0x104C
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 00rr                      1- 1934     	MOVAR	r0x104C
                                    1- 1935     	BANKSEL	r0x1049
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 01rr                      1- 1936     	MOVR	r0x1049,W
     0053 2580                      1- 1937     	ADDIA	0x80
                                    1- 1938     	BANKSEL	r0x104C
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 04rr                      1- 1939     	SUBAR	r0x104C,W
     0056 0903                      1- 1940     	BTRSS	STATUS,2
                                    1- 1941     	MGOTO	_00568_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1942     	BANKSEL	r0x1048
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 01rr                      1- 1943     	MOVR	r0x1048,W
                                    1- 1944     	BANKSEL	r0x104A
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 04rr                      1- 1945     	SUBAR	r0x104A,W
     005C                           1- 1946     _00568_DS_:
     005C 0C03                      1- 1947     	BTRSC	STATUS,0
                                    1- 1948     	MGOTO	_00515_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1949     	.line	683, "main.c"; 	if(++lockLedTime > 5)
                                    1- 1950     	BANKSEL	_lockLedTime
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 05rr                      1- 1951     	INCR	_lockLedTime,F
                                    1- 1952     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1953     ;;unsigned compare: left >= lit (0x6=6), size=1
     0060 2106                      1- 1954     	MOVIA	0x06
     0061 04rr                      1- 1955     	SUBAR	_lockLedTime,W
     0062 0803                      1- 1956     	BTRSS	STATUS,0
                                    1- 1957     	MGOTO	_00516_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1958     	.line	684, "main.c"; 	lockLedStep = pwStep - 1;
                                    1- 1959     	BANKSEL	_pwStep
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 06rr                      1- 1960     	DECR	_pwStep,W
                                    1- 1961     	BANKSEL	_lockLedStep
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 00rr                      1- 1962     	MOVAR	_lockLedStep
                                    1- 1963     	MGOTO	_00516_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
     0069                           1- 1964     _00515_DS_:
                                    1- 1965     	.line	689, "main.c"; 	lockLedTime = 0;
                                    1- 1966     	BANKSEL	_lockLedTime
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 02rr                      1- 1967     	CLRR	_lockLedTime
     006B                           1- 1968     _00516_DS_:
                                    1- 1969     	.line	691, "main.c"; 	if(++ledStep > 6)
                                    1- 1970     	BANKSEL	_ledStep
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 05rr                      1- 1971     	INCR	_ledStep,F
                                    1- 1972     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1973     ;;unsigned compare: left >= lit (0x7=7), size=1
     006D 2107                      1- 1974     	MOVIA	0x07
     006E 04rr                      1- 1975     	SUBAR	_ledStep,W
     006F 0803                      1- 1976     	BTRSS	STATUS,0
                                    1- 1977     	MGOTO	_00520_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1978     	.line	692, "main.c"; 	ledStep = lockLedStep;
                                    1- 1979     	BANKSEL	_lockLedStep
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 01rr                      1- 1980     	MOVR	_lockLedStep,W
                                    1- 1981     	BANKSEL	_ledStep
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 00rr                      1- 1982     	MOVAR	_ledStep
     0075                           1- 1983     _00520_DS_:
                                    1- 1984     	.line	694, "main.c"; 	if(pwStep == 7)
                                    1- 1985     	BANKSEL	_pwStep
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 01rr                      1- 1986     	MOVR	_pwStep,W
     0077 2407                      1- 1987     	XORIA	0x07
     0078 0903                      1- 1988     	BTRSS	STATUS,2
                                    1- 1989     	MGOTO	_00533_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1990     	.line	696, "main.c"; 	ledStep = 6;	//亮灯不闪了
     007A 2106                      1- 1991     	MOVIA	0x06
                                    1- 1992     	BANKSEL	_ledStep
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 00rr                      1- 1993     	MOVAR	_ledStep
                                    1- 1994     	MGOTO	_00533_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
     007E                           1- 1995     _00531_DS_:
                                    1- 1996     	.line	704, "main.c"; 	chrgFullFlag = 0;
                                    1- 1997     	BANKSEL	_chrgFullFlag
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 02rr                      1- 1998     	CLRR	_chrgFullFlag
                                    1- 1999     	.line	705, "main.c"; 	chrgduty = 0;
                                    1- 2000     	BANKSEL	_chrgduty
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 02rr                      1- 2001     	CLRR	_chrgduty
                                    1- 2002     	.line	706, "main.c"; 	maxduty = 0;
                                    1- 2003     	BANKSEL	_maxduty
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 02rr                      1- 2004     	CLRR	_maxduty
                                    1- 2005     	.line	707, "main.c"; 	chrgStep = 0;
                                    1- 2006     	BANKSEL	_chrgStep
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 02rr                      1- 2007     	CLRR	_chrgStep
                                    1- 2008     	.line	708, "main.c"; 	lockLedStep = 0;
                                    1- 2009     	BANKSEL	_lockLedStep
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 02rr                      1- 2010     	CLRR	_lockLedStep
                                    1- 2011     	.line	709, "main.c"; 	chrgTime = 0;
                                    1- 2012     	BANKSEL	_chrgTime
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 02rr                      1- 2013     	CLRR	_chrgTime
     008A 02rr                      1- 2014     	CLRR	(_chrgTime + 1)
                                    1- 2015     	.line	710, "main.c"; 	if(workStep == 0)
                                    1- 2016     	BANKSEL	_workStep
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 01rr                      1- 2017     	MOVR	_workStep,W
     008D 0903                      1- 2018     	BTRSS	STATUS,2
                                    1- 2019     	MGOTO	_00006_DS_
     008E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2020     	.line	711, "main.c"; 	ledStep = 0;
                                    1- 2021     	BANKSEL	_ledStep
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 02rr                      1- 2022     	CLRR	_ledStep
     0091                           1- 2023     _00006_DS_:
                                    1- 2024     	.line	712, "main.c"; 	chrgFlag = 0;
                                    1- 2025     	BANKSEL	_Status
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 1Drr                      1- 2026     	BCR	_Status,3
                                    1- 2027     	.line	713, "main.c"; 	chrgTime = 0;	//重置充电计数
                                    1- 2028     	BANKSEL	_chrgTime
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 02rr                      1- 2029     	CLRR	_chrgTime
     0095 02rr                      1- 2030     	CLRR	(_chrgTime + 1)
     0096                           1- 2031     _00533_DS_:
                                    1- 2032     	.line	716, "main.c"; 	}
                                    1- 2033     	RETURN	
     0096 0010                      3-   40 m1      ret
                                    1- 2034     ; exit point of _chrgCtr
                                    1- 2036     ;***
                                    1- 2037     ;  pBlock Stats: dbName = C
                                    1- 2038     ;***
                                    1- 2039     ;has an exit
                                    1- 2040     ;1 compiler assigned register :
                                    1- 2041     ;   r0x104D
                                    1- 2042     ;; Starting pCode block
                                    1- 2043     .segment "code"; module=main, function=_keyRead2
                                    1- 2045     ;local variable name mapping:
     0000                           1- 2047     _keyRead2:
                                    1- 2048     ; 2 exit points
                                    1- 2049     	.line	613, "main.c"; 	char keyRead2(char keyStatus)	
                                    1- 2050     	BANKSEL	r0x104D
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2051     	MOVAR	r0x104D
                                    1- 2052     	.line	615, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2053     	MOVR	r0x104D,W
     0003 0D03                      1- 2054     	BTRSC	STATUS,2
                                    1- 2055     	MGOTO	_00503_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2056     	.line	617, "main.c"; 	keyCount2++;
                                    1- 2057     	BANKSEL	_keyCount2
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2058     	INCR	_keyCount2,F
                                    1- 2059     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 2060     	.line	618, "main.c"; 	if(keyCount2 >= 100)
     0007 2164                      1- 2061     	MOVIA	0x64
     0008 04rr                      1- 2062     	SUBAR	_keyCount2,W
     0009 0803                      1- 2063     	BTRSS	STATUS,0
                                    1- 2064     	MGOTO	_00504_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2065     	.line	620, "main.c"; 	keyCount2 = 100;
     000B 2164                      1- 2066     	MOVIA	0x64
     000C 00rr                      1- 2067     	MOVAR	_keyCount2
                                    1- 2068     	.line	621, "main.c"; 	if(!longPressFlag2)
                                    1- 2069     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Err                      1- 2070     	BTRSC	_Status,4
                                    1- 2071     	MGOTO	_00504_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2072     	.line	623, "main.c"; 	longPressFlag2 = 1;
     0010 1Arr                      1- 2073     	BSR	_Status,4
                                    1- 2074     	.line	624, "main.c"; 	return 2;
     0011 2102                      1- 2075     	MOVIA	0x02
                                    1- 2076     	MGOTO	_00505_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2077     ;;unsigned compare: left < lit (0x64=100), size=1
     0013                           1- 2078     _00503_DS_:
                                    1- 2079     	.line	630, "main.c"; 	if(keyCount2 >= 100)
     0013 2164                      1- 2080     	MOVIA	0x64
                                    1- 2081     	BANKSEL	_keyCount2
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 2082     	SUBAR	_keyCount2,W
     0016 0803                      1- 2083     	BTRSS	STATUS,0
                                    1- 2084     	MGOTO	_00500_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2085     	.line	632, "main.c"; 	keyCount2 = 0;
     0018 02rr                      1- 2086     	CLRR	_keyCount2
                                    1- 2087     	.line	633, "main.c"; 	longPressFlag2 = 0;
                                    1- 2088     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Err                      1- 2089     	BCR	_Status,4
                                    1- 2090     	.line	634, "main.c"; 	return	0;
     001B 2100                      1- 2091     	MOVIA	0x00
                                    1- 2092     	MGOTO	_00505_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2093     ;;unsigned compare: left < lit (0x4=4), size=1
     001D                           1- 2094     _00500_DS_:
                                    1- 2095     	.line	636, "main.c"; 	else if(keyCount2 >= 4)
     001D 2104                      1- 2096     	MOVIA	0x04
                                    1- 2097     	BANKSEL	_keyCount2
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 2098     	SUBAR	_keyCount2,W
     0020 0803                      1- 2099     	BTRSS	STATUS,0
                                    1- 2100     	MGOTO	_00501_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2101     	.line	638, "main.c"; 	keyCount2 = 0;
     0022 02rr                      1- 2102     	CLRR	_keyCount2
                                    1- 2103     	.line	639, "main.c"; 	return	1;
     0023 2101                      1- 2104     	MOVIA	0x01
                                    1- 2105     	MGOTO	_00505_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 2106     _00501_DS_:
                                    1- 2107     	.line	641, "main.c"; 	keyCount2 = 0;
                                    1- 2108     	BANKSEL	_keyCount2
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 2109     	CLRR	_keyCount2
     0027                           1- 2110     _00504_DS_:
                                    1- 2111     	.line	643, "main.c"; 	return 0;
     0027 2100                      1- 2112     	MOVIA	0x00
     0028                           1- 2113     _00505_DS_:
                                    1- 2114     	.line	644, "main.c"; 	}
                                    1- 2115     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 2116     ; exit point of _keyRead2
                                    1- 2118     ;***
                                    1- 2119     ;  pBlock Stats: dbName = C
                                    1- 2120     ;***
                                    1- 2121     ;has an exit
                                    1- 2122     ;1 compiler assigned register :
                                    1- 2123     ;   r0x104E
                                    1- 2124     ;; Starting pCode block
                                    1- 2125     .segment "code"; module=main, function=_keyRead
                                    1- 2127     ;local variable name mapping:
     0000                           1- 2129     _keyRead:
                                    1- 2130     ; 2 exit points
                                    1- 2131     	.line	579, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2132     	BANKSEL	r0x104E
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2133     	MOVAR	r0x104E
                                    1- 2134     	.line	581, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2135     	MOVR	r0x104E,W
     0003 0D03                      1- 2136     	BTRSC	STATUS,2
                                    1- 2137     	MGOTO	_00486_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2138     	.line	583, "main.c"; 	keyCount++;
                                    1- 2139     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2140     	INCR	_keyCount,F
                                    1- 2141     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 2142     	.line	584, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 2143     	MOVIA	0x64
     0008 04rr                      1- 2144     	SUBAR	_keyCount,W
     0009 0803                      1- 2145     	BTRSS	STATUS,0
                                    1- 2146     	MGOTO	_00487_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2147     	.line	586, "main.c"; 	keyCount = 100;
     000B 2164                      1- 2148     	MOVIA	0x64
     000C 00rr                      1- 2149     	MOVAR	_keyCount
                                    1- 2150     	.line	587, "main.c"; 	if(!longPressFlag)
                                    1- 2151     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Crr                      1- 2152     	BTRSC	_Status,1
                                    1- 2153     	MGOTO	_00487_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2154     	.line	589, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 2155     	BSR	_Status,1
                                    1- 2156     	.line	590, "main.c"; 	return 2;
     0011 2102                      1- 2157     	MOVIA	0x02
                                    1- 2158     	MGOTO	_00488_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2159     ;;unsigned compare: left < lit (0x64=100), size=1
     0013                           1- 2160     _00486_DS_:
                                    1- 2161     	.line	596, "main.c"; 	if(keyCount >= 100)
     0013 2164                      1- 2162     	MOVIA	0x64
                                    1- 2163     	BANKSEL	_keyCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 2164     	SUBAR	_keyCount,W
     0016 0803                      1- 2165     	BTRSS	STATUS,0
                                    1- 2166     	MGOTO	_00483_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2167     	.line	598, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 2168     	CLRR	_keyCount
                                    1- 2169     	.line	599, "main.c"; 	longPressFlag = 0;
                                    1- 2170     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Crr                      1- 2171     	BCR	_Status,1
                                    1- 2172     	.line	600, "main.c"; 	return	0;
     001B 2100                      1- 2173     	MOVIA	0x00
                                    1- 2174     	MGOTO	_00488_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2175     ;;unsigned compare: left < lit (0x4=4), size=1
     001D                           1- 2176     _00483_DS_:
                                    1- 2177     	.line	602, "main.c"; 	else if(keyCount >= 4)
     001D 2104                      1- 2178     	MOVIA	0x04
                                    1- 2179     	BANKSEL	_keyCount
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 2180     	SUBAR	_keyCount,W
     0020 0803                      1- 2181     	BTRSS	STATUS,0
                                    1- 2182     	MGOTO	_00484_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2183     	.line	604, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 2184     	CLRR	_keyCount
                                    1- 2185     	.line	605, "main.c"; 	return	1;
     0023 2101                      1- 2186     	MOVIA	0x01
                                    1- 2187     	MGOTO	_00488_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 2188     _00484_DS_:
                                    1- 2189     	.line	607, "main.c"; 	keyCount = 0;
                                    1- 2190     	BANKSEL	_keyCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 2191     	CLRR	_keyCount
     0027                           1- 2192     _00487_DS_:
                                    1- 2193     	.line	609, "main.c"; 	return 0;
     0027 2100                      1- 2194     	MOVIA	0x00
     0028                           1- 2195     _00488_DS_:
                                    1- 2196     	.line	610, "main.c"; 	}
                                    1- 2197     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 2198     ; exit point of _keyRead
                                    1- 2200     ;***
                                    1- 2201     ;  pBlock Stats: dbName = C
                                    1- 2202     ;***
                                    1- 2203     ;has an exit
                                    1- 2204     ;functions called:
                                    1- 2205     ;   _LedInput
                                    1- 2206     ;   _pwmStop
                                    1- 2207     ;   _LedInput
                                    1- 2208     ;   _pwmStop
                                    1- 2209     ;; Starting pCode block
                                    1- 2210     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2212     _gotoSleep:
                                    1- 2213     ; 2 exit points
                                    1- 2214     	.line	553, "main.c"; 	LedInput();
                                    1- 2215     	MCALL	_LedInput
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2216     	.line	554, "main.c"; 	sleepTime = 0;
                                    1- 2217     	BANKSEL	_sleepTime
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 02rr                      1- 2218     	CLRR	_sleepTime
     0003 02rr                      1- 2219     	CLRR	(_sleepTime + 1)
                                    1- 2220     	.line	556, "main.c"; 	pwmStop();
                                    1- 2221     	MCALL	_pwmStop
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2222     	.line	557, "main.c"; 	workStep = 0;
                                    1- 2223     	BANKSEL	_workStep
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1- 2224     	CLRR	_workStep
                                    1- 2225     	.line	558, "main.c"; 	AWUCON = 0xA4;
     0007 21A4                      1- 2226     	MOVIA	0xa4
     0008 00rr                      1- 2227     	MOVAR	_AWUCON
                                    1- 2228     	.line	559, "main.c"; 	redLedFlag = 0;
                                    1- 2229     	BANKSEL	_Status
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 1Drr                      1- 2230     	BCR	_Status,2
                                    1- 2231     	.line	562, "main.c"; 	INTE =  C_INT_PABKey;
     000B 2102                      1- 2232     	MOVIA	0x02
     000C 00rr                      1- 2233     	MOVAR	_INTE
                                    1- 2234     	.line	563, "main.c"; 	PCON =  C_LVR_En;	
     000D 2108                      1- 2235     	MOVIA	0x08
     000E 00rr                      1- 2236     	MOVAR	_PCON
                                    1- 2237     	.line	564, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     000F 02rr                      1- 2238     	CLRR	_INTF
                                    1- 2239     	.line	565, "main.c"; 	CLRWDT();
     0010 0002                      1- 2240     	clrwdt
                                    1- 2241     	.line	566, "main.c"; 	ENI();
     0011 0004                      1- 2242     	ENI
                                    1- 2243     	.line	567, "main.c"; 	SLEEP();
     0012 0001                      1- 2244     	sleep
                                    1- 2245     	.line	568, "main.c"; 	AWUCON = 0x00;
     0013 02rr                      1- 2246     	CLRR	_AWUCON
                                    1- 2247     	.line	569, "main.c"; 	PORTA = 0x00;
                                    1- 2248     	BANKSEL	_PORTA
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 02rr                      1- 2249     	CLRR	_PORTA
                                    1- 2250     	.line	570, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     0016 2101                      1- 2251     	MOVIA	0x01
     0017 00rr                      1- 2252     	MOVAR	_INTE
                                    1- 2253     	.line	571, "main.c"; 	INTF = 0;
     0018 02rr                      1- 2254     	CLRR	_INTF
                                    1- 2255     	.line	573, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En ;				// Enable WDT ,  Enable LVR
     0019 21A8                      1- 2256     	MOVIA	0xa8
     001A 00rr                      1- 2257     	MOVAR	_PCON
                                    1- 2258     	.line	576, "main.c"; 	}
                                    1- 2259     	RETURN	
     001B 0010                      3-   40 m1      ret
                                    1- 2260     ; exit point of _gotoSleep
                                    1- 2262     ;***
                                    1- 2263     ;  pBlock Stats: dbName = C
                                    1- 2264     ;***
                                    1- 2265     ;has an exit
                                    1- 2266     ;; Starting pCode block
                                    1- 2267     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2269     _pwmStop:
                                    1- 2270     ; 2 exit points
                                    1- 2271     	.line	545, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2272     	CLRA	
     0001 00rr                      1- 2273     	SFUN	_T2CR1
                                    1- 2274     	.line	546, "main.c"; 	}
                                    1- 2275     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2276     ; exit point of _pwmStop
                                    1- 2278     ;***
                                    1- 2279     ;  pBlock Stats: dbName = C
                                    1- 2280     ;***
                                    1- 2281     ;has an exit
                                    1- 2282     ;1 compiler assigned register :
                                    1- 2283     ;   r0x1050
                                    1- 2284     ;; Starting pCode block
                                    1- 2285     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2287     _pwmInit:
                                    1- 2288     ; 2 exit points
                                    1- 2289     	.line	533, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2290     	SFUNR	_T2CR1
                                    1- 2291     	BANKSEL	r0x1050
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2292     	MOVAR	r0x1050
     0003 0Frr                      1- 2293     	BTRSC	r0x1050,7
                                    1- 2294     	.line	534, "main.c"; 	return;
                                    1- 2295     	MGOTO	_00463_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2296     	.line	535, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2297     	CLRR	_TMRH
                                    1- 2298     	.line	536, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 2299     	MOVIA	0x64
     0007 00rr                      1- 2300     	SFUN	_TMR2
                                    1- 2301     	.line	539, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2302     	CLRA	
     0009 00rr                      1- 2303     	SFUN	_T2CR2
                                    1- 2304     	.line	540, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2305     	MOVIA	0x83
     000B 00rr                      1- 2306     	SFUN	_T2CR1
     000C                           1- 2307     _00463_DS_:
                                    1- 2308     	.line	541, "main.c"; 	}
                                    1- 2309     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2310     ; exit point of _pwmInit
                                    1- 2312     ;***
                                    1- 2313     ;  pBlock Stats: dbName = C
                                    1- 2314     ;***
                                    1- 2315     ;has an exit
                                    1- 2316     ;functions called:
                                    1- 2317     ;   _delay
                                    1- 2318     ;   _LedInput
                                    1- 2319     ;   _delay
                                    1- 2320     ;   _LedInput
                                    1- 2321     ;1 compiler assigned register :
                                    1- 2322     ;   r0x1051
                                    1- 2323     ;; Starting pCode block
                                    1- 2324     .segment "code"; module=main, function=_LED6ON
     0000                           1- 2326     _LED6ON:
                                    1- 2327     ; 2 exit points
                                    1- 2328     	.line	522, "main.c"; 	L2OUT;
     0000 001r                      1- 2329     	IOSTR	_IOSTA
                                    1- 2330     	BANKSEL	r0x1051
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2331     	MOVAR	r0x1051
     0003 1Crr                      1- 2332     	BCR	r0x1051,1
     0004 01rr                      1- 2333     	MOVR	r0x1051,W
     0005 000r                      1- 2334     	IOST	_IOSTA
                                    1- 2335     	.line	523, "main.c"; 	L1OUT;
     0006 001r                      1- 2336     	IOSTR	_IOSTB
     0007 00rr                      1- 2337     	MOVAR	r0x1051
     0008 1Crr                      1- 2338     	BCR	r0x1051,1
     0009 01rr                      1- 2339     	MOVR	r0x1051,W
     000A 000r                      1- 2340     	IOST	_IOSTB
                                    1- 2341     	.line	524, "main.c"; 	L1H;
     000B 18rr                      1- 2342     	BSR	_PORTB,1
                                    1- 2343     	.line	525, "main.c"; 	L2L;
                                    1- 2344     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Crr                      1- 2345     	BCR	_PORTA,1
                                    1- 2346     	.line	526, "main.c"; 	delay(100);
     000E 2164                      1- 2347     	MOVIA	0x64
                                    1- 2348     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2349     	.line	527, "main.c"; 	LedInput();
                                    1- 2350     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2351     	.line	528, "main.c"; 	}
                                    1- 2352     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2353     ; exit point of _LED6ON
                                    1- 2355     ;***
                                    1- 2356     ;  pBlock Stats: dbName = C
                                    1- 2357     ;***
                                    1- 2358     ;has an exit
                                    1- 2359     ;functions called:
                                    1- 2360     ;   _delay
                                    1- 2361     ;   _LedInput
                                    1- 2362     ;   _delay
                                    1- 2363     ;   _LedInput
                                    1- 2364     ;1 compiler assigned register :
                                    1- 2365     ;   r0x1052
                                    1- 2366     ;; Starting pCode block
                                    1- 2367     .segment "code"; module=main, function=_LED5ON
     0000                           1- 2369     _LED5ON:
                                    1- 2370     ; 2 exit points
                                    1- 2371     	.line	511, "main.c"; 	L2OUT;
     0000 001r                      1- 2372     	IOSTR	_IOSTA
                                    1- 2373     	BANKSEL	r0x1052
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2374     	MOVAR	r0x1052
     0003 1Crr                      1- 2375     	BCR	r0x1052,1
     0004 01rr                      1- 2376     	MOVR	r0x1052,W
     0005 000r                      1- 2377     	IOST	_IOSTA
                                    1- 2378     	.line	512, "main.c"; 	L1OUT;
     0006 001r                      1- 2379     	IOSTR	_IOSTB
     0007 00rr                      1- 2380     	MOVAR	r0x1052
     0008 1Crr                      1- 2381     	BCR	r0x1052,1
     0009 01rr                      1- 2382     	MOVR	r0x1052,W
     000A 000r                      1- 2383     	IOST	_IOSTB
                                    1- 2384     	.line	513, "main.c"; 	L2H;
                                    1- 2385     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 18rr                      1- 2386     	BSR	_PORTA,1
                                    1- 2387     	.line	514, "main.c"; 	L1L;
     000D 1Crr                      1- 2388     	BCR	_PORTB,1
                                    1- 2389     	.line	515, "main.c"; 	delay(100);
     000E 2164                      1- 2390     	MOVIA	0x64
                                    1- 2391     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2392     	.line	516, "main.c"; 	LedInput();
                                    1- 2393     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2394     	.line	517, "main.c"; 	}
                                    1- 2395     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2396     ; exit point of _LED5ON
                                    1- 2398     ;***
                                    1- 2399     ;  pBlock Stats: dbName = C
                                    1- 2400     ;***
                                    1- 2401     ;has an exit
                                    1- 2402     ;functions called:
                                    1- 2403     ;   _delay
                                    1- 2404     ;   _LedInput
                                    1- 2405     ;   _delay
                                    1- 2406     ;   _LedInput
                                    1- 2407     ;1 compiler assigned register :
                                    1- 2408     ;   r0x1053
                                    1- 2409     ;; Starting pCode block
                                    1- 2410     .segment "code"; module=main, function=_LED4ON
     0000                           1- 2412     _LED4ON:
                                    1- 2413     ; 2 exit points
                                    1- 2414     	.line	501, "main.c"; 	L3OUT;
     0000 001r                      1- 2415     	IOSTR	_IOSTA
                                    1- 2416     	BANKSEL	r0x1053
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2417     	MOVAR	r0x1053
     0003 1Crr                      1- 2418     	BCR	r0x1053,0
     0004 01rr                      1- 2419     	MOVR	r0x1053,W
     0005 000r                      1- 2420     	IOST	_IOSTA
                                    1- 2421     	.line	502, "main.c"; 	L2OUT;
     0006 001r                      1- 2422     	IOSTR	_IOSTA
     0007 00rr                      1- 2423     	MOVAR	r0x1053
     0008 1Crr                      1- 2424     	BCR	r0x1053,1
     0009 01rr                      1- 2425     	MOVR	r0x1053,W
     000A 000r                      1- 2426     	IOST	_IOSTA
                                    1- 2427     	.line	503, "main.c"; 	L3H;
                                    1- 2428     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 18rr                      1- 2429     	BSR	_PORTA,0
                                    1- 2430     	.line	504, "main.c"; 	L2L;
     000D 1Crr                      1- 2431     	BCR	_PORTA,1
                                    1- 2432     	.line	505, "main.c"; 	delay(100);
     000E 2164                      1- 2433     	MOVIA	0x64
                                    1- 2434     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2435     	.line	506, "main.c"; 	LedInput();
                                    1- 2436     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2437     	.line	507, "main.c"; 	}
                                    1- 2438     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2439     ; exit point of _LED4ON
                                    1- 2441     ;***
                                    1- 2442     ;  pBlock Stats: dbName = C
                                    1- 2443     ;***
                                    1- 2444     ;has an exit
                                    1- 2445     ;functions called:
                                    1- 2446     ;   _delay
                                    1- 2447     ;   _LedInput
                                    1- 2448     ;   _delay
                                    1- 2449     ;   _LedInput
                                    1- 2450     ;1 compiler assigned register :
                                    1- 2451     ;   r0x1054
                                    1- 2452     ;; Starting pCode block
                                    1- 2453     .segment "code"; module=main, function=_LED3ON
     0000                           1- 2455     _LED3ON:
                                    1- 2456     ; 2 exit points
                                    1- 2457     	.line	491, "main.c"; 	L3OUT;
     0000 001r                      1- 2458     	IOSTR	_IOSTA
                                    1- 2459     	BANKSEL	r0x1054
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2460     	MOVAR	r0x1054
     0003 1Crr                      1- 2461     	BCR	r0x1054,0
     0004 01rr                      1- 2462     	MOVR	r0x1054,W
     0005 000r                      1- 2463     	IOST	_IOSTA
                                    1- 2464     	.line	492, "main.c"; 	L1OUT;
     0006 001r                      1- 2465     	IOSTR	_IOSTB
     0007 00rr                      1- 2466     	MOVAR	r0x1054
     0008 1Crr                      1- 2467     	BCR	r0x1054,1
     0009 01rr                      1- 2468     	MOVR	r0x1054,W
     000A 000r                      1- 2469     	IOST	_IOSTB
                                    1- 2470     	.line	493, "main.c"; 	L1H;
     000B 18rr                      1- 2471     	BSR	_PORTB,1
                                    1- 2472     	.line	494, "main.c"; 	L3L;
                                    1- 2473     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Crr                      1- 2474     	BCR	_PORTA,0
                                    1- 2475     	.line	495, "main.c"; 	delay(100);
     000E 2164                      1- 2476     	MOVIA	0x64
                                    1- 2477     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2478     	.line	496, "main.c"; 	LedInput();
                                    1- 2479     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2480     	.line	497, "main.c"; 	}
                                    1- 2481     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2482     ; exit point of _LED3ON
                                    1- 2484     ;***
                                    1- 2485     ;  pBlock Stats: dbName = C
                                    1- 2486     ;***
                                    1- 2487     ;has an exit
                                    1- 2488     ;functions called:
                                    1- 2489     ;   _delay
                                    1- 2490     ;   _LedInput
                                    1- 2491     ;   _delay
                                    1- 2492     ;   _LedInput
                                    1- 2493     ;1 compiler assigned register :
                                    1- 2494     ;   r0x1055
                                    1- 2495     ;; Starting pCode block
                                    1- 2496     .segment "code"; module=main, function=_LED2ON
     0000                           1- 2498     _LED2ON:
                                    1- 2499     ; 2 exit points
                                    1- 2500     	.line	481, "main.c"; 	L2OUT;
     0000 001r                      1- 2501     	IOSTR	_IOSTA
                                    1- 2502     	BANKSEL	r0x1055
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2503     	MOVAR	r0x1055
     0003 1Crr                      1- 2504     	BCR	r0x1055,1
     0004 01rr                      1- 2505     	MOVR	r0x1055,W
     0005 000r                      1- 2506     	IOST	_IOSTA
                                    1- 2507     	.line	482, "main.c"; 	L3OUT;
     0006 001r                      1- 2508     	IOSTR	_IOSTA
     0007 00rr                      1- 2509     	MOVAR	r0x1055
     0008 1Crr                      1- 2510     	BCR	r0x1055,0
     0009 01rr                      1- 2511     	MOVR	r0x1055,W
     000A 000r                      1- 2512     	IOST	_IOSTA
                                    1- 2513     	.line	483, "main.c"; 	L2H;
                                    1- 2514     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 18rr                      1- 2515     	BSR	_PORTA,1
                                    1- 2516     	.line	484, "main.c"; 	L3L;
     000D 1Crr                      1- 2517     	BCR	_PORTA,0
                                    1- 2518     	.line	485, "main.c"; 	delay(100);
     000E 2164                      1- 2519     	MOVIA	0x64
                                    1- 2520     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2521     	.line	486, "main.c"; 	LedInput();
                                    1- 2522     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2523     	.line	487, "main.c"; 	}
                                    1- 2524     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2525     ; exit point of _LED2ON
                                    1- 2527     ;***
                                    1- 2528     ;  pBlock Stats: dbName = C
                                    1- 2529     ;***
                                    1- 2530     ;has an exit
                                    1- 2531     ;functions called:
                                    1- 2532     ;   _delay
                                    1- 2533     ;   _LedInput
                                    1- 2534     ;   _delay
                                    1- 2535     ;   _LedInput
                                    1- 2536     ;1 compiler assigned register :
                                    1- 2537     ;   r0x1056
                                    1- 2538     ;; Starting pCode block
                                    1- 2539     .segment "code"; module=main, function=_LED1ON
     0000                           1- 2541     _LED1ON:
                                    1- 2542     ; 2 exit points
                                    1- 2543     	.line	471, "main.c"; 	L3OUT;
     0000 001r                      1- 2544     	IOSTR	_IOSTA
                                    1- 2545     	BANKSEL	r0x1056
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2546     	MOVAR	r0x1056
     0003 1Crr                      1- 2547     	BCR	r0x1056,0
     0004 01rr                      1- 2548     	MOVR	r0x1056,W
     0005 000r                      1- 2549     	IOST	_IOSTA
                                    1- 2550     	.line	472, "main.c"; 	L1OUT;
     0006 001r                      1- 2551     	IOSTR	_IOSTB
     0007 00rr                      1- 2552     	MOVAR	r0x1056
     0008 1Crr                      1- 2553     	BCR	r0x1056,1
     0009 01rr                      1- 2554     	MOVR	r0x1056,W
     000A 000r                      1- 2555     	IOST	_IOSTB
                                    1- 2556     	.line	473, "main.c"; 	L3H;
                                    1- 2557     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 18rr                      1- 2558     	BSR	_PORTA,0
                                    1- 2559     	.line	474, "main.c"; 	L1L;
     000D 1Crr                      1- 2560     	BCR	_PORTB,1
                                    1- 2561     	.line	475, "main.c"; 	delay(100);
     000E 2164                      1- 2562     	MOVIA	0x64
                                    1- 2563     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2564     	.line	476, "main.c"; 	LedInput();
                                    1- 2565     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2566     	.line	477, "main.c"; 	}
                                    1- 2567     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2568     ; exit point of _LED1ON
                                    1- 2570     ;***
                                    1- 2571     ;  pBlock Stats: dbName = C
                                    1- 2572     ;***
                                    1- 2573     ;has an exit
                                    1- 2574     ;1 compiler assigned register :
                                    1- 2575     ;   r0x104F
                                    1- 2576     ;; Starting pCode block
                                    1- 2577     .segment "code"; module=main, function=_LedInput
     0000                           1- 2579     _LedInput:
                                    1- 2580     ; 2 exit points
                                    1- 2581     	.line	463, "main.c"; 	IOSTA |= 0x03;
     0000 001r                      1- 2582     	IOSTR	_IOSTA
                                    1- 2583     	BANKSEL	r0x104F
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2584     	MOVAR	r0x104F
     0003 2103                      1- 2585     	MOVIA	0x03
     0004 11rr                      1- 2586     	IORAR	r0x104F,F
     0005 01rr                      1- 2587     	MOVR	r0x104F,W
     0006 000r                      1- 2588     	IOST	_IOSTA
                                    1- 2589     	.line	464, "main.c"; 	IOSTB |= 0x02;
     0007 001r                      1- 2590     	IOSTR	_IOSTB
     0008 00rr                      1- 2591     	MOVAR	r0x104F
     0009 18rr                      1- 2592     	BSR	r0x104F,1
     000A 01rr                      1- 2593     	MOVR	r0x104F,W
     000B 000r                      1- 2594     	IOST	_IOSTB
                                    1- 2595     	.line	465, "main.c"; 	PORTA &= 0xFC;
     000C 21FC                      1- 2596     	MOVIA	0xfc
                                    1- 2597     	BANKSEL	_PORTA
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 10rr                      1- 2598     	ANDAR	_PORTA,F
                                    1- 2599     	.line	466, "main.c"; 	PORTB &= 0xFD;
     000F 1Crr                      1- 2600     	BCR	_PORTB,1
                                    1- 2601     	.line	467, "main.c"; 	}
                                    1- 2602     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2603     ; exit point of _LedInput
                                    1- 2605     ;***
                                    1- 2606     ;  pBlock Stats: dbName = C
                                    1- 2607     ;***
                                    1- 2608     ;has an exit
                                    1- 2609     ;functions called:
                                    1- 2610     ;   _LedInput
                                    1- 2611     ;   _LedInput
                                    1- 2612     ;   _LED6ON
                                    1- 2613     ;   _LED5ON
                                    1- 2614     ;   _LED4ON
                                    1- 2615     ;   _LED3ON
                                    1- 2616     ;   _LED2ON
                                    1- 2617     ;   _LED1ON
                                    1- 2618     ;   _LedInput
                                    1- 2619     ;   _LedInput
                                    1- 2620     ;   _LED6ON
                                    1- 2621     ;   _LED5ON
                                    1- 2622     ;   _LED4ON
                                    1- 2623     ;   _LED3ON
                                    1- 2624     ;   _LED2ON
                                    1- 2625     ;   _LED1ON
                                    1- 2626     ;; Starting pCode block
                                    1- 2627     .segment "code"; module=main, function=_ledShow
     0000                           1- 2629     _ledShow:
                                    1- 2630     ; 2 exit points
                                    1- 2631     	.line	405, "main.c"; 	if(ledDeadTime > 0 && workStep == 0)
                                    1- 2632     	BANKSEL	_ledDeadTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2633     	MOVR	_ledDeadTime,W
     0002 0D03                      1- 2634     	BTRSC	STATUS,2
                                    1- 2635     	MGOTO	_00360_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2636     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 2637     	MOVR	_workStep,W
     0006 0903                      1- 2638     	BTRSS	STATUS,2
                                    1- 2639     	MGOTO	_00360_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2640     	.line	407, "main.c"; 	if(ledDeadTime % 2 == 0)
                                    1- 2641     	BANKSEL	_ledDeadTime
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 0Crr                      1- 2642     	BTRSC	_ledDeadTime,0
                                    1- 2643     	MGOTO	_00357_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2644     	.line	409, "main.c"; 	ledStep = 0;
                                    1- 2645     	BANKSEL	_ledStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 02rr                      1- 2646     	CLRR	_ledStep
                                    1- 2647     	MGOTO	_00360_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 2648     _00357_DS_:
                                    1- 2649     	.line	413, "main.c"; 	ledStep = tempLedStep;
                                    1- 2650     	BANKSEL	_tempLedStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 2651     	MOVR	_tempLedStep,W
                                    1- 2652     	BANKSEL	_ledStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 2653     	MOVAR	_ledStep
     0012                           1- 2654     _00360_DS_:
                                    1- 2655     	.line	417, "main.c"; 	if(ledLightTime > 0 && pwStep > 0)
                                    1- 2656     	BANKSEL	_ledLightTime
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 2657     	MOVR	_ledLightTime,W
     0014 0D03                      1- 2658     	BTRSC	STATUS,2
                                    1- 2659     	MGOTO	_00368_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2660     	BANKSEL	_pwStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 2661     	MOVR	_pwStep,W
     0018 0D03                      1- 2662     	BTRSC	STATUS,2
                                    1- 2663     	MGOTO	_00368_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2664     	.line	419, "main.c"; 	if(ledLightTime > 0)
                                    1- 2665     	BANKSEL	_ledLightTime
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 01rr                      1- 2666     	MOVR	_ledLightTime,W
     001C 0D03                      1- 2667     	BTRSC	STATUS,2
                                    1- 2668     	MGOTO	_00368_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2669     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2670     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 2671     	.line	421, "main.c"; 	if(pwStep > 6 )
     001E 2107                      1- 2672     	MOVIA	0x07
                                    1- 2673     	BANKSEL	_pwStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 04rr                      1- 2674     	SUBAR	_pwStep,W
     0021 0803                      1- 2675     	BTRSS	STATUS,0
                                    1- 2676     	MGOTO	_00363_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2677     	.line	422, "main.c"; 	ledStep = 6;
     0023 2106                      1- 2678     	MOVIA	0x06
                                    1- 2679     	BANKSEL	_ledStep
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 00rr                      1- 2680     	MOVAR	_ledStep
                                    1- 2681     	MGOTO	_00368_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 2682     _00363_DS_:
                                    1- 2683     	.line	424, "main.c"; 	ledStep = pwStep;
                                    1- 2684     	BANKSEL	_pwStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 2685     	MOVR	_pwStep,W
                                    1- 2686     	BANKSEL	_ledStep
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 2687     	MOVAR	_ledStep
     002B                           1- 2688     _00368_DS_:
                                    1- 2689     	.line	427, "main.c"; 	if(shanshuoTime > 0 && workStep > 0 && pwStep == 0)
                                    1- 2690     	BANKSEL	_shanshuoTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1- 2691     	MOVR	_shanshuoTime,W
     002D 0D03                      1- 2692     	BTRSC	STATUS,2
                                    1- 2693     	MGOTO	_00374_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2694     	BANKSEL	_workStep
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 2695     	MOVR	_workStep,W
     0031 0D03                      1- 2696     	BTRSC	STATUS,2
                                    1- 2697     	MGOTO	_00374_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2698     	BANKSEL	_pwStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 2699     	MOVR	_pwStep,W
     0035 0903                      1- 2700     	BTRSS	STATUS,2
                                    1- 2701     	MGOTO	_00374_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2702     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 2703     	.line	429, "main.c"; 	if(count1s < 50)
     0037 2132                      1- 2704     	MOVIA	0x32
                                    1- 2705     	BANKSEL	_count1s
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 04rr                      1- 2706     	SUBAR	_count1s,W
     003A 0C03                      1- 2707     	BTRSC	STATUS,0
                                    1- 2708     	MGOTO	_00371_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2709     	.line	430, "main.c"; 	ledStep = workStep;
                                    1- 2710     	BANKSEL	_workStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 2711     	MOVR	_workStep,W
                                    1- 2712     	BANKSEL	_ledStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 00rr                      1- 2713     	MOVAR	_ledStep
                                    1- 2714     	MGOTO	_00374_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041                           1- 2715     _00371_DS_:
                                    1- 2716     	.line	432, "main.c"; 	ledStep = 0;
                                    1- 2717     	BANKSEL	_ledStep
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 2718     	CLRR	_ledStep
     0043                           1- 2719     _00374_DS_:
                                    1- 2720     	.line	435, "main.c"; 	LedInput();
                                    1- 2721     	MCALL	_LedInput
     0043 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2722     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2723     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 2724     	.line	436, "main.c"; 	switch(ledStep)
     0044 2109                      1- 2725     	MOVIA	0x09
                                    1- 2726     	BANKSEL	_ledStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 04rr                      1- 2727     	SUBAR	_ledStep,W
     0047 0C03                      1- 2728     	BTRSC	STATUS,0
                                    1- 2729     	MGOTO	_00387_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 21rr                      1- 2730     	MOVIA	((_00428_DS_ >> 8) & 0xff)
     004A 008A                      1- 2731     	MOVAR	PCHBUF
     004B 01rr                      1- 2732     	MOVR	_ledStep,W
     004C 25rr                      1- 2733     	ADDIA	_00428_DS_
     004D 0C03                      1- 2734     	BTRSC	STATUS,0
     004E 058A                      1- 2735     	INCR	PCHBUF,F
     004F 0082                      1- 2736     	MOVAR	PCL
     0050                           1- 2737     _00428_DS_:
                                    1- 2738     	MGOTO	_00377_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2739     	MGOTO	_00385_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2740     	MGOTO	_00384_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2741     	MGOTO	_00383_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2742     	MGOTO	_00382_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2743     	MGOTO	_00381_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2744     	MGOTO	_00380_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2745     	MGOTO	_00380_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2746     	MGOTO	_00380_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
     0059                           1- 2747     _00377_DS_:
                                    1- 2748     	.line	439, "main.c"; 	LedInput();
                                    1- 2749     	MCALL	_LedInput
     0059 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2750     	.line	440, "main.c"; 	break;
                                    1- 2751     	MGOTO	_00387_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B                           1- 2752     _00380_DS_:
                                    1- 2753     	.line	444, "main.c"; 	LED6ON();
                                    1- 2754     	MCALL	_LED6ON
     005B 2rrr                      3-   66 m1      LCALL rom_address
     005C                           1- 2755     _00381_DS_:
                                    1- 2756     	.line	446, "main.c"; 	LED5ON();
                                    1- 2757     	MCALL	_LED5ON
     005C 2rrr                      3-   66 m1      LCALL rom_address
     005D                           1- 2758     _00382_DS_:
                                    1- 2759     	.line	448, "main.c"; 	LED4ON();
                                    1- 2760     	MCALL	_LED4ON
     005D 2rrr                      3-   66 m1      LCALL rom_address
     005E                           1- 2761     _00383_DS_:
                                    1- 2762     	.line	450, "main.c"; 	LED3ON();
                                    1- 2763     	MCALL	_LED3ON
     005E 2rrr                      3-   66 m1      LCALL rom_address
     005F                           1- 2764     _00384_DS_:
                                    1- 2765     	.line	452, "main.c"; 	LED2ON();
                                    1- 2766     	MCALL	_LED2ON
     005F 2rrr                      3-   66 m1      LCALL rom_address
     0060                           1- 2767     _00385_DS_:
                                    1- 2768     	.line	454, "main.c"; 	LED1ON();
                                    1- 2769     	MCALL	_LED1ON
     0060 2rrr                      3-   66 m1      LCALL rom_address
     0061                           1- 2770     _00387_DS_:
                                    1- 2771     	.line	457, "main.c"; 	}
                                    1- 2772     	RETURN	
     0061 0010                      3-   40 m1      ret
                                    1- 2773     ; exit point of _ledShow
                                    1- 2775     ;***
                                    1- 2776     ;  pBlock Stats: dbName = C
                                    1- 2777     ;***
                                    1- 2778     ;has an exit
                                    1- 2779     ;functions called:
                                    1- 2780     ;   _LedInput
                                    1- 2781     ;   _LedInput
                                    1- 2782     ;; Starting pCode block
                                    1- 2783     .segment "code"; module=main, function=_initSys
     0000                           1- 2785     _initSys:
                                    1- 2786     ; 2 exit points
                                    1- 2787     	.line	373, "main.c"; 	DISI();
     0000 0013                      1- 2788     	DISI
                                    1- 2789     	.line	374, "main.c"; 	IOSTA = C_PA7_Input | C_PA5_Input  | C_PA3_Input | C_PA2_Input ;
     0001 21AC                      1- 2790     	MOVIA	0xac
     0002 000r                      1- 2791     	IOST	_IOSTA
                                    1- 2792     	.line	375, "main.c"; 	IOSTB = C_PB0_Input;
     0003 2101                      1- 2793     	MOVIA	0x01
     0004 000r                      1- 2794     	IOST	_IOSTB
                                    1- 2795     	.line	376, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2796     	CLRR	_PORTB
                                    1- 2797     	.line	377, "main.c"; 	PORTA = 0x00;
                                    1- 2798     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2799     	CLRR	_PORTA
                                    1- 2800     	.line	378, "main.c"; 	LedInput();
                                    1- 2801     	MCALL	_LedInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2802     	.line	379, "main.c"; 	APHCON = 0x7F;
     0009 217F                      1- 2803     	MOVIA	0x7f
     000A 000r                      1- 2804     	IOST	_APHCON
                                    1- 2805     	.line	380, "main.c"; 	BPHCON = 0xFF;
     000B 21FF                      1- 2806     	MOVIA	0xff
     000C 00rr                      1- 2807     	MOVAR	_BPHCON
                                    1- 2808     	.line	381, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 2809     	MOVAR	_ABPLCON
                                    1- 2810     	.line	383, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1- 2811     	MOVIA	0x01
     000F 00rr                      1- 2812     	MOVAR	_INTE
                                    1- 2813     	.line	385, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 2814     	CLRA	
     0011 000r                      1- 2815     	IOST	_PCON1
                                    1- 2816     	.line	387, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 2817     	MOVIA	0x37
     0013 00rr                      1- 2818     	MOVAR	_TMR0
                                    1- 2819     	.line	388, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0014 0200                      1- 2820     	CLRA	
     0015 0003                      1- 2821     	T0MD	
                                    1- 2822     	.line	390, "main.c"; 	PCON1 = C_TMR0_En;
     0016 2101                      1- 2823     	MOVIA	0x01
     0017 000r                      1- 2824     	IOST	_PCON1
                                    1- 2825     	.line	393, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0018 2188                      1- 2826     	MOVIA	0x88
     0019 00rr                      1- 2827     	MOVAR	_PCON
                                    1- 2828     	.line	396, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001A 2101                      1- 2829     	MOVIA	0x01
     001B 000r                      1- 2830     	IOST	_PCON1
                                    1- 2831     	.line	397, "main.c"; 	ENI();
     001C 0004                      1- 2832     	ENI
                                    1- 2833     	.line	398, "main.c"; 	}
                                    1- 2834     	RETURN	
     001D 0010                      3-   40 m1      ret
                                    1- 2835     ; exit point of _initSys
                                    1- 2837     ;***
                                    1- 2838     ;  pBlock Stats: dbName = C
                                    1- 2839     ;***
                                    1- 2840     ;has an exit
                                    1- 2841     ;functions called:
                                    1- 2842     ;   _pwmStop
                                    1- 2843     ;   _pwmStop
                                    1- 2844     ;; Starting pCode block
                                    1- 2845     .segment "code"; module=main, function=_powerOff
     0000                           1- 2847     _powerOff:
                                    1- 2848     ; 2 exit points
                                    1- 2849     	.line	364, "main.c"; 	workStep = 0;
                                    1- 2850     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2851     	CLRR	_workStep
                                    1- 2852     	.line	365, "main.c"; 	pwmStop();
                                    1- 2853     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2854     	.line	367, "main.c"; 	}
                                    1- 2855     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 2856     ; exit point of _powerOff
                                    1- 2858     ;***
                                    1- 2859     ;  pBlock Stats: dbName = C
                                    1- 2860     ;***
                                    1- 2861     ;has an exit
                                    1- 2862     ;functions called:
                                    1- 2863     ;   _keyRead
                                    1- 2864     ;   _pwmInit
                                    1- 2865     ;   _powerOff
                                    1- 2866     ;   _pwmInit
                                    1- 2867     ;   _keyRead2
                                    1- 2868     ;   _pwmInit
                                    1- 2869     ;   _keyRead
                                    1- 2870     ;   _pwmInit
                                    1- 2871     ;   _powerOff
                                    1- 2872     ;   _pwmInit
                                    1- 2873     ;   _keyRead2
                                    1- 2874     ;   _pwmInit
                                    1- 2875     ;1 compiler assigned register :
                                    1- 2876     ;   r0x1057
                                    1- 2877     ;; Starting pCode block
                                    1- 2878     .segment "code"; module=main, function=_keyCtr
                                    1- 2880     ;local variable name mapping:
     0000                           1- 2882     _keyCtr:
                                    1- 2883     ; 2 exit points
                                    1- 2884     	.line	265, "main.c"; 	char kclick = keyRead(0x80 & (~PORTA));
                                    1- 2885     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 2886     	COMR	_PORTA,W
                                    1- 2887     	BANKSEL	r0x1057
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 2888     	MOVAR	r0x1057
     0004 2180                      1- 2889     	MOVIA	0x80
     0005 10rr                      1- 2890     	ANDAR	r0x1057,F
     0006 01rr                      1- 2891     	MOVR	r0x1057,W
                                    1- 2892     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2893     	BANKSEL	r0x1057
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2894     	MOVAR	r0x1057
                                    1- 2895     	.line	266, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 2896     	XORIA	0x01
     000B 0903                      1- 2897     	BTRSS	STATUS,2
                                    1- 2898     	MGOTO	_00316_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2899     	.line	268, "main.c"; 	count500ms = 0;
                                    1- 2900     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 2901     	CLRR	_count500ms
                                    1- 2902     	.line	269, "main.c"; 	ledLightTime = 0;
                                    1- 2903     	BANKSEL	_ledLightTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2904     	CLRR	_ledLightTime
                                    1- 2905     	.line	270, "main.c"; 	if(workStep == 0)
                                    1- 2906     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 2907     	MOVR	_workStep,W
     0013 0903                      1- 2908     	BTRSS	STATUS,2
                                    1- 2909     	MGOTO	_00282_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2910     	.line	272, "main.c"; 	count1s = 0;
                                    1- 2911     	BANKSEL	_count1s
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 2912     	CLRR	_count1s
                                    1- 2913     	.line	273, "main.c"; 	ledLightTime = 3;
     0017 2103                      1- 2914     	MOVIA	0x03
                                    1- 2915     	BANKSEL	_ledLightTime
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 00rr                      1- 2916     	MOVAR	_ledLightTime
                                    1- 2917     	.line	274, "main.c"; 	prePwStep = 0;
                                    1- 2918     	BANKSEL	_prePwStep
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 02rr                      1- 2919     	CLRR	_prePwStep
                                    1- 2920     	.line	275, "main.c"; 	return;
                                    1- 2921     	MGOTO	_00343_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
     001D                           1- 2922     _00282_DS_:
                                    1- 2923     	.line	277, "main.c"; 	ledTime = 0;
                                    1- 2924     	BANKSEL	_ledTime
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1- 2925     	CLRR	_ledTime
                                    1- 2926     	.line	278, "main.c"; 	if(++workStep > 6)
                                    1- 2927     	BANKSEL	_workStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1- 2928     	INCR	_workStep,F
                                    1- 2929     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2930     ;;unsigned compare: left >= lit (0x7=7), size=1
     0021 2107                      1- 2931     	MOVIA	0x07
     0022 04rr                      1- 2932     	SUBAR	_workStep,W
     0023 0803                      1- 2933     	BTRSS	STATUS,0
                                    1- 2934     	MGOTO	_00284_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2935     	.line	279, "main.c"; 	workStep = 6;
     0025 2106                      1- 2936     	MOVIA	0x06
     0026 00rr                      1- 2937     	MOVAR	_workStep
     0027                           1- 2938     _00284_DS_:
                                    1- 2939     	.line	280, "main.c"; 	if(pwStep == 0)
                                    1- 2940     	BANKSEL	_pwStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 2941     	MOVR	_pwStep,W
     0029 0903                      1- 2942     	BTRSS	STATUS,2
                                    1- 2943     	MGOTO	_00286_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2944     	.line	281, "main.c"; 	shanshuoTime = 10;
     002B 210A                      1- 2945     	MOVIA	0x0a
                                    1- 2946     	BANKSEL	_shanshuoTime
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1- 2947     	MOVAR	_shanshuoTime
     002E                           1- 2948     _00286_DS_:
                                    1- 2949     	.line	282, "main.c"; 	if(workStep == 1)
                                    1- 2950     	BANKSEL	_workStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 2951     	MOVR	_workStep,W
     0030 2401                      1- 2952     	XORIA	0x01
     0031 0903                      1- 2953     	BTRSS	STATUS,2
                                    1- 2954     	MGOTO	_00302_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2955     	.line	284, "main.c"; 	maxDuty = 77;
     0033 214D                      1- 2956     	MOVIA	0x4d
                                    1- 2957     	BANKSEL	_maxDuty
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 2958     	MOVAR	_maxDuty
                                    1- 2959     	.line	285, "main.c"; 	ledLightTime = 0;
                                    1- 2960     	BANKSEL	_ledLightTime
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 02rr                      1- 2961     	CLRR	_ledLightTime
                                    1- 2962     	MGOTO	_00303_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
     0039                           1- 2963     _00302_DS_:
                                    1- 2964     	.line	287, "main.c"; 	else if(workStep == 2)
                                    1- 2965     	BANKSEL	_workStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1- 2966     	MOVR	_workStep,W
     003B 2402                      1- 2967     	XORIA	0x02
     003C 0903                      1- 2968     	BTRSS	STATUS,2
                                    1- 2969     	MGOTO	_00299_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2970     	.line	288, "main.c"; 	maxDuty = 81;
     003E 2151                      1- 2971     	MOVIA	0x51
                                    1- 2972     	BANKSEL	_maxDuty
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 00rr                      1- 2973     	MOVAR	_maxDuty
                                    1- 2974     	MGOTO	_00303_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042                           1- 2975     _00299_DS_:
                                    1- 2976     	.line	289, "main.c"; 	else if(workStep == 3)
                                    1- 2977     	BANKSEL	_workStep
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1- 2978     	MOVR	_workStep,W
     0044 2403                      1- 2979     	XORIA	0x03
     0045 0903                      1- 2980     	BTRSS	STATUS,2
                                    1- 2981     	MGOTO	_00296_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2982     	.line	290, "main.c"; 	maxDuty = 85;
     0047 2155                      1- 2983     	MOVIA	0x55
                                    1- 2984     	BANKSEL	_maxDuty
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1- 2985     	MOVAR	_maxDuty
                                    1- 2986     	MGOTO	_00303_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
     004B                           1- 2987     _00296_DS_:
                                    1- 2988     	.line	291, "main.c"; 	else if(workStep == 4)
                                    1- 2989     	BANKSEL	_workStep
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 01rr                      1- 2990     	MOVR	_workStep,W
     004D 2404                      1- 2991     	XORIA	0x04
     004E 0903                      1- 2992     	BTRSS	STATUS,2
                                    1- 2993     	MGOTO	_00293_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2994     	.line	292, "main.c"; 	maxDuty = 90;
     0050 215A                      1- 2995     	MOVIA	0x5a
                                    1- 2996     	BANKSEL	_maxDuty
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 00rr                      1- 2997     	MOVAR	_maxDuty
                                    1- 2998     	MGOTO	_00303_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
     0054                           1- 2999     _00293_DS_:
                                    1- 3000     	.line	293, "main.c"; 	else if(workStep == 5)
                                    1- 3001     	BANKSEL	_workStep
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 01rr                      1- 3002     	MOVR	_workStep,W
     0056 2405                      1- 3003     	XORIA	0x05
     0057 0903                      1- 3004     	BTRSS	STATUS,2
                                    1- 3005     	MGOTO	_00290_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3006     	.line	294, "main.c"; 	maxDuty = 93;
     0059 215D                      1- 3007     	MOVIA	0x5d
                                    1- 3008     	BANKSEL	_maxDuty
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 00rr                      1- 3009     	MOVAR	_maxDuty
                                    1- 3010     	MGOTO	_00303_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
     005D                           1- 3011     _00290_DS_:
                                    1- 3012     	.line	295, "main.c"; 	else if(workStep == 6)
                                    1- 3013     	BANKSEL	_workStep
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 01rr                      1- 3014     	MOVR	_workStep,W
     005F 2406                      1- 3015     	XORIA	0x06
     0060 0903                      1- 3016     	BTRSS	STATUS,2
                                    1- 3017     	MGOTO	_00303_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3018     	.line	296, "main.c"; 	maxDuty = 97;
     0062 2161                      1- 3019     	MOVIA	0x61
                                    1- 3020     	BANKSEL	_maxDuty
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 00rr                      1- 3021     	MOVAR	_maxDuty
     0065                           1- 3022     _00303_DS_:
                                    1- 3023     	.line	297, "main.c"; 	if(workStep > 0)
                                    1- 3024     	BANKSEL	_workStep
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 01rr                      1- 3025     	MOVR	_workStep,W
     0067 0D03                      1- 3026     	BTRSC	STATUS,2
                                    1- 3027     	MGOTO	_00305_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3028     	.line	299, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 3029     	BANKSEL	_maxDuty
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 01rr                      1- 3030     	MOVR	_maxDuty,W
     006B 00rr                      1- 3031     	SFUN	_PWM2DUTY
                                    1- 3032     	.line	300, "main.c"; 	pwmInit();
                                    1- 3033     	MCALL	_pwmInit
     006C 2rrr                      3-   66 m1      LCALL rom_address
     006D                           1- 3034     _00305_DS_:
                                    1- 3035     	.line	302, "main.c"; 	ledStep = workStep;
                                    1- 3036     	BANKSEL	_workStep
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 01rr                      1- 3037     	MOVR	_workStep,W
                                    1- 3038     	BANKSEL	_ledStep
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 00rr                      1- 3039     	MOVAR	_ledStep
                                    1- 3040     	MGOTO	_00317_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
     0072                           1- 3041     _00316_DS_:
                                    1- 3042     	.line	304, "main.c"; 	else if(kclick == 2)
                                    1- 3043     	BANKSEL	r0x1057
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 01rr                      1- 3044     	MOVR	r0x1057,W
     0074 2402                      1- 3045     	XORIA	0x02
     0075 0903                      1- 3046     	BTRSS	STATUS,2
                                    1- 3047     	MGOTO	_00317_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3048     	.line	306, "main.c"; 	if(workStep > 0)
                                    1- 3049     	BANKSEL	_workStep
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 01rr                      1- 3050     	MOVR	_workStep,W
     0079 0D03                      1- 3051     	BTRSC	STATUS,2
                                    1- 3052     	MGOTO	_00311_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3053     	.line	308, "main.c"; 	powerOff();
                                    1- 3054     	MCALL	_powerOff
     007B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3055     	MGOTO	_00312_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
     007D                           1- 3056     _00311_DS_:
                                    1- 3057     	.line	312, "main.c"; 	if(pwStep == 10)
                                    1- 3058     	BANKSEL	_pwStep
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 01rr                      1- 3059     	MOVR	_pwStep,W
     007F 240A                      1- 3060     	XORIA	0x0a
     0080 0903                      1- 3061     	BTRSS	STATUS,2
                                    1- 3062     	MGOTO	_00307_DS_
     0081 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3063     	.line	314, "main.c"; 	sleepTime = 0;
                                    1- 3064     	BANKSEL	_sleepTime
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 02rr                      1- 3065     	CLRR	_sleepTime
     0084 02rr                      1- 3066     	CLRR	(_sleepTime + 1)
                                    1- 3067     	.line	315, "main.c"; 	return;
                                    1- 3068     	MGOTO	_00343_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
     0086                           1- 3069     _00307_DS_:
                                    1- 3070     	.line	317, "main.c"; 	ledLightTime = 0;
                                    1- 3071     	BANKSEL	_ledLightTime
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 02rr                      1- 3072     	CLRR	_ledLightTime
                                    1- 3073     	.line	318, "main.c"; 	ledStep = 1;
     0088 2101                      1- 3074     	MOVIA	0x01
                                    1- 3075     	BANKSEL	_ledStep
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 00rr                      1- 3076     	MOVAR	_ledStep
                                    1- 3077     	.line	319, "main.c"; 	workStep = 1;
                                    1- 3078     	BANKSEL	_workStep
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 00rr                      1- 3079     	MOVAR	_workStep
                                    1- 3080     	.line	320, "main.c"; 	PWM2DUTY = 85;
     008D 2155                      1- 3081     	MOVIA	0x55
     008E 00rr                      1- 3082     	SFUN	_PWM2DUTY
                                    1- 3083     	.line	321, "main.c"; 	currentDuty = 85;
                                    1- 3084     	BANKSEL	_currentDuty
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 00rr                      1- 3085     	MOVAR	_currentDuty
                                    1- 3086     	.line	322, "main.c"; 	maxDuty = 77;
     0091 214D                      1- 3087     	MOVIA	0x4d
                                    1- 3088     	BANKSEL	_maxDuty
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 00rr                      1- 3089     	MOVAR	_maxDuty
                                    1- 3090     	.line	323, "main.c"; 	pwmInit();
                                    1- 3091     	MCALL	_pwmInit
     0094 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3092     	.line	324, "main.c"; 	if(pwStep == 0)
                                    1- 3093     	BANKSEL	_pwStep
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 01rr                      1- 3094     	MOVR	_pwStep,W
     0097 0903                      1- 3095     	BTRSS	STATUS,2
                                    1- 3096     	MGOTO	_00312_DS_
     0098 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3097     	.line	325, "main.c"; 	shanshuoTime = 10;
     0099 210A                      1- 3098     	MOVIA	0x0a
                                    1- 3099     	BANKSEL	_shanshuoTime
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 00rr                      1- 3100     	MOVAR	_shanshuoTime
     009C                           1- 3101     _00312_DS_:
                                    1- 3102     	.line	328, "main.c"; 	ledStep = workStep;
                                    1- 3103     	BANKSEL	_workStep
     009C rrrr                      3-  110 m1      .banksel ram_address
     009D 01rr                      1- 3104     	MOVR	_workStep,W
                                    1- 3105     	BANKSEL	_ledStep
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 00rr                      1- 3106     	MOVAR	_ledStep
     00A0                           1- 3107     _00317_DS_:
                                    1- 3108     	.line	330, "main.c"; 	if(keyRead2(0x20 & (~PORTA)))
                                    1- 3109     	BANKSEL	_PORTA
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 07rr                      1- 3110     	COMR	_PORTA,W
                                    1- 3111     	BANKSEL	r0x1057
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 00rr                      1- 3112     	MOVAR	r0x1057
     00A4 2120                      1- 3113     	MOVIA	0x20
     00A5 10rr                      1- 3114     	ANDAR	r0x1057,F
     00A6 01rr                      1- 3115     	MOVR	r0x1057,W
                                    1- 3116     	MCALL	_keyRead2
     00A7 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3117     	BANKSEL	r0x1057
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 00rr                      1- 3118     	MOVAR	r0x1057
     00AA 01rr                      1- 3119     	MOVR	r0x1057,W
     00AB 0D03                      1- 3120     	BTRSC	STATUS,2
                                    1- 3121     	MGOTO	_00343_DS_
     00AC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3122     	.line	332, "main.c"; 	if(workStep > 0)
                                    1- 3123     	BANKSEL	_workStep
     00AD rrrr                      3-  110 m1      .banksel ram_address
     00AE 01rr                      1- 3124     	MOVR	_workStep,W
     00AF 0D03                      1- 3125     	BTRSC	STATUS,2
                                    1- 3126     	MGOTO	_00343_DS_
     00B0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3127     	.line	334, "main.c"; 	if(--workStep < 1)
     00B1 06rr                      1- 3128     	DECR	_workStep,F
                                    1- 3129     ;;unsigned compare: left < lit (0x1=1), size=1
     00B2 2101                      1- 3130     	MOVIA	0x01
     00B3 04rr                      1- 3131     	SUBAR	_workStep,W
     00B4 0C03                      1- 3132     	BTRSC	STATUS,0
                                    1- 3133     	MGOTO	_00319_DS_
     00B5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3134     	.line	335, "main.c"; 	workStep = 1;
     00B6 2101                      1- 3135     	MOVIA	0x01
     00B7 00rr                      1- 3136     	MOVAR	_workStep
     00B8                           1- 3137     _00319_DS_:
                                    1- 3138     	.line	336, "main.c"; 	if(workStep == 1)
                                    1- 3139     	BANKSEL	_workStep
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 01rr                      1- 3140     	MOVR	_workStep,W
     00BA 2401                      1- 3141     	XORIA	0x01
     00BB 0903                      1- 3142     	BTRSS	STATUS,2
                                    1- 3143     	MGOTO	_00335_DS_
     00BC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3144     	.line	338, "main.c"; 	maxDuty = 77;
     00BD 214D                      1- 3145     	MOVIA	0x4d
                                    1- 3146     	BANKSEL	_maxDuty
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 00rr                      1- 3147     	MOVAR	_maxDuty
                                    1- 3148     	.line	339, "main.c"; 	ledLightTime = 0;
                                    1- 3149     	BANKSEL	_ledLightTime
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 02rr                      1- 3150     	CLRR	_ledLightTime
                                    1- 3151     	MGOTO	_00336_DS_
     00C2 3rrr                      3-   63 m1      LGOTO rom_address
     00C3                           1- 3152     _00335_DS_:
                                    1- 3153     	.line	341, "main.c"; 	else if(workStep == 2)
                                    1- 3154     	BANKSEL	_workStep
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 01rr                      1- 3155     	MOVR	_workStep,W
     00C5 2402                      1- 3156     	XORIA	0x02
     00C6 0903                      1- 3157     	BTRSS	STATUS,2
                                    1- 3158     	MGOTO	_00332_DS_
     00C7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3159     	.line	342, "main.c"; 	maxDuty = 81;
     00C8 2151                      1- 3160     	MOVIA	0x51
                                    1- 3161     	BANKSEL	_maxDuty
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 00rr                      1- 3162     	MOVAR	_maxDuty
                                    1- 3163     	MGOTO	_00336_DS_
     00CB 3rrr                      3-   63 m1      LGOTO rom_address
     00CC                           1- 3164     _00332_DS_:
                                    1- 3165     	.line	343, "main.c"; 	else if(workStep == 3)
                                    1- 3166     	BANKSEL	_workStep
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 01rr                      1- 3167     	MOVR	_workStep,W
     00CE 2403                      1- 3168     	XORIA	0x03
     00CF 0903                      1- 3169     	BTRSS	STATUS,2
                                    1- 3170     	MGOTO	_00329_DS_
     00D0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3171     	.line	344, "main.c"; 	maxDuty = 85;
     00D1 2155                      1- 3172     	MOVIA	0x55
                                    1- 3173     	BANKSEL	_maxDuty
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 00rr                      1- 3174     	MOVAR	_maxDuty
                                    1- 3175     	MGOTO	_00336_DS_
     00D4 3rrr                      3-   63 m1      LGOTO rom_address
     00D5                           1- 3176     _00329_DS_:
                                    1- 3177     	.line	345, "main.c"; 	else if(workStep == 4)
                                    1- 3178     	BANKSEL	_workStep
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 01rr                      1- 3179     	MOVR	_workStep,W
     00D7 2404                      1- 3180     	XORIA	0x04
     00D8 0903                      1- 3181     	BTRSS	STATUS,2
                                    1- 3182     	MGOTO	_00326_DS_
     00D9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3183     	.line	346, "main.c"; 	maxDuty = 90;
     00DA 215A                      1- 3184     	MOVIA	0x5a
                                    1- 3185     	BANKSEL	_maxDuty
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 00rr                      1- 3186     	MOVAR	_maxDuty
                                    1- 3187     	MGOTO	_00336_DS_
     00DD 3rrr                      3-   63 m1      LGOTO rom_address
     00DE                           1- 3188     _00326_DS_:
                                    1- 3189     	.line	347, "main.c"; 	else if(workStep == 5)
                                    1- 3190     	BANKSEL	_workStep
     00DE rrrr                      3-  110 m1      .banksel ram_address
     00DF 01rr                      1- 3191     	MOVR	_workStep,W
     00E0 2405                      1- 3192     	XORIA	0x05
     00E1 0903                      1- 3193     	BTRSS	STATUS,2
                                    1- 3194     	MGOTO	_00323_DS_
     00E2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3195     	.line	348, "main.c"; 	maxDuty = 93;
     00E3 215D                      1- 3196     	MOVIA	0x5d
                                    1- 3197     	BANKSEL	_maxDuty
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 00rr                      1- 3198     	MOVAR	_maxDuty
                                    1- 3199     	MGOTO	_00336_DS_
     00E6 3rrr                      3-   63 m1      LGOTO rom_address
     00E7                           1- 3200     _00323_DS_:
                                    1- 3201     	.line	349, "main.c"; 	else if(workStep == 6)
                                    1- 3202     	BANKSEL	_workStep
     00E7 rrrr                      3-  110 m1      .banksel ram_address
     00E8 01rr                      1- 3203     	MOVR	_workStep,W
     00E9 2406                      1- 3204     	XORIA	0x06
     00EA 0903                      1- 3205     	BTRSS	STATUS,2
                                    1- 3206     	MGOTO	_00336_DS_
     00EB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3207     	.line	350, "main.c"; 	maxDuty = 97;
     00EC 2161                      1- 3208     	MOVIA	0x61
                                    1- 3209     	BANKSEL	_maxDuty
     00ED rrrr                      3-  110 m1      .banksel ram_address
     00EE 00rr                      1- 3210     	MOVAR	_maxDuty
     00EF                           1- 3211     _00336_DS_:
                                    1- 3212     	.line	351, "main.c"; 	if(workStep > 0)
                                    1- 3213     	BANKSEL	_workStep
     00EF rrrr                      3-  110 m1      .banksel ram_address
     00F0 01rr                      1- 3214     	MOVR	_workStep,W
     00F1 0D03                      1- 3215     	BTRSC	STATUS,2
                                    1- 3216     	MGOTO	_00338_DS_
     00F2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3217     	.line	353, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 3218     	BANKSEL	_maxDuty
     00F3 rrrr                      3-  110 m1      .banksel ram_address
     00F4 01rr                      1- 3219     	MOVR	_maxDuty,W
     00F5 00rr                      1- 3220     	SFUN	_PWM2DUTY
                                    1- 3221     	.line	354, "main.c"; 	pwmInit();
                                    1- 3222     	MCALL	_pwmInit
     00F6 2rrr                      3-   66 m1      LCALL rom_address
     00F7                           1- 3223     _00338_DS_:
                                    1- 3224     	.line	356, "main.c"; 	ledStep = workStep;	
                                    1- 3225     	BANKSEL	_workStep
     00F7 rrrr                      3-  110 m1      .banksel ram_address
     00F8 01rr                      1- 3226     	MOVR	_workStep,W
                                    1- 3227     	BANKSEL	_ledStep
     00F9 rrrr                      3-  110 m1      .banksel ram_address
     00FA 00rr                      1- 3228     	MOVAR	_ledStep
     00FB                           1- 3229     _00343_DS_:
                                    1- 3230     	.line	359, "main.c"; 	}
                                    1- 3231     	RETURN	
     00FB 0010                      3-   40 m1      ret
                                    1- 3232     ; exit point of _keyCtr
                                    1- 3235     ;	code size estimation:
                                    1- 3236     ;	 1209+  325 =  1534 instructions ( 3718 byte)
                                    1- 3238     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
