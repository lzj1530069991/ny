
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A051E,c=on
                                    1-    9     	#include "ny8a051e.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	__moduint
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_BPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_INDF
                                    1-   23     	extern	_TMR0
                                    1-   24     	extern	_PCL
                                    1-   25     	extern	_STATUS
                                    1-   26     	extern	_FSR
                                    1-   27     	extern	_PORTB
                                    1-   28     	extern	_PCON
                                    1-   29     	extern	_BWUCON
                                    1-   30     	extern	_PCHBUF
                                    1-   31     	extern	_BPLCON
                                    1-   32     	extern	_BPHCON
                                    1-   33     	extern	_INTE
                                    1-   34     	extern	_INTF
                                    1-   35     	extern	_TMR1
                                    1-   36     	extern	_T1CR1
                                    1-   37     	extern	_T1CR2
                                    1-   38     	extern	_PWM1DUTY
                                    1-   39     	extern	_PS1CV
                                    1-   40     	extern	_BZ1CR
                                    1-   41     	extern	_IRCR
                                    1-   42     	extern	_TBHP
                                    1-   43     	extern	_TBHD
                                    1-   44     	extern	_OSCCR
                                    1-   45     	extern	_IOSTB
                                    1-   46     	extern	_PS0CV
                                    1-   47     	extern	_BODCON
                                    1-   48     	extern	_PCON1
                                    1-   49     	extern	_T0MD
                                    1-   50     	extern	___sdcc_saved_fsr
                                    1-   51     	extern	___sdcc_saved_stk00
                                    1-   52     	extern	___sdcc_saved_stk01
                                    1-   53     	extern	__nyc_ny8_startup
                                    1-   54     ;--------------------------------------------------------
                                    1-   55     ; global declarations
                                    1-   56     ;--------------------------------------------------------
                                    1-   57     	extern	_gotoSleep
                                    1-   58     	extern	_initSys
                                    1-   59     	extern	_keyRead
                                    1-   60     	extern	_workCon
                                    1-   61     	extern	_keyCon
                                    1-   62     	extern	_chrgCon
                                    1-   63     	extern	_startCon
                                    1-   64     	extern	_isr
                                    1-   65     	extern	_main
                                    1-   66     	extern	_intCount
                                    1-   67     	extern	_IntFlag
                                    1-   68     	extern	_count10ms
                                    1-   69     	extern	_workStep
                                    1-   70     	extern	_keyCount
                                    1-   71     	extern	_longPressFlag
                                    1-   72     	extern	_sleepTime
                                    1-   73     	extern	_chrgFullTime
                                    1-   74     	extern	_chrgFullFlag
                                    1-   75     	extern	_ledTime
                                    1-   76     	extern	_startTime
                                    1-   77     	extern	_pwmduty
                                    1-   78     	extern	_maxTime
                                    1-   79     	extern	_pwmTime
                                    1-   80     	extern	_stopTime
                                    1-   81     	extern	_count1s
                                    1-   82     	extern	_count120s
                                    1-   83     	extern	_firstFlag
                                    1-   85     	extern PSAVE
                                    1-   86     	extern SSAVE
                                    1-   87     	extern WSAVE
                                    1-   88     	extern STK04
                                    1-   89     	extern STK03
                                    1-   90     	extern STK02
                                    1-   91     	extern STK01
                                    1-   92     	extern STK00
                                    1-   94     .segment "uninit", 0x20000010
 20000010                           1-   95     PSAVE:
                                    1-   96     	.res 1
 20000011                           1-   97     SSAVE:
                                    1-   98     	.res 1
 20000012                           1-   99     WSAVE:
                                    1-  100     	.res 1
 20000013                           1-  101     STK04:
                                    1-  102     	.res 1
 20000014                           1-  103     STK03:
                                    1-  104     	.res 1
 20000015                           1-  105     STK02:
                                    1-  106     	.res 1
 20000016                           1-  107     STK01:
                                    1-  108     	.res 1
 20000017                           1-  109     STK00:
                                    1-  110     	.res 1
                                    1-  112     ;--------------------------------------------------------
                                    1-  113     ; global definitions
                                    1-  114     ;--------------------------------------------------------
                                    1-  115     ;--------------------------------------------------------
                                    1-  116     ; absolute symbol definitions
                                    1-  117     ;--------------------------------------------------------
                                    1-  118     ;--------------------------------------------------------
                                    1-  119     ; compiler-defined variables
                                    1-  120     ;--------------------------------------------------------
                                    1-  121     .segment "uninit"
     0000                           1-  122     r0x1019:
                                    1-  123     	.res	1
                                    1-  124     .segment "uninit"
     0000                           1-  125     r0x1018:
                                    1-  126     	.res	1
                                    1-  127     .segment "uninit"
     0000                           1-  128     r0x1017:
                                    1-  129     	.res	1
                                    1-  130     .segment "uninit"
     0000                           1-  131     r0x1016:
                                    1-  132     	.res	1
                                    1-  133     ;--------------------------------------------------------
                                    1-  134     ; initialized data
                                    1-  135     ;--------------------------------------------------------
                                    1-  137     .segment "idata"
     0000                           1-  138     _intCount:
     0000 0000                      1-  139     	dw	0x00
                                    1-  143     .segment "idata"
     0000                           1-  144     _IntFlag:
     0000 0000                      1-  145     	dw	0x00
                                    1-  149     .segment "idata"
     0000                           1-  150     _count10ms:
     0000 0000                      1-  151     	dw	0x00
                                    1-  155     .segment "idata"
     0000                           1-  156     _workStep:
     0000 0000                      1-  157     	dw	0x00
                                    1-  161     .segment "idata"
     0000                           1-  162     _keyCount:
     0000 0000                      1-  163     	dw	0x00
                                    1-  167     .segment "idata"
     0000                           1-  168     _longPressFlag:
     0000 0000                      1-  169     	dw	0x00
                                    1-  173     .segment "idata"
     0000                           1-  174     _sleepTime:
     0000 0000                      1-  175     	dw	0x00
                                    1-  179     .segment "idata"
     0000                           1-  180     _chrgFullTime:
     0000 0000                      1-  181     	dw	0x00
                                    1-  185     .segment "idata"
     0000                           1-  186     _chrgFullFlag:
     0000 0000                      1-  187     	dw	0x00
                                    1-  191     .segment "idata"
     0000                           1-  192     _ledTime:
     0000 0000                      1-  193     	dw	0x00
                                    1-  197     .segment "idata"
     0000                           1-  198     _startTime:
     0000 0000 0000                 1-  199     	dw	0x00, 0x00
                                    1-  203     .segment "idata"
     0000                           1-  204     _pwmduty:
     0000 0000                      1-  205     	dw	0x00
                                    1-  209     .segment "idata"
     0000                           1-  210     _maxTime:
     0000 0000                      1-  211     	dw	0x00
                                    1-  215     .segment "idata"
     0000                           1-  216     _pwmTime:
     0000 0000                      1-  217     	dw	0x00
                                    1-  221     .segment "idata"
     0000                           1-  222     _stopTime:
     0000 0000                      1-  223     	dw	0x00
                                    1-  227     .segment "idata"
     0000                           1-  228     _count1s:
     0000 0000 0000                 1-  229     	dw	0x00, 0x00
                                    1-  233     .segment "idata"
     0000                           1-  234     _count120s:
     0000 0000                      1-  235     	dw	0x00
                                    1-  239     .segment "idata"
     0000                           1-  240     _firstFlag:
     0000 0000                      1-  241     	dw	0x00
                                    1-  244     ;--------------------------------------------------------
                                    1-  245     ; overlayable items in internal ram 
                                    1-  246     ;--------------------------------------------------------
                                    1-  247     ;	udata_ovr
                                    1-  248     ;--------------------------------------------------------
                                    1-  249     ; reset vector 
                                    1-  250     ;--------------------------------------------------------
                                    1-  251     ORG	0x0000
     0000 3rrr                      1-  252     	LGOTO	__nyc_ny8_startup
                                    1-  253     ;--------------------------------------------------------
                                    1-  254     ; interrupt and initialization code
                                    1-  255     ;--------------------------------------------------------
                                    1-  256     ORG 0x0008
                                    1-  257     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  259     .segment "code"
     0000                           1-  260     __sdcc_interrupt:
                                    1-  261     ;***
                                    1-  262     ;  pBlock Stats: dbName = I
                                    1-  263     ;***
                                    1-  264     ;2 compiler assigned registers:
                                    1-  265     ;   STK00
                                    1-  266     ;   STK01
                                    1-  267     ;; Starting pCode block
     0000                           1-  268     _isr:
                                    1-  269     ; 0 exit points
                                    1-  270     	.line	44, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  271     	MOVAR	WSAVE
     0001 1503                      1-  272     	SWAPR	STATUS,W
     0002 0283                      1-  273     	CLRR	STATUS
     0003 00rr                      1-  274     	MOVAR	SSAVE
     0004 010A                      1-  275     	MOVR	PCHBUF,W
     0005 028A                      1-  276     	CLRR	PCHBUF
     0006 00rr                      1-  277     	MOVAR	PSAVE
     0007 0104                      1-  278     	MOVR	FSR,W
     0008 00rr                      1-  279     	MOVAR	___sdcc_saved_fsr
     0009 01rr                      1-  280     	MOVR	STK00,W
     000A 00rr                      1-  281     	MOVAR	___sdcc_saved_stk00
     000B 01rr                      1-  282     	MOVR	STK01,W
     000C 00rr                      1-  283     	MOVAR	___sdcc_saved_stk01
                                    1-  284     	.line	46, "main.c"; 	if(INTFbits.T0IF)
     000D 08rr                      1-  285     	BTRSS	_INTFbits,0
                                    1-  286     	MGOTO	_00112_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  287     	.line	48, "main.c"; 	TMR0 += 55;
     000F 2137                      1-  288     	MOVIA	0x37
     0010 03rr                      1-  289     	ADDAR	_TMR0,F
                                    1-  290     	.line	49, "main.c"; 	intCount++;
     0011 05rr                      1-  291     	INCR	_intCount,F
                                    1-  292     	.line	50, "main.c"; 	if(intCount == 10)
     0012 01rr                      1-  293     	MOVR	_intCount,W
     0013 240A                      1-  294     	XORIA	0x0a
     0014 0903                      1-  295     	BTRSS	STATUS,2
                                    1-  296     	MGOTO	_00112_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  297     	.line	52, "main.c"; 	intCount = 0;
     0016 02rr                      1-  298     	CLRR	_intCount
                                    1-  299     	.line	53, "main.c"; 	IntFlag = 1;
     0017 2101                      1-  300     	MOVIA	0x01
     0018 00rr                      1-  301     	MOVAR	_IntFlag
                                    1-  302     	.line	54, "main.c"; 	if(++count1s >= 1000)
     0019 05rr                      1-  303     	INCR	_count1s,F
     001A 0D03                      1-  304     	BTRSC	STATUS,2
     001B 05rr                      1-  305     	INCR	(_count1s + 1),F
                                    1-  306     ;;unsigned compare: left < lit (0x3E8=1000), size=2
     001C 2103                      1-  307     	MOVIA	0x03
     001D 04rr                      1-  308     	SUBAR	(_count1s + 1),W
     001E 0903                      1-  309     	BTRSS	STATUS,2
                                    1-  310     	MGOTO	_00132_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020 21E8                      1-  311     	MOVIA	0xe8
     0021 04rr                      1-  312     	SUBAR	_count1s,W
     0022                           1-  313     _00132_DS_:
     0022 0803                      1-  314     	BTRSS	STATUS,0
                                    1-  315     	MGOTO	_00112_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  316     	.line	56, "main.c"; 	count1s = 0;
     0024 02rr                      1-  317     	CLRR	_count1s
     0025 02rr                      1-  318     	CLRR	(_count1s + 1)
                                    1-  319     	.line	57, "main.c"; 	if(count120s > 0)
     0026 01rr                      1-  320     	MOVR	_count120s,W
     0027 0903                      1-  321     	BTRSS	STATUS,2
                                    1-  322     	.line	58, "main.c"; 	count120s--;
     0028 06rr                      1-  323     	DECR	_count120s,F
     0029                           1-  324     _00112_DS_:
                                    1-  325     	.line	63, "main.c"; 	if(INTFbits.PBIF)
     0029 08rr                      1-  326     	BTRSS	_INTFbits,1
                                    1-  327     	MGOTO	_00114_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  328     	.line	65, "main.c"; 	INTF= (unsigned char)~(C_INT_PBKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     002B 21FD                      1-  329     	MOVIA	0xfd
     002C 00rr                      1-  330     	MOVAR	_INTF
     002D                           1-  331     _00114_DS_:
                                    1-  332     	.line	68, "main.c"; 	INTF = 0;
     002D 02rr                      1-  333     	CLRR	_INTF
                                    1-  334     	.line	70, "main.c"; 	}
     002E 01rr                      1-  335     	MOVR	___sdcc_saved_stk01,W
     002F 00rr                      1-  336     	MOVAR	STK01
     0030 01rr                      1-  337     	MOVR	___sdcc_saved_stk00,W
     0031 00rr                      1-  338     	MOVAR	STK00
     0032 01rr                      1-  339     	MOVR	___sdcc_saved_fsr,W
     0033 0084                      1-  340     	MOVAR	FSR
     0034 01rr                      1-  341     	MOVR	PSAVE,W
     0035 008A                      1-  342     	MOVAR	PCHBUF
     0036 0283                      1-  343     	CLRR	STATUS
     0037 15rr                      1-  344     	SWAPR	SSAVE,W
     0038 0083                      1-  345     	MOVAR	STATUS
     0039 15rr                      1-  346     	SWAPR	WSAVE,F
     003A 15rr                      1-  347     	SWAPR	WSAVE,W
     003B                           1-  348     END_OF_INTERRUPT:
     003B 0011                      1-  349     	RETIE	
                                    1-  351     ;--------------------------------------------------------
                                    1-  352     ; code
                                    1-  353     ;--------------------------------------------------------
                                    1-  354     ;***
                                    1-  355     ;  pBlock Stats: dbName = M
                                    1-  356     ;***
                                    1-  357     ;has an exit
                                    1-  358     ;functions called:
                                    1-  359     ;   _initSys
                                    1-  360     ;   _chrgCon
                                    1-  361     ;   _keyCon
                                    1-  362     ;   _gotoSleep
                                    1-  363     ;   _startCon
                                    1-  364     ;   _workCon
                                    1-  365     ;   _initSys
                                    1-  366     ;   _chrgCon
                                    1-  367     ;   _keyCon
                                    1-  368     ;   _gotoSleep
                                    1-  369     ;   _startCon
                                    1-  370     ;   _workCon
                                    1-  371     ;; Starting pCode block
                                    1-  372     .segment "code"; module=main, function=_main
     0000                           1-  374     _main:
                                    1-  375     ; 2 exit points
                                    1-  376     	.line	76, "main.c"; 	initSys();
                                    1-  377     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  378     	.line	77, "main.c"; 	startTime = 502;
     0001 21F6                      1-  379     	MOVIA	0xf6
     0002 00rr                      1-  380     	MOVAR	_startTime
     0003 2101                      1-  381     	MOVIA	0x01
     0004 00rr                      1-  382     	MOVAR	(_startTime + 1)
     0005                           1-  383     _00158_DS_:
                                    1-  384     	.line	80, "main.c"; 	CLRWDT();
     0005 0002                      1-  385     	clrwdt
                                    1-  386     	.line	81, "main.c"; 	if(!IntFlag)
     0006 01rr                      1-  387     	MOVR	_IntFlag,W
     0007 0D03                      1-  388     	BTRSC	STATUS,2
                                    1-  389     	MGOTO	_00158_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  390     	.line	83, "main.c"; 	IntFlag = 0;
     0009 02rr                      1-  391     	CLRR	_IntFlag
                                    1-  392     	.line	84, "main.c"; 	if(++count10ms >= 10)
     000A 05rr                      1-  393     	INCR	_count10ms,F
                                    1-  394     ;;unsigned compare: left < lit (0xA=10), size=1
     000B 210A                      1-  395     	MOVIA	0x0a
     000C 04rr                      1-  396     	SUBAR	_count10ms,W
     000D 0803                      1-  397     	BTRSS	STATUS,0
                                    1-  398     	MGOTO	_00154_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  399     	.line	87, "main.c"; 	count10ms = 0;
     000F 02rr                      1-  400     	CLRR	_count10ms
                                    1-  401     	.line	88, "main.c"; 	chrgCon();
                                    1-  402     	MCALL	_chrgCon
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  403     	.line	89, "main.c"; 	if((PORTB&0x01) == 0)
     0011 08rr                      1-  404     	BTRSS	_PORTB,0
                                    1-  405     	.line	90, "main.c"; 	keyCon();
                                    1-  406     	MCALL	_keyCon
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  407     	.line	91, "main.c"; 	if(keyCount == 0 && (PORTB&0x01) == 0 && workStep == 0 && startTime == 0)
     0013 01rr                      1-  408     	MOVR	_keyCount,W
     0014 0903                      1-  409     	BTRSS	STATUS,2
                                    1-  410     	MGOTO	_00144_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
     0016 0Crr                      1-  411     	BTRSC	_PORTB,0
                                    1-  412     	MGOTO	_00144_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
     0018 01rr                      1-  413     	MOVR	_workStep,W
     0019 0903                      1-  414     	BTRSS	STATUS,2
                                    1-  415     	MGOTO	_00144_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
     001B 01rr                      1-  416     	MOVR	_startTime,W
     001C 11rr                      1-  417     	IORAR	(_startTime + 1),W
     001D 0903                      1-  418     	BTRSS	STATUS,2
                                    1-  419     	MGOTO	_00144_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  420     	.line	93, "main.c"; 	if(++sleepTime > 2)
     001F 05rr                      1-  421     	INCR	_sleepTime,F
                                    1-  422     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  423     ;;unsigned compare: left >= lit (0x3=3), size=1
     0020 2103                      1-  424     	MOVIA	0x03
     0021 04rr                      1-  425     	SUBAR	_sleepTime,W
     0022 0803                      1-  426     	BTRSS	STATUS,0
                                    1-  427     	MGOTO	_00145_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  428     	.line	94, "main.c"; 	gotoSleep();
                                    1-  429     	MCALL	_gotoSleep
     0024 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  430     	MGOTO	_00145_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
     0026                           1-  431     _00144_DS_:
                                    1-  432     	.line	98, "main.c"; 	sleepTime = 0;
     0026 02rr                      1-  433     	CLRR	_sleepTime
     0027                           1-  434     _00145_DS_:
                                    1-  435     	.line	100, "main.c"; 	startCon();
                                    1-  436     	MCALL	_startCon
     0027 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  437     	.line	101, "main.c"; 	if(count120s == 0 && startTime == 0 && (PORTB&0x01) == 0)
     0028 01rr                      1-  438     	MOVR	_count120s,W
     0029 0903                      1-  439     	BTRSS	STATUS,2
                                    1-  440     	MGOTO	_00154_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
     002B 01rr                      1-  441     	MOVR	_startTime,W
     002C 11rr                      1-  442     	IORAR	(_startTime + 1),W
     002D 0903                      1-  443     	BTRSS	STATUS,2
                                    1-  444     	MGOTO	_00154_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F 0Crr                      1-  445     	BTRSC	_PORTB,0
                                    1-  446     	MGOTO	_00154_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  447     	.line	103, "main.c"; 	workStep = 0;
     0031 02rr                      1-  448     	CLRR	_workStep
                                    1-  449     	.line	104, "main.c"; 	LED1OFF();
     0032 1Arr                      1-  450     	BSR	_PORTB,5
                                    1-  451     	.line	105, "main.c"; 	LED2OFF();
     0033 18rr                      1-  452     	BSR	_PORTB,1
                                    1-  453     	.line	106, "main.c"; 	LED3OFF();
     0034 19rr                      1-  454     	BSR	_PORTB,2
     0035                           1-  455     _00154_DS_:
                                    1-  456     	.line	109, "main.c"; 	if(workStep)
     0035 01rr                      1-  457     	MOVR	_workStep,W
     0036 0D03                      1-  458     	BTRSC	STATUS,2
                                    1-  459     	MGOTO	_00158_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  460     	.line	111, "main.c"; 	workCon();
                                    1-  461     	MCALL	_workCon
     0038 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  462     	MGOTO	_00158_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  463     	.line	115, "main.c"; 	}
                                    1-  464     	RETURN	
     003A 0010                      3-   40 m1      ret
                                    1-  465     ; exit point of _main
                                    1-  467     ;***
                                    1-  468     ;  pBlock Stats: dbName = C
                                    1-  469     ;***
                                    1-  470     ;has an exit
                                    1-  471     ;; Starting pCode block
                                    1-  472     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  474     _gotoSleep:
                                    1-  475     ; 2 exit points
                                    1-  476     	.line	360, "main.c"; 	sleepTime = 0;
     0000 02rr                      1-  477     	CLRR	_sleepTime
                                    1-  478     	.line	361, "main.c"; 	PORTB = 0x2E;
     0001 212E                      1-  479     	MOVIA	0x2e
     0002 00rr                      1-  480     	MOVAR	_PORTB
                                    1-  481     	.line	362, "main.c"; 	workStep = 0;
     0003 02rr                      1-  482     	CLRR	_workStep
                                    1-  483     	.line	363, "main.c"; 	BWUCON = 0x09;
     0004 2109                      1-  484     	MOVIA	0x09
     0005 00rr                      1-  485     	MOVAR	_BWUCON
                                    1-  486     	.line	364, "main.c"; 	INTE =  C_INT_PBKey;
     0006 2102                      1-  487     	MOVIA	0x02
     0007 00rr                      1-  488     	MOVAR	_INTE
                                    1-  489     	.line	365, "main.c"; 	PCON =  C_LVR_En;	
     0008 2108                      1-  490     	MOVIA	0x08
     0009 00rr                      1-  491     	MOVAR	_PCON
                                    1-  492     	.line	366, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     000A 02rr                      1-  493     	CLRR	_INTF
                                    1-  494     	.line	367, "main.c"; 	CLRWDT();
     000B 0002                      1-  495     	clrwdt
                                    1-  496     	.line	368, "main.c"; 	ENI();
     000C 0004                      1-  497     	ENI
                                    1-  498     	.line	369, "main.c"; 	SLEEP();
     000D 0001                      1-  499     	sleep
                                    1-  500     	.line	370, "main.c"; 	BWUCON = 0x00;
     000E 02rr                      1-  501     	CLRR	_BWUCON
                                    1-  502     	.line	371, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     000F 2101                      1-  503     	MOVIA	0x01
     0010 00rr                      1-  504     	MOVAR	_INTE
                                    1-  505     	.line	372, "main.c"; 	INTF = 0;
     0011 02rr                      1-  506     	CLRR	_INTF
                                    1-  507     	.line	374, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0012 2188                      1-  508     	MOVIA	0x88
     0013 00rr                      1-  509     	MOVAR	_PCON
                                    1-  510     	.line	375, "main.c"; 	}
                                    1-  511     	RETURN	
     0014 0010                      3-   40 m1      ret
                                    1-  512     ; exit point of _gotoSleep
                                    1-  514     ;***
                                    1-  515     ;  pBlock Stats: dbName = C
                                    1-  516     ;***
                                    1-  517     ;has an exit
                                    1-  518     ;; Starting pCode block
                                    1-  519     .segment "code"; module=main, function=_initSys
     0000                           1-  521     _initSys:
                                    1-  522     ; 2 exit points
                                    1-  523     	.line	339, "main.c"; 	PORTB = 0x2E;
     0000 212E                      1-  524     	MOVIA	0x2e
     0001 00rr                      1-  525     	MOVAR	_PORTB
                                    1-  526     	.line	340, "main.c"; 	BPHCON = 0xF7;		//PB3 上拉
     0002 21F7                      1-  527     	MOVIA	0xf7
     0003 00rr                      1-  528     	MOVAR	_BPHCON
                                    1-  529     	.line	343, "main.c"; 	IOSTB =  C_PB3_Input | C_PB0_Input;	
     0004 2109                      1-  530     	MOVIA	0x09
     0005 000r                      1-  531     	IOST	_IOSTB
                                    1-  532     	.line	344, "main.c"; 	PORTB = 0x2E;                        	// PortB Data Register = 0x00
     0006 212E                      1-  533     	MOVIA	0x2e
     0007 00rr                      1-  534     	MOVAR	_PORTB
                                    1-  535     	.line	345, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT & LVR
     0008 2188                      1-  536     	MOVIA	0x88
     0009 00rr                      1-  537     	MOVAR	_PCON
                                    1-  538     	.line	347, "main.c"; 	PCON1 = C_TMR0_Dis;
     000A 0200                      1-  539     	CLRA	
     000B 000r                      1-  540     	IOST	_PCON1
                                    1-  541     	.line	349, "main.c"; 	TMR0 = 55;
     000C 2137                      1-  542     	MOVIA	0x37
     000D 00rr                      1-  543     	MOVAR	_TMR0
                                    1-  544     	.line	350, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     000E 0200                      1-  545     	CLRA	
     000F 0003                      1-  546     	T0MD	
                                    1-  547     	.line	352, "main.c"; 	PCON1 = C_TMR0_En;
     0010 2101                      1-  548     	MOVIA	0x01
     0011 000r                      1-  549     	IOST	_PCON1
                                    1-  550     	.line	353, "main.c"; 	INTE =  C_INT_TMR0 ;
     0012 00rr                      1-  551     	MOVAR	_INTE
                                    1-  552     	.line	354, "main.c"; 	ENI();	
     0013 0004                      1-  553     	ENI
                                    1-  554     	.line	355, "main.c"; 	}
                                    1-  555     	RETURN	
     0014 0010                      3-   40 m1      ret
                                    1-  556     ; exit point of _initSys
                                    1-  558     ;***
                                    1-  559     ;  pBlock Stats: dbName = C
                                    1-  560     ;***
                                    1-  561     ;has an exit
                                    1-  562     ;1 compiler assigned register :
                                    1-  563     ;   r0x1016
                                    1-  564     ;; Starting pCode block
                                    1-  565     .segment "code"; module=main, function=_keyRead
                                    1-  567     ;local variable name mapping:
     0000                           1-  569     _keyRead:
                                    1-  570     ; 2 exit points
                                    1-  571     	.line	290, "main.c"; 	char keyRead(char KeyStatus)	
     0000 00rr                      1-  572     	MOVAR	r0x1016
                                    1-  573     	.line	292, "main.c"; 	if (KeyStatus)
     0001 01rr                      1-  574     	MOVR	r0x1016,W
     0002 0D03                      1-  575     	BTRSC	STATUS,2
                                    1-  576     	MGOTO	_00260_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  577     ;;unsigned compare: left < lit (0x5=5), size=1
                                    1-  578     	.line	294, "main.c"; 	if(keyCount >= 5 && workStep == 0)
     0004 2105                      1-  579     	MOVIA	0x05
     0005 04rr                      1-  580     	SUBAR	_keyCount,W
     0006 0803                      1-  581     	BTRSS	STATUS,0
                                    1-  582     	MGOTO	_00248_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
     0008 01rr                      1-  583     	MOVR	_workStep,W
     0009 0903                      1-  584     	BTRSS	STATUS,2
                                    1-  585     	MGOTO	_00248_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  586     	.line	296, "main.c"; 	count120s = 120;
     000B 2178                      1-  587     	MOVIA	0x78
     000C 00rr                      1-  588     	MOVAR	_count120s
                                    1-  589     	.line	297, "main.c"; 	firstFlag = 0;
     000D 02rr                      1-  590     	CLRR	_firstFlag
                                    1-  591     	.line	298, "main.c"; 	workStep = 1;
     000E 2101                      1-  592     	MOVIA	0x01
     000F 00rr                      1-  593     	MOVAR	_workStep
                                    1-  594     	.line	299, "main.c"; 	LED1ON();
     0010 1Err                      1-  595     	BCR	_PORTB,5
                                    1-  596     	.line	300, "main.c"; 	LED2OFF();
     0011 18rr                      1-  597     	BSR	_PORTB,1
                                    1-  598     	.line	301, "main.c"; 	LED3OFF();
     0012 19rr                      1-  599     	BSR	_PORTB,2
                                    1-  600     	.line	302, "main.c"; 	maxTime = 16;
     0013 2110                      1-  601     	MOVIA	0x10
     0014 00rr                      1-  602     	MOVAR	_maxTime
                                    1-  603     	.line	303, "main.c"; 	pwmduty = 13;
     0015 210D                      1-  604     	MOVIA	0x0d
     0016 00rr                      1-  605     	MOVAR	_pwmduty
     0017                           1-  606     _00248_DS_:
                                    1-  607     	.line	305, "main.c"; 	if(++keyCount >= 150)
     0017 05rr                      1-  608     	INCR	_keyCount,F
                                    1-  609     ;;unsigned compare: left < lit (0x96=150), size=1
     0018 2196                      1-  610     	MOVIA	0x96
     0019 04rr                      1-  611     	SUBAR	_keyCount,W
     001A 0803                      1-  612     	BTRSS	STATUS,0
                                    1-  613     	MGOTO	_00261_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  614     	.line	307, "main.c"; 	keyCount = 150;
     001C 2196                      1-  615     	MOVIA	0x96
     001D 00rr                      1-  616     	MOVAR	_keyCount
                                    1-  617     	.line	308, "main.c"; 	firstFlag = 1;
     001E 2101                      1-  618     	MOVIA	0x01
     001F 00rr                      1-  619     	MOVAR	_firstFlag
                                    1-  620     	.line	309, "main.c"; 	if(!longPressFlag)
     0020 01rr                      1-  621     	MOVR	_longPressFlag,W
     0021 0903                      1-  622     	BTRSS	STATUS,2
                                    1-  623     	MGOTO	_00261_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  624     	.line	311, "main.c"; 	longPressFlag = 1;
     0023 2101                      1-  625     	MOVIA	0x01
     0024 00rr                      1-  626     	MOVAR	_longPressFlag
                                    1-  627     	.line	312, "main.c"; 	return 2;
     0025 2102                      1-  628     	MOVIA	0x02
                                    1-  629     	MGOTO	_00262_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  630     ;;unsigned compare: left < lit (0x96=150), size=1
     0027                           1-  631     _00260_DS_:
                                    1-  632     	.line	319, "main.c"; 	if(keyCount >= 150)
     0027 2196                      1-  633     	MOVIA	0x96
     0028 04rr                      1-  634     	SUBAR	_keyCount,W
     0029 0803                      1-  635     	BTRSS	STATUS,0
                                    1-  636     	MGOTO	_00257_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  637     	.line	321, "main.c"; 	keyCount = 0;
     002B 02rr                      1-  638     	CLRR	_keyCount
                                    1-  639     	.line	322, "main.c"; 	longPressFlag = 0;
     002C 02rr                      1-  640     	CLRR	_longPressFlag
                                    1-  641     	.line	323, "main.c"; 	return	0;
     002D 2100                      1-  642     	MOVIA	0x00
                                    1-  643     	MGOTO	_00262_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  644     ;;unsigned compare: left < lit (0x5=5), size=1
     002F                           1-  645     _00257_DS_:
                                    1-  646     	.line	325, "main.c"; 	else if(keyCount >= 5)
     002F 2105                      1-  647     	MOVIA	0x05
     0030 04rr                      1-  648     	SUBAR	_keyCount,W
     0031 0803                      1-  649     	BTRSS	STATUS,0
                                    1-  650     	MGOTO	_00258_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  651     	.line	327, "main.c"; 	keyCount = 0;
     0033 02rr                      1-  652     	CLRR	_keyCount
                                    1-  653     	.line	328, "main.c"; 	return	1;
     0034 2101                      1-  654     	MOVIA	0x01
                                    1-  655     	MGOTO	_00262_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
     0036                           1-  656     _00258_DS_:
                                    1-  657     	.line	330, "main.c"; 	keyCount = 0;
     0036 02rr                      1-  658     	CLRR	_keyCount
     0037                           1-  659     _00261_DS_:
                                    1-  660     	.line	332, "main.c"; 	return 0;
     0037 2100                      1-  661     	MOVIA	0x00
     0038                           1-  662     _00262_DS_:
                                    1-  663     	.line	333, "main.c"; 	}
                                    1-  664     	RETURN	
     0038 0010                      3-   40 m1      ret
                                    1-  665     ; exit point of _keyRead
                                    1-  667     ;***
                                    1-  668     ;  pBlock Stats: dbName = C
                                    1-  669     ;***
                                    1-  670     ;; Starting pCode block
                                    1-  671     .segment "code"; module=main, function=_workCon
     0000                           1-  673     _workCon:
                                    1-  674     ; 0 exit points
                                    1-  675     	.line	276, "main.c"; 	if(pwmTime >= pwmduty)
     0000 01rr                      1-  676     	MOVR	_pwmduty,W
     0001 04rr                      1-  677     	SUBAR	_pwmTime,W
     0002 0803                      1-  678     	BTRSS	STATUS,0
                                    1-  679     	MGOTO	_00238_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  680     	.line	278, "main.c"; 	PORTB &= 0xEF;
     0004 1Err                      1-  681     	BCR	_PORTB,4
                                    1-  682     	MGOTO	_00239_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
     0006                           1-  683     _00238_DS_:
                                    1-  684     	.line	282, "main.c"; 	PORTB |= 0x10;
     0006 1Arr                      1-  685     	BSR	_PORTB,4
     0007                           1-  686     _00239_DS_:
                                    1-  687     	.line	284, "main.c"; 	if(++pwmTime >= maxTime)
     0007 05rr                      1-  688     	INCR	_pwmTime,F
     0008 01rr                      1-  689     	MOVR	_maxTime,W
     0009 04rr                      1-  690     	SUBAR	_pwmTime,W
     000A 0C03                      1-  691     	BTRSC	STATUS,0
                                    1-  692     	.line	286, "main.c"; 	pwmTime = 0;
     000B 02rr                      1-  693     	CLRR	_pwmTime
                                    1-  694     	.line	288, "main.c"; 	}
                                    1-  695     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1-  697     ;***
                                    1-  698     ;  pBlock Stats: dbName = C
                                    1-  699     ;***
                                    1-  700     ;has an exit
                                    1-  701     ;functions called:
                                    1-  702     ;   _keyRead
                                    1-  703     ;   _keyRead
                                    1-  704     ;1 compiler assigned register :
                                    1-  705     ;   r0x1017
                                    1-  706     ;; Starting pCode block
                                    1-  707     .segment "code"; module=main, function=_keyCon
                                    1-  709     ;local variable name mapping:
     0000                           1-  711     _keyCon:
                                    1-  712     ; 2 exit points
                                    1-  713     	.line	215, "main.c"; 	u8t keyClick = keyRead(0x08&(~PORTB));
     0000 07rr                      1-  714     	COMR	_PORTB,W
     0001 00rr                      1-  715     	MOVAR	r0x1017
     0002 2108                      1-  716     	MOVIA	0x08
     0003 10rr                      1-  717     	ANDAR	r0x1017,F
     0004 01rr                      1-  718     	MOVR	r0x1017,W
                                    1-  719     	MCALL	_keyRead
     0005 2rrr                      3-   66 m1      LCALL rom_address
     0006 00rr                      1-  720     	MOVAR	r0x1017
                                    1-  721     	.line	216, "main.c"; 	if(keyClick == 1)
     0007 2401                      1-  722     	XORIA	0x01
     0008 0903                      1-  723     	BTRSS	STATUS,2
                                    1-  724     	MGOTO	_00230_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  725     	.line	218, "main.c"; 	startTime = 0;
     000A 02rr                      1-  726     	CLRR	_startTime
     000B 02rr                      1-  727     	CLRR	(_startTime + 1)
                                    1-  728     	.line	219, "main.c"; 	if(workStep > 0)
     000C 01rr                      1-  729     	MOVR	_workStep,W
     000D 0D03                      1-  730     	BTRSC	STATUS,2
                                    1-  731     	MGOTO	_00215_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  732     	.line	221, "main.c"; 	if(firstFlag == 0)
     000F 01rr                      1-  733     	MOVR	_firstFlag,W
     0010 0903                      1-  734     	BTRSS	STATUS,2
                                    1-  735     	MGOTO	_00213_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  736     	.line	223, "main.c"; 	firstFlag = 1;
     0012 2101                      1-  737     	MOVIA	0x01
     0013 00rr                      1-  738     	MOVAR	_firstFlag
                                    1-  739     	.line	224, "main.c"; 	return;
                                    1-  740     	MGOTO	_00232_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
     0015                           1-  741     _00213_DS_:
                                    1-  742     	.line	226, "main.c"; 	workStep = 0;
     0015 02rr                      1-  743     	CLRR	_workStep
                                    1-  744     	.line	227, "main.c"; 	LED1OFF();
     0016 1Arr                      1-  745     	BSR	_PORTB,5
                                    1-  746     	.line	228, "main.c"; 	LED2OFF();
     0017 18rr                      1-  747     	BSR	_PORTB,1
                                    1-  748     	.line	229, "main.c"; 	LED3OFF();
     0018 19rr                      1-  749     	BSR	_PORTB,2
                                    1-  750     	MGOTO	_00232_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
     001A                           1-  751     _00215_DS_:
                                    1-  752     	.line	233, "main.c"; 	workStep = 1;
     001A 2101                      1-  753     	MOVIA	0x01
     001B 00rr                      1-  754     	MOVAR	_workStep
                                    1-  755     	.line	234, "main.c"; 	LED1ON();
     001C 1Err                      1-  756     	BCR	_PORTB,5
                                    1-  757     	.line	235, "main.c"; 	LED2OFF();
     001D 18rr                      1-  758     	BSR	_PORTB,1
                                    1-  759     	.line	236, "main.c"; 	LED3OFF();
     001E 19rr                      1-  760     	BSR	_PORTB,2
                                    1-  761     	.line	237, "main.c"; 	maxTime = 16;
     001F 2110                      1-  762     	MOVIA	0x10
     0020 00rr                      1-  763     	MOVAR	_maxTime
                                    1-  764     	.line	238, "main.c"; 	pwmduty = 13;
     0021 210D                      1-  765     	MOVIA	0x0d
     0022 00rr                      1-  766     	MOVAR	_pwmduty
                                    1-  767     	MGOTO	_00232_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
     0024                           1-  768     _00230_DS_:
                                    1-  769     	.line	241, "main.c"; 	else if(keyClick == 2)
     0024 01rr                      1-  770     	MOVR	r0x1017,W
     0025 2402                      1-  771     	XORIA	0x02
     0026 0903                      1-  772     	BTRSS	STATUS,2
                                    1-  773     	MGOTO	_00232_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  774     	.line	243, "main.c"; 	startTime = 0;
     0028 02rr                      1-  775     	CLRR	_startTime
     0029 02rr                      1-  776     	CLRR	(_startTime + 1)
                                    1-  777     	.line	244, "main.c"; 	if(++workStep > 3)
     002A 05rr                      1-  778     	INCR	_workStep,F
                                    1-  779     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  780     ;;unsigned compare: left >= lit (0x4=4), size=1
     002B 2104                      1-  781     	MOVIA	0x04
     002C 04rr                      1-  782     	SUBAR	_workStep,W
     002D 0803                      1-  783     	BTRSS	STATUS,0
                                    1-  784     	MGOTO	_00218_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  785     	.line	245, "main.c"; 	workStep = 1;
     002F 2101                      1-  786     	MOVIA	0x01
     0030 00rr                      1-  787     	MOVAR	_workStep
     0031                           1-  788     _00218_DS_:
                                    1-  789     	.line	246, "main.c"; 	if(workStep == 1)
     0031 01rr                      1-  790     	MOVR	_workStep,W
     0032 2401                      1-  791     	XORIA	0x01
     0033 0903                      1-  792     	BTRSS	STATUS,2
                                    1-  793     	MGOTO	_00225_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  794     	.line	248, "main.c"; 	LED1ON();
     0035 1Err                      1-  795     	BCR	_PORTB,5
                                    1-  796     	.line	249, "main.c"; 	LED2OFF();
     0036 18rr                      1-  797     	BSR	_PORTB,1
                                    1-  798     	.line	250, "main.c"; 	LED3OFF();
     0037 19rr                      1-  799     	BSR	_PORTB,2
                                    1-  800     	.line	251, "main.c"; 	maxTime = 16;
     0038 2110                      1-  801     	MOVIA	0x10
     0039 00rr                      1-  802     	MOVAR	_maxTime
                                    1-  803     	.line	252, "main.c"; 	pwmduty = 13;
     003A 210D                      1-  804     	MOVIA	0x0d
     003B 00rr                      1-  805     	MOVAR	_pwmduty
                                    1-  806     	MGOTO	_00232_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D                           1-  807     _00225_DS_:
                                    1-  808     	.line	254, "main.c"; 	else if(workStep == 2)
     003D 01rr                      1-  809     	MOVR	_workStep,W
     003E 2402                      1-  810     	XORIA	0x02
     003F 0903                      1-  811     	BTRSS	STATUS,2
                                    1-  812     	MGOTO	_00222_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  813     	.line	256, "main.c"; 	LED2ON();
     0041 1Crr                      1-  814     	BCR	_PORTB,1
                                    1-  815     	.line	257, "main.c"; 	LED1OFF();
     0042 1Arr                      1-  816     	BSR	_PORTB,5
                                    1-  817     	.line	258, "main.c"; 	LED3OFF();
     0043 19rr                      1-  818     	BSR	_PORTB,2
                                    1-  819     	.line	259, "main.c"; 	maxTime = 13;
     0044 210D                      1-  820     	MOVIA	0x0d
     0045 00rr                      1-  821     	MOVAR	_maxTime
                                    1-  822     	.line	260, "main.c"; 	pwmduty = 16;
     0046 2110                      1-  823     	MOVIA	0x10
     0047 00rr                      1-  824     	MOVAR	_pwmduty
                                    1-  825     	MGOTO	_00232_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049                           1-  826     _00222_DS_:
                                    1-  827     	.line	262, "main.c"; 	else if(workStep == 3)
     0049 01rr                      1-  828     	MOVR	_workStep,W
     004A 2403                      1-  829     	XORIA	0x03
     004B 0903                      1-  830     	BTRSS	STATUS,2
                                    1-  831     	MGOTO	_00232_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  832     	.line	264, "main.c"; 	LED3ON();
     004D 1Drr                      1-  833     	BCR	_PORTB,2
                                    1-  834     	.line	265, "main.c"; 	LED1OFF();
     004E 1Arr                      1-  835     	BSR	_PORTB,5
                                    1-  836     	.line	266, "main.c"; 	LED2OFF();
     004F 18rr                      1-  837     	BSR	_PORTB,1
                                    1-  838     	.line	267, "main.c"; 	maxTime = 143;
     0050 218F                      1-  839     	MOVIA	0x8f
     0051 00rr                      1-  840     	MOVAR	_maxTime
                                    1-  841     	.line	268, "main.c"; 	pwmduty = 102;
     0052 2166                      1-  842     	MOVIA	0x66
     0053 00rr                      1-  843     	MOVAR	_pwmduty
     0054                           1-  844     _00232_DS_:
                                    1-  845     	.line	271, "main.c"; 	}
                                    1-  846     	RETURN	
     0054 0010                      3-   40 m1      ret
                                    1-  847     ; exit point of _keyCon
                                    1-  849     ;***
                                    1-  850     ;  pBlock Stats: dbName = C
                                    1-  851     ;***
                                    1-  852     ;has an exit
                                    1-  853     ;; Starting pCode block
                                    1-  854     .segment "code"; module=main, function=_chrgCon
     0000                           1-  856     _chrgCon:
                                    1-  857     ; 2 exit points
                                    1-  858     	.line	141, "main.c"; 	if(PORTB&0x01)
     0000 08rr                      1-  859     	BTRSS	_PORTB,0
                                    1-  860     	MGOTO	_00205_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  861     	.line	143, "main.c"; 	workStep = 0;
     0002 02rr                      1-  862     	CLRR	_workStep
                                    1-  863     	.line	144, "main.c"; 	startTime = 0;
     0003 02rr                      1-  864     	CLRR	_startTime
     0004 02rr                      1-  865     	CLRR	(_startTime + 1)
                                    1-  866     	.line	145, "main.c"; 	PORTB &= 0xEF;
     0005 1Err                      1-  867     	BCR	_PORTB,4
                                    1-  868     	.line	146, "main.c"; 	if(chrgFullFlag)
     0006 01rr                      1-  869     	MOVR	_chrgFullFlag,W
     0007 0D03                      1-  870     	BTRSC	STATUS,2
                                    1-  871     	MGOTO	_00193_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  872     	.line	148, "main.c"; 	LED1ON();
     0009 1Err                      1-  873     	BCR	_PORTB,5
                                    1-  874     	.line	149, "main.c"; 	LED2ON();
     000A 1Crr                      1-  875     	BCR	_PORTB,1
                                    1-  876     	.line	150, "main.c"; 	LED3ON();
     000B 1Drr                      1-  877     	BCR	_PORTB,2
                                    1-  878     	MGOTO	_00194_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
     000D                           1-  879     _00193_DS_:
                                    1-  880     	.line	154, "main.c"; 	if(++ledTime > 200)
     000D 05rr                      1-  881     	INCR	_ledTime,F
                                    1-  882     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  883     ;;unsigned compare: left >= lit (0xC9=201), size=1
     000E 21C9                      1-  884     	MOVIA	0xc9
     000F 04rr                      1-  885     	SUBAR	_ledTime,W
     0010 0C03                      1-  886     	BTRSC	STATUS,0
                                    1-  887     	.line	156, "main.c"; 	ledTime = 0;
     0011 02rr                      1-  888     	CLRR	_ledTime
                                    1-  889     	.line	158, "main.c"; 	if(ledTime < 50)
     0012 2132                      1-  890     	MOVIA	0x32
     0013 04rr                      1-  891     	SUBAR	_ledTime,W
     0014 0C03                      1-  892     	BTRSC	STATUS,0
                                    1-  893     	MGOTO	_00190_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  894     	.line	160, "main.c"; 	LED1ON();
     0016 1Err                      1-  895     	BCR	_PORTB,5
                                    1-  896     	.line	161, "main.c"; 	LED2OFF();
     0017 18rr                      1-  897     	BSR	_PORTB,1
                                    1-  898     	.line	162, "main.c"; 	LED3OFF();
     0018 19rr                      1-  899     	BSR	_PORTB,2
                                    1-  900     	MGOTO	_00194_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  901     ;;unsigned compare: left < lit (0x64=100), size=1
     001A                           1-  902     _00190_DS_:
                                    1-  903     	.line	164, "main.c"; 	else if(ledTime < 100)
     001A 2164                      1-  904     	MOVIA	0x64
     001B 04rr                      1-  905     	SUBAR	_ledTime,W
     001C 0C03                      1-  906     	BTRSC	STATUS,0
                                    1-  907     	MGOTO	_00187_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  908     	.line	166, "main.c"; 	LED2ON();
     001E 1Crr                      1-  909     	BCR	_PORTB,1
                                    1-  910     	.line	167, "main.c"; 	LED1OFF();
     001F 1Arr                      1-  911     	BSR	_PORTB,5
                                    1-  912     	.line	168, "main.c"; 	LED3OFF();
     0020 19rr                      1-  913     	BSR	_PORTB,2
                                    1-  914     	MGOTO	_00194_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  915     ;;unsigned compare: left < lit (0x96=150), size=1
     0022                           1-  916     _00187_DS_:
                                    1-  917     	.line	170, "main.c"; 	else if(ledTime < 150)
     0022 2196                      1-  918     	MOVIA	0x96
     0023 04rr                      1-  919     	SUBAR	_ledTime,W
     0024 0C03                      1-  920     	BTRSC	STATUS,0
                                    1-  921     	MGOTO	_00184_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  922     	.line	172, "main.c"; 	LED3ON();
     0026 1Drr                      1-  923     	BCR	_PORTB,2
                                    1-  924     	.line	173, "main.c"; 	LED1OFF();
     0027 1Arr                      1-  925     	BSR	_PORTB,5
                                    1-  926     	.line	174, "main.c"; 	LED2OFF();
     0028 18rr                      1-  927     	BSR	_PORTB,1
                                    1-  928     	MGOTO	_00194_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
     002A                           1-  929     _00184_DS_:
                                    1-  930     	.line	178, "main.c"; 	LED1OFF();
     002A 1Arr                      1-  931     	BSR	_PORTB,5
                                    1-  932     	.line	179, "main.c"; 	LED2OFF();
     002B 18rr                      1-  933     	BSR	_PORTB,1
                                    1-  934     	.line	180, "main.c"; 	LED3OFF();
     002C 19rr                      1-  935     	BSR	_PORTB,2
     002D                           1-  936     _00194_DS_:
                                    1-  937     	.line	185, "main.c"; 	if(0x08&PORTB || chrgFullFlag)
     002D 0Drr                      1-  938     	BTRSC	_PORTB,3
                                    1-  939     	MGOTO	_00197_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F 01rr                      1-  940     	MOVR	_chrgFullFlag,W
     0030 0D03                      1-  941     	BTRSC	STATUS,2
                                    1-  942     	MGOTO	_00198_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
     0032                           1-  943     _00197_DS_:
                                    1-  944     	.line	188, "main.c"; 	if(++chrgFullTime > 200)
     0032 05rr                      1-  945     	INCR	_chrgFullTime,F
                                    1-  946     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  947     ;;unsigned compare: left >= lit (0xC9=201), size=1
     0033 21C9                      1-  948     	MOVIA	0xc9
     0034 04rr                      1-  949     	SUBAR	_chrgFullTime,W
     0035 0803                      1-  950     	BTRSS	STATUS,0
                                    1-  951     	MGOTO	_00207_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  952     	.line	190, "main.c"; 	chrgFullFlag = 1;
     0037 2101                      1-  953     	MOVIA	0x01
     0038 00rr                      1-  954     	MOVAR	_chrgFullFlag
                                    1-  955     	MGOTO	_00207_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
     003A                           1-  956     _00198_DS_:
                                    1-  957     	.line	196, "main.c"; 	chrgFullTime = 0;
     003A 02rr                      1-  958     	CLRR	_chrgFullTime
                                    1-  959     	MGOTO	_00207_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
     003C                           1-  960     _00205_DS_:
                                    1-  961     	.line	202, "main.c"; 	chrgFullFlag = 0;
     003C 02rr                      1-  962     	CLRR	_chrgFullFlag
                                    1-  963     	.line	203, "main.c"; 	if(startTime == 0 && workStep == 0)
     003D 01rr                      1-  964     	MOVR	_startTime,W
     003E 11rr                      1-  965     	IORAR	(_startTime + 1),W
     003F 0903                      1-  966     	BTRSS	STATUS,2
                                    1-  967     	MGOTO	_00207_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041 01rr                      1-  968     	MOVR	_workStep,W
     0042 0903                      1-  969     	BTRSS	STATUS,2
                                    1-  970     	MGOTO	_00207_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  971     	.line	205, "main.c"; 	LED1OFF();
     0044 1Arr                      1-  972     	BSR	_PORTB,5
                                    1-  973     	.line	206, "main.c"; 	LED2OFF();
     0045 18rr                      1-  974     	BSR	_PORTB,1
                                    1-  975     	.line	207, "main.c"; 	LED3OFF();
     0046 19rr                      1-  976     	BSR	_PORTB,2
                                    1-  977     	.line	208, "main.c"; 	PORTB &= 0xEF;
     0047 1Err                      1-  978     	BCR	_PORTB,4
     0048                           1-  979     _00207_DS_:
                                    1-  980     	.line	211, "main.c"; 	}
                                    1-  981     	RETURN	
     0048 0010                      3-   40 m1      ret
                                    1-  982     ; exit point of _chrgCon
                                    1-  984     ;***
                                    1-  985     ;  pBlock Stats: dbName = C
                                    1-  986     ;***
                                    1-  987     ;has an exit
                                    1-  988     ;functions called:
                                    1-  989     ;   __moduint
                                    1-  990     ;   __moduint
                                    1-  991     ;5 compiler assigned registers:
                                    1-  992     ;   STK02
                                    1-  993     ;   STK01
                                    1-  994     ;   STK00
                                    1-  995     ;   r0x1018
                                    1-  996     ;   r0x1019
                                    1-  997     ;; Starting pCode block
                                    1-  998     .segment "code"; module=main, function=_startCon
     0000                           1- 1000     _startCon:
                                    1- 1001     ; 2 exit points
                                    1- 1002     	.line	120, "main.c"; 	if(startTime > 0)
     0000 01rr                      1- 1003     	MOVR	_startTime,W
     0001 11rr                      1- 1004     	IORAR	(_startTime + 1),W
     0002 0D03                      1- 1005     	BTRSC	STATUS,2
                                    1- 1006     	MGOTO	_00168_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1007     	.line	122, "main.c"; 	startTime--;
     0004 21FF                      1- 1008     	MOVIA	0xff
     0005 03rr                      1- 1009     	ADDAR	_startTime,F
     0006 0803                      1- 1010     	BTRSS	STATUS,0
     0007 06rr                      1- 1011     	DECR	(_startTime + 1),F
                                    1- 1012     	.line	123, "main.c"; 	if(startTime%100 > 50)
     0008 2164                      1- 1013     	MOVIA	0x64
     0009 00rr                      1- 1014     	MOVAR	STK02
     000A 2100                      1- 1015     	MOVIA	0x00
     000B 00rr                      1- 1016     	MOVAR	STK01
     000C 01rr                      1- 1017     	MOVR	_startTime,W
     000D 00rr                      1- 1018     	MOVAR	STK00
     000E 01rr                      1- 1019     	MOVR	(_startTime + 1),W
                                    1- 1020     	MCALL	__moduint
     000F 2rrr                      3-   66 m1      LCALL rom_address
     0010 00rr                      1- 1021     	MOVAR	r0x1018
     0011 01rr                      1- 1022     	MOVR	STK00,W
     0012 00rr                      1- 1023     	MOVAR	r0x1019
                                    1- 1024     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 1025     ;;unsigned compare: left >= lit (0x33=51), size=2
     0013 2100                      1- 1026     	MOVIA	0x00
     0014 04rr                      1- 1027     	SUBAR	r0x1018,W
     0015 0903                      1- 1028     	BTRSS	STATUS,2
                                    1- 1029     	MGOTO	_00176_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
     0017 2133                      1- 1030     	MOVIA	0x33
     0018 04rr                      1- 1031     	SUBAR	r0x1019,W
     0019                           1- 1032     _00176_DS_:
     0019 0803                      1- 1033     	BTRSS	STATUS,0
                                    1- 1034     	MGOTO	_00164_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1035     	.line	125, "main.c"; 	LED1ON();
     001B 1Err                      1- 1036     	BCR	_PORTB,5
                                    1- 1037     	.line	126, "main.c"; 	LED2ON();
     001C 1Crr                      1- 1038     	BCR	_PORTB,1
                                    1- 1039     	.line	127, "main.c"; 	LED3ON();
     001D 1Drr                      1- 1040     	BCR	_PORTB,2
                                    1- 1041     	MGOTO	_00168_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
     001F                           1- 1042     _00164_DS_:
                                    1- 1043     	.line	131, "main.c"; 	LED1OFF();
     001F 1Arr                      1- 1044     	BSR	_PORTB,5
                                    1- 1045     	.line	132, "main.c"; 	LED2OFF();
     0020 18rr                      1- 1046     	BSR	_PORTB,1
                                    1- 1047     	.line	133, "main.c"; 	LED3OFF();
     0021 19rr                      1- 1048     	BSR	_PORTB,2
     0022                           1- 1049     _00168_DS_:
                                    1- 1050     	.line	136, "main.c"; 	}
                                    1- 1051     	RETURN	
     0022 0010                      3-   40 m1      ret
                                    1- 1052     ; exit point of _startCon
                                    1- 1055     ;	code size estimation:
                                    1- 1056     ;	  419+    0 =   419 instructions (  838 byte)
                                    1- 1058     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 00000006
__PROCESSOR__           Constant 00800514
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000000
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8a051e.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A051E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000003FF
DATA ROM     = 0x00000000 - 0x000003FF
RESERVED MEM = 0x00000400 - 0x00000410
SRAM / SFR   = 0x00000000 - 0x00000000
