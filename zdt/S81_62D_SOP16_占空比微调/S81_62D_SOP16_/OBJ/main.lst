
                    Nyquest Technology Co., Ltd.

NYASM 2.30

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_F_Quarter_VDD_Convert
                                    1-   15     	extern	__divuchar
                                    1-   16     	extern	__moduchar
                                    1-   17     	extern	__mulint
                                    1-   18     	extern	__divuint
                                    1-   19     	extern	_PORTAbits
                                    1-   20     	extern	_PORTBbits
                                    1-   21     	extern	_PCONbits
                                    1-   22     	extern	_BWUCONbits
                                    1-   23     	extern	_ABPLCONbits
                                    1-   24     	extern	_BPHCONbits
                                    1-   25     	extern	_INTEbits
                                    1-   26     	extern	_INTFbits
                                    1-   27     	extern	_ADMDbits
                                    1-   28     	extern	_ADRbits
                                    1-   29     	extern	_ADVREFHbits
                                    1-   30     	extern	_ADCRbits
                                    1-   31     	extern	_AWUCONbits
                                    1-   32     	extern	_PACONbits
                                    1-   33     	extern	_INTEDGbits
                                    1-   34     	extern	_ANAENbits
                                    1-   35     	extern	_RFCbits
                                    1-   36     	extern	_INTE2bits
                                    1-   37     	extern	_INDF
                                    1-   38     	extern	_TMR0
                                    1-   39     	extern	_PCL
                                    1-   40     	extern	_STATUS
                                    1-   41     	extern	_FSR
                                    1-   42     	extern	_PORTA
                                    1-   43     	extern	_PORTB
                                    1-   44     	extern	_PCON
                                    1-   45     	extern	_BWUCON
                                    1-   46     	extern	_PCHBUF
                                    1-   47     	extern	_ABPLCON
                                    1-   48     	extern	_BPHCON
                                    1-   49     	extern	_INTE
                                    1-   50     	extern	_INTF
                                    1-   51     	extern	_ADMD
                                    1-   52     	extern	_ADR
                                    1-   53     	extern	_ADD
                                    1-   54     	extern	_ADVREFH
                                    1-   55     	extern	_ADCR
                                    1-   56     	extern	_AWUCON
                                    1-   57     	extern	_PACON
                                    1-   58     	extern	_INTEDG
                                    1-   59     	extern	_TMRH
                                    1-   60     	extern	_ANAEN
                                    1-   61     	extern	_RFC
                                    1-   62     	extern	_TM3RH
                                    1-   63     	extern	_INTE2
                                    1-   64     	extern	_TMR1
                                    1-   65     	extern	_T1CR1
                                    1-   66     	extern	_T1CR2
                                    1-   67     	extern	_PWM1DUTY
                                    1-   68     	extern	_PS1CV
                                    1-   69     	extern	_BZ1CR
                                    1-   70     	extern	_IRCR
                                    1-   71     	extern	_TBHP
                                    1-   72     	extern	_TBHD
                                    1-   73     	extern	_TMR2
                                    1-   74     	extern	_T2CR1
                                    1-   75     	extern	_T2CR2
                                    1-   76     	extern	_PWM2DUTY
                                    1-   77     	extern	_PS2CV
                                    1-   78     	extern	_BZ2CR
                                    1-   79     	extern	_OSCCR
                                    1-   80     	extern	_TMR3
                                    1-   81     	extern	_T3CR1
                                    1-   82     	extern	_T3CR2
                                    1-   83     	extern	_PWM3DUTY
                                    1-   84     	extern	_PS3CV
                                    1-   85     	extern	_BZ3CR
                                    1-   86     	extern	_IOSTA
                                    1-   87     	extern	_IOSTB
                                    1-   88     	extern	_APHCON
                                    1-   89     	extern	_PS0CV
                                    1-   90     	extern	_BODCON
                                    1-   91     	extern	_CMPCR
                                    1-   92     	extern	_PCON1
                                    1-   93     	extern	_T0MD
                                    1-   94     	extern	___sdcc_saved_fsr
                                    1-   95     	extern	___sdcc_saved_stk00
                                    1-   96     	extern	___sdcc_saved_stk01
                                    1-   97     	extern	__gptrget1
                                    1-   98     	extern	__nyc_ny8_startup
                                    1-   99     ;--------------------------------------------------------
                                    1-  100     ; global declarations
                                    1-  101     ;--------------------------------------------------------
                                    1-  102     	extern	_Delay10Us
                                    1-  103     	extern	_delay_us
                                    1-  104     	extern	_delay
                                    1-  105     	extern	_F_wait_eoc
                                    1-  106     	extern	_F_AIN2_Convert
                                    1-  107     	extern	_F_AIN0_Convert
                                    1-  108     	extern	_checkBatAD
                                    1-  109     	extern	_checkOutA
                                    1-  110     	extern	_gotoSleep
                                    1-  111     	extern	_refreshBat
                                    1-  112     	extern	_refresh
                                    1-  113     	extern	_ind_light_disp
                                    1-  114     	extern	_pwm1Stop
                                    1-  115     	extern	_pwm1Init
                                    1-  116     	extern	_initAD
                                    1-  117     	extern	_initSys
                                    1-  118     	extern	_keyRead2
                                    1-  119     	extern	_keyRead
                                    1-  120     	extern	_keyCtr
                                    1-  121     	extern	_workCtr
                                    1-  122     	extern	_chrgCtr
                                    1-  123     	extern	_powerOff
                                    1-  124     	extern	_isr
                                    1-  125     	extern	_main
                                    1-  126     	extern	_getbatGe
                                    1-  127     	extern	_workStep
                                    1-  128     	extern	_IntFlag
                                    1-  129     	extern	_intCount
                                    1-  130     	extern	_count1s
                                    1-  131     	extern	_count900s
                                    1-  132     	extern	_closeFlag
                                    1-  133     	extern	_shiwei
                                    1-  134     	extern	_gewei
                                    1-  135     	extern	_workStepshiwei
                                    1-  136     	extern	_workStepgewei
                                    1-  137     	extern	_powerTime
                                    1-  138     	extern	_powerFlag
                                    1-  139     	extern	_keyCount2
                                    1-  140     	extern	_lockKeyFlag
                                    1-  141     	extern	_count100ms
                                    1-  142     	extern	_keyCount
                                    1-  143     	extern	_longPressFlag
                                    1-  144     	extern	_R_AIN2_DATA
                                    1-  145     	extern	_R_AIN2_DATA_LB
                                    1-  146     	extern	_firstTime
                                    1-  147     	extern	_chrgStep
                                    1-  148     	extern	_chrgFlag
                                    1-  149     	extern	_sleepTime
                                    1-  150     	extern	_batValue
                                    1-  151     	extern	_showBatValue
                                    1-  152     	extern	_batTime
                                    1-  153     	extern	_subBatTime
                                    1-  154     	extern	_currentDuty
                                    1-  155     	extern	_closeCount
                                    1-  156     	extern	_overCount
                                    1-  157     	extern	_overFlag
                                    1-  158     	extern	_shanshuoTime
                                    1-  159     	extern	_zeroTime
                                    1-  160     	extern	_zeroFlag
                                    1-  161     	extern	_zeroCount
                                    1-  162     	extern	_chrgFullFlag
                                    1-  164     	extern PSAVE
                                    1-  165     	extern SSAVE
                                    1-  166     	extern WSAVE
                                    1-  167     	extern STK04
                                    1-  168     	extern STK03
                                    1-  169     	extern STK02
                                    1-  170     	extern STK01
                                    1-  171     	extern STK00
                                    1-  173     .segment "uninit", 0x20000040
 20000040                           1-  174     PSAVE:
                                    1-  175     	.res 1
 20000041                           1-  176     SSAVE:
                                    1-  177     	.res 1
 20000042                           1-  178     WSAVE:
                                    1-  179     	.res 1
 20000043                           1-  180     STK04:
                                    1-  181     	.res 1
 20000044                           1-  182     STK03:
                                    1-  183     	.res 1
 20000045                           1-  184     STK02:
                                    1-  185     	.res 1
 20000046                           1-  186     STK01:
                                    1-  187     	.res 1
 20000047                           1-  188     STK00:
                                    1-  189     	.res 1
                                    1-  191     ;--------------------------------------------------------
                                    1-  192     ; global definitions
                                    1-  193     ;--------------------------------------------------------
                                    1-  194     ;--------------------------------------------------------
                                    1-  195     ; absolute symbol definitions
                                    1-  196     ;--------------------------------------------------------
                                    1-  197     ;--------------------------------------------------------
                                    1-  198     ; compiler-defined variables
                                    1-  199     ;--------------------------------------------------------
                                    1-  200     .segment "uninit"
     0000                           1-  201     r0x105A:
                                    1-  202     	.res	1
                                    1-  203     .segment "uninit"
     0000                           1-  204     r0x105B:
                                    1-  205     	.res	1
                                    1-  206     .segment "uninit"
     0000                           1-  207     r0x105C:
                                    1-  208     	.res	1
                                    1-  209     .segment "uninit"
     0000                           1-  210     r0x105E:
                                    1-  211     	.res	1
                                    1-  212     .segment "uninit"
     0000                           1-  213     r0x1059:
                                    1-  214     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     r0x1058:
                                    1-  217     	.res	1
                                    1-  218     .segment "uninit"
     0000                           1-  219     r0x1057:
                                    1-  220     	.res	1
                                    1-  221     .segment "uninit"
     0000                           1-  222     r0x1056:
                                    1-  223     	.res	1
                                    1-  224     .segment "uninit"
     0000                           1-  225     r0x1055:
                                    1-  226     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     r0x1054:
                                    1-  229     	.res	1
                                    1-  230     .segment "uninit"
     0000                           1-  231     r0x104C:
                                    1-  232     	.res	1
                                    1-  233     .segment "uninit"
     0000                           1-  234     r0x104D:
                                    1-  235     	.res	1
                                    1-  236     .segment "uninit"
     0000                           1-  237     r0x1051:
                                    1-  238     	.res	1
                                    1-  239     .segment "uninit"
     0000                           1-  240     r0x1052:
                                    1-  241     	.res	1
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x104E:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x104F:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x104B:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x103F:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x103E:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x1040:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x1049:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x104A:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x1043:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1044:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1046:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1038:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x1039:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x103A:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x103D:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x1032:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x1033:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x1034:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x1037:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x102E:
                                    1-  301     	.res	1
                                    1-  302     .segment "uninit"
     0000                           1-  303     r0x102D:
                                    1-  304     	.res	1
                                    1-  305     .segment "uninit"
     0000                           1-  306     r0x102F:
                                    1-  307     	.res	1
                                    1-  308     .segment "uninit"
     0000                           1-  309     r0x1030:
                                    1-  310     	.res	1
                                    1-  311     .segment "uninit"
     0000                           1-  312     r0x1031:
                                    1-  313     	.res	1
                                    1-  314     .segment "uninit"
     0000                           1-  315     r0x102C:
                                    1-  316     	.res	1
                                    1-  317     ;--------------------------------------------------------
                                    1-  318     ; initialized data
                                    1-  319     ;--------------------------------------------------------
                                    1-  321     .segment "idata"
     0000                           1-  322     _workStep:
     0000 0000                      1-  323     	dw	0x00
                                    1-  327     .segment "idata"
     0000                           1-  328     _IntFlag:
     0000 0000                      1-  329     	dw	0x00
                                    1-  333     .segment "idata"
     0000                           1-  334     _intCount:
     0000 0000                      1-  335     	dw	0x00
                                    1-  339     .segment "idata"
     0000                           1-  340     _count1s:
     0000 0000                      1-  341     	dw	0x00
                                    1-  345     .segment "idata"
     0000                           1-  346     _count900s:
     0000 0000 0000                 1-  347     	dw	0x00, 0x00
                                    1-  351     .segment "idata"
     0000                           1-  352     _closeFlag:
     0000 0000                      1-  353     	dw	0x00
                                    1-  357     .segment "idata"
     0000                           1-  358     _shiwei:
     0000 0000                      1-  359     	dw	0x00
                                    1-  363     .segment "idata"
     0000                           1-  364     _gewei:
     0000 0000                      1-  365     	dw	0x00
                                    1-  369     .segment "idata"
     0000                           1-  370     _workStepshiwei:
     0000 0000                      1-  371     	dw	0x00
                                    1-  375     .segment "idata"
     0000                           1-  376     _workStepgewei:
     0000 0000                      1-  377     	dw	0x00
                                    1-  381     .segment "idata"
     0000                           1-  382     _powerTime:
     0000 0000 0000                 1-  383     	dw	0x00, 0x00
                                    1-  387     .segment "idata"
     0000                           1-  388     _powerFlag:
     0000 0000                      1-  389     	dw	0x00
                                    1-  393     .segment "idata"
     0000                           1-  394     _keyCount2:
     0000 0000                      1-  395     	dw	0x00
                                    1-  399     .segment "idata"
     0000                           1-  400     _lockKeyFlag:
     0000 0000                      1-  401     	dw	0x00
                                    1-  405     .segment "idata"
     0000                           1-  406     _count100ms:
     0000 0000                      1-  407     	dw	0x00
                                    1-  411     .segment "idata"
     0000                           1-  412     _keyCount:
     0000 0000                      1-  413     	dw	0x00
                                    1-  417     .segment "idata"
     0000                           1-  418     _longPressFlag:
     0000 0000                      1-  419     	dw	0x00
                                    1-  423     .segment "idata"
     0000                           1-  424     _R_AIN2_DATA:
     0000 0000 0000                 1-  425     	dw	0x00, 0x00
                                    1-  429     .segment "idata"
     0000                           1-  430     _R_AIN2_DATA_LB:
     0000 0000                      1-  431     	dw	0x00
                                    1-  435     .segment "idata"
     0000                           1-  436     _firstTime:
     0000 0000                      1-  437     	dw	0x00
                                    1-  441     .segment "idata"
     0000                           1-  442     _chrgStep:
     0000 0000                      1-  443     	dw	0x00
                                    1-  447     .segment "idata"
     0000                           1-  448     _chrgFlag:
     0000 0000                      1-  449     	dw	0x00
                                    1-  453     .segment "idata"
     0000                           1-  454     _sleepTime:
     0000 0000                      1-  455     	dw	0x00
                                    1-  459     .segment "idata"
     0000                           1-  460     _batValue:
     0000 0000                      1-  461     	dw	0x00
                                    1-  465     .segment "idata"
     0000                           1-  466     _showBatValue:
     0000 0000                      1-  467     	dw	0x00
                                    1-  471     .segment "idata"
     0000                           1-  472     _batTime:
     0000 0000 0000                 1-  473     	dw	0x00, 0x00
                                    1-  477     .segment "idata"
     0000                           1-  478     _subBatTime:
     0000 0000 0000                 1-  479     	dw	0x00, 0x00
                                    1-  483     .segment "idata"
     0000                           1-  484     _currentDuty:
     0000 0000                      1-  485     	dw	0x00
                                    1-  489     .segment "idata"
     0000                           1-  490     _closeCount:
     0000 0000                      1-  491     	dw	0x00
                                    1-  495     .segment "idata"
     0000                           1-  496     _overCount:
     0000 0000                      1-  497     	dw	0x00
                                    1-  501     .segment "idata"
     0000                           1-  502     _overFlag:
     0000 0000                      1-  503     	dw	0x00
                                    1-  507     .segment "idata"
     0000                           1-  508     _shanshuoTime:
     0000 0000                      1-  509     	dw	0x00
                                    1-  513     .segment "idata"
     0000                           1-  514     _zeroTime:
     0000 0000                      1-  515     	dw	0x00
                                    1-  519     .segment "idata"
     0000                           1-  520     _zeroFlag:
     0000 0000                      1-  521     	dw	0x00
                                    1-  525     .segment "idata"
     0000                           1-  526     _zeroCount:
     0000 0000                      1-  527     	dw	0x00
                                    1-  531     .segment "idata"
     0000                           1-  532     _chrgFullFlag:
     0000 0000                      1-  533     	dw	0x00
                                    1-  537     .segment "code"
     0000                           1-  538     _table:
     0000 203F                      1-  539     	retia 0x3f
     0001 2006                      1-  540     	retia 0x06
     0002 205B                      1-  541     	retia 0x5b
     0003 204F                      1-  542     	retia 0x4f
     0004 2066                      1-  543     	retia 0x66
     0005 206D                      1-  544     	retia 0x6d
     0006 207D                      1-  545     	retia 0x7d
     0007 2007                      1-  546     	retia 0x07
     0008 207F                      1-  547     	retia 0x7f
     0009 206F                      1-  548     	retia 0x6f
     000A 2079                      1-  549     	retia 0x79
     000B 2038                      1-  550     	retia 0x38
     000C 205C                      1-  551     	retia 0x5c
                                    1-  554     .segment "code"
     0000                           1-  555     _table2:
     0000 2000                      1-  556     	retia 0x00
     0001 2001                      1-  557     	retia 0x01
     0002 2003                      1-  558     	retia 0x03
     0003 2007                      1-  559     	retia 0x07
     0004 200F                      1-  560     	retia 0x0f
     0005 201F                      1-  561     	retia 0x1f
     0006 203F                      1-  562     	retia 0x3f
     0007 203E                      1-  563     	retia 0x3e
     0008 203C                      1-  564     	retia 0x3c
     0009 2038                      1-  565     	retia 0x38
     000A 2030                      1-  566     	retia 0x30
     000B 2020                      1-  567     	retia 0x20
                                    1-  569     ;--------------------------------------------------------
                                    1-  570     ; overlayable items in internal ram 
                                    1-  571     ;--------------------------------------------------------
                                    1-  572     ;	udata_ovr
                                    1-  573     ;--------------------------------------------------------
                                    1-  574     ; reset vector 
                                    1-  575     ;--------------------------------------------------------
                                    1-  576     ORG	0x0000
     0000 3rrr                      1-  577     	LGOTO	__nyc_ny8_startup
                                    1-  578     ;--------------------------------------------------------
                                    1-  579     ; interrupt and initialization code
                                    1-  580     ;--------------------------------------------------------
                                    1-  581     ORG 0x0008
                                    1-  582     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  584     .segment "code"
     0000                           1-  585     __sdcc_interrupt:
                                    1-  586     ;***
                                    1-  587     ;  pBlock Stats: dbName = I
                                    1-  588     ;***
                                    1-  589     ;2 compiler assigned registers:
                                    1-  590     ;   STK00
                                    1-  591     ;   STK01
                                    1-  592     ;; Starting pCode block
     0000                           1-  593     _isr:
                                    1-  594     ; 0 exit points
                                    1-  595     	.line	100, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  596     	MOVAR	WSAVE
     0001 1503                      1-  597     	SWAPR	STATUS,W
     0002 0283                      1-  598     	CLRR	STATUS
     0003 00rr                      1-  599     	MOVAR	SSAVE
     0004 010A                      1-  600     	MOVR	PCHBUF,W
     0005 028A                      1-  601     	CLRR	PCHBUF
     0006 00rr                      1-  602     	MOVAR	PSAVE
     0007 0104                      1-  603     	MOVR	FSR,W
                                    1-  604     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  605     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  606     	MOVR	STK00,W
                                    1-  607     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  608     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  609     	MOVR	STK01,W
                                    1-  610     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  611     	MOVAR	___sdcc_saved_stk01
                                    1-  612     	.line	102, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  613     	BTRSS	_INTFbits,0
                                    1-  614     	MGOTO	_00113_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  615     	.line	104, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  616     	MOVIA	0x37
     0013 03rr                      1-  617     	ADDAR	_TMR0,F
                                    1-  618     	.line	106, "main.c"; 	if(++intCount >= 100)
                                    1-  619     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  620     	INCR	_intCount,F
                                    1-  621     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  622     	MOVIA	0x64
     0017 04rr                      1-  623     	SUBAR	_intCount,W
     0018 0803                      1-  624     	BTRSS	STATUS,0
                                    1-  625     	MGOTO	_00113_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  626     	.line	108, "main.c"; 	IntFlag = 1;
     001A 2101                      1-  627     	MOVIA	0x01
                                    1-  628     	BANKSEL	_IntFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  629     	MOVAR	_IntFlag
                                    1-  630     	.line	109, "main.c"; 	intCount = 0;
                                    1-  631     	BANKSEL	_intCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  632     	CLRR	_intCount
                                    1-  633     	.line	110, "main.c"; 	if(++count1s >= 100)
                                    1-  634     	BANKSEL	_count1s
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1-  635     	INCR	_count1s,F
                                    1-  636     ;;unsigned compare: left < lit (0x64=100), size=1
     0021 2164                      1-  637     	MOVIA	0x64
     0022 04rr                      1-  638     	SUBAR	_count1s,W
     0023 0803                      1-  639     	BTRSS	STATUS,0
                                    1-  640     	MGOTO	_00113_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  641     	.line	112, "main.c"; 	count1s = 0;
     0025 02rr                      1-  642     	CLRR	_count1s
                                    1-  643     	.line	113, "main.c"; 	if(workStep)
                                    1-  644     	BANKSEL	_workStep
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1-  645     	MOVR	_workStep,W
     0028 0D03                      1-  646     	BTRSC	STATUS,2
                                    1-  647     	MGOTO	_00106_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  648     	.line	115, "main.c"; 	++count900s;
                                    1-  649     	BANKSEL	_count900s
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 05rr                      1-  650     	INCR	_count900s,F
     002C 0D03                      1-  651     	BTRSC	STATUS,2
     002D 05rr                      1-  652     	INCR	(_count900s + 1),F
                                    1-  653     	MGOTO	_00113_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1-  654     _00106_DS_:
                                    1-  655     	.line	119, "main.c"; 	count900s = 0;
                                    1-  656     	BANKSEL	_count900s
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 02rr                      1-  657     	CLRR	_count900s
     0031 02rr                      1-  658     	CLRR	(_count900s + 1)
     0032                           1-  659     _00113_DS_:
                                    1-  660     	.line	128, "main.c"; 	if(INTFbits.PABIF)
     0032 08rr                      1-  661     	BTRSS	_INTFbits,1
                                    1-  662     	MGOTO	_00115_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  663     	.line	130, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0034 21FD                      1-  664     	MOVIA	0xfd
     0035 00rr                      1-  665     	MOVAR	_INTF
     0036                           1-  666     _00115_DS_:
                                    1-  667     	.line	133, "main.c"; 	INTF = 0;
     0036 02rr                      1-  668     	CLRR	_INTF
                                    1-  669     	.line	135, "main.c"; 	}
                                    1-  670     	BANKSEL	___sdcc_saved_stk01
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 01rr                      1-  671     	MOVR	___sdcc_saved_stk01,W
     0039 00rr                      1-  672     	MOVAR	STK01
                                    1-  673     	BANKSEL	___sdcc_saved_stk00
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1-  674     	MOVR	___sdcc_saved_stk00,W
     003C 00rr                      1-  675     	MOVAR	STK00
                                    1-  676     	BANKSEL	___sdcc_saved_fsr
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 01rr                      1-  677     	MOVR	___sdcc_saved_fsr,W
     003F 0084                      1-  678     	MOVAR	FSR
     0040 01rr                      1-  679     	MOVR	PSAVE,W
     0041 008A                      1-  680     	MOVAR	PCHBUF
     0042 0283                      1-  681     	CLRR	STATUS
     0043 15rr                      1-  682     	SWAPR	SSAVE,W
     0044 0083                      1-  683     	MOVAR	STATUS
     0045 15rr                      1-  684     	SWAPR	WSAVE,F
     0046 15rr                      1-  685     	SWAPR	WSAVE,W
     0047                           1-  686     END_OF_INTERRUPT:
     0047 0011                      1-  687     	RETIE	
                                    1-  689     ;--------------------------------------------------------
                                    1-  690     ; code
                                    1-  691     ;--------------------------------------------------------
                                    1-  692     ;***
                                    1-  693     ;  pBlock Stats: dbName = M
                                    1-  694     ;***
                                    1-  695     ;has an exit
                                    1-  696     ;functions called:
                                    1-  697     ;   _initSys
                                    1-  698     ;   _initAD
                                    1-  699     ;   _delay_us
                                    1-  700     ;   _delay_us
                                    1-  701     ;   _refresh
                                    1-  702     ;   _refreshBat
                                    1-  703     ;   _refresh
                                    1-  704     ;   _refreshBat
                                    1-  705     ;   __gptrget1
                                    1-  706     ;   _ind_light_disp
                                    1-  707     ;   _delay_us
                                    1-  708     ;   __gptrget1
                                    1-  709     ;   _ind_light_disp
                                    1-  710     ;   _delay_us
                                    1-  711     ;   __gptrget1
                                    1-  712     ;   _ind_light_disp
                                    1-  713     ;   _delay_us
                                    1-  714     ;   __gptrget1
                                    1-  715     ;   _ind_light_disp
                                    1-  716     ;   _delay_us
                                    1-  717     ;   _chrgCtr
                                    1-  718     ;   _checkBatAD
                                    1-  719     ;   _checkOutA
                                    1-  720     ;   _powerOff
                                    1-  721     ;   _gotoSleep
                                    1-  722     ;   _powerOff
                                    1-  723     ;   _initSys
                                    1-  724     ;   _initAD
                                    1-  725     ;   _delay_us
                                    1-  726     ;   _delay_us
                                    1-  727     ;   _refresh
                                    1-  728     ;   _refreshBat
                                    1-  729     ;   _refresh
                                    1-  730     ;   _refreshBat
                                    1-  731     ;   __gptrget1
                                    1-  732     ;   _ind_light_disp
                                    1-  733     ;   _delay_us
                                    1-  734     ;   __gptrget1
                                    1-  735     ;   _ind_light_disp
                                    1-  736     ;   _delay_us
                                    1-  737     ;   __gptrget1
                                    1-  738     ;   _ind_light_disp
                                    1-  739     ;   _delay_us
                                    1-  740     ;   __gptrget1
                                    1-  741     ;   _ind_light_disp
                                    1-  742     ;   _delay_us
                                    1-  743     ;   _chrgCtr
                                    1-  744     ;   _checkBatAD
                                    1-  745     ;   _checkOutA
                                    1-  746     ;   _powerOff
                                    1-  747     ;   _gotoSleep
                                    1-  748     ;   _powerOff
                                    1-  749     ;7 compiler assigned registers:
                                    1-  750     ;   r0x105A
                                    1-  751     ;   STK01
                                    1-  752     ;   STK00
                                    1-  753     ;   r0x105B
                                    1-  754     ;   r0x105C
                                    1-  755     ;   r0x105D
                                    1-  756     ;   r0x105E
                                    1-  757     ;; Starting pCode block
                                    1-  758     .segment "code"; module=main, function=_main
     0000                           1-  760     _main:
                                    1-  761     ; 2 exit points
                                    1-  762     	.line	140, "main.c"; 	initSys();
                                    1-  763     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  764     	.line	141, "main.c"; 	initAD();
                                    1-  765     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  766     	.line	142, "main.c"; 	firstTime = 200;
     0002 21C8                      1-  767     	MOVIA	0xc8
                                    1-  768     	BANKSEL	_firstTime
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1-  769     	MOVAR	_firstTime
     0005                           1-  770     _00159_DS_:
                                    1-  771     	.line	145, "main.c"; 	CLRWDT();
     0005 0002                      1-  772     	clrwdt
                                    1-  773     	.line	146, "main.c"; 	if(powerFlag)
                                    1-  774     	BANKSEL	_powerFlag
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 01rr                      1-  775     	MOVR	_powerFlag,W
     0008 0D03                      1-  776     	BTRSC	STATUS,2
                                    1-  777     	MGOTO	_00130_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  778     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  779     ;;unsigned compare: left >= lit (0x1A=26), size=1
                                    1-  780     	.line	148, "main.c"; 	if(shanshuoTime > 25)
     000A 211A                      1-  781     	MOVIA	0x1a
                                    1-  782     	BANKSEL	_shanshuoTime
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 04rr                      1-  783     	SUBAR	_shanshuoTime,W
     000D 0803                      1-  784     	BTRSS	STATUS,0
                                    1-  785     	MGOTO	_00124_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  786     	.line	150, "main.c"; 	delay_us(REFRESHTIME);
     000F 2164                      1-  787     	MOVIA	0x64
                                    1-  788     	MCALL	_delay_us
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  789     	.line	151, "main.c"; 	delay_us(REFRESHTIME);
     0011 2164                      1-  790     	MOVIA	0x64
                                    1-  791     	MCALL	_delay_us
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  792     	.line	152, "main.c"; 	if(zeroFlag)
                                    1-  793     	BANKSEL	_zeroFlag
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1-  794     	MOVR	_zeroFlag,W
     0015 0D03                      1-  795     	BTRSC	STATUS,2
                                    1-  796     	MGOTO	_00121_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  797     	.line	153, "main.c"; 	refresh();
                                    1-  798     	MCALL	_refresh
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  799     	MGOTO	_00125_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
     0019                           1-  800     _00121_DS_:
                                    1-  801     	.line	155, "main.c"; 	refreshBat();
                                    1-  802     	MCALL	_refreshBat
     0019 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  803     	MGOTO	_00125_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
     001B                           1-  804     _00124_DS_:
                                    1-  805     	.line	159, "main.c"; 	refresh();
                                    1-  806     	MCALL	_refresh
     001B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  807     	.line	160, "main.c"; 	refreshBat();
                                    1-  808     	MCALL	_refreshBat
     001C 2rrr                      3-   66 m1      LCALL rom_address
     001D                           1-  809     _00125_DS_:
                                    1-  810     	.line	162, "main.c"; 	IOSTA &= 0xDF;
     001D 001r                      1-  811     	IOSTR	_IOSTA
                                    1-  812     	BANKSEL	r0x105A
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1-  813     	MOVAR	r0x105A
     0020 1Err                      1-  814     	BCR	r0x105A,5
     0021 01rr                      1-  815     	MOVR	r0x105A,W
     0022 000r                      1-  816     	IOST	_IOSTA
                                    1-  817     	.line	163, "main.c"; 	PORTA &= 0xDF;
                                    1-  818     	BANKSEL	_PORTA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 1Err                      1-  819     	BCR	_PORTA,5
                                    1-  820     	MGOTO	_00131_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
     0026                           1-  821     _00130_DS_:
                                    1-  822     	.line	167, "main.c"; 	if(firstTime)
                                    1-  823     	BANKSEL	_firstTime
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1-  824     	MOVR	_firstTime,W
     0028 0D03                      1-  825     	BTRSC	STATUS,2
                                    1-  826     	MGOTO	_00127_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  827     	.line	169, "main.c"; 	COM1 = COM2 = COM3 = COM4 = 1;
     002A 1Arr                      1-  828     	BSR	_PORTB,5
     002B 0Arr                      1-  829     	BTRSS	_PORTB,5
     002C 1Err                      1-  830     	BCR	_PORTB,4
     002D 0Err                      1-  831     	BTRSC	_PORTB,5
     002E 1Arr                      1-  832     	BSR	_PORTB,4
     002F 0Err                      1-  833     	BTRSC	_PORTB,4
                                    1-  834     	MGOTO	_00010_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  835     	BANKSEL	_PORTA
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 1Drr                      1-  836     	BCR	_PORTA,3
     0033                           1-  837     _00010_DS_:
     0033 0Arr                      1-  838     	BTRSS	_PORTB,4
                                    1-  839     	MGOTO	_00011_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  840     	BANKSEL	_PORTA
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 19rr                      1-  841     	BSR	_PORTA,3
     0037                           1-  842     _00011_DS_:
                                    1-  843     	BANKSEL	_PORTA
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 09rr                      1-  844     	BTRSS	_PORTA,3
     0039 1Err                      1-  845     	BCR	_PORTA,4
     003A 0Drr                      1-  846     	BTRSC	_PORTA,3
     003B 1Arr                      1-  847     	BSR	_PORTA,4
                                    1-  848     	.line	170, "main.c"; 	ind_light_disp(table[8]);
     003C 21rr                      1-  849     	MOVIA	(_table + 8)
     003D 00rr                      1-  850     	MOVAR	STK01
     003E 21rr                      1-  851     	MOVIA	((_table + 8) >> 8) & 0xff
     003F 00rr                      1-  852     	MOVAR	STK00
     0040 2180                      1-  853     	MOVIA	0x80
                                    1-  854     	MCALL	__gptrget1
     0041 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  855     	BANKSEL	r0x105A
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1-  856     	MOVAR	r0x105A
                                    1-  857     	MCALL	_ind_light_disp
     0044 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  858     	.line	171, "main.c"; 	COM1 = 0;
                                    1-  859     	BANKSEL	_PORTA
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 1Err                      1-  860     	BCR	_PORTA,4
                                    1-  861     	.line	172, "main.c"; 	delay_us(REFRESHTIME);
     0047 2164                      1-  862     	MOVIA	0x64
                                    1-  863     	MCALL	_delay_us
     0048 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  864     	.line	173, "main.c"; 	COM1 = COM2 = COM3 = COM4 = 1;
     0049 1Arr                      1-  865     	BSR	_PORTB,5
     004A 0Arr                      1-  866     	BTRSS	_PORTB,5
     004B 1Err                      1-  867     	BCR	_PORTB,4
     004C 0Err                      1-  868     	BTRSC	_PORTB,5
     004D 1Arr                      1-  869     	BSR	_PORTB,4
     004E 0Err                      1-  870     	BTRSC	_PORTB,4
                                    1-  871     	MGOTO	_00012_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  872     	BANKSEL	_PORTA
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 1Drr                      1-  873     	BCR	_PORTA,3
     0052                           1-  874     _00012_DS_:
     0052 0Arr                      1-  875     	BTRSS	_PORTB,4
                                    1-  876     	MGOTO	_00013_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  877     	BANKSEL	_PORTA
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 19rr                      1-  878     	BSR	_PORTA,3
     0056                           1-  879     _00013_DS_:
                                    1-  880     	BANKSEL	_PORTA
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 09rr                      1-  881     	BTRSS	_PORTA,3
     0058 1Err                      1-  882     	BCR	_PORTA,4
     0059 0Drr                      1-  883     	BTRSC	_PORTA,3
     005A 1Arr                      1-  884     	BSR	_PORTA,4
                                    1-  885     	.line	174, "main.c"; 	ind_light_disp(table[8]);
     005B 21rr                      1-  886     	MOVIA	(_table + 8)
     005C 00rr                      1-  887     	MOVAR	STK01
     005D 21rr                      1-  888     	MOVIA	((_table + 8) >> 8) & 0xff
     005E 00rr                      1-  889     	MOVAR	STK00
     005F 2180                      1-  890     	MOVIA	0x80
                                    1-  891     	MCALL	__gptrget1
     0060 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  892     	BANKSEL	r0x105A
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 00rr                      1-  893     	MOVAR	r0x105A
                                    1-  894     	MCALL	_ind_light_disp
     0063 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  895     	.line	175, "main.c"; 	COM2 = 0;
                                    1-  896     	BANKSEL	_PORTA
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 1Drr                      1-  897     	BCR	_PORTA,3
                                    1-  898     	.line	176, "main.c"; 	delay_us(REFRESHTIME);
     0066 2164                      1-  899     	MOVIA	0x64
                                    1-  900     	MCALL	_delay_us
     0067 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  901     	.line	177, "main.c"; 	COM1 = COM2 = COM3 = COM4 = 1;
     0068 1Arr                      1-  902     	BSR	_PORTB,5
     0069 0Arr                      1-  903     	BTRSS	_PORTB,5
     006A 1Err                      1-  904     	BCR	_PORTB,4
     006B 0Err                      1-  905     	BTRSC	_PORTB,5
     006C 1Arr                      1-  906     	BSR	_PORTB,4
     006D 0Err                      1-  907     	BTRSC	_PORTB,4
                                    1-  908     	MGOTO	_00014_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  909     	BANKSEL	_PORTA
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 1Drr                      1-  910     	BCR	_PORTA,3
     0071                           1-  911     _00014_DS_:
     0071 0Arr                      1-  912     	BTRSS	_PORTB,4
                                    1-  913     	MGOTO	_00015_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  914     	BANKSEL	_PORTA
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 19rr                      1-  915     	BSR	_PORTA,3
     0075                           1-  916     _00015_DS_:
                                    1-  917     	BANKSEL	_PORTA
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 09rr                      1-  918     	BTRSS	_PORTA,3
     0077 1Err                      1-  919     	BCR	_PORTA,4
     0078 0Drr                      1-  920     	BTRSC	_PORTA,3
     0079 1Arr                      1-  921     	BSR	_PORTA,4
                                    1-  922     	.line	178, "main.c"; 	ind_light_disp(table[8]);
     007A 21rr                      1-  923     	MOVIA	(_table + 8)
     007B 00rr                      1-  924     	MOVAR	STK01
     007C 21rr                      1-  925     	MOVIA	((_table + 8) >> 8) & 0xff
     007D 00rr                      1-  926     	MOVAR	STK00
     007E 2180                      1-  927     	MOVIA	0x80
                                    1-  928     	MCALL	__gptrget1
     007F 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  929     	BANKSEL	r0x105A
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 00rr                      1-  930     	MOVAR	r0x105A
                                    1-  931     	MCALL	_ind_light_disp
     0082 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  932     	.line	179, "main.c"; 	COM3 = 0;
     0083 1Err                      1-  933     	BCR	_PORTB,4
                                    1-  934     	.line	180, "main.c"; 	delay_us(REFRESHTIME);
     0084 2164                      1-  935     	MOVIA	0x64
                                    1-  936     	MCALL	_delay_us
     0085 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  937     	.line	181, "main.c"; 	COM1 = COM2 = COM3 = COM4 = 1;
     0086 1Arr                      1-  938     	BSR	_PORTB,5
     0087 0Arr                      1-  939     	BTRSS	_PORTB,5
     0088 1Err                      1-  940     	BCR	_PORTB,4
     0089 0Err                      1-  941     	BTRSC	_PORTB,5
     008A 1Arr                      1-  942     	BSR	_PORTB,4
     008B 0Err                      1-  943     	BTRSC	_PORTB,4
                                    1-  944     	MGOTO	_00016_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  945     	BANKSEL	_PORTA
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 1Drr                      1-  946     	BCR	_PORTA,3
     008F                           1-  947     _00016_DS_:
     008F 0Arr                      1-  948     	BTRSS	_PORTB,4
                                    1-  949     	MGOTO	_00017_DS_
     0090 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  950     	BANKSEL	_PORTA
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 19rr                      1-  951     	BSR	_PORTA,3
     0093                           1-  952     _00017_DS_:
                                    1-  953     	BANKSEL	_PORTA
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 09rr                      1-  954     	BTRSS	_PORTA,3
     0095 1Err                      1-  955     	BCR	_PORTA,4
     0096 0Drr                      1-  956     	BTRSC	_PORTA,3
     0097 1Arr                      1-  957     	BSR	_PORTA,4
                                    1-  958     	.line	182, "main.c"; 	ind_light_disp(table[8]);
     0098 21rr                      1-  959     	MOVIA	(_table + 8)
     0099 00rr                      1-  960     	MOVAR	STK01
     009A 21rr                      1-  961     	MOVIA	((_table + 8) >> 8) & 0xff
     009B 00rr                      1-  962     	MOVAR	STK00
     009C 2180                      1-  963     	MOVIA	0x80
                                    1-  964     	MCALL	__gptrget1
     009D 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  965     	BANKSEL	r0x105A
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 00rr                      1-  966     	MOVAR	r0x105A
                                    1-  967     	MCALL	_ind_light_disp
     00A0 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  968     	.line	183, "main.c"; 	COM4 = 0;
     00A1 1Err                      1-  969     	BCR	_PORTB,5
                                    1-  970     	.line	184, "main.c"; 	delay_us(REFRESHTIME);
     00A2 2164                      1-  971     	MOVIA	0x64
                                    1-  972     	MCALL	_delay_us
     00A3 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  973     	.line	185, "main.c"; 	IOSTA &= 0xDF;
     00A4 001r                      1-  974     	IOSTR	_IOSTA
                                    1-  975     	BANKSEL	r0x105A
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 00rr                      1-  976     	MOVAR	r0x105A
     00A7 1Err                      1-  977     	BCR	r0x105A,5
     00A8 01rr                      1-  978     	MOVR	r0x105A,W
     00A9 000r                      1-  979     	IOST	_IOSTA
                                    1-  980     	.line	186, "main.c"; 	PORTA &= 0xDF;
                                    1-  981     	BANKSEL	_PORTA
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 1Err                      1-  982     	BCR	_PORTA,5
                                    1-  983     	MGOTO	_00131_DS_
     00AC 3rrr                      3-   63 m1      LGOTO rom_address
     00AD                           1-  984     _00127_DS_:
                                    1-  985     	.line	190, "main.c"; 	IOSTA |= 0x20;
     00AD 001r                      1-  986     	IOSTR	_IOSTA
                                    1-  987     	BANKSEL	r0x105A
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 00rr                      1-  988     	MOVAR	r0x105A
     00B0 1Arr                      1-  989     	BSR	r0x105A,5
     00B1 01rr                      1-  990     	MOVR	r0x105A,W
     00B2 000r                      1-  991     	IOST	_IOSTA
                                    1-  992     	.line	191, "main.c"; 	COM1 = COM2 = COM3 = COM4 = 1;
     00B3 1Arr                      1-  993     	BSR	_PORTB,5
     00B4 0Arr                      1-  994     	BTRSS	_PORTB,5
     00B5 1Err                      1-  995     	BCR	_PORTB,4
     00B6 0Err                      1-  996     	BTRSC	_PORTB,5
     00B7 1Arr                      1-  997     	BSR	_PORTB,4
     00B8 0Err                      1-  998     	BTRSC	_PORTB,4
                                    1-  999     	MGOTO	_00018_DS_
     00B9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1000     	BANKSEL	_PORTA
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 1Drr                      1- 1001     	BCR	_PORTA,3
     00BC                           1- 1002     _00018_DS_:
     00BC 0Arr                      1- 1003     	BTRSS	_PORTB,4
                                    1- 1004     	MGOTO	_00019_DS_
     00BD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1005     	BANKSEL	_PORTA
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 19rr                      1- 1006     	BSR	_PORTA,3
     00C0                           1- 1007     _00019_DS_:
                                    1- 1008     	BANKSEL	_PORTA
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 09rr                      1- 1009     	BTRSS	_PORTA,3
     00C2 1Err                      1- 1010     	BCR	_PORTA,4
     00C3 0Drr                      1- 1011     	BTRSC	_PORTA,3
     00C4 1Arr                      1- 1012     	BSR	_PORTA,4
     00C5                           1- 1013     _00131_DS_:
                                    1- 1014     	.line	195, "main.c"; 	if(workStep > 0 && currentDuty > (workStep + 170))
                                    1- 1015     	BANKSEL	_workStep
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 01rr                      1- 1016     	MOVR	_workStep,W
     00C7 0D03                      1- 1017     	BTRSC	STATUS,2
                                    1- 1018     	MGOTO	_00133_DS_
     00C8 3rrr                      3-   63 m1      LGOTO rom_address
     00C9 01rr                      1- 1019     	MOVR	_workStep,W
                                    1- 1020     	BANKSEL	r0x105A
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 00rr                      1- 1021     	MOVAR	r0x105A
                                    1- 1022     	BANKSEL	r0x105B
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 02rr                      1- 1023     	CLRR	r0x105B
     00CE 21AA                      1- 1024     	MOVIA	0xaa
                                    1- 1025     	BANKSEL	r0x105A
     00CF rrrr                      3-  110 m1      .banksel ram_address
     00D0 03rr                      1- 1026     	ADDAR	r0x105A,F
     00D1 0803                      1- 1027     	BTRSS	STATUS,0
                                    1- 1028     	MGOTO	_00020_DS_
     00D2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1029     	BANKSEL	r0x105B
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 05rr                      1- 1030     	INCR	r0x105B,F
     00D5                           1- 1031     _00020_DS_:
                                    1- 1032     	BANKSEL	_currentDuty
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 01rr                      1- 1033     	MOVR	_currentDuty,W
                                    1- 1034     	BANKSEL	r0x105C
     00D7 rrrr                      3-  110 m1      .banksel ram_address
     00D8 00rr                      1- 1035     	MOVAR	r0x105C
                                    1- 1036     ;;1	CLRR	r0x105D
                                    1- 1037     	BANKSEL	r0x105B
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 01rr                      1- 1038     	MOVR	r0x105B,W
     00DB 2580                      1- 1039     	ADDIA	0x80
                                    1- 1040     	BANKSEL	r0x105E
     00DC rrrr                      3-  110 m1      .banksel ram_address
     00DD 00rr                      1- 1041     	MOVAR	r0x105E
     00DE 2100                      1- 1042     	MOVIA	0x00
     00DF 2580                      1- 1043     	ADDIA	0x80
     00E0 04rr                      1- 1044     	SUBAR	r0x105E,W
     00E1 0903                      1- 1045     	BTRSS	STATUS,2
                                    1- 1046     	MGOTO	_00227_DS_
     00E2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1047     	BANKSEL	r0x105C
     00E3 rrrr                      3-  110 m1      .banksel ram_address
     00E4 01rr                      1- 1048     	MOVR	r0x105C,W
                                    1- 1049     	BANKSEL	r0x105A
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 04rr                      1- 1050     	SUBAR	r0x105A,W
     00E7                           1- 1051     _00227_DS_:
     00E7 0C03                      1- 1052     	BTRSC	STATUS,0
                                    1- 1053     	MGOTO	_00133_DS_
     00E8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1054     	.line	198, "main.c"; 	currentDuty = currentDuty - 1;
                                    1- 1055     	BANKSEL	_currentDuty
     00E9 rrrr                      3-  110 m1      .banksel ram_address
     00EA 06rr                      1- 1056     	DECR	_currentDuty,F
                                    1- 1057     	.line	199, "main.c"; 	PWM1DUTY = currentDuty;
     00EB 01rr                      1- 1058     	MOVR	_currentDuty,W
     00EC 00rr                      1- 1059     	SFUN	_PWM1DUTY
     00ED                           1- 1060     _00133_DS_:
                                    1- 1061     	.line	202, "main.c"; 	if(!IntFlag)
                                    1- 1062     	BANKSEL	_IntFlag
     00ED rrrr                      3-  110 m1      .banksel ram_address
     00EE 01rr                      1- 1063     	MOVR	_IntFlag,W
     00EF 0D03                      1- 1064     	BTRSC	STATUS,2
                                    1- 1065     	MGOTO	_00159_DS_
     00F0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1066     	.line	204, "main.c"; 	IntFlag = 0;
     00F1 02rr                      1- 1067     	CLRR	_IntFlag
                                    1- 1068     	.line	205, "main.c"; 	chrgCtr();
                                    1- 1069     	MCALL	_chrgCtr
     00F2 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1070     	.line	206, "main.c"; 	if(count1s %2 == 0)
                                    1- 1071     	BANKSEL	_count1s
     00F3 rrrr                      3-  110 m1      .banksel ram_address
     00F4 0Crr                      1- 1072     	BTRSC	_count1s,0
                                    1- 1073     	MGOTO	_00138_DS_
     00F5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1074     	.line	207, "main.c"; 	checkBatAD();
                                    1- 1075     	MCALL	_checkBatAD
     00F6 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1076     	MGOTO	_00139_DS_
     00F7 3rrr                      3-   63 m1      LGOTO rom_address
     00F8                           1- 1077     _00138_DS_:
                                    1- 1078     	.line	209, "main.c"; 	checkOutA();
                                    1- 1079     	MCALL	_checkOutA
     00F8 2rrr                      3-   66 m1      LCALL rom_address
     00F9                           1- 1080     _00139_DS_:
                                    1- 1081     	.line	210, "main.c"; 	if(chrgFlag == 0 && batValue == 0 && workStep > 0)
                                    1- 1082     	BANKSEL	_chrgFlag
     00F9 rrrr                      3-  110 m1      .banksel ram_address
     00FA 01rr                      1- 1083     	MOVR	_chrgFlag,W
     00FB 0903                      1- 1084     	BTRSS	STATUS,2
                                    1- 1085     	MGOTO	_00143_DS_
     00FC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1086     	BANKSEL	_batValue
     00FD rrrr                      3-  110 m1      .banksel ram_address
     00FE 01rr                      1- 1087     	MOVR	_batValue,W
     00FF 0903                      1- 1088     	BTRSS	STATUS,2
                                    1- 1089     	MGOTO	_00143_DS_
     0100 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1090     	BANKSEL	_workStep
     0101 rrrr                      3-  110 m1      .banksel ram_address
     0102 01rr                      1- 1091     	MOVR	_workStep,W
     0103 0D03                      1- 1092     	BTRSC	STATUS,2
                                    1- 1093     	MGOTO	_00143_DS_
     0104 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1094     	.line	212, "main.c"; 	if(++closeCount > 250)
                                    1- 1095     	BANKSEL	_closeCount
     0105 rrrr                      3-  110 m1      .banksel ram_address
     0106 05rr                      1- 1096     	INCR	_closeCount,F
                                    1- 1097     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1098     ;;unsigned compare: left >= lit (0xFB=251), size=1
     0107 21FB                      1- 1099     	MOVIA	0xfb
     0108 04rr                      1- 1100     	SUBAR	_closeCount,W
     0109 0803                      1- 1101     	BTRSS	STATUS,0
                                    1- 1102     	MGOTO	_00144_DS_
     010A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1103     	.line	214, "main.c"; 	closeCount = 0;
     010B 02rr                      1- 1104     	CLRR	_closeCount
                                    1- 1105     	.line	215, "main.c"; 	powerOff();
                                    1- 1106     	MCALL	_powerOff
     010C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1107     	MGOTO	_00144_DS_
     010D 3rrr                      3-   63 m1      LGOTO rom_address
     010E                           1- 1108     _00143_DS_:
                                    1- 1109     	.line	220, "main.c"; 	closeCount = 0;
                                    1- 1110     	BANKSEL	_closeCount
     010E rrrr                      3-  110 m1      .banksel ram_address
     010F 02rr                      1- 1111     	CLRR	_closeCount
     0110                           1- 1112     _00144_DS_:
                                    1- 1113     	.line	222, "main.c"; 	if(workStep == 0 && keyCount == 0 &&  keyCount2 == 0 && (PORTA & 0x02) == 0 && firstTime == 0 && powerFlag == 0)
                                    1- 1114     	BANKSEL	_workStep
     0110 rrrr                      3-  110 m1      .banksel ram_address
     0111 01rr                      1- 1115     	MOVR	_workStep,W
     0112 0903                      1- 1116     	BTRSS	STATUS,2
                                    1- 1117     	MGOTO	_00150_DS_
     0113 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1118     	BANKSEL	_keyCount
     0114 rrrr                      3-  110 m1      .banksel ram_address
     0115 01rr                      1- 1119     	MOVR	_keyCount,W
     0116 0903                      1- 1120     	BTRSS	STATUS,2
                                    1- 1121     	MGOTO	_00150_DS_
     0117 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1122     	BANKSEL	_keyCount2
     0118 rrrr                      3-  110 m1      .banksel ram_address
     0119 01rr                      1- 1123     	MOVR	_keyCount2,W
     011A 0903                      1- 1124     	BTRSS	STATUS,2
                                    1- 1125     	MGOTO	_00150_DS_
     011B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1126     	BANKSEL	_PORTA
     011C rrrr                      3-  110 m1      .banksel ram_address
     011D 0Crr                      1- 1127     	BTRSC	_PORTA,1
                                    1- 1128     	MGOTO	_00150_DS_
     011E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1129     	BANKSEL	_firstTime
     011F rrrr                      3-  110 m1      .banksel ram_address
     0120 01rr                      1- 1130     	MOVR	_firstTime,W
     0121 0903                      1- 1131     	BTRSS	STATUS,2
                                    1- 1132     	MGOTO	_00150_DS_
     0122 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1133     	BANKSEL	_powerFlag
     0123 rrrr                      3-  110 m1      .banksel ram_address
     0124 01rr                      1- 1134     	MOVR	_powerFlag,W
     0125 0903                      1- 1135     	BTRSS	STATUS,2
                                    1- 1136     	MGOTO	_00150_DS_
     0126 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1137     	.line	224, "main.c"; 	if(++sleepTime > 20)
                                    1- 1138     	BANKSEL	_sleepTime
     0127 rrrr                      3-  110 m1      .banksel ram_address
     0128 05rr                      1- 1139     	INCR	_sleepTime,F
                                    1- 1140     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1141     ;;unsigned compare: left >= lit (0x15=21), size=1
     0129 2115                      1- 1142     	MOVIA	0x15
     012A 04rr                      1- 1143     	SUBAR	_sleepTime,W
     012B 0C03                      1- 1144     	BTRSC	STATUS,0
                                    1- 1145     	.line	226, "main.c"; 	gotoSleep();
                                    1- 1146     	MCALL	_gotoSleep
     012C 2rrr                      3-   66 m1      LCALL rom_address
     012D                           1- 1147     _00150_DS_:
                                    1- 1148     	.line	230, "main.c"; 	if(count900s >= 900)
     012D 2103                      1- 1149     	MOVIA	0x03
                                    1- 1150     	BANKSEL	_count900s
     012E rrrr                      3-  110 m1      .banksel ram_address
     012F 04rr                      1- 1151     	SUBAR	(_count900s + 1),W
     0130 0903                      1- 1152     	BTRSS	STATUS,2
                                    1- 1153     	MGOTO	_00230_DS_
     0131 3rrr                      3-   63 m1      LGOTO rom_address
     0132 2184                      1- 1154     	MOVIA	0x84
     0133 04rr                      1- 1155     	SUBAR	_count900s,W
     0134                           1- 1156     _00230_DS_:
     0134 0803                      1- 1157     	BTRSS	STATUS,0
                                    1- 1158     	MGOTO	_00159_DS_
     0135 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1159     	.line	232, "main.c"; 	powerOff();
                                    1- 1160     	MCALL	_powerOff
     0136 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1161     	MGOTO	_00159_DS_
     0137 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1162     	.line	235, "main.c"; 	}
                                    1- 1163     	RETURN	
     0138 0010                      3-   40 m1      ret
                                    1- 1164     ; exit point of _main
                                    1- 1166     ;***
                                    1- 1167     ;  pBlock Stats: dbName = C
                                    1- 1168     ;***
                                    1- 1169     ;has an exit
                                    1- 1170     ;; Starting pCode block
                                    1- 1171     .segment "code"; module=main, function=_Delay10Us
     0000                           1- 1173     _Delay10Us:
                                    1- 1174     ; 2 exit points
                                    1- 1175     	.line	894, "main.c"; 	NOP();
     0000 0000                      1- 1176     	nop
                                    1- 1177     	.line	895, "main.c"; 	NOP();
     0001 0000                      1- 1178     	nop
                                    1- 1179     	.line	896, "main.c"; 	NOP();
     0002 0000                      1- 1180     	nop
                                    1- 1181     	.line	897, "main.c"; 	NOP();
     0003 0000                      1- 1182     	nop
                                    1- 1183     	.line	898, "main.c"; 	NOP();
     0004 0000                      1- 1184     	nop
                                    1- 1185     	.line	899, "main.c"; 	NOP();
     0005 0000                      1- 1186     	nop
                                    1- 1187     	.line	900, "main.c"; 	}
                                    1- 1188     	RETURN	
     0006 0010                      3-   40 m1      ret
                                    1- 1189     ; exit point of _Delay10Us
                                    1- 1191     ;***
                                    1- 1192     ;  pBlock Stats: dbName = C
                                    1- 1193     ;***
                                    1- 1194     ;has an exit
                                    1- 1195     ;1 compiler assigned register :
                                    1- 1196     ;   r0x102C
                                    1- 1197     ;; Starting pCode block
                                    1- 1198     .segment "code"; module=main, function=_delay_us
     0000                           1- 1200     _delay_us:
                                    1- 1201     ; 2 exit points
                                    1- 1202     	.line	882, "main.c"; 	void delay_us(u8t time)
                                    1- 1203     	BANKSEL	r0x102C
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1204     	MOVAR	r0x102C
     0002                           1- 1205     _00630_DS_:
                                    1- 1206     	.line	884, "main.c"; 	while(time)
                                    1- 1207     	BANKSEL	r0x102C
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 01rr                      1- 1208     	MOVR	r0x102C,W
     0004 0D03                      1- 1209     	BTRSC	STATUS,2
                                    1- 1210     	MGOTO	_00633_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1211     	.line	886, "main.c"; 	--time;
     0006 06rr                      1- 1212     	DECR	r0x102C,F
                                    1- 1213     	.line	887, "main.c"; 	NOP();
     0007 0000                      1- 1214     	nop
                                    1- 1215     	MGOTO	_00630_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
     0009                           1- 1216     _00633_DS_:
                                    1- 1217     	.line	889, "main.c"; 	}
                                    1- 1218     	RETURN	
     0009 0010                      3-   40 m1      ret
                                    1- 1219     ; exit point of _delay_us
                                    1- 1221     ;***
                                    1- 1222     ;  pBlock Stats: dbName = C
                                    1- 1223     ;***
                                    1- 1224     ;has an exit
                                    1- 1225     ;6 compiler assigned registers:
                                    1- 1226     ;   r0x102D
                                    1- 1227     ;   STK00
                                    1- 1228     ;   r0x102E
                                    1- 1229     ;   r0x102F
                                    1- 1230     ;   r0x1030
                                    1- 1231     ;   r0x1031
                                    1- 1232     ;; Starting pCode block
                                    1- 1233     .segment "code"; module=main, function=_delay
                                    1- 1235     ;local variable name mapping:
     0000                           1- 1240     _delay:
                                    1- 1241     ; 2 exit points
                                    1- 1242     	.line	874, "main.c"; 	void delay(int count)
                                    1- 1243     	BANKSEL	r0x102D
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1244     	MOVAR	r0x102D
     0002 01rr                      1- 1245     	MOVR	STK00,W
                                    1- 1246     	BANKSEL	r0x102E
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1247     	MOVAR	r0x102E
                                    1- 1248     	.line	877, "main.c"; 	for(i=1;i<=count;i++)
     0005 2101                      1- 1249     	MOVIA	0x01
                                    1- 1250     	BANKSEL	r0x102F
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 1251     	MOVAR	r0x102F
                                    1- 1252     	BANKSEL	r0x1030
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 1253     	CLRR	r0x1030
     000A                           1- 1254     _00614_DS_:
                                    1- 1255     	BANKSEL	r0x102D
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1- 1256     	MOVR	r0x102D,W
     000C 2580                      1- 1257     	ADDIA	0x80
                                    1- 1258     	BANKSEL	r0x1031
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 1259     	MOVAR	r0x1031
                                    1- 1260     	BANKSEL	r0x1030
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 1261     	MOVR	r0x1030,W
     0011 2580                      1- 1262     	ADDIA	0x80
                                    1- 1263     	BANKSEL	r0x1031
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1264     	SUBAR	r0x1031,W
     0014 0903                      1- 1265     	BTRSS	STATUS,2
                                    1- 1266     	MGOTO	_00625_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1267     	BANKSEL	r0x102F
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 1268     	MOVR	r0x102F,W
                                    1- 1269     	BANKSEL	r0x102E
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 04rr                      1- 1270     	SUBAR	r0x102E,W
     001A                           1- 1271     _00625_DS_:
     001A 0803                      1- 1272     	BTRSS	STATUS,0
                                    1- 1273     	MGOTO	_00616_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1274     	BANKSEL	r0x102F
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 05rr                      1- 1275     	INCR	r0x102F,F
     001E 0903                      1- 1276     	BTRSS	STATUS,2
                                    1- 1277     	MGOTO	_00001_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1278     	BANKSEL	r0x1030
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 05rr                      1- 1279     	INCR	r0x1030,F
     0022                           1- 1280     _00001_DS_:
                                    1- 1281     	MGOTO	_00614_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023                           1- 1282     _00616_DS_:
                                    1- 1283     	.line	879, "main.c"; 	}
                                    1- 1284     	RETURN	
     0023 0010                      3-   40 m1      ret
                                    1- 1285     ; exit point of _delay
                                    1- 1287     ;***
                                    1- 1288     ;  pBlock Stats: dbName = C
                                    1- 1289     ;***
                                    1- 1290     ;has an exit
                                    1- 1291     ;; Starting pCode block
                                    1- 1292     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1294     _F_wait_eoc:
                                    1- 1295     ; 2 exit points
     0000                           1- 1296     _00607_DS_:
                                    1- 1297     	.line	870, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1298     	BTRSS	_ADMDbits,5
                                    1- 1299     	MGOTO	_00607_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1300     	.line	872, "main.c"; 	}
                                    1- 1301     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1302     ; exit point of _F_wait_eoc
                                    1- 1304     ;***
                                    1- 1305     ;  pBlock Stats: dbName = C
                                    1- 1306     ;***
                                    1- 1307     ;has an exit
                                    1- 1308     ;functions called:
                                    1- 1309     ;   _F_wait_eoc
                                    1- 1310     ;   _F_wait_eoc
                                    1- 1311     ;6 compiler assigned registers:
                                    1- 1312     ;   r0x1032
                                    1- 1313     ;   r0x1033
                                    1- 1314     ;   r0x1034
                                    1- 1315     ;   r0x1035
                                    1- 1316     ;   r0x1036
                                    1- 1317     ;   r0x1037
                                    1- 1318     ;; Starting pCode block
                                    1- 1319     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1321     ;local variable name mapping:
     0000                           1- 1324     _F_AIN2_Convert:
                                    1- 1325     ; 2 exit points
                                    1- 1326     	.line	855, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1327     	BANKSEL	r0x1032
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1328     	MOVAR	r0x1032
                                    1- 1329     	.line	858, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN0(PA0) pad as ADC input
     0002 2192                      1- 1330     	MOVIA	0x92
     0003 00rr                      1- 1331     	MOVAR	_ADMD
                                    1- 1332     	.line	859, "main.c"; 	for(i=1;i<=count;i++)
     0004 2101                      1- 1333     	MOVIA	0x01
                                    1- 1334     	BANKSEL	r0x1033
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 00rr                      1- 1335     	MOVAR	r0x1033
     0007                           1- 1336     _00600_DS_:
                                    1- 1337     	BANKSEL	r0x1033
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1- 1338     	MOVR	r0x1033,W
                                    1- 1339     	BANKSEL	r0x1032
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1- 1340     	SUBAR	r0x1032,W
     000B 0803                      1- 1341     	BTRSS	STATUS,0
                                    1- 1342     	MGOTO	_00602_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1343     	.line	861, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000D 1Brr                      1- 1344     	BSR	_ADMDbits,6
                                    1- 1345     	.line	862, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1346     	MCALL	_F_wait_eoc
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1347     	.line	863, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     000F 210F                      1- 1348     	MOVIA	0x0f
     0010 10rr                      1- 1349     	ANDAR	_ADR,W
                                    1- 1350     ;;3	MOVAR	r0x1034
                                    1- 1351     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 03rr                      1- 1352     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1353     	.line	864, "main.c"; 	R_AIN2_DATA    += ADD; 
     0013 01rr                      1- 1354     	MOVR	_ADD,W
                                    1- 1355     	BANKSEL	r0x1034
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1356     	MOVAR	r0x1034
                                    1- 1357     ;;1	CLRR	r0x1035
                                    1- 1358     ;;113	MOVR	r0x1034,W
                                    1- 1359     ;;111	MOVAR	r0x1036
     0016 2100                      1- 1360     	MOVIA	0x00
                                    1- 1361     	BANKSEL	r0x1037
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1362     	MOVAR	r0x1037
                                    1- 1363     ;;112	MOVR	r0x1036,W
                                    1- 1364     	BANKSEL	r0x1034
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1365     	MOVR	r0x1034,W
                                    1- 1366     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1367     	ADDAR	_R_AIN2_DATA,F
                                    1- 1368     	BANKSEL	r0x1037
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1369     	MOVR	r0x1037,W
     001F 0C03                      1- 1370     	BTRSC	STATUS,0
     0020 05rr                      1- 1371     	INCR	r0x1037,W
     0021 0D03                      1- 1372     	BTRSC	STATUS,2
                                    1- 1373     	MGOTO	_00002_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1374     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1375     	ADDAR	(_R_AIN2_DATA + 1),F
     0025                           1- 1376     _00002_DS_:
                                    1- 1377     	.line	859, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1378     	BANKSEL	r0x1033
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 05rr                      1- 1379     	INCR	r0x1033,F
                                    1- 1380     	MGOTO	_00600_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 1381     _00602_DS_:
                                    1- 1382     	.line	866, "main.c"; 	}
                                    1- 1383     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 1384     ; exit point of _F_AIN2_Convert
                                    1- 1386     ;***
                                    1- 1387     ;  pBlock Stats: dbName = C
                                    1- 1388     ;***
                                    1- 1389     ;has an exit
                                    1- 1390     ;functions called:
                                    1- 1391     ;   _F_wait_eoc
                                    1- 1392     ;   _F_wait_eoc
                                    1- 1393     ;6 compiler assigned registers:
                                    1- 1394     ;   r0x1038
                                    1- 1395     ;   r0x1039
                                    1- 1396     ;   r0x103A
                                    1- 1397     ;   r0x103B
                                    1- 1398     ;   r0x103C
                                    1- 1399     ;   r0x103D
                                    1- 1400     ;; Starting pCode block
                                    1- 1401     .segment "code"; module=main, function=_F_AIN0_Convert
                                    1- 1403     ;local variable name mapping:
     0000                           1- 1406     _F_AIN0_Convert:
                                    1- 1407     ; 2 exit points
                                    1- 1408     	.line	842, "main.c"; 	void F_AIN0_Convert(char count)
                                    1- 1409     	BANKSEL	r0x1038
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1410     	MOVAR	r0x1038
                                    1- 1411     	.line	845, "main.c"; 	ADMD  = 0x90 | C_ADC_PB1;				// Select AIN0(PA0) pad as ADC input
     0002 2196                      1- 1412     	MOVIA	0x96
     0003 00rr                      1- 1413     	MOVAR	_ADMD
                                    1- 1414     	.line	846, "main.c"; 	for(i=1;i<=count;i++)
     0004 2101                      1- 1415     	MOVIA	0x01
                                    1- 1416     	BANKSEL	r0x1039
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 00rr                      1- 1417     	MOVAR	r0x1039
     0007                           1- 1418     _00591_DS_:
                                    1- 1419     	BANKSEL	r0x1039
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1- 1420     	MOVR	r0x1039,W
                                    1- 1421     	BANKSEL	r0x1038
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1- 1422     	SUBAR	r0x1038,W
     000B 0803                      1- 1423     	BTRSS	STATUS,0
                                    1- 1424     	MGOTO	_00593_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1425     	.line	848, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000D 1Brr                      1- 1426     	BSR	_ADMDbits,6
                                    1- 1427     	.line	849, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1428     	MCALL	_F_wait_eoc
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1429     	.line	850, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     000F 210F                      1- 1430     	MOVIA	0x0f
     0010 10rr                      1- 1431     	ANDAR	_ADR,W
                                    1- 1432     ;;3	MOVAR	r0x103A
                                    1- 1433     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 03rr                      1- 1434     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1435     	.line	851, "main.c"; 	R_AIN2_DATA    += ADD; 
     0013 01rr                      1- 1436     	MOVR	_ADD,W
                                    1- 1437     	BANKSEL	r0x103A
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1438     	MOVAR	r0x103A
                                    1- 1439     ;;1	CLRR	r0x103B
                                    1- 1440     ;;110	MOVR	r0x103A,W
                                    1- 1441     ;;108	MOVAR	r0x103C
     0016 2100                      1- 1442     	MOVIA	0x00
                                    1- 1443     	BANKSEL	r0x103D
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1444     	MOVAR	r0x103D
                                    1- 1445     ;;109	MOVR	r0x103C,W
                                    1- 1446     	BANKSEL	r0x103A
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1447     	MOVR	r0x103A,W
                                    1- 1448     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1449     	ADDAR	_R_AIN2_DATA,F
                                    1- 1450     	BANKSEL	r0x103D
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1451     	MOVR	r0x103D,W
     001F 0C03                      1- 1452     	BTRSC	STATUS,0
     0020 05rr                      1- 1453     	INCR	r0x103D,W
     0021 0D03                      1- 1454     	BTRSC	STATUS,2
                                    1- 1455     	MGOTO	_00003_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1456     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1457     	ADDAR	(_R_AIN2_DATA + 1),F
     0025                           1- 1458     _00003_DS_:
                                    1- 1459     	.line	846, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1460     	BANKSEL	r0x1039
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 05rr                      1- 1461     	INCR	r0x1039,F
                                    1- 1462     	MGOTO	_00591_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 1463     _00593_DS_:
                                    1- 1464     	.line	853, "main.c"; 	}
                                    1- 1465     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 1466     ; exit point of _F_AIN0_Convert
                                    1- 1468     ;***
                                    1- 1469     ;  pBlock Stats: dbName = C
                                    1- 1470     ;***
                                    1- 1471     ;has an exit
                                    1- 1472     ;functions called:
                                    1- 1473     ;   _F_AIN0_Convert
                                    1- 1474     ;   _getbatGe
                                    1- 1475     ;   _getbatGe
                                    1- 1476     ;   _getbatGe
                                    1- 1477     ;   _getbatGe
                                    1- 1478     ;   _getbatGe
                                    1- 1479     ;   _getbatGe
                                    1- 1480     ;   _getbatGe
                                    1- 1481     ;   _getbatGe
                                    1- 1482     ;   _getbatGe
                                    1- 1483     ;   __mulint
                                    1- 1484     ;   __divuint
                                    1- 1485     ;   __mulint
                                    1- 1486     ;   __divuint
                                    1- 1487     ;   _powerOff
                                    1- 1488     ;   __divuchar
                                    1- 1489     ;   __moduchar
                                    1- 1490     ;   _F_AIN0_Convert
                                    1- 1491     ;   _getbatGe
                                    1- 1492     ;   _getbatGe
                                    1- 1493     ;   _getbatGe
                                    1- 1494     ;   _getbatGe
                                    1- 1495     ;   _getbatGe
                                    1- 1496     ;   _getbatGe
                                    1- 1497     ;   _getbatGe
                                    1- 1498     ;   _getbatGe
                                    1- 1499     ;   _getbatGe
                                    1- 1500     ;   __mulint
                                    1- 1501     ;   __divuint
                                    1- 1502     ;   __mulint
                                    1- 1503     ;   __divuint
                                    1- 1504     ;   _powerOff
                                    1- 1505     ;   __divuchar
                                    1- 1506     ;   __moduchar
                                    1- 1507     ;7 compiler assigned registers:
                                    1- 1508     ;   r0x1043
                                    1- 1509     ;   r0x1044
                                    1- 1510     ;   r0x1045
                                    1- 1511     ;   r0x1046
                                    1- 1512     ;   STK01
                                    1- 1513     ;   STK00
                                    1- 1514     ;   STK02
                                    1- 1515     ;; Starting pCode block
                                    1- 1516     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1518     _checkBatAD:
                                    1- 1519     ; 2 exit points
                                    1- 1520     	.line	689, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1521     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1522     	CLRR	_R_AIN2_DATA_LB
                                    1- 1523     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1524     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1525     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1526     	.line	690, "main.c"; 	F_AIN0_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1527     	MOVIA	0x08
                                    1- 1528     	MCALL	_F_AIN0_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1529     	.line	691, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1530     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1531     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1532     	ANDIA	0xf0
     000A 00rr                      1- 1533     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1534     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1535     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1536     	ANDIA	0x0f
     000E 11rr                      1- 1537     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1538     	XORAR	_R_AIN2_DATA,F
                                    1- 1539     	.line	692, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1540     	MOVIA	0xf0
                                    1- 1541     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1542     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1543     	.line	693, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1544     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1545     	BANKSEL	r0x1043
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1546     	MOVAR	r0x1043
                                    1- 1547     	BANKSEL	r0x1044
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 02rr                      1- 1548     	CLRR	r0x1044
                                    1- 1549     ;;107	MOVR	r0x1043,W
                                    1- 1550     ;;105	MOVAR	r0x1045
     0018 2100                      1- 1551     	MOVIA	0x00
                                    1- 1552     	BANKSEL	r0x1046
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 00rr                      1- 1553     	MOVAR	r0x1046
                                    1- 1554     ;;106	MOVR	r0x1045,W
                                    1- 1555     	BANKSEL	r0x1043
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1- 1556     	MOVR	r0x1043,W
                                    1- 1557     	BANKSEL	_R_AIN2_DATA
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 03rr                      1- 1558     	ADDAR	_R_AIN2_DATA,F
                                    1- 1559     	BANKSEL	r0x1046
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 01rr                      1- 1560     	MOVR	r0x1046,W
     0021 0C03                      1- 1561     	BTRSC	STATUS,0
     0022 05rr                      1- 1562     	INCR	r0x1046,W
     0023 0D03                      1- 1563     	BTRSC	STATUS,2
                                    1- 1564     	MGOTO	_00004_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1565     	BANKSEL	_R_AIN2_DATA
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 03rr                      1- 1566     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1567     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0027                           1- 1568     _00004_DS_:
                                    1- 1569     	.line	694, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0027 1C03                      1- 1570     	BCR	STATUS,0
                                    1- 1571     	BANKSEL	_R_AIN2_DATA
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 13rr                      1- 1572     	RRR	(_R_AIN2_DATA + 1),F
     002A 13rr                      1- 1573     	RRR	_R_AIN2_DATA,F
                                    1- 1574     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002B 1C03                      1- 1575     	BCR	STATUS,0
     002C 13rr                      1- 1576     	RRR	(_R_AIN2_DATA + 1),F
     002D 13rr                      1- 1577     	RRR	_R_AIN2_DATA,F
                                    1- 1578     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002E 1C03                      1- 1579     	BCR	STATUS,0
     002F 13rr                      1- 1580     	RRR	(_R_AIN2_DATA + 1),F
     0030 13rr                      1- 1581     	RRR	_R_AIN2_DATA,F
                                    1- 1582     ;;unsigned compare: left < lit (0x613=1555), size=2
                                    1- 1583     	.line	696, "main.c"; 	if(R_AIN2_DATA < 1555)
     0031 2106                      1- 1584     	MOVIA	0x06
     0032 04rr                      1- 1585     	SUBAR	(_R_AIN2_DATA + 1),W
     0033 0903                      1- 1586     	BTRSS	STATUS,2
                                    1- 1587     	MGOTO	_00568_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
     0035 2113                      1- 1588     	MOVIA	0x13
     0036 04rr                      1- 1589     	SUBAR	_R_AIN2_DATA,W
     0037                           1- 1590     _00568_DS_:
     0037 0C03                      1- 1591     	BTRSC	STATUS,0
                                    1- 1592     	MGOTO	_00406_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1593     	.line	698, "main.c"; 	chrgFullFlag = 0;
                                    1- 1594     	BANKSEL	_chrgFullFlag
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 02rr                      1- 1595     	CLRR	_chrgFullFlag
                                    1- 1596     ;;unsigned compare: left < lit (0x61C=1564), size=2
     003B                           1- 1597     _00406_DS_:
                                    1- 1598     	.line	701, "main.c"; 	if(R_AIN2_DATA >= 1564 || chrgFullFlag)
     003B 2106                      1- 1599     	MOVIA	0x06
                                    1- 1600     	BANKSEL	_R_AIN2_DATA
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 04rr                      1- 1601     	SUBAR	(_R_AIN2_DATA + 1),W
     003E 0903                      1- 1602     	BTRSS	STATUS,2
                                    1- 1603     	MGOTO	_00569_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
     0040 211C                      1- 1604     	MOVIA	0x1c
     0041 04rr                      1- 1605     	SUBAR	_R_AIN2_DATA,W
     0042                           1- 1606     _00569_DS_:
     0042 0C03                      1- 1607     	BTRSC	STATUS,0
                                    1- 1608     	MGOTO	_00440_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1609     	BANKSEL	_chrgFullFlag
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 01rr                      1- 1610     	MOVR	_chrgFullFlag,W
     0046 0D03                      1- 1611     	BTRSC	STATUS,2
                                    1- 1612     	MGOTO	_00441_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
     0048                           1- 1613     _00440_DS_:
                                    1- 1614     	.line	703, "main.c"; 	R_AIN2_DATA = 1564;		//4.2V 100%
     0048 211C                      1- 1615     	MOVIA	0x1c
                                    1- 1616     	BANKSEL	_R_AIN2_DATA
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 1617     	MOVAR	_R_AIN2_DATA
     004B 2106                      1- 1618     	MOVIA	0x06
     004C 00rr                      1- 1619     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1620     	.line	704, "main.c"; 	batValue = 100;
     004D 2164                      1- 1621     	MOVIA	0x64
                                    1- 1622     	BANKSEL	_batValue
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 00rr                      1- 1623     	MOVAR	_batValue
                                    1- 1624     	.line	705, "main.c"; 	chrgFullFlag = 1;
     0050 2101                      1- 1625     	MOVIA	0x01
                                    1- 1626     	BANKSEL	_chrgFullFlag
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 00rr                      1- 1627     	MOVAR	_chrgFullFlag
                                    1- 1628     	MGOTO	_00442_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1629     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1630     ;;unsigned compare: left >= lit (0x5E8=1512), size=2
     0054                           1- 1631     _00441_DS_:
                                    1- 1632     	.line	707, "main.c"; 	else if(R_AIN2_DATA > 1511)		//4.06V 90%
     0054 2105                      1- 1633     	MOVIA	0x05
                                    1- 1634     	BANKSEL	_R_AIN2_DATA
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 04rr                      1- 1635     	SUBAR	(_R_AIN2_DATA + 1),W
     0057 0903                      1- 1636     	BTRSS	STATUS,2
                                    1- 1637     	MGOTO	_00570_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
     0059 21E8                      1- 1638     	MOVIA	0xe8
     005A 04rr                      1- 1639     	SUBAR	_R_AIN2_DATA,W
     005B                           1- 1640     _00570_DS_:
     005B 0803                      1- 1641     	BTRSS	STATUS,0
                                    1- 1642     	MGOTO	_00438_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1643     	.line	709, "main.c"; 	batValue = 90 + getbatGe(1511,53);
     005D 2135                      1- 1644     	MOVIA	0x35
     005E 00rr                      1- 1645     	MOVAR	STK01
     005F 21E7                      1- 1646     	MOVIA	0xe7
     0060 00rr                      1- 1647     	MOVAR	STK00
     0061 2105                      1- 1648     	MOVIA	0x05
                                    1- 1649     	MCALL	_getbatGe
     0062 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1650     	BANKSEL	r0x1043
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 00rr                      1- 1651     	MOVAR	r0x1043
     0065 215A                      1- 1652     	MOVIA	0x5a
     0066 03rr                      1- 1653     	ADDAR	r0x1043,W
                                    1- 1654     	BANKSEL	_batValue
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 00rr                      1- 1655     	MOVAR	_batValue
                                    1- 1656     	MGOTO	_00442_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1657     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1658     ;;unsigned compare: left >= lit (0x5CB=1483), size=2
     006A                           1- 1659     _00438_DS_:
                                    1- 1660     	.line	711, "main.c"; 	else if(R_AIN2_DATA > 1482)		//3.98V 80%
     006A 2105                      1- 1661     	MOVIA	0x05
                                    1- 1662     	BANKSEL	_R_AIN2_DATA
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 04rr                      1- 1663     	SUBAR	(_R_AIN2_DATA + 1),W
     006D 0903                      1- 1664     	BTRSS	STATUS,2
                                    1- 1665     	MGOTO	_00571_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
     006F 21CB                      1- 1666     	MOVIA	0xcb
     0070 04rr                      1- 1667     	SUBAR	_R_AIN2_DATA,W
     0071                           1- 1668     _00571_DS_:
     0071 0803                      1- 1669     	BTRSS	STATUS,0
                                    1- 1670     	MGOTO	_00435_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1671     	.line	713, "main.c"; 	batValue = 80 + getbatGe(1482,29);
     0073 211D                      1- 1672     	MOVIA	0x1d
     0074 00rr                      1- 1673     	MOVAR	STK01
     0075 21CA                      1- 1674     	MOVIA	0xca
     0076 00rr                      1- 1675     	MOVAR	STK00
     0077 2105                      1- 1676     	MOVIA	0x05
                                    1- 1677     	MCALL	_getbatGe
     0078 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1678     	BANKSEL	r0x1043
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 00rr                      1- 1679     	MOVAR	r0x1043
     007B 2150                      1- 1680     	MOVIA	0x50
     007C 03rr                      1- 1681     	ADDAR	r0x1043,W
                                    1- 1682     	BANKSEL	_batValue
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 00rr                      1- 1683     	MOVAR	_batValue
                                    1- 1684     	MGOTO	_00442_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1685     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1686     ;;unsigned compare: left >= lit (0x5B4=1460), size=2
     0080                           1- 1687     _00435_DS_:
                                    1- 1688     	.line	715, "main.c"; 	else if(R_AIN2_DATA > 1459)		//3.92V 70%
     0080 2105                      1- 1689     	MOVIA	0x05
                                    1- 1690     	BANKSEL	_R_AIN2_DATA
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 04rr                      1- 1691     	SUBAR	(_R_AIN2_DATA + 1),W
     0083 0903                      1- 1692     	BTRSS	STATUS,2
                                    1- 1693     	MGOTO	_00572_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
     0085 21B4                      1- 1694     	MOVIA	0xb4
     0086 04rr                      1- 1695     	SUBAR	_R_AIN2_DATA,W
     0087                           1- 1696     _00572_DS_:
     0087 0803                      1- 1697     	BTRSS	STATUS,0
                                    1- 1698     	MGOTO	_00432_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1699     	.line	717, "main.c"; 	batValue = 70 + getbatGe(1459,23);
     0089 2117                      1- 1700     	MOVIA	0x17
     008A 00rr                      1- 1701     	MOVAR	STK01
     008B 21B3                      1- 1702     	MOVIA	0xb3
     008C 00rr                      1- 1703     	MOVAR	STK00
     008D 2105                      1- 1704     	MOVIA	0x05
                                    1- 1705     	MCALL	_getbatGe
     008E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1706     	BANKSEL	r0x1043
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 00rr                      1- 1707     	MOVAR	r0x1043
     0091 2146                      1- 1708     	MOVIA	0x46
     0092 03rr                      1- 1709     	ADDAR	r0x1043,W
                                    1- 1710     	BANKSEL	_batValue
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 00rr                      1- 1711     	MOVAR	_batValue
                                    1- 1712     	MGOTO	_00442_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1713     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1714     ;;unsigned compare: left >= lit (0x5A2=1442), size=2
     0096                           1- 1715     _00432_DS_:
                                    1- 1716     	.line	719, "main.c"; 	else if(R_AIN2_DATA > 1441)		//3.87V 60%
     0096 2105                      1- 1717     	MOVIA	0x05
                                    1- 1718     	BANKSEL	_R_AIN2_DATA
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 04rr                      1- 1719     	SUBAR	(_R_AIN2_DATA + 1),W
     0099 0903                      1- 1720     	BTRSS	STATUS,2
                                    1- 1721     	MGOTO	_00573_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
     009B 21A2                      1- 1722     	MOVIA	0xa2
     009C 04rr                      1- 1723     	SUBAR	_R_AIN2_DATA,W
     009D                           1- 1724     _00573_DS_:
     009D 0803                      1- 1725     	BTRSS	STATUS,0
                                    1- 1726     	MGOTO	_00429_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1727     	.line	721, "main.c"; 	batValue = 60 + getbatGe(1441,18);
     009F 2112                      1- 1728     	MOVIA	0x12
     00A0 00rr                      1- 1729     	MOVAR	STK01
     00A1 21A1                      1- 1730     	MOVIA	0xa1
     00A2 00rr                      1- 1731     	MOVAR	STK00
     00A3 2105                      1- 1732     	MOVIA	0x05
                                    1- 1733     	MCALL	_getbatGe
     00A4 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1734     	BANKSEL	r0x1043
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 00rr                      1- 1735     	MOVAR	r0x1043
     00A7 213C                      1- 1736     	MOVIA	0x3c
     00A8 03rr                      1- 1737     	ADDAR	r0x1043,W
                                    1- 1738     	BANKSEL	_batValue
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 00rr                      1- 1739     	MOVAR	_batValue
                                    1- 1740     	MGOTO	_00442_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1741     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1742     ;;unsigned compare: left >= lit (0x58F=1423), size=2
     00AC                           1- 1743     _00429_DS_:
                                    1- 1744     	.line	723, "main.c"; 	else if(R_AIN2_DATA > 1422)		//3.82V 50%
     00AC 2105                      1- 1745     	MOVIA	0x05
                                    1- 1746     	BANKSEL	_R_AIN2_DATA
     00AD rrrr                      3-  110 m1      .banksel ram_address
     00AE 04rr                      1- 1747     	SUBAR	(_R_AIN2_DATA + 1),W
     00AF 0903                      1- 1748     	BTRSS	STATUS,2
                                    1- 1749     	MGOTO	_00574_DS_
     00B0 3rrr                      3-   63 m1      LGOTO rom_address
     00B1 218F                      1- 1750     	MOVIA	0x8f
     00B2 04rr                      1- 1751     	SUBAR	_R_AIN2_DATA,W
     00B3                           1- 1752     _00574_DS_:
     00B3 0803                      1- 1753     	BTRSS	STATUS,0
                                    1- 1754     	MGOTO	_00426_DS_
     00B4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1755     	.line	725, "main.c"; 	batValue = 50 + getbatGe(1422,19);
     00B5 2113                      1- 1756     	MOVIA	0x13
     00B6 00rr                      1- 1757     	MOVAR	STK01
     00B7 218E                      1- 1758     	MOVIA	0x8e
     00B8 00rr                      1- 1759     	MOVAR	STK00
     00B9 2105                      1- 1760     	MOVIA	0x05
                                    1- 1761     	MCALL	_getbatGe
     00BA 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1762     	BANKSEL	r0x1043
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 00rr                      1- 1763     	MOVAR	r0x1043
     00BD 2132                      1- 1764     	MOVIA	0x32
     00BE 03rr                      1- 1765     	ADDAR	r0x1043,W
                                    1- 1766     	BANKSEL	_batValue
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 00rr                      1- 1767     	MOVAR	_batValue
                                    1- 1768     	MGOTO	_00442_DS_
     00C1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1769     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1770     ;;unsigned compare: left >= lit (0x584=1412), size=2
     00C2                           1- 1771     _00426_DS_:
                                    1- 1772     	.line	727, "main.c"; 	else if(R_AIN2_DATA > 1411)		//3.79V 40%
     00C2 2105                      1- 1773     	MOVIA	0x05
                                    1- 1774     	BANKSEL	_R_AIN2_DATA
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 04rr                      1- 1775     	SUBAR	(_R_AIN2_DATA + 1),W
     00C5 0903                      1- 1776     	BTRSS	STATUS,2
                                    1- 1777     	MGOTO	_00575_DS_
     00C6 3rrr                      3-   63 m1      LGOTO rom_address
     00C7 2184                      1- 1778     	MOVIA	0x84
     00C8 04rr                      1- 1779     	SUBAR	_R_AIN2_DATA,W
     00C9                           1- 1780     _00575_DS_:
     00C9 0803                      1- 1781     	BTRSS	STATUS,0
                                    1- 1782     	MGOTO	_00423_DS_
     00CA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1783     	.line	729, "main.c"; 	batValue = 40 + getbatGe(1411,11);
     00CB 210B                      1- 1784     	MOVIA	0x0b
     00CC 00rr                      1- 1785     	MOVAR	STK01
     00CD 2183                      1- 1786     	MOVIA	0x83
     00CE 00rr                      1- 1787     	MOVAR	STK00
     00CF 2105                      1- 1788     	MOVIA	0x05
                                    1- 1789     	MCALL	_getbatGe
     00D0 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1790     	BANKSEL	r0x1043
     00D1 rrrr                      3-  110 m1      .banksel ram_address
     00D2 00rr                      1- 1791     	MOVAR	r0x1043
     00D3 2128                      1- 1792     	MOVIA	0x28
     00D4 03rr                      1- 1793     	ADDAR	r0x1043,W
                                    1- 1794     	BANKSEL	_batValue
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 00rr                      1- 1795     	MOVAR	_batValue
                                    1- 1796     	MGOTO	_00442_DS_
     00D7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1797     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1798     ;;unsigned compare: left >= lit (0x57C=1404), size=2
     00D8                           1- 1799     _00423_DS_:
                                    1- 1800     	.line	731, "main.c"; 	else if(R_AIN2_DATA > 1403)		//3.77V 30%
     00D8 2105                      1- 1801     	MOVIA	0x05
                                    1- 1802     	BANKSEL	_R_AIN2_DATA
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 04rr                      1- 1803     	SUBAR	(_R_AIN2_DATA + 1),W
     00DB 0903                      1- 1804     	BTRSS	STATUS,2
                                    1- 1805     	MGOTO	_00576_DS_
     00DC 3rrr                      3-   63 m1      LGOTO rom_address
     00DD 217C                      1- 1806     	MOVIA	0x7c
     00DE 04rr                      1- 1807     	SUBAR	_R_AIN2_DATA,W
     00DF                           1- 1808     _00576_DS_:
     00DF 0803                      1- 1809     	BTRSS	STATUS,0
                                    1- 1810     	MGOTO	_00420_DS_
     00E0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1811     	.line	733, "main.c"; 	batValue = 30 + getbatGe(1403,8);
     00E1 2108                      1- 1812     	MOVIA	0x08
     00E2 00rr                      1- 1813     	MOVAR	STK01
     00E3 217B                      1- 1814     	MOVIA	0x7b
     00E4 00rr                      1- 1815     	MOVAR	STK00
     00E5 2105                      1- 1816     	MOVIA	0x05
                                    1- 1817     	MCALL	_getbatGe
     00E6 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1818     	BANKSEL	r0x1043
     00E7 rrrr                      3-  110 m1      .banksel ram_address
     00E8 00rr                      1- 1819     	MOVAR	r0x1043
     00E9 211E                      1- 1820     	MOVIA	0x1e
     00EA 03rr                      1- 1821     	ADDAR	r0x1043,W
                                    1- 1822     	BANKSEL	_batValue
     00EB rrrr                      3-  110 m1      .banksel ram_address
     00EC 00rr                      1- 1823     	MOVAR	_batValue
                                    1- 1824     	MGOTO	_00442_DS_
     00ED 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1825     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1826     ;;unsigned compare: left >= lit (0x571=1393), size=2
     00EE                           1- 1827     _00420_DS_:
                                    1- 1828     	.line	735, "main.c"; 	else if(R_AIN2_DATA > 1392)		//3.74V 20%
     00EE 2105                      1- 1829     	MOVIA	0x05
                                    1- 1830     	BANKSEL	_R_AIN2_DATA
     00EF rrrr                      3-  110 m1      .banksel ram_address
     00F0 04rr                      1- 1831     	SUBAR	(_R_AIN2_DATA + 1),W
     00F1 0903                      1- 1832     	BTRSS	STATUS,2
                                    1- 1833     	MGOTO	_00577_DS_
     00F2 3rrr                      3-   63 m1      LGOTO rom_address
     00F3 2171                      1- 1834     	MOVIA	0x71
     00F4 04rr                      1- 1835     	SUBAR	_R_AIN2_DATA,W
     00F5                           1- 1836     _00577_DS_:
     00F5 0803                      1- 1837     	BTRSS	STATUS,0
                                    1- 1838     	MGOTO	_00417_DS_
     00F6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1839     	.line	737, "main.c"; 	batValue = 20 + getbatGe(1392,11);
     00F7 210B                      1- 1840     	MOVIA	0x0b
     00F8 00rr                      1- 1841     	MOVAR	STK01
     00F9 2170                      1- 1842     	MOVIA	0x70
     00FA 00rr                      1- 1843     	MOVAR	STK00
     00FB 2105                      1- 1844     	MOVIA	0x05
                                    1- 1845     	MCALL	_getbatGe
     00FC 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1846     	BANKSEL	r0x1043
     00FD rrrr                      3-  110 m1      .banksel ram_address
     00FE 00rr                      1- 1847     	MOVAR	r0x1043
     00FF 2114                      1- 1848     	MOVIA	0x14
     0100 03rr                      1- 1849     	ADDAR	r0x1043,W
                                    1- 1850     	BANKSEL	_batValue
     0101 rrrr                      3-  110 m1      .banksel ram_address
     0102 00rr                      1- 1851     	MOVAR	_batValue
                                    1- 1852     	MGOTO	_00442_DS_
     0103 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1853     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1854     ;;unsigned compare: left >= lit (0x55B=1371), size=2
     0104                           1- 1855     _00417_DS_:
                                    1- 1856     	.line	739, "main.c"; 	else if(R_AIN2_DATA > 1370)		//3.68V 10%
     0104 2105                      1- 1857     	MOVIA	0x05
                                    1- 1858     	BANKSEL	_R_AIN2_DATA
     0105 rrrr                      3-  110 m1      .banksel ram_address
     0106 04rr                      1- 1859     	SUBAR	(_R_AIN2_DATA + 1),W
     0107 0903                      1- 1860     	BTRSS	STATUS,2
                                    1- 1861     	MGOTO	_00578_DS_
     0108 3rrr                      3-   63 m1      LGOTO rom_address
     0109 215B                      1- 1862     	MOVIA	0x5b
     010A 04rr                      1- 1863     	SUBAR	_R_AIN2_DATA,W
     010B                           1- 1864     _00578_DS_:
     010B 0803                      1- 1865     	BTRSS	STATUS,0
                                    1- 1866     	MGOTO	_00414_DS_
     010C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1867     	.line	741, "main.c"; 	batValue = 10 + getbatGe(1370,22);
     010D 2116                      1- 1868     	MOVIA	0x16
     010E 00rr                      1- 1869     	MOVAR	STK01
     010F 215A                      1- 1870     	MOVIA	0x5a
     0110 00rr                      1- 1871     	MOVAR	STK00
     0111 2105                      1- 1872     	MOVIA	0x05
                                    1- 1873     	MCALL	_getbatGe
     0112 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1874     	BANKSEL	r0x1043
     0113 rrrr                      3-  110 m1      .banksel ram_address
     0114 00rr                      1- 1875     	MOVAR	r0x1043
     0115 210A                      1- 1876     	MOVIA	0x0a
     0116 03rr                      1- 1877     	ADDAR	r0x1043,W
                                    1- 1878     	BANKSEL	_batValue
     0117 rrrr                      3-  110 m1      .banksel ram_address
     0118 00rr                      1- 1879     	MOVAR	_batValue
                                    1- 1880     	MGOTO	_00442_DS_
     0119 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1881     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1882     ;;unsigned compare: left >= lit (0x505=1285), size=2
     011A                           1- 1883     _00414_DS_:
                                    1- 1884     	.line	743, "main.c"; 	else if(R_AIN2_DATA > 1284)		//3.45V 5%
     011A 2105                      1- 1885     	MOVIA	0x05
                                    1- 1886     	BANKSEL	_R_AIN2_DATA
     011B rrrr                      3-  110 m1      .banksel ram_address
     011C 04rr                      1- 1887     	SUBAR	(_R_AIN2_DATA + 1),W
     011D 0903                      1- 1888     	BTRSS	STATUS,2
                                    1- 1889     	MGOTO	_00579_DS_
     011E 3rrr                      3-   63 m1      LGOTO rom_address
     011F 2105                      1- 1890     	MOVIA	0x05
     0120 04rr                      1- 1891     	SUBAR	_R_AIN2_DATA,W
     0121                           1- 1892     _00579_DS_:
     0121 0803                      1- 1893     	BTRSS	STATUS,0
                                    1- 1894     	MGOTO	_00411_DS_
     0122 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1895     	.line	745, "main.c"; 	batValue = (R_AIN2_DATA - 1284)*10/172;
     0123 21FC                      1- 1896     	MOVIA	0xfc
                                    1- 1897     	BANKSEL	_R_AIN2_DATA
     0124 rrrr                      3-  110 m1      .banksel ram_address
     0125 03rr                      1- 1898     	ADDAR	_R_AIN2_DATA,W
                                    1- 1899     	BANKSEL	r0x1043
     0126 rrrr                      3-  110 m1      .banksel ram_address
     0127 00rr                      1- 1900     	MOVAR	r0x1043
     0128 21FA                      1- 1901     	MOVIA	0xfa
                                    1- 1902     	BANKSEL	r0x1044
     0129 rrrr                      3-  110 m1      .banksel ram_address
     012A 00rr                      1- 1903     	MOVAR	r0x1044
                                    1- 1904     	BANKSEL	_R_AIN2_DATA
     012B rrrr                      3-  110 m1      .banksel ram_address
     012C 01rr                      1- 1905     	MOVR	(_R_AIN2_DATA + 1),W
     012D 0C03                      1- 1906     	BTRSC	STATUS,0
     012E 05rr                      1- 1907     	INCR	(_R_AIN2_DATA + 1),W
     012F 0D03                      1- 1908     	BTRSC	STATUS,2
                                    1- 1909     	MGOTO	_00005_DS_
     0130 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1910     	BANKSEL	r0x1044
     0131 rrrr                      3-  110 m1      .banksel ram_address
     0132 03rr                      1- 1911     	ADDAR	r0x1044,F
     0133                           1- 1912     _00005_DS_:
                                    1- 1913     	BANKSEL	r0x1043
     0133 rrrr                      3-  110 m1      .banksel ram_address
     0134 01rr                      1- 1914     	MOVR	r0x1043,W
     0135 00rr                      1- 1915     	MOVAR	STK02
                                    1- 1916     	BANKSEL	r0x1044
     0136 rrrr                      3-  110 m1      .banksel ram_address
     0137 01rr                      1- 1917     	MOVR	r0x1044,W
     0138 00rr                      1- 1918     	MOVAR	STK01
     0139 210A                      1- 1919     	MOVIA	0x0a
     013A 00rr                      1- 1920     	MOVAR	STK00
     013B 2100                      1- 1921     	MOVIA	0x00
                                    1- 1922     	MCALL	__mulint
     013C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1923     	BANKSEL	r0x1044
     013D rrrr                      3-  110 m1      .banksel ram_address
     013E 00rr                      1- 1924     	MOVAR	r0x1044
     013F 01rr                      1- 1925     	MOVR	STK00,W
                                    1- 1926     	BANKSEL	r0x1043
     0140 rrrr                      3-  110 m1      .banksel ram_address
     0141 00rr                      1- 1927     	MOVAR	r0x1043
     0142 21AC                      1- 1928     	MOVIA	0xac
     0143 00rr                      1- 1929     	MOVAR	STK02
     0144 2100                      1- 1930     	MOVIA	0x00
     0145 00rr                      1- 1931     	MOVAR	STK01
     0146 01rr                      1- 1932     	MOVR	r0x1043,W
     0147 00rr                      1- 1933     	MOVAR	STK00
                                    1- 1934     	BANKSEL	r0x1044
     0148 rrrr                      3-  110 m1      .banksel ram_address
     0149 01rr                      1- 1935     	MOVR	r0x1044,W
                                    1- 1936     	MCALL	__divuint
     014A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1937     	BANKSEL	r0x1044
     014B rrrr                      3-  110 m1      .banksel ram_address
     014C 00rr                      1- 1938     	MOVAR	r0x1044
     014D 01rr                      1- 1939     	MOVR	STK00,W
                                    1- 1940     	BANKSEL	r0x1043
     014E rrrr                      3-  110 m1      .banksel ram_address
     014F 00rr                      1- 1941     	MOVAR	r0x1043
                                    1- 1942     	BANKSEL	_batValue
     0150 rrrr                      3-  110 m1      .banksel ram_address
     0151 00rr                      1- 1943     	MOVAR	_batValue
                                    1- 1944     	.line	746, "main.c"; 	batValue += 5;
     0152 2105                      1- 1945     	MOVIA	0x05
     0153 03rr                      1- 1946     	ADDAR	_batValue,F
                                    1- 1947     	MGOTO	_00442_DS_
     0154 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1948     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1949     ;;unsigned compare: left >= lit (0x4A8=1192), size=2
     0155                           1- 1950     _00411_DS_:
                                    1- 1951     	.line	748, "main.c"; 	else if(R_AIN2_DATA > 1191)		//3.2V 0%
     0155 2104                      1- 1952     	MOVIA	0x04
                                    1- 1953     	BANKSEL	_R_AIN2_DATA
     0156 rrrr                      3-  110 m1      .banksel ram_address
     0157 04rr                      1- 1954     	SUBAR	(_R_AIN2_DATA + 1),W
     0158 0903                      1- 1955     	BTRSS	STATUS,2
                                    1- 1956     	MGOTO	_00580_DS_
     0159 3rrr                      3-   63 m1      LGOTO rom_address
     015A 21A8                      1- 1957     	MOVIA	0xa8
     015B 04rr                      1- 1958     	SUBAR	_R_AIN2_DATA,W
     015C                           1- 1959     _00580_DS_:
     015C 0803                      1- 1960     	BTRSS	STATUS,0
                                    1- 1961     	MGOTO	_00408_DS_
     015D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1962     	.line	750, "main.c"; 	batValue = (R_AIN2_DATA - 1191)*10/186;
     015E 2159                      1- 1963     	MOVIA	0x59
                                    1- 1964     	BANKSEL	_R_AIN2_DATA
     015F rrrr                      3-  110 m1      .banksel ram_address
     0160 03rr                      1- 1965     	ADDAR	_R_AIN2_DATA,W
                                    1- 1966     	BANKSEL	r0x1043
     0161 rrrr                      3-  110 m1      .banksel ram_address
     0162 00rr                      1- 1967     	MOVAR	r0x1043
     0163 21FB                      1- 1968     	MOVIA	0xfb
                                    1- 1969     	BANKSEL	r0x1044
     0164 rrrr                      3-  110 m1      .banksel ram_address
     0165 00rr                      1- 1970     	MOVAR	r0x1044
                                    1- 1971     	BANKSEL	_R_AIN2_DATA
     0166 rrrr                      3-  110 m1      .banksel ram_address
     0167 01rr                      1- 1972     	MOVR	(_R_AIN2_DATA + 1),W
     0168 0C03                      1- 1973     	BTRSC	STATUS,0
     0169 05rr                      1- 1974     	INCR	(_R_AIN2_DATA + 1),W
     016A 0D03                      1- 1975     	BTRSC	STATUS,2
                                    1- 1976     	MGOTO	_00006_DS_
     016B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1977     	BANKSEL	r0x1044
     016C rrrr                      3-  110 m1      .banksel ram_address
     016D 03rr                      1- 1978     	ADDAR	r0x1044,F
     016E                           1- 1979     _00006_DS_:
                                    1- 1980     	BANKSEL	r0x1043
     016E rrrr                      3-  110 m1      .banksel ram_address
     016F 01rr                      1- 1981     	MOVR	r0x1043,W
     0170 00rr                      1- 1982     	MOVAR	STK02
                                    1- 1983     	BANKSEL	r0x1044
     0171 rrrr                      3-  110 m1      .banksel ram_address
     0172 01rr                      1- 1984     	MOVR	r0x1044,W
     0173 00rr                      1- 1985     	MOVAR	STK01
     0174 210A                      1- 1986     	MOVIA	0x0a
     0175 00rr                      1- 1987     	MOVAR	STK00
     0176 2100                      1- 1988     	MOVIA	0x00
                                    1- 1989     	MCALL	__mulint
     0177 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1990     	BANKSEL	r0x1044
     0178 rrrr                      3-  110 m1      .banksel ram_address
     0179 00rr                      1- 1991     	MOVAR	r0x1044
     017A 01rr                      1- 1992     	MOVR	STK00,W
                                    1- 1993     	BANKSEL	r0x1043
     017B rrrr                      3-  110 m1      .banksel ram_address
     017C 00rr                      1- 1994     	MOVAR	r0x1043
     017D 21BA                      1- 1995     	MOVIA	0xba
     017E 00rr                      1- 1996     	MOVAR	STK02
     017F 2100                      1- 1997     	MOVIA	0x00
     0180 00rr                      1- 1998     	MOVAR	STK01
     0181 01rr                      1- 1999     	MOVR	r0x1043,W
     0182 00rr                      1- 2000     	MOVAR	STK00
                                    1- 2001     	BANKSEL	r0x1044
     0183 rrrr                      3-  110 m1      .banksel ram_address
     0184 01rr                      1- 2002     	MOVR	r0x1044,W
                                    1- 2003     	MCALL	__divuint
     0185 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2004     	BANKSEL	r0x1044
     0186 rrrr                      3-  110 m1      .banksel ram_address
     0187 00rr                      1- 2005     	MOVAR	r0x1044
     0188 01rr                      1- 2006     	MOVR	STK00,W
                                    1- 2007     	BANKSEL	r0x1043
     0189 rrrr                      3-  110 m1      .banksel ram_address
     018A 00rr                      1- 2008     	MOVAR	r0x1043
                                    1- 2009     	BANKSEL	_batValue
     018B rrrr                      3-  110 m1      .banksel ram_address
     018C 00rr                      1- 2010     	MOVAR	_batValue
                                    1- 2011     	MGOTO	_00442_DS_
     018D 3rrr                      3-   63 m1      LGOTO rom_address
     018E                           1- 2012     _00408_DS_:
                                    1- 2013     	.line	754, "main.c"; 	batValue = 0;
                                    1- 2014     	BANKSEL	_batValue
     018E rrrr                      3-  110 m1      .banksel ram_address
     018F 02rr                      1- 2015     	CLRR	_batValue
     0190                           1- 2016     _00442_DS_:
                                    1- 2017     	.line	758, "main.c"; 	if(showBatValue == 0)
                                    1- 2018     	BANKSEL	_showBatValue
     0190 rrrr                      3-  110 m1      .banksel ram_address
     0191 01rr                      1- 2019     	MOVR	_showBatValue,W
     0192 0903                      1- 2020     	BTRSS	STATUS,2
                                    1- 2021     	MGOTO	_00445_DS_
     0193 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2022     	.line	760, "main.c"; 	showBatValue = batValue;
                                    1- 2023     	BANKSEL	_batValue
     0194 rrrr                      3-  110 m1      .banksel ram_address
     0195 01rr                      1- 2024     	MOVR	_batValue,W
                                    1- 2025     	BANKSEL	_showBatValue
     0196 rrrr                      3-  110 m1      .banksel ram_address
     0197 00rr                      1- 2026     	MOVAR	_showBatValue
     0198                           1- 2027     _00445_DS_:
                                    1- 2028     	.line	762, "main.c"; 	if(chrgFlag == 0)
                                    1- 2029     	BANKSEL	_chrgFlag
     0198 rrrr                      3-  110 m1      .banksel ram_address
     0199 01rr                      1- 2030     	MOVR	_chrgFlag,W
     019A 0903                      1- 2031     	BTRSS	STATUS,2
                                    1- 2032     	MGOTO	_00455_DS_
     019B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2033     	.line	764, "main.c"; 	if(showBatValue > batValue && showBatValue > 0)
                                    1- 2034     	BANKSEL	_showBatValue
     019C rrrr                      3-  110 m1      .banksel ram_address
     019D 01rr                      1- 2035     	MOVR	_showBatValue,W
                                    1- 2036     	BANKSEL	_batValue
     019E rrrr                      3-  110 m1      .banksel ram_address
     019F 04rr                      1- 2037     	SUBAR	_batValue,W
     01A0 0C03                      1- 2038     	BTRSC	STATUS,0
                                    1- 2039     	MGOTO	_00451_DS_
     01A1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2040     	BANKSEL	_showBatValue
     01A2 rrrr                      3-  110 m1      .banksel ram_address
     01A3 01rr                      1- 2041     	MOVR	_showBatValue,W
     01A4 0D03                      1- 2042     	BTRSC	STATUS,2
                                    1- 2043     	MGOTO	_00451_DS_
     01A5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2044     	.line	766, "main.c"; 	if(++subBatTime > 1000)
                                    1- 2045     	BANKSEL	_subBatTime
     01A6 rrrr                      3-  110 m1      .banksel ram_address
     01A7 05rr                      1- 2046     	INCR	_subBatTime,F
     01A8 0D03                      1- 2047     	BTRSC	STATUS,2
     01A9 05rr                      1- 2048     	INCR	(_subBatTime + 1),F
                                    1- 2049     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2050     ;;unsigned compare: left >= lit (0x3E9=1001), size=2
     01AA 2103                      1- 2051     	MOVIA	0x03
     01AB 04rr                      1- 2052     	SUBAR	(_subBatTime + 1),W
     01AC 0903                      1- 2053     	BTRSS	STATUS,2
                                    1- 2054     	MGOTO	_00582_DS_
     01AD 3rrr                      3-   63 m1      LGOTO rom_address
     01AE 21E9                      1- 2055     	MOVIA	0xe9
     01AF 04rr                      1- 2056     	SUBAR	_subBatTime,W
     01B0                           1- 2057     _00582_DS_:
     01B0 0803                      1- 2058     	BTRSS	STATUS,0
                                    1- 2059     	MGOTO	_00455_DS_
     01B1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2060     	.line	768, "main.c"; 	subBatTime = 0;
                                    1- 2061     	BANKSEL	_subBatTime
     01B2 rrrr                      3-  110 m1      .banksel ram_address
     01B3 02rr                      1- 2062     	CLRR	_subBatTime
     01B4 02rr                      1- 2063     	CLRR	(_subBatTime + 1)
                                    1- 2064     	.line	769, "main.c"; 	if(--showBatValue == 0)
                                    1- 2065     	BANKSEL	_showBatValue
     01B5 rrrr                      3-  110 m1      .banksel ram_address
     01B6 17rr                      1- 2066     	DECRSZ	_showBatValue,F
                                    1- 2067     	MGOTO	_00455_DS_
     01B7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2068     	.line	771, "main.c"; 	showBatValue = 1;
     01B8 2101                      1- 2069     	MOVIA	0x01
     01B9 00rr                      1- 2070     	MOVAR	_showBatValue
                                    1- 2071     	MGOTO	_00455_DS_
     01BA 3rrr                      3-   63 m1      LGOTO rom_address
     01BB                           1- 2072     _00451_DS_:
                                    1- 2073     	.line	777, "main.c"; 	subBatTime = 0;
                                    1- 2074     	BANKSEL	_subBatTime
     01BB rrrr                      3-  110 m1      .banksel ram_address
     01BC 02rr                      1- 2075     	CLRR	_subBatTime
     01BD 02rr                      1- 2076     	CLRR	(_subBatTime + 1)
     01BE                           1- 2077     _00455_DS_:
                                    1- 2078     	.line	781, "main.c"; 	if(showBatValue < batValue)
                                    1- 2079     	BANKSEL	_batValue
     01BE rrrr                      3-  110 m1      .banksel ram_address
     01BF 01rr                      1- 2080     	MOVR	_batValue,W
                                    1- 2081     	BANKSEL	_showBatValue
     01C0 rrrr                      3-  110 m1      .banksel ram_address
     01C1 04rr                      1- 2082     	SUBAR	_showBatValue,W
     01C2 0C03                      1- 2083     	BTRSC	STATUS,0
                                    1- 2084     	MGOTO	_00461_DS_
     01C3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2085     	.line	783, "main.c"; 	if(++batTime > 1000)
                                    1- 2086     	BANKSEL	_batTime
     01C4 rrrr                      3-  110 m1      .banksel ram_address
     01C5 05rr                      1- 2087     	INCR	_batTime,F
     01C6 0D03                      1- 2088     	BTRSC	STATUS,2
     01C7 05rr                      1- 2089     	INCR	(_batTime + 1),F
                                    1- 2090     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2091     ;;unsigned compare: left >= lit (0x3E9=1001), size=2
     01C8 2103                      1- 2092     	MOVIA	0x03
     01C9 04rr                      1- 2093     	SUBAR	(_batTime + 1),W
     01CA 0903                      1- 2094     	BTRSS	STATUS,2
                                    1- 2095     	MGOTO	_00584_DS_
     01CB 3rrr                      3-   63 m1      LGOTO rom_address
     01CC 21E9                      1- 2096     	MOVIA	0xe9
     01CD 04rr                      1- 2097     	SUBAR	_batTime,W
     01CE                           1- 2098     _00584_DS_:
     01CE 0803                      1- 2099     	BTRSS	STATUS,0
                                    1- 2100     	MGOTO	_00462_DS_
     01CF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2101     	.line	785, "main.c"; 	batTime = 0;
                                    1- 2102     	BANKSEL	_batTime
     01D0 rrrr                      3-  110 m1      .banksel ram_address
     01D1 02rr                      1- 2103     	CLRR	_batTime
     01D2 02rr                      1- 2104     	CLRR	(_batTime + 1)
                                    1- 2105     	.line	786, "main.c"; 	if(++showBatValue > 99)
                                    1- 2106     	BANKSEL	_showBatValue
     01D3 rrrr                      3-  110 m1      .banksel ram_address
     01D4 05rr                      1- 2107     	INCR	_showBatValue,F
                                    1- 2108     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2109     ;;unsigned compare: left >= lit (0x64=100), size=1
     01D5 2164                      1- 2110     	MOVIA	0x64
     01D6 04rr                      1- 2111     	SUBAR	_showBatValue,W
     01D7 0803                      1- 2112     	BTRSS	STATUS,0
                                    1- 2113     	MGOTO	_00462_DS_
     01D8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2114     	.line	787, "main.c"; 	showBatValue = 99;
     01D9 2163                      1- 2115     	MOVIA	0x63
     01DA 00rr                      1- 2116     	MOVAR	_showBatValue
                                    1- 2117     	MGOTO	_00462_DS_
     01DB 3rrr                      3-   63 m1      LGOTO rom_address
     01DC                           1- 2118     _00461_DS_:
                                    1- 2119     	.line	792, "main.c"; 	batTime = 0;
                                    1- 2120     	BANKSEL	_batTime
     01DC rrrr                      3-  110 m1      .banksel ram_address
     01DD 02rr                      1- 2121     	CLRR	_batTime
     01DE 02rr                      1- 2122     	CLRR	(_batTime + 1)
     01DF                           1- 2123     _00462_DS_:
                                    1- 2124     	.line	796, "main.c"; 	if(batValue == 0)
                                    1- 2125     	BANKSEL	_batValue
     01DF rrrr                      3-  110 m1      .banksel ram_address
     01E0 01rr                      1- 2126     	MOVR	_batValue,W
     01E1 0903                      1- 2127     	BTRSS	STATUS,2
                                    1- 2128     	MGOTO	_00472_DS_
     01E2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2129     	.line	798, "main.c"; 	if(++zeroTime > 200)
                                    1- 2130     	BANKSEL	_zeroTime
     01E3 rrrr                      3-  110 m1      .banksel ram_address
     01E4 05rr                      1- 2131     	INCR	_zeroTime,F
                                    1- 2132     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2133     ;;unsigned compare: left >= lit (0xC9=201), size=1
     01E5 21C9                      1- 2134     	MOVIA	0xc9
     01E6 04rr                      1- 2135     	SUBAR	_zeroTime,W
     01E7 0803                      1- 2136     	BTRSS	STATUS,0
                                    1- 2137     	MGOTO	_00473_DS_
     01E8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2138     	.line	800, "main.c"; 	zeroTime = 200;
     01E9 21C8                      1- 2139     	MOVIA	0xc8
     01EA 00rr                      1- 2140     	MOVAR	_zeroTime
                                    1- 2141     	.line	801, "main.c"; 	showBatValue = 0;
                                    1- 2142     	BANKSEL	_showBatValue
     01EB rrrr                      3-  110 m1      .banksel ram_address
     01EC 02rr                      1- 2143     	CLRR	_showBatValue
                                    1- 2144     	.line	802, "main.c"; 	if(zeroFlag == 0)
                                    1- 2145     	BANKSEL	_zeroFlag
     01ED rrrr                      3-  110 m1      .banksel ram_address
     01EE 01rr                      1- 2146     	MOVR	_zeroFlag,W
     01EF 0903                      1- 2147     	BTRSS	STATUS,2
                                    1- 2148     	MGOTO	_00473_DS_
     01F0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2149     	.line	804, "main.c"; 	powerOff();
                                    1- 2150     	MCALL	_powerOff
     01F1 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2151     	.line	805, "main.c"; 	powerFlag = 1;
     01F2 2101                      1- 2152     	MOVIA	0x01
                                    1- 2153     	BANKSEL	_powerFlag
     01F3 rrrr                      3-  110 m1      .banksel ram_address
     01F4 00rr                      1- 2154     	MOVAR	_powerFlag
                                    1- 2155     	.line	806, "main.c"; 	shiwei = 11;
     01F5 210B                      1- 2156     	MOVIA	0x0b
                                    1- 2157     	BANKSEL	_shiwei
     01F6 rrrr                      3-  110 m1      .banksel ram_address
     01F7 00rr                      1- 2158     	MOVAR	_shiwei
                                    1- 2159     	.line	807, "main.c"; 	gewei = 12;
     01F8 210C                      1- 2160     	MOVIA	0x0c
                                    1- 2161     	BANKSEL	_gewei
     01F9 rrrr                      3-  110 m1      .banksel ram_address
     01FA 00rr                      1- 2162     	MOVAR	_gewei
                                    1- 2163     	.line	808, "main.c"; 	zeroFlag = 1;
     01FB 2101                      1- 2164     	MOVIA	0x01
                                    1- 2165     	BANKSEL	_zeroFlag
     01FC rrrr                      3-  110 m1      .banksel ram_address
     01FD 00rr                      1- 2166     	MOVAR	_zeroFlag
                                    1- 2167     	.line	809, "main.c"; 	powerTime = 500;
     01FE 21F4                      1- 2168     	MOVIA	0xf4
                                    1- 2169     	BANKSEL	_powerTime
     01FF rrrr                      3-  110 m1      .banksel ram_address
     0200 00rr                      1- 2170     	MOVAR	_powerTime
     0201 2101                      1- 2171     	MOVIA	0x01
     0202 00rr                      1- 2172     	MOVAR	(_powerTime + 1)
                                    1- 2173     	MGOTO	_00473_DS_
     0203 3rrr                      3-   63 m1      LGOTO rom_address
     0204                           1- 2174     _00472_DS_:
                                    1- 2175     	.line	816, "main.c"; 	if(zeroTime > 0)
                                    1- 2176     	BANKSEL	_zeroTime
     0204 rrrr                      3-  110 m1      .banksel ram_address
     0205 01rr                      1- 2177     	MOVR	_zeroTime,W
     0206 0D03                      1- 2178     	BTRSC	STATUS,2
                                    1- 2179     	MGOTO	_00470_DS_
     0207 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2180     	.line	818, "main.c"; 	if(--zeroTime == 0)
     0208 17rr                      1- 2181     	DECRSZ	_zeroTime,F
                                    1- 2182     	MGOTO	_00470_DS_
     0209 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2183     	.line	820, "main.c"; 	zeroFlag = 0;
                                    1- 2184     	BANKSEL	_zeroFlag
     020A rrrr                      3-  110 m1      .banksel ram_address
     020B 02rr                      1- 2185     	CLRR	_zeroFlag
     020C                           1- 2186     _00470_DS_:
                                    1- 2187     	.line	823, "main.c"; 	zeroTime = 0;
                                    1- 2188     	BANKSEL	_zeroTime
     020C rrrr                      3-  110 m1      .banksel ram_address
     020D 02rr                      1- 2189     	CLRR	_zeroTime
     020E                           1- 2190     _00473_DS_:
                                    1- 2191     	.line	825, "main.c"; 	if(zeroFlag)
                                    1- 2192     	BANKSEL	_zeroFlag
     020E rrrr                      3-  110 m1      .banksel ram_address
     020F 01rr                      1- 2193     	MOVR	_zeroFlag,W
     0210 0D03                      1- 2194     	BTRSC	STATUS,2
                                    1- 2195     	MGOTO	_00477_DS_
     0211 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2196     	.line	827, "main.c"; 	shiwei = 11;
     0212 210B                      1- 2197     	MOVIA	0x0b
                                    1- 2198     	BANKSEL	_shiwei
     0213 rrrr                      3-  110 m1      .banksel ram_address
     0214 00rr                      1- 2199     	MOVAR	_shiwei
                                    1- 2200     	.line	828, "main.c"; 	gewei = 12;
     0215 210C                      1- 2201     	MOVIA	0x0c
                                    1- 2202     	BANKSEL	_gewei
     0216 rrrr                      3-  110 m1      .banksel ram_address
     0217 00rr                      1- 2203     	MOVAR	_gewei
                                    1- 2204     	MGOTO	_00479_DS_
     0218 3rrr                      3-   63 m1      LGOTO rom_address
     0219                           1- 2205     _00477_DS_:
                                    1- 2206     	.line	832, "main.c"; 	zeroCount = 0;
                                    1- 2207     	BANKSEL	_zeroCount
     0219 rrrr                      3-  110 m1      .banksel ram_address
     021A 02rr                      1- 2208     	CLRR	_zeroCount
                                    1- 2209     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2210     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1- 2211     	.line	833, "main.c"; 	if(showBatValue > 99)
     021B 2164                      1- 2212     	MOVIA	0x64
                                    1- 2213     	BANKSEL	_showBatValue
     021C rrrr                      3-  110 m1      .banksel ram_address
     021D 04rr                      1- 2214     	SUBAR	_showBatValue,W
     021E 0803                      1- 2215     	BTRSS	STATUS,0
                                    1- 2216     	MGOTO	_00475_DS_
     021F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2217     	.line	834, "main.c"; 	showBatValue = 99;
     0220 2163                      1- 2218     	MOVIA	0x63
     0221 00rr                      1- 2219     	MOVAR	_showBatValue
     0222                           1- 2220     _00475_DS_:
                                    1- 2221     	.line	835, "main.c"; 	shiwei = showBatValue/10;
     0222 210A                      1- 2222     	MOVIA	0x0a
     0223 00rr                      1- 2223     	MOVAR	STK00
                                    1- 2224     	BANKSEL	_showBatValue
     0224 rrrr                      3-  110 m1      .banksel ram_address
     0225 01rr                      1- 2225     	MOVR	_showBatValue,W
                                    1- 2226     	MCALL	__divuchar
     0226 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2227     	BANKSEL	_shiwei
     0227 rrrr                      3-  110 m1      .banksel ram_address
     0228 00rr                      1- 2228     	MOVAR	_shiwei
                                    1- 2229     	.line	836, "main.c"; 	gewei = showBatValue%10;
     0229 210A                      1- 2230     	MOVIA	0x0a
     022A 00rr                      1- 2231     	MOVAR	STK00
                                    1- 2232     	BANKSEL	_showBatValue
     022B rrrr                      3-  110 m1      .banksel ram_address
     022C 01rr                      1- 2233     	MOVR	_showBatValue,W
                                    1- 2234     	MCALL	__moduchar
     022D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2235     	BANKSEL	_gewei
     022E rrrr                      3-  110 m1      .banksel ram_address
     022F 00rr                      1- 2236     	MOVAR	_gewei
     0230                           1- 2237     _00479_DS_:
                                    1- 2238     	.line	838, "main.c"; 	}
                                    1- 2239     	RETURN	
     0230 0010                      3-   40 m1      ret
                                    1- 2240     ; exit point of _checkBatAD
                                    1- 2242     ;***
                                    1- 2243     ;  pBlock Stats: dbName = C
                                    1- 2244     ;***
                                    1- 2245     ;functions called:
                                    1- 2246     ;   _F_AIN2_Convert
                                    1- 2247     ;   _powerOff
                                    1- 2248     ;   _F_AIN2_Convert
                                    1- 2249     ;   _powerOff
                                    1- 2250     ;4 compiler assigned registers:
                                    1- 2251     ;   r0x1047
                                    1- 2252     ;   r0x1048
                                    1- 2253     ;   r0x1049
                                    1- 2254     ;   r0x104A
                                    1- 2255     ;; Starting pCode block
                                    1- 2256     .segment "code"; module=main, function=_checkOutA
     0000                           1- 2258     _checkOutA:
                                    1- 2259     ; 0 exit points
                                    1- 2260     	.line	659, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 2261     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2262     	CLRR	_R_AIN2_DATA_LB
                                    1- 2263     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2264     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 2265     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 2266     	.line	660, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 2267     	MOVIA	0x08
                                    1- 2268     	MCALL	_F_AIN2_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2269     	.line	661, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 2270     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 2271     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 2272     	ANDIA	0xf0
     000A 00rr                      1- 2273     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 2274     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 2275     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 2276     	ANDIA	0x0f
     000E 11rr                      1- 2277     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 2278     	XORAR	_R_AIN2_DATA,F
                                    1- 2279     	.line	662, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 2280     	MOVIA	0xf0
                                    1- 2281     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 2282     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 2283     	.line	663, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 2284     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 2285     	BANKSEL	r0x1049
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 2286     	MOVAR	r0x1049
                                    1- 2287     ;;1	MOVAR	r0x1047
                                    1- 2288     ;;1	CLRR	r0x1048
                                    1- 2289     ;;104	MOVR	r0x1047,W
     0016 2100                      1- 2290     	MOVIA	0x00
                                    1- 2291     	BANKSEL	r0x104A
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 2292     	MOVAR	r0x104A
                                    1- 2293     	BANKSEL	r0x1049
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 2294     	MOVR	r0x1049,W
                                    1- 2295     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 2296     	ADDAR	_R_AIN2_DATA,F
                                    1- 2297     	BANKSEL	r0x104A
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 2298     	MOVR	r0x104A,W
     001F 0C03                      1- 2299     	BTRSC	STATUS,0
     0020 05rr                      1- 2300     	INCR	r0x104A,W
     0021 0D03                      1- 2301     	BTRSC	STATUS,2
                                    1- 2302     	MGOTO	_00007_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2303     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 2304     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 2305     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 2306     _00007_DS_:
                                    1- 2307     	.line	664, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0025 1C03                      1- 2308     	BCR	STATUS,0
                                    1- 2309     	BANKSEL	_R_AIN2_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 2310     	RRR	(_R_AIN2_DATA + 1),F
     0028 13rr                      1- 2311     	RRR	_R_AIN2_DATA,F
                                    1- 2312     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 2313     	BCR	STATUS,0
     002A 13rr                      1- 2314     	RRR	(_R_AIN2_DATA + 1),F
     002B 13rr                      1- 2315     	RRR	_R_AIN2_DATA,F
                                    1- 2316     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 2317     	BCR	STATUS,0
     002D 13rr                      1- 2318     	RRR	(_R_AIN2_DATA + 1),F
     002E 13rr                      1- 2319     	RRR	_R_AIN2_DATA,F
                                    1- 2320     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2321     ;;unsigned compare: left >= lit (0xC9=201), size=2
                                    1- 2322     	.line	665, "main.c"; 	if(R_AIN2_DATA > 200)
     002F 2100                      1- 2323     	MOVIA	0x00
     0030 04rr                      1- 2324     	SUBAR	(_R_AIN2_DATA + 1),W
     0031 0903                      1- 2325     	BTRSS	STATUS,2
                                    1- 2326     	MGOTO	_00400_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033 21C9                      1- 2327     	MOVIA	0xc9
     0034 04rr                      1- 2328     	SUBAR	_R_AIN2_DATA,W
     0035                           1- 2329     _00400_DS_:
     0035 0803                      1- 2330     	BTRSS	STATUS,0
                                    1- 2331     	MGOTO	_00387_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2332     	.line	667, "main.c"; 	if(++overCount > 250)
                                    1- 2333     	BANKSEL	_overCount
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 05rr                      1- 2334     	INCR	_overCount,F
                                    1- 2335     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2336     ;;unsigned compare: left >= lit (0xFB=251), size=1
     0039 21FB                      1- 2337     	MOVIA	0xfb
     003A 04rr                      1- 2338     	SUBAR	_overCount,W
     003B 0803                      1- 2339     	BTRSS	STATUS,0
                                    1- 2340     	MGOTO	_00389_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2341     	.line	669, "main.c"; 	overCount = 250;
     003D 21FA                      1- 2342     	MOVIA	0xfa
     003E 00rr                      1- 2343     	MOVAR	_overCount
                                    1- 2344     	.line	670, "main.c"; 	powerOff();
                                    1- 2345     	MCALL	_powerOff
     003F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2346     	.line	671, "main.c"; 	powerTime = 500;
     0040 21F4                      1- 2347     	MOVIA	0xf4
                                    1- 2348     	BANKSEL	_powerTime
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 00rr                      1- 2349     	MOVAR	_powerTime
     0043 2101                      1- 2350     	MOVIA	0x01
     0044 00rr                      1- 2351     	MOVAR	(_powerTime + 1)
                                    1- 2352     	.line	672, "main.c"; 	workStepshiwei = 10;
     0045 210A                      1- 2353     	MOVIA	0x0a
                                    1- 2354     	BANKSEL	_workStepshiwei
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1- 2355     	MOVAR	_workStepshiwei
                                    1- 2356     	.line	673, "main.c"; 	workStepgewei = 1;
     0048 2101                      1- 2357     	MOVIA	0x01
                                    1- 2358     	BANKSEL	_workStepgewei
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 2359     	MOVAR	_workStepgewei
                                    1- 2360     	.line	674, "main.c"; 	overFlag = 1;
                                    1- 2361     	BANKSEL	_overFlag
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 00rr                      1- 2362     	MOVAR	_overFlag
                                    1- 2363     	MGOTO	_00389_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
     004E                           1- 2364     _00387_DS_:
                                    1- 2365     	.line	679, "main.c"; 	if(overCount > 0)
                                    1- 2366     	BANKSEL	_overCount
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1- 2367     	MOVR	_overCount,W
     0050 0903                      1- 2368     	BTRSS	STATUS,2
                                    1- 2369     	.line	681, "main.c"; 	overCount--;
     0051 06rr                      1- 2370     	DECR	_overCount,F
     0052                           1- 2371     _00389_DS_:
                                    1- 2372     	.line	684, "main.c"; 	}
                                    1- 2373     	RETURN	
     0052 0010                      3-   40 m1      ret
                                    1- 2375     ;***
                                    1- 2376     ;  pBlock Stats: dbName = C
                                    1- 2377     ;***
                                    1- 2378     ;has an exit
                                    1- 2379     ;functions called:
                                    1- 2380     ;   __mulint
                                    1- 2381     ;   __divuint
                                    1- 2382     ;   __mulint
                                    1- 2383     ;   __divuint
                                    1- 2384     ;8 compiler assigned registers:
                                    1- 2385     ;   r0x103E
                                    1- 2386     ;   STK00
                                    1- 2387     ;   r0x103F
                                    1- 2388     ;   STK01
                                    1- 2389     ;   r0x1040
                                    1- 2390     ;   STK02
                                    1- 2391     ;   r0x1041
                                    1- 2392     ;   r0x1042
                                    1- 2393     ;; Starting pCode block
                                    1- 2394     .segment "code"; module=main, function=_getbatGe
                                    1- 2396     ;local variable name mapping:
     0000                           1- 2403     _getbatGe:
                                    1- 2404     ; 2 exit points
                                    1- 2405     	.line	648, "main.c"; 	u8t getbatGe(u16t adValue,u8t adValue2)
                                    1- 2406     	BANKSEL	r0x103E
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2407     	MOVAR	r0x103E
     0002 01rr                      1- 2408     	MOVR	STK00,W
                                    1- 2409     	BANKSEL	r0x103F
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 2410     	MOVAR	r0x103F
     0005 01rr                      1- 2411     	MOVR	STK01,W
                                    1- 2412     	BANKSEL	r0x1040
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 2413     	MOVAR	r0x1040
                                    1- 2414     	.line	650, "main.c"; 	u16t result = (R_AIN2_DATA - adValue)*10/adValue2;
                                    1- 2415     	BANKSEL	r0x103F
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 01rr                      1- 2416     	MOVR	r0x103F,W
                                    1- 2417     	BANKSEL	_R_AIN2_DATA
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 04rr                      1- 2418     	SUBAR	_R_AIN2_DATA,W
                                    1- 2419     	BANKSEL	r0x103F
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 2420     	MOVAR	r0x103F
                                    1- 2421     	BANKSEL	r0x103E
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 2422     	MOVR	r0x103E,W
     0010 0803                      1- 2423     	BTRSS	STATUS,0
     0011 05rr                      1- 2424     	INCR	r0x103E,W
                                    1- 2425     	BANKSEL	_R_AIN2_DATA
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 2426     	SUBAR	(_R_AIN2_DATA + 1),W
                                    1- 2427     	BANKSEL	r0x103E
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 2428     	MOVAR	r0x103E
                                    1- 2429     	BANKSEL	r0x103F
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 2430     	MOVR	r0x103F,W
     0018 00rr                      1- 2431     	MOVAR	STK02
                                    1- 2432     	BANKSEL	r0x103E
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 2433     	MOVR	r0x103E,W
     001B 00rr                      1- 2434     	MOVAR	STK01
     001C 210A                      1- 2435     	MOVIA	0x0a
     001D 00rr                      1- 2436     	MOVAR	STK00
     001E 2100                      1- 2437     	MOVIA	0x00
                                    1- 2438     	MCALL	__mulint
     001F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2439     	BANKSEL	r0x103E
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 2440     	MOVAR	r0x103E
     0022 01rr                      1- 2441     	MOVR	STK00,W
                                    1- 2442     	BANKSEL	r0x103F
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 2443     	MOVAR	r0x103F
                                    1- 2444     ;;103	MOVR	r0x1040,W
                                    1- 2445     ;;101	MOVAR	r0x1041
                                    1- 2446     ;;1	CLRR	r0x1042
                                    1- 2447     ;;102	MOVR	r0x1041,W
                                    1- 2448     	BANKSEL	r0x1040
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1- 2449     	MOVR	r0x1040,W
     0027 00rr                      1- 2450     	MOVAR	STK02
     0028 2100                      1- 2451     	MOVIA	0x00
     0029 00rr                      1- 2452     	MOVAR	STK01
                                    1- 2453     	BANKSEL	r0x103F
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1- 2454     	MOVR	r0x103F,W
     002C 00rr                      1- 2455     	MOVAR	STK00
                                    1- 2456     	BANKSEL	r0x103E
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 01rr                      1- 2457     	MOVR	r0x103E,W
                                    1- 2458     	MCALL	__divuint
     002F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2459     	BANKSEL	r0x103E
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 00rr                      1- 2460     	MOVAR	r0x103E
     0032 01rr                      1- 2461     	MOVR	STK00,W
                                    1- 2462     	BANKSEL	r0x103F
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 00rr                      1- 2463     	MOVAR	r0x103F
                                    1- 2464     	.line	651, "main.c"; 	u8t res = result;
                                    1- 2465     	BANKSEL	r0x1040
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 00rr                      1- 2466     	MOVAR	r0x1040
                                    1- 2467     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 2468     ;;unsigned compare: left >= lit (0xA=10), size=1
                                    1- 2469     	.line	652, "main.c"; 	if(res > 9)
     0037 210A                      1- 2470     	MOVIA	0x0a
     0038 04rr                      1- 2471     	SUBAR	r0x1040,W
     0039 0803                      1- 2472     	BTRSS	STATUS,0
                                    1- 2473     	MGOTO	_00377_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2474     	.line	653, "main.c"; 	res = 9;
     003B 2109                      1- 2475     	MOVIA	0x09
     003C 00rr                      1- 2476     	MOVAR	r0x1040
     003D                           1- 2477     _00377_DS_:
                                    1- 2478     	.line	654, "main.c"; 	return res;
                                    1- 2479     	BANKSEL	r0x1040
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 01rr                      1- 2480     	MOVR	r0x1040,W
                                    1- 2481     	.line	655, "main.c"; 	}
                                    1- 2482     	RETURN	
     003F 0010                      3-   40 m1      ret
                                    1- 2483     ; exit point of _getbatGe
                                    1- 2485     ;***
                                    1- 2486     ;  pBlock Stats: dbName = C
                                    1- 2487     ;***
                                    1- 2488     ;has an exit
                                    1- 2489     ;functions called:
                                    1- 2490     ;   _pwm1Stop
                                    1- 2491     ;   _pwm1Stop
                                    1- 2492     ;1 compiler assigned register :
                                    1- 2493     ;   r0x104B
                                    1- 2494     ;; Starting pCode block
                                    1- 2495     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2497     _gotoSleep:
                                    1- 2498     ; 2 exit points
                                    1- 2499     	.line	618, "main.c"; 	shanshuoTime = 0;
                                    1- 2500     	BANKSEL	_shanshuoTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2501     	CLRR	_shanshuoTime
                                    1- 2502     	.line	619, "main.c"; 	zeroCount = 0;
                                    1- 2503     	BANKSEL	_zeroCount
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2504     	CLRR	_zeroCount
                                    1- 2505     	.line	620, "main.c"; 	overFlag = 0;
                                    1- 2506     	BANKSEL	_overFlag
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 2507     	CLRR	_overFlag
                                    1- 2508     	.line	621, "main.c"; 	count900s = 0;
                                    1- 2509     	BANKSEL	_count900s
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2510     	CLRR	_count900s
     0008 02rr                      1- 2511     	CLRR	(_count900s + 1)
                                    1- 2512     	.line	622, "main.c"; 	COM1 = COM2 = COM3 = COM4 = 1;
     0009 1Arr                      1- 2513     	BSR	_PORTB,5
     000A 0Arr                      1- 2514     	BTRSS	_PORTB,5
     000B 1Err                      1- 2515     	BCR	_PORTB,4
     000C 0Err                      1- 2516     	BTRSC	_PORTB,5
     000D 1Arr                      1- 2517     	BSR	_PORTB,4
     000E 0Err                      1- 2518     	BTRSC	_PORTB,4
                                    1- 2519     	MGOTO	_00008_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2520     	BANKSEL	_PORTA
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 1Drr                      1- 2521     	BCR	_PORTA,3
     0012                           1- 2522     _00008_DS_:
     0012 0Arr                      1- 2523     	BTRSS	_PORTB,4
                                    1- 2524     	MGOTO	_00009_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2525     	BANKSEL	_PORTA
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 19rr                      1- 2526     	BSR	_PORTA,3
     0016                           1- 2527     _00009_DS_:
                                    1- 2528     	BANKSEL	_PORTA
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 09rr                      1- 2529     	BTRSS	_PORTA,3
     0018 1Err                      1- 2530     	BCR	_PORTA,4
     0019 0Drr                      1- 2531     	BTRSC	_PORTA,3
     001A 1Arr                      1- 2532     	BSR	_PORTA,4
                                    1- 2533     	.line	623, "main.c"; 	IOSTA |= 0x20;
     001B 001r                      1- 2534     	IOSTR	_IOSTA
                                    1- 2535     	BANKSEL	r0x104B
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 00rr                      1- 2536     	MOVAR	r0x104B
     001E 1Arr                      1- 2537     	BSR	r0x104B,5
     001F 01rr                      1- 2538     	MOVR	r0x104B,W
     0020 000r                      1- 2539     	IOST	_IOSTA
                                    1- 2540     	.line	624, "main.c"; 	sleepTime = 0;
                                    1- 2541     	BANKSEL	_sleepTime
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 02rr                      1- 2542     	CLRR	_sleepTime
                                    1- 2543     	.line	625, "main.c"; 	workStep = 0;
                                    1- 2544     	BANKSEL	_workStep
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 02rr                      1- 2545     	CLRR	_workStep
                                    1- 2546     	.line	626, "main.c"; 	powerFlag = 0;
                                    1- 2547     	BANKSEL	_powerFlag
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 2548     	CLRR	_powerFlag
                                    1- 2549     	.line	627, "main.c"; 	powerTime = 0;
                                    1- 2550     	BANKSEL	_powerTime
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 2551     	CLRR	_powerTime
     0029 02rr                      1- 2552     	CLRR	(_powerTime + 1)
                                    1- 2553     	.line	628, "main.c"; 	pwm1Stop();
                                    1- 2554     	MCALL	_pwm1Stop
     002A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2555     	.line	630, "main.c"; 	AWUCON = 0x02;
     002B 2102                      1- 2556     	MOVIA	0x02
     002C 00rr                      1- 2557     	MOVAR	_AWUCON
                                    1- 2558     	.line	631, "main.c"; 	BWUCON = 0x04;
     002D 2104                      1- 2559     	MOVIA	0x04
     002E 00rr                      1- 2560     	MOVAR	_BWUCON
                                    1- 2561     	.line	632, "main.c"; 	INTE =  C_INT_PABKey;
     002F 2102                      1- 2562     	MOVIA	0x02
     0030 00rr                      1- 2563     	MOVAR	_INTE
                                    1- 2564     	.line	633, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0031 2118                      1- 2565     	MOVIA	0x18
     0032 00rr                      1- 2566     	MOVAR	_PCON
                                    1- 2567     	.line	634, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0033 02rr                      1- 2568     	CLRR	_INTF
                                    1- 2569     	.line	635, "main.c"; 	CLRWDT();
     0034 0002                      1- 2570     	clrwdt
                                    1- 2571     	.line	636, "main.c"; 	ENI();
     0035 0004                      1- 2572     	ENI
                                    1- 2573     	.line	637, "main.c"; 	SLEEP();
     0036 0001                      1- 2574     	sleep
                                    1- 2575     	.line	638, "main.c"; 	AWUCON = 0x00;
     0037 02rr                      1- 2576     	CLRR	_AWUCON
                                    1- 2577     	.line	639, "main.c"; 	BWUCON = 0x00;
     0038 02rr                      1- 2578     	CLRR	_BWUCON
                                    1- 2579     	.line	640, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0��Timer1��WDT overflow interrupt
     0039 2101                      1- 2580     	MOVIA	0x01
     003A 00rr                      1- 2581     	MOVAR	_INTE
                                    1- 2582     	.line	641, "main.c"; 	INTF = 0;
     003B 02rr                      1- 2583     	CLRR	_INTF
                                    1- 2584     	.line	643, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     003C 21B8                      1- 2585     	MOVIA	0xb8
     003D 00rr                      1- 2586     	MOVAR	_PCON
                                    1- 2587     	.line	646, "main.c"; 	}
                                    1- 2588     	RETURN	
     003E 0010                      3-   40 m1      ret
                                    1- 2589     ; exit point of _gotoSleep
                                    1- 2591     ;***
                                    1- 2592     ;  pBlock Stats: dbName = C
                                    1- 2593     ;***
                                    1- 2594     ;has an exit
                                    1- 2595     ;functions called:
                                    1- 2596     ;   __gptrget1
                                    1- 2597     ;   _ind_light_disp
                                    1- 2598     ;   _delay_us
                                    1- 2599     ;   __gptrget1
                                    1- 2600     ;   _ind_light_disp
                                    1- 2601     ;   _delay_us
                                    1- 2602     ;   __gptrget1
                                    1- 2603     ;   _ind_light_disp
                                    1- 2604     ;   _delay_us
                                    1- 2605     ;   __gptrget1
                                    1- 2606     ;   _ind_light_disp
                                    1- 2607     ;   _delay_us
                                    1- 2608     ;5 compiler assigned registers:
                                    1- 2609     ;   r0x104E
                                    1- 2610     ;   r0x104F
                                    1- 2611     ;   STK01
                                    1- 2612     ;   STK00
                                    1- 2613     ;   r0x1050
                                    1- 2614     ;; Starting pCode block
                                    1- 2615     .segment "code"; module=main, function=_refreshBat
     0000                           1- 2617     _refreshBat:
                                    1- 2618     ; 2 exit points
                                    1- 2619     	.line	596, "main.c"; 	COM1 = 1;
                                    1- 2620     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 1Arr                      1- 2621     	BSR	_PORTA,4
                                    1- 2622     	.line	597, "main.c"; 	COM2 = 1;
     0002 19rr                      1- 2623     	BSR	_PORTA,3
                                    1- 2624     	.line	598, "main.c"; 	COM3 = 1;
     0003 1Arr                      1- 2625     	BSR	_PORTB,4
                                    1- 2626     	.line	599, "main.c"; 	COM4 = 1;
     0004 1Arr                      1- 2627     	BSR	_PORTB,5
                                    1- 2628     	.line	600, "main.c"; 	ind_light_disp(table[shiwei]);
                                    1- 2629     	BANKSEL	_shiwei
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 01rr                      1- 2630     	MOVR	_shiwei,W
     0007 25rr                      1- 2631     	ADDIA	(_table + 0)
                                    1- 2632     	BANKSEL	r0x104E
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2633     	MOVAR	r0x104E
     000A 21rr                      1- 2634     	MOVIA	((_table + 0) >> 8) & 0xff
     000B 0C03                      1- 2635     	BTRSC	STATUS,0
     000C 2501                      1- 2636     	ADDIA	0x01
                                    1- 2637     	BANKSEL	r0x104F
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 2638     	MOVAR	r0x104F
                                    1- 2639     	BANKSEL	r0x104E
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 2640     	MOVR	r0x104E,W
     0011 00rr                      1- 2641     	MOVAR	STK01
                                    1- 2642     	BANKSEL	r0x104F
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 2643     	MOVR	r0x104F,W
     0014 00rr                      1- 2644     	MOVAR	STK00
     0015 2180                      1- 2645     	MOVIA	0x80
                                    1- 2646     	MCALL	__gptrget1
     0016 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2647     ;;100	MOVAR	r0x1050
                                    1- 2648     	MCALL	_ind_light_disp
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2649     	.line	601, "main.c"; 	COM1 = 1;
                                    1- 2650     	BANKSEL	_PORTA
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 1Arr                      1- 2651     	BSR	_PORTA,4
                                    1- 2652     	.line	602, "main.c"; 	COM2 = 0;
     001A 1Drr                      1- 2653     	BCR	_PORTA,3
                                    1- 2654     	.line	603, "main.c"; 	delay_us(REFRESHTIME);
     001B 2164                      1- 2655     	MOVIA	0x64
                                    1- 2656     	MCALL	_delay_us
     001C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2657     	.line	604, "main.c"; 	COM1 = 1;
                                    1- 2658     	BANKSEL	_PORTA
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 1Arr                      1- 2659     	BSR	_PORTA,4
                                    1- 2660     	.line	605, "main.c"; 	COM2 = 1;
     001F 19rr                      1- 2661     	BSR	_PORTA,3
                                    1- 2662     	.line	606, "main.c"; 	ind_light_disp(table[gewei]);
                                    1- 2663     	BANKSEL	_gewei
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 2664     	MOVR	_gewei,W
     0022 25rr                      1- 2665     	ADDIA	(_table + 0)
                                    1- 2666     	BANKSEL	r0x104E
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 2667     	MOVAR	r0x104E
     0025 21rr                      1- 2668     	MOVIA	((_table + 0) >> 8) & 0xff
     0026 0C03                      1- 2669     	BTRSC	STATUS,0
     0027 2501                      1- 2670     	ADDIA	0x01
                                    1- 2671     	BANKSEL	r0x104F
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 00rr                      1- 2672     	MOVAR	r0x104F
                                    1- 2673     	BANKSEL	r0x104E
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1- 2674     	MOVR	r0x104E,W
     002C 00rr                      1- 2675     	MOVAR	STK01
                                    1- 2676     	BANKSEL	r0x104F
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 01rr                      1- 2677     	MOVR	r0x104F,W
     002F 00rr                      1- 2678     	MOVAR	STK00
     0030 2180                      1- 2679     	MOVIA	0x80
                                    1- 2680     	MCALL	__gptrget1
     0031 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2681     ;;99	MOVAR	r0x1050
                                    1- 2682     	MCALL	_ind_light_disp
     0032 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2683     	.line	607, "main.c"; 	COM1 = 0;
                                    1- 2684     	BANKSEL	_PORTA
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 1Err                      1- 2685     	BCR	_PORTA,4
                                    1- 2686     	.line	608, "main.c"; 	COM2 = 1;
     0035 19rr                      1- 2687     	BSR	_PORTA,3
                                    1- 2688     	.line	609, "main.c"; 	delay_us(REFRESHTIME);
     0036 2164                      1- 2689     	MOVIA	0x64
                                    1- 2690     	MCALL	_delay_us
     0037 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2691     	.line	610, "main.c"; 	COM1 = 1;
                                    1- 2692     	BANKSEL	_PORTA
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 1Arr                      1- 2693     	BSR	_PORTA,4
                                    1- 2694     	.line	611, "main.c"; 	COM2 = 1;
     003A 19rr                      1- 2695     	BSR	_PORTA,3
                                    1- 2696     	.line	612, "main.c"; 	}
                                    1- 2697     	RETURN	
     003B 0010                      3-   40 m1      ret
                                    1- 2698     ; exit point of _refreshBat
                                    1- 2700     ;***
                                    1- 2701     ;  pBlock Stats: dbName = C
                                    1- 2702     ;***
                                    1- 2703     ;has an exit
                                    1- 2704     ;functions called:
                                    1- 2705     ;   __gptrget1
                                    1- 2706     ;   _ind_light_disp
                                    1- 2707     ;   _delay_us
                                    1- 2708     ;   __gptrget1
                                    1- 2709     ;   _ind_light_disp
                                    1- 2710     ;   _delay_us
                                    1- 2711     ;   __gptrget1
                                    1- 2712     ;   _ind_light_disp
                                    1- 2713     ;   _delay_us
                                    1- 2714     ;   __gptrget1
                                    1- 2715     ;   _ind_light_disp
                                    1- 2716     ;   _delay_us
                                    1- 2717     ;   __gptrget1
                                    1- 2718     ;   _ind_light_disp
                                    1- 2719     ;   _delay_us
                                    1- 2720     ;   __gptrget1
                                    1- 2721     ;   _ind_light_disp
                                    1- 2722     ;   _delay_us
                                    1- 2723     ;   __gptrget1
                                    1- 2724     ;   _ind_light_disp
                                    1- 2725     ;   _delay_us
                                    1- 2726     ;   __gptrget1
                                    1- 2727     ;   _ind_light_disp
                                    1- 2728     ;   _delay_us
                                    1- 2729     ;   __gptrget1
                                    1- 2730     ;   _ind_light_disp
                                    1- 2731     ;   _delay_us
                                    1- 2732     ;   __gptrget1
                                    1- 2733     ;   _ind_light_disp
                                    1- 2734     ;   _delay_us
                                    1- 2735     ;   __gptrget1
                                    1- 2736     ;   _ind_light_disp
                                    1- 2737     ;   _delay_us
                                    1- 2738     ;   __gptrget1
                                    1- 2739     ;   _ind_light_disp
                                    1- 2740     ;   _delay_us
                                    1- 2741     ;5 compiler assigned registers:
                                    1- 2742     ;   STK01
                                    1- 2743     ;   STK00
                                    1- 2744     ;   r0x1051
                                    1- 2745     ;   r0x1052
                                    1- 2746     ;   r0x1053
                                    1- 2747     ;; Starting pCode block
                                    1- 2748     .segment "code"; module=main, function=_refresh
     0000                           1- 2750     _refresh:
                                    1- 2751     ; 2 exit points
                                    1- 2752     	.line	551, "main.c"; 	COM1 = 1;
                                    1- 2753     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 1Arr                      1- 2754     	BSR	_PORTA,4
                                    1- 2755     	.line	552, "main.c"; 	COM2 = 1;
     0002 19rr                      1- 2756     	BSR	_PORTA,3
                                    1- 2757     	.line	553, "main.c"; 	COM3 = 1;
     0003 1Arr                      1- 2758     	BSR	_PORTB,4
                                    1- 2759     	.line	554, "main.c"; 	COM4 = 1;
     0004 1Arr                      1- 2760     	BSR	_PORTB,5
                                    1- 2761     	.line	555, "main.c"; 	if(chrgFlag)
                                    1- 2762     	BANKSEL	_chrgFlag
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 01rr                      1- 2763     	MOVR	_chrgFlag,W
     0007 0D03                      1- 2764     	BTRSC	STATUS,2
                                    1- 2765     	MGOTO	_00361_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2766     	.line	557, "main.c"; 	if(batValue == 100 && showBatValue == 99)
                                    1- 2767     	BANKSEL	_batValue
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 01rr                      1- 2768     	MOVR	_batValue,W
     000B 2464                      1- 2769     	XORIA	0x64
     000C 0903                      1- 2770     	BTRSS	STATUS,2
                                    1- 2771     	MGOTO	_00357_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2772     	BANKSEL	_showBatValue
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 2773     	MOVR	_showBatValue,W
     0010 2463                      1- 2774     	XORIA	0x63
     0011 0903                      1- 2775     	BTRSS	STATUS,2
                                    1- 2776     	MGOTO	_00357_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2777     	.line	559, "main.c"; 	ind_light_disp(table[0]);
     0013 21rr                      1- 2778     	MOVIA	(_table + 0)
     0014 00rr                      1- 2779     	MOVAR	STK01
     0015 21rr                      1- 2780     	MOVIA	((_table + 0) >> 8) & 0xff
     0016 00rr                      1- 2781     	MOVAR	STK00
     0017 2180                      1- 2782     	MOVIA	0x80
                                    1- 2783     	MCALL	__gptrget1
     0018 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2784     	BANKSEL	r0x1051
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 00rr                      1- 2785     	MOVAR	r0x1051
                                    1- 2786     	MCALL	_ind_light_disp
     001B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2787     	.line	560, "main.c"; 	COM3 = 0;
     001C 1Err                      1- 2788     	BCR	_PORTB,4
                                    1- 2789     	.line	561, "main.c"; 	delay_us(REFRESHTIME);
     001D 2164                      1- 2790     	MOVIA	0x64
                                    1- 2791     	MCALL	_delay_us
     001E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2792     	.line	562, "main.c"; 	COM3 = 1;
     001F 1Arr                      1- 2793     	BSR	_PORTB,4
                                    1- 2794     	.line	563, "main.c"; 	ind_light_disp(table[0]);
     0020 21rr                      1- 2795     	MOVIA	(_table + 0)
     0021 00rr                      1- 2796     	MOVAR	STK01
     0022 21rr                      1- 2797     	MOVIA	((_table + 0) >> 8) & 0xff
     0023 00rr                      1- 2798     	MOVAR	STK00
     0024 2180                      1- 2799     	MOVIA	0x80
                                    1- 2800     	MCALL	__gptrget1
     0025 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2801     	BANKSEL	r0x1051
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 00rr                      1- 2802     	MOVAR	r0x1051
                                    1- 2803     	MCALL	_ind_light_disp
     0028 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2804     	.line	564, "main.c"; 	COM4 = 0;
     0029 1Err                      1- 2805     	BCR	_PORTB,5
                                    1- 2806     	.line	565, "main.c"; 	delay_us(REFRESHTIME);
     002A 2164                      1- 2807     	MOVIA	0x64
                                    1- 2808     	MCALL	_delay_us
     002B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2809     	.line	566, "main.c"; 	COM4 = 1;
     002C 1Arr                      1- 2810     	BSR	_PORTB,5
                                    1- 2811     	MGOTO	_00363_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
     002E                           1- 2812     _00357_DS_:
                                    1- 2813     	.line	570, "main.c"; 	ind_light_disp(table2[workStepshiwei]);
                                    1- 2814     	BANKSEL	_workStepshiwei
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 2815     	MOVR	_workStepshiwei,W
     0030 25rr                      1- 2816     	ADDIA	(_table2 + 0)
                                    1- 2817     	BANKSEL	r0x1051
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 00rr                      1- 2818     	MOVAR	r0x1051
     0033 21rr                      1- 2819     	MOVIA	((_table2 + 0) >> 8) & 0xff
     0034 0C03                      1- 2820     	BTRSC	STATUS,0
     0035 2501                      1- 2821     	ADDIA	0x01
                                    1- 2822     	BANKSEL	r0x1052
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 00rr                      1- 2823     	MOVAR	r0x1052
                                    1- 2824     	BANKSEL	r0x1051
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 01rr                      1- 2825     	MOVR	r0x1051,W
     003A 00rr                      1- 2826     	MOVAR	STK01
                                    1- 2827     	BANKSEL	r0x1052
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 01rr                      1- 2828     	MOVR	r0x1052,W
     003D 00rr                      1- 2829     	MOVAR	STK00
     003E 2180                      1- 2830     	MOVIA	0x80
                                    1- 2831     	MCALL	__gptrget1
     003F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2832     ;;2	MOVAR	r0x1053
                                    1- 2833     	MCALL	_ind_light_disp
     0040 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2834     	.line	571, "main.c"; 	COM3 = 0;
     0041 1Err                      1- 2835     	BCR	_PORTB,4
                                    1- 2836     	.line	572, "main.c"; 	delay_us(REFRESHTIME);
     0042 2164                      1- 2837     	MOVIA	0x64
                                    1- 2838     	MCALL	_delay_us
     0043 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2839     	.line	573, "main.c"; 	COM3 = 1;
     0044 1Arr                      1- 2840     	BSR	_PORTB,4
                                    1- 2841     	.line	574, "main.c"; 	ind_light_disp(table2[workStepgewei]);
                                    1- 2842     	BANKSEL	_workStepgewei
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1- 2843     	MOVR	_workStepgewei,W
     0047 25rr                      1- 2844     	ADDIA	(_table2 + 0)
                                    1- 2845     	BANKSEL	r0x1051
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1- 2846     	MOVAR	r0x1051
     004A 21rr                      1- 2847     	MOVIA	((_table2 + 0) >> 8) & 0xff
     004B 0C03                      1- 2848     	BTRSC	STATUS,0
     004C 2501                      1- 2849     	ADDIA	0x01
                                    1- 2850     	BANKSEL	r0x1052
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 00rr                      1- 2851     	MOVAR	r0x1052
                                    1- 2852     	BANKSEL	r0x1051
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 01rr                      1- 2853     	MOVR	r0x1051,W
     0051 00rr                      1- 2854     	MOVAR	STK01
                                    1- 2855     	BANKSEL	r0x1052
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1- 2856     	MOVR	r0x1052,W
     0054 00rr                      1- 2857     	MOVAR	STK00
     0055 2180                      1- 2858     	MOVIA	0x80
                                    1- 2859     	MCALL	__gptrget1
     0056 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2860     ;;2	MOVAR	r0x1053
                                    1- 2861     	MCALL	_ind_light_disp
     0057 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2862     	.line	575, "main.c"; 	COM4 = 0;
     0058 1Err                      1- 2863     	BCR	_PORTB,5
                                    1- 2864     	.line	576, "main.c"; 	delay_us(REFRESHTIME);
     0059 2164                      1- 2865     	MOVIA	0x64
                                    1- 2866     	MCALL	_delay_us
     005A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2867     	.line	577, "main.c"; 	COM4 = 1;
     005B 1Arr                      1- 2868     	BSR	_PORTB,5
                                    1- 2869     	MGOTO	_00363_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
     005D                           1- 2870     _00361_DS_:
                                    1- 2871     	.line	582, "main.c"; 	ind_light_disp(table[workStepshiwei]);
                                    1- 2872     	BANKSEL	_workStepshiwei
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 01rr                      1- 2873     	MOVR	_workStepshiwei,W
     005F 25rr                      1- 2874     	ADDIA	(_table + 0)
                                    1- 2875     	BANKSEL	r0x1051
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 00rr                      1- 2876     	MOVAR	r0x1051
     0062 21rr                      1- 2877     	MOVIA	((_table + 0) >> 8) & 0xff
     0063 0C03                      1- 2878     	BTRSC	STATUS,0
     0064 2501                      1- 2879     	ADDIA	0x01
                                    1- 2880     	BANKSEL	r0x1052
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 00rr                      1- 2881     	MOVAR	r0x1052
                                    1- 2882     	BANKSEL	r0x1051
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 01rr                      1- 2883     	MOVR	r0x1051,W
     0069 00rr                      1- 2884     	MOVAR	STK01
                                    1- 2885     	BANKSEL	r0x1052
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 01rr                      1- 2886     	MOVR	r0x1052,W
     006C 00rr                      1- 2887     	MOVAR	STK00
     006D 2180                      1- 2888     	MOVIA	0x80
                                    1- 2889     	MCALL	__gptrget1
     006E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2890     ;;2	MOVAR	r0x1053
                                    1- 2891     	MCALL	_ind_light_disp
     006F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2892     	.line	583, "main.c"; 	COM3 = 0;
     0070 1Err                      1- 2893     	BCR	_PORTB,4
                                    1- 2894     	.line	584, "main.c"; 	delay_us(REFRESHTIME);
     0071 2164                      1- 2895     	MOVIA	0x64
                                    1- 2896     	MCALL	_delay_us
     0072 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2897     	.line	585, "main.c"; 	COM3 = 1;
     0073 1Arr                      1- 2898     	BSR	_PORTB,4
                                    1- 2899     	.line	586, "main.c"; 	ind_light_disp(table[workStepgewei]);
                                    1- 2900     	BANKSEL	_workStepgewei
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 01rr                      1- 2901     	MOVR	_workStepgewei,W
     0076 25rr                      1- 2902     	ADDIA	(_table + 0)
                                    1- 2903     	BANKSEL	r0x1051
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 00rr                      1- 2904     	MOVAR	r0x1051
     0079 21rr                      1- 2905     	MOVIA	((_table + 0) >> 8) & 0xff
     007A 0C03                      1- 2906     	BTRSC	STATUS,0
     007B 2501                      1- 2907     	ADDIA	0x01
                                    1- 2908     	BANKSEL	r0x1052
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 00rr                      1- 2909     	MOVAR	r0x1052
                                    1- 2910     	BANKSEL	r0x1051
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 01rr                      1- 2911     	MOVR	r0x1051,W
     0080 00rr                      1- 2912     	MOVAR	STK01
                                    1- 2913     	BANKSEL	r0x1052
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 01rr                      1- 2914     	MOVR	r0x1052,W
     0083 00rr                      1- 2915     	MOVAR	STK00
     0084 2180                      1- 2916     	MOVIA	0x80
                                    1- 2917     	MCALL	__gptrget1
     0085 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2918     ;;2	MOVAR	r0x1053
                                    1- 2919     	MCALL	_ind_light_disp
     0086 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2920     	.line	587, "main.c"; 	COM4 = 0;
     0087 1Err                      1- 2921     	BCR	_PORTB,5
                                    1- 2922     	.line	588, "main.c"; 	delay_us(REFRESHTIME);
     0088 2164                      1- 2923     	MOVIA	0x64
                                    1- 2924     	MCALL	_delay_us
     0089 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2925     	.line	589, "main.c"; 	COM4 = 1;
     008A 1Arr                      1- 2926     	BSR	_PORTB,5
     008B                           1- 2927     _00363_DS_:
                                    1- 2928     	.line	591, "main.c"; 	}
                                    1- 2929     	RETURN	
     008B 0010                      3-   40 m1      ret
                                    1- 2930     ; exit point of _refresh
                                    1- 2932     ;***
                                    1- 2933     ;  pBlock Stats: dbName = C
                                    1- 2934     ;***
                                    1- 2935     ;has an exit
                                    1- 2936     ;functions called:
                                    1- 2937     ;   _Delay10Us
                                    1- 2938     ;   _Delay10Us
                                    1- 2939     ;   _Delay10Us
                                    1- 2940     ;   _Delay10Us
                                    1- 2941     ;   _Delay10Us
                                    1- 2942     ;   _Delay10Us
                                    1- 2943     ;   _Delay10Us
                                    1- 2944     ;   _Delay10Us
                                    1- 2945     ;2 compiler assigned registers:
                                    1- 2946     ;   r0x104C
                                    1- 2947     ;   r0x104D
                                    1- 2948     ;; Starting pCode block
                                    1- 2949     .segment "code"; module=main, function=_ind_light_disp
                                    1- 2951     ;local variable name mapping:
     0000                           1- 2954     _ind_light_disp:
                                    1- 2955     ; 2 exit points
                                    1- 2956     	.line	523, "main.c"; 	void ind_light_disp( u8t udata )
                                    1- 2957     	BANKSEL	r0x104C
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2958     	MOVAR	r0x104C
                                    1- 2959     	.line	526, "main.c"; 	for(Count0=0;Count0<=7;Count0++)
                                    1- 2960     	BANKSEL	r0x104D
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2961     	CLRR	r0x104D
     0004                           1- 2962     _00351_DS_:
                                    1- 2963     	.line	528, "main.c"; 	CLK=0;
                                    1- 2964     	BANKSEL	_PORTA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 1Frr                      1- 2965     	BCR	_PORTA,7
                                    1- 2966     	.line	529, "main.c"; 	Delay10Us();
                                    1- 2967     	MCALL	_Delay10Us
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2968     	.line	530, "main.c"; 	if(udata&0x80)
                                    1- 2969     	BANKSEL	r0x104C
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 0Brr                      1- 2970     	BTRSS	r0x104C,7
                                    1- 2971     	MGOTO	_00348_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2972     	.line	532, "main.c"; 	DAT=1;
                                    1- 2973     	BANKSEL	_PORTA
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 18rr                      1- 2974     	BSR	_PORTA,0
                                    1- 2975     	.line	533, "main.c"; 	Delay10Us();
                                    1- 2976     	MCALL	_Delay10Us
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2977     	MGOTO	_00349_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 2978     _00348_DS_:
                                    1- 2979     	.line	537, "main.c"; 	DAT=0;
                                    1- 2980     	BANKSEL	_PORTA
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 1Crr                      1- 2981     	BCR	_PORTA,0
                                    1- 2982     	.line	538, "main.c"; 	Delay10Us();
                                    1- 2983     	MCALL	_Delay10Us
     0010 2rrr                      3-   66 m1      LCALL rom_address
     0011                           1- 2984     _00349_DS_:
                                    1- 2985     	.line	540, "main.c"; 	CLK=1;
                                    1- 2986     	BANKSEL	_PORTA
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 1Brr                      1- 2987     	BSR	_PORTA,7
                                    1- 2988     	.line	541, "main.c"; 	Delay10Us();
                                    1- 2989     	MCALL	_Delay10Us
     0013 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2990     	.line	542, "main.c"; 	udata<<=1;
     0014 1C03                      1- 2991     	BCR	STATUS,0
                                    1- 2992     	BANKSEL	r0x104C
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 14rr                      1- 2993     	RLR	r0x104C,F
                                    1- 2994     	.line	526, "main.c"; 	for(Count0=0;Count0<=7;Count0++)
                                    1- 2995     	BANKSEL	r0x104D
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 05rr                      1- 2996     	INCR	r0x104D,F
                                    1- 2997     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 2998     ;;unsigned compare: left >= lit (0x8=8), size=1
     0019 2108                      1- 2999     	MOVIA	0x08
     001A 04rr                      1- 3000     	SUBAR	r0x104D,W
     001B 0803                      1- 3001     	BTRSS	STATUS,0
                                    1- 3002     	MGOTO	_00351_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3003     	.line	544, "main.c"; 	CLK=0;
                                    1- 3004     	BANKSEL	_PORTA
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 1Frr                      1- 3005     	BCR	_PORTA,7
                                    1- 3006     	.line	545, "main.c"; 	DAT=0;
     001F 1Crr                      1- 3007     	BCR	_PORTA,0
                                    1- 3008     	.line	546, "main.c"; 	}
                                    1- 3009     	RETURN	
     0020 0010                      3-   40 m1      ret
                                    1- 3010     ; exit point of _ind_light_disp
                                    1- 3012     ;***
                                    1- 3013     ;  pBlock Stats: dbName = C
                                    1- 3014     ;***
                                    1- 3015     ;has an exit
                                    1- 3016     ;; Starting pCode block
                                    1- 3017     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 3019     _pwm1Stop:
                                    1- 3020     ; 2 exit points
                                    1- 3021     	.line	517, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 3022     	CLRA	
     0001 00rr                      1- 3023     	SFUN	_T1CR1
                                    1- 3024     	.line	518, "main.c"; 	PORTB &= 0xF7;
     0002 1Drr                      1- 3025     	BCR	_PORTB,3
                                    1- 3026     	.line	519, "main.c"; 	}
                                    1- 3027     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 3028     ; exit point of _pwm1Stop
                                    1- 3030     ;***
                                    1- 3031     ;  pBlock Stats: dbName = C
                                    1- 3032     ;***
                                    1- 3033     ;has an exit
                                    1- 3034     ;1 compiler assigned register :
                                    1- 3035     ;   r0x1054
                                    1- 3036     ;; Starting pCode block
                                    1- 3037     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 3039     _pwm1Init:
                                    1- 3040     ; 2 exit points
                                    1- 3041     	.line	505, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 3042     	SFUNR	_T1CR1
                                    1- 3043     	BANKSEL	r0x1054
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3044     	MOVAR	r0x1054
     0003 0Frr                      1- 3045     	BTRSC	r0x1054,7
                                    1- 3046     	.line	506, "main.c"; 	return;
                                    1- 3047     	MGOTO	_00338_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3048     	.line	507, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 3049     	CLRR	_TMRH
                                    1- 3050     	.line	508, "main.c"; 	TMR1 = 255;							//Ƶ��Ϊ110K
     0006 21FF                      1- 3051     	MOVIA	0xff
     0007 00rr                      1- 3052     	SFUN	_TMR1
                                    1- 3053     	.line	511, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 3054     	CLRA	
     0009 00rr                      1- 3055     	SFUN	_T1CR2
                                    1- 3056     	.line	512, "main.c"; 	T1CR1	 = C_PWM1_En | C_PWM1_Active_Hi | C_TMR1_Reload | C_TMR1_En;
     000A 2183                      1- 3057     	MOVIA	0x83
     000B 00rr                      1- 3058     	SFUN	_T1CR1
     000C                           1- 3059     _00338_DS_:
                                    1- 3060     	.line	513, "main.c"; 	}
                                    1- 3061     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 3062     ; exit point of _pwm1Init
                                    1- 3064     ;***
                                    1- 3065     ;  pBlock Stats: dbName = C
                                    1- 3066     ;***
                                    1- 3067     ;has an exit
                                    1- 3068     ;functions called:
                                    1- 3069     ;   _delay
                                    1- 3070     ;   _delay
                                    1- 3071     ;1 compiler assigned register :
                                    1- 3072     ;   STK00
                                    1- 3073     ;; Starting pCode block
                                    1- 3074     .segment "code"; module=main, function=_initAD
     0000                           1- 3076     _initAD:
                                    1- 3077     ; 2 exit points
                                    1- 3078     	.line	479, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 3079     	MOVIA	0x84
     0001 00rr                      1- 3080     	MOVAR	_ADMD
                                    1- 3081     	.line	484, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 3082     	CLRR	_ADVREFH
                                    1- 3083     	.line	489, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 3084     	MOVIA	0x10
     0004 00rr                      1- 3085     	MOVAR	_ADR
                                    1- 3086     	.line	491, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 3087     	MOVIA	0x03
     0006 00rr                      1- 3088     	MOVAR	_ADCR
                                    1- 3089     	.line	494, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 3090     	BSR	_ADMDbits,4
                                    1- 3091     	.line	495, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 3092     	MOVIA	0x64
     0009 00rr                      1- 3093     	MOVAR	STK00
     000A 2100                      1- 3094     	MOVIA	0x00
                                    1- 3095     	MCALL	_delay
     000B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3096     	.line	498, "main.c"; 	}
                                    1- 3097     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 3098     ; exit point of _initAD
                                    1- 3100     ;***
                                    1- 3101     ;  pBlock Stats: dbName = C
                                    1- 3102     ;***
                                    1- 3103     ;has an exit
                                    1- 3104     ;; Starting pCode block
                                    1- 3105     .segment "code"; module=main, function=_initSys
     0000                           1- 3107     _initSys:
                                    1- 3108     ; 2 exit points
                                    1- 3109     	.line	448, "main.c"; 	DISI();
     0000 0013                      1- 3110     	DISI
                                    1- 3111     	.line	449, "main.c"; 	IOSTA = C_PA6_Input  | C_PA1_Input | C_PA2_Input;
     0001 2146                      1- 3112     	MOVIA	0x46
     0002 000r                      1- 3113     	IOST	_IOSTA
                                    1- 3114     	.line	450, "main.c"; 	IOSTB = C_PB1_Input | C_PB2_Input;
     0003 2106                      1- 3115     	MOVIA	0x06
     0004 000r                      1- 3116     	IOST	_IOSTB
                                    1- 3117     	.line	451, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 3118     	CLRR	_PORTB
                                    1- 3119     	.line	452, "main.c"; 	PORTA = 0x00;
                                    1- 3120     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 3121     	CLRR	_PORTA
                                    1- 3122     	.line	453, "main.c"; 	APHCON = 0xBF;
     0008 21BF                      1- 3123     	MOVIA	0xbf
     0009 000r                      1- 3124     	IOST	_APHCON
                                    1- 3125     	.line	454, "main.c"; 	BPHCON = 0xFB;
     000A 21FB                      1- 3126     	MOVIA	0xfb
     000B 00rr                      1- 3127     	MOVAR	_BPHCON
                                    1- 3128     	.line	455, "main.c"; 	ABPLCON = 0xFF;
     000C 21FF                      1- 3129     	MOVIA	0xff
     000D 00rr                      1- 3130     	MOVAR	_ABPLCON
                                    1- 3131     	.line	457, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0��Timer1��WDT overflow interrupt
     000E 2101                      1- 3132     	MOVIA	0x01
     000F 00rr                      1- 3133     	MOVAR	_INTE
                                    1- 3134     	.line	459, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 3135     	CLRA	
     0011 000r                      1- 3136     	IOST	_PCON1
                                    1- 3137     	.line	461, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 3138     	MOVIA	0x37
     0013 00rr                      1- 3139     	MOVAR	_TMR0
                                    1- 3140     	.line	462, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0014 2101                      1- 3141     	MOVIA	0x01
     0015 0003                      1- 3142     	T0MD	
                                    1- 3143     	.line	464, "main.c"; 	PCON1 = C_TMR0_En;
     0016 000r                      1- 3144     	IOST	_PCON1
                                    1- 3145     	.line	467, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0017 2198                      1- 3146     	MOVIA	0x98
     0018 00rr                      1- 3147     	MOVAR	_PCON
                                    1- 3148     	.line	470, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0019 2101                      1- 3149     	MOVIA	0x01
     001A 000r                      1- 3150     	IOST	_PCON1
                                    1- 3151     	.line	471, "main.c"; 	ENI();
     001B 0004                      1- 3152     	ENI
                                    1- 3153     	.line	472, "main.c"; 	closeFlag = 0;
                                    1- 3154     	BANKSEL	_closeFlag
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1- 3155     	CLRR	_closeFlag
                                    1- 3156     	.line	473, "main.c"; 	}
                                    1- 3157     	RETURN	
     001E 0010                      3-   40 m1      ret
                                    1- 3158     ; exit point of _initSys
                                    1- 3160     ;***
                                    1- 3161     ;  pBlock Stats: dbName = C
                                    1- 3162     ;***
                                    1- 3163     ;has an exit
                                    1- 3164     ;1 compiler assigned register :
                                    1- 3165     ;   r0x1055
                                    1- 3166     ;; Starting pCode block
                                    1- 3167     .segment "code"; module=main, function=_keyRead2
                                    1- 3169     ;local variable name mapping:
     0000                           1- 3171     _keyRead2:
                                    1- 3172     ; 2 exit points
                                    1- 3173     	.line	421, "main.c"; 	char keyRead2(char keyStatus)	
                                    1- 3174     	BANKSEL	r0x1055
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 3175     	MOVAR	r0x1055
                                    1- 3176     	.line	423, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 3177     	MOVR	r0x1055,W
     0003 0D03                      1- 3178     	BTRSC	STATUS,2
                                    1- 3179     	MGOTO	_00321_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3180     	.line	425, "main.c"; 	keyCount2++;
                                    1- 3181     	BANKSEL	_keyCount2
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 3182     	INCR	_keyCount2,F
                                    1- 3183     ;;unsigned compare: left < lit (0x14=20), size=1
                                    1- 3184     	.line	426, "main.c"; 	if(keyCount2 >= 20)
     0007 2114                      1- 3185     	MOVIA	0x14
     0008 04rr                      1- 3186     	SUBAR	_keyCount2,W
     0009 0803                      1- 3187     	BTRSS	STATUS,0
                                    1- 3188     	MGOTO	_00322_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3189     	.line	428, "main.c"; 	keyCount2 = 20;
     000B 2114                      1- 3190     	MOVIA	0x14
     000C 00rr                      1- 3191     	MOVAR	_keyCount2
                                    1- 3192     	.line	429, "main.c"; 	return 2;
     000D 2102                      1- 3193     	MOVIA	0x02
                                    1- 3194     	MGOTO	_00323_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3195     ;;unsigned compare: left < lit (0x4=4), size=1
     000F                           1- 3196     _00321_DS_:
                                    1- 3197     	.line	434, "main.c"; 	if(keyCount2 >= 4)
     000F 2104                      1- 3198     	MOVIA	0x04
                                    1- 3199     	BANKSEL	_keyCount2
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 3200     	SUBAR	_keyCount2,W
     0012 0803                      1- 3201     	BTRSS	STATUS,0
                                    1- 3202     	MGOTO	_00319_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3203     	.line	436, "main.c"; 	keyCount2 = 0;
     0014 02rr                      1- 3204     	CLRR	_keyCount2
                                    1- 3205     	.line	437, "main.c"; 	return	1;
     0015 2101                      1- 3206     	MOVIA	0x01
                                    1- 3207     	MGOTO	_00323_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
     0017                           1- 3208     _00319_DS_:
                                    1- 3209     	.line	439, "main.c"; 	keyCount2 = 0;
                                    1- 3210     	BANKSEL	_keyCount2
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 02rr                      1- 3211     	CLRR	_keyCount2
     0019                           1- 3212     _00322_DS_:
                                    1- 3213     	.line	441, "main.c"; 	return 0;
     0019 2100                      1- 3214     	MOVIA	0x00
     001A                           1- 3215     _00323_DS_:
                                    1- 3216     	.line	442, "main.c"; 	}
                                    1- 3217     	RETURN	
     001A 0010                      3-   40 m1      ret
                                    1- 3218     ; exit point of _keyRead2
                                    1- 3220     ;***
                                    1- 3221     ;  pBlock Stats: dbName = C
                                    1- 3222     ;***
                                    1- 3223     ;has an exit
                                    1- 3224     ;1 compiler assigned register :
                                    1- 3225     ;   r0x1056
                                    1- 3226     ;; Starting pCode block
                                    1- 3227     .segment "code"; module=main, function=_keyRead
                                    1- 3229     ;local variable name mapping:
     0000                           1- 3231     _keyRead:
                                    1- 3232     ; 2 exit points
                                    1- 3233     	.line	386, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 3234     	BANKSEL	r0x1056
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 3235     	MOVAR	r0x1056
                                    1- 3236     	.line	388, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 3237     	MOVR	r0x1056,W
     0003 0D03                      1- 3238     	BTRSC	STATUS,2
                                    1- 3239     	MGOTO	_00309_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3240     	.line	390, "main.c"; 	keyCount++;
                                    1- 3241     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 3242     	INCR	_keyCount,F
                                    1- 3243     ;;unsigned compare: left < lit (0xA=10), size=1
                                    1- 3244     	.line	391, "main.c"; 	if(keyCount >= 10)
     0007 210A                      1- 3245     	MOVIA	0x0a
     0008 04rr                      1- 3246     	SUBAR	_keyCount,W
     0009 0803                      1- 3247     	BTRSS	STATUS,0
                                    1- 3248     	MGOTO	_00310_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3249     	.line	393, "main.c"; 	keyCount = 10;
     000B 210A                      1- 3250     	MOVIA	0x0a
     000C 00rr                      1- 3251     	MOVAR	_keyCount
                                    1- 3252     	.line	394, "main.c"; 	if(!longPressFlag)
                                    1- 3253     	BANKSEL	_longPressFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 3254     	MOVR	_longPressFlag,W
     000F 0903                      1- 3255     	BTRSS	STATUS,2
                                    1- 3256     	MGOTO	_00310_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3257     	.line	396, "main.c"; 	longPressFlag = 1;
     0011 2101                      1- 3258     	MOVIA	0x01
     0012 00rr                      1- 3259     	MOVAR	_longPressFlag
                                    1- 3260     	.line	397, "main.c"; 	return 2;
     0013 2102                      1- 3261     	MOVIA	0x02
                                    1- 3262     	MGOTO	_00311_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3263     ;;unsigned compare: left < lit (0x64=100), size=1
     0015                           1- 3264     _00309_DS_:
                                    1- 3265     	.line	403, "main.c"; 	if(keyCount >= 100)
     0015 2164                      1- 3266     	MOVIA	0x64
                                    1- 3267     	BANKSEL	_keyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1- 3268     	SUBAR	_keyCount,W
     0018 0803                      1- 3269     	BTRSS	STATUS,0
                                    1- 3270     	MGOTO	_00306_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3271     	.line	405, "main.c"; 	keyCount = 0;
     001A 02rr                      1- 3272     	CLRR	_keyCount
                                    1- 3273     	.line	406, "main.c"; 	longPressFlag = 0;
                                    1- 3274     	BANKSEL	_longPressFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 3275     	CLRR	_longPressFlag
                                    1- 3276     	.line	407, "main.c"; 	return	0;
     001D 2100                      1- 3277     	MOVIA	0x00
                                    1- 3278     	MGOTO	_00311_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3279     ;;unsigned compare: left < lit (0x4=4), size=1
     001F                           1- 3280     _00306_DS_:
                                    1- 3281     	.line	409, "main.c"; 	else if(keyCount >= 4)
     001F 2104                      1- 3282     	MOVIA	0x04
                                    1- 3283     	BANKSEL	_keyCount
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 3284     	SUBAR	_keyCount,W
     0022 0803                      1- 3285     	BTRSS	STATUS,0
                                    1- 3286     	MGOTO	_00307_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3287     	.line	411, "main.c"; 	keyCount = 0;
     0024 02rr                      1- 3288     	CLRR	_keyCount
                                    1- 3289     	.line	412, "main.c"; 	return	1;
     0025 2101                      1- 3290     	MOVIA	0x01
                                    1- 3291     	MGOTO	_00311_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 3292     _00307_DS_:
                                    1- 3293     	.line	414, "main.c"; 	keyCount = 0;
                                    1- 3294     	BANKSEL	_keyCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 3295     	CLRR	_keyCount
     0029                           1- 3296     _00310_DS_:
                                    1- 3297     	.line	416, "main.c"; 	return 0;
     0029 2100                      1- 3298     	MOVIA	0x00
     002A                           1- 3299     _00311_DS_:
                                    1- 3300     	.line	417, "main.c"; 	}
                                    1- 3301     	RETURN	
     002A 0010                      3-   40 m1      ret
                                    1- 3302     ; exit point of _keyRead
                                    1- 3304     ;***
                                    1- 3305     ;  pBlock Stats: dbName = C
                                    1- 3306     ;***
                                    1- 3307     ;has an exit
                                    1- 3308     ;functions called:
                                    1- 3309     ;   _keyRead
                                    1- 3310     ;   _keyRead2
                                    1- 3311     ;   __divuchar
                                    1- 3312     ;   __moduchar
                                    1- 3313     ;   _keyRead
                                    1- 3314     ;   _keyRead2
                                    1- 3315     ;   __divuchar
                                    1- 3316     ;   __moduchar
                                    1- 3317     ;2 compiler assigned registers:
                                    1- 3318     ;   r0x1057
                                    1- 3319     ;   STK00
                                    1- 3320     ;; Starting pCode block
                                    1- 3321     .segment "code"; module=main, function=_keyCtr
                                    1- 3323     ;local variable name mapping:
     0000                           1- 3325     _keyCtr:
                                    1- 3326     ; 2 exit points
                                    1- 3327     	.line	332, "main.c"; 	if(keyRead(0x04 & ~PORTB))
     0000 07rr                      1- 3328     	COMR	_PORTB,W
                                    1- 3329     	BANKSEL	r0x1057
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3330     	MOVAR	r0x1057
     0003 2104                      1- 3331     	MOVIA	0x04
     0004 10rr                      1- 3332     	ANDAR	r0x1057,F
     0005 01rr                      1- 3333     	MOVR	r0x1057,W
                                    1- 3334     	MCALL	_keyRead
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3335     	BANKSEL	r0x1057
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 00rr                      1- 3336     	MOVAR	r0x1057
     0009 01rr                      1- 3337     	MOVR	r0x1057,W
     000A 0D03                      1- 3338     	BTRSC	STATUS,2
                                    1- 3339     	MGOTO	_00274_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3340     	.line	335, "main.c"; 	overFlag = 0;
                                    1- 3341     	BANKSEL	_overFlag
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 02rr                      1- 3342     	CLRR	_overFlag
                                    1- 3343     	.line	336, "main.c"; 	powerTime = 500;
     000E 21F4                      1- 3344     	MOVIA	0xf4
                                    1- 3345     	BANKSEL	_powerTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 00rr                      1- 3346     	MOVAR	_powerTime
     0011 2101                      1- 3347     	MOVIA	0x01
     0012 00rr                      1- 3348     	MOVAR	(_powerTime + 1)
                                    1- 3349     	.line	337, "main.c"; 	powerFlag = 1;
                                    1- 3350     	BANKSEL	_powerFlag
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 00rr                      1- 3351     	MOVAR	_powerFlag
                                    1- 3352     	.line	338, "main.c"; 	workStep = 0;
                                    1- 3353     	BANKSEL	_workStep
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 3354     	CLRR	_workStep
                                    1- 3355     	.line	339, "main.c"; 	workStepshiwei = workStep/10;
                                    1- 3356     	BANKSEL	_workStepshiwei
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 02rr                      1- 3357     	CLRR	_workStepshiwei
                                    1- 3358     	.line	340, "main.c"; 	workStepgewei = workStep%10;
                                    1- 3359     	BANKSEL	_workStepgewei
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 02rr                      1- 3360     	CLRR	_workStepgewei
     001B                           1- 3361     _00274_DS_:
                                    1- 3362     	.line	343, "main.c"; 	u8t kclick = keyRead2(0x40 & ~PORTA);
                                    1- 3363     	BANKSEL	_PORTA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 07rr                      1- 3364     	COMR	_PORTA,W
                                    1- 3365     	BANKSEL	r0x1057
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 00rr                      1- 3366     	MOVAR	r0x1057
     001F 2140                      1- 3367     	MOVIA	0x40
     0020 10rr                      1- 3368     	ANDAR	r0x1057,F
     0021 01rr                      1- 3369     	MOVR	r0x1057,W
                                    1- 3370     	MCALL	_keyRead2
     0022 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3371     	BANKSEL	r0x1057
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 3372     	MOVAR	r0x1057
                                    1- 3373     	.line	344, "main.c"; 	if(powerFlag && zeroFlag == 0)
                                    1- 3374     	BANKSEL	_powerFlag
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1- 3375     	MOVR	_powerFlag,W
     0027 0D03                      1- 3376     	BTRSC	STATUS,2
                                    1- 3377     	MGOTO	_00294_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3378     	BANKSEL	_zeroFlag
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 01rr                      1- 3379     	MOVR	_zeroFlag,W
     002B 0903                      1- 3380     	BTRSS	STATUS,2
                                    1- 3381     	MGOTO	_00294_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3382     	.line	346, "main.c"; 	if(kclick)
                                    1- 3383     	BANKSEL	r0x1057
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 01rr                      1- 3384     	MOVR	r0x1057,W
     002F 0D03                      1- 3385     	BTRSC	STATUS,2
                                    1- 3386     	MGOTO	_00289_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3387     	.line	348, "main.c"; 	overFlag = 0;
                                    1- 3388     	BANKSEL	_overFlag
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 02rr                      1- 3389     	CLRR	_overFlag
                                    1- 3390     	.line	349, "main.c"; 	if(workStep == 0)
                                    1- 3391     	BANKSEL	_workStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 3392     	MOVR	_workStep,W
     0035 0903                      1- 3393     	BTRSS	STATUS,2
                                    1- 3394     	MGOTO	_00276_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3395     	.line	351, "main.c"; 	workStep = 1;
     0037 2101                      1- 3396     	MOVIA	0x01
     0038 00rr                      1- 3397     	MOVAR	_workStep
                                    1- 3398     	.line	352, "main.c"; 	currentDuty = 220;
     0039 21DC                      1- 3399     	MOVIA	0xdc
                                    1- 3400     	BANKSEL	_currentDuty
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 00rr                      1- 3401     	MOVAR	_currentDuty
                                    1- 3402     	.line	353, "main.c"; 	PWM1DUTY = 220;
     003C 00rr                      1- 3403     	SFUN	_PWM1DUTY
                                    1- 3404     	.line	354, "main.c"; 	lockKeyFlag = 1;
     003D 2101                      1- 3405     	MOVIA	0x01
                                    1- 3406     	BANKSEL	_lockKeyFlag
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 00rr                      1- 3407     	MOVAR	_lockKeyFlag
     0040                           1- 3408     _00276_DS_:
                                    1- 3409     	.line	356, "main.c"; 	if(lockKeyFlag == 0)
                                    1- 3410     	BANKSEL	_lockKeyFlag
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 01rr                      1- 3411     	MOVR	_lockKeyFlag,W
     0042 0903                      1- 3412     	BTRSS	STATUS,2
                                    1- 3413     	MGOTO	_00287_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3414     	.line	359, "main.c"; 	if(kclick == 1)
                                    1- 3415     	BANKSEL	r0x1057
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 01rr                      1- 3416     	MOVR	r0x1057,W
     0046 2401                      1- 3417     	XORIA	0x01
     0047 0903                      1- 3418     	BTRSS	STATUS,2
                                    1- 3419     	MGOTO	_00284_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3420     	.line	361, "main.c"; 	if(++workStep > 99)
                                    1- 3421     	BANKSEL	_workStep
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 05rr                      1- 3422     	INCR	_workStep,F
                                    1- 3423     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3424     ;;unsigned compare: left >= lit (0x64=100), size=1
     004B 2164                      1- 3425     	MOVIA	0x64
     004C 04rr                      1- 3426     	SUBAR	_workStep,W
     004D 0803                      1- 3427     	BTRSS	STATUS,0
                                    1- 3428     	MGOTO	_00287_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3429     	.line	362, "main.c"; 	workStep = 1;
     004F 2101                      1- 3430     	MOVIA	0x01
     0050 00rr                      1- 3431     	MOVAR	_workStep
                                    1- 3432     	MGOTO	_00287_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
     0052                           1- 3433     _00284_DS_:
                                    1- 3434     	.line	366, "main.c"; 	if(++count100ms >= 5)
                                    1- 3435     	BANKSEL	_count100ms
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 05rr                      1- 3436     	INCR	_count100ms,F
                                    1- 3437     ;;unsigned compare: left < lit (0x5=5), size=1
     0054 2105                      1- 3438     	MOVIA	0x05
     0055 04rr                      1- 3439     	SUBAR	_count100ms,W
     0056 0803                      1- 3440     	BTRSS	STATUS,0
                                    1- 3441     	MGOTO	_00287_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3442     	.line	368, "main.c"; 	count100ms = 0;
     0058 02rr                      1- 3443     	CLRR	_count100ms
                                    1- 3444     	.line	369, "main.c"; 	if(++workStep > 99)
                                    1- 3445     	BANKSEL	_workStep
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 05rr                      1- 3446     	INCR	_workStep,F
                                    1- 3447     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3448     ;;unsigned compare: left >= lit (0x64=100), size=1
     005B 2164                      1- 3449     	MOVIA	0x64
     005C 04rr                      1- 3450     	SUBAR	_workStep,W
     005D 0803                      1- 3451     	BTRSS	STATUS,0
                                    1- 3452     	MGOTO	_00287_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3453     	.line	370, "main.c"; 	workStep = 1;
     005F 2101                      1- 3454     	MOVIA	0x01
     0060 00rr                      1- 3455     	MOVAR	_workStep
     0061                           1- 3456     _00287_DS_:
                                    1- 3457     	.line	374, "main.c"; 	workStepshiwei = workStep/10;
     0061 210A                      1- 3458     	MOVIA	0x0a
     0062 00rr                      1- 3459     	MOVAR	STK00
                                    1- 3460     	BANKSEL	_workStep
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 01rr                      1- 3461     	MOVR	_workStep,W
                                    1- 3462     	MCALL	__divuchar
     0065 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3463     	BANKSEL	_workStepshiwei
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 00rr                      1- 3464     	MOVAR	_workStepshiwei
                                    1- 3465     	.line	375, "main.c"; 	workStepgewei = workStep%10;
     0068 210A                      1- 3466     	MOVIA	0x0a
     0069 00rr                      1- 3467     	MOVAR	STK00
                                    1- 3468     	BANKSEL	_workStep
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 01rr                      1- 3469     	MOVR	_workStep,W
                                    1- 3470     	MCALL	__moduchar
     006C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3471     	BANKSEL	_workStepgewei
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 00rr                      1- 3472     	MOVAR	_workStepgewei
                                    1- 3473     	MGOTO	_00294_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
     0070                           1- 3474     _00289_DS_:
                                    1- 3475     	.line	379, "main.c"; 	lockKeyFlag = 0;
                                    1- 3476     	BANKSEL	_lockKeyFlag
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 02rr                      1- 3477     	CLRR	_lockKeyFlag
     0072                           1- 3478     _00294_DS_:
                                    1- 3479     	.line	382, "main.c"; 	}
                                    1- 3480     	RETURN	
     0072 0010                      3-   40 m1      ret
                                    1- 3481     ; exit point of _keyCtr
                                    1- 3483     ;***
                                    1- 3484     ;  pBlock Stats: dbName = C
                                    1- 3485     ;***
                                    1- 3486     ;functions called:
                                    1- 3487     ;   _pwm1Init
                                    1- 3488     ;   _pwm1Stop
                                    1- 3489     ;   _pwm1Init
                                    1- 3490     ;   _pwm1Stop
                                    1- 3491     ;1 compiler assigned register :
                                    1- 3492     ;   r0x1058
                                    1- 3493     ;; Starting pCode block
                                    1- 3494     .segment "code"; module=main, function=_workCtr
     0000                           1- 3496     _workCtr:
                                    1- 3497     ; 0 exit points
                                    1- 3498     	.line	284, "main.c"; 	if(firstTime > 0)
                                    1- 3499     	BANKSEL	_firstTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 3500     	MOVR	_firstTime,W
     0002 0D03                      1- 3501     	BTRSC	STATUS,2
                                    1- 3502     	MGOTO	_00266_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3503     	.line	286, "main.c"; 	firstTime--;
     0004 06rr                      1- 3504     	DECR	_firstTime,F
                                    1- 3505     	.line	287, "main.c"; 	powerTime = 500;
     0005 21F4                      1- 3506     	MOVIA	0xf4
                                    1- 3507     	BANKSEL	_powerTime
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 3508     	MOVAR	_powerTime
     0008 2101                      1- 3509     	MOVIA	0x01
     0009 00rr                      1- 3510     	MOVAR	(_powerTime + 1)
                                    1- 3511     	MGOTO	_00268_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
     000B                           1- 3512     _00266_DS_:
                                    1- 3513     	.line	291, "main.c"; 	if(workStep > 0)
                                    1- 3514     	BANKSEL	_workStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 01rr                      1- 3515     	MOVR	_workStep,W
     000D 0D03                      1- 3516     	BTRSC	STATUS,2
                                    1- 3517     	MGOTO	_00263_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3518     	.line	293, "main.c"; 	if(workStep % 2 == 1)
     000F 2101                      1- 3519     	MOVIA	0x01
     0010 10rr                      1- 3520     	ANDAR	_workStep,W
                                    1- 3521     	BANKSEL	r0x1058
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1- 3522     	MOVAR	r0x1058
     0013 2401                      1- 3523     	XORIA	0x01
     0014 0903                      1- 3524     	BTRSS	STATUS,2
                                    1- 3525     	MGOTO	_00252_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3526     	.line	295, "main.c"; 	TMRH = 0x00;
     0016 02rr                      1- 3527     	CLRR	_TMRH
                                    1- 3528     	.line	296, "main.c"; 	TMR1 = 254;							//Ƶ��Ϊ110K
     0017 21FE                      1- 3529     	MOVIA	0xfe
     0018 00rr                      1- 3530     	SFUN	_TMR1
                                    1- 3531     	MGOTO	_00253_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
     001A                           1- 3532     _00252_DS_:
                                    1- 3533     	.line	300, "main.c"; 	TMRH = 0x00;
     001A 02rr                      1- 3534     	CLRR	_TMRH
                                    1- 3535     	.line	301, "main.c"; 	TMR1 = 255;							//Ƶ��Ϊ110K
     001B 21FF                      1- 3536     	MOVIA	0xff
     001C 00rr                      1- 3537     	SFUN	_TMR1
                                    1- 3538     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=1, sign=0, same=0, offr=0
     001D                           1- 3539     _00253_DS_:
                                    1- 3540     	.line	303, "main.c"; 	PWM1DUTY = workStep/2 + 180;
     001D 1C03                      1- 3541     	BCR	STATUS,0
                                    1- 3542     	BANKSEL	_workStep
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 13rr                      1- 3543     	RRR	_workStep,W
                                    1- 3544     	BANKSEL	r0x1058
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 3545     	MOVAR	r0x1058
     0022 21B4                      1- 3546     	MOVIA	0xb4
     0023 03rr                      1- 3547     	ADDAR	r0x1058,F
     0024 01rr                      1- 3548     	MOVR	r0x1058,W
     0025 00rr                      1- 3549     	SFUN	_PWM1DUTY
                                    1- 3550     	.line	304, "main.c"; 	pwm1Init();
                                    1- 3551     	MCALL	_pwm1Init
     0026 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3552     	MGOTO	_00268_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 3553     _00263_DS_:
                                    1- 3554     	.line	308, "main.c"; 	pwm1Stop();
                                    1- 3555     	MCALL	_pwm1Stop
     0028 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3556     	.line	309, "main.c"; 	if(powerTime > 0)
                                    1- 3557     	BANKSEL	_powerTime
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 01rr                      1- 3558     	MOVR	_powerTime,W
     002B 11rr                      1- 3559     	IORAR	(_powerTime + 1),W
     002C 0D03                      1- 3560     	BTRSC	STATUS,2
                                    1- 3561     	MGOTO	_00255_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3562     	.line	311, "main.c"; 	powerTime--;
     002E 21FF                      1- 3563     	MOVIA	0xff
     002F 03rr                      1- 3564     	ADDAR	_powerTime,F
     0030 0803                      1- 3565     	BTRSS	STATUS,0
     0031 06rr                      1- 3566     	DECR	(_powerTime + 1),F
                                    1- 3567     	.line	312, "main.c"; 	powerFlag = 1;
     0032 2101                      1- 3568     	MOVIA	0x01
                                    1- 3569     	BANKSEL	_powerFlag
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 00rr                      1- 3570     	MOVAR	_powerFlag
                                    1- 3571     	MGOTO	_00256_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
     0036                           1- 3572     _00255_DS_:
                                    1- 3573     	.line	316, "main.c"; 	powerFlag = 0;
                                    1- 3574     	BANKSEL	_powerFlag
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 02rr                      1- 3575     	CLRR	_powerFlag
     0038                           1- 3576     _00256_DS_:
                                    1- 3577     	.line	318, "main.c"; 	if(overFlag || zeroFlag)
                                    1- 3578     	BANKSEL	_overFlag
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 01rr                      1- 3579     	MOVR	_overFlag,W
     003A 0903                      1- 3580     	BTRSS	STATUS,2
                                    1- 3581     	MGOTO	_00259_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3582     	BANKSEL	_zeroFlag
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 3583     	MOVR	_zeroFlag,W
     003E 0D03                      1- 3584     	BTRSC	STATUS,2
                                    1- 3585     	MGOTO	_00268_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
     0040                           1- 3586     _00259_DS_:
                                    1- 3587     	.line	320, "main.c"; 	if(++shanshuoTime > 50)
                                    1- 3588     	BANKSEL	_shanshuoTime
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 05rr                      1- 3589     	INCR	_shanshuoTime,F
                                    1- 3590     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3591     ;;unsigned compare: left >= lit (0x33=51), size=1
     0042 2133                      1- 3592     	MOVIA	0x33
     0043 04rr                      1- 3593     	SUBAR	_shanshuoTime,W
     0044 0C03                      1- 3594     	BTRSC	STATUS,0
                                    1- 3595     	.line	321, "main.c"; 	shanshuoTime = 0;
     0045 02rr                      1- 3596     	CLRR	_shanshuoTime
     0046                           1- 3597     _00268_DS_:
                                    1- 3598     	.line	328, "main.c"; 	}
                                    1- 3599     	RETURN	
     0046 0010                      3-   40 m1      ret
                                    1- 3601     ;***
                                    1- 3602     ;  pBlock Stats: dbName = C
                                    1- 3603     ;***
                                    1- 3604     ;has an exit
                                    1- 3605     ;functions called:
                                    1- 3606     ;   _pwm1Stop
                                    1- 3607     ;   _keyCtr
                                    1- 3608     ;   _workCtr
                                    1- 3609     ;   _pwm1Stop
                                    1- 3610     ;   _keyCtr
                                    1- 3611     ;   _workCtr
                                    1- 3612     ;1 compiler assigned register :
                                    1- 3613     ;   r0x1059
                                    1- 3614     ;; Starting pCode block
                                    1- 3615     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 3617     _chrgCtr:
                                    1- 3618     ; 2 exit points
                                    1- 3619     	.line	253, "main.c"; 	if(0x02&PORTA)
                                    1- 3620     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 08rr                      1- 3621     	BTRSS	_PORTA,1
                                    1- 3622     	MGOTO	_00244_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3623     	.line	256, "main.c"; 	zeroFlag = 0;
                                    1- 3624     	BANKSEL	_zeroFlag
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 3625     	CLRR	_zeroFlag
                                    1- 3626     	.line	257, "main.c"; 	chrgFlag = 1;
     0005 2101                      1- 3627     	MOVIA	0x01
                                    1- 3628     	BANKSEL	_chrgFlag
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 3629     	MOVAR	_chrgFlag
                                    1- 3630     	.line	258, "main.c"; 	powerFlag = 1;
                                    1- 3631     	BANKSEL	_powerFlag
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 3632     	MOVAR	_powerFlag
                                    1- 3633     	.line	259, "main.c"; 	powerTime = 0;
                                    1- 3634     	BANKSEL	_powerTime
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 02rr                      1- 3635     	CLRR	_powerTime
     000C 02rr                      1- 3636     	CLRR	(_powerTime + 1)
                                    1- 3637     	.line	260, "main.c"; 	firstTime = 0;
                                    1- 3638     	BANKSEL	_firstTime
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 3639     	CLRR	_firstTime
                                    1- 3640     	.line	261, "main.c"; 	workStep = 0;
                                    1- 3641     	BANKSEL	_workStep
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 3642     	CLRR	_workStep
                                    1- 3643     	.line	262, "main.c"; 	pwm1Stop();
                                    1- 3644     	MCALL	_pwm1Stop
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3645     	.line	263, "main.c"; 	if(++count100ms >= 50)
                                    1- 3646     	BANKSEL	_count100ms
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 05rr                      1- 3647     	INCR	_count100ms,F
                                    1- 3648     ;;unsigned compare: left < lit (0x32=50), size=1
     0014 2132                      1- 3649     	MOVIA	0x32
     0015 04rr                      1- 3650     	SUBAR	_count100ms,W
     0016 0803                      1- 3651     	BTRSS	STATUS,0
                                    1- 3652     	MGOTO	_00246_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3653     	.line	265, "main.c"; 	count100ms = 0;
     0018 02rr                      1- 3654     	CLRR	_count100ms
                                    1- 3655     	.line	266, "main.c"; 	if(++chrgStep > 11)
                                    1- 3656     	BANKSEL	_chrgStep
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 05rr                      1- 3657     	INCR	_chrgStep,F
                                    1- 3658     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3659     ;;unsigned compare: left >= lit (0xC=12), size=1
     001B 210C                      1- 3660     	MOVIA	0x0c
     001C 04rr                      1- 3661     	SUBAR	_chrgStep,W
     001D 0C03                      1- 3662     	BTRSC	STATUS,0
                                    1- 3663     	.line	268, "main.c"; 	chrgStep = 0;
     001E 02rr                      1- 3664     	CLRR	_chrgStep
                                    1- 3665     	.line	270, "main.c"; 	workStepshiwei = workStepgewei = chrgStep;
     001F 01rr                      1- 3666     	MOVR	_chrgStep,W
                                    1- 3667     	BANKSEL	r0x1059
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 3668     	MOVAR	r0x1059
                                    1- 3669     	BANKSEL	_workStepgewei
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 00rr                      1- 3670     	MOVAR	_workStepgewei
                                    1- 3671     	BANKSEL	r0x1059
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 3672     	MOVR	r0x1059,W
                                    1- 3673     	BANKSEL	_workStepshiwei
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 00rr                      1- 3674     	MOVAR	_workStepshiwei
                                    1- 3675     	MGOTO	_00246_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
     0029                           1- 3676     _00244_DS_:
                                    1- 3677     	.line	276, "main.c"; 	chrgFlag = 0;
                                    1- 3678     	BANKSEL	_chrgFlag
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 02rr                      1- 3679     	CLRR	_chrgFlag
                                    1- 3680     	.line	277, "main.c"; 	keyCtr();
                                    1- 3681     	MCALL	_keyCtr
     002B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3682     	.line	278, "main.c"; 	workCtr();
                                    1- 3683     	MCALL	_workCtr
     002C 2rrr                      3-   66 m1      LCALL rom_address
     002D                           1- 3684     _00246_DS_:
                                    1- 3685     	.line	280, "main.c"; 	}
                                    1- 3686     	RETURN	
     002D 0010                      3-   40 m1      ret
                                    1- 3687     ; exit point of _chrgCtr
                                    1- 3689     ;***
                                    1- 3690     ;  pBlock Stats: dbName = C
                                    1- 3691     ;***
                                    1- 3692     ;has an exit
                                    1- 3693     ;functions called:
                                    1- 3694     ;   _pwm1Stop
                                    1- 3695     ;   _pwm1Stop
                                    1- 3696     ;; Starting pCode block
                                    1- 3697     .segment "code"; module=main, function=_powerOff
     0000                           1- 3699     _powerOff:
                                    1- 3700     ; 2 exit points
                                    1- 3701     	.line	240, "main.c"; 	count900s = 0;
                                    1- 3702     	BANKSEL	_count900s
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 3703     	CLRR	_count900s
     0002 02rr                      1- 3704     	CLRR	(_count900s + 1)
                                    1- 3705     	.line	241, "main.c"; 	workStep = 0;
                                    1- 3706     	BANKSEL	_workStep
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 3707     	CLRR	_workStep
                                    1- 3708     	.line	242, "main.c"; 	workStepshiwei = workStep/10;
                                    1- 3709     	BANKSEL	_workStepshiwei
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1- 3710     	CLRR	_workStepshiwei
                                    1- 3711     	.line	243, "main.c"; 	workStepgewei = workStep%10;
                                    1- 3712     	BANKSEL	_workStepgewei
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1- 3713     	CLRR	_workStepgewei
                                    1- 3714     	.line	244, "main.c"; 	powerFlag = 0;
                                    1- 3715     	BANKSEL	_powerFlag
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 02rr                      1- 3716     	CLRR	_powerFlag
                                    1- 3717     	.line	245, "main.c"; 	powerTime = 0;
                                    1- 3718     	BANKSEL	_powerTime
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 02rr                      1- 3719     	CLRR	_powerTime
     000D 02rr                      1- 3720     	CLRR	(_powerTime + 1)
                                    1- 3721     	.line	246, "main.c"; 	firstTime = 0;
                                    1- 3722     	BANKSEL	_firstTime
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1- 3723     	CLRR	_firstTime
                                    1- 3724     	.line	247, "main.c"; 	pwm1Stop();
                                    1- 3725     	MCALL	_pwm1Stop
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3726     	.line	248, "main.c"; 	}
                                    1- 3727     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3728     ; exit point of _powerOff
                                    1- 3731     ;	code size estimation:
                                    1- 3732     ;	 1499+  396 =  1895 instructions ( 4582 byte)
                                    1- 3734     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
