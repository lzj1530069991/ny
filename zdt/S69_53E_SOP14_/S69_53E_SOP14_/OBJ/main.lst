
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A053E,c=on
                                    1-    9     	#include "ny8a053e.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_INDF
                                    1-   23     	extern	_TMR0
                                    1-   24     	extern	_PCL
                                    1-   25     	extern	_STATUS
                                    1-   26     	extern	_FSR
                                    1-   27     	extern	_PORTA
                                    1-   28     	extern	_PORTB
                                    1-   29     	extern	_PCON
                                    1-   30     	extern	_BWUCON
                                    1-   31     	extern	_PCHBUF
                                    1-   32     	extern	_ABPLCON
                                    1-   33     	extern	_BPHCON
                                    1-   34     	extern	_INTE
                                    1-   35     	extern	_INTF
                                    1-   36     	extern	_TMR1
                                    1-   37     	extern	_T1CR1
                                    1-   38     	extern	_T1CR2
                                    1-   39     	extern	_PWM1DUTY
                                    1-   40     	extern	_PS1CV
                                    1-   41     	extern	_BZ1CR
                                    1-   42     	extern	_IRCR
                                    1-   43     	extern	_TBHP
                                    1-   44     	extern	_TBHD
                                    1-   45     	extern	_P2CR1
                                    1-   46     	extern	_PWM2DUTY
                                    1-   47     	extern	_TMRH
                                    1-   48     	extern	_TM34RH
                                    1-   49     	extern	_OSCCR
                                    1-   50     	extern	_P3CR1
                                    1-   51     	extern	_PWM3DUTY
                                    1-   52     	extern	_P4CR1
                                    1-   53     	extern	_PWM4DUTY
                                    1-   54     	extern	_IOSTA
                                    1-   55     	extern	_IOSTB
                                    1-   56     	extern	_PS0CV
                                    1-   57     	extern	_BODCON
                                    1-   58     	extern	_CMPCR
                                    1-   59     	extern	_PCON1
                                    1-   60     	extern	_T0MD
                                    1-   61     	extern	___sdcc_saved_fsr
                                    1-   62     	extern	___sdcc_saved_stk00
                                    1-   63     	extern	___sdcc_saved_stk01
                                    1-   64     	extern	__nyc_ny8_startup
                                    1-   65     ;--------------------------------------------------------
                                    1-   66     ; global declarations
                                    1-   67     ;--------------------------------------------------------
                                    1-   68     	extern	_keyRead
                                    1-   69     	extern	_keyRead2
                                    1-   70     	extern	_gotoSleep
                                    1-   71     	extern	_initSys
                                    1-   72     	extern	_delay
                                    1-   73     	extern	_pwmOff
                                    1-   74     	extern	_pwmOn
                                    1-   75     	extern	_pwmCtr
                                    1-   76     	extern	_setMode
                                    1-   77     	extern	_keyCtr
                                    1-   78     	extern	_ledOff
                                    1-   79     	extern	_led3
                                    1-   80     	extern	_led2
                                    1-   81     	extern	_led1
                                    1-   82     	extern	_ledZM
                                    1-   83     	extern	_ledZF
                                    1-   84     	extern	_isr
                                    1-   85     	extern	_main
                                    1-   86     	extern	_intCount
                                    1-   87     	extern	_IntFlag
                                    1-   88     	extern	_mode
                                    1-   89     	extern	_pwStep
                                    1-   90     	extern	_workStep
                                    1-   91     	extern	_workTime
                                    1-   92     	extern	_waitTime
                                    1-   93     	extern	_runTime
                                    1-   94     	extern	_modeKeyCount
                                    1-   95     	extern	_stepKeyCount
                                    1-   96     	extern	_longPressFlag
                                    1-   97     	extern	_ledTime
                                    1-   98     	extern	_sleepTime
                                    1-   99     	extern	_stopTime
                                    1-  100     	extern	_count1s
                                    1-  101     	extern	_fullCount
                                    1-  102     	extern	_fullFlag
                                    1-  104     	extern PSAVE
                                    1-  105     	extern SSAVE
                                    1-  106     	extern WSAVE
                                    1-  107     	extern STK04
                                    1-  108     	extern STK03
                                    1-  109     	extern STK02
                                    1-  110     	extern STK01
                                    1-  111     	extern STK00
                                    1-  113     .segment "uninit", 0x20000020
 20000020                           1-  114     PSAVE:
                                    1-  115     	.res 1
 20000021                           1-  116     SSAVE:
                                    1-  117     	.res 1
 20000022                           1-  118     WSAVE:
                                    1-  119     	.res 1
 20000023                           1-  120     STK04:
                                    1-  121     	.res 1
 20000024                           1-  122     STK03:
                                    1-  123     	.res 1
 20000025                           1-  124     STK02:
                                    1-  125     	.res 1
 20000026                           1-  126     STK01:
                                    1-  127     	.res 1
 20000027                           1-  128     STK00:
                                    1-  129     	.res 1
                                    1-  131     ;--------------------------------------------------------
                                    1-  132     ; global definitions
                                    1-  133     ;--------------------------------------------------------
                                    1-  134     ;--------------------------------------------------------
                                    1-  135     ; absolute symbol definitions
                                    1-  136     ;--------------------------------------------------------
                                    1-  137     ;--------------------------------------------------------
                                    1-  138     ; compiler-defined variables
                                    1-  139     ;--------------------------------------------------------
                                    1-  140     .segment "uninit"
     0000                           1-  141     r0x101A:
                                    1-  142     	.res	1
                                    1-  143     .segment "uninit"
     0000                           1-  144     r0x1019:
                                    1-  145     	.res	1
                                    1-  146     .segment "uninit"
     0000                           1-  147     r0x1016:
                                    1-  148     	.res	1
                                    1-  149     .segment "uninit"
     0000                           1-  150     r0x1015:
                                    1-  151     	.res	1
                                    1-  152     .segment "uninit"
     0000                           1-  153     r0x1017:
                                    1-  154     	.res	1
                                    1-  155     .segment "uninit"
     0000                           1-  156     r0x1018:
                                    1-  157     	.res	1
                                    1-  158     .segment "uninit"
     0000                           1-  159     r0x1014:
                                    1-  160     	.res	1
                                    1-  161     .segment "uninit"
     0000                           1-  162     r0x1013:
                                    1-  163     	.res	1
                                    1-  164     ;--------------------------------------------------------
                                    1-  165     ; initialized data
                                    1-  166     ;--------------------------------------------------------
                                    1-  168     .segment "idata"
     0000                           1-  169     _intCount:
     0000 0000                      1-  170     	dw	0x00
                                    1-  174     .segment "idata"
     0000                           1-  175     _IntFlag:
     0000 0000                      1-  176     	dw	0x00
                                    1-  180     .segment "idata"
     0000                           1-  181     _mode:
     0000 0000                      1-  182     	dw	0x00
                                    1-  186     .segment "idata"
     0000                           1-  187     _pwStep:
     0000 0000                      1-  188     	dw	0x00
                                    1-  192     .segment "idata"
     0000                           1-  193     _workStep:
     0000 0000                      1-  194     	dw	0x00
                                    1-  198     .segment "idata"
     0000                           1-  199     _workTime:
     0000 0000                      1-  200     	dw	0x00
                                    1-  204     .segment "idata"
     0000                           1-  205     _waitTime:
     0000 0000                      1-  206     	dw	0x00
                                    1-  210     .segment "idata"
     0000                           1-  211     _runTime:
     0000 0000                      1-  212     	dw	0x00
                                    1-  216     .segment "idata"
     0000                           1-  217     _modeKeyCount:
     0000 0000                      1-  218     	dw	0x00
                                    1-  222     .segment "idata"
     0000                           1-  223     _stepKeyCount:
     0000 0000                      1-  224     	dw	0x00
                                    1-  228     .segment "idata"
     0000                           1-  229     _longPressFlag:
     0000 0000                      1-  230     	dw	0x00
                                    1-  234     .segment "idata"
     0000                           1-  235     _ledTime:
     0000 0000                      1-  236     	dw	0x00
                                    1-  240     .segment "idata"
     0000                           1-  241     _sleepTime:
     0000 0000                      1-  242     	dw	0x00
                                    1-  246     .segment "idata"
     0000                           1-  247     _stopTime:
     0000 0000 0000                 1-  248     	dw	0x00, 0x00
                                    1-  252     .segment "idata"
     0000                           1-  253     _count1s:
     0000 0000                      1-  254     	dw	0x00
                                    1-  258     .segment "idata"
     0000                           1-  259     _fullCount:
     0000 0000                      1-  260     	dw	0x00
                                    1-  264     .segment "idata"
     0000                           1-  265     _fullFlag:
     0000 0000                      1-  266     	dw	0x00
                                    1-  269     ;--------------------------------------------------------
                                    1-  270     ; overlayable items in internal ram 
                                    1-  271     ;--------------------------------------------------------
                                    1-  272     ;	udata_ovr
                                    1-  273     ;--------------------------------------------------------
                                    1-  274     ; reset vector 
                                    1-  275     ;--------------------------------------------------------
                                    1-  276     ORG	0x0000
     0000 3rrr                      1-  277     	LGOTO	__nyc_ny8_startup
                                    1-  278     ;--------------------------------------------------------
                                    1-  279     ; interrupt and initialization code
                                    1-  280     ;--------------------------------------------------------
                                    1-  281     ORG 0x0008
                                    1-  282     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  284     .segment "code"
     0000                           1-  285     __sdcc_interrupt:
                                    1-  286     ;***
                                    1-  287     ;  pBlock Stats: dbName = I
                                    1-  288     ;***
                                    1-  289     ;2 compiler assigned registers:
                                    1-  290     ;   STK00
                                    1-  291     ;   STK01
                                    1-  292     ;; Starting pCode block
     0000                           1-  293     _isr:
                                    1-  294     ; 0 exit points
                                    1-  295     	.line	59, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  296     	MOVAR	WSAVE
     0001 1503                      1-  297     	SWAPR	STATUS,W
     0002 0283                      1-  298     	CLRR	STATUS
     0003 00rr                      1-  299     	MOVAR	SSAVE
     0004 010A                      1-  300     	MOVR	PCHBUF,W
     0005 028A                      1-  301     	CLRR	PCHBUF
     0006 00rr                      1-  302     	MOVAR	PSAVE
     0007 0104                      1-  303     	MOVR	FSR,W
                                    1-  304     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  305     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  306     	MOVR	STK00,W
                                    1-  307     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  308     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  309     	MOVR	STK01,W
                                    1-  310     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  311     	MOVAR	___sdcc_saved_stk01
                                    1-  312     	.line	61, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  313     	BTRSS	_INTFbits,0
                                    1-  314     	MGOTO	_00112_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  315     	.line	63, "main.c"; 	TMR0 += 57;
     0012 2139                      1-  316     	MOVIA	0x39
     0013 03rr                      1-  317     	ADDAR	_TMR0,F
                                    1-  318     	.line	64, "main.c"; 	if(++intCount >= 100)
                                    1-  319     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  320     	INCR	_intCount,F
                                    1-  321     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  322     	MOVIA	0x64
     0017 04rr                      1-  323     	SUBAR	_intCount,W
     0018 0803                      1-  324     	BTRSS	STATUS,0
                                    1-  325     	MGOTO	_00112_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  326     	.line	66, "main.c"; 	intCount = 0;
     001A 02rr                      1-  327     	CLRR	_intCount
                                    1-  328     	.line	67, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  329     	MOVIA	0x01
                                    1-  330     	BANKSEL	_IntFlag
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 00rr                      1-  331     	MOVAR	_IntFlag
                                    1-  332     	.line	68, "main.c"; 	if(++count1s >= 100)
                                    1-  333     	BANKSEL	_count1s
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 05rr                      1-  334     	INCR	_count1s,F
                                    1-  335     ;;unsigned compare: left < lit (0x64=100), size=1
     0020 2164                      1-  336     	MOVIA	0x64
     0021 04rr                      1-  337     	SUBAR	_count1s,W
     0022 0803                      1-  338     	BTRSS	STATUS,0
                                    1-  339     	MGOTO	_00112_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  340     	.line	70, "main.c"; 	count1s = 0;
     0024 02rr                      1-  341     	CLRR	_count1s
                                    1-  342     	.line	71, "main.c"; 	if(pwStep)
                                    1-  343     	BANKSEL	_pwStep
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1-  344     	MOVR	_pwStep,W
     0027 0D03                      1-  345     	BTRSC	STATUS,2
                                    1-  346     	MGOTO	_00112_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  347     	.line	72, "main.c"; 	stopTime++;
                                    1-  348     	BANKSEL	_stopTime
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 05rr                      1-  349     	INCR	_stopTime,F
     002B 0D03                      1-  350     	BTRSC	STATUS,2
     002C 05rr                      1-  351     	INCR	(_stopTime + 1),F
     002D                           1-  352     _00112_DS_:
                                    1-  353     	.line	76, "main.c"; 	if(INTFbits.PBIF)
     002D 08rr                      1-  354     	BTRSS	_INTFbits,1
                                    1-  355     	MGOTO	_00114_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  356     	.line	78, "main.c"; 	INTF= (unsigned char)~(C_INT_PBKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     002F 21FD                      1-  357     	MOVIA	0xfd
     0030 00rr                      1-  358     	MOVAR	_INTF
     0031                           1-  359     _00114_DS_:
                                    1-  360     	.line	81, "main.c"; 	INTF = 0;
     0031 02rr                      1-  361     	CLRR	_INTF
                                    1-  362     	.line	83, "main.c"; 	}
                                    1-  363     	BANKSEL	___sdcc_saved_stk01
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 01rr                      1-  364     	MOVR	___sdcc_saved_stk01,W
     0034 00rr                      1-  365     	MOVAR	STK01
                                    1-  366     	BANKSEL	___sdcc_saved_stk00
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 01rr                      1-  367     	MOVR	___sdcc_saved_stk00,W
     0037 00rr                      1-  368     	MOVAR	STK00
                                    1-  369     	BANKSEL	___sdcc_saved_fsr
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 01rr                      1-  370     	MOVR	___sdcc_saved_fsr,W
     003A 0084                      1-  371     	MOVAR	FSR
     003B 01rr                      1-  372     	MOVR	PSAVE,W
     003C 008A                      1-  373     	MOVAR	PCHBUF
     003D 0283                      1-  374     	CLRR	STATUS
     003E 15rr                      1-  375     	SWAPR	SSAVE,W
     003F 0083                      1-  376     	MOVAR	STATUS
     0040 15rr                      1-  377     	SWAPR	WSAVE,F
     0041 15rr                      1-  378     	SWAPR	WSAVE,W
     0042                           1-  379     END_OF_INTERRUPT:
     0042 0011                      1-  380     	RETIE	
                                    1-  382     ;--------------------------------------------------------
                                    1-  383     ; code
                                    1-  384     ;--------------------------------------------------------
                                    1-  385     ;***
                                    1-  386     ;  pBlock Stats: dbName = M
                                    1-  387     ;***
                                    1-  388     ;has an exit
                                    1-  389     ;functions called:
                                    1-  390     ;   _initSys
                                    1-  391     ;   _setMode
                                    1-  392     ;   _pwmCtr
                                    1-  393     ;   _pwmOff
                                    1-  394     ;   _ledOff
                                    1-  395     ;   _ledOff
                                    1-  396     ;   _keyCtr
                                    1-  397     ;   _ledZF
                                    1-  398     ;   _ledZM
                                    1-  399     ;   _gotoSleep
                                    1-  400     ;   _gotoSleep
                                    1-  401     ;   _initSys
                                    1-  402     ;   _setMode
                                    1-  403     ;   _pwmCtr
                                    1-  404     ;   _pwmOff
                                    1-  405     ;   _ledOff
                                    1-  406     ;   _ledOff
                                    1-  407     ;   _keyCtr
                                    1-  408     ;   _ledZF
                                    1-  409     ;   _ledZM
                                    1-  410     ;   _gotoSleep
                                    1-  411     ;   _gotoSleep
                                    1-  412     ;; Starting pCode block
                                    1-  413     .segment "code"; module=main, function=_main
     0000                           1-  415     _main:
                                    1-  416     ; 2 exit points
                                    1-  417     	.line	88, "main.c"; 	DISI();
     0000 0013                      1-  418     	DISI
                                    1-  419     	.line	89, "main.c"; 	initSys();
                                    1-  420     	MCALL	_initSys
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  421     _00161_DS_:
                                    1-  422     	.line	94, "main.c"; 	CLRWDT();							// Clear WatchDog
     0002 0002                      1-  423     	clrwdt
                                    1-  424     	.line	95, "main.c"; 	if(!IntFlag)
                                    1-  425     	BANKSEL	_IntFlag
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 01rr                      1-  426     	MOVR	_IntFlag,W
     0005 0D03                      1-  427     	BTRSC	STATUS,2
                                    1-  428     	MGOTO	_00161_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  429     	.line	97, "main.c"; 	IntFlag = 0;
     0007 02rr                      1-  430     	CLRR	_IntFlag
                                    1-  431     	.line	98, "main.c"; 	if(pwStep && workStep)
                                    1-  432     	BANKSEL	_pwStep
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 01rr                      1-  433     	MOVR	_pwStep,W
     000A 0D03                      1-  434     	BTRSC	STATUS,2
                                    1-  435     	MGOTO	_00131_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  436     	BANKSEL	_workStep
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1-  437     	MOVR	_workStep,W
     000E 0D03                      1-  438     	BTRSC	STATUS,2
                                    1-  439     	MGOTO	_00131_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  440     	.line	100, "main.c"; 	setMode();
                                    1-  441     	MCALL	_setMode
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  442     	.line	101, "main.c"; 	if(runTime == 0)
                                    1-  443     	BANKSEL	_runTime
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1-  444     	MOVR	_runTime,W
     0013 0D03                      1-  445     	BTRSC	STATUS,2
                                    1-  446     	.line	102, "main.c"; 	pwmCtr();
                                    1-  447     	MCALL	_pwmCtr
     0014 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  448     	.line	103, "main.c"; 	if(mode)			//模式
                                    1-  449     	BANKSEL	_mode
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 01rr                      1-  450     	MOVR	_mode,W
     0017 0D03                      1-  451     	BTRSC	STATUS,2
                                    1-  452     	MGOTO	_00128_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  453     	.line	106, "main.c"; 	if(++runTime >= 9)
                                    1-  454     	BANKSEL	_runTime
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 05rr                      1-  455     	INCR	_runTime,F
                                    1-  456     ;;unsigned compare: left < lit (0x9=9), size=1
     001B 2109                      1-  457     	MOVIA	0x09
     001C 04rr                      1-  458     	SUBAR	_runTime,W
     001D 0803                      1-  459     	BTRSS	STATUS,0
                                    1-  460     	MGOTO	_00132_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  461     	.line	107, "main.c"; 	runTime = 0;
     001F 02rr                      1-  462     	CLRR	_runTime
                                    1-  463     	MGOTO	_00132_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
     0021                           1-  464     _00128_DS_:
                                    1-  465     	.line	111, "main.c"; 	if(++runTime >= 26)
                                    1-  466     	BANKSEL	_runTime
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 05rr                      1-  467     	INCR	_runTime,F
                                    1-  468     ;;unsigned compare: left < lit (0x1A=26), size=1
     0023 211A                      1-  469     	MOVIA	0x1a
     0024 04rr                      1-  470     	SUBAR	_runTime,W
     0025 0803                      1-  471     	BTRSS	STATUS,0
                                    1-  472     	MGOTO	_00132_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  473     	.line	112, "main.c"; 	runTime = 0;
     0027 02rr                      1-  474     	CLRR	_runTime
                                    1-  475     	MGOTO	_00132_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
     0029                           1-  476     _00131_DS_:
                                    1-  477     	.line	117, "main.c"; 	pwmOff();
                                    1-  478     	MCALL	_pwmOff
     0029 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  479     	.line	118, "main.c"; 	ledOff();
                                    1-  480     	MCALL	_ledOff
     002A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  481     	.line	119, "main.c"; 	PORTB &= 0xBD;		//停止输出
     002B 21BD                      1-  482     	MOVIA	0xbd
     002C 10rr                      1-  483     	ANDAR	_PORTB,F
     002D                           1-  484     _00132_DS_:
                                    1-  485     	.line	123, "main.c"; 	if(PORTA & 0x01)
                                    1-  486     	BANKSEL	_PORTA
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 08rr                      1-  487     	BTRSS	_PORTA,0
                                    1-  488     	MGOTO	_00158_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  489     	.line	126, "main.c"; 	pwStep = 0;
                                    1-  490     	BANKSEL	_pwStep
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 02rr                      1-  491     	CLRR	_pwStep
                                    1-  492     	.line	127, "main.c"; 	workStep = 0;
                                    1-  493     	BANKSEL	_workStep
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 02rr                      1-  494     	CLRR	_workStep
                                    1-  495     	.line	128, "main.c"; 	mode = 0;
                                    1-  496     	BANKSEL	_mode
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 02rr                      1-  497     	CLRR	_mode
                                    1-  498     	.line	129, "main.c"; 	ledOff();
                                    1-  499     	MCALL	_ledOff
     0036 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  500     	.line	130, "main.c"; 	PORTA |= 0X02;
                                    1-  501     	BANKSEL	_PORTA
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 18rr                      1-  502     	BSR	_PORTA,1
                                    1-  503     	.line	131, "main.c"; 	PORTB |= 0X04;
     0039 19rr                      1-  504     	BSR	_PORTB,2
                                    1-  505     	.line	132, "main.c"; 	if((0x80&PORTB) || fullFlag)
     003A 0Frr                      1-  506     	BTRSC	_PORTB,7
                                    1-  507     	MGOTO	_00141_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  508     	BANKSEL	_fullFlag
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1-  509     	MOVR	_fullFlag,W
     003E 0D03                      1-  510     	BTRSC	STATUS,2
                                    1-  511     	MGOTO	_00142_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
     0040                           1-  512     _00141_DS_:
                                    1-  513     	.line	135, "main.c"; 	if(++fullCount >= 200)
                                    1-  514     	BANKSEL	_fullCount
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 05rr                      1-  515     	INCR	_fullCount,F
                                    1-  516     ;;unsigned compare: left < lit (0xC8=200), size=1
     0042 21C8                      1-  517     	MOVIA	0xc8
     0043 04rr                      1-  518     	SUBAR	_fullCount,W
     0044 0803                      1-  519     	BTRSS	STATUS,0
                                    1-  520     	MGOTO	_00161_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  521     	.line	137, "main.c"; 	PORTB &= 0xEF;	//电量满了
     0046 1Err                      1-  522     	BCR	_PORTB,4
                                    1-  523     	.line	138, "main.c"; 	fullCount = 200;
     0047 21C8                      1-  524     	MOVIA	0xc8
     0048 00rr                      1-  525     	MOVAR	_fullCount
                                    1-  526     	.line	139, "main.c"; 	fullFlag = 1;
     0049 2101                      1-  527     	MOVIA	0x01
                                    1-  528     	BANKSEL	_fullFlag
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 00rr                      1-  529     	MOVAR	_fullFlag
                                    1-  530     	MGOTO	_00161_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
     004D                           1-  531     _00142_DS_:
                                    1-  532     	.line	145, "main.c"; 	fullCount = 0;
                                    1-  533     	BANKSEL	_fullCount
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 02rr                      1-  534     	CLRR	_fullCount
                                    1-  535     	.line	146, "main.c"; 	if(++ledTime > 30)
                                    1-  536     	BANKSEL	_ledTime
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 05rr                      1-  537     	INCR	_ledTime,F
                                    1-  538     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  539     ;;unsigned compare: left >= lit (0x1F=31), size=1
     0051 211F                      1-  540     	MOVIA	0x1f
     0052 04rr                      1-  541     	SUBAR	_ledTime,W
     0053 0C03                      1-  542     	BTRSC	STATUS,0
                                    1-  543     	.line	148, "main.c"; 	ledTime = 0;
     0054 02rr                      1-  544     	CLRR	_ledTime
                                    1-  545     	.line	150, "main.c"; 	if(ledTime < 15)
     0055 210F                      1-  546     	MOVIA	0x0f
     0056 04rr                      1-  547     	SUBAR	_ledTime,W
     0057 0C03                      1-  548     	BTRSC	STATUS,0
                                    1-  549     	MGOTO	_00139_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  550     	.line	152, "main.c"; 	PORTB &= 0xEF;
     0059 1Err                      1-  551     	BCR	_PORTB,4
                                    1-  552     	MGOTO	_00161_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B                           1-  553     _00139_DS_:
                                    1-  554     	.line	156, "main.c"; 	PORTB |= 0x10;
     005B 1Arr                      1-  555     	BSR	_PORTB,4
                                    1-  556     	MGOTO	_00161_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
     005D                           1-  557     _00158_DS_:
                                    1-  558     	.line	163, "main.c"; 	keyCtr();
                                    1-  559     	MCALL	_keyCtr
     005D 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  560     	.line	164, "main.c"; 	fullFlag = 0;
                                    1-  561     	BANKSEL	_fullFlag
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 02rr                      1-  562     	CLRR	_fullFlag
                                    1-  563     	.line	165, "main.c"; 	fullCount = 0;
                                    1-  564     	BANKSEL	_fullCount
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 02rr                      1-  565     	CLRR	_fullCount
                                    1-  566     	.line	166, "main.c"; 	if(pwStep > 0)
                                    1-  567     	BANKSEL	_pwStep
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 01rr                      1-  568     	MOVR	_pwStep,W
     0064 0D03                      1-  569     	BTRSC	STATUS,2
                                    1-  570     	MGOTO	_00149_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  571     	.line	168, "main.c"; 	PORTB &= 0xEF;
     0066 1Err                      1-  572     	BCR	_PORTB,4
                                    1-  573     	.line	169, "main.c"; 	if(mode)
                                    1-  574     	BANKSEL	_mode
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 01rr                      1-  575     	MOVR	_mode,W
     0069 0D03                      1-  576     	BTRSC	STATUS,2
                                    1-  577     	MGOTO	_00146_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  578     	.line	171, "main.c"; 	ledZF();
                                    1-  579     	MCALL	_ledZF
     006B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  580     	MGOTO	_00149_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
     006D                           1-  581     _00146_DS_:
                                    1-  582     	.line	175, "main.c"; 	ledZM();
                                    1-  583     	MCALL	_ledZM
     006D 2rrr                      3-   66 m1      LCALL rom_address
     006E                           1-  584     _00149_DS_:
                                    1-  585     	.line	178, "main.c"; 	if(modeKeyCount == 0 && pwStep == 0)
                                    1-  586     	BANKSEL	_modeKeyCount
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 01rr                      1-  587     	MOVR	_modeKeyCount,W
     0070 0903                      1-  588     	BTRSS	STATUS,2
                                    1-  589     	MGOTO	_00153_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  590     	BANKSEL	_pwStep
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 01rr                      1-  591     	MOVR	_pwStep,W
     0074 0903                      1-  592     	BTRSS	STATUS,2
                                    1-  593     	MGOTO	_00153_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  594     	.line	180, "main.c"; 	if(++sleepTime > 20)
                                    1-  595     	BANKSEL	_sleepTime
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 05rr                      1-  596     	INCR	_sleepTime,F
                                    1-  597     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  598     ;;unsigned compare: left >= lit (0x15=21), size=1
     0078 2115                      1-  599     	MOVIA	0x15
     0079 04rr                      1-  600     	SUBAR	_sleepTime,W
     007A 0C03                      1-  601     	BTRSC	STATUS,0
                                    1-  602     	.line	181, "main.c"; 	gotoSleep();
                                    1-  603     	MCALL	_gotoSleep
     007B 2rrr                      3-   66 m1      LCALL rom_address
     007C                           1-  604     _00153_DS_:
                                    1-  605     	.line	183, "main.c"; 	if(stopTime > 1800)
     007C 2107                      1-  606     	MOVIA	0x07
                                    1-  607     	BANKSEL	_stopTime
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 04rr                      1-  608     	SUBAR	(_stopTime + 1),W
     007F 0903                      1-  609     	BTRSS	STATUS,2
                                    1-  610     	MGOTO	_00228_DS_
     0080 3rrr                      3-   63 m1      LGOTO rom_address
     0081 2109                      1-  611     	MOVIA	0x09
     0082 04rr                      1-  612     	SUBAR	_stopTime,W
     0083                           1-  613     _00228_DS_:
     0083 0803                      1-  614     	BTRSS	STATUS,0
                                    1-  615     	MGOTO	_00161_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  616     	.line	184, "main.c"; 	gotoSleep();
                                    1-  617     	MCALL	_gotoSleep
     0085 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  618     	MGOTO	_00161_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  619     	.line	190, "main.c"; 	}
                                    1-  620     	RETURN	
     0087 0010                      3-   40 m1      ret
                                    1-  621     ; exit point of _main
                                    1-  623     ;***
                                    1-  624     ;  pBlock Stats: dbName = C
                                    1-  625     ;***
                                    1-  626     ;has an exit
                                    1-  627     ;1 compiler assigned register :
                                    1-  628     ;   r0x1013
                                    1-  629     ;; Starting pCode block
                                    1-  630     .segment "code"; module=main, function=_keyRead
                                    1-  632     ;local variable name mapping:
     0000                           1-  634     _keyRead:
                                    1-  635     ; 2 exit points
                                    1-  636     	.line	424, "main.c"; 	char keyRead(char keyStatus)	
                                    1-  637     	BANKSEL	r0x1013
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  638     	MOVAR	r0x1013
                                    1-  639     	.line	426, "main.c"; 	if(keyStatus)
     0002 01rr                      1-  640     	MOVR	r0x1013,W
     0003 0D03                      1-  641     	BTRSC	STATUS,2
                                    1-  642     	MGOTO	_00362_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  643     	.line	428, "main.c"; 	modeKeyCount++;
                                    1-  644     	BANKSEL	_modeKeyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1-  645     	INCR	_modeKeyCount,F
                                    1-  646     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1-  647     	.line	430, "main.c"; 	if(modeKeyCount >= 100)
     0007 2164                      1-  648     	MOVIA	0x64
     0008 04rr                      1-  649     	SUBAR	_modeKeyCount,W
     0009 0803                      1-  650     	BTRSS	STATUS,0
                                    1-  651     	MGOTO	_00363_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  652     	.line	432, "main.c"; 	modeKeyCount = 100;
     000B 2164                      1-  653     	MOVIA	0x64
     000C 00rr                      1-  654     	MOVAR	_modeKeyCount
                                    1-  655     	.line	433, "main.c"; 	if(!longPressFlag)
                                    1-  656     	BANKSEL	_longPressFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1-  657     	MOVR	_longPressFlag,W
     000F 0903                      1-  658     	BTRSS	STATUS,2
                                    1-  659     	MGOTO	_00363_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  660     	.line	435, "main.c"; 	longPressFlag = 1;
     0011 2101                      1-  661     	MOVIA	0x01
     0012 00rr                      1-  662     	MOVAR	_longPressFlag
                                    1-  663     	.line	436, "main.c"; 	return 2;
     0013 2102                      1-  664     	MOVIA	0x02
                                    1-  665     	MGOTO	_00364_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  666     ;;unsigned compare: left < lit (0x64=100), size=1
     0015                           1-  667     _00362_DS_:
                                    1-  668     	.line	442, "main.c"; 	if(modeKeyCount >= 100)
     0015 2164                      1-  669     	MOVIA	0x64
                                    1-  670     	BANKSEL	_modeKeyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1-  671     	SUBAR	_modeKeyCount,W
     0018 0803                      1-  672     	BTRSS	STATUS,0
                                    1-  673     	MGOTO	_00359_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  674     	.line	444, "main.c"; 	modeKeyCount = 0;
     001A 02rr                      1-  675     	CLRR	_modeKeyCount
                                    1-  676     	.line	445, "main.c"; 	longPressFlag = 0;
                                    1-  677     	BANKSEL	_longPressFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1-  678     	CLRR	_longPressFlag
                                    1-  679     	.line	446, "main.c"; 	return	0;
     001D 2100                      1-  680     	MOVIA	0x00
                                    1-  681     	MGOTO	_00364_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  682     ;;unsigned compare: left < lit (0x4=4), size=1
     001F                           1-  683     _00359_DS_:
                                    1-  684     	.line	448, "main.c"; 	else if(modeKeyCount >= 4)
     001F 2104                      1-  685     	MOVIA	0x04
                                    1-  686     	BANKSEL	_modeKeyCount
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1-  687     	SUBAR	_modeKeyCount,W
     0022 0803                      1-  688     	BTRSS	STATUS,0
                                    1-  689     	MGOTO	_00360_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  690     	.line	450, "main.c"; 	modeKeyCount = 0;
     0024 02rr                      1-  691     	CLRR	_modeKeyCount
                                    1-  692     	.line	451, "main.c"; 	return	1;
     0025 2101                      1-  693     	MOVIA	0x01
                                    1-  694     	MGOTO	_00364_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1-  695     _00360_DS_:
                                    1-  696     	.line	453, "main.c"; 	modeKeyCount = 0;
                                    1-  697     	BANKSEL	_modeKeyCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1-  698     	CLRR	_modeKeyCount
     0029                           1-  699     _00363_DS_:
                                    1-  700     	.line	455, "main.c"; 	return 0;
     0029 2100                      1-  701     	MOVIA	0x00
     002A                           1-  702     _00364_DS_:
                                    1-  703     	.line	456, "main.c"; 	}
                                    1-  704     	RETURN	
     002A 0010                      3-   40 m1      ret
                                    1-  705     ; exit point of _keyRead
                                    1-  707     ;***
                                    1-  708     ;  pBlock Stats: dbName = C
                                    1-  709     ;***
                                    1-  710     ;has an exit
                                    1-  711     ;1 compiler assigned register :
                                    1-  712     ;   r0x1014
                                    1-  713     ;; Starting pCode block
                                    1-  714     .segment "code"; module=main, function=_keyRead2
                                    1-  716     ;local variable name mapping:
     0000                           1-  718     _keyRead2:
                                    1-  719     ; 2 exit points
                                    1-  720     	.line	388, "main.c"; 	char keyRead2(char keyStatus)	
                                    1-  721     	BANKSEL	r0x1014
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  722     	MOVAR	r0x1014
                                    1-  723     	.line	390, "main.c"; 	if(keyStatus)
     0002 01rr                      1-  724     	MOVR	r0x1014,W
     0003 0D03                      1-  725     	BTRSC	STATUS,2
                                    1-  726     	MGOTO	_00345_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  727     	.line	392, "main.c"; 	stepKeyCount++;
                                    1-  728     	BANKSEL	_stepKeyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1-  729     	INCR	_stepKeyCount,F
                                    1-  730     ;;unsigned compare: left < lit (0x14=20), size=1
                                    1-  731     	.line	394, "main.c"; 	if(stepKeyCount >= 20)
     0007 2114                      1-  732     	MOVIA	0x14
     0008 04rr                      1-  733     	SUBAR	_stepKeyCount,W
     0009 0803                      1-  734     	BTRSS	STATUS,0
                                    1-  735     	MGOTO	_00346_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  736     	.line	396, "main.c"; 	stepKeyCount = 20;
     000B 2114                      1-  737     	MOVIA	0x14
     000C 00rr                      1-  738     	MOVAR	_stepKeyCount
                                    1-  739     	.line	397, "main.c"; 	if(!longPressFlag)
                                    1-  740     	BANKSEL	_longPressFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1-  741     	MOVR	_longPressFlag,W
     000F 0903                      1-  742     	BTRSS	STATUS,2
                                    1-  743     	MGOTO	_00346_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  744     	.line	399, "main.c"; 	longPressFlag = 1;
     0011 2101                      1-  745     	MOVIA	0x01
     0012 00rr                      1-  746     	MOVAR	_longPressFlag
                                    1-  747     	.line	400, "main.c"; 	return 2;
     0013 2102                      1-  748     	MOVIA	0x02
                                    1-  749     	MGOTO	_00347_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  750     ;;unsigned compare: left < lit (0x14=20), size=1
     0015                           1-  751     _00345_DS_:
                                    1-  752     	.line	406, "main.c"; 	if(stepKeyCount >= 20)
     0015 2114                      1-  753     	MOVIA	0x14
                                    1-  754     	BANKSEL	_stepKeyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1-  755     	SUBAR	_stepKeyCount,W
     0018 0803                      1-  756     	BTRSS	STATUS,0
                                    1-  757     	MGOTO	_00342_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  758     	.line	408, "main.c"; 	stepKeyCount = 0;
     001A 02rr                      1-  759     	CLRR	_stepKeyCount
                                    1-  760     	.line	409, "main.c"; 	longPressFlag = 0;
                                    1-  761     	BANKSEL	_longPressFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1-  762     	CLRR	_longPressFlag
                                    1-  763     	.line	410, "main.c"; 	return	0;
     001D 2100                      1-  764     	MOVIA	0x00
                                    1-  765     	MGOTO	_00347_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  766     ;;unsigned compare: left < lit (0x4=4), size=1
     001F                           1-  767     _00342_DS_:
                                    1-  768     	.line	412, "main.c"; 	else if(stepKeyCount >= 4)
     001F 2104                      1-  769     	MOVIA	0x04
                                    1-  770     	BANKSEL	_stepKeyCount
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1-  771     	SUBAR	_stepKeyCount,W
     0022 0803                      1-  772     	BTRSS	STATUS,0
                                    1-  773     	MGOTO	_00343_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  774     	.line	414, "main.c"; 	stepKeyCount = 0;
     0024 02rr                      1-  775     	CLRR	_stepKeyCount
                                    1-  776     	.line	415, "main.c"; 	return	1;
     0025 2101                      1-  777     	MOVIA	0x01
                                    1-  778     	MGOTO	_00347_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1-  779     _00343_DS_:
                                    1-  780     	.line	417, "main.c"; 	stepKeyCount = 0;
                                    1-  781     	BANKSEL	_stepKeyCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1-  782     	CLRR	_stepKeyCount
     0029                           1-  783     _00346_DS_:
                                    1-  784     	.line	419, "main.c"; 	return 0;
     0029 2100                      1-  785     	MOVIA	0x00
     002A                           1-  786     _00347_DS_:
                                    1-  787     	.line	420, "main.c"; 	}
                                    1-  788     	RETURN	
     002A 0010                      3-   40 m1      ret
                                    1-  789     ; exit point of _keyRead2
                                    1-  791     ;***
                                    1-  792     ;  pBlock Stats: dbName = C
                                    1-  793     ;***
                                    1-  794     ;has an exit
                                    1-  795     ;; Starting pCode block
                                    1-  796     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  798     _gotoSleep:
                                    1-  799     ; 2 exit points
                                    1-  800     	.line	366, "main.c"; 	stopTime = 0;
                                    1-  801     	BANKSEL	_stopTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1-  802     	CLRR	_stopTime
     0002 02rr                      1-  803     	CLRR	(_stopTime + 1)
                                    1-  804     	.line	367, "main.c"; 	sleepTime = 0;
                                    1-  805     	BANKSEL	_sleepTime
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1-  806     	CLRR	_sleepTime
                                    1-  807     	.line	368, "main.c"; 	PORTA = 0x0E;
     0005 210E                      1-  808     	MOVIA	0x0e
                                    1-  809     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1-  810     	MOVAR	_PORTA
                                    1-  811     	.line	369, "main.c"; 	PORTB = 0x15;
     0008 2115                      1-  812     	MOVIA	0x15
     0009 00rr                      1-  813     	MOVAR	_PORTB
                                    1-  814     	.line	370, "main.c"; 	pwStep = 0;
                                    1-  815     	BANKSEL	_pwStep
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 02rr                      1-  816     	CLRR	_pwStep
                                    1-  817     	.line	371, "main.c"; 	workStep = 0;
                                    1-  818     	BANKSEL	_workStep
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 02rr                      1-  819     	CLRR	_workStep
                                    1-  820     	.line	372, "main.c"; 	mode = 0;
                                    1-  821     	BANKSEL	_mode
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1-  822     	CLRR	_mode
                                    1-  823     	.line	373, "main.c"; 	BWUCON = 0xA8;
     0010 21A8                      1-  824     	MOVIA	0xa8
     0011 00rr                      1-  825     	MOVAR	_BWUCON
                                    1-  826     	.line	374, "main.c"; 	INTE =  C_INT_PBKey;
     0012 2102                      1-  827     	MOVIA	0x02
     0013 00rr                      1-  828     	MOVAR	_INTE
                                    1-  829     	.line	375, "main.c"; 	PCON =  C_LVR_En;	
     0014 2108                      1-  830     	MOVIA	0x08
     0015 00rr                      1-  831     	MOVAR	_PCON
                                    1-  832     	.line	376, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0016 02rr                      1-  833     	CLRR	_INTF
                                    1-  834     	.line	377, "main.c"; 	CLRWDT();
     0017 0002                      1-  835     	clrwdt
                                    1-  836     	.line	378, "main.c"; 	SLEEP();
     0018 0001                      1-  837     	sleep
                                    1-  838     	.line	379, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     0019 2101                      1-  839     	MOVIA	0x01
     001A 00rr                      1-  840     	MOVAR	_INTE
                                    1-  841     	.line	380, "main.c"; 	INTF = 0;
     001B 02rr                      1-  842     	CLRR	_INTF
                                    1-  843     	.line	382, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT ,  Enable LVR
     001C 21A8                      1-  844     	MOVIA	0xa8
     001D 00rr                      1-  845     	MOVAR	_PCON
                                    1-  846     	.line	383, "main.c"; 	}
                                    1-  847     	RETURN	
     001E 0010                      3-   40 m1      ret
                                    1-  848     ; exit point of _gotoSleep
                                    1-  850     ;***
                                    1-  851     ;  pBlock Stats: dbName = C
                                    1-  852     ;***
                                    1-  853     ;has an exit
                                    1-  854     ;; Starting pCode block
                                    1-  855     .segment "code"; module=main, function=_initSys
     0000                           1-  857     _initSys:
                                    1-  858     ; 2 exit points
                                    1-  859     	.line	342, "main.c"; 	PORTA = 0x0E;
     0000 210E                      1-  860     	MOVIA	0x0e
                                    1-  861     	BANKSEL	_PORTA
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1-  862     	MOVAR	_PORTA
                                    1-  863     	.line	343, "main.c"; 	PORTB = 0x15;
     0003 2115                      1-  864     	MOVIA	0x15
     0004 00rr                      1-  865     	MOVAR	_PORTB
                                    1-  866     	.line	344, "main.c"; 	BPHCON = 0x57;				//pb7 5 3上拉
     0005 2157                      1-  867     	MOVIA	0x57
     0006 00rr                      1-  868     	MOVAR	_BPHCON
                                    1-  869     	.line	346, "main.c"; 	IOSTA =  0x01;					//PA0输入
     0007 2101                      1-  870     	MOVIA	0x01
     0008 000r                      1-  871     	IOST	_IOSTA
                                    1-  872     	.line	347, "main.c"; 	IOSTB = C_PB7_Input | C_PB5_Input | C_PB3_Input;
     0009 21A8                      1-  873     	MOVIA	0xa8
     000A 000r                      1-  874     	IOST	_IOSTB
                                    1-  875     	.line	348, "main.c"; 	PORTA = 0x0E;
     000B 210E                      1-  876     	MOVIA	0x0e
     000C 00rr                      1-  877     	MOVAR	_PORTA
                                    1-  878     	.line	349, "main.c"; 	PORTB = 0x15;                      	
     000D 2115                      1-  879     	MOVIA	0x15
     000E 00rr                      1-  880     	MOVAR	_PORTB
                                    1-  881     	.line	350, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT & LVR
     000F 21A8                      1-  882     	MOVIA	0xa8
     0010 00rr                      1-  883     	MOVAR	_PCON
                                    1-  884     	.line	352, "main.c"; 	PCON1 = C_TMR0_Dis;
     0011 0200                      1-  885     	CLRA	
     0012 000r                      1-  886     	IOST	_PCON1
                                    1-  887     	.line	354, "main.c"; 	TMR0 = 57;
     0013 2139                      1-  888     	MOVIA	0x39
     0014 00rr                      1-  889     	MOVAR	_TMR0
                                    1-  890     	.line	355, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0015 0200                      1-  891     	CLRA	
     0016 0003                      1-  892     	T0MD	
                                    1-  893     	.line	356, "main.c"; 	INTE =  C_INT_TMR0;
     0017 2101                      1-  894     	MOVIA	0x01
     0018 00rr                      1-  895     	MOVAR	_INTE
                                    1-  896     	.line	357, "main.c"; 	PCON1 = C_TMR0_En;
     0019 000r                      1-  897     	IOST	_PCON1
                                    1-  898     	.line	358, "main.c"; 	P2CR1 = 0x00;
     001A 0200                      1-  899     	CLRA	
     001B 00rr                      1-  900     	SFUN	_P2CR1
                                    1-  901     	.line	359, "main.c"; 	ENI();
     001C 0004                      1-  902     	ENI
                                    1-  903     	.line	360, "main.c"; 	}
                                    1-  904     	RETURN	
     001D 0010                      3-   40 m1      ret
                                    1-  905     ; exit point of _initSys
                                    1-  907     ;***
                                    1-  908     ;  pBlock Stats: dbName = C
                                    1-  909     ;***
                                    1-  910     ;has an exit
                                    1-  911     ;5 compiler assigned registers:
                                    1-  912     ;   r0x1015
                                    1-  913     ;   STK00
                                    1-  914     ;   r0x1016
                                    1-  915     ;   r0x1017
                                    1-  916     ;   r0x1018
                                    1-  917     ;; Starting pCode block
                                    1-  918     .segment "code"; module=main, function=_delay
                                    1-  920     ;local variable name mapping:
     0000                           1-  925     _delay:
                                    1-  926     ; 2 exit points
                                    1-  927     	.line	331, "main.c"; 	void delay(u16t time)
                                    1-  928     	BANKSEL	r0x1015
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  929     	MOVAR	r0x1015
     0002 01rr                      1-  930     	MOVR	STK00,W
                                    1-  931     	BANKSEL	r0x1016
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1-  932     	MOVAR	r0x1016
                                    1-  933     	.line	334, "main.c"; 	for(i=0;i<time;i++)
                                    1-  934     	BANKSEL	r0x1017
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1-  935     	CLRR	r0x1017
                                    1-  936     	BANKSEL	r0x1018
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1-  937     	CLRR	r0x1018
     0009                           1-  938     _00311_DS_:
                                    1-  939     	BANKSEL	r0x1015
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 01rr                      1-  940     	MOVR	r0x1015,W
                                    1-  941     	BANKSEL	r0x1018
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 04rr                      1-  942     	SUBAR	r0x1018,W
     000D 0903                      1-  943     	BTRSS	STATUS,2
                                    1-  944     	MGOTO	_00322_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  945     	BANKSEL	r0x1016
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1-  946     	MOVR	r0x1016,W
                                    1-  947     	BANKSEL	r0x1017
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 04rr                      1-  948     	SUBAR	r0x1017,W
     0013                           1-  949     _00322_DS_:
     0013 0C03                      1-  950     	BTRSC	STATUS,0
                                    1-  951     	MGOTO	_00313_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  952     	.line	335, "main.c"; 	NOP();
     0015 0000                      1-  953     	nop
                                    1-  954     	.line	334, "main.c"; 	for(i=0;i<time;i++)
                                    1-  955     	BANKSEL	r0x1017
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 05rr                      1-  956     	INCR	r0x1017,F
     0018 0903                      1-  957     	BTRSS	STATUS,2
                                    1-  958     	MGOTO	_00001_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  959     	BANKSEL	r0x1018
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 05rr                      1-  960     	INCR	r0x1018,F
     001C                           1-  961     _00001_DS_:
                                    1-  962     	MGOTO	_00311_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
     001D                           1-  963     _00313_DS_:
                                    1-  964     	.line	336, "main.c"; 	}
                                    1-  965     	RETURN	
     001D 0010                      3-   40 m1      ret
                                    1-  966     ; exit point of _delay
                                    1-  968     ;***
                                    1-  969     ;  pBlock Stats: dbName = C
                                    1-  970     ;***
                                    1-  971     ;has an exit
                                    1-  972     ;; Starting pCode block
                                    1-  973     .segment "code"; module=main, function=_pwmOff
     0000                           1-  975     _pwmOff:
                                    1-  976     ; 2 exit points
                                    1-  977     	.line	328, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1-  978     	CLRA	
     0001 00rr                      1-  979     	SFUN	_T1CR1
                                    1-  980     	.line	329, "main.c"; 	}
                                    1-  981     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1-  982     ; exit point of _pwmOff
                                    1-  984     ;***
                                    1-  985     ;  pBlock Stats: dbName = C
                                    1-  986     ;***
                                    1-  987     ;has an exit
                                    1-  988     ;; Starting pCode block
                                    1-  989     .segment "code"; module=main, function=_pwmOn
     0000                           1-  991     _pwmOn:
                                    1-  992     ; 2 exit points
                                    1-  993     	.line	319, "main.c"; 	TMRH  = 0x00;
     0000 0200                      1-  994     	CLRA	
     0001 00rr                      1-  995     	SFUN	_TMRH
                                    1-  996     	.line	320, "main.c"; 	TMR1  = 19;							// Move FFH to TMR1 LB register ( TMR1[9:0]=3FFH )
     0002 2113                      1-  997     	MOVIA	0x13
     0003 00rr                      1-  998     	SFUN	_TMR1
                                    1-  999     	.line	322, "main.c"; 	T1CR2	 = C_PS1_Div4;	// Prescaler 1:1 , Timer1 clock source is instruction clock
     0004 2101                      1- 1000     	MOVIA	0x01
     0005 00rr                      1- 1001     	SFUN	_T1CR2
                                    1- 1002     	.line	323, "main.c"; 	T1CR1	 = C_PWM1_En | C_PWM1_Active_Hi | C_TMR1_Reload | C_TMR1_En;	// Enable PWM1 , Active_High , Non-Stop mode ,reloaded from TMR1[9:0] , enable Timer1
     0006 2183                      1- 1003     	MOVIA	0x83
     0007 00rr                      1- 1004     	SFUN	_T1CR1
                                    1- 1005     	.line	324, "main.c"; 	}
                                    1- 1006     	RETURN	
     0008 0010                      3-   40 m1      ret
                                    1- 1007     ; exit point of _pwmOn
                                    1- 1009     ;***
                                    1- 1010     ;  pBlock Stats: dbName = C
                                    1- 1011     ;***
                                    1- 1012     ;has an exit
                                    1- 1013     ;functions called:
                                    1- 1014     ;   _pwmOn
                                    1- 1015     ;   _delay
                                    1- 1016     ;   _pwmOff
                                    1- 1017     ;   _delay
                                    1- 1018     ;   _pwmOn
                                    1- 1019     ;   _delay
                                    1- 1020     ;   _pwmOff
                                    1- 1021     ;   _delay
                                    1- 1022     ;2 compiler assigned registers:
                                    1- 1023     ;   r0x1019
                                    1- 1024     ;   STK00
                                    1- 1025     ;; Starting pCode block
                                    1- 1026     .segment "code"; module=main, function=_pwmCtr
                                    1- 1028     ;local variable name mapping:
     0000                           1- 1030     _pwmCtr:
                                    1- 1031     ; 2 exit points
                                    1- 1032     	.line	304, "main.c"; 	pwmOn();
                                    1- 1033     	MCALL	_pwmOn
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1034     	.line	305, "main.c"; 	for(u8t i=0;i<8;i++)
                                    1- 1035     	BANKSEL	r0x1019
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 02rr                      1- 1036     	CLRR	r0x1019
                                    1- 1037     ;;unsigned compare: left < lit (0x8=8), size=1
     0003                           1- 1038     _00296_DS_:
     0003 2108                      1- 1039     	MOVIA	0x08
                                    1- 1040     	BANKSEL	r0x1019
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 04rr                      1- 1041     	SUBAR	r0x1019,W
     0006 0C03                      1- 1042     	BTRSC	STATUS,0
                                    1- 1043     	MGOTO	_00294_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1044     	.line	307, "main.c"; 	delay(213);
     0008 21D5                      1- 1045     	MOVIA	0xd5
     0009 00rr                      1- 1046     	MOVAR	STK00
     000A 2100                      1- 1047     	MOVIA	0x00
                                    1- 1048     	MCALL	_delay
     000B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1049     	.line	305, "main.c"; 	for(u8t i=0;i<8;i++)
                                    1- 1050     	BANKSEL	r0x1019
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 05rr                      1- 1051     	INCR	r0x1019,F
                                    1- 1052     	MGOTO	_00296_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
     000F                           1- 1053     _00294_DS_:
                                    1- 1054     	.line	309, "main.c"; 	pwmOff();
                                    1- 1055     	MCALL	_pwmOff
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1056     	.line	310, "main.c"; 	PORTB |= 02;
     0010 18rr                      1- 1057     	BSR	_PORTB,1
                                    1- 1058     	.line	311, "main.c"; 	delay(62);
     0011 213E                      1- 1059     	MOVIA	0x3e
     0012 00rr                      1- 1060     	MOVAR	STK00
     0013 2100                      1- 1061     	MOVIA	0x00
                                    1- 1062     	MCALL	_delay
     0014 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1063     	.line	312, "main.c"; 	PORTB &= 0xFD;
     0015 1Crr                      1- 1064     	BCR	_PORTB,1
                                    1- 1065     	.line	313, "main.c"; 	}
                                    1- 1066     	RETURN	
     0016 0010                      3-   40 m1      ret
                                    1- 1067     ; exit point of _pwmCtr
                                    1- 1069     ;***
                                    1- 1070     ;  pBlock Stats: dbName = C
                                    1- 1071     ;***
                                    1- 1072     ;has an exit
                                    1- 1073     ;functions called:
                                    1- 1074     ;   _led1
                                    1- 1075     ;   _led2
                                    1- 1076     ;   _led3
                                    1- 1077     ;   _led1
                                    1- 1078     ;   _led2
                                    1- 1079     ;   _led3
                                    1- 1080     ;; Starting pCode block
                                    1- 1081     .segment "code"; module=main, function=_setMode
     0000                           1- 1083     _setMode:
                                    1- 1084     ; 2 exit points
                                    1- 1085     	.line	285, "main.c"; 	if(workStep == 1)
                                    1- 1086     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 1087     	MOVR	_workStep,W
     0002 2401                      1- 1088     	XORIA	0x01
     0003 0903                      1- 1089     	BTRSS	STATUS,2
                                    1- 1090     	MGOTO	_00287_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1091     	.line	287, "main.c"; 	PWM1DUTY = 3;
     0005 2103                      1- 1092     	MOVIA	0x03
     0006 00rr                      1- 1093     	SFUN	_PWM1DUTY
                                    1- 1094     	.line	288, "main.c"; 	led1();
                                    1- 1095     	MCALL	_led1
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1096     	MGOTO	_00289_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
     0009                           1- 1097     _00287_DS_:
                                    1- 1098     	.line	290, "main.c"; 	else if(workStep == 2)
                                    1- 1099     	BANKSEL	_workStep
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 01rr                      1- 1100     	MOVR	_workStep,W
     000B 2402                      1- 1101     	XORIA	0x02
     000C 0903                      1- 1102     	BTRSS	STATUS,2
                                    1- 1103     	MGOTO	_00284_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1104     	.line	292, "main.c"; 	PWM1DUTY = 5;
     000E 2105                      1- 1105     	MOVIA	0x05
     000F 00rr                      1- 1106     	SFUN	_PWM1DUTY
                                    1- 1107     	.line	293, "main.c"; 	led2();
                                    1- 1108     	MCALL	_led2
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1109     	MGOTO	_00289_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
     0012                           1- 1110     _00284_DS_:
                                    1- 1111     	.line	295, "main.c"; 	else if(workStep == 3)
                                    1- 1112     	BANKSEL	_workStep
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 1113     	MOVR	_workStep,W
     0014 2403                      1- 1114     	XORIA	0x03
     0015 0903                      1- 1115     	BTRSS	STATUS,2
                                    1- 1116     	MGOTO	_00289_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1117     	.line	297, "main.c"; 	PWM1DUTY = 9;
     0017 2109                      1- 1118     	MOVIA	0x09
     0018 00rr                      1- 1119     	SFUN	_PWM1DUTY
                                    1- 1120     	.line	298, "main.c"; 	led3();
                                    1- 1121     	MCALL	_led3
     0019 2rrr                      3-   66 m1      LCALL rom_address
     001A                           1- 1122     _00289_DS_:
                                    1- 1123     	.line	300, "main.c"; 	}
                                    1- 1124     	RETURN	
     001A 0010                      3-   40 m1      ret
                                    1- 1125     ; exit point of _setMode
                                    1- 1127     ;***
                                    1- 1128     ;  pBlock Stats: dbName = C
                                    1- 1129     ;***
                                    1- 1130     ;has an exit
                                    1- 1131     ;functions called:
                                    1- 1132     ;   _keyRead
                                    1- 1133     ;   _keyRead2
                                    1- 1134     ;   _keyRead
                                    1- 1135     ;   _keyRead2
                                    1- 1136     ;1 compiler assigned register :
                                    1- 1137     ;   r0x101A
                                    1- 1138     ;; Starting pCode block
                                    1- 1139     .segment "code"; module=main, function=_keyCtr
                                    1- 1141     ;local variable name mapping:
     0000                           1- 1144     _keyCtr:
                                    1- 1145     ; 2 exit points
                                    1- 1146     	.line	237, "main.c"; 	char modeclick = keyRead(0x20 & (~PORTB));
     0000 07rr                      1- 1147     	COMR	_PORTB,W
                                    1- 1148     	BANKSEL	r0x101A
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1149     	MOVAR	r0x101A
     0003 2120                      1- 1150     	MOVIA	0x20
     0004 10rr                      1- 1151     	ANDAR	r0x101A,F
     0005 01rr                      1- 1152     	MOVR	r0x101A,W
                                    1- 1153     	MCALL	_keyRead
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1154     	BANKSEL	r0x101A
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 00rr                      1- 1155     	MOVAR	r0x101A
                                    1- 1156     	.line	238, "main.c"; 	if(modeclick == 1)
     0009 2401                      1- 1157     	XORIA	0x01
     000A 0903                      1- 1158     	BTRSS	STATUS,2
                                    1- 1159     	MGOTO	_00268_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1160     	.line	240, "main.c"; 	if(pwStep == 0)
                                    1- 1161     	BANKSEL	_pwStep
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1- 1162     	MOVR	_pwStep,W
     000E 0D03                      1- 1163     	BTRSC	STATUS,2
                                    1- 1164     	.line	241, "main.c"; 	return;
                                    1- 1165     	MGOTO	_00276_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1166     	.line	242, "main.c"; 	if(mode)
                                    1- 1167     	BANKSEL	_mode
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 1168     	MOVR	_mode,W
     0012 0D03                      1- 1169     	BTRSC	STATUS,2
                                    1- 1170     	MGOTO	_00260_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1171     	.line	244, "main.c"; 	mode = 0;
     0014 02rr                      1- 1172     	CLRR	_mode
                                    1- 1173     	MGOTO	_00269_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
     0016                           1- 1174     _00260_DS_:
                                    1- 1175     	.line	248, "main.c"; 	mode = 1;
     0016 2101                      1- 1176     	MOVIA	0x01
                                    1- 1177     	BANKSEL	_mode
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1178     	MOVAR	_mode
                                    1- 1179     	MGOTO	_00269_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
     001A                           1- 1180     _00268_DS_:
                                    1- 1181     	.line	252, "main.c"; 	else if(modeclick == 2)
                                    1- 1182     	BANKSEL	r0x101A
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 01rr                      1- 1183     	MOVR	r0x101A,W
     001C 2402                      1- 1184     	XORIA	0x02
     001D 0903                      1- 1185     	BTRSS	STATUS,2
                                    1- 1186     	MGOTO	_00269_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1187     	.line	254, "main.c"; 	stopTime = 0;
                                    1- 1188     	BANKSEL	_stopTime
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 02rr                      1- 1189     	CLRR	_stopTime
     0021 02rr                      1- 1190     	CLRR	(_stopTime + 1)
                                    1- 1191     	.line	255, "main.c"; 	if(pwStep)
                                    1- 1192     	BANKSEL	_pwStep
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 1193     	MOVR	_pwStep,W
     0024 0D03                      1- 1194     	BTRSC	STATUS,2
                                    1- 1195     	MGOTO	_00263_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1196     	.line	257, "main.c"; 	pwStep = 0;
     0026 02rr                      1- 1197     	CLRR	_pwStep
                                    1- 1198     	.line	258, "main.c"; 	workStep = 0;
                                    1- 1199     	BANKSEL	_workStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 1200     	CLRR	_workStep
                                    1- 1201     	.line	259, "main.c"; 	mode = 0;
                                    1- 1202     	BANKSEL	_mode
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 02rr                      1- 1203     	CLRR	_mode
                                    1- 1204     	.line	260, "main.c"; 	PORTA = 0x0E;
     002B 210E                      1- 1205     	MOVIA	0x0e
                                    1- 1206     	BANKSEL	_PORTA
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1- 1207     	MOVAR	_PORTA
                                    1- 1208     	.line	261, "main.c"; 	PORTB = 0x15;
     002E 2115                      1- 1209     	MOVIA	0x15
     002F 00rr                      1- 1210     	MOVAR	_PORTB
                                    1- 1211     	MGOTO	_00269_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 1212     _00263_DS_:
                                    1- 1213     	.line	265, "main.c"; 	pwStep = 1;
     0031 2101                      1- 1214     	MOVIA	0x01
                                    1- 1215     	BANKSEL	_pwStep
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 00rr                      1- 1216     	MOVAR	_pwStep
                                    1- 1217     	.line	266, "main.c"; 	workStep = 0;
                                    1- 1218     	BANKSEL	_workStep
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 02rr                      1- 1219     	CLRR	_workStep
                                    1- 1220     	.line	267, "main.c"; 	mode = 0;
                                    1- 1221     	BANKSEL	_mode
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 02rr                      1- 1222     	CLRR	_mode
     0038                           1- 1223     _00269_DS_:
                                    1- 1224     	.line	270, "main.c"; 	char stepclick = keyRead2(0x08 & (~PORTB));
     0038 07rr                      1- 1225     	COMR	_PORTB,W
                                    1- 1226     	BANKSEL	r0x101A
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 00rr                      1- 1227     	MOVAR	r0x101A
     003B 2108                      1- 1228     	MOVIA	0x08
     003C 10rr                      1- 1229     	ANDAR	r0x101A,F
     003D 01rr                      1- 1230     	MOVR	r0x101A,W
                                    1- 1231     	MCALL	_keyRead2
     003E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1232     	BANKSEL	r0x101A
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 00rr                      1- 1233     	MOVAR	r0x101A
                                    1- 1234     	.line	271, "main.c"; 	if(stepclick > 0)
     0041 01rr                      1- 1235     	MOVR	r0x101A,W
     0042 0D03                      1- 1236     	BTRSC	STATUS,2
                                    1- 1237     	MGOTO	_00276_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1238     	.line	273, "main.c"; 	if(pwStep == 0)
                                    1- 1239     	BANKSEL	_pwStep
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 01rr                      1- 1240     	MOVR	_pwStep,W
     0046 0D03                      1- 1241     	BTRSC	STATUS,2
                                    1- 1242     	.line	274, "main.c"; 	return;
                                    1- 1243     	MGOTO	_00276_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1244     	.line	275, "main.c"; 	if(++workStep > 3)
                                    1- 1245     	BANKSEL	_workStep
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 05rr                      1- 1246     	INCR	_workStep,F
     004A 2104                      1- 1247     	MOVIA	0x04
     004B 04rr                      1- 1248     	SUBAR	_workStep,W
     004C 0803                      1- 1249     	BTRSS	STATUS,0
                                    1- 1250     	MGOTO	_00276_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1251     	.line	277, "main.c"; 	workStep = 1;
     004E 2101                      1- 1252     	MOVIA	0x01
     004F 00rr                      1- 1253     	MOVAR	_workStep
     0050                           1- 1254     _00276_DS_:
                                    1- 1255     	.line	281, "main.c"; 	}
                                    1- 1256     	RETURN	
     0050 0010                      3-   40 m1      ret
                                    1- 1257     ; exit point of _keyCtr
                                    1- 1259     ;***
                                    1- 1260     ;  pBlock Stats: dbName = C
                                    1- 1261     ;***
                                    1- 1262     ;has an exit
                                    1- 1263     ;; Starting pCode block
                                    1- 1264     .segment "code"; module=main, function=_ledOff
     0000                           1- 1266     _ledOff:
                                    1- 1267     ; 2 exit points
                                    1- 1268     	.line	231, "main.c"; 	PORTA |= 0X0C;
     0000 210C                      1- 1269     	MOVIA	0x0c
                                    1- 1270     	BANKSEL	_PORTA
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 11rr                      1- 1271     	IORAR	_PORTA,F
                                    1- 1272     	.line	232, "main.c"; 	PORTB |= 0x01;
     0003 18rr                      1- 1273     	BSR	_PORTB,0
                                    1- 1274     	.line	233, "main.c"; 	}
                                    1- 1275     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1- 1276     ; exit point of _ledOff
                                    1- 1278     ;***
                                    1- 1279     ;  pBlock Stats: dbName = C
                                    1- 1280     ;***
                                    1- 1281     ;has an exit
                                    1- 1282     ;; Starting pCode block
                                    1- 1283     .segment "code"; module=main, function=_led3
     0000                           1- 1285     _led3:
                                    1- 1286     ; 2 exit points
                                    1- 1287     	.line	225, "main.c"; 	PORTA |= 0X0C;
     0000 210C                      1- 1288     	MOVIA	0x0c
                                    1- 1289     	BANKSEL	_PORTA
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 11rr                      1- 1290     	IORAR	_PORTA,F
                                    1- 1291     	.line	226, "main.c"; 	PORTB &= 0xFE;
     0003 1Crr                      1- 1292     	BCR	_PORTB,0
                                    1- 1293     	.line	227, "main.c"; 	}
                                    1- 1294     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1- 1295     ; exit point of _led3
                                    1- 1297     ;***
                                    1- 1298     ;  pBlock Stats: dbName = C
                                    1- 1299     ;***
                                    1- 1300     ;has an exit
                                    1- 1301     ;; Starting pCode block
                                    1- 1302     .segment "code"; module=main, function=_led2
     0000                           1- 1304     _led2:
                                    1- 1305     ; 2 exit points
                                    1- 1306     	.line	217, "main.c"; 	PORTA &= 0XF7;
                                    1- 1307     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 1Drr                      1- 1308     	BCR	_PORTA,3
                                    1- 1309     	.line	218, "main.c"; 	PORTA |= 0X04;
     0002 19rr                      1- 1310     	BSR	_PORTA,2
                                    1- 1311     	.line	219, "main.c"; 	PORTB |= 0x01;
     0003 18rr                      1- 1312     	BSR	_PORTB,0
                                    1- 1313     	.line	220, "main.c"; 	}
                                    1- 1314     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1- 1315     ; exit point of _led2
                                    1- 1317     ;***
                                    1- 1318     ;  pBlock Stats: dbName = C
                                    1- 1319     ;***
                                    1- 1320     ;has an exit
                                    1- 1321     ;; Starting pCode block
                                    1- 1322     .segment "code"; module=main, function=_led1
     0000                           1- 1324     _led1:
                                    1- 1325     ; 2 exit points
                                    1- 1326     	.line	209, "main.c"; 	PORTA &= 0XFB;
                                    1- 1327     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 1Drr                      1- 1328     	BCR	_PORTA,2
                                    1- 1329     	.line	210, "main.c"; 	PORTA |= 0X08;
     0002 19rr                      1- 1330     	BSR	_PORTA,3
                                    1- 1331     	.line	211, "main.c"; 	PORTB |= 0x01;
     0003 18rr                      1- 1332     	BSR	_PORTB,0
                                    1- 1333     	.line	212, "main.c"; 	}
                                    1- 1334     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1- 1335     ; exit point of _led1
                                    1- 1337     ;***
                                    1- 1338     ;  pBlock Stats: dbName = C
                                    1- 1339     ;***
                                    1- 1340     ;has an exit
                                    1- 1341     ;; Starting pCode block
                                    1- 1342     .segment "code"; module=main, function=_ledZM
     0000                           1- 1344     _ledZM:
                                    1- 1345     ; 2 exit points
                                    1- 1346     	.line	202, "main.c"; 	PORTA &= 0XFD;
                                    1- 1347     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 1Crr                      1- 1348     	BCR	_PORTA,1
                                    1- 1349     	.line	203, "main.c"; 	PORTB |= 0X04;
     0002 19rr                      1- 1350     	BSR	_PORTB,2
                                    1- 1351     	.line	204, "main.c"; 	}
                                    1- 1352     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 1353     ; exit point of _ledZM
                                    1- 1355     ;***
                                    1- 1356     ;  pBlock Stats: dbName = C
                                    1- 1357     ;***
                                    1- 1358     ;has an exit
                                    1- 1359     ;; Starting pCode block
                                    1- 1360     .segment "code"; module=main, function=_ledZF
     0000                           1- 1362     _ledZF:
                                    1- 1363     ; 2 exit points
                                    1- 1364     	.line	195, "main.c"; 	PORTB &= 0XFB;
     0000 1Drr                      1- 1365     	BCR	_PORTB,2
                                    1- 1366     	.line	196, "main.c"; 	PORTA |= 0X02;
                                    1- 1367     	BANKSEL	_PORTA
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 18rr                      1- 1368     	BSR	_PORTA,1
                                    1- 1369     	.line	197, "main.c"; 	}
                                    1- 1370     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 1371     ; exit point of _ledZF
                                    1- 1374     ;	code size estimation:
                                    1- 1375     ;	  448+   97 =   545 instructions ( 1284 byte)
                                    1- 1377     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000C
__PROCESSOR__           Constant 00800534
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8a053e.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A053E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000003FF
DATA ROM     = 0x00000000 - 0x000003FF
RESERVED MEM = 0x00000400 - 0x00000410
SRAM / SFR   = 0x00000000 - 0x00000000
