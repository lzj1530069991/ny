
                    Nyquest Technology Co., Ltd.

NYASM 2.30

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_LED6ON
                                    1-   18     	extern	_fgCtr
                                    1-   19     	extern	_LedCtr2
                                    1-   20     	extern	_checkInAD
                                    1-   21     	extern	_F_AIN3_Convert
                                    1-   22     	extern	__divuint
                                    1-   23     	extern	_PORTAbits
                                    1-   24     	extern	_PORTBbits
                                    1-   25     	extern	_PCONbits
                                    1-   26     	extern	_BWUCONbits
                                    1-   27     	extern	_ABPLCONbits
                                    1-   28     	extern	_BPHCONbits
                                    1-   29     	extern	_INTEbits
                                    1-   30     	extern	_INTFbits
                                    1-   31     	extern	_ADMDbits
                                    1-   32     	extern	_ADRbits
                                    1-   33     	extern	_ADVREFHbits
                                    1-   34     	extern	_ADCRbits
                                    1-   35     	extern	_AWUCONbits
                                    1-   36     	extern	_PACONbits
                                    1-   37     	extern	_INTEDGbits
                                    1-   38     	extern	_ANAENbits
                                    1-   39     	extern	_RFCbits
                                    1-   40     	extern	_INTE2bits
                                    1-   41     	extern	_INDF
                                    1-   42     	extern	_TMR0
                                    1-   43     	extern	_PCL
                                    1-   44     	extern	_STATUS
                                    1-   45     	extern	_FSR
                                    1-   46     	extern	_PORTA
                                    1-   47     	extern	_PORTB
                                    1-   48     	extern	_PCON
                                    1-   49     	extern	_BWUCON
                                    1-   50     	extern	_PCHBUF
                                    1-   51     	extern	_ABPLCON
                                    1-   52     	extern	_BPHCON
                                    1-   53     	extern	_INTE
                                    1-   54     	extern	_INTF
                                    1-   55     	extern	_ADMD
                                    1-   56     	extern	_ADR
                                    1-   57     	extern	_ADD
                                    1-   58     	extern	_ADVREFH
                                    1-   59     	extern	_ADCR
                                    1-   60     	extern	_AWUCON
                                    1-   61     	extern	_PACON
                                    1-   62     	extern	_INTEDG
                                    1-   63     	extern	_TMRH
                                    1-   64     	extern	_ANAEN
                                    1-   65     	extern	_RFC
                                    1-   66     	extern	_TM3RH
                                    1-   67     	extern	_INTE2
                                    1-   68     	extern	_TMR1
                                    1-   69     	extern	_T1CR1
                                    1-   70     	extern	_T1CR2
                                    1-   71     	extern	_PWM1DUTY
                                    1-   72     	extern	_PS1CV
                                    1-   73     	extern	_BZ1CR
                                    1-   74     	extern	_IRCR
                                    1-   75     	extern	_TBHP
                                    1-   76     	extern	_TBHD
                                    1-   77     	extern	_TMR2
                                    1-   78     	extern	_T2CR1
                                    1-   79     	extern	_T2CR2
                                    1-   80     	extern	_PWM2DUTY
                                    1-   81     	extern	_PS2CV
                                    1-   82     	extern	_BZ2CR
                                    1-   83     	extern	_OSCCR
                                    1-   84     	extern	_TMR3
                                    1-   85     	extern	_T3CR1
                                    1-   86     	extern	_T3CR2
                                    1-   87     	extern	_PWM3DUTY
                                    1-   88     	extern	_PS3CV
                                    1-   89     	extern	_BZ3CR
                                    1-   90     	extern	_IOSTA
                                    1-   91     	extern	_IOSTB
                                    1-   92     	extern	_APHCON
                                    1-   93     	extern	_PS0CV
                                    1-   94     	extern	_BODCON
                                    1-   95     	extern	_CMPCR
                                    1-   96     	extern	_PCON1
                                    1-   97     	extern	_T0MD
                                    1-   98     	extern	___sdcc_saved_fsr
                                    1-   99     	extern	___sdcc_saved_stk00
                                    1-  100     	extern	___sdcc_saved_stk01
                                    1-  101     	extern	__mulchar
                                    1-  102     	extern	__nyc_ny8_startup
                                    1-  103     ;--------------------------------------------------------
                                    1-  104     ; global declarations
                                    1-  105     ;--------------------------------------------------------
                                    1-  106     	extern	_F_wait_eoc
                                    1-  107     	extern	_F_AIN2_Convert
                                    1-  108     	extern	_F_AIN4_Convert
                                    1-  109     	extern	_checkOutA
                                    1-  110     	extern	_checkBatAD
                                    1-  111     	extern	_initAD
                                    1-  112     	extern	_delay
                                    1-  113     	extern	_chrgCtr
                                    1-  114     	extern	_keyRead
                                    1-  115     	extern	_gotoSleep
                                    1-  116     	extern	_pwmStop
                                    1-  117     	extern	_pwmInit
                                    1-  118     	extern	_pwm1Stop
                                    1-  119     	extern	_pwm1Init
                                    1-  120     	extern	_LED5ON
                                    1-  121     	extern	_LED4ON
                                    1-  122     	extern	_LED3ON
                                    1-  123     	extern	_LED2ON
                                    1-  124     	extern	_LED1ON
                                    1-  125     	extern	_LedInput
                                    1-  126     	extern	_ledShow
                                    1-  127     	extern	_initSys
                                    1-  128     	extern	_powerOff
                                    1-  129     	extern	_keyCtr
                                    1-  130     	extern	_isr
                                    1-  131     	extern	_main
                                    1-  132     	extern	_Status
                                    1-  133     	extern	_intCount
                                    1-  134     	extern	_count500ms
                                    1-  135     	extern	_keyCount
                                    1-  136     	extern	_workStep
                                    1-  137     	extern	_ledStep
                                    1-  138     	extern	_maxDuty
                                    1-  139     	extern	_pwStep
                                    1-  140     	extern	_R_AIN4_DATA
                                    1-  141     	extern	_R_AIN4_DATA_LB
                                    1-  142     	extern	_R_AIN2_DATA
                                    1-  143     	extern	_R_AIN2_DATA_LB
                                    1-  144     	extern	_chrgTime
                                    1-  145     	extern	_startStep
                                    1-  146     	extern	_sleepTime
                                    1-  147     	extern	_count200ms
                                    1-  148     	extern	_count1s
                                    1-  149     	extern	_count900s
                                    1-  150     	extern	_lowBatTime
                                    1-  151     	extern	_ledTime
                                    1-  152     	extern	_overCount
                                    1-  153     	extern	_chrgCount
                                    1-  154     	extern	_ledLightTime
                                    1-  155     	extern	_currentDuty
                                    1-  156     	extern	_fullCount
                                    1-  157     	extern	_shanshuoTime
                                    1-  158     	extern	_firstTime
                                    1-  159     	extern	_tempDuty
                                    1-  160     	extern	_lowCount
                                    1-  161     	extern	_cDuty
                                    1-  162     	extern	_tempLedStep
                                    1-  163     	extern	_count5S
                                    1-  164     	extern	_ledDeadTime
                                    1-  165     	extern	_lockLedStep
                                    1-  166     	extern	_closeCount
                                    1-  167     	extern	_chrgStep
                                    1-  168     	extern	_prePwStep
                                    1-  169     	extern	_chrgduty
                                    1-  170     	extern	_maxduty
                                    1-  171     	extern	_count50ms
                                    1-  172     	extern	_chrgFullFlag
                                    1-  173     	extern	_ledCount
                                    1-  174     	extern	_addTime
                                    1-  175     	extern	_subTime
                                    1-  176     	extern	_subMin
                                    1-  177     	extern	_chrgWaitTime
                                    1-  178     	extern	_tempSum
                                    1-  179     	extern	_count100
                                    1-  180     	extern	_tempResult
                                    1-  181     	extern	_debug
                                    1-  183     	extern PSAVE
                                    1-  184     	extern SSAVE
                                    1-  185     	extern WSAVE
                                    1-  186     	extern STK04
                                    1-  187     	extern STK03
                                    1-  188     	extern STK02
                                    1-  189     	extern STK01
                                    1-  190     	extern STK00
                                    1-  192     .segment "uninit", 0x20000040
 20000040                           1-  193     PSAVE:
                                    1-  194     	.res 1
 20000041                           1-  195     SSAVE:
                                    1-  196     	.res 1
 20000042                           1-  197     WSAVE:
                                    1-  198     	.res 1
 20000043                           1-  199     STK04:
                                    1-  200     	.res 1
 20000044                           1-  201     STK03:
                                    1-  202     	.res 1
 20000045                           1-  203     STK02:
                                    1-  204     	.res 1
 20000046                           1-  205     STK01:
                                    1-  206     	.res 1
 20000047                           1-  207     STK00:
                                    1-  208     	.res 1
                                    1-  210     ;--------------------------------------------------------
                                    1-  211     ; global definitions
                                    1-  212     ;--------------------------------------------------------
                                    1-  213     .segment "uninit"
     0000                           1-  214     _R_AIN4_DATA:
                                    1-  215     	.res	2
                                    1-  218     .segment "uninit"
     0000                           1-  219     _R_AIN4_DATA_LB:
                                    1-  220     	.res	1
                                    1-  223     .segment "uninit"
     0000                           1-  224     _R_AIN2_DATA:
                                    1-  225     	.res	2
                                    1-  228     .segment "uninit"
     0000                           1-  229     _R_AIN2_DATA_LB:
                                    1-  230     	.res	1
                                    1-  233     ;--------------------------------------------------------
                                    1-  234     ; absolute symbol definitions
                                    1-  235     ;--------------------------------------------------------
                                    1-  236     ;--------------------------------------------------------
                                    1-  237     ; compiler-defined variables
                                    1-  238     ;--------------------------------------------------------
                                    1-  239     .segment "uninit"
     0000                           1-  240     r0x105E:
                                    1-  241     	.res	1
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x1057:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x105D:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x105C:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x105B:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x105A:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x1059:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x1050:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x1058:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x1056:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1051:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1052:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1053:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x1055:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x103A:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x103B:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x104E:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x104F:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x1048:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x104B:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x1042:
                                    1-  301     	.res	1
                                    1-  302     .segment "uninit"
     0000                           1-  303     r0x1043:
                                    1-  304     	.res	1
                                    1-  305     .segment "uninit"
     0000                           1-  306     r0x1044:
                                    1-  307     	.res	1
                                    1-  308     .segment "uninit"
     0000                           1-  309     r0x1047:
                                    1-  310     	.res	1
                                    1-  311     .segment "uninit"
     0000                           1-  312     r0x103C:
                                    1-  313     	.res	1
                                    1-  314     .segment "uninit"
     0000                           1-  315     r0x103D:
                                    1-  316     	.res	1
                                    1-  317     .segment "uninit"
     0000                           1-  318     r0x103E:
                                    1-  319     	.res	1
                                    1-  320     .segment "uninit"
     0000                           1-  321     r0x1041:
                                    1-  322     	.res	1
                                    1-  323     ;--------------------------------------------------------
                                    1-  324     ; initialized data
                                    1-  325     ;--------------------------------------------------------
                                    1-  327     .segment "idata"
     0000                           1-  328     _Status:
     0000 0000                      1-  329     	dw	0x00
                                    1-  333     .segment "idata"
     0000                           1-  334     _intCount:
     0000 0000                      1-  335     	dw	0x00
                                    1-  339     .segment "idata"
     0000                           1-  340     _count500ms:
     0000 0000                      1-  341     	dw	0x00
                                    1-  345     .segment "idata"
     0000                           1-  346     _keyCount:
     0000 0000                      1-  347     	dw	0x00
                                    1-  351     .segment "idata"
     0000                           1-  352     _workStep:
     0000 0000                      1-  353     	dw	0x00
                                    1-  357     .segment "idata"
     0000                           1-  358     _ledStep:
     0000 0000                      1-  359     	dw	0x00
                                    1-  363     .segment "idata"
     0000                           1-  364     _maxDuty:
     0000 0000                      1-  365     	dw	0x00
                                    1-  369     .segment "idata"
     0000                           1-  370     _pwStep:
     0000 0000                      1-  371     	dw	0x00
                                    1-  375     .segment "idata"
     0000                           1-  376     _chrgTime:
     0000 0000 0000                 1-  377     	dw	0x00, 0x00
                                    1-  381     .segment "idata"
     0000                           1-  382     _startStep:
     0000 0000                      1-  383     	dw	0x00
                                    1-  387     .segment "idata"
     0000                           1-  388     _sleepTime:
     0000 0000 0000                 1-  389     	dw	0x00, 0x00
                                    1-  393     .segment "idata"
     0000                           1-  394     _count200ms:
     0000 0000                      1-  395     	dw	0x00
                                    1-  399     .segment "idata"
     0000                           1-  400     _count1s:
     0000 0000                      1-  401     	dw	0x00
                                    1-  405     .segment "idata"
     0000                           1-  406     _count900s:
     0000 0000 0000                 1-  407     	dw	0x00, 0x00
                                    1-  411     .segment "idata"
     0000                           1-  412     _lowBatTime:
     0000 0000                      1-  413     	dw	0x00
                                    1-  417     .segment "idata"
     0000                           1-  418     _ledTime:
     0000 0000                      1-  419     	dw	0x00
                                    1-  423     .segment "idata"
     0000                           1-  424     _overCount:
     0000 0000                      1-  425     	dw	0x00
                                    1-  429     .segment "idata"
     0000                           1-  430     _chrgCount:
     0000 0000                      1-  431     	dw	0x00
                                    1-  435     .segment "idata"
     0000                           1-  436     _ledLightTime:
     0000 0000                      1-  437     	dw	0x00
                                    1-  441     .segment "idata"
     0000                           1-  442     _currentDuty:
     0000 0000                      1-  443     	dw	0x00
                                    1-  447     .segment "idata"
     0000                           1-  448     _fullCount:
     0000 0000 0000                 1-  449     	dw	0x00, 0x00
                                    1-  453     .segment "idata"
     0000                           1-  454     _shanshuoTime:
     0000 0000                      1-  455     	dw	0x00
                                    1-  459     .segment "idata"
     0000                           1-  460     _firstTime:
     0000 0000                      1-  461     	dw	0x00
                                    1-  465     .segment "idata"
     0000                           1-  466     _tempDuty:
     0000 0000                      1-  467     	dw	0x00
                                    1-  471     .segment "idata"
     0000                           1-  472     _lowCount:
     0000 0000                      1-  473     	dw	0x00
                                    1-  477     .segment "idata"
     0000                           1-  478     _cDuty:
     0000 0000                      1-  479     	dw	0x00
                                    1-  483     .segment "idata"
     0000                           1-  484     _tempLedStep:
     0000 0000                      1-  485     	dw	0x00
                                    1-  489     .segment "idata"
     0000                           1-  490     _count5S:
     0000 0000 0000                 1-  491     	dw	0x00, 0x00
                                    1-  495     .segment "idata"
     0000                           1-  496     _ledDeadTime:
     0000 0000                      1-  497     	dw	0x00
                                    1-  501     .segment "idata"
     0000                           1-  502     _lockLedStep:
     0000 0000                      1-  503     	dw	0x00
                                    1-  507     .segment "idata"
     0000                           1-  508     _closeCount:
     0000 0000 0000                 1-  509     	dw	0x00, 0x00
                                    1-  513     .segment "idata"
     0000                           1-  514     _chrgStep:
     0000 0000                      1-  515     	dw	0x00
                                    1-  519     .segment "idata"
     0000                           1-  520     _prePwStep:
     0000 0000                      1-  521     	dw	0x00
                                    1-  525     .segment "idata"
     0000                           1-  526     _chrgduty:
     0000 0000                      1-  527     	dw	0x00
                                    1-  531     .segment "idata"
     0000                           1-  532     _maxduty:
     0000 0000                      1-  533     	dw	0x00
                                    1-  537     .segment "idata"
     0000                           1-  538     _count50ms:
     0000 0000                      1-  539     	dw	0x00
                                    1-  543     .segment "idata"
     0000                           1-  544     _chrgFullFlag:
     0000 0000                      1-  545     	dw	0x00
                                    1-  549     .segment "idata"
     0000                           1-  550     _ledCount:
     0000 0000                      1-  551     	dw	0x00
                                    1-  555     .segment "idata"
     0000                           1-  556     _addTime:
     0000 0000                      1-  557     	dw	0x00
                                    1-  561     .segment "idata"
     0000                           1-  562     _subTime:
     0000 0000                      1-  563     	dw	0x00
                                    1-  567     .segment "idata"
     0000                           1-  568     _subMin:
     0000 0000                      1-  569     	dw	0x00
                                    1-  573     .segment "idata"
     0000                           1-  574     _chrgWaitTime:
     0000 0000                      1-  575     	dw	0x00
                                    1-  579     .segment "idata"
     0000                           1-  580     _tempSum:
     0000 0000 0000                 1-  581     	dw	0x00, 0x00
                                    1-  585     .segment "idata"
     0000                           1-  586     _count100:
     0000 0000                      1-  587     	dw	0x00
                                    1-  591     .segment "idata"
     0000                           1-  592     _tempResult:
     0000 0000 0000                 1-  593     	dw	0x00, 0x00
                                    1-  597     .segment "idata"
     0000                           1-  598     _debug:
     0000 0000                      1-  599     	dw	0x00
                                    1-  602     ;--------------------------------------------------------
                                    1-  603     ; overlayable items in internal ram 
                                    1-  604     ;--------------------------------------------------------
                                    1-  605     ;	udata_ovr
                                    1-  606     ;--------------------------------------------------------
                                    1-  607     ; reset vector 
                                    1-  608     ;--------------------------------------------------------
                                    1-  609     ORG	0x0000
     0000 3rrr                      1-  610     	LGOTO	__nyc_ny8_startup
                                    1-  611     ;--------------------------------------------------------
                                    1-  612     ; interrupt and initialization code
                                    1-  613     ;--------------------------------------------------------
                                    1-  614     ORG 0x0008
                                    1-  615     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  617     .segment "code"
     0000                           1-  618     __sdcc_interrupt:
                                    1-  619     ;***
                                    1-  620     ;  pBlock Stats: dbName = I
                                    1-  621     ;***
                                    1-  622     ;2 compiler assigned registers:
                                    1-  623     ;   STK00
                                    1-  624     ;   STK01
                                    1-  625     ;; Starting pCode block
     0000                           1-  626     _isr:
                                    1-  627     ; 0 exit points
                                    1-  628     	.line	120, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  629     	MOVAR	WSAVE
     0001 1503                      1-  630     	SWAPR	STATUS,W
     0002 0283                      1-  631     	CLRR	STATUS
     0003 00rr                      1-  632     	MOVAR	SSAVE
     0004 010A                      1-  633     	MOVR	PCHBUF,W
     0005 028A                      1-  634     	CLRR	PCHBUF
     0006 00rr                      1-  635     	MOVAR	PSAVE
     0007 0104                      1-  636     	MOVR	FSR,W
                                    1-  637     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  638     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  639     	MOVR	STK00,W
                                    1-  640     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  641     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  642     	MOVR	STK01,W
                                    1-  643     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  644     	MOVAR	___sdcc_saved_stk01
                                    1-  645     	.line	122, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  646     	BTRSS	_INTFbits,0
                                    1-  647     	MGOTO	_00126_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  648     	.line	124, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  649     	MOVIA	0x37
     0013 03rr                      1-  650     	ADDAR	_TMR0,F
                                    1-  651     	.line	126, "main.c"; 	if(++intCount >= 100)
                                    1-  652     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  653     	INCR	_intCount,F
                                    1-  654     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  655     	MOVIA	0x64
     0017 04rr                      1-  656     	SUBAR	_intCount,W
     0018 0803                      1-  657     	BTRSS	STATUS,0
                                    1-  658     	MGOTO	_00126_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  659     	.line	128, "main.c"; 	IntFlag = 1;
                                    1-  660     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  661     	BSR	_Status,0
                                    1-  662     	.line	129, "main.c"; 	intCount = 0;
                                    1-  663     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  664     	CLRR	_intCount
                                    1-  665     	.line	130, "main.c"; 	if(++count500ms >= 40)
                                    1-  666     	BANKSEL	_count500ms
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 05rr                      1-  667     	INCR	_count500ms,F
                                    1-  668     ;;unsigned compare: left < lit (0x28=40), size=1
     0020 2128                      1-  669     	MOVIA	0x28
     0021 04rr                      1-  670     	SUBAR	_count500ms,W
     0022 0C03                      1-  671     	BTRSC	STATUS,0
                                    1-  672     	.line	131, "main.c"; 	count500ms = 0;
     0023 02rr                      1-  673     	CLRR	_count500ms
                                    1-  674     	.line	132, "main.c"; 	if(++count200ms >= 20)
                                    1-  675     	BANKSEL	_count200ms
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 05rr                      1-  676     	INCR	_count200ms,F
     0026 2114                      1-  677     	MOVIA	0x14
     0027 04rr                      1-  678     	SUBAR	_count200ms,W
     0028 0803                      1-  679     	BTRSS	STATUS,0
                                    1-  680     	MGOTO	_00110_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  681     	.line	134, "main.c"; 	count200ms = 0;
     002A 02rr                      1-  682     	CLRR	_count200ms
                                    1-  683     	.line	135, "main.c"; 	if(ledDeadTime > 0)
                                    1-  684     	BANKSEL	_ledDeadTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1-  685     	MOVR	_ledDeadTime,W
     002D 0903                      1-  686     	BTRSS	STATUS,2
                                    1-  687     	.line	136, "main.c"; 	--ledDeadTime;
     002E 06rr                      1-  688     	DECR	_ledDeadTime,F
     002F                           1-  689     _00110_DS_:
                                    1-  690     	.line	138, "main.c"; 	if(++count1s >= 100)
                                    1-  691     	BANKSEL	_count1s
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 05rr                      1-  692     	INCR	_count1s,F
     0031 2164                      1-  693     	MOVIA	0x64
     0032 04rr                      1-  694     	SUBAR	_count1s,W
     0033 0803                      1-  695     	BTRSS	STATUS,0
                                    1-  696     	MGOTO	_00126_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  697     	.line	140, "main.c"; 	count1s = 0;
     0035 02rr                      1-  698     	CLRR	_count1s
                                    1-  699     	.line	141, "main.c"; 	if(chrgFlag == 1 && pwStep == 6)
                                    1-  700     	BANKSEL	_Status
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 09rr                      1-  701     	BTRSS	_Status,3
                                    1-  702     	MGOTO	_00112_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  703     	BANKSEL	_pwStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1-  704     	MOVR	_pwStep,W
     003B 2406                      1-  705     	XORIA	0x06
     003C 0903                      1-  706     	BTRSS	STATUS,2
                                    1-  707     	MGOTO	_00112_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  708     	.line	143, "main.c"; 	++chrgTime;
                                    1-  709     	BANKSEL	_chrgTime
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 05rr                      1-  710     	INCR	_chrgTime,F
     0040 0D03                      1-  711     	BTRSC	STATUS,2
     0041 05rr                      1-  712     	INCR	(_chrgTime + 1),F
     0042                           1-  713     _00112_DS_:
                                    1-  714     	.line	146, "main.c"; 	if(ledLightTime > 0)
                                    1-  715     	BANKSEL	_ledLightTime
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1-  716     	MOVR	_ledLightTime,W
     0044 0903                      1-  717     	BTRSS	STATUS,2
                                    1-  718     	.line	147, "main.c"; 	--ledLightTime;
     0045 06rr                      1-  719     	DECR	_ledLightTime,F
                                    1-  720     	.line	148, "main.c"; 	if(shanshuoTime > 0)
                                    1-  721     	BANKSEL	_shanshuoTime
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 01rr                      1-  722     	MOVR	_shanshuoTime,W
     0048 0903                      1-  723     	BTRSS	STATUS,2
                                    1-  724     	.line	149, "main.c"; 	--shanshuoTime;
     0049 06rr                      1-  725     	DECR	_shanshuoTime,F
                                    1-  726     	.line	150, "main.c"; 	if(workStep)
                                    1-  727     	BANKSEL	_workStep
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1-  728     	MOVR	_workStep,W
     004C 0D03                      1-  729     	BTRSC	STATUS,2
                                    1-  730     	MGOTO	_00119_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  731     	.line	152, "main.c"; 	++count900s;
                                    1-  732     	BANKSEL	_count900s
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 05rr                      1-  733     	INCR	_count900s,F
     0050 0D03                      1-  734     	BTRSC	STATUS,2
     0051 05rr                      1-  735     	INCR	(_count900s + 1),F
                                    1-  736     	MGOTO	_00126_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
     0053                           1-  737     _00119_DS_:
                                    1-  738     	.line	156, "main.c"; 	count900s = 0;
                                    1-  739     	BANKSEL	_count900s
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 02rr                      1-  740     	CLRR	_count900s
     0055 02rr                      1-  741     	CLRR	(_count900s + 1)
     0056                           1-  742     _00126_DS_:
                                    1-  743     	.line	165, "main.c"; 	if(INTFbits.PABIF)
     0056 08rr                      1-  744     	BTRSS	_INTFbits,1
                                    1-  745     	MGOTO	_00128_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  746     	.line	167, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0058 21FD                      1-  747     	MOVIA	0xfd
     0059 00rr                      1-  748     	MOVAR	_INTF
     005A                           1-  749     _00128_DS_:
                                    1-  750     	.line	170, "main.c"; 	INTF = 0;
     005A 02rr                      1-  751     	CLRR	_INTF
                                    1-  752     	.line	172, "main.c"; 	}
                                    1-  753     	BANKSEL	___sdcc_saved_stk01
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 01rr                      1-  754     	MOVR	___sdcc_saved_stk01,W
     005D 00rr                      1-  755     	MOVAR	STK01
                                    1-  756     	BANKSEL	___sdcc_saved_stk00
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 01rr                      1-  757     	MOVR	___sdcc_saved_stk00,W
     0060 00rr                      1-  758     	MOVAR	STK00
                                    1-  759     	BANKSEL	___sdcc_saved_fsr
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1-  760     	MOVR	___sdcc_saved_fsr,W
     0063 0084                      1-  761     	MOVAR	FSR
     0064 01rr                      1-  762     	MOVR	PSAVE,W
     0065 008A                      1-  763     	MOVAR	PCHBUF
     0066 0283                      1-  764     	CLRR	STATUS
     0067 15rr                      1-  765     	SWAPR	SSAVE,W
     0068 0083                      1-  766     	MOVAR	STATUS
     0069 15rr                      1-  767     	SWAPR	WSAVE,F
     006A 15rr                      1-  768     	SWAPR	WSAVE,W
     006B                           1-  769     END_OF_INTERRUPT:
     006B 0011                      1-  770     	RETIE	
                                    1-  772     ;--------------------------------------------------------
                                    1-  773     ; code
                                    1-  774     ;--------------------------------------------------------
                                    1-  775     ;***
                                    1-  776     ;  pBlock Stats: dbName = M
                                    1-  777     ;***
                                    1-  778     ;has an exit
                                    1-  779     ;functions called:
                                    1-  780     ;   _initSys
                                    1-  781     ;   _initAD
                                    1-  782     ;   _ledShow
                                    1-  783     ;   _pwmStop
                                    1-  784     ;   _powerOff
                                    1-  785     ;   _keyCtr
                                    1-  786     ;   _checkBatAD
                                    1-  787     ;   _checkOutA
                                    1-  788     ;   _chrgCtr
                                    1-  789     ;   _gotoSleep
                                    1-  790     ;   _powerOff
                                    1-  791     ;   _initSys
                                    1-  792     ;   _initAD
                                    1-  793     ;   _ledShow
                                    1-  794     ;   _pwmStop
                                    1-  795     ;   _powerOff
                                    1-  796     ;   _keyCtr
                                    1-  797     ;   _checkBatAD
                                    1-  798     ;   _checkOutA
                                    1-  799     ;   _chrgCtr
                                    1-  800     ;   _gotoSleep
                                    1-  801     ;   _powerOff
                                    1-  802     ;; Starting pCode block
                                    1-  803     .segment "code"; module=main, function=_main
     0000                           1-  805     _main:
                                    1-  806     ; 2 exit points
                                    1-  807     	.line	176, "main.c"; 	initSys();
                                    1-  808     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  809     	.line	177, "main.c"; 	initAD();
                                    1-  810     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  811     _00167_DS_:
                                    1-  812     	.line	180, "main.c"; 	CLRWDT();
     0002 0002                      1-  813     	clrwdt
                                    1-  814     	.line	181, "main.c"; 	ledShow();
                                    1-  815     	MCALL	_ledShow
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  816     	.line	195, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  817     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  818     	MOVR	_workStep,W
     0006 0D03                      1-  819     	BTRSC	STATUS,2
                                    1-  820     	MGOTO	_00134_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  821     	BANKSEL	_currentDuty
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 01rr                      1-  822     	MOVR	_currentDuty,W
                                    1-  823     	BANKSEL	_maxDuty
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 04rr                      1-  824     	SUBAR	_maxDuty,W
     000C 0C03                      1-  825     	BTRSC	STATUS,0
                                    1-  826     	MGOTO	_00134_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  827     	.line	197, "main.c"; 	currentDuty = currentDuty - 1;
                                    1-  828     	BANKSEL	_currentDuty
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 06rr                      1-  829     	DECR	_currentDuty,F
                                    1-  830     	.line	198, "main.c"; 	PWM2DUTY = currentDuty;
     0010 01rr                      1-  831     	MOVR	_currentDuty,W
     0011 00rr                      1-  832     	SFUN	_PWM2DUTY
                                    1-  833     	.line	199, "main.c"; 	cDuty = currentDuty;
     0012 01rr                      1-  834     	MOVR	_currentDuty,W
                                    1-  835     	BANKSEL	_cDuty
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 00rr                      1-  836     	MOVAR	_cDuty
     0015                           1-  837     _00134_DS_:
                                    1-  838     	.line	201, "main.c"; 	if(!IntFlag)
                                    1-  839     	BANKSEL	_Status
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 08rr                      1-  840     	BTRSS	_Status,0
                                    1-  841     	MGOTO	_00167_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  842     	.line	203, "main.c"; 	IntFlag = 0;
     0018 1Crr                      1-  843     	BCR	_Status,0
                                    1-  844     	.line	205, "main.c"; 	if(shanshuoTime == 0 && pwStep == 0 && workStep > 0)
                                    1-  845     	BANKSEL	_shanshuoTime
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1-  846     	MOVR	_shanshuoTime,W
     001B 0903                      1-  847     	BTRSS	STATUS,2
                                    1-  848     	MGOTO	_00141_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  849     	BANKSEL	_pwStep
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1-  850     	MOVR	_pwStep,W
     001F 0903                      1-  851     	BTRSS	STATUS,2
                                    1-  852     	MGOTO	_00141_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  853     	BANKSEL	_workStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1-  854     	MOVR	_workStep,W
     0023 0D03                      1-  855     	BTRSC	STATUS,2
                                    1-  856     	MGOTO	_00141_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  857     	.line	207, "main.c"; 	if(++closeCount >= 1000)
                                    1-  858     	BANKSEL	_closeCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 05rr                      1-  859     	INCR	_closeCount,F
     0027 0D03                      1-  860     	BTRSC	STATUS,2
     0028 05rr                      1-  861     	INCR	(_closeCount + 1),F
                                    1-  862     ;;unsigned compare: left < lit (0x3E8=1000), size=2
     0029 2103                      1-  863     	MOVIA	0x03
     002A 04rr                      1-  864     	SUBAR	(_closeCount + 1),W
     002B 0903                      1-  865     	BTRSS	STATUS,2
                                    1-  866     	MGOTO	_00235_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
     002D 21E8                      1-  867     	MOVIA	0xe8
     002E 04rr                      1-  868     	SUBAR	_closeCount,W
     002F                           1-  869     _00235_DS_:
     002F 0803                      1-  870     	BTRSS	STATUS,0
                                    1-  871     	MGOTO	_00142_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  872     	.line	209, "main.c"; 	closeCount = 0;
                                    1-  873     	BANKSEL	_closeCount
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 02rr                      1-  874     	CLRR	_closeCount
     0033 02rr                      1-  875     	CLRR	(_closeCount + 1)
                                    1-  876     	.line	210, "main.c"; 	workStep = 0;
                                    1-  877     	BANKSEL	_workStep
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 02rr                      1-  878     	CLRR	_workStep
                                    1-  879     	.line	211, "main.c"; 	ledStep = 0;
                                    1-  880     	BANKSEL	_ledStep
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 02rr                      1-  881     	CLRR	_ledStep
                                    1-  882     	.line	212, "main.c"; 	pwmStop();
                                    1-  883     	MCALL	_pwmStop
     0038 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  884     	MGOTO	_00142_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
     003A                           1-  885     _00141_DS_:
                                    1-  886     	.line	217, "main.c"; 	closeCount = 0;
                                    1-  887     	BANKSEL	_closeCount
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 02rr                      1-  888     	CLRR	_closeCount
     003C 02rr                      1-  889     	CLRR	(_closeCount + 1)
                                    1-  890     ;;unsigned compare: left < lit (0x5=5), size=1
     003D                           1-  891     _00142_DS_:
                                    1-  892     	.line	220, "main.c"; 	if(overCount >= 5 && workStep > 0)
     003D 2105                      1-  893     	MOVIA	0x05
                                    1-  894     	BANKSEL	_overCount
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 04rr                      1-  895     	SUBAR	_overCount,W
     0040 0803                      1-  896     	BTRSS	STATUS,0
                                    1-  897     	MGOTO	_00148_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  898     	BANKSEL	_workStep
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1-  899     	MOVR	_workStep,W
     0044 0D03                      1-  900     	BTRSC	STATUS,2
                                    1-  901     	MGOTO	_00148_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  902     	.line	222, "main.c"; 	if(++count5S > 500)
                                    1-  903     	BANKSEL	_count5S
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 05rr                      1-  904     	INCR	_count5S,F
     0048 0D03                      1-  905     	BTRSC	STATUS,2
     0049 05rr                      1-  906     	INCR	(_count5S + 1),F
                                    1-  907     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  908     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     004A 2101                      1-  909     	MOVIA	0x01
     004B 04rr                      1-  910     	SUBAR	(_count5S + 1),W
     004C 0903                      1-  911     	BTRSS	STATUS,2
                                    1-  912     	MGOTO	_00237_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
     004E 21F5                      1-  913     	MOVIA	0xf5
     004F 04rr                      1-  914     	SUBAR	_count5S,W
     0050                           1-  915     _00237_DS_:
     0050 0803                      1-  916     	BTRSS	STATUS,0
                                    1-  917     	MGOTO	_00149_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  918     	.line	224, "main.c"; 	overCount = 0;
                                    1-  919     	BANKSEL	_overCount
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 02rr                      1-  920     	CLRR	_overCount
                                    1-  921     	.line	225, "main.c"; 	count5S = 0;
                                    1-  922     	BANKSEL	_count5S
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 02rr                      1-  923     	CLRR	_count5S
     0056 02rr                      1-  924     	CLRR	(_count5S + 1)
                                    1-  925     	.line	226, "main.c"; 	ledDeadTime = 25;
     0057 2119                      1-  926     	MOVIA	0x19
                                    1-  927     	BANKSEL	_ledDeadTime
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 00rr                      1-  928     	MOVAR	_ledDeadTime
                                    1-  929     	.line	227, "main.c"; 	powerOff();
                                    1-  930     	MCALL	_powerOff
     005A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  931     	MGOTO	_00149_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
     005C                           1-  932     _00148_DS_:
                                    1-  933     	.line	232, "main.c"; 	count5S = 0;
                                    1-  934     	BANKSEL	_count5S
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 02rr                      1-  935     	CLRR	_count5S
     005E 02rr                      1-  936     	CLRR	(_count5S + 1)
     005F                           1-  937     _00149_DS_:
                                    1-  938     	.line	234, "main.c"; 	if(chrgFlag == 0)
                                    1-  939     	BANKSEL	_Status
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 09rr                      1-  940     	BTRSS	_Status,3
                                    1-  941     	.line	235, "main.c"; 	keyCtr();
                                    1-  942     	MCALL	_keyCtr
     0061 2rrr                      3-   66 m1      LCALL rom_address
     0062                           1-  943     _00152_DS_:
                                    1-  944     	.line	236, "main.c"; 	if(count200ms < 3)
     0062 2103                      1-  945     	MOVIA	0x03
                                    1-  946     	BANKSEL	_count200ms
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 04rr                      1-  947     	SUBAR	_count200ms,W
     0065 0803                      1-  948     	BTRSS	STATUS,0
                                    1-  949     	.line	238, "main.c"; 	checkBatAD();
                                    1-  950     	MCALL	_checkBatAD
     0066 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  951     	.line	240, "main.c"; 	checkOutA();
                                    1-  952     	MCALL	_checkOutA
     0067 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  953     	.line	241, "main.c"; 	chrgCtr();
                                    1-  954     	MCALL	_chrgCtr
     0068 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  955     	.line	244, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x08) == 0 && ledLightTime == 0 && ledDeadTime == 0 && shanshuoTime == 0)
                                    1-  956     	BANKSEL	_workStep
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 01rr                      1-  957     	MOVR	_workStep,W
     006B 0903                      1-  958     	BTRSS	STATUS,2
                                    1-  959     	MGOTO	_00158_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  960     	BANKSEL	_keyCount
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 01rr                      1-  961     	MOVR	_keyCount,W
     006F 0903                      1-  962     	BTRSS	STATUS,2
                                    1-  963     	MGOTO	_00158_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  964     	BANKSEL	_PORTA
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 0Drr                      1-  965     	BTRSC	_PORTA,3
                                    1-  966     	MGOTO	_00158_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  967     	BANKSEL	_ledLightTime
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 01rr                      1-  968     	MOVR	_ledLightTime,W
     0076 0903                      1-  969     	BTRSS	STATUS,2
                                    1-  970     	MGOTO	_00158_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  971     	BANKSEL	_ledDeadTime
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 01rr                      1-  972     	MOVR	_ledDeadTime,W
     007A 0903                      1-  973     	BTRSS	STATUS,2
                                    1-  974     	MGOTO	_00158_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  975     	BANKSEL	_shanshuoTime
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 01rr                      1-  976     	MOVR	_shanshuoTime,W
     007E 0903                      1-  977     	BTRSS	STATUS,2
                                    1-  978     	MGOTO	_00158_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  979     	.line	246, "main.c"; 	if(++sleepTime > 20)
                                    1-  980     	BANKSEL	_sleepTime
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 05rr                      1-  981     	INCR	_sleepTime,F
     0082 0D03                      1-  982     	BTRSC	STATUS,2
     0083 05rr                      1-  983     	INCR	(_sleepTime + 1),F
                                    1-  984     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  985     ;;unsigned compare: left >= lit (0x15=21), size=2
     0084 2100                      1-  986     	MOVIA	0x00
     0085 04rr                      1-  987     	SUBAR	(_sleepTime + 1),W
     0086 0903                      1-  988     	BTRSS	STATUS,2
                                    1-  989     	MGOTO	_00239_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
     0088 2115                      1-  990     	MOVIA	0x15
     0089 04rr                      1-  991     	SUBAR	_sleepTime,W
     008A                           1-  992     _00239_DS_:
     008A 0803                      1-  993     	BTRSS	STATUS,0
                                    1-  994     	MGOTO	_00158_DS_
     008B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  995     	.line	248, "main.c"; 	gotoSleep();
                                    1-  996     	MCALL	_gotoSleep
     008C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  997     ;;unsigned compare: left < lit (0x384=900), size=2
     008D                           1-  998     _00158_DS_:
                                    1-  999     	.line	252, "main.c"; 	if(count900s >= 900)
     008D 2103                      1- 1000     	MOVIA	0x03
                                    1- 1001     	BANKSEL	_count900s
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 04rr                      1- 1002     	SUBAR	(_count900s + 1),W
     0090 0903                      1- 1003     	BTRSS	STATUS,2
                                    1- 1004     	MGOTO	_00240_DS_
     0091 3rrr                      3-   63 m1      LGOTO rom_address
     0092 2184                      1- 1005     	MOVIA	0x84
     0093 04rr                      1- 1006     	SUBAR	_count900s,W
     0094                           1- 1007     _00240_DS_:
     0094 0803                      1- 1008     	BTRSS	STATUS,0
                                    1- 1009     	MGOTO	_00167_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1010     	.line	254, "main.c"; 	powerOff();
                                    1- 1011     	MCALL	_powerOff
     0096 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1012     	MGOTO	_00167_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1013     	.line	258, "main.c"; 	}
                                    1- 1014     	RETURN	
     0098 0010                      3-   40 m1      ret
                                    1- 1015     ; exit point of _main
                                    1- 1017     ;***
                                    1- 1018     ;  pBlock Stats: dbName = C
                                    1- 1019     ;***
                                    1- 1020     ;has an exit
                                    1- 1021     ;; Starting pCode block
                                    1- 1022     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1024     _F_wait_eoc:
                                    1- 1025     ; 2 exit points
     0000                           1- 1026     _00736_DS_:
                                    1- 1027     	.line	927, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1028     	BTRSS	_ADMDbits,5
                                    1- 1029     	MGOTO	_00736_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1030     	.line	929, "main.c"; 	}
                                    1- 1031     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1032     ; exit point of _F_wait_eoc
                                    1- 1034     ;***
                                    1- 1035     ;  pBlock Stats: dbName = C
                                    1- 1036     ;***
                                    1- 1037     ;has an exit
                                    1- 1038     ;functions called:
                                    1- 1039     ;   _delay
                                    1- 1040     ;   _F_wait_eoc
                                    1- 1041     ;   _delay
                                    1- 1042     ;   _F_wait_eoc
                                    1- 1043     ;6 compiler assigned registers:
                                    1- 1044     ;   r0x103C
                                    1- 1045     ;   r0x103D
                                    1- 1046     ;   r0x103E
                                    1- 1047     ;   r0x103F
                                    1- 1048     ;   r0x1040
                                    1- 1049     ;   r0x1041
                                    1- 1050     ;; Starting pCode block
                                    1- 1051     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1053     ;local variable name mapping:
     0000                           1- 1056     _F_AIN2_Convert:
                                    1- 1057     ; 2 exit points
                                    1- 1058     	.line	910, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1059     	BANKSEL	r0x103C
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1060     	MOVAR	r0x103C
                                    1- 1061     	.line	912, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1062     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1063     	CLRR	_R_AIN2_DATA_LB
                                    1- 1064     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1065     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1066     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1067     	.line	914, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1068     	MOVIA	0x92
     0008 00rr                      1- 1069     	MOVAR	_ADMD
                                    1- 1070     	.line	915, "main.c"; 	delay(200);	
     0009 21C8                      1- 1071     	MOVIA	0xc8
                                    1- 1072     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1073     	.line	916, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1074     	MOVIA	0x01
                                    1- 1075     	BANKSEL	r0x103D
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1076     	MOVAR	r0x103D
     000E                           1- 1077     _00729_DS_:
                                    1- 1078     	BANKSEL	r0x103D
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1079     	MOVR	r0x103D,W
                                    1- 1080     	BANKSEL	r0x103C
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1081     	SUBAR	r0x103C,W
     0012 0803                      1- 1082     	BTRSS	STATUS,0
                                    1- 1083     	MGOTO	_00731_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1084     	.line	918, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1085     	BSR	_ADMDbits,6
                                    1- 1086     	.line	919, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1087     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1088     	.line	920, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1089     	MOVIA	0x0f
     0017 10rr                      1- 1090     	ANDAR	_ADR,W
                                    1- 1091     ;;3	MOVAR	r0x103E
                                    1- 1092     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1093     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1094     	.line	921, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1- 1095     	MOVR	_ADD,W
                                    1- 1096     	BANKSEL	r0x103E
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1097     	MOVAR	r0x103E
                                    1- 1098     ;;1	CLRR	r0x103F
                                    1- 1099     ;;108	MOVR	r0x103E,W
                                    1- 1100     ;;106	MOVAR	r0x1040
     001D 2100                      1- 1101     	MOVIA	0x00
                                    1- 1102     	BANKSEL	r0x1041
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1103     	MOVAR	r0x1041
                                    1- 1104     ;;107	MOVR	r0x1040,W
                                    1- 1105     	BANKSEL	r0x103E
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1106     	MOVR	r0x103E,W
                                    1- 1107     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1108     	ADDAR	_R_AIN2_DATA,F
                                    1- 1109     	BANKSEL	r0x1041
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1110     	MOVR	r0x1041,W
     0026 0C03                      1- 1111     	BTRSC	STATUS,0
     0027 05rr                      1- 1112     	INCR	r0x1041,W
     0028 0D03                      1- 1113     	BTRSC	STATUS,2
                                    1- 1114     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1115     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1116     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1- 1117     _00001_DS_:
                                    1- 1118     	.line	916, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1119     	BANKSEL	r0x103D
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1120     	INCR	r0x103D,F
                                    1- 1121     	MGOTO	_00729_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1122     _00731_DS_:
                                    1- 1123     	.line	923, "main.c"; 	}
                                    1- 1124     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1125     ; exit point of _F_AIN2_Convert
                                    1- 1127     ;***
                                    1- 1128     ;  pBlock Stats: dbName = C
                                    1- 1129     ;***
                                    1- 1130     ;has an exit
                                    1- 1131     ;functions called:
                                    1- 1132     ;   _delay
                                    1- 1133     ;   _F_wait_eoc
                                    1- 1134     ;   _delay
                                    1- 1135     ;   _F_wait_eoc
                                    1- 1136     ;6 compiler assigned registers:
                                    1- 1137     ;   r0x1042
                                    1- 1138     ;   r0x1043
                                    1- 1139     ;   r0x1044
                                    1- 1140     ;   r0x1045
                                    1- 1141     ;   r0x1046
                                    1- 1142     ;   r0x1047
                                    1- 1143     ;; Starting pCode block
                                    1- 1144     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1146     ;local variable name mapping:
     0000                           1- 1149     _F_AIN4_Convert:
                                    1- 1150     ; 2 exit points
                                    1- 1151     	.line	895, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1152     	BANKSEL	r0x1042
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1153     	MOVAR	r0x1042
                                    1- 1154     	.line	897, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1155     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1156     	CLRR	_R_AIN4_DATA_LB
                                    1- 1157     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1158     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1159     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1160     	.line	899, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1161     	MOVIA	0x94
     0008 00rr                      1- 1162     	MOVAR	_ADMD
                                    1- 1163     	.line	900, "main.c"; 	delay(200);	
     0009 21C8                      1- 1164     	MOVIA	0xc8
                                    1- 1165     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1166     	.line	901, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1167     	MOVIA	0x01
                                    1- 1168     	BANKSEL	r0x1043
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1169     	MOVAR	r0x1043
     000E                           1- 1170     _00720_DS_:
                                    1- 1171     	BANKSEL	r0x1043
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1172     	MOVR	r0x1043,W
                                    1- 1173     	BANKSEL	r0x1042
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1174     	SUBAR	r0x1042,W
     0012 0803                      1- 1175     	BTRSS	STATUS,0
                                    1- 1176     	MGOTO	_00722_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1177     	.line	903, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1178     	BSR	_ADMDbits,6
                                    1- 1179     	.line	904, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1180     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1181     	.line	905, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1182     	MOVIA	0x0f
     0017 10rr                      1- 1183     	ANDAR	_ADR,W
                                    1- 1184     ;;3	MOVAR	r0x1044
                                    1- 1185     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1186     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1187     	.line	906, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1188     	MOVR	_ADD,W
                                    1- 1189     	BANKSEL	r0x1044
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1190     	MOVAR	r0x1044
                                    1- 1191     ;;1	CLRR	r0x1045
                                    1- 1192     ;;105	MOVR	r0x1044,W
                                    1- 1193     ;;103	MOVAR	r0x1046
     001D 2100                      1- 1194     	MOVIA	0x00
                                    1- 1195     	BANKSEL	r0x1047
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1196     	MOVAR	r0x1047
                                    1- 1197     ;;104	MOVR	r0x1046,W
                                    1- 1198     	BANKSEL	r0x1044
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1199     	MOVR	r0x1044,W
                                    1- 1200     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1201     	ADDAR	_R_AIN4_DATA,F
                                    1- 1202     	BANKSEL	r0x1047
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1203     	MOVR	r0x1047,W
     0026 0C03                      1- 1204     	BTRSC	STATUS,0
     0027 05rr                      1- 1205     	INCR	r0x1047,W
     0028 0D03                      1- 1206     	BTRSC	STATUS,2
                                    1- 1207     	MGOTO	_00002_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1208     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1209     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1210     _00002_DS_:
                                    1- 1211     	.line	901, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1212     	BANKSEL	r0x1043
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1213     	INCR	r0x1043,F
                                    1- 1214     	MGOTO	_00720_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1215     _00722_DS_:
                                    1- 1216     	.line	908, "main.c"; 	}
                                    1- 1217     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1218     ; exit point of _F_AIN4_Convert
                                    1- 1220     ;***
                                    1- 1221     ;  pBlock Stats: dbName = C
                                    1- 1222     ;***
                                    1- 1223     ;has an exit
                                    1- 1224     ;functions called:
                                    1- 1225     ;   _F_AIN4_Convert
                                    1- 1226     ;   __divuint
                                    1- 1227     ;   __mulchar
                                    1- 1228     ;   _F_AIN4_Convert
                                    1- 1229     ;   __divuint
                                    1- 1230     ;   __mulchar
                                    1- 1231     ;7 compiler assigned registers:
                                    1- 1232     ;   r0x1048
                                    1- 1233     ;   r0x1049
                                    1- 1234     ;   r0x104A
                                    1- 1235     ;   r0x104B
                                    1- 1236     ;   STK02
                                    1- 1237     ;   STK01
                                    1- 1238     ;   STK00
                                    1- 1239     ;; Starting pCode block
                                    1- 1240     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1242     _checkOutA:
                                    1- 1243     ; 2 exit points
                                    1- 1244     	.line	798, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1245     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1246     	CLRR	_R_AIN4_DATA_LB
                                    1- 1247     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1248     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1249     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1250     	.line	799, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1251     	MOVIA	0x08
                                    1- 1252     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1253     	.line	800, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1254     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1255     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1256     	ANDIA	0xf0
     000A 00rr                      1- 1257     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1258     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1259     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1260     	ANDIA	0x0f
     000E 11rr                      1- 1261     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1262     	XORAR	_R_AIN4_DATA,F
                                    1- 1263     	.line	801, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1264     	MOVIA	0xf0
                                    1- 1265     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1266     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1267     	.line	802, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1268     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1269     	BANKSEL	r0x1048
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1270     	MOVAR	r0x1048
                                    1- 1271     ;;1	CLRR	r0x1049
                                    1- 1272     ;;102	MOVR	r0x1048,W
                                    1- 1273     ;;100	MOVAR	r0x104A
     0016 2100                      1- 1274     	MOVIA	0x00
                                    1- 1275     	BANKSEL	r0x104B
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1276     	MOVAR	r0x104B
                                    1- 1277     ;;101	MOVR	r0x104A,W
                                    1- 1278     	BANKSEL	r0x1048
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1279     	MOVR	r0x1048,W
                                    1- 1280     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1281     	ADDAR	_R_AIN4_DATA,F
                                    1- 1282     	BANKSEL	r0x104B
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1283     	MOVR	r0x104B,W
     001F 0C03                      1- 1284     	BTRSC	STATUS,0
     0020 05rr                      1- 1285     	INCR	r0x104B,W
     0021 0D03                      1- 1286     	BTRSC	STATUS,2
                                    1- 1287     	MGOTO	_00003_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1288     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1289     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1290     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1291     _00003_DS_:
                                    1- 1292     	.line	803, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1293     	BCR	STATUS,0
                                    1- 1294     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1295     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1296     	RRR	_R_AIN4_DATA,F
                                    1- 1297     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1298     	BCR	STATUS,0
     002A 13rr                      1- 1299     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1300     	RRR	_R_AIN4_DATA,F
                                    1- 1301     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1302     	BCR	STATUS,0
     002D 13rr                      1- 1303     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1304     	RRR	_R_AIN4_DATA,F
                                    1- 1305     	.line	804, "main.c"; 	tempSum += R_AIN4_DATA;
     002F 01rr                      1- 1306     	MOVR	_R_AIN4_DATA,W
                                    1- 1307     	BANKSEL	_tempSum
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 03rr                      1- 1308     	ADDAR	_tempSum,F
                                    1- 1309     	BANKSEL	_R_AIN4_DATA
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 01rr                      1- 1310     	MOVR	(_R_AIN4_DATA + 1),W
     0034 0C03                      1- 1311     	BTRSC	STATUS,0
     0035 05rr                      1- 1312     	INCR	(_R_AIN4_DATA + 1),W
     0036 0D03                      1- 1313     	BTRSC	STATUS,2
                                    1- 1314     	MGOTO	_00004_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1315     	BANKSEL	_tempSum
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 03rr                      1- 1316     	ADDAR	(_tempSum + 1),F
     003A                           1- 1317     _00004_DS_:
                                    1- 1318     	.line	805, "main.c"; 	if(++count100 >= 10)
                                    1- 1319     	BANKSEL	_count100
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 05rr                      1- 1320     	INCR	_count100,F
                                    1- 1321     ;;unsigned compare: left < lit (0xA=10), size=1
     003C 210A                      1- 1322     	MOVIA	0x0a
     003D 04rr                      1- 1323     	SUBAR	_count100,W
     003E 0803                      1- 1324     	BTRSS	STATUS,0
                                    1- 1325     	MGOTO	_00654_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1326     	.line	807, "main.c"; 	count100 = 0;
     0040 02rr                      1- 1327     	CLRR	_count100
                                    1- 1328     	.line	808, "main.c"; 	tempResult = tempSum/10;
     0041 210A                      1- 1329     	MOVIA	0x0a
     0042 00rr                      1- 1330     	MOVAR	STK02
     0043 2100                      1- 1331     	MOVIA	0x00
     0044 00rr                      1- 1332     	MOVAR	STK01
                                    1- 1333     	BANKSEL	_tempSum
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1- 1334     	MOVR	_tempSum,W
     0047 00rr                      1- 1335     	MOVAR	STK00
     0048 01rr                      1- 1336     	MOVR	(_tempSum + 1),W
                                    1- 1337     	MCALL	__divuint
     0049 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1338     	BANKSEL	_tempResult
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 00rr                      1- 1339     	MOVAR	(_tempResult + 1)
     004C 01rr                      1- 1340     	MOVR	STK00,W
     004D 00rr                      1- 1341     	MOVAR	_tempResult
                                    1- 1342     	.line	809, "main.c"; 	tempSum = 0;
                                    1- 1343     	BANKSEL	_tempSum
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 02rr                      1- 1344     	CLRR	_tempSum
     0050 02rr                      1- 1345     	CLRR	(_tempSum + 1)
                                    1- 1346     ;;unsigned compare: left < lit (0x6=6), size=1
     0051                           1- 1347     _00654_DS_:
                                    1- 1348     	.line	812, "main.c"; 	if(workStep < 6 && tempResult > 200)
     0051 2106                      1- 1349     	MOVIA	0x06
                                    1- 1350     	BANKSEL	_workStep
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 04rr                      1- 1351     	SUBAR	_workStep,W
     0054 0C03                      1- 1352     	BTRSC	STATUS,0
                                    1- 1353     	MGOTO	_00670_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1354     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1355     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0056 2100                      1- 1356     	MOVIA	0x00
                                    1- 1357     	BANKSEL	_tempResult
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 04rr                      1- 1358     	SUBAR	(_tempResult + 1),W
     0059 0903                      1- 1359     	BTRSS	STATUS,2
                                    1- 1360     	MGOTO	_00709_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B 21C9                      1- 1361     	MOVIA	0xc9
     005C 04rr                      1- 1362     	SUBAR	_tempResult,W
     005D                           1- 1363     _00709_DS_:
     005D 0803                      1- 1364     	BTRSS	STATUS,0
                                    1- 1365     	MGOTO	_00670_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1366     	.line	814, "main.c"; 	if(++overCount > 5)
                                    1- 1367     	BANKSEL	_overCount
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 05rr                      1- 1368     	INCR	_overCount,F
                                    1- 1369     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1370     ;;unsigned compare: left >= lit (0x6=6), size=1
     0061 2106                      1- 1371     	MOVIA	0x06
     0062 04rr                      1- 1372     	SUBAR	_overCount,W
     0063 0803                      1- 1373     	BTRSS	STATUS,0
                                    1- 1374     	MGOTO	_00671_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1375     	.line	816, "main.c"; 	overCount = 5;
     0065 2105                      1- 1376     	MOVIA	0x05
     0066 00rr                      1- 1377     	MOVAR	_overCount
                                    1- 1378     	.line	816, "main.c"; 	}
                                    1- 1379     	MGOTO	_00671_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1380     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1381     ;;unsigned compare: left >= lit (0x191=401), size=2
     0068                           1- 1382     _00670_DS_:
                                    1- 1383     	.line	819, "main.c"; 	else if(tempResult > 400)
     0068 2101                      1- 1384     	MOVIA	0x01
                                    1- 1385     	BANKSEL	_tempResult
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 04rr                      1- 1386     	SUBAR	(_tempResult + 1),W
     006B 0903                      1- 1387     	BTRSS	STATUS,2
                                    1- 1388     	MGOTO	_00711_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
     006D 2191                      1- 1389     	MOVIA	0x91
     006E 04rr                      1- 1390     	SUBAR	_tempResult,W
     006F                           1- 1391     _00711_DS_:
     006F 0803                      1- 1392     	BTRSS	STATUS,0
                                    1- 1393     	MGOTO	_00667_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1394     	.line	821, "main.c"; 	if(++overCount > 5)
                                    1- 1395     	BANKSEL	_overCount
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 05rr                      1- 1396     	INCR	_overCount,F
                                    1- 1397     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1398     ;;unsigned compare: left >= lit (0x6=6), size=1
     0073 2106                      1- 1399     	MOVIA	0x06
     0074 04rr                      1- 1400     	SUBAR	_overCount,W
     0075 0803                      1- 1401     	BTRSS	STATUS,0
                                    1- 1402     	MGOTO	_00671_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1403     	.line	823, "main.c"; 	overCount = 5;
     0077 2105                      1- 1404     	MOVIA	0x05
     0078 00rr                      1- 1405     	MOVAR	_overCount
                                    1- 1406     	.line	823, "main.c"; 	//        		if(tempDuty > 50)
                                    1- 1407     	MGOTO	_00671_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1408     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1409     ;;unsigned compare: left >= lit (0x74=116), size=2
     007A                           1- 1410     _00667_DS_:
                                    1- 1411     	.line	831, "main.c"; 	else if(tempResult > 115)
     007A 2100                      1- 1412     	MOVIA	0x00
                                    1- 1413     	BANKSEL	_tempResult
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 04rr                      1- 1414     	SUBAR	(_tempResult + 1),W
     007D 0903                      1- 1415     	BTRSS	STATUS,2
                                    1- 1416     	MGOTO	_00713_DS_
     007E 3rrr                      3-   63 m1      LGOTO rom_address
     007F 2174                      1- 1417     	MOVIA	0x74
     0080 04rr                      1- 1418     	SUBAR	_tempResult,W
     0081                           1- 1419     _00713_DS_:
     0081 0803                      1- 1420     	BTRSS	STATUS,0
                                    1- 1421     	MGOTO	_00664_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1422     	.line	833, "main.c"; 	if(overCount > 0)
                                    1- 1423     	BANKSEL	_overCount
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 01rr                      1- 1424     	MOVR	_overCount,W
     0085 0903                      1- 1425     	BTRSS	STATUS,2
                                    1- 1426     	.line	835, "main.c"; 	overCount--;
     0086 06rr                      1- 1427     	DECR	_overCount,F
                                    1- 1428     	.line	838, "main.c"; 	tempDuty = 94 + workStep*6;
     0087 2106                      1- 1429     	MOVIA	0x06
     0088 00rr                      1- 1430     	MOVAR	STK00
                                    1- 1431     	BANKSEL	_workStep
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 01rr                      1- 1432     	MOVR	_workStep,W
                                    1- 1433     	MCALL	__mulchar
     008B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1434     	BANKSEL	r0x1048
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 00rr                      1- 1435     	MOVAR	r0x1048
     008E 215E                      1- 1436     	MOVIA	0x5e
     008F 03rr                      1- 1437     	ADDAR	r0x1048,W
                                    1- 1438     	BANKSEL	_tempDuty
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 00rr                      1- 1439     	MOVAR	_tempDuty
                                    1- 1440     	.line	838, "main.c"; 	tempDuty = 94 + workStep*6;
                                    1- 1441     	MGOTO	_00671_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
     0093                           1- 1442     _00664_DS_:
                                    1- 1443     	.line	866, "main.c"; 	if(overCount > 0)
                                    1- 1444     	BANKSEL	_overCount
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 01rr                      1- 1445     	MOVR	_overCount,W
     0095 0903                      1- 1446     	BTRSS	STATUS,2
                                    1- 1447     	.line	868, "main.c"; 	overCount--;
     0096 06rr                      1- 1448     	DECR	_overCount,F
     0097                           1- 1449     _00671_DS_:
                                    1- 1450     	.line	883, "main.c"; 	if(workStep > 0)
                                    1- 1451     	BANKSEL	_workStep
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 01rr                      1- 1452     	MOVR	_workStep,W
     0099 0D03                      1- 1453     	BTRSC	STATUS,2
                                    1- 1454     	MGOTO	_00675_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1455     	.line	884, "main.c"; 	ledStep = workStep;
     009B 01rr                      1- 1456     	MOVR	_workStep,W
                                    1- 1457     	BANKSEL	_ledStep
     009C rrrr                      3-  110 m1      .banksel ram_address
     009D 00rr                      1- 1458     	MOVAR	_ledStep
     009E                           1- 1459     _00675_DS_:
                                    1- 1460     	.line	888, "main.c"; 	}
                                    1- 1461     	RETURN	
     009E 0010                      3-   40 m1      ret
                                    1- 1462     ; exit point of _checkOutA
                                    1- 1464     ;***
                                    1- 1465     ;  pBlock Stats: dbName = C
                                    1- 1466     ;***
                                    1- 1467     ;has an exit
                                    1- 1468     ;functions called:
                                    1- 1469     ;   _F_AIN2_Convert
                                    1- 1470     ;   _F_AIN2_Convert
                                    1- 1471     ;4 compiler assigned registers:
                                    1- 1472     ;   r0x104C
                                    1- 1473     ;   r0x104D
                                    1- 1474     ;   r0x104E
                                    1- 1475     ;   r0x104F
                                    1- 1476     ;; Starting pCode block
                                    1- 1477     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1479     _checkBatAD:
                                    1- 1480     ; 2 exit points
                                    1- 1481     	.line	744, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1482     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1483     	CLRR	_R_AIN2_DATA_LB
                                    1- 1484     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1485     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1486     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1487     	.line	745, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1488     	MOVIA	0x08
                                    1- 1489     	MCALL	_F_AIN2_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1490     	.line	746, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1491     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1492     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1493     	ANDIA	0xf0
     000A 00rr                      1- 1494     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1495     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1496     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1497     	ANDIA	0x0f
     000E 11rr                      1- 1498     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1499     	XORAR	_R_AIN2_DATA,F
                                    1- 1500     	.line	747, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1501     	MOVIA	0xf0
                                    1- 1502     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1503     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1504     	.line	748, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1505     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1506     	BANKSEL	r0x104E
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1507     	MOVAR	r0x104E
                                    1- 1508     ;;1	MOVAR	r0x104C
                                    1- 1509     ;;1	CLRR	r0x104D
                                    1- 1510     ;;99	MOVR	r0x104C,W
     0016 2100                      1- 1511     	MOVIA	0x00
                                    1- 1512     	BANKSEL	r0x104F
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1513     	MOVAR	r0x104F
                                    1- 1514     	BANKSEL	r0x104E
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1515     	MOVR	r0x104E,W
                                    1- 1516     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1517     	ADDAR	_R_AIN2_DATA,F
                                    1- 1518     	BANKSEL	r0x104F
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1519     	MOVR	r0x104F,W
     001F 0C03                      1- 1520     	BTRSC	STATUS,0
     0020 05rr                      1- 1521     	INCR	r0x104F,W
     0021 0D03                      1- 1522     	BTRSC	STATUS,2
                                    1- 1523     	MGOTO	_00005_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1524     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1525     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1526     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1527     _00005_DS_:
                                    1- 1528     	.line	749, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0025 1C03                      1- 1529     	BCR	STATUS,0
                                    1- 1530     	BANKSEL	_R_AIN2_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1531     	RRR	(_R_AIN2_DATA + 1),F
     0028 13rr                      1- 1532     	RRR	_R_AIN2_DATA,F
                                    1- 1533     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1534     	BCR	STATUS,0
     002A 13rr                      1- 1535     	RRR	(_R_AIN2_DATA + 1),F
     002B 13rr                      1- 1536     	RRR	_R_AIN2_DATA,F
                                    1- 1537     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1538     	BCR	STATUS,0
     002D 13rr                      1- 1539     	RRR	(_R_AIN2_DATA + 1),F
     002E 13rr                      1- 1540     	RRR	_R_AIN2_DATA,F
                                    1- 1541     	.line	750, "main.c"; 	if(debug)
                                    1- 1542     	BANKSEL	_debug
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1543     	MOVR	_debug,W
     0031 0D03                      1- 1544     	BTRSC	STATUS,2
                                    1- 1545     	MGOTO	_00573_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1546     	.line	751, "main.c"; 	R_AIN2_DATA = BATTLE;
     0033 210E                      1- 1547     	MOVIA	0x0e
                                    1- 1548     	BANKSEL	_R_AIN2_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1549     	MOVAR	_R_AIN2_DATA
     0036 2106                      1- 1550     	MOVIA	0x06
     0037 00rr                      1- 1551     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1552     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1553     ;;unsigned compare: left >= lit (0x623=1571), size=2
     0038                           1- 1554     _00573_DS_:
                                    1- 1555     	.line	753, "main.c"; 	if(R_AIN2_DATA > 1570)
     0038 2106                      1- 1556     	MOVIA	0x06
                                    1- 1557     	BANKSEL	_R_AIN2_DATA
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1558     	SUBAR	(_R_AIN2_DATA + 1),W
     003B 0903                      1- 1559     	BTRSS	STATUS,2
                                    1- 1560     	MGOTO	_00641_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 2123                      1- 1561     	MOVIA	0x23
     003E 04rr                      1- 1562     	SUBAR	_R_AIN2_DATA,W
     003F                           1- 1563     _00641_DS_:
     003F 0803                      1- 1564     	BTRSS	STATUS,0
                                    1- 1565     	MGOTO	_00595_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1566     	.line	756, "main.c"; 	lowCount = 0;
                                    1- 1567     	BANKSEL	_lowCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 1568     	CLRR	_lowCount
                                    1- 1569     	.line	757, "main.c"; 	pwStep = 8;
     0043 2108                      1- 1570     	MOVIA	0x08
                                    1- 1571     	BANKSEL	_pwStep
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 1572     	MOVAR	_pwStep
                                    1- 1573     	MGOTO	_00596_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1574     ;;unsigned compare: left < lit (0x47E=1150), size=2
     0047                           1- 1575     _00595_DS_:
                                    1- 1576     	.line	759, "main.c"; 	else if(R_AIN2_DATA < 1150)
     0047 2104                      1- 1577     	MOVIA	0x04
                                    1- 1578     	BANKSEL	_R_AIN2_DATA
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 04rr                      1- 1579     	SUBAR	(_R_AIN2_DATA + 1),W
     004A 0903                      1- 1580     	BTRSS	STATUS,2
                                    1- 1581     	MGOTO	_00642_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C 217E                      1- 1582     	MOVIA	0x7e
     004D 04rr                      1- 1583     	SUBAR	_R_AIN2_DATA,W
     004E                           1- 1584     _00642_DS_:
     004E 0C03                      1- 1585     	BTRSC	STATUS,0
                                    1- 1586     	MGOTO	_00592_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1587     	.line	761, "main.c"; 	if(++lowCount < 10)
                                    1- 1588     	BANKSEL	_lowCount
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 05rr                      1- 1589     	INCR	_lowCount,F
                                    1- 1590     ;;unsigned compare: left < lit (0xA=10), size=1
     0052 210A                      1- 1591     	MOVIA	0x0a
     0053 04rr                      1- 1592     	SUBAR	_lowCount,W
     0054 0803                      1- 1593     	BTRSS	STATUS,0
                                    1- 1594     	.line	762, "main.c"; 	return;
                                    1- 1595     	MGOTO	_00603_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1596     	.line	763, "main.c"; 	lowCount = 10;
     0056 210A                      1- 1597     	MOVIA	0x0a
     0057 00rr                      1- 1598     	MOVAR	_lowCount
                                    1- 1599     	.line	764, "main.c"; 	pwStep = 0;
                                    1- 1600     	BANKSEL	_pwStep
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 02rr                      1- 1601     	CLRR	_pwStep
                                    1- 1602     	.line	765, "main.c"; 	R_AIN2_DATA = 1150;
     005A 217E                      1- 1603     	MOVIA	0x7e
                                    1- 1604     	BANKSEL	_R_AIN2_DATA
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 00rr                      1- 1605     	MOVAR	_R_AIN2_DATA
     005D 2104                      1- 1606     	MOVIA	0x04
     005E 00rr                      1- 1607     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1608     	MGOTO	_00596_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
     0060                           1- 1609     _00592_DS_:
                                    1- 1610     	.line	770, "main.c"; 	lowCount = 0;
                                    1- 1611     	BANKSEL	_lowCount
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 02rr                      1- 1612     	CLRR	_lowCount
                                    1- 1613     	.line	771, "main.c"; 	firstTime = 0;
                                    1- 1614     	BANKSEL	_firstTime
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 02rr                      1- 1615     	CLRR	_firstTime
                                    1- 1616     ;;unsigned compare: left < lit (0x4F6=1270), size=2
                                    1- 1617     	.line	772, "main.c"; 	if(R_AIN2_DATA < 1270)
     0064 2104                      1- 1618     	MOVIA	0x04
                                    1- 1619     	BANKSEL	_R_AIN2_DATA
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 04rr                      1- 1620     	SUBAR	(_R_AIN2_DATA + 1),W
     0067 0903                      1- 1621     	BTRSS	STATUS,2
                                    1- 1622     	MGOTO	_00644_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
     0069 21F6                      1- 1623     	MOVIA	0xf6
     006A 04rr                      1- 1624     	SUBAR	_R_AIN2_DATA,W
     006B                           1- 1625     _00644_DS_:
     006B 0C03                      1- 1626     	BTRSC	STATUS,0
                                    1- 1627     	MGOTO	_00589_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1628     	.line	773, "main.c"; 	pwStep = 1;
     006D 2101                      1- 1629     	MOVIA	0x01
                                    1- 1630     	BANKSEL	_pwStep
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 00rr                      1- 1631     	MOVAR	_pwStep
                                    1- 1632     	MGOTO	_00596_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1633     ;;unsigned compare: left < lit (0x56E=1390), size=2
     0071                           1- 1634     _00589_DS_:
                                    1- 1635     	.line	774, "main.c"; 	else if(R_AIN2_DATA < 1390)
     0071 2105                      1- 1636     	MOVIA	0x05
                                    1- 1637     	BANKSEL	_R_AIN2_DATA
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 04rr                      1- 1638     	SUBAR	(_R_AIN2_DATA + 1),W
     0074 0903                      1- 1639     	BTRSS	STATUS,2
                                    1- 1640     	MGOTO	_00645_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
     0076 216E                      1- 1641     	MOVIA	0x6e
     0077 04rr                      1- 1642     	SUBAR	_R_AIN2_DATA,W
     0078                           1- 1643     _00645_DS_:
     0078 0C03                      1- 1644     	BTRSC	STATUS,0
                                    1- 1645     	MGOTO	_00586_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1646     	.line	775, "main.c"; 	pwStep = 2;
     007A 2102                      1- 1647     	MOVIA	0x02
                                    1- 1648     	BANKSEL	_pwStep
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 00rr                      1- 1649     	MOVAR	_pwStep
                                    1- 1650     	MGOTO	_00596_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1651     ;;unsigned compare: left < lit (0x5AA=1450), size=2
     007E                           1- 1652     _00586_DS_:
                                    1- 1653     	.line	776, "main.c"; 	else if(R_AIN2_DATA < 1450)
     007E 2105                      1- 1654     	MOVIA	0x05
                                    1- 1655     	BANKSEL	_R_AIN2_DATA
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 04rr                      1- 1656     	SUBAR	(_R_AIN2_DATA + 1),W
     0081 0903                      1- 1657     	BTRSS	STATUS,2
                                    1- 1658     	MGOTO	_00646_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
     0083 21AA                      1- 1659     	MOVIA	0xaa
     0084 04rr                      1- 1660     	SUBAR	_R_AIN2_DATA,W
     0085                           1- 1661     _00646_DS_:
     0085 0C03                      1- 1662     	BTRSC	STATUS,0
                                    1- 1663     	MGOTO	_00583_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1664     	.line	777, "main.c"; 	pwStep = 3;
     0087 2103                      1- 1665     	MOVIA	0x03
                                    1- 1666     	BANKSEL	_pwStep
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 00rr                      1- 1667     	MOVAR	_pwStep
                                    1- 1668     	MGOTO	_00596_DS_
     008A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1669     ;;unsigned compare: left < lit (0x5E6=1510), size=2
     008B                           1- 1670     _00583_DS_:
                                    1- 1671     	.line	778, "main.c"; 	else if(R_AIN2_DATA < 1510)
     008B 2105                      1- 1672     	MOVIA	0x05
                                    1- 1673     	BANKSEL	_R_AIN2_DATA
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 04rr                      1- 1674     	SUBAR	(_R_AIN2_DATA + 1),W
     008E 0903                      1- 1675     	BTRSS	STATUS,2
                                    1- 1676     	MGOTO	_00647_DS_
     008F 3rrr                      3-   63 m1      LGOTO rom_address
     0090 21E6                      1- 1677     	MOVIA	0xe6
     0091 04rr                      1- 1678     	SUBAR	_R_AIN2_DATA,W
     0092                           1- 1679     _00647_DS_:
     0092 0C03                      1- 1680     	BTRSC	STATUS,0
                                    1- 1681     	MGOTO	_00580_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1682     	.line	779, "main.c"; 	pwStep = 4;
     0094 2104                      1- 1683     	MOVIA	0x04
                                    1- 1684     	BANKSEL	_pwStep
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 00rr                      1- 1685     	MOVAR	_pwStep
                                    1- 1686     	MGOTO	_00596_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1687     ;;unsigned compare: left < lit (0x604=1540), size=2
     0098                           1- 1688     _00580_DS_:
                                    1- 1689     	.line	780, "main.c"; 	else if(R_AIN2_DATA < 1540)
     0098 2106                      1- 1690     	MOVIA	0x06
                                    1- 1691     	BANKSEL	_R_AIN2_DATA
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 04rr                      1- 1692     	SUBAR	(_R_AIN2_DATA + 1),W
     009B 0903                      1- 1693     	BTRSS	STATUS,2
                                    1- 1694     	MGOTO	_00648_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
     009D 2104                      1- 1695     	MOVIA	0x04
     009E 04rr                      1- 1696     	SUBAR	_R_AIN2_DATA,W
     009F                           1- 1697     _00648_DS_:
     009F 0C03                      1- 1698     	BTRSC	STATUS,0
                                    1- 1699     	MGOTO	_00577_DS_
     00A0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1700     	.line	781, "main.c"; 	pwStep = 5;
     00A1 2105                      1- 1701     	MOVIA	0x05
                                    1- 1702     	BANKSEL	_pwStep
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 00rr                      1- 1703     	MOVAR	_pwStep
                                    1- 1704     	MGOTO	_00596_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
     00A5                           1- 1705     _00577_DS_:
                                    1- 1706     	.line	783, "main.c"; 	pwStep = 6;
     00A5 2106                      1- 1707     	MOVIA	0x06
                                    1- 1708     	BANKSEL	_pwStep
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 00rr                      1- 1709     	MOVAR	_pwStep
     00A8                           1- 1710     _00596_DS_:
                                    1- 1711     	.line	786, "main.c"; 	if(prePwStep == 0 || prePwStep < pwStep)
                                    1- 1712     	BANKSEL	_prePwStep
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 01rr                      1- 1713     	MOVR	_prePwStep,W
     00AA 0D03                      1- 1714     	BTRSC	STATUS,2
                                    1- 1715     	MGOTO	_00597_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1716     	BANKSEL	_pwStep
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 01rr                      1- 1717     	MOVR	_pwStep,W
                                    1- 1718     	BANKSEL	_prePwStep
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 04rr                      1- 1719     	SUBAR	_prePwStep,W
     00B0 0C03                      1- 1720     	BTRSC	STATUS,0
                                    1- 1721     	MGOTO	_00598_DS_
     00B1 3rrr                      3-   63 m1      LGOTO rom_address
     00B2                           1- 1722     _00597_DS_:
                                    1- 1723     	.line	787, "main.c"; 	prePwStep = pwStep;
                                    1- 1724     	BANKSEL	_pwStep
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 01rr                      1- 1725     	MOVR	_pwStep,W
                                    1- 1726     	BANKSEL	_prePwStep
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 00rr                      1- 1727     	MOVAR	_prePwStep
     00B6                           1- 1728     _00598_DS_:
                                    1- 1729     	.line	789, "main.c"; 	if(ledLightTime > 0 && prePwStep > 0)
                                    1- 1730     	BANKSEL	_ledLightTime
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 01rr                      1- 1731     	MOVR	_ledLightTime,W
     00B8 0D03                      1- 1732     	BTRSC	STATUS,2
                                    1- 1733     	MGOTO	_00603_DS_
     00B9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1734     	BANKSEL	_prePwStep
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 01rr                      1- 1735     	MOVR	_prePwStep,W
     00BC 0D03                      1- 1736     	BTRSC	STATUS,2
                                    1- 1737     	MGOTO	_00603_DS_
     00BD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1738     	.line	790, "main.c"; 	pwStep = prePwStep;
     00BE 01rr                      1- 1739     	MOVR	_prePwStep,W
                                    1- 1740     	BANKSEL	_pwStep
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 00rr                      1- 1741     	MOVAR	_pwStep
     00C1                           1- 1742     _00603_DS_:
                                    1- 1743     	.line	792, "main.c"; 	}
                                    1- 1744     	RETURN	
     00C1 0010                      3-   40 m1      ret
                                    1- 1745     ; exit point of _checkBatAD
                                    1- 1747     ;***
                                    1- 1748     ;  pBlock Stats: dbName = C
                                    1- 1749     ;***
                                    1- 1750     ;has an exit
                                    1- 1751     ;functions called:
                                    1- 1752     ;   _delay
                                    1- 1753     ;   _delay
                                    1- 1754     ;; Starting pCode block
                                    1- 1755     .segment "code"; module=main, function=_initAD
     0000                           1- 1757     _initAD:
                                    1- 1758     ; 2 exit points
                                    1- 1759     	.line	720, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1760     	MOVIA	0x84
     0001 00rr                      1- 1761     	MOVAR	_ADMD
                                    1- 1762     	.line	725, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1763     	CLRR	_ADVREFH
                                    1- 1764     	.line	730, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1765     	MOVIA	0x10
     0004 00rr                      1- 1766     	MOVAR	_ADR
                                    1- 1767     	.line	732, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1768     	MOVIA	0x03
     0006 00rr                      1- 1769     	MOVAR	_ADCR
                                    1- 1770     	.line	735, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1771     	BSR	_ADMDbits,4
                                    1- 1772     	.line	736, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1773     	MOVIA	0x64
                                    1- 1774     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1775     	.line	739, "main.c"; 	}
                                    1- 1776     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1777     ; exit point of _initAD
                                    1- 1779     ;***
                                    1- 1780     ;  pBlock Stats: dbName = C
                                    1- 1781     ;***
                                    1- 1782     ;has an exit
                                    1- 1783     ;2 compiler assigned registers:
                                    1- 1784     ;   r0x103A
                                    1- 1785     ;   r0x103B
                                    1- 1786     ;; Starting pCode block
                                    1- 1787     .segment "code"; module=main, function=_delay
                                    1- 1789     ;local variable name mapping:
     0000                           1- 1792     _delay:
                                    1- 1793     ; 2 exit points
                                    1- 1794     	.line	710, "main.c"; 	void delay(u8t time)
                                    1- 1795     	BANKSEL	r0x103A
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1796     	MOVAR	r0x103A
                                    1- 1797     	.line	712, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1798     	BANKSEL	r0x103B
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1799     	CLRR	r0x103B
     0004                           1- 1800     _00561_DS_:
                                    1- 1801     	BANKSEL	r0x103A
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 1802     	MOVR	r0x103A,W
                                    1- 1803     	BANKSEL	r0x103B
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1- 1804     	SUBAR	r0x103B,W
     0008 0C03                      1- 1805     	BTRSC	STATUS,0
                                    1- 1806     	MGOTO	_00563_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1807     	.line	713, "main.c"; 	NOP();
     000A 0000                      1- 1808     	nop
                                    1- 1809     	.line	712, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1810     	BANKSEL	r0x103B
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 1811     	INCR	r0x103B,F
                                    1- 1812     	MGOTO	_00561_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 1813     _00563_DS_:
                                    1- 1814     	.line	714, "main.c"; 	}
                                    1- 1815     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 1816     ; exit point of _delay
                                    1- 1818     ;***
                                    1- 1819     ;  pBlock Stats: dbName = C
                                    1- 1820     ;***
                                    1- 1821     ;has an exit
                                    1- 1822     ;functions called:
                                    1- 1823     ;   _pwmStop
                                    1- 1824     ;   _pwm1Stop
                                    1- 1825     ;   _pwm1Init
                                    1- 1826     ;   _pwm1Stop
                                    1- 1827     ;   _pwmStop
                                    1- 1828     ;   _pwm1Stop
                                    1- 1829     ;   _pwm1Init
                                    1- 1830     ;   _pwm1Stop
                                    1- 1831     ;5 compiler assigned registers:
                                    1- 1832     ;   r0x1051
                                    1- 1833     ;   r0x1052
                                    1- 1834     ;   r0x1053
                                    1- 1835     ;   r0x1054
                                    1- 1836     ;   r0x1055
                                    1- 1837     ;; Starting pCode block
                                    1- 1838     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1840     _chrgCtr:
                                    1- 1841     ; 2 exit points
                                    1- 1842     	.line	601, "main.c"; 	if(PORTA & 0x08)
                                    1- 1843     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 09rr                      1- 1844     	BTRSS	_PORTA,3
                                    1- 1845     	MGOTO	_00477_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1846     	.line	604, "main.c"; 	chrgFlag = 1;
                                    1- 1847     	BANKSEL	_Status
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 19rr                      1- 1848     	BSR	_Status,3
                                    1- 1849     	.line	605, "main.c"; 	workStep = 0;
                                    1- 1850     	BANKSEL	_workStep
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1- 1851     	CLRR	_workStep
                                    1- 1852     	.line	606, "main.c"; 	ledLightTime = 0;
                                    1- 1853     	BANKSEL	_ledLightTime
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1- 1854     	CLRR	_ledLightTime
                                    1- 1855     	.line	607, "main.c"; 	pwmStop();
                                    1- 1856     	MCALL	_pwmStop
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1857     ;;unsigned compare: left < lit (0x7=7), size=1
                                    1- 1858     	.line	609, "main.c"; 	if(pwStep >= 7 || chrgFullFlag)
     000A 2107                      1- 1859     	MOVIA	0x07
                                    1- 1860     	BANKSEL	_pwStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 04rr                      1- 1861     	SUBAR	_pwStep,W
     000D 0C03                      1- 1862     	BTRSC	STATUS,0
                                    1- 1863     	MGOTO	_00470_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1864     	BANKSEL	_chrgFullFlag
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 1865     	MOVR	_chrgFullFlag,W
     0011 0D03                      1- 1866     	BTRSC	STATUS,2
                                    1- 1867     	MGOTO	_00471_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
     0013                           1- 1868     _00470_DS_:
                                    1- 1869     	.line	611, "main.c"; 	chrgStep = 6;
     0013 2106                      1- 1870     	MOVIA	0x06
                                    1- 1871     	BANKSEL	_chrgStep
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1872     	MOVAR	_chrgStep
                                    1- 1873     	.line	613, "main.c"; 	ledStep = 6;
                                    1- 1874     	BANKSEL	_ledStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1875     	MOVAR	_ledStep
                                    1- 1876     	.line	614, "main.c"; 	if(++fullCount >= 2000)
                                    1- 1877     	BANKSEL	_fullCount
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 05rr                      1- 1878     	INCR	_fullCount,F
     001A 0D03                      1- 1879     	BTRSC	STATUS,2
     001B 05rr                      1- 1880     	INCR	(_fullCount + 1),F
                                    1- 1881     ;;unsigned compare: left < lit (0x7D0=2000), size=2
     001C 2107                      1- 1882     	MOVIA	0x07
     001D 04rr                      1- 1883     	SUBAR	(_fullCount + 1),W
     001E 0903                      1- 1884     	BTRSS	STATUS,2
                                    1- 1885     	MGOTO	_00542_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020 21D0                      1- 1886     	MOVIA	0xd0
     0021 04rr                      1- 1887     	SUBAR	_fullCount,W
     0022                           1- 1888     _00542_DS_:
     0022 0803                      1- 1889     	BTRSS	STATUS,0
                                    1- 1890     	MGOTO	_00479_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1891     	.line	616, "main.c"; 	fullCount = 2000;
     0024 21D0                      1- 1892     	MOVIA	0xd0
                                    1- 1893     	BANKSEL	_fullCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 00rr                      1- 1894     	MOVAR	_fullCount
     0027 2107                      1- 1895     	MOVIA	0x07
     0028 00rr                      1- 1896     	MOVAR	(_fullCount + 1)
                                    1- 1897     	.line	617, "main.c"; 	chrgFullFlag = 1;
     0029 2101                      1- 1898     	MOVIA	0x01
                                    1- 1899     	BANKSEL	_chrgFullFlag
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1- 1900     	MOVAR	_chrgFullFlag
                                    1- 1901     	.line	618, "main.c"; 	pwm1Stop();
                                    1- 1902     	MCALL	_pwm1Stop
     002C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1903     	.line	619, "main.c"; 	PORTB &= 0xF7;
     002D 1Drr                      1- 1904     	BCR	_PORTB,3
                                    1- 1905     	.line	620, "main.c"; 	IOSTB |= 0X08;
     002E 001r                      1- 1906     	IOSTR	_IOSTB
                                    1- 1907     	BANKSEL	r0x1051
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 00rr                      1- 1908     	MOVAR	r0x1051
     0031 19rr                      1- 1909     	BSR	r0x1051,3
     0032 01rr                      1- 1910     	MOVR	r0x1051,W
     0033 000r                      1- 1911     	IOST	_IOSTB
                                    1- 1912     	MGOTO	_00479_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
     0035                           1- 1913     _00471_DS_:
                                    1- 1914     	.line	628, "main.c"; 	IOSTB &= 0xF7;
     0035 001r                      1- 1915     	IOSTR	_IOSTB
                                    1- 1916     	BANKSEL	r0x1051
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 00rr                      1- 1917     	MOVAR	r0x1051
     0038 1Drr                      1- 1918     	BCR	r0x1051,3
     0039 01rr                      1- 1919     	MOVR	r0x1051,W
     003A 000r                      1- 1920     	IOST	_IOSTB
                                    1- 1921     	.line	629, "main.c"; 	fullCount = 0;
                                    1- 1922     	BANKSEL	_fullCount
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 02rr                      1- 1923     	CLRR	_fullCount
     003D 02rr                      1- 1924     	CLRR	(_fullCount + 1)
                                    1- 1925     	.line	630, "main.c"; 	if(count500ms == 0 && pwStep <= 6 && lockLedStep < 5)
                                    1- 1926     	BANKSEL	_count500ms
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 01rr                      1- 1927     	MOVR	_count500ms,W
     0040 0903                      1- 1928     	BTRSS	STATUS,2
                                    1- 1929     	MGOTO	_00448_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1930     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1931     ;;unsigned compare: left >= lit (0x7=7), size=1
     0042 2107                      1- 1932     	MOVIA	0x07
                                    1- 1933     	BANKSEL	_pwStep
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 04rr                      1- 1934     	SUBAR	_pwStep,W
     0045 0C03                      1- 1935     	BTRSC	STATUS,0
                                    1- 1936     	MGOTO	_00448_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1937     ;;unsigned compare: left < lit (0x5=5), size=1
     0047 2105                      1- 1938     	MOVIA	0x05
                                    1- 1939     	BANKSEL	_lockLedStep
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 04rr                      1- 1940     	SUBAR	_lockLedStep,W
     004A 0C03                      1- 1941     	BTRSC	STATUS,0
                                    1- 1942     	MGOTO	_00448_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1943     	.line	633, "main.c"; 	if(lockLedStep < pwStep - 1)
                                    1- 1944     	BANKSEL	_pwStep
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 01rr                      1- 1945     	MOVR	_pwStep,W
                                    1- 1946     	BANKSEL	r0x1051
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 00rr                      1- 1947     	MOVAR	r0x1051
                                    1- 1948     	BANKSEL	r0x1052
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 02rr                      1- 1949     	CLRR	r0x1052
     0052 21FF                      1- 1950     	MOVIA	0xff
                                    1- 1951     	BANKSEL	r0x1051
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 03rr                      1- 1952     	ADDAR	r0x1051,F
     0055 0C03                      1- 1953     	BTRSC	STATUS,0
                                    1- 1954     	MGOTO	_00006_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1955     	BANKSEL	r0x1052
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 06rr                      1- 1956     	DECR	r0x1052,F
     0059                           1- 1957     _00006_DS_:
                                    1- 1958     	BANKSEL	_lockLedStep
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 01rr                      1- 1959     	MOVR	_lockLedStep,W
                                    1- 1960     	BANKSEL	r0x1053
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 00rr                      1- 1961     	MOVAR	r0x1053
                                    1- 1962     ;;1	CLRR	r0x1054
     005D 2100                      1- 1963     	MOVIA	0x00
     005E 2580                      1- 1964     	ADDIA	0x80
                                    1- 1965     	BANKSEL	r0x1055
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 00rr                      1- 1966     	MOVAR	r0x1055
                                    1- 1967     	BANKSEL	r0x1052
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1- 1968     	MOVR	r0x1052,W
     0063 2580                      1- 1969     	ADDIA	0x80
                                    1- 1970     	BANKSEL	r0x1055
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 04rr                      1- 1971     	SUBAR	r0x1055,W
     0066 0903                      1- 1972     	BTRSS	STATUS,2
                                    1- 1973     	MGOTO	_00545_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1974     	BANKSEL	r0x1051
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 01rr                      1- 1975     	MOVR	r0x1051,W
                                    1- 1976     	BANKSEL	r0x1053
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 04rr                      1- 1977     	SUBAR	r0x1053,W
     006C                           1- 1978     _00545_DS_:
     006C 0C03                      1- 1979     	BTRSC	STATUS,0
                                    1- 1980     	MGOTO	_00443_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1981     	.line	635, "main.c"; 	if(lockLedStep == 0)
                                    1- 1982     	BANKSEL	_lockLedStep
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 01rr                      1- 1983     	MOVR	_lockLedStep,W
     0070 0903                      1- 1984     	BTRSS	STATUS,2
                                    1- 1985     	MGOTO	_00439_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1986     	.line	636, "main.c"; 	lockLedStep = pwStep - 1;
                                    1- 1987     	BANKSEL	_pwStep
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 06rr                      1- 1988     	DECR	_pwStep,W
                                    1- 1989     	BANKSEL	_lockLedStep
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 00rr                      1- 1990     	MOVAR	_lockLedStep
     0076                           1- 1991     _00439_DS_:
                                    1- 1992     	.line	637, "main.c"; 	if(++ledCount > 100)
                                    1- 1993     	BANKSEL	_ledCount
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 05rr                      1- 1994     	INCR	_ledCount,F
                                    1- 1995     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1996     ;;unsigned compare: left >= lit (0x65=101), size=1
     0078 2165                      1- 1997     	MOVIA	0x65
     0079 04rr                      1- 1998     	SUBAR	_ledCount,W
     007A 0803                      1- 1999     	BTRSS	STATUS,0
                                    1- 2000     	MGOTO	_00444_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2001     	.line	638, "main.c"; 	lockLedStep = pwStep - 1;
                                    1- 2002     	BANKSEL	_pwStep
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 06rr                      1- 2003     	DECR	_pwStep,W
                                    1- 2004     	BANKSEL	_lockLedStep
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 00rr                      1- 2005     	MOVAR	_lockLedStep
                                    1- 2006     	MGOTO	_00444_DS_
     0080 3rrr                      3-   63 m1      LGOTO rom_address
     0081                           1- 2007     _00443_DS_:
                                    1- 2008     	.line	643, "main.c"; 	ledCount = 0;
                                    1- 2009     	BANKSEL	_ledCount
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 02rr                      1- 2010     	CLRR	_ledCount
     0083                           1- 2011     _00444_DS_:
                                    1- 2012     	.line	645, "main.c"; 	if(++ledStep > 5)
                                    1- 2013     	BANKSEL	_ledStep
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 05rr                      1- 2014     	INCR	_ledStep,F
                                    1- 2015     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2016     ;;unsigned compare: left >= lit (0x6=6), size=1
     0085 2106                      1- 2017     	MOVIA	0x06
     0086 04rr                      1- 2018     	SUBAR	_ledStep,W
     0087 0803                      1- 2019     	BTRSS	STATUS,0
                                    1- 2020     	MGOTO	_00448_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2021     	.line	646, "main.c"; 	ledStep = lockLedStep;
                                    1- 2022     	BANKSEL	_lockLedStep
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 01rr                      1- 2023     	MOVR	_lockLedStep,W
                                    1- 2024     	BANKSEL	_ledStep
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 00rr                      1- 2025     	MOVAR	_ledStep
                                    1- 2026     ;;unsigned compare: left < lit (0x5=5), size=1
     008D                           1- 2027     _00448_DS_:
                                    1- 2028     	.line	648, "main.c"; 	if(lockLedStep >= 5)
     008D 2105                      1- 2029     	MOVIA	0x05
                                    1- 2030     	BANKSEL	_lockLedStep
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 04rr                      1- 2031     	SUBAR	_lockLedStep,W
     0090 0803                      1- 2032     	BTRSS	STATUS,0
                                    1- 2033     	MGOTO	_00452_DS_
     0091 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2034     	.line	650, "main.c"; 	ledStep = 5;	//亮灯不闪了
     0092 2105                      1- 2035     	MOVIA	0x05
                                    1- 2036     	BANKSEL	_ledStep
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 00rr                      1- 2037     	MOVAR	_ledStep
     0095                           1- 2038     _00452_DS_:
                                    1- 2039     	.line	652, "main.c"; 	PWM1DUTY = maxduty;
                                    1- 2040     	BANKSEL	_maxduty
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 01rr                      1- 2041     	MOVR	_maxduty,W
     0097 00rr                      1- 2042     	SFUN	_PWM1DUTY
                                    1- 2043     	.line	653, "main.c"; 	pwm1Init();
                                    1- 2044     	MCALL	_pwm1Init
     0098 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2045     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2046     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1- 2047     	.line	654, "main.c"; 	if(count200ms > 5)
     0099 2106                      1- 2048     	MOVIA	0x06
                                    1- 2049     	BANKSEL	_count200ms
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 04rr                      1- 2050     	SUBAR	_count200ms,W
     009C 0803                      1- 2051     	BTRSS	STATUS,0
                                    1- 2052     	MGOTO	_00479_DS_
     009D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2053     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2054     ;;unsigned compare: left >= lit (0x1C=28), size=2
                                    1- 2055     	.line	656, "main.c"; 	if(R_AIN4_DATA <= 27 && R_AIN4_DATA >=subMin)
     009E 2100                      1- 2056     	MOVIA	0x00
                                    1- 2057     	BANKSEL	_R_AIN4_DATA
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 04rr                      1- 2058     	SUBAR	(_R_AIN4_DATA + 1),W
     00A1 0903                      1- 2059     	BTRSS	STATUS,2
                                    1- 2060     	MGOTO	_00550_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
     00A3 211C                      1- 2061     	MOVIA	0x1c
     00A4 04rr                      1- 2062     	SUBAR	_R_AIN4_DATA,W
     00A5                           1- 2063     _00550_DS_:
     00A5 0C03                      1- 2064     	BTRSC	STATUS,0
                                    1- 2065     	MGOTO	_00454_DS_
     00A6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2066     	BANKSEL	_subMin
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 01rr                      1- 2067     	MOVR	_subMin,W
                                    1- 2068     	BANKSEL	r0x1051
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 00rr                      1- 2069     	MOVAR	r0x1051
                                    1- 2070     	BANKSEL	r0x1052
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 02rr                      1- 2071     	CLRR	r0x1052
     00AD 2100                      1- 2072     	MOVIA	0x00
                                    1- 2073     	BANKSEL	_R_AIN4_DATA
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 04rr                      1- 2074     	SUBAR	(_R_AIN4_DATA + 1),W
     00B0 0903                      1- 2075     	BTRSS	STATUS,2
                                    1- 2076     	MGOTO	_00551_DS_
     00B1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2077     	BANKSEL	r0x1051
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 01rr                      1- 2078     	MOVR	r0x1051,W
                                    1- 2079     	BANKSEL	_R_AIN4_DATA
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 04rr                      1- 2080     	SUBAR	_R_AIN4_DATA,W
     00B6                           1- 2081     _00551_DS_:
     00B6 0803                      1- 2082     	BTRSS	STATUS,0
                                    1- 2083     	MGOTO	_00454_DS_
     00B7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2084     	.line	658, "main.c"; 	addTime = subTime = 0;
                                    1- 2085     	BANKSEL	_subTime
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 02rr                      1- 2086     	CLRR	_subTime
                                    1- 2087     	BANKSEL	_addTime
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 02rr                      1- 2088     	CLRR	_addTime
                                    1- 2089     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2090     ;;unsigned compare: left >= lit (0x1C=28), size=2
     00BC                           1- 2091     _00454_DS_:
                                    1- 2092     	.line	660, "main.c"; 	if(R_AIN4_DATA > 27)
     00BC 2100                      1- 2093     	MOVIA	0x00
                                    1- 2094     	BANKSEL	_R_AIN4_DATA
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 04rr                      1- 2095     	SUBAR	(_R_AIN4_DATA + 1),W
     00BF 0903                      1- 2096     	BTRSS	STATUS,2
                                    1- 2097     	MGOTO	_00552_DS_
     00C0 3rrr                      3-   63 m1      LGOTO rom_address
     00C1 211C                      1- 2098     	MOVIA	0x1c
     00C2 04rr                      1- 2099     	SUBAR	_R_AIN4_DATA,W
     00C3                           1- 2100     _00552_DS_:
     00C3 0803                      1- 2101     	BTRSS	STATUS,0
                                    1- 2102     	MGOTO	_00463_DS_
     00C4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2103     	.line	662, "main.c"; 	if(++subTime > chrgWaitTime)
                                    1- 2104     	BANKSEL	_subTime
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 05rr                      1- 2105     	INCR	_subTime,F
     00C7 01rr                      1- 2106     	MOVR	_subTime,W
                                    1- 2107     	BANKSEL	_chrgWaitTime
     00C8 rrrr                      3-  110 m1      .banksel ram_address
     00C9 04rr                      1- 2108     	SUBAR	_chrgWaitTime,W
     00CA 0C03                      1- 2109     	BTRSC	STATUS,0
                                    1- 2110     	MGOTO	_00457_DS_
     00CB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2111     	.line	664, "main.c"; 	maxduty = maxduty - 1;
                                    1- 2112     	BANKSEL	_maxduty
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 06rr                      1- 2113     	DECR	_maxduty,F
                                    1- 2114     	.line	665, "main.c"; 	subTime = 0;
                                    1- 2115     	BANKSEL	_subTime
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 02rr                      1- 2116     	CLRR	_subTime
                                    1- 2117     	.line	666, "main.c"; 	subMin = 26;
     00D0 211A                      1- 2118     	MOVIA	0x1a
                                    1- 2119     	BANKSEL	_subMin
     00D1 rrrr                      3-  110 m1      .banksel ram_address
     00D2 00rr                      1- 2120     	MOVAR	_subMin
                                    1- 2121     	.line	667, "main.c"; 	chrgWaitTime = 250;
     00D3 21FA                      1- 2122     	MOVIA	0xfa
                                    1- 2123     	BANKSEL	_chrgWaitTime
     00D4 rrrr                      3-  110 m1      .banksel ram_address
     00D5 00rr                      1- 2124     	MOVAR	_chrgWaitTime
     00D6                           1- 2125     _00457_DS_:
                                    1- 2126     	.line	669, "main.c"; 	addTime = 0;
                                    1- 2127     	BANKSEL	_addTime
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 02rr                      1- 2128     	CLRR	_addTime
                                    1- 2129     	MGOTO	_00464_DS_
     00D8 3rrr                      3-   63 m1      LGOTO rom_address
     00D9                           1- 2130     _00463_DS_:
                                    1- 2131     	.line	671, "main.c"; 	else if(R_AIN4_DATA < subMin)
                                    1- 2132     	BANKSEL	_subMin
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 01rr                      1- 2133     	MOVR	_subMin,W
                                    1- 2134     	BANKSEL	r0x1051
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 00rr                      1- 2135     	MOVAR	r0x1051
                                    1- 2136     	BANKSEL	r0x1052
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 02rr                      1- 2137     	CLRR	r0x1052
     00DF 2100                      1- 2138     	MOVIA	0x00
                                    1- 2139     	BANKSEL	_R_AIN4_DATA
     00E0 rrrr                      3-  110 m1      .banksel ram_address
     00E1 04rr                      1- 2140     	SUBAR	(_R_AIN4_DATA + 1),W
     00E2 0903                      1- 2141     	BTRSS	STATUS,2
                                    1- 2142     	MGOTO	_00554_DS_
     00E3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2143     	BANKSEL	r0x1051
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 01rr                      1- 2144     	MOVR	r0x1051,W
                                    1- 2145     	BANKSEL	_R_AIN4_DATA
     00E6 rrrr                      3-  110 m1      .banksel ram_address
     00E7 04rr                      1- 2146     	SUBAR	_R_AIN4_DATA,W
     00E8                           1- 2147     _00554_DS_:
     00E8 0C03                      1- 2148     	BTRSC	STATUS,0
                                    1- 2149     	MGOTO	_00464_DS_
     00E9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2150     	.line	673, "main.c"; 	if(++addTime > chrgWaitTime)
                                    1- 2151     	BANKSEL	_addTime
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 05rr                      1- 2152     	INCR	_addTime,F
     00EC 01rr                      1- 2153     	MOVR	_addTime,W
                                    1- 2154     	BANKSEL	_chrgWaitTime
     00ED rrrr                      3-  110 m1      .banksel ram_address
     00EE 04rr                      1- 2155     	SUBAR	_chrgWaitTime,W
     00EF 0C03                      1- 2156     	BTRSC	STATUS,0
                                    1- 2157     	MGOTO	_00459_DS_
     00F0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2158     	.line	675, "main.c"; 	maxduty = maxduty + 1;
                                    1- 2159     	BANKSEL	_maxduty
     00F1 rrrr                      3-  110 m1      .banksel ram_address
     00F2 05rr                      1- 2160     	INCR	_maxduty,F
                                    1- 2161     	.line	676, "main.c"; 	addTime = 0;
                                    1- 2162     	BANKSEL	_addTime
     00F3 rrrr                      3-  110 m1      .banksel ram_address
     00F4 02rr                      1- 2163     	CLRR	_addTime
     00F5                           1- 2164     _00459_DS_:
                                    1- 2165     	.line	678, "main.c"; 	subTime = 0;
                                    1- 2166     	BANKSEL	_subTime
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 02rr                      1- 2167     	CLRR	_subTime
     00F7                           1- 2168     _00464_DS_:
                                    1- 2169     	.line	680, "main.c"; 	if(chrgduty < maxduty)
                                    1- 2170     	BANKSEL	_maxduty
     00F7 rrrr                      3-  110 m1      .banksel ram_address
     00F8 01rr                      1- 2171     	MOVR	_maxduty,W
                                    1- 2172     	BANKSEL	_chrgduty
     00F9 rrrr                      3-  110 m1      .banksel ram_address
     00FA 04rr                      1- 2173     	SUBAR	_chrgduty,W
     00FB 0C03                      1- 2174     	BTRSC	STATUS,0
                                    1- 2175     	MGOTO	_00466_DS_
     00FC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2176     	.line	681, "main.c"; 	chrgduty++;
     00FD 05rr                      1- 2177     	INCR	_chrgduty,F
                                    1- 2178     	MGOTO	_00479_DS_
     00FE 3rrr                      3-   63 m1      LGOTO rom_address
     00FF                           1- 2179     _00466_DS_:
                                    1- 2180     	.line	683, "main.c"; 	chrgduty = maxduty;
                                    1- 2181     	BANKSEL	_maxduty
     00FF rrrr                      3-  110 m1      .banksel ram_address
     0100 01rr                      1- 2182     	MOVR	_maxduty,W
                                    1- 2183     	BANKSEL	_chrgduty
     0101 rrrr                      3-  110 m1      .banksel ram_address
     0102 00rr                      1- 2184     	MOVAR	_chrgduty
                                    1- 2185     	MGOTO	_00479_DS_
     0103 3rrr                      3-   63 m1      LGOTO rom_address
     0104                           1- 2186     _00477_DS_:
                                    1- 2187     	.line	692, "main.c"; 	chrgWaitTime = 20;
     0104 2114                      1- 2188     	MOVIA	0x14
                                    1- 2189     	BANKSEL	_chrgWaitTime
     0105 rrrr                      3-  110 m1      .banksel ram_address
     0106 00rr                      1- 2190     	MOVAR	_chrgWaitTime
                                    1- 2191     	.line	693, "main.c"; 	subMin = 27;
     0107 211B                      1- 2192     	MOVIA	0x1b
                                    1- 2193     	BANKSEL	_subMin
     0108 rrrr                      3-  110 m1      .banksel ram_address
     0109 00rr                      1- 2194     	MOVAR	_subMin
                                    1- 2195     	.line	694, "main.c"; 	chrgFullFlag = 0;
                                    1- 2196     	BANKSEL	_chrgFullFlag
     010A rrrr                      3-  110 m1      .banksel ram_address
     010B 02rr                      1- 2197     	CLRR	_chrgFullFlag
                                    1- 2198     	.line	695, "main.c"; 	chrgduty = 0;
                                    1- 2199     	BANKSEL	_chrgduty
     010C rrrr                      3-  110 m1      .banksel ram_address
     010D 02rr                      1- 2200     	CLRR	_chrgduty
                                    1- 2201     	.line	696, "main.c"; 	maxduty = 0;
                                    1- 2202     	BANKSEL	_maxduty
     010E rrrr                      3-  110 m1      .banksel ram_address
     010F 02rr                      1- 2203     	CLRR	_maxduty
                                    1- 2204     	.line	697, "main.c"; 	chrgStep = 0;
                                    1- 2205     	BANKSEL	_chrgStep
     0110 rrrr                      3-  110 m1      .banksel ram_address
     0111 02rr                      1- 2206     	CLRR	_chrgStep
                                    1- 2207     	.line	698, "main.c"; 	lockLedStep = 0;
                                    1- 2208     	BANKSEL	_lockLedStep
     0112 rrrr                      3-  110 m1      .banksel ram_address
     0113 02rr                      1- 2209     	CLRR	_lockLedStep
                                    1- 2210     	.line	699, "main.c"; 	chrgTime = 0;
                                    1- 2211     	BANKSEL	_chrgTime
     0114 rrrr                      3-  110 m1      .banksel ram_address
     0115 02rr                      1- 2212     	CLRR	_chrgTime
     0116 02rr                      1- 2213     	CLRR	(_chrgTime + 1)
                                    1- 2214     	.line	700, "main.c"; 	pwm1Stop();
                                    1- 2215     	MCALL	_pwm1Stop
     0117 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2216     	.line	701, "main.c"; 	if(workStep == 0)
                                    1- 2217     	BANKSEL	_workStep
     0118 rrrr                      3-  110 m1      .banksel ram_address
     0119 01rr                      1- 2218     	MOVR	_workStep,W
     011A 0903                      1- 2219     	BTRSS	STATUS,2
                                    1- 2220     	MGOTO	_00007_DS_
     011B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2221     	.line	702, "main.c"; 	ledStep = 0;
                                    1- 2222     	BANKSEL	_ledStep
     011C rrrr                      3-  110 m1      .banksel ram_address
     011D 02rr                      1- 2223     	CLRR	_ledStep
     011E                           1- 2224     _00007_DS_:
                                    1- 2225     	.line	703, "main.c"; 	chrgFlag = 0;
                                    1- 2226     	BANKSEL	_Status
     011E rrrr                      3-  110 m1      .banksel ram_address
     011F 1Drr                      1- 2227     	BCR	_Status,3
                                    1- 2228     	.line	704, "main.c"; 	chrgTime = 0;	//重置充电计数
                                    1- 2229     	BANKSEL	_chrgTime
     0120 rrrr                      3-  110 m1      .banksel ram_address
     0121 02rr                      1- 2230     	CLRR	_chrgTime
     0122 02rr                      1- 2231     	CLRR	(_chrgTime + 1)
     0123                           1- 2232     _00479_DS_:
                                    1- 2233     	.line	707, "main.c"; 	}
                                    1- 2234     	RETURN	
     0123 0010                      3-   40 m1      ret
                                    1- 2235     ; exit point of _chrgCtr
                                    1- 2237     ;***
                                    1- 2238     ;  pBlock Stats: dbName = C
                                    1- 2239     ;***
                                    1- 2240     ;has an exit
                                    1- 2241     ;1 compiler assigned register :
                                    1- 2242     ;   r0x1056
                                    1- 2243     ;; Starting pCode block
                                    1- 2244     .segment "code"; module=main, function=_keyRead
                                    1- 2246     ;local variable name mapping:
     0000                           1- 2248     _keyRead:
                                    1- 2249     ; 2 exit points
                                    1- 2250     	.line	564, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2251     	BANKSEL	r0x1056
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2252     	MOVAR	r0x1056
                                    1- 2253     	.line	566, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2254     	MOVR	r0x1056,W
     0003 0D03                      1- 2255     	BTRSC	STATUS,2
                                    1- 2256     	MGOTO	_00429_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2257     	.line	568, "main.c"; 	keyCount++;
                                    1- 2258     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2259     	INCR	_keyCount,F
                                    1- 2260     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 2261     	.line	569, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 2262     	MOVIA	0x64
     0008 04rr                      1- 2263     	SUBAR	_keyCount,W
     0009 0803                      1- 2264     	BTRSS	STATUS,0
                                    1- 2265     	MGOTO	_00430_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2266     	.line	571, "main.c"; 	keyCount = 100;
     000B 2164                      1- 2267     	MOVIA	0x64
     000C 00rr                      1- 2268     	MOVAR	_keyCount
                                    1- 2269     	.line	572, "main.c"; 	if(!longPressFlag)
                                    1- 2270     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Crr                      1- 2271     	BTRSC	_Status,1
                                    1- 2272     	MGOTO	_00430_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2273     	.line	574, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 2274     	BSR	_Status,1
                                    1- 2275     	.line	575, "main.c"; 	return 2;
     0011 2102                      1- 2276     	MOVIA	0x02
                                    1- 2277     	MGOTO	_00431_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2278     ;;unsigned compare: left < lit (0x64=100), size=1
     0013                           1- 2279     _00429_DS_:
                                    1- 2280     	.line	581, "main.c"; 	if(keyCount >= 100)
     0013 2164                      1- 2281     	MOVIA	0x64
                                    1- 2282     	BANKSEL	_keyCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 2283     	SUBAR	_keyCount,W
     0016 0803                      1- 2284     	BTRSS	STATUS,0
                                    1- 2285     	MGOTO	_00426_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2286     	.line	583, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 2287     	CLRR	_keyCount
                                    1- 2288     	.line	584, "main.c"; 	longPressFlag = 0;
                                    1- 2289     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Crr                      1- 2290     	BCR	_Status,1
                                    1- 2291     	.line	585, "main.c"; 	return	0;
     001B 2100                      1- 2292     	MOVIA	0x00
                                    1- 2293     	MGOTO	_00431_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2294     ;;unsigned compare: left < lit (0x4=4), size=1
     001D                           1- 2295     _00426_DS_:
                                    1- 2296     	.line	587, "main.c"; 	else if(keyCount >= 4)
     001D 2104                      1- 2297     	MOVIA	0x04
                                    1- 2298     	BANKSEL	_keyCount
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 2299     	SUBAR	_keyCount,W
     0020 0803                      1- 2300     	BTRSS	STATUS,0
                                    1- 2301     	MGOTO	_00427_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2302     	.line	589, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 2303     	CLRR	_keyCount
                                    1- 2304     	.line	590, "main.c"; 	return	1;
     0023 2101                      1- 2305     	MOVIA	0x01
                                    1- 2306     	MGOTO	_00431_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 2307     _00427_DS_:
                                    1- 2308     	.line	592, "main.c"; 	keyCount = 0;
                                    1- 2309     	BANKSEL	_keyCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 2310     	CLRR	_keyCount
     0027                           1- 2311     _00430_DS_:
                                    1- 2312     	.line	594, "main.c"; 	return 0;
     0027 2100                      1- 2313     	MOVIA	0x00
     0028                           1- 2314     _00431_DS_:
                                    1- 2315     	.line	595, "main.c"; 	}
                                    1- 2316     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 2317     ; exit point of _keyRead
                                    1- 2319     ;***
                                    1- 2320     ;  pBlock Stats: dbName = C
                                    1- 2321     ;***
                                    1- 2322     ;has an exit
                                    1- 2323     ;functions called:
                                    1- 2324     ;   _LedInput
                                    1- 2325     ;   _pwmStop
                                    1- 2326     ;   _pwm1Stop
                                    1- 2327     ;   _LedInput
                                    1- 2328     ;   _pwmStop
                                    1- 2329     ;   _pwm1Stop
                                    1- 2330     ;; Starting pCode block
                                    1- 2331     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2333     _gotoSleep:
                                    1- 2334     ; 2 exit points
                                    1- 2335     	.line	528, "main.c"; 	count900s = 0;
                                    1- 2336     	BANKSEL	_count900s
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2337     	CLRR	_count900s
     0002 02rr                      1- 2338     	CLRR	(_count900s + 1)
                                    1- 2339     	.line	529, "main.c"; 	LedInput();
                                    1- 2340     	MCALL	_LedInput
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2341     	.line	530, "main.c"; 	sleepTime = 0;
                                    1- 2342     	BANKSEL	_sleepTime
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 2343     	CLRR	_sleepTime
     0006 02rr                      1- 2344     	CLRR	(_sleepTime + 1)
                                    1- 2345     	.line	532, "main.c"; 	pwmStop();
                                    1- 2346     	MCALL	_pwmStop
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2347     	.line	533, "main.c"; 	pwm1Stop();
                                    1- 2348     	MCALL	_pwm1Stop
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2349     	.line	534, "main.c"; 	IOSTA = 0xC8;
     0009 21C8                      1- 2350     	MOVIA	0xc8
     000A 000r                      1- 2351     	IOST	_IOSTA
                                    1- 2352     	.line	535, "main.c"; 	PORTA = 0x46;
     000B 2146                      1- 2353     	MOVIA	0x46
                                    1- 2354     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 2355     	MOVAR	_PORTA
                                    1- 2356     	.line	536, "main.c"; 	APHCON = 0x3F;
     000E 213F                      1- 2357     	MOVIA	0x3f
     000F 000r                      1- 2358     	IOST	_APHCON
                                    1- 2359     	.line	537, "main.c"; 	PORTB = 0x00;
     0010 02rr                      1- 2360     	CLRR	_PORTB
                                    1- 2361     	.line	538, "main.c"; 	workStep = 0;
                                    1- 2362     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 02rr                      1- 2363     	CLRR	_workStep
                                    1- 2364     	.line	539, "main.c"; 	AWUCON = 0x88;
     0013 2188                      1- 2365     	MOVIA	0x88
     0014 00rr                      1- 2366     	MOVAR	_AWUCON
                                    1- 2367     	.line	540, "main.c"; 	BWUCON = 0x00;
     0015 02rr                      1- 2368     	CLRR	_BWUCON
                                    1- 2369     	.line	541, "main.c"; 	redLedFlag = 0;
                                    1- 2370     	BANKSEL	_Status
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 1Drr                      1- 2371     	BCR	_Status,2
                                    1- 2372     	.line	544, "main.c"; 	INTE =  C_INT_PABKey;
     0018 2102                      1- 2373     	MOVIA	0x02
     0019 00rr                      1- 2374     	MOVAR	_INTE
                                    1- 2375     	.line	545, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     001A 2118                      1- 2376     	MOVIA	0x18
     001B 00rr                      1- 2377     	MOVAR	_PCON
                                    1- 2378     	.line	546, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     001C 02rr                      1- 2379     	CLRR	_INTF
                                    1- 2380     	.line	547, "main.c"; 	CLRWDT();
     001D 0002                      1- 2381     	clrwdt
                                    1- 2382     	.line	548, "main.c"; 	ENI();
     001E 0004                      1- 2383     	ENI
                                    1- 2384     	.line	549, "main.c"; 	SLEEP();
     001F 0001                      1- 2385     	sleep
                                    1- 2386     	.line	550, "main.c"; 	AWUCON = 0x00;
     0020 02rr                      1- 2387     	CLRR	_AWUCON
                                    1- 2388     	.line	551, "main.c"; 	IOSTA = C_PA7_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0021 21BE                      1- 2389     	MOVIA	0xbe
     0022 000r                      1- 2390     	IOST	_IOSTA
                                    1- 2391     	.line	552, "main.c"; 	IOSTB = 0x00;
     0023 0200                      1- 2392     	CLRA	
     0024 000r                      1- 2393     	IOST	_IOSTB
                                    1- 2394     	.line	553, "main.c"; 	PORTA = 0x00;
                                    1- 2395     	BANKSEL	_PORTA
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 2396     	CLRR	_PORTA
                                    1- 2397     	.line	554, "main.c"; 	APHCON = 0x7F;
     0027 217F                      1- 2398     	MOVIA	0x7f
     0028 000r                      1- 2399     	IOST	_APHCON
                                    1- 2400     	.line	555, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     0029 2101                      1- 2401     	MOVIA	0x01
     002A 00rr                      1- 2402     	MOVAR	_INTE
                                    1- 2403     	.line	556, "main.c"; 	INTF = 0;
     002B 02rr                      1- 2404     	CLRR	_INTF
                                    1- 2405     	.line	558, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     002C 21B8                      1- 2406     	MOVIA	0xb8
     002D 00rr                      1- 2407     	MOVAR	_PCON
                                    1- 2408     	.line	561, "main.c"; 	}
                                    1- 2409     	RETURN	
     002E 0010                      3-   40 m1      ret
                                    1- 2410     ; exit point of _gotoSleep
                                    1- 2412     ;***
                                    1- 2413     ;  pBlock Stats: dbName = C
                                    1- 2414     ;***
                                    1- 2415     ;has an exit
                                    1- 2416     ;; Starting pCode block
                                    1- 2417     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2419     _pwmStop:
                                    1- 2420     ; 2 exit points
                                    1- 2421     	.line	521, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2422     	CLRA	
     0001 00rr                      1- 2423     	SFUN	_T2CR1
                                    1- 2424     	.line	522, "main.c"; 	}
                                    1- 2425     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2426     ; exit point of _pwmStop
                                    1- 2428     ;***
                                    1- 2429     ;  pBlock Stats: dbName = C
                                    1- 2430     ;***
                                    1- 2431     ;has an exit
                                    1- 2432     ;1 compiler assigned register :
                                    1- 2433     ;   r0x1058
                                    1- 2434     ;; Starting pCode block
                                    1- 2435     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2437     _pwmInit:
                                    1- 2438     ; 2 exit points
                                    1- 2439     	.line	509, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2440     	SFUNR	_T2CR1
                                    1- 2441     	BANKSEL	r0x1058
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2442     	MOVAR	r0x1058
     0003 0Frr                      1- 2443     	BTRSC	r0x1058,7
                                    1- 2444     	.line	510, "main.c"; 	return;
                                    1- 2445     	MGOTO	_00406_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2446     	.line	511, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2447     	CLRR	_TMRH
                                    1- 2448     	.line	512, "main.c"; 	TMR2 = 125;							//频率为110K
     0006 217D                      1- 2449     	MOVIA	0x7d
     0007 00rr                      1- 2450     	SFUN	_TMR2
                                    1- 2451     	.line	515, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2101                      1- 2452     	MOVIA	0x01
     0009 00rr                      1- 2453     	SFUN	_T2CR2
                                    1- 2454     	.line	516, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2455     	MOVIA	0x83
     000B 00rr                      1- 2456     	SFUN	_T2CR1
     000C                           1- 2457     _00406_DS_:
                                    1- 2458     	.line	517, "main.c"; 	}
                                    1- 2459     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2460     ; exit point of _pwmInit
                                    1- 2462     ;***
                                    1- 2463     ;  pBlock Stats: dbName = C
                                    1- 2464     ;***
                                    1- 2465     ;has an exit
                                    1- 2466     ;; Starting pCode block
                                    1- 2467     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2469     _pwm1Stop:
                                    1- 2470     ; 2 exit points
                                    1- 2471     	.line	502, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2472     	CLRA	
     0001 00rr                      1- 2473     	SFUN	_T1CR1
                                    1- 2474     	.line	503, "main.c"; 	}
                                    1- 2475     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2476     ; exit point of _pwm1Stop
                                    1- 2478     ;***
                                    1- 2479     ;  pBlock Stats: dbName = C
                                    1- 2480     ;***
                                    1- 2481     ;has an exit
                                    1- 2482     ;1 compiler assigned register :
                                    1- 2483     ;   r0x1050
                                    1- 2484     ;; Starting pCode block
                                    1- 2485     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2487     _pwm1Init:
                                    1- 2488     ; 2 exit points
                                    1- 2489     	.line	489, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2490     	SFUNR	_T1CR1
                                    1- 2491     	BANKSEL	r0x1050
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2492     	MOVAR	r0x1050
     0003 0Frr                      1- 2493     	BTRSC	r0x1050,7
                                    1- 2494     	.line	490, "main.c"; 	return;
                                    1- 2495     	MGOTO	_00395_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2496     	.line	491, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2497     	CLRR	_TMRH
                                    1- 2498     	.line	492, "main.c"; 	TMR1 = 70;							//频率为110K
     0006 2146                      1- 2499     	MOVIA	0x46
     0007 00rr                      1- 2500     	SFUN	_TMR1
                                    1- 2501     	.line	495, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2502     	CLRA	
     0009 00rr                      1- 2503     	SFUN	_T1CR2
                                    1- 2504     	.line	496, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Dis;
     000A 2108                      1- 2505     	MOVIA	0x08
     000B 00rr                      1- 2506     	SFUN	_T1CR2
                                    1- 2507     	.line	497, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000C 2183                      1- 2508     	MOVIA	0x83
     000D 00rr                      1- 2509     	SFUN	_T1CR1
     000E                           1- 2510     _00395_DS_:
                                    1- 2511     	.line	498, "main.c"; 	}
                                    1- 2512     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2513     ; exit point of _pwm1Init
                                    1- 2515     ;***
                                    1- 2516     ;  pBlock Stats: dbName = C
                                    1- 2517     ;***
                                    1- 2518     ;has an exit
                                    1- 2519     ;functions called:
                                    1- 2520     ;   _delay
                                    1- 2521     ;   _LedInput
                                    1- 2522     ;   _delay
                                    1- 2523     ;   _LedInput
                                    1- 2524     ;1 compiler assigned register :
                                    1- 2525     ;   r0x1059
                                    1- 2526     ;; Starting pCode block
                                    1- 2527     .segment "code"; module=main, function=_LED5ON
     0000                           1- 2529     _LED5ON:
                                    1- 2530     ; 2 exit points
                                    1- 2531     	.line	477, "main.c"; 	L2OUT;
     0000 001r                      1- 2532     	IOSTR	_IOSTA
                                    1- 2533     	BANKSEL	r0x1059
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2534     	MOVAR	r0x1059
     0003 1Crr                      1- 2535     	BCR	r0x1059,0
     0004 01rr                      1- 2536     	MOVR	r0x1059,W
     0005 000r                      1- 2537     	IOST	_IOSTA
                                    1- 2538     	.line	478, "main.c"; 	L1OUT;
     0006 001r                      1- 2539     	IOSTR	_IOSTB
     0007 00rr                      1- 2540     	MOVAR	r0x1059
     0008 1Crr                      1- 2541     	BCR	r0x1059,1
     0009 01rr                      1- 2542     	MOVR	r0x1059,W
     000A 000r                      1- 2543     	IOST	_IOSTB
                                    1- 2544     	.line	479, "main.c"; 	L2H;
                                    1- 2545     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 18rr                      1- 2546     	BSR	_PORTA,0
                                    1- 2547     	.line	480, "main.c"; 	L1L;
     000D 1Crr                      1- 2548     	BCR	_PORTB,1
                                    1- 2549     	.line	481, "main.c"; 	delay(100);
     000E 2164                      1- 2550     	MOVIA	0x64
                                    1- 2551     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2552     	.line	482, "main.c"; 	LedInput();
                                    1- 2553     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2554     	.line	483, "main.c"; 	}
                                    1- 2555     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2556     ; exit point of _LED5ON
                                    1- 2558     ;***
                                    1- 2559     ;  pBlock Stats: dbName = C
                                    1- 2560     ;***
                                    1- 2561     ;has an exit
                                    1- 2562     ;functions called:
                                    1- 2563     ;   _delay
                                    1- 2564     ;   _LedInput
                                    1- 2565     ;   _delay
                                    1- 2566     ;   _LedInput
                                    1- 2567     ;1 compiler assigned register :
                                    1- 2568     ;   r0x105A
                                    1- 2569     ;; Starting pCode block
                                    1- 2570     .segment "code"; module=main, function=_LED4ON
     0000                           1- 2572     _LED4ON:
                                    1- 2573     ; 2 exit points
                                    1- 2574     	.line	467, "main.c"; 	L3OUT;
     0000 001r                      1- 2575     	IOSTR	_IOSTB
                                    1- 2576     	BANKSEL	r0x105A
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2577     	MOVAR	r0x105A
     0003 21DE                      1- 2578     	MOVIA	0xde
     0004 10rr                      1- 2579     	ANDAR	r0x105A,F
     0005 01rr                      1- 2580     	MOVR	r0x105A,W
     0006 000r                      1- 2581     	IOST	_IOSTB
                                    1- 2582     	.line	468, "main.c"; 	L2OUT;
     0007 001r                      1- 2583     	IOSTR	_IOSTA
     0008 00rr                      1- 2584     	MOVAR	r0x105A
     0009 1Crr                      1- 2585     	BCR	r0x105A,0
     000A 01rr                      1- 2586     	MOVR	r0x105A,W
     000B 000r                      1- 2587     	IOST	_IOSTA
                                    1- 2588     	.line	469, "main.c"; 	L3H;
     000C 2121                      1- 2589     	MOVIA	0x21
     000D 11rr                      1- 2590     	IORAR	_PORTB,F
                                    1- 2591     	.line	470, "main.c"; 	L2L;
                                    1- 2592     	BANKSEL	_PORTA
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 1Crr                      1- 2593     	BCR	_PORTA,0
                                    1- 2594     	.line	471, "main.c"; 	delay(100);
     0010 2164                      1- 2595     	MOVIA	0x64
                                    1- 2596     	MCALL	_delay
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2597     	.line	472, "main.c"; 	LedInput();
                                    1- 2598     	MCALL	_LedInput
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2599     	.line	473, "main.c"; 	}
                                    1- 2600     	RETURN	
     0013 0010                      3-   40 m1      ret
                                    1- 2601     ; exit point of _LED4ON
                                    1- 2603     ;***
                                    1- 2604     ;  pBlock Stats: dbName = C
                                    1- 2605     ;***
                                    1- 2606     ;has an exit
                                    1- 2607     ;functions called:
                                    1- 2608     ;   _delay
                                    1- 2609     ;   _LedInput
                                    1- 2610     ;   _delay
                                    1- 2611     ;   _LedInput
                                    1- 2612     ;1 compiler assigned register :
                                    1- 2613     ;   r0x105B
                                    1- 2614     ;; Starting pCode block
                                    1- 2615     .segment "code"; module=main, function=_LED3ON
     0000                           1- 2617     _LED3ON:
                                    1- 2618     ; 2 exit points
                                    1- 2619     	.line	457, "main.c"; 	L3OUT;
     0000 001r                      1- 2620     	IOSTR	_IOSTB
                                    1- 2621     	BANKSEL	r0x105B
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2622     	MOVAR	r0x105B
     0003 21DE                      1- 2623     	MOVIA	0xde
     0004 10rr                      1- 2624     	ANDAR	r0x105B,F
     0005 01rr                      1- 2625     	MOVR	r0x105B,W
     0006 000r                      1- 2626     	IOST	_IOSTB
                                    1- 2627     	.line	458, "main.c"; 	L2OUT;
     0007 001r                      1- 2628     	IOSTR	_IOSTA
     0008 00rr                      1- 2629     	MOVAR	r0x105B
     0009 1Crr                      1- 2630     	BCR	r0x105B,0
     000A 01rr                      1- 2631     	MOVR	r0x105B,W
     000B 000r                      1- 2632     	IOST	_IOSTA
                                    1- 2633     	.line	459, "main.c"; 	L2H;
                                    1- 2634     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 18rr                      1- 2635     	BSR	_PORTA,0
                                    1- 2636     	.line	460, "main.c"; 	L3L;
     000E 21DE                      1- 2637     	MOVIA	0xde
     000F 10rr                      1- 2638     	ANDAR	_PORTB,F
                                    1- 2639     	.line	461, "main.c"; 	delay(100);
     0010 2164                      1- 2640     	MOVIA	0x64
                                    1- 2641     	MCALL	_delay
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2642     	.line	462, "main.c"; 	LedInput();
                                    1- 2643     	MCALL	_LedInput
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2644     	.line	463, "main.c"; 	}
                                    1- 2645     	RETURN	
     0013 0010                      3-   40 m1      ret
                                    1- 2646     ; exit point of _LED3ON
                                    1- 2648     ;***
                                    1- 2649     ;  pBlock Stats: dbName = C
                                    1- 2650     ;***
                                    1- 2651     ;has an exit
                                    1- 2652     ;functions called:
                                    1- 2653     ;   _delay
                                    1- 2654     ;   _LedInput
                                    1- 2655     ;   _delay
                                    1- 2656     ;   _LedInput
                                    1- 2657     ;1 compiler assigned register :
                                    1- 2658     ;   r0x105C
                                    1- 2659     ;; Starting pCode block
                                    1- 2660     .segment "code"; module=main, function=_LED2ON
     0000                           1- 2662     _LED2ON:
                                    1- 2663     ; 2 exit points
                                    1- 2664     	.line	447, "main.c"; 	L1OUT;
     0000 001r                      1- 2665     	IOSTR	_IOSTB
                                    1- 2666     	BANKSEL	r0x105C
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2667     	MOVAR	r0x105C
     0003 1Crr                      1- 2668     	BCR	r0x105C,1
     0004 01rr                      1- 2669     	MOVR	r0x105C,W
     0005 000r                      1- 2670     	IOST	_IOSTB
                                    1- 2671     	.line	448, "main.c"; 	L3OUT;
     0006 001r                      1- 2672     	IOSTR	_IOSTB
     0007 00rr                      1- 2673     	MOVAR	r0x105C
     0008 21DE                      1- 2674     	MOVIA	0xde
     0009 10rr                      1- 2675     	ANDAR	r0x105C,F
     000A 01rr                      1- 2676     	MOVR	r0x105C,W
     000B 000r                      1- 2677     	IOST	_IOSTB
                                    1- 2678     	.line	449, "main.c"; 	L1H;
     000C 18rr                      1- 2679     	BSR	_PORTB,1
                                    1- 2680     	.line	450, "main.c"; 	L3L;
     000D 21DE                      1- 2681     	MOVIA	0xde
     000E 10rr                      1- 2682     	ANDAR	_PORTB,F
                                    1- 2683     	.line	451, "main.c"; 	delay(100);
     000F 2164                      1- 2684     	MOVIA	0x64
                                    1- 2685     	MCALL	_delay
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2686     	.line	452, "main.c"; 	LedInput();
                                    1- 2687     	MCALL	_LedInput
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2688     	.line	453, "main.c"; 	}
                                    1- 2689     	RETURN	
     0012 0010                      3-   40 m1      ret
                                    1- 2690     ; exit point of _LED2ON
                                    1- 2692     ;***
                                    1- 2693     ;  pBlock Stats: dbName = C
                                    1- 2694     ;***
                                    1- 2695     ;has an exit
                                    1- 2696     ;functions called:
                                    1- 2697     ;   _delay
                                    1- 2698     ;   _LedInput
                                    1- 2699     ;   _delay
                                    1- 2700     ;   _LedInput
                                    1- 2701     ;1 compiler assigned register :
                                    1- 2702     ;   r0x105D
                                    1- 2703     ;; Starting pCode block
                                    1- 2704     .segment "code"; module=main, function=_LED1ON
     0000                           1- 2706     _LED1ON:
                                    1- 2707     ; 2 exit points
                                    1- 2708     	.line	437, "main.c"; 	L3OUT;
     0000 001r                      1- 2709     	IOSTR	_IOSTB
                                    1- 2710     	BANKSEL	r0x105D
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2711     	MOVAR	r0x105D
     0003 21DE                      1- 2712     	MOVIA	0xde
     0004 10rr                      1- 2713     	ANDAR	r0x105D,F
     0005 01rr                      1- 2714     	MOVR	r0x105D,W
     0006 000r                      1- 2715     	IOST	_IOSTB
                                    1- 2716     	.line	438, "main.c"; 	L1OUT;
     0007 001r                      1- 2717     	IOSTR	_IOSTB
     0008 00rr                      1- 2718     	MOVAR	r0x105D
     0009 1Crr                      1- 2719     	BCR	r0x105D,1
     000A 01rr                      1- 2720     	MOVR	r0x105D,W
     000B 000r                      1- 2721     	IOST	_IOSTB
                                    1- 2722     	.line	439, "main.c"; 	L3H;
     000C 2121                      1- 2723     	MOVIA	0x21
     000D 11rr                      1- 2724     	IORAR	_PORTB,F
                                    1- 2725     	.line	440, "main.c"; 	L1L;
     000E 1Crr                      1- 2726     	BCR	_PORTB,1
                                    1- 2727     	.line	441, "main.c"; 	delay(100);
     000F 2164                      1- 2728     	MOVIA	0x64
                                    1- 2729     	MCALL	_delay
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2730     	.line	442, "main.c"; 	LedInput();
                                    1- 2731     	MCALL	_LedInput
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2732     	.line	443, "main.c"; 	}
                                    1- 2733     	RETURN	
     0012 0010                      3-   40 m1      ret
                                    1- 2734     ; exit point of _LED1ON
                                    1- 2736     ;***
                                    1- 2737     ;  pBlock Stats: dbName = C
                                    1- 2738     ;***
                                    1- 2739     ;has an exit
                                    1- 2740     ;1 compiler assigned register :
                                    1- 2741     ;   r0x1057
                                    1- 2742     ;; Starting pCode block
                                    1- 2743     .segment "code"; module=main, function=_LedInput
     0000                           1- 2745     _LedInput:
                                    1- 2746     ; 2 exit points
                                    1- 2747     	.line	429, "main.c"; 	IOSTA |= 0x01;
     0000 001r                      1- 2748     	IOSTR	_IOSTA
                                    1- 2749     	BANKSEL	r0x1057
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2750     	MOVAR	r0x1057
     0003 18rr                      1- 2751     	BSR	r0x1057,0
     0004 01rr                      1- 2752     	MOVR	r0x1057,W
     0005 000r                      1- 2753     	IOST	_IOSTA
                                    1- 2754     	.line	430, "main.c"; 	IOSTB |= 0x23;
     0006 001r                      1- 2755     	IOSTR	_IOSTB
     0007 00rr                      1- 2756     	MOVAR	r0x1057
     0008 2123                      1- 2757     	MOVIA	0x23
     0009 11rr                      1- 2758     	IORAR	r0x1057,F
     000A 01rr                      1- 2759     	MOVR	r0x1057,W
     000B 000r                      1- 2760     	IOST	_IOSTB
                                    1- 2761     	.line	431, "main.c"; 	PORTA &= 0xFE;
                                    1- 2762     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Crr                      1- 2763     	BCR	_PORTA,0
                                    1- 2764     	.line	432, "main.c"; 	PORTB &= 0xDC;
     000E 21DC                      1- 2765     	MOVIA	0xdc
     000F 10rr                      1- 2766     	ANDAR	_PORTB,F
                                    1- 2767     	.line	433, "main.c"; 	}
                                    1- 2768     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2769     ; exit point of _LedInput
                                    1- 2771     ;***
                                    1- 2772     ;  pBlock Stats: dbName = C
                                    1- 2773     ;***
                                    1- 2774     ;has an exit
                                    1- 2775     ;functions called:
                                    1- 2776     ;   _LedInput
                                    1- 2777     ;   _LedInput
                                    1- 2778     ;   _LED5ON
                                    1- 2779     ;   _LED4ON
                                    1- 2780     ;   _LED3ON
                                    1- 2781     ;   _LED2ON
                                    1- 2782     ;   _LED1ON
                                    1- 2783     ;   _LedInput
                                    1- 2784     ;   _LedInput
                                    1- 2785     ;   _LED5ON
                                    1- 2786     ;   _LED4ON
                                    1- 2787     ;   _LED3ON
                                    1- 2788     ;   _LED2ON
                                    1- 2789     ;   _LED1ON
                                    1- 2790     ;; Starting pCode block
                                    1- 2791     .segment "code"; module=main, function=_ledShow
     0000                           1- 2793     _ledShow:
                                    1- 2794     ; 2 exit points
                                    1- 2795     	.line	372, "main.c"; 	if(ledDeadTime > 0 && workStep == 0)
                                    1- 2796     	BANKSEL	_ledDeadTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2797     	MOVR	_ledDeadTime,W
     0002 0D03                      1- 2798     	BTRSC	STATUS,2
                                    1- 2799     	MGOTO	_00296_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2800     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 2801     	MOVR	_workStep,W
     0006 0903                      1- 2802     	BTRSS	STATUS,2
                                    1- 2803     	MGOTO	_00296_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2804     	.line	374, "main.c"; 	if(ledDeadTime % 2 == 0)
                                    1- 2805     	BANKSEL	_ledDeadTime
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 0Crr                      1- 2806     	BTRSC	_ledDeadTime,0
                                    1- 2807     	MGOTO	_00293_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2808     	.line	376, "main.c"; 	ledStep = 0;
                                    1- 2809     	BANKSEL	_ledStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 02rr                      1- 2810     	CLRR	_ledStep
                                    1- 2811     	MGOTO	_00296_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 2812     _00293_DS_:
                                    1- 2813     	.line	380, "main.c"; 	ledStep = tempLedStep;
                                    1- 2814     	BANKSEL	_tempLedStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 2815     	MOVR	_tempLedStep,W
                                    1- 2816     	BANKSEL	_ledStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 2817     	MOVAR	_ledStep
     0012                           1- 2818     _00296_DS_:
                                    1- 2819     	.line	384, "main.c"; 	if(ledLightTime > 0 && pwStep > 0)
                                    1- 2820     	BANKSEL	_ledLightTime
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 2821     	MOVR	_ledLightTime,W
     0014 0D03                      1- 2822     	BTRSC	STATUS,2
                                    1- 2823     	MGOTO	_00304_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2824     	BANKSEL	_pwStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 2825     	MOVR	_pwStep,W
     0018 0D03                      1- 2826     	BTRSC	STATUS,2
                                    1- 2827     	MGOTO	_00304_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2828     	.line	386, "main.c"; 	if(ledLightTime > 0)
                                    1- 2829     	BANKSEL	_ledLightTime
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 01rr                      1- 2830     	MOVR	_ledLightTime,W
     001C 0D03                      1- 2831     	BTRSC	STATUS,2
                                    1- 2832     	MGOTO	_00304_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2833     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2834     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 2835     	.line	388, "main.c"; 	if(pwStep > 6 )
     001E 2107                      1- 2836     	MOVIA	0x07
                                    1- 2837     	BANKSEL	_pwStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 04rr                      1- 2838     	SUBAR	_pwStep,W
     0021 0803                      1- 2839     	BTRSS	STATUS,0
                                    1- 2840     	MGOTO	_00299_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2841     	.line	389, "main.c"; 	ledStep = 6;
     0023 2106                      1- 2842     	MOVIA	0x06
                                    1- 2843     	BANKSEL	_ledStep
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 00rr                      1- 2844     	MOVAR	_ledStep
                                    1- 2845     	MGOTO	_00304_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 2846     _00299_DS_:
                                    1- 2847     	.line	391, "main.c"; 	ledStep = pwStep;
                                    1- 2848     	BANKSEL	_pwStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 2849     	MOVR	_pwStep,W
                                    1- 2850     	BANKSEL	_ledStep
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 2851     	MOVAR	_ledStep
     002B                           1- 2852     _00304_DS_:
                                    1- 2853     	.line	394, "main.c"; 	if(shanshuoTime > 0 && workStep > 0 && pwStep == 0)
                                    1- 2854     	BANKSEL	_shanshuoTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1- 2855     	MOVR	_shanshuoTime,W
     002D 0D03                      1- 2856     	BTRSC	STATUS,2
                                    1- 2857     	MGOTO	_00310_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2858     	BANKSEL	_workStep
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 2859     	MOVR	_workStep,W
     0031 0D03                      1- 2860     	BTRSC	STATUS,2
                                    1- 2861     	MGOTO	_00310_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2862     	BANKSEL	_pwStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 2863     	MOVR	_pwStep,W
     0035 0903                      1- 2864     	BTRSS	STATUS,2
                                    1- 2865     	MGOTO	_00310_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2866     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 2867     	.line	396, "main.c"; 	if(count1s < 50)
     0037 2132                      1- 2868     	MOVIA	0x32
                                    1- 2869     	BANKSEL	_count1s
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 04rr                      1- 2870     	SUBAR	_count1s,W
     003A 0C03                      1- 2871     	BTRSC	STATUS,0
                                    1- 2872     	MGOTO	_00307_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2873     	.line	397, "main.c"; 	ledStep = workStep;
                                    1- 2874     	BANKSEL	_workStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 2875     	MOVR	_workStep,W
                                    1- 2876     	BANKSEL	_ledStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 00rr                      1- 2877     	MOVAR	_ledStep
                                    1- 2878     	MGOTO	_00310_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041                           1- 2879     _00307_DS_:
                                    1- 2880     	.line	399, "main.c"; 	ledStep = 0;
                                    1- 2881     	BANKSEL	_ledStep
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 2882     	CLRR	_ledStep
     0043                           1- 2883     _00310_DS_:
                                    1- 2884     	.line	402, "main.c"; 	LedInput();
                                    1- 2885     	MCALL	_LedInput
     0043 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2886     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2887     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 2888     	.line	403, "main.c"; 	switch(ledStep)
     0044 2109                      1- 2889     	MOVIA	0x09
                                    1- 2890     	BANKSEL	_ledStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 04rr                      1- 2891     	SUBAR	_ledStep,W
     0047 0C03                      1- 2892     	BTRSC	STATUS,0
                                    1- 2893     	MGOTO	_00323_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 21rr                      1- 2894     	MOVIA	((_00364_DS_ >> 8) & 0xff)
     004A 008A                      1- 2895     	MOVAR	PCHBUF
     004B 01rr                      1- 2896     	MOVR	_ledStep,W
     004C 25rr                      1- 2897     	ADDIA	_00364_DS_
     004D 0C03                      1- 2898     	BTRSC	STATUS,0
     004E 058A                      1- 2899     	INCR	PCHBUF,F
     004F 0082                      1- 2900     	MOVAR	PCL
     0050                           1- 2901     _00364_DS_:
                                    1- 2902     	MGOTO	_00313_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2903     	MGOTO	_00321_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2904     	MGOTO	_00320_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2905     	MGOTO	_00319_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2906     	MGOTO	_00318_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2907     	MGOTO	_00317_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2908     	MGOTO	_00317_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2909     	MGOTO	_00317_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2910     	MGOTO	_00317_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
     0059                           1- 2911     _00313_DS_:
                                    1- 2912     	.line	406, "main.c"; 	LedInput();
                                    1- 2913     	MCALL	_LedInput
     0059 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2914     	.line	407, "main.c"; 	break;
                                    1- 2915     	MGOTO	_00323_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B                           1- 2916     _00317_DS_:
                                    1- 2917     	.line	412, "main.c"; 	LED5ON();
                                    1- 2918     	MCALL	_LED5ON
     005B 2rrr                      3-   66 m1      LCALL rom_address
     005C                           1- 2919     _00318_DS_:
                                    1- 2920     	.line	414, "main.c"; 	LED4ON();
                                    1- 2921     	MCALL	_LED4ON
     005C 2rrr                      3-   66 m1      LCALL rom_address
     005D                           1- 2922     _00319_DS_:
                                    1- 2923     	.line	416, "main.c"; 	LED3ON();
                                    1- 2924     	MCALL	_LED3ON
     005D 2rrr                      3-   66 m1      LCALL rom_address
     005E                           1- 2925     _00320_DS_:
                                    1- 2926     	.line	418, "main.c"; 	LED2ON();
                                    1- 2927     	MCALL	_LED2ON
     005E 2rrr                      3-   66 m1      LCALL rom_address
     005F                           1- 2928     _00321_DS_:
                                    1- 2929     	.line	420, "main.c"; 	LED1ON();
                                    1- 2930     	MCALL	_LED1ON
     005F 2rrr                      3-   66 m1      LCALL rom_address
     0060                           1- 2931     _00323_DS_:
                                    1- 2932     	.line	423, "main.c"; 	}
                                    1- 2933     	RETURN	
     0060 0010                      3-   40 m1      ret
                                    1- 2934     ; exit point of _ledShow
                                    1- 2936     ;***
                                    1- 2937     ;  pBlock Stats: dbName = C
                                    1- 2938     ;***
                                    1- 2939     ;has an exit
                                    1- 2940     ;functions called:
                                    1- 2941     ;   _LedInput
                                    1- 2942     ;   _LedInput
                                    1- 2943     ;; Starting pCode block
                                    1- 2944     .segment "code"; module=main, function=_initSys
     0000                           1- 2946     _initSys:
                                    1- 2947     ; 2 exit points
                                    1- 2948     	.line	340, "main.c"; 	DISI();
     0000 0013                      1- 2949     	DISI
                                    1- 2950     	.line	341, "main.c"; 	IOSTA = C_PA7_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0001 21BE                      1- 2951     	MOVIA	0xbe
     0002 000r                      1- 2952     	IOST	_IOSTA
                                    1- 2953     	.line	342, "main.c"; 	IOSTB = C_PB3_Input;
     0003 2108                      1- 2954     	MOVIA	0x08
     0004 000r                      1- 2955     	IOST	_IOSTB
                                    1- 2956     	.line	343, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2957     	CLRR	_PORTB
                                    1- 2958     	.line	344, "main.c"; 	PORTA = 0x00;
                                    1- 2959     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2960     	CLRR	_PORTA
                                    1- 2961     	.line	345, "main.c"; 	LedInput();
                                    1- 2962     	MCALL	_LedInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2963     	.line	346, "main.c"; 	APHCON = 0x7F;
     0009 217F                      1- 2964     	MOVIA	0x7f
     000A 000r                      1- 2965     	IOST	_APHCON
                                    1- 2966     	.line	347, "main.c"; 	BPHCON = 0xFF;
     000B 21FF                      1- 2967     	MOVIA	0xff
     000C 00rr                      1- 2968     	MOVAR	_BPHCON
                                    1- 2969     	.line	348, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 2970     	MOVAR	_ABPLCON
                                    1- 2971     	.line	350, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1- 2972     	MOVIA	0x01
     000F 00rr                      1- 2973     	MOVAR	_INTE
                                    1- 2974     	.line	352, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 2975     	CLRA	
     0011 000r                      1- 2976     	IOST	_PCON1
                                    1- 2977     	.line	354, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 2978     	MOVIA	0x37
     0013 00rr                      1- 2979     	MOVAR	_TMR0
                                    1- 2980     	.line	355, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0014 2101                      1- 2981     	MOVIA	0x01
     0015 0003                      1- 2982     	T0MD	
                                    1- 2983     	.line	357, "main.c"; 	PCON1 = C_TMR0_En;
     0016 000r                      1- 2984     	IOST	_PCON1
                                    1- 2985     	.line	360, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0017 2198                      1- 2986     	MOVIA	0x98
     0018 00rr                      1- 2987     	MOVAR	_PCON
                                    1- 2988     	.line	363, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0019 2101                      1- 2989     	MOVIA	0x01
     001A 000r                      1- 2990     	IOST	_PCON1
                                    1- 2991     	.line	364, "main.c"; 	ENI();
     001B 0004                      1- 2992     	ENI
                                    1- 2993     	.line	365, "main.c"; 	}
                                    1- 2994     	RETURN	
     001C 0010                      3-   40 m1      ret
                                    1- 2995     ; exit point of _initSys
                                    1- 2997     ;***
                                    1- 2998     ;  pBlock Stats: dbName = C
                                    1- 2999     ;***
                                    1- 3000     ;has an exit
                                    1- 3001     ;functions called:
                                    1- 3002     ;   _pwmStop
                                    1- 3003     ;   _pwmStop
                                    1- 3004     ;; Starting pCode block
                                    1- 3005     .segment "code"; module=main, function=_powerOff
     0000                           1- 3007     _powerOff:
                                    1- 3008     ; 2 exit points
                                    1- 3009     	.line	331, "main.c"; 	workStep = 0;
                                    1- 3010     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 3011     	CLRR	_workStep
                                    1- 3012     	.line	332, "main.c"; 	pwmStop();
                                    1- 3013     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3014     	.line	334, "main.c"; 	}
                                    1- 3015     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 3016     ; exit point of _powerOff
                                    1- 3018     ;***
                                    1- 3019     ;  pBlock Stats: dbName = C
                                    1- 3020     ;***
                                    1- 3021     ;has an exit
                                    1- 3022     ;functions called:
                                    1- 3023     ;   _keyRead
                                    1- 3024     ;   _pwmInit
                                    1- 3025     ;   _powerOff
                                    1- 3026     ;   _pwmInit
                                    1- 3027     ;   _keyRead
                                    1- 3028     ;   _pwmInit
                                    1- 3029     ;   _powerOff
                                    1- 3030     ;   _pwmInit
                                    1- 3031     ;1 compiler assigned register :
                                    1- 3032     ;   r0x105E
                                    1- 3033     ;; Starting pCode block
                                    1- 3034     .segment "code"; module=main, function=_keyCtr
                                    1- 3036     ;local variable name mapping:
     0000                           1- 3038     _keyCtr:
                                    1- 3039     ; 2 exit points
                                    1- 3040     	.line	263, "main.c"; 	char kclick = keyRead(0x80 & (~PORTA));
                                    1- 3041     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 3042     	COMR	_PORTA,W
                                    1- 3043     	BANKSEL	r0x105E
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 3044     	MOVAR	r0x105E
     0004 2180                      1- 3045     	MOVIA	0x80
     0005 10rr                      1- 3046     	ANDAR	r0x105E,F
     0006 01rr                      1- 3047     	MOVR	r0x105E,W
                                    1- 3048     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3049     	BANKSEL	r0x105E
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 3050     	MOVAR	r0x105E
                                    1- 3051     	.line	264, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 3052     	XORIA	0x01
     000B 0903                      1- 3053     	BTRSS	STATUS,2
                                    1- 3054     	MGOTO	_00277_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3055     	.line	266, "main.c"; 	count500ms = 0;
                                    1- 3056     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 3057     	CLRR	_count500ms
                                    1- 3058     	.line	267, "main.c"; 	ledLightTime = 0;
                                    1- 3059     	BANKSEL	_ledLightTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 3060     	CLRR	_ledLightTime
                                    1- 3061     	.line	268, "main.c"; 	if(workStep == 0)
                                    1- 3062     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 3063     	MOVR	_workStep,W
     0013 0903                      1- 3064     	BTRSS	STATUS,2
                                    1- 3065     	MGOTO	_00246_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3066     	.line	270, "main.c"; 	count1s = 0;
                                    1- 3067     	BANKSEL	_count1s
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 3068     	CLRR	_count1s
                                    1- 3069     	.line	271, "main.c"; 	ledLightTime = 3;
     0017 2103                      1- 3070     	MOVIA	0x03
                                    1- 3071     	BANKSEL	_ledLightTime
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 00rr                      1- 3072     	MOVAR	_ledLightTime
                                    1- 3073     	.line	272, "main.c"; 	prePwStep = 0;
                                    1- 3074     	BANKSEL	_prePwStep
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 02rr                      1- 3075     	CLRR	_prePwStep
                                    1- 3076     	.line	273, "main.c"; 	return;
                                    1- 3077     	MGOTO	_00279_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
     001D                           1- 3078     _00246_DS_:
                                    1- 3079     	.line	275, "main.c"; 	ledTime = 0;
                                    1- 3080     	BANKSEL	_ledTime
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1- 3081     	CLRR	_ledTime
                                    1- 3082     	.line	276, "main.c"; 	if(++workStep > 5)
                                    1- 3083     	BANKSEL	_workStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1- 3084     	INCR	_workStep,F
                                    1- 3085     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3086     ;;unsigned compare: left >= lit (0x6=6), size=1
     0021 2106                      1- 3087     	MOVIA	0x06
     0022 04rr                      1- 3088     	SUBAR	_workStep,W
     0023 0803                      1- 3089     	BTRSS	STATUS,0
                                    1- 3090     	MGOTO	_00248_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3091     	.line	277, "main.c"; 	workStep = 1;
     0025 2101                      1- 3092     	MOVIA	0x01
     0026 00rr                      1- 3093     	MOVAR	_workStep
     0027                           1- 3094     _00248_DS_:
                                    1- 3095     	.line	278, "main.c"; 	if(pwStep == 0)
                                    1- 3096     	BANKSEL	_pwStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 3097     	MOVR	_pwStep,W
     0029 0903                      1- 3098     	BTRSS	STATUS,2
                                    1- 3099     	MGOTO	_00250_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3100     	.line	279, "main.c"; 	shanshuoTime = 10;
     002B 210A                      1- 3101     	MOVIA	0x0a
                                    1- 3102     	BANKSEL	_shanshuoTime
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1- 3103     	MOVAR	_shanshuoTime
     002E                           1- 3104     _00250_DS_:
                                    1- 3105     	.line	280, "main.c"; 	if(workStep == 1)
                                    1- 3106     	BANKSEL	_workStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 3107     	MOVR	_workStep,W
     0030 2401                      1- 3108     	XORIA	0x01
     0031 0903                      1- 3109     	BTRSS	STATUS,2
                                    1- 3110     	MGOTO	_00263_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3111     	.line	282, "main.c"; 	maxDuty = 103;
     0033 2167                      1- 3112     	MOVIA	0x67
                                    1- 3113     	BANKSEL	_maxDuty
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 3114     	MOVAR	_maxDuty
                                    1- 3115     	.line	283, "main.c"; 	ledLightTime = 0;
                                    1- 3116     	BANKSEL	_ledLightTime
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 02rr                      1- 3117     	CLRR	_ledLightTime
                                    1- 3118     	MGOTO	_00264_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
     0039                           1- 3119     _00263_DS_:
                                    1- 3120     	.line	285, "main.c"; 	else if(workStep == 2)
                                    1- 3121     	BANKSEL	_workStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1- 3122     	MOVR	_workStep,W
     003B 2402                      1- 3123     	XORIA	0x02
     003C 0903                      1- 3124     	BTRSS	STATUS,2
                                    1- 3125     	MGOTO	_00260_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3126     	.line	286, "main.c"; 	maxDuty = 109;
     003E 216D                      1- 3127     	MOVIA	0x6d
                                    1- 3128     	BANKSEL	_maxDuty
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 00rr                      1- 3129     	MOVAR	_maxDuty
                                    1- 3130     	MGOTO	_00264_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042                           1- 3131     _00260_DS_:
                                    1- 3132     	.line	287, "main.c"; 	else if(workStep == 3)
                                    1- 3133     	BANKSEL	_workStep
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1- 3134     	MOVR	_workStep,W
     0044 2403                      1- 3135     	XORIA	0x03
     0045 0903                      1- 3136     	BTRSS	STATUS,2
                                    1- 3137     	MGOTO	_00257_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3138     	.line	288, "main.c"; 	maxDuty = 114;
     0047 2172                      1- 3139     	MOVIA	0x72
                                    1- 3140     	BANKSEL	_maxDuty
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1- 3141     	MOVAR	_maxDuty
                                    1- 3142     	MGOTO	_00264_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
     004B                           1- 3143     _00257_DS_:
                                    1- 3144     	.line	289, "main.c"; 	else if(workStep == 4)
                                    1- 3145     	BANKSEL	_workStep
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 01rr                      1- 3146     	MOVR	_workStep,W
     004D 2404                      1- 3147     	XORIA	0x04
     004E 0903                      1- 3148     	BTRSS	STATUS,2
                                    1- 3149     	MGOTO	_00254_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3150     	.line	290, "main.c"; 	maxDuty = 119;
     0050 2177                      1- 3151     	MOVIA	0x77
                                    1- 3152     	BANKSEL	_maxDuty
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 00rr                      1- 3153     	MOVAR	_maxDuty
                                    1- 3154     	MGOTO	_00264_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
     0054                           1- 3155     _00254_DS_:
                                    1- 3156     	.line	291, "main.c"; 	else if(workStep == 5)
                                    1- 3157     	BANKSEL	_workStep
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 01rr                      1- 3158     	MOVR	_workStep,W
     0056 2405                      1- 3159     	XORIA	0x05
     0057 0903                      1- 3160     	BTRSS	STATUS,2
                                    1- 3161     	MGOTO	_00264_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3162     	.line	292, "main.c"; 	maxDuty = 124;
     0059 217C                      1- 3163     	MOVIA	0x7c
                                    1- 3164     	BANKSEL	_maxDuty
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 00rr                      1- 3165     	MOVAR	_maxDuty
     005C                           1- 3166     _00264_DS_:
                                    1- 3167     	.line	293, "main.c"; 	if(workStep > 0)
                                    1- 3168     	BANKSEL	_workStep
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 01rr                      1- 3169     	MOVR	_workStep,W
     005E 0D03                      1- 3170     	BTRSC	STATUS,2
                                    1- 3171     	MGOTO	_00266_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3172     	.line	295, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 3173     	BANKSEL	_maxDuty
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1- 3174     	MOVR	_maxDuty,W
     0062 00rr                      1- 3175     	SFUN	_PWM2DUTY
                                    1- 3176     	.line	296, "main.c"; 	pwmInit();
                                    1- 3177     	MCALL	_pwmInit
     0063 2rrr                      3-   66 m1      LCALL rom_address
     0064                           1- 3178     _00266_DS_:
                                    1- 3179     	.line	298, "main.c"; 	ledStep = workStep;
                                    1- 3180     	BANKSEL	_workStep
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1- 3181     	MOVR	_workStep,W
                                    1- 3182     	BANKSEL	_ledStep
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 00rr                      1- 3183     	MOVAR	_ledStep
                                    1- 3184     	MGOTO	_00279_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
     0069                           1- 3185     _00277_DS_:
                                    1- 3186     	.line	300, "main.c"; 	else if(kclick == 2)
                                    1- 3187     	BANKSEL	r0x105E
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 01rr                      1- 3188     	MOVR	r0x105E,W
     006B 2402                      1- 3189     	XORIA	0x02
     006C 0903                      1- 3190     	BTRSS	STATUS,2
                                    1- 3191     	MGOTO	_00279_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3192     	.line	302, "main.c"; 	if(workStep > 0)
                                    1- 3193     	BANKSEL	_workStep
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 01rr                      1- 3194     	MOVR	_workStep,W
     0070 0D03                      1- 3195     	BTRSC	STATUS,2
                                    1- 3196     	MGOTO	_00272_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3197     	.line	304, "main.c"; 	powerOff();
                                    1- 3198     	MCALL	_powerOff
     0072 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3199     	MGOTO	_00273_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
     0074                           1- 3200     _00272_DS_:
                                    1- 3201     	.line	308, "main.c"; 	if(pwStep == 10)
                                    1- 3202     	BANKSEL	_pwStep
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 01rr                      1- 3203     	MOVR	_pwStep,W
     0076 240A                      1- 3204     	XORIA	0x0a
     0077 0903                      1- 3205     	BTRSS	STATUS,2
                                    1- 3206     	MGOTO	_00268_DS_
     0078 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3207     	.line	310, "main.c"; 	sleepTime = 0;
                                    1- 3208     	BANKSEL	_sleepTime
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 02rr                      1- 3209     	CLRR	_sleepTime
     007B 02rr                      1- 3210     	CLRR	(_sleepTime + 1)
                                    1- 3211     	.line	311, "main.c"; 	return;
                                    1- 3212     	MGOTO	_00279_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
     007D                           1- 3213     _00268_DS_:
                                    1- 3214     	.line	313, "main.c"; 	ledLightTime = 0;
                                    1- 3215     	BANKSEL	_ledLightTime
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 02rr                      1- 3216     	CLRR	_ledLightTime
                                    1- 3217     	.line	314, "main.c"; 	ledStep = 1;
     007F 2101                      1- 3218     	MOVIA	0x01
                                    1- 3219     	BANKSEL	_ledStep
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 00rr                      1- 3220     	MOVAR	_ledStep
                                    1- 3221     	.line	315, "main.c"; 	workStep = 1;
                                    1- 3222     	BANKSEL	_workStep
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 00rr                      1- 3223     	MOVAR	_workStep
                                    1- 3224     	.line	316, "main.c"; 	PWM2DUTY = 120;
     0084 2178                      1- 3225     	MOVIA	0x78
     0085 00rr                      1- 3226     	SFUN	_PWM2DUTY
                                    1- 3227     	.line	317, "main.c"; 	currentDuty = 120;
                                    1- 3228     	BANKSEL	_currentDuty
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 00rr                      1- 3229     	MOVAR	_currentDuty
                                    1- 3230     	.line	318, "main.c"; 	maxDuty = 103;
     0088 2167                      1- 3231     	MOVIA	0x67
                                    1- 3232     	BANKSEL	_maxDuty
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 00rr                      1- 3233     	MOVAR	_maxDuty
                                    1- 3234     	.line	319, "main.c"; 	pwmInit();
                                    1- 3235     	MCALL	_pwmInit
     008B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3236     	.line	320, "main.c"; 	if(pwStep == 0)
                                    1- 3237     	BANKSEL	_pwStep
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 01rr                      1- 3238     	MOVR	_pwStep,W
     008E 0903                      1- 3239     	BTRSS	STATUS,2
                                    1- 3240     	MGOTO	_00273_DS_
     008F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3241     	.line	321, "main.c"; 	shanshuoTime = 10;
     0090 210A                      1- 3242     	MOVIA	0x0a
                                    1- 3243     	BANKSEL	_shanshuoTime
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 00rr                      1- 3244     	MOVAR	_shanshuoTime
     0093                           1- 3245     _00273_DS_:
                                    1- 3246     	.line	324, "main.c"; 	ledStep = workStep;
                                    1- 3247     	BANKSEL	_workStep
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 01rr                      1- 3248     	MOVR	_workStep,W
                                    1- 3249     	BANKSEL	_ledStep
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 00rr                      1- 3250     	MOVAR	_ledStep
     0097                           1- 3251     _00279_DS_:
                                    1- 3252     	.line	326, "main.c"; 	}
                                    1- 3253     	RETURN	
     0097 0010                      3-   40 m1      ret
                                    1- 3254     ; exit point of _keyCtr
                                    1- 3257     ;	code size estimation:
                                    1- 3258     ;	 1208+  333 =  1541 instructions ( 3748 byte)
                                    1- 3260     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
