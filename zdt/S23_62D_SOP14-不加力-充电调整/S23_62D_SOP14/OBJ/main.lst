
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B061D,c=on
                                    1-    9     	#include "ny8b061d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_fgCtr
                                    1-   18     	extern	_LedCtr2
                                    1-   19     	extern	_checkInAD
                                    1-   20     	extern	_PORTAbits
                                    1-   21     	extern	_PORTBbits
                                    1-   22     	extern	_PCONbits
                                    1-   23     	extern	_BWUCONbits
                                    1-   24     	extern	_ABPLCONbits
                                    1-   25     	extern	_BPHCONbits
                                    1-   26     	extern	_INTEbits
                                    1-   27     	extern	_INTFbits
                                    1-   28     	extern	_ADMDbits
                                    1-   29     	extern	_ADRbits
                                    1-   30     	extern	_ADVREFHbits
                                    1-   31     	extern	_ADCRbits
                                    1-   32     	extern	_AWUCONbits
                                    1-   33     	extern	_PACONbits
                                    1-   34     	extern	_INTEDGbits
                                    1-   35     	extern	_RFCbits
                                    1-   36     	extern	_INTE2bits
                                    1-   37     	extern	_INDF
                                    1-   38     	extern	_TMR0
                                    1-   39     	extern	_PCL
                                    1-   40     	extern	_STATUS
                                    1-   41     	extern	_FSR
                                    1-   42     	extern	_PORTA
                                    1-   43     	extern	_PORTB
                                    1-   44     	extern	_PCON
                                    1-   45     	extern	_BWUCON
                                    1-   46     	extern	_PCHBUF
                                    1-   47     	extern	_ABPLCON
                                    1-   48     	extern	_BPHCON
                                    1-   49     	extern	_INTE
                                    1-   50     	extern	_INTF
                                    1-   51     	extern	_ADMD
                                    1-   52     	extern	_ADR
                                    1-   53     	extern	_ADD
                                    1-   54     	extern	_ADVREFH
                                    1-   55     	extern	_ADCR
                                    1-   56     	extern	_AWUCON
                                    1-   57     	extern	_PACON
                                    1-   58     	extern	_INTEDG
                                    1-   59     	extern	_TMRH
                                    1-   60     	extern	_RFC
                                    1-   61     	extern	_TM3RH
                                    1-   62     	extern	_INTE2
                                    1-   63     	extern	_TMR1
                                    1-   64     	extern	_T1CR1
                                    1-   65     	extern	_T1CR2
                                    1-   66     	extern	_PWM1DUTY
                                    1-   67     	extern	_PS1CV
                                    1-   68     	extern	_BZ1CR
                                    1-   69     	extern	_IRCR
                                    1-   70     	extern	_TBHP
                                    1-   71     	extern	_TBHD
                                    1-   72     	extern	_TMR2
                                    1-   73     	extern	_T2CR1
                                    1-   74     	extern	_T2CR2
                                    1-   75     	extern	_PWM2DUTY
                                    1-   76     	extern	_PS2CV
                                    1-   77     	extern	_BZ2CR
                                    1-   78     	extern	_OSCCR
                                    1-   79     	extern	_TMR3
                                    1-   80     	extern	_T3CR1
                                    1-   81     	extern	_T3CR2
                                    1-   82     	extern	_PWM3DUTY
                                    1-   83     	extern	_PS3CV
                                    1-   84     	extern	_BZ3CR
                                    1-   85     	extern	_IOSTA
                                    1-   86     	extern	_IOSTB
                                    1-   87     	extern	_APHCON
                                    1-   88     	extern	_PS0CV
                                    1-   89     	extern	_BODCON
                                    1-   90     	extern	_PCON1
                                    1-   91     	extern	_T0MD
                                    1-   92     	extern	___sdcc_saved_fsr
                                    1-   93     	extern	___sdcc_saved_stk00
                                    1-   94     	extern	___sdcc_saved_stk01
                                    1-   95     	extern	__nyc_ny8_startup
                                    1-   96     ;--------------------------------------------------------
                                    1-   97     ; global declarations
                                    1-   98     ;--------------------------------------------------------
                                    1-   99     	extern	_F_wait_eoc
                                    1-  100     	extern	_F_AIN2_Convert
                                    1-  101     	extern	_F_AIN3_Convert
                                    1-  102     	extern	_F_AIN4_Convert
                                    1-  103     	extern	_checkOutA
                                    1-  104     	extern	_checkChrgV
                                    1-  105     	extern	_checkBatAD
                                    1-  106     	extern	_initAD
                                    1-  107     	extern	_delay
                                    1-  108     	extern	_chrgCtr
                                    1-  109     	extern	_keyRead
                                    1-  110     	extern	_gotoSleep
                                    1-  111     	extern	_pwmStop
                                    1-  112     	extern	_pwmInit
                                    1-  113     	extern	_pwm1Stop
                                    1-  114     	extern	_pwm1Init
                                    1-  115     	extern	_LED6ON
                                    1-  116     	extern	_LED5ON
                                    1-  117     	extern	_LED4ON
                                    1-  118     	extern	_LED3ON
                                    1-  119     	extern	_LED2ON
                                    1-  120     	extern	_LED1ON
                                    1-  121     	extern	_LedInput
                                    1-  122     	extern	_ledShow
                                    1-  123     	extern	_initSys
                                    1-  124     	extern	_powerOff
                                    1-  125     	extern	_keyCtr
                                    1-  126     	extern	_isr
                                    1-  127     	extern	_main
                                    1-  128     	extern	_Status
                                    1-  129     	extern	_duty
                                    1-  130     	extern	_intCount
                                    1-  131     	extern	_count500ms
                                    1-  132     	extern	_keyCount
                                    1-  133     	extern	_workStep
                                    1-  134     	extern	_ledStep
                                    1-  135     	extern	_preFG
                                    1-  136     	extern	_maxDuty
                                    1-  137     	extern	_pwStep
                                    1-  138     	extern	_R_AIN4_DATA
                                    1-  139     	extern	_R_AIN4_DATA_LB
                                    1-  140     	extern	_R_AIN3_DATA
                                    1-  141     	extern	_R_AIN3_DATA_LB
                                    1-  142     	extern	_R_AIN2_DATA
                                    1-  143     	extern	_R_AIN2_DATA_LB
                                    1-  144     	extern	_chrgTime
                                    1-  145     	extern	_startStep
                                    1-  146     	extern	_sleepTime
                                    1-  147     	extern	_count200ms
                                    1-  148     	extern	_count1s
                                    1-  149     	extern	_count900s
                                    1-  150     	extern	_lowBatTime
                                    1-  151     	extern	_ledTime
                                    1-  152     	extern	_overCount
                                    1-  153     	extern	_chrgCount
                                    1-  154     	extern	_ledLightTime
                                    1-  155     	extern	_currentDuty
                                    1-  156     	extern	_fullCount
                                    1-  157     	extern	_shanshuoTime
                                    1-  158     	extern	_firstTime
                                    1-  159     	extern	_tempDuty
                                    1-  160     	extern	_lowCount
                                    1-  161     	extern	_cDuty
                                    1-  162     	extern	_tempLedStep
                                    1-  163     	extern	_count5S
                                    1-  164     	extern	_ledDeadTime
                                    1-  165     	extern	_lockLedStep
                                    1-  166     	extern	_closeCount
                                    1-  167     	extern	_chrgStep
                                    1-  168     	extern	_prePwStep
                                    1-  169     	extern	_chrgduty
                                    1-  170     	extern	_maxduty
                                    1-  171     	extern	_count50ms
                                    1-  172     	extern	_chrgFullFlag
                                    1-  173     	extern	_preR_AIN4_DATA
                                    1-  174     	extern	_pwmTime
                                    1-  175     	extern	_limitDuty
                                    1-  176     	extern	_addTime
                                    1-  177     	extern	_subTime
                                    1-  178     	extern	_subMin
                                    1-  179     	extern	_debug
                                    1-  181     	extern PSAVE
                                    1-  182     	extern SSAVE
                                    1-  183     	extern WSAVE
                                    1-  184     	extern STK04
                                    1-  185     	extern STK03
                                    1-  186     	extern STK02
                                    1-  187     	extern STK01
                                    1-  188     	extern STK00
                                    1-  190     .segment "uninit", 0x20000020
 20000020                           1-  191     PSAVE:
                                    1-  192     	.res 1
 20000021                           1-  193     SSAVE:
                                    1-  194     	.res 1
 20000022                           1-  195     WSAVE:
                                    1-  196     	.res 1
 20000023                           1-  197     STK04:
                                    1-  198     	.res 1
 20000024                           1-  199     STK03:
                                    1-  200     	.res 1
 20000025                           1-  201     STK02:
                                    1-  202     	.res 1
 20000026                           1-  203     STK01:
                                    1-  204     	.res 1
 20000027                           1-  205     STK00:
                                    1-  206     	.res 1
                                    1-  208     ;--------------------------------------------------------
                                    1-  209     ; global definitions
                                    1-  210     ;--------------------------------------------------------
                                    1-  211     .segment "uninit"
     0000                           1-  212     _R_AIN4_DATA:
                                    1-  213     	.res	2
                                    1-  216     .segment "uninit"
     0000                           1-  217     _R_AIN4_DATA_LB:
                                    1-  218     	.res	1
                                    1-  221     .segment "uninit"
     0000                           1-  222     _R_AIN3_DATA:
                                    1-  223     	.res	2
                                    1-  226     .segment "uninit"
     0000                           1-  227     _R_AIN3_DATA_LB:
                                    1-  228     	.res	1
                                    1-  231     .segment "uninit"
     0000                           1-  232     _R_AIN2_DATA:
                                    1-  233     	.res	2
                                    1-  236     .segment "uninit"
     0000                           1-  237     _R_AIN2_DATA_LB:
                                    1-  238     	.res	1
                                    1-  241     ;--------------------------------------------------------
                                    1-  242     ; absolute symbol definitions
                                    1-  243     ;--------------------------------------------------------
                                    1-  244     ;--------------------------------------------------------
                                    1-  245     ; compiler-defined variables
                                    1-  246     ;--------------------------------------------------------
                                    1-  247     .segment "uninit"
     0000                           1-  248     r0x1066:
                                    1-  249     	.res	1
                                    1-  250     .segment "uninit"
     0000                           1-  251     r0x105E:
                                    1-  252     	.res	1
                                    1-  253     .segment "uninit"
     0000                           1-  254     r0x1065:
                                    1-  255     	.res	1
                                    1-  256     .segment "uninit"
     0000                           1-  257     r0x1064:
                                    1-  258     	.res	1
                                    1-  259     .segment "uninit"
     0000                           1-  260     r0x1063:
                                    1-  261     	.res	1
                                    1-  262     .segment "uninit"
     0000                           1-  263     r0x1062:
                                    1-  264     	.res	1
                                    1-  265     .segment "uninit"
     0000                           1-  266     r0x1061:
                                    1-  267     	.res	1
                                    1-  268     .segment "uninit"
     0000                           1-  269     r0x1060:
                                    1-  270     	.res	1
                                    1-  271     .segment "uninit"
     0000                           1-  272     r0x1057:
                                    1-  273     	.res	1
                                    1-  274     .segment "uninit"
     0000                           1-  275     r0x105F:
                                    1-  276     	.res	1
                                    1-  277     .segment "uninit"
     0000                           1-  278     r0x105D:
                                    1-  279     	.res	1
                                    1-  280     .segment "uninit"
     0000                           1-  281     r0x1058:
                                    1-  282     	.res	1
                                    1-  283     .segment "uninit"
     0000                           1-  284     r0x1059:
                                    1-  285     	.res	1
                                    1-  286     .segment "uninit"
     0000                           1-  287     r0x105A:
                                    1-  288     	.res	1
                                    1-  289     .segment "uninit"
     0000                           1-  290     r0x105C:
                                    1-  291     	.res	1
                                    1-  292     .segment "uninit"
     0000                           1-  293     r0x1037:
                                    1-  294     	.res	1
                                    1-  295     .segment "uninit"
     0000                           1-  296     r0x1038:
                                    1-  297     	.res	1
                                    1-  298     .segment "uninit"
     0000                           1-  299     r0x1055:
                                    1-  300     	.res	1
                                    1-  301     .segment "uninit"
     0000                           1-  302     r0x1056:
                                    1-  303     	.res	1
                                    1-  304     .segment "uninit"
     0000                           1-  305     r0x1051:
                                    1-  306     	.res	1
                                    1-  307     .segment "uninit"
     0000                           1-  308     r0x1052:
                                    1-  309     	.res	1
                                    1-  310     .segment "uninit"
     0000                           1-  311     r0x104B:
                                    1-  312     	.res	1
                                    1-  313     .segment "uninit"
     0000                           1-  314     r0x104C:
                                    1-  315     	.res	1
                                    1-  316     .segment "uninit"
     0000                           1-  317     r0x104D:
                                    1-  318     	.res	1
                                    1-  319     .segment "uninit"
     0000                           1-  320     r0x104E:
                                    1-  321     	.res	1
                                    1-  322     .segment "uninit"
     0000                           1-  323     r0x1045:
                                    1-  324     	.res	1
                                    1-  325     .segment "uninit"
     0000                           1-  326     r0x1046:
                                    1-  327     	.res	1
                                    1-  328     .segment "uninit"
     0000                           1-  329     r0x1047:
                                    1-  330     	.res	1
                                    1-  331     .segment "uninit"
     0000                           1-  332     r0x104A:
                                    1-  333     	.res	1
                                    1-  334     .segment "uninit"
     0000                           1-  335     r0x103F:
                                    1-  336     	.res	1
                                    1-  337     .segment "uninit"
     0000                           1-  338     r0x1040:
                                    1-  339     	.res	1
                                    1-  340     .segment "uninit"
     0000                           1-  341     r0x1041:
                                    1-  342     	.res	1
                                    1-  343     .segment "uninit"
     0000                           1-  344     r0x1044:
                                    1-  345     	.res	1
                                    1-  346     .segment "uninit"
     0000                           1-  347     r0x1039:
                                    1-  348     	.res	1
                                    1-  349     .segment "uninit"
     0000                           1-  350     r0x103A:
                                    1-  351     	.res	1
                                    1-  352     .segment "uninit"
     0000                           1-  353     r0x103B:
                                    1-  354     	.res	1
                                    1-  355     .segment "uninit"
     0000                           1-  356     r0x103E:
                                    1-  357     	.res	1
                                    1-  358     ;--------------------------------------------------------
                                    1-  359     ; initialized data
                                    1-  360     ;--------------------------------------------------------
                                    1-  362     .segment "idata"
     0000                           1-  363     _Status:
     0000 0000                      1-  364     	dw	0x00
                                    1-  368     .segment "idata"
     0000                           1-  369     _duty:
     0000 0000 0000                 1-  370     	dw	0x00, 0x00
                                    1-  374     .segment "idata"
     0000                           1-  375     _intCount:
     0000 0000                      1-  376     	dw	0x00
                                    1-  380     .segment "idata"
     0000                           1-  381     _count500ms:
     0000 0000                      1-  382     	dw	0x00
                                    1-  386     .segment "idata"
     0000                           1-  387     _keyCount:
     0000 0000                      1-  388     	dw	0x00
                                    1-  392     .segment "idata"
     0000                           1-  393     _workStep:
     0000 0000                      1-  394     	dw	0x00
                                    1-  398     .segment "idata"
     0000                           1-  399     _ledStep:
     0000 0000                      1-  400     	dw	0x00
                                    1-  404     .segment "idata"
     0000                           1-  405     _preFG:
     0000 0000                      1-  406     	dw	0x00
                                    1-  410     .segment "idata"
     0000                           1-  411     _maxDuty:
     0000 0000                      1-  412     	dw	0x00
                                    1-  416     .segment "idata"
     0000                           1-  417     _pwStep:
     0000 0000                      1-  418     	dw	0x00
                                    1-  422     .segment "idata"
     0000                           1-  423     _chrgTime:
     0000 0000 0000                 1-  424     	dw	0x00, 0x00
                                    1-  428     .segment "idata"
     0000                           1-  429     _startStep:
     0000 0000                      1-  430     	dw	0x00
                                    1-  434     .segment "idata"
     0000                           1-  435     _sleepTime:
     0000 0000 0000                 1-  436     	dw	0x00, 0x00
                                    1-  440     .segment "idata"
     0000                           1-  441     _count200ms:
     0000 0000                      1-  442     	dw	0x00
                                    1-  446     .segment "idata"
     0000                           1-  447     _count1s:
     0000 0000                      1-  448     	dw	0x00
                                    1-  452     .segment "idata"
     0000                           1-  453     _count900s:
     0000 0000 0000                 1-  454     	dw	0x00, 0x00
                                    1-  458     .segment "idata"
     0000                           1-  459     _lowBatTime:
     0000 0000                      1-  460     	dw	0x00
                                    1-  464     .segment "idata"
     0000                           1-  465     _ledTime:
     0000 0000                      1-  466     	dw	0x00
                                    1-  470     .segment "idata"
     0000                           1-  471     _overCount:
     0000 0000                      1-  472     	dw	0x00
                                    1-  476     .segment "idata"
     0000                           1-  477     _chrgCount:
     0000 0000                      1-  478     	dw	0x00
                                    1-  482     .segment "idata"
     0000                           1-  483     _ledLightTime:
     0000 0000                      1-  484     	dw	0x00
                                    1-  488     .segment "idata"
     0000                           1-  489     _currentDuty:
     0000 0000                      1-  490     	dw	0x00
                                    1-  494     .segment "idata"
     0000                           1-  495     _fullCount:
     0000 0000 0000                 1-  496     	dw	0x00, 0x00
                                    1-  500     .segment "idata"
     0000                           1-  501     _shanshuoTime:
     0000 0000                      1-  502     	dw	0x00
                                    1-  506     .segment "idata"
     0000                           1-  507     _firstTime:
     0000 0000                      1-  508     	dw	0x00
                                    1-  512     .segment "idata"
     0000                           1-  513     _tempDuty:
     0000 0000                      1-  514     	dw	0x00
                                    1-  518     .segment "idata"
     0000                           1-  519     _lowCount:
     0000 0000                      1-  520     	dw	0x00
                                    1-  524     .segment "idata"
     0000                           1-  525     _cDuty:
     0000 0000                      1-  526     	dw	0x00
                                    1-  530     .segment "idata"
     0000                           1-  531     _tempLedStep:
     0000 0000                      1-  532     	dw	0x00
                                    1-  536     .segment "idata"
     0000                           1-  537     _count5S:
     0000 0000 0000                 1-  538     	dw	0x00, 0x00
                                    1-  542     .segment "idata"
     0000                           1-  543     _ledDeadTime:
     0000 0000                      1-  544     	dw	0x00
                                    1-  548     .segment "idata"
     0000                           1-  549     _lockLedStep:
     0000 0000                      1-  550     	dw	0x00
                                    1-  554     .segment "idata"
     0000                           1-  555     _closeCount:
     0000 0000 0000                 1-  556     	dw	0x00, 0x00
                                    1-  560     .segment "idata"
     0000                           1-  561     _chrgStep:
     0000 0000                      1-  562     	dw	0x00
                                    1-  566     .segment "idata"
     0000                           1-  567     _prePwStep:
     0000 0000                      1-  568     	dw	0x00
                                    1-  572     .segment "idata"
     0000                           1-  573     _chrgduty:
     0000 0000                      1-  574     	dw	0x00
                                    1-  578     .segment "idata"
     0000                           1-  579     _maxduty:
     0000 0000                      1-  580     	dw	0x00
                                    1-  584     .segment "idata"
     0000                           1-  585     _count50ms:
     0000 0000                      1-  586     	dw	0x00
                                    1-  590     .segment "idata"
     0000                           1-  591     _chrgFullFlag:
     0000 0000                      1-  592     	dw	0x00
                                    1-  596     .segment "idata"
     0000                           1-  597     _preR_AIN4_DATA:
     0000 0000                      1-  598     	dw	0x00
                                    1-  602     .segment "idata"
     0000                           1-  603     _pwmTime:
     0000 0000                      1-  604     	dw	0x00
                                    1-  608     .segment "idata"
     0000                           1-  609     _limitDuty:
     0000 0000                      1-  610     	dw	0x00
                                    1-  614     .segment "idata"
     0000                           1-  615     _addTime:
     0000 0000                      1-  616     	dw	0x00
                                    1-  620     .segment "idata"
     0000                           1-  621     _subTime:
     0000 0000                      1-  622     	dw	0x00
                                    1-  626     .segment "idata"
     0000                           1-  627     _subMin:
     0000 0000                      1-  628     	dw	0x00
                                    1-  632     .segment "idata"
     0000                           1-  633     _debug:
     0000 0000                      1-  634     	dw	0x00
                                    1-  637     ;--------------------------------------------------------
                                    1-  638     ; overlayable items in internal ram 
                                    1-  639     ;--------------------------------------------------------
                                    1-  640     ;	udata_ovr
                                    1-  641     ;--------------------------------------------------------
                                    1-  642     ; reset vector 
                                    1-  643     ;--------------------------------------------------------
                                    1-  644     ORG	0x0000
     0000 3rrr                      1-  645     	LGOTO	__nyc_ny8_startup
                                    1-  646     ;--------------------------------------------------------
                                    1-  647     ; interrupt and initialization code
                                    1-  648     ;--------------------------------------------------------
                                    1-  649     ORG 0x0008
                                    1-  650     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  652     .segment "code"
     0000                           1-  653     __sdcc_interrupt:
                                    1-  654     ;***
                                    1-  655     ;  pBlock Stats: dbName = I
                                    1-  656     ;***
                                    1-  657     ;2 compiler assigned registers:
                                    1-  658     ;   STK00
                                    1-  659     ;   STK01
                                    1-  660     ;; Starting pCode block
     0000                           1-  661     _isr:
                                    1-  662     ; 0 exit points
                                    1-  663     	.line	123, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  664     	MOVAR	WSAVE
     0001 1503                      1-  665     	SWAPR	STATUS,W
     0002 0283                      1-  666     	CLRR	STATUS
     0003 00rr                      1-  667     	MOVAR	SSAVE
     0004 010A                      1-  668     	MOVR	PCHBUF,W
     0005 028A                      1-  669     	CLRR	PCHBUF
     0006 00rr                      1-  670     	MOVAR	PSAVE
     0007 0104                      1-  671     	MOVR	FSR,W
     0008 00rr                      1-  672     	MOVAR	___sdcc_saved_fsr
     0009 01rr                      1-  673     	MOVR	STK00,W
     000A 00rr                      1-  674     	MOVAR	___sdcc_saved_stk00
     000B 01rr                      1-  675     	MOVR	STK01,W
     000C 00rr                      1-  676     	MOVAR	___sdcc_saved_stk01
                                    1-  677     	.line	125, "main.c"; 	if(INTFbits.T0IF)
     000D 08rr                      1-  678     	BTRSS	_INTFbits,0
                                    1-  679     	MGOTO	_00126_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  680     	.line	127, "main.c"; 	TMR0 += 55;
     000F 2137                      1-  681     	MOVIA	0x37
     0010 03rr                      1-  682     	ADDAR	_TMR0,F
                                    1-  683     	.line	129, "main.c"; 	if(++intCount >= 100)
     0011 05rr                      1-  684     	INCR	_intCount,F
                                    1-  685     ;;unsigned compare: left < lit (0x64=100), size=1
     0012 2164                      1-  686     	MOVIA	0x64
     0013 04rr                      1-  687     	SUBAR	_intCount,W
     0014 0803                      1-  688     	BTRSS	STATUS,0
                                    1-  689     	MGOTO	_00126_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  690     	.line	131, "main.c"; 	IntFlag = 1;
     0016 18rr                      1-  691     	BSR	_Status,0
                                    1-  692     	.line	132, "main.c"; 	intCount = 0;
     0017 02rr                      1-  693     	CLRR	_intCount
                                    1-  694     	.line	133, "main.c"; 	if(++count500ms >= 40)
     0018 05rr                      1-  695     	INCR	_count500ms,F
                                    1-  696     ;;unsigned compare: left < lit (0x28=40), size=1
     0019 2128                      1-  697     	MOVIA	0x28
     001A 04rr                      1-  698     	SUBAR	_count500ms,W
     001B 0C03                      1-  699     	BTRSC	STATUS,0
                                    1-  700     	.line	134, "main.c"; 	count500ms = 0;
     001C 02rr                      1-  701     	CLRR	_count500ms
                                    1-  702     	.line	135, "main.c"; 	if(++count200ms >= 20)
     001D 05rr                      1-  703     	INCR	_count200ms,F
     001E 2114                      1-  704     	MOVIA	0x14
     001F 04rr                      1-  705     	SUBAR	_count200ms,W
     0020 0803                      1-  706     	BTRSS	STATUS,0
                                    1-  707     	MGOTO	_00110_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  708     	.line	137, "main.c"; 	count200ms = 0;
     0022 02rr                      1-  709     	CLRR	_count200ms
                                    1-  710     	.line	138, "main.c"; 	if(ledDeadTime > 0)
     0023 01rr                      1-  711     	MOVR	_ledDeadTime,W
     0024 0903                      1-  712     	BTRSS	STATUS,2
                                    1-  713     	.line	139, "main.c"; 	--ledDeadTime;
     0025 06rr                      1-  714     	DECR	_ledDeadTime,F
     0026                           1-  715     _00110_DS_:
                                    1-  716     	.line	141, "main.c"; 	if(++count1s >= 100)
     0026 05rr                      1-  717     	INCR	_count1s,F
     0027 2164                      1-  718     	MOVIA	0x64
     0028 04rr                      1-  719     	SUBAR	_count1s,W
     0029 0803                      1-  720     	BTRSS	STATUS,0
                                    1-  721     	MGOTO	_00126_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  722     	.line	143, "main.c"; 	count1s = 0;
     002B 02rr                      1-  723     	CLRR	_count1s
                                    1-  724     	.line	144, "main.c"; 	if(chrgFlag == 1 && pwStep == 6)
     002C 09rr                      1-  725     	BTRSS	_Status,3
                                    1-  726     	MGOTO	_00112_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
     002E 01rr                      1-  727     	MOVR	_pwStep,W
     002F 2406                      1-  728     	XORIA	0x06
     0030 0903                      1-  729     	BTRSS	STATUS,2
                                    1-  730     	MGOTO	_00112_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  731     	.line	146, "main.c"; 	++chrgTime;
     0032 05rr                      1-  732     	INCR	_chrgTime,F
     0033 0D03                      1-  733     	BTRSC	STATUS,2
     0034 05rr                      1-  734     	INCR	(_chrgTime + 1),F
     0035                           1-  735     _00112_DS_:
                                    1-  736     	.line	149, "main.c"; 	if(ledLightTime > 0)
     0035 01rr                      1-  737     	MOVR	_ledLightTime,W
     0036 0903                      1-  738     	BTRSS	STATUS,2
                                    1-  739     	.line	150, "main.c"; 	--ledLightTime;
     0037 06rr                      1-  740     	DECR	_ledLightTime,F
                                    1-  741     	.line	151, "main.c"; 	if(shanshuoTime > 0)
     0038 01rr                      1-  742     	MOVR	_shanshuoTime,W
     0039 0903                      1-  743     	BTRSS	STATUS,2
                                    1-  744     	.line	152, "main.c"; 	--shanshuoTime;
     003A 06rr                      1-  745     	DECR	_shanshuoTime,F
                                    1-  746     	.line	153, "main.c"; 	if(workStep)
     003B 01rr                      1-  747     	MOVR	_workStep,W
     003C 0D03                      1-  748     	BTRSC	STATUS,2
                                    1-  749     	MGOTO	_00119_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  750     	.line	155, "main.c"; 	++count900s;
     003E 05rr                      1-  751     	INCR	_count900s,F
     003F 0D03                      1-  752     	BTRSC	STATUS,2
     0040 05rr                      1-  753     	INCR	(_count900s + 1),F
                                    1-  754     	MGOTO	_00126_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042                           1-  755     _00119_DS_:
                                    1-  756     	.line	159, "main.c"; 	count900s = 0;
     0042 02rr                      1-  757     	CLRR	_count900s
     0043 02rr                      1-  758     	CLRR	(_count900s + 1)
     0044                           1-  759     _00126_DS_:
                                    1-  760     	.line	168, "main.c"; 	if(INTFbits.PABIF)
     0044 08rr                      1-  761     	BTRSS	_INTFbits,1
                                    1-  762     	MGOTO	_00128_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  763     	.line	170, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0046 21FD                      1-  764     	MOVIA	0xfd
     0047 00rr                      1-  765     	MOVAR	_INTF
     0048                           1-  766     _00128_DS_:
                                    1-  767     	.line	173, "main.c"; 	INTF = 0;
     0048 02rr                      1-  768     	CLRR	_INTF
                                    1-  769     	.line	175, "main.c"; 	}
     0049 01rr                      1-  770     	MOVR	___sdcc_saved_stk01,W
     004A 00rr                      1-  771     	MOVAR	STK01
     004B 01rr                      1-  772     	MOVR	___sdcc_saved_stk00,W
     004C 00rr                      1-  773     	MOVAR	STK00
     004D 01rr                      1-  774     	MOVR	___sdcc_saved_fsr,W
     004E 0084                      1-  775     	MOVAR	FSR
     004F 01rr                      1-  776     	MOVR	PSAVE,W
     0050 008A                      1-  777     	MOVAR	PCHBUF
     0051 0283                      1-  778     	CLRR	STATUS
     0052 15rr                      1-  779     	SWAPR	SSAVE,W
     0053 0083                      1-  780     	MOVAR	STATUS
     0054 15rr                      1-  781     	SWAPR	WSAVE,F
     0055 15rr                      1-  782     	SWAPR	WSAVE,W
     0056                           1-  783     END_OF_INTERRUPT:
     0056 0011                      1-  784     	RETIE	
                                    1-  786     ;--------------------------------------------------------
                                    1-  787     ; code
                                    1-  788     ;--------------------------------------------------------
                                    1-  789     ;***
                                    1-  790     ;  pBlock Stats: dbName = M
                                    1-  791     ;***
                                    1-  792     ;has an exit
                                    1-  793     ;functions called:
                                    1-  794     ;   _initSys
                                    1-  795     ;   _initAD
                                    1-  796     ;   _ledShow
                                    1-  797     ;   _pwmStop
                                    1-  798     ;   _powerOff
                                    1-  799     ;   _keyCtr
                                    1-  800     ;   _checkBatAD
                                    1-  801     ;   _checkOutA
                                    1-  802     ;   _chrgCtr
                                    1-  803     ;   _gotoSleep
                                    1-  804     ;   _powerOff
                                    1-  805     ;   _initSys
                                    1-  806     ;   _initAD
                                    1-  807     ;   _ledShow
                                    1-  808     ;   _pwmStop
                                    1-  809     ;   _powerOff
                                    1-  810     ;   _keyCtr
                                    1-  811     ;   _checkBatAD
                                    1-  812     ;   _checkOutA
                                    1-  813     ;   _chrgCtr
                                    1-  814     ;   _gotoSleep
                                    1-  815     ;   _powerOff
                                    1-  816     ;; Starting pCode block
                                    1-  817     .segment "code"; module=main, function=_main
     0000                           1-  819     _main:
                                    1-  820     ; 2 exit points
                                    1-  821     	.line	179, "main.c"; 	initSys();
                                    1-  822     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  823     	.line	180, "main.c"; 	initAD();
                                    1-  824     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  825     _00171_DS_:
                                    1-  826     	.line	183, "main.c"; 	CLRWDT();
     0002 0002                      1-  827     	clrwdt
                                    1-  828     	.line	184, "main.c"; 	ledShow();
                                    1-  829     	MCALL	_ledShow
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  830     	.line	211, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
     0004 01rr                      1-  831     	MOVR	_workStep,W
     0005 0D03                      1-  832     	BTRSC	STATUS,2
                                    1-  833     	MGOTO	_00134_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
     0007 01rr                      1-  834     	MOVR	_currentDuty,W
     0008 04rr                      1-  835     	SUBAR	_maxDuty,W
     0009 0C03                      1-  836     	BTRSC	STATUS,0
                                    1-  837     	MGOTO	_00134_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  838     	.line	213, "main.c"; 	currentDuty = currentDuty - 1;
     000B 06rr                      1-  839     	DECR	_currentDuty,F
                                    1-  840     	.line	214, "main.c"; 	PWM2DUTY = currentDuty;
     000C 01rr                      1-  841     	MOVR	_currentDuty,W
     000D 00rr                      1-  842     	SFUN	_PWM2DUTY
                                    1-  843     	.line	215, "main.c"; 	cDuty = currentDuty;
     000E 01rr                      1-  844     	MOVR	_currentDuty,W
     000F 00rr                      1-  845     	MOVAR	_cDuty
     0010                           1-  846     _00134_DS_:
                                    1-  847     	.line	217, "main.c"; 	if(!IntFlag)
     0010 08rr                      1-  848     	BTRSS	_Status,0
                                    1-  849     	MGOTO	_00171_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  850     	.line	219, "main.c"; 	IntFlag = 0;
     0012 1Crr                      1-  851     	BCR	_Status,0
                                    1-  852     	.line	221, "main.c"; 	if(shanshuoTime == 0 && pwStep == 0 && workStep > 0)
     0013 01rr                      1-  853     	MOVR	_shanshuoTime,W
     0014 0903                      1-  854     	BTRSS	STATUS,2
                                    1-  855     	MGOTO	_00141_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
     0016 01rr                      1-  856     	MOVR	_pwStep,W
     0017 0903                      1-  857     	BTRSS	STATUS,2
                                    1-  858     	MGOTO	_00141_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
     0019 01rr                      1-  859     	MOVR	_workStep,W
     001A 0D03                      1-  860     	BTRSC	STATUS,2
                                    1-  861     	MGOTO	_00141_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  862     	.line	223, "main.c"; 	if(++closeCount >= 1000)
     001C 05rr                      1-  863     	INCR	_closeCount,F
     001D 0D03                      1-  864     	BTRSC	STATUS,2
     001E 05rr                      1-  865     	INCR	(_closeCount + 1),F
                                    1-  866     ;;unsigned compare: left < lit (0x3E8=1000), size=2
     001F 2103                      1-  867     	MOVIA	0x03
     0020 04rr                      1-  868     	SUBAR	(_closeCount + 1),W
     0021 0903                      1-  869     	BTRSS	STATUS,2
                                    1-  870     	MGOTO	_00245_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023 21E8                      1-  871     	MOVIA	0xe8
     0024 04rr                      1-  872     	SUBAR	_closeCount,W
     0025                           1-  873     _00245_DS_:
     0025 0803                      1-  874     	BTRSS	STATUS,0
                                    1-  875     	MGOTO	_00142_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  876     	.line	225, "main.c"; 	closeCount = 0;
     0027 02rr                      1-  877     	CLRR	_closeCount
     0028 02rr                      1-  878     	CLRR	(_closeCount + 1)
                                    1-  879     	.line	226, "main.c"; 	workStep = 0;
     0029 02rr                      1-  880     	CLRR	_workStep
                                    1-  881     	.line	227, "main.c"; 	ledStep = 0;
     002A 02rr                      1-  882     	CLRR	_ledStep
                                    1-  883     	.line	228, "main.c"; 	pwmStop();
                                    1-  884     	MCALL	_pwmStop
     002B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  885     	MGOTO	_00142_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
     002D                           1-  886     _00141_DS_:
                                    1-  887     	.line	233, "main.c"; 	closeCount = 0;
     002D 02rr                      1-  888     	CLRR	_closeCount
     002E 02rr                      1-  889     	CLRR	(_closeCount + 1)
                                    1-  890     ;;unsigned compare: left < lit (0x5=5), size=1
     002F                           1-  891     _00142_DS_:
                                    1-  892     	.line	236, "main.c"; 	if(overCount >= 5 && workStep > 0)
     002F 2105                      1-  893     	MOVIA	0x05
     0030 04rr                      1-  894     	SUBAR	_overCount,W
     0031 0803                      1-  895     	BTRSS	STATUS,0
                                    1-  896     	MGOTO	_00148_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033 01rr                      1-  897     	MOVR	_workStep,W
     0034 0D03                      1-  898     	BTRSC	STATUS,2
                                    1-  899     	MGOTO	_00148_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  900     	.line	238, "main.c"; 	if(++count5S > 500)
     0036 05rr                      1-  901     	INCR	_count5S,F
     0037 0D03                      1-  902     	BTRSC	STATUS,2
     0038 05rr                      1-  903     	INCR	(_count5S + 1),F
                                    1-  904     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  905     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     0039 2101                      1-  906     	MOVIA	0x01
     003A 04rr                      1-  907     	SUBAR	(_count5S + 1),W
     003B 0903                      1-  908     	BTRSS	STATUS,2
                                    1-  909     	MGOTO	_00247_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 21F5                      1-  910     	MOVIA	0xf5
     003E 04rr                      1-  911     	SUBAR	_count5S,W
     003F                           1-  912     _00247_DS_:
     003F 0803                      1-  913     	BTRSS	STATUS,0
                                    1-  914     	MGOTO	_00149_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  915     	.line	240, "main.c"; 	overCount = 0;
     0041 02rr                      1-  916     	CLRR	_overCount
                                    1-  917     	.line	241, "main.c"; 	count5S = 0;
     0042 02rr                      1-  918     	CLRR	_count5S
     0043 02rr                      1-  919     	CLRR	(_count5S + 1)
                                    1-  920     	.line	242, "main.c"; 	ledDeadTime = 25;
     0044 2119                      1-  921     	MOVIA	0x19
     0045 00rr                      1-  922     	MOVAR	_ledDeadTime
                                    1-  923     	.line	243, "main.c"; 	powerOff();
                                    1-  924     	MCALL	_powerOff
     0046 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  925     	MGOTO	_00149_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
     0048                           1-  926     _00148_DS_:
                                    1-  927     	.line	248, "main.c"; 	count5S = 0;
     0048 02rr                      1-  928     	CLRR	_count5S
     0049 02rr                      1-  929     	CLRR	(_count5S + 1)
     004A                           1-  930     _00149_DS_:
                                    1-  931     	.line	250, "main.c"; 	if(chrgFlag == 0)
     004A 0Drr                      1-  932     	BTRSC	_Status,3
                                    1-  933     	MGOTO	_00152_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  934     	.line	251, "main.c"; 	keyCtr();
                                    1-  935     	MCALL	_keyCtr
     004C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  936     ;;unsigned compare: left < lit (0x3=3), size=1
     004D                           1-  937     _00152_DS_:
                                    1-  938     	.line	252, "main.c"; 	if(count200ms < 3)
     004D 2103                      1-  939     	MOVIA	0x03
     004E 04rr                      1-  940     	SUBAR	_count200ms,W
     004F 0C03                      1-  941     	BTRSC	STATUS,0
                                    1-  942     	MGOTO	_00157_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  943     	.line	254, "main.c"; 	checkBatAD();
                                    1-  944     	MCALL	_checkBatAD
     0051 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  945     	MGOTO	_00158_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  946     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  947     ;;unsigned compare: left >= lit (0x6=6), size=1
     0053                           1-  948     _00157_DS_:
                                    1-  949     	.line	256, "main.c"; 	else if(count200ms > 5 && count200ms < 19)
     0053 2106                      1-  950     	MOVIA	0x06
     0054 04rr                      1-  951     	SUBAR	_count200ms,W
     0055 0803                      1-  952     	BTRSS	STATUS,0
                                    1-  953     	MGOTO	_00158_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  954     ;;unsigned compare: left < lit (0x13=19), size=1
     0057 2113                      1-  955     	MOVIA	0x13
     0058 04rr                      1-  956     	SUBAR	_count200ms,W
     0059 0803                      1-  957     	BTRSS	STATUS,0
                                    1-  958     	.line	258, "main.c"; 	checkOutA();
                                    1-  959     	MCALL	_checkOutA
     005A 2rrr                      3-   66 m1      LCALL rom_address
     005B                           1-  960     _00158_DS_:
                                    1-  961     	.line	260, "main.c"; 	chrgCtr();
                                    1-  962     	MCALL	_chrgCtr
     005B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  963     	.line	263, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x08) == 0 && ledLightTime == 0 && ledDeadTime == 0 && shanshuoTime == 0)
     005C 01rr                      1-  964     	MOVR	_workStep,W
     005D 0903                      1-  965     	BTRSS	STATUS,2
                                    1-  966     	MGOTO	_00162_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
     005F 01rr                      1-  967     	MOVR	_keyCount,W
     0060 0903                      1-  968     	BTRSS	STATUS,2
                                    1-  969     	MGOTO	_00162_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
     0062 0Drr                      1-  970     	BTRSC	_PORTA,3
                                    1-  971     	MGOTO	_00162_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
     0064 01rr                      1-  972     	MOVR	_ledLightTime,W
     0065 0903                      1-  973     	BTRSS	STATUS,2
                                    1-  974     	MGOTO	_00162_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
     0067 01rr                      1-  975     	MOVR	_ledDeadTime,W
     0068 0903                      1-  976     	BTRSS	STATUS,2
                                    1-  977     	MGOTO	_00162_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
     006A 01rr                      1-  978     	MOVR	_shanshuoTime,W
     006B 0903                      1-  979     	BTRSS	STATUS,2
                                    1-  980     	MGOTO	_00162_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  981     	.line	265, "main.c"; 	if(++sleepTime > 20)
     006D 05rr                      1-  982     	INCR	_sleepTime,F
     006E 0D03                      1-  983     	BTRSC	STATUS,2
     006F 05rr                      1-  984     	INCR	(_sleepTime + 1),F
                                    1-  985     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  986     ;;unsigned compare: left >= lit (0x15=21), size=2
     0070 2100                      1-  987     	MOVIA	0x00
     0071 04rr                      1-  988     	SUBAR	(_sleepTime + 1),W
     0072 0903                      1-  989     	BTRSS	STATUS,2
                                    1-  990     	MGOTO	_00251_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
     0074 2115                      1-  991     	MOVIA	0x15
     0075 04rr                      1-  992     	SUBAR	_sleepTime,W
     0076                           1-  993     _00251_DS_:
     0076 0803                      1-  994     	BTRSS	STATUS,0
                                    1-  995     	MGOTO	_00162_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  996     	.line	267, "main.c"; 	gotoSleep();
                                    1-  997     	MCALL	_gotoSleep
     0078 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  998     ;;unsigned compare: left < lit (0x384=900), size=2
     0079                           1-  999     _00162_DS_:
                                    1- 1000     	.line	271, "main.c"; 	if(count900s >= 900)
     0079 2103                      1- 1001     	MOVIA	0x03
     007A 04rr                      1- 1002     	SUBAR	(_count900s + 1),W
     007B 0903                      1- 1003     	BTRSS	STATUS,2
                                    1- 1004     	MGOTO	_00252_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
     007D 2184                      1- 1005     	MOVIA	0x84
     007E 04rr                      1- 1006     	SUBAR	_count900s,W
     007F                           1- 1007     _00252_DS_:
     007F 0803                      1- 1008     	BTRSS	STATUS,0
                                    1- 1009     	MGOTO	_00171_DS_
     0080 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1010     	.line	273, "main.c"; 	powerOff();
                                    1- 1011     	MCALL	_powerOff
     0081 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1012     	MGOTO	_00171_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1013     	.line	277, "main.c"; 	}
                                    1- 1014     	RETURN	
     0083 0010                      3-   40 m1      ret
                                    1- 1015     ; exit point of _main
                                    1- 1017     ;***
                                    1- 1018     ;  pBlock Stats: dbName = C
                                    1- 1019     ;***
                                    1- 1020     ;has an exit
                                    1- 1021     ;; Starting pCode block
                                    1- 1022     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1024     _F_wait_eoc:
                                    1- 1025     ; 2 exit points
     0000                           1- 1026     _00772_DS_:
                                    1- 1027     	.line	985, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1028     	BTRSS	_ADMDbits,5
                                    1- 1029     	MGOTO	_00772_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1030     	.line	987, "main.c"; 	}
                                    1- 1031     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1032     ; exit point of _F_wait_eoc
                                    1- 1034     ;***
                                    1- 1035     ;  pBlock Stats: dbName = C
                                    1- 1036     ;***
                                    1- 1037     ;has an exit
                                    1- 1038     ;functions called:
                                    1- 1039     ;   _delay
                                    1- 1040     ;   _F_wait_eoc
                                    1- 1041     ;   _delay
                                    1- 1042     ;   _F_wait_eoc
                                    1- 1043     ;6 compiler assigned registers:
                                    1- 1044     ;   r0x1039
                                    1- 1045     ;   r0x103A
                                    1- 1046     ;   r0x103B
                                    1- 1047     ;   r0x103C
                                    1- 1048     ;   r0x103D
                                    1- 1049     ;   r0x103E
                                    1- 1050     ;; Starting pCode block
                                    1- 1051     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1053     ;local variable name mapping:
     0000                           1- 1056     _F_AIN2_Convert:
                                    1- 1057     ; 2 exit points
                                    1- 1058     	.line	968, "main.c"; 	void F_AIN2_Convert(char count)
     0000 00rr                      1- 1059     	MOVAR	r0x1039
                                    1- 1060     	.line	970, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
     0001 02rr                      1- 1061     	CLRR	_R_AIN2_DATA_LB
     0002 02rr                      1- 1062     	CLRR	_R_AIN2_DATA
     0003 02rr                      1- 1063     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1064     	.line	972, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0004 2192                      1- 1065     	MOVIA	0x92
     0005 00rr                      1- 1066     	MOVAR	_ADMD
                                    1- 1067     	.line	973, "main.c"; 	delay(200);	
     0006 21C8                      1- 1068     	MOVIA	0xc8
                                    1- 1069     	MCALL	_delay
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1070     	.line	974, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1- 1071     	MOVIA	0x01
     0009 00rr                      1- 1072     	MOVAR	r0x103A
     000A                           1- 1073     _00765_DS_:
     000A 01rr                      1- 1074     	MOVR	r0x103A,W
     000B 04rr                      1- 1075     	SUBAR	r0x1039,W
     000C 0803                      1- 1076     	BTRSS	STATUS,0
                                    1- 1077     	MGOTO	_00767_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1078     	.line	976, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000E 1Brr                      1- 1079     	BSR	_ADMDbits,6
                                    1- 1080     	.line	977, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1081     	MCALL	_F_wait_eoc
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1082     	.line	978, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0010 210F                      1- 1083     	MOVIA	0x0f
     0011 10rr                      1- 1084     	ANDAR	_ADR,W
                                    1- 1085     ;;3	MOVAR	r0x103B
     0012 03rr                      1- 1086     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1087     	.line	979, "main.c"; 	R_AIN2_DATA    += ADD; 
     0013 01rr                      1- 1088     	MOVR	_ADD,W
     0014 00rr                      1- 1089     	MOVAR	r0x103B
                                    1- 1090     ;;1	CLRR	r0x103C
                                    1- 1091     ;;109	MOVR	r0x103B,W
                                    1- 1092     ;;107	MOVAR	r0x103D
     0015 2100                      1- 1093     	MOVIA	0x00
     0016 00rr                      1- 1094     	MOVAR	r0x103E
                                    1- 1095     ;;108	MOVR	r0x103D,W
     0017 01rr                      1- 1096     	MOVR	r0x103B,W
     0018 03rr                      1- 1097     	ADDAR	_R_AIN2_DATA,F
     0019 01rr                      1- 1098     	MOVR	r0x103E,W
     001A 0C03                      1- 1099     	BTRSC	STATUS,0
     001B 16rr                      1- 1100     	INCRSZ	r0x103E,W
     001C 03rr                      1- 1101     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1102     	.line	974, "main.c"; 	for(i=1;i<=count;i++)
     001D 05rr                      1- 1103     	INCR	r0x103A,F
                                    1- 1104     	MGOTO	_00765_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
     001F                           1- 1105     _00767_DS_:
                                    1- 1106     	.line	981, "main.c"; 	}
                                    1- 1107     	RETURN	
     001F 0010                      3-   40 m1      ret
                                    1- 1108     ; exit point of _F_AIN2_Convert
                                    1- 1110     ;***
                                    1- 1111     ;  pBlock Stats: dbName = C
                                    1- 1112     ;***
                                    1- 1113     ;has an exit
                                    1- 1114     ;functions called:
                                    1- 1115     ;   _delay
                                    1- 1116     ;   _F_wait_eoc
                                    1- 1117     ;   _delay
                                    1- 1118     ;   _F_wait_eoc
                                    1- 1119     ;6 compiler assigned registers:
                                    1- 1120     ;   r0x103F
                                    1- 1121     ;   r0x1040
                                    1- 1122     ;   r0x1041
                                    1- 1123     ;   r0x1042
                                    1- 1124     ;   r0x1043
                                    1- 1125     ;   r0x1044
                                    1- 1126     ;; Starting pCode block
                                    1- 1127     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1- 1129     ;local variable name mapping:
     0000                           1- 1132     _F_AIN3_Convert:
                                    1- 1133     ; 2 exit points
                                    1- 1134     	.line	953, "main.c"; 	void F_AIN3_Convert(char count)
     0000 00rr                      1- 1135     	MOVAR	r0x103F
                                    1- 1136     	.line	955, "main.c"; 	R_AIN3_DATA=R_AIN3_DATA_LB=0x00;   
     0001 02rr                      1- 1137     	CLRR	_R_AIN3_DATA_LB
     0002 02rr                      1- 1138     	CLRR	_R_AIN3_DATA
     0003 02rr                      1- 1139     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1140     	.line	957, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0004 2193                      1- 1141     	MOVIA	0x93
     0005 00rr                      1- 1142     	MOVAR	_ADMD
                                    1- 1143     	.line	958, "main.c"; 	delay(200);	
     0006 21C8                      1- 1144     	MOVIA	0xc8
                                    1- 1145     	MCALL	_delay
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1146     	.line	959, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1- 1147     	MOVIA	0x01
     0009 00rr                      1- 1148     	MOVAR	r0x1040
     000A                           1- 1149     _00756_DS_:
     000A 01rr                      1- 1150     	MOVR	r0x1040,W
     000B 04rr                      1- 1151     	SUBAR	r0x103F,W
     000C 0803                      1- 1152     	BTRSS	STATUS,0
                                    1- 1153     	MGOTO	_00758_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1154     	.line	961, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000E 1Brr                      1- 1155     	BSR	_ADMDbits,6
                                    1- 1156     	.line	962, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1157     	MCALL	_F_wait_eoc
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1158     	.line	963, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0010 210F                      1- 1159     	MOVIA	0x0f
     0011 10rr                      1- 1160     	ANDAR	_ADR,W
                                    1- 1161     ;;3	MOVAR	r0x1041
     0012 03rr                      1- 1162     	ADDAR	_R_AIN3_DATA_LB,F
                                    1- 1163     	.line	964, "main.c"; 	R_AIN3_DATA    += ADD; 
     0013 01rr                      1- 1164     	MOVR	_ADD,W
     0014 00rr                      1- 1165     	MOVAR	r0x1041
                                    1- 1166     ;;1	CLRR	r0x1042
                                    1- 1167     ;;106	MOVR	r0x1041,W
                                    1- 1168     ;;104	MOVAR	r0x1043
     0015 2100                      1- 1169     	MOVIA	0x00
     0016 00rr                      1- 1170     	MOVAR	r0x1044
                                    1- 1171     ;;105	MOVR	r0x1043,W
     0017 01rr                      1- 1172     	MOVR	r0x1041,W
     0018 03rr                      1- 1173     	ADDAR	_R_AIN3_DATA,F
     0019 01rr                      1- 1174     	MOVR	r0x1044,W
     001A 0C03                      1- 1175     	BTRSC	STATUS,0
     001B 16rr                      1- 1176     	INCRSZ	r0x1044,W
     001C 03rr                      1- 1177     	ADDAR	(_R_AIN3_DATA + 1),F
                                    1- 1178     	.line	959, "main.c"; 	for(i=1;i<=count;i++)
     001D 05rr                      1- 1179     	INCR	r0x1040,F
                                    1- 1180     	MGOTO	_00756_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
     001F                           1- 1181     _00758_DS_:
                                    1- 1182     	.line	966, "main.c"; 	}
                                    1- 1183     	RETURN	
     001F 0010                      3-   40 m1      ret
                                    1- 1184     ; exit point of _F_AIN3_Convert
                                    1- 1186     ;***
                                    1- 1187     ;  pBlock Stats: dbName = C
                                    1- 1188     ;***
                                    1- 1189     ;has an exit
                                    1- 1190     ;functions called:
                                    1- 1191     ;   _delay
                                    1- 1192     ;   _F_wait_eoc
                                    1- 1193     ;   _delay
                                    1- 1194     ;   _F_wait_eoc
                                    1- 1195     ;6 compiler assigned registers:
                                    1- 1196     ;   r0x1045
                                    1- 1197     ;   r0x1046
                                    1- 1198     ;   r0x1047
                                    1- 1199     ;   r0x1048
                                    1- 1200     ;   r0x1049
                                    1- 1201     ;   r0x104A
                                    1- 1202     ;; Starting pCode block
                                    1- 1203     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1205     ;local variable name mapping:
     0000                           1- 1208     _F_AIN4_Convert:
                                    1- 1209     ; 2 exit points
                                    1- 1210     	.line	938, "main.c"; 	void F_AIN4_Convert(char count)
     0000 00rr                      1- 1211     	MOVAR	r0x1045
                                    1- 1212     	.line	940, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
     0001 02rr                      1- 1213     	CLRR	_R_AIN4_DATA_LB
     0002 02rr                      1- 1214     	CLRR	_R_AIN4_DATA
     0003 02rr                      1- 1215     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1216     	.line	942, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0004 2194                      1- 1217     	MOVIA	0x94
     0005 00rr                      1- 1218     	MOVAR	_ADMD
                                    1- 1219     	.line	943, "main.c"; 	delay(200);	
     0006 21C8                      1- 1220     	MOVIA	0xc8
                                    1- 1221     	MCALL	_delay
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1222     	.line	944, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1- 1223     	MOVIA	0x01
     0009 00rr                      1- 1224     	MOVAR	r0x1046
     000A                           1- 1225     _00747_DS_:
     000A 01rr                      1- 1226     	MOVR	r0x1046,W
     000B 04rr                      1- 1227     	SUBAR	r0x1045,W
     000C 0803                      1- 1228     	BTRSS	STATUS,0
                                    1- 1229     	MGOTO	_00749_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1230     	.line	946, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000E 1Brr                      1- 1231     	BSR	_ADMDbits,6
                                    1- 1232     	.line	947, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1233     	MCALL	_F_wait_eoc
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1234     	.line	948, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0010 210F                      1- 1235     	MOVIA	0x0f
     0011 10rr                      1- 1236     	ANDAR	_ADR,W
                                    1- 1237     ;;3	MOVAR	r0x1047
     0012 03rr                      1- 1238     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1239     	.line	949, "main.c"; 	R_AIN4_DATA    += ADD; 
     0013 01rr                      1- 1240     	MOVR	_ADD,W
     0014 00rr                      1- 1241     	MOVAR	r0x1047
                                    1- 1242     ;;1	CLRR	r0x1048
                                    1- 1243     ;;103	MOVR	r0x1047,W
                                    1- 1244     ;;101	MOVAR	r0x1049
     0015 2100                      1- 1245     	MOVIA	0x00
     0016 00rr                      1- 1246     	MOVAR	r0x104A
                                    1- 1247     ;;102	MOVR	r0x1049,W
     0017 01rr                      1- 1248     	MOVR	r0x1047,W
     0018 03rr                      1- 1249     	ADDAR	_R_AIN4_DATA,F
     0019 01rr                      1- 1250     	MOVR	r0x104A,W
     001A 0C03                      1- 1251     	BTRSC	STATUS,0
     001B 16rr                      1- 1252     	INCRSZ	r0x104A,W
     001C 03rr                      1- 1253     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1254     	.line	944, "main.c"; 	for(i=1;i<=count;i++)
     001D 05rr                      1- 1255     	INCR	r0x1046,F
                                    1- 1256     	MGOTO	_00747_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
     001F                           1- 1257     _00749_DS_:
                                    1- 1258     	.line	951, "main.c"; 	}
                                    1- 1259     	RETURN	
     001F 0010                      3-   40 m1      ret
                                    1- 1260     ; exit point of _F_AIN4_Convert
                                    1- 1262     ;***
                                    1- 1263     ;  pBlock Stats: dbName = C
                                    1- 1264     ;***
                                    1- 1265     ;has an exit
                                    1- 1266     ;functions called:
                                    1- 1267     ;   _F_AIN4_Convert
                                    1- 1268     ;   _F_AIN4_Convert
                                    1- 1269     ;4 compiler assigned registers:
                                    1- 1270     ;   r0x104B
                                    1- 1271     ;   r0x104C
                                    1- 1272     ;   r0x104D
                                    1- 1273     ;   r0x104E
                                    1- 1274     ;; Starting pCode block
                                    1- 1275     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1277     _checkOutA:
                                    1- 1278     ; 2 exit points
                                    1- 1279     	.line	861, "main.c"; 	preR_AIN4_DATA = R_AIN4_DATA;
     0000 01rr                      1- 1280     	MOVR	_R_AIN4_DATA,W
     0001 00rr                      1- 1281     	MOVAR	_preR_AIN4_DATA
                                    1- 1282     	.line	862, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
     0002 02rr                      1- 1283     	CLRR	_R_AIN4_DATA_LB
     0003 02rr                      1- 1284     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1285     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1286     	.line	863, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1287     	MOVIA	0x08
                                    1- 1288     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1289     	.line	864, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
     0007 15rr                      1- 1290     	SWAPR	(_R_AIN4_DATA + 1),W
     0008 22F0                      1- 1291     	ANDIA	0xf0
     0009 00rr                      1- 1292     	MOVAR	(_R_AIN4_DATA + 1)
     000A 15rr                      1- 1293     	SWAPR	_R_AIN4_DATA,W
     000B 00rr                      1- 1294     	MOVAR	_R_AIN4_DATA
     000C 220F                      1- 1295     	ANDIA	0x0f
     000D 11rr                      1- 1296     	IORAR	(_R_AIN4_DATA + 1),F
     000E 12rr                      1- 1297     	XORAR	_R_AIN4_DATA,F
                                    1- 1298     	.line	865, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     000F 21F0                      1- 1299     	MOVIA	0xf0
     0010 10rr                      1- 1300     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1301     	.line	866, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0011 01rr                      1- 1302     	MOVR	_R_AIN4_DATA_LB,W
     0012 00rr                      1- 1303     	MOVAR	r0x104B
     0013 02rr                      1- 1304     	CLRR	r0x104C
     0014 01rr                      1- 1305     	MOVR	r0x104B,W
     0015 2100                      1- 1306     	MOVIA	0x00
     0016 00rr                      1- 1307     	MOVAR	r0x104E
                                    1- 1308     ;;111	MOVR	r0x104D,W
     0017 01rr                      1- 1309     	MOVR	r0x104B,W
     0018 00rr                      1- 1310     	MOVAR	r0x104D
     0019 03rr                      1- 1311     	ADDAR	_R_AIN4_DATA,F
     001A 01rr                      1- 1312     	MOVR	r0x104E,W
     001B 0C03                      1- 1313     	BTRSC	STATUS,0
     001C 16rr                      1- 1314     	INCRSZ	r0x104E,W
     001D 03rr                      1- 1315     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1316     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
                                    1- 1317     	.line	867, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     001E 1C03                      1- 1318     	BCR	STATUS,0
     001F 13rr                      1- 1319     	RRR	(_R_AIN4_DATA + 1),F
     0020 13rr                      1- 1320     	RRR	_R_AIN4_DATA,F
                                    1- 1321     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0021 1C03                      1- 1322     	BCR	STATUS,0
     0022 13rr                      1- 1323     	RRR	(_R_AIN4_DATA + 1),F
     0023 13rr                      1- 1324     	RRR	_R_AIN4_DATA,F
                                    1- 1325     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0024 1C03                      1- 1326     	BCR	STATUS,0
     0025 13rr                      1- 1327     	RRR	(_R_AIN4_DATA + 1),F
     0026 13rr                      1- 1328     	RRR	_R_AIN4_DATA,F
                                    1- 1329     	.line	868, "main.c"; 	if(debug)
     0027 01rr                      1- 1330     	MOVR	_debug,W
     0028 0D03                      1- 1331     	BTRSC	STATUS,2
                                    1- 1332     	MGOTO	_00682_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1333     	.line	869, "main.c"; 	R_AIN4_DATA = OUTA;
     002A 212D                      1- 1334     	MOVIA	0x2d
     002B 00rr                      1- 1335     	MOVAR	_R_AIN4_DATA
     002C 2101                      1- 1336     	MOVIA	0x01
     002D 00rr                      1- 1337     	MOVAR	(_R_AIN4_DATA + 1)
     002E                           1- 1338     _00682_DS_:
                                    1- 1339     	.line	870, "main.c"; 	R_AIN4_DATA = (R_AIN4_DATA+preR_AIN4_DATA)/2;
     002E 01rr                      1- 1340     	MOVR	_preR_AIN4_DATA,W
     002F 00rr                      1- 1341     	MOVAR	r0x104D
                                    1- 1342     ;;3	MOVAR	r0x104B
     0030 02rr                      1- 1343     	CLRR	r0x104C
                                    1- 1344     ;;110	MOVR	r0x104B,W
     0031 2100                      1- 1345     	MOVIA	0x00
     0032 00rr                      1- 1346     	MOVAR	r0x104E
     0033 01rr                      1- 1347     	MOVR	r0x104D,W
     0034 03rr                      1- 1348     	ADDAR	_R_AIN4_DATA,W
     0035 00rr                      1- 1349     	MOVAR	r0x104B
     0036 01rr                      1- 1350     	MOVR	(_R_AIN4_DATA + 1),W
     0037 00rr                      1- 1351     	MOVAR	r0x104C
     0038 01rr                      1- 1352     	MOVR	r0x104E,W
     0039 0C03                      1- 1353     	BTRSC	STATUS,0
     003A 16rr                      1- 1354     	INCRSZ	r0x104E,W
     003B 03rr                      1- 1355     	ADDAR	r0x104C,F
                                    1- 1356     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     003C 1C03                      1- 1357     	BCR	STATUS,0
     003D 13rr                      1- 1358     	RRR	r0x104C,W
     003E 00rr                      1- 1359     	MOVAR	(_R_AIN4_DATA + 1)
     003F 13rr                      1- 1360     	RRR	r0x104B,W
     0040 00rr                      1- 1361     	MOVAR	_R_AIN4_DATA
                                    1- 1362     ;;unsigned compare: left < lit (0x6=6), size=1
                                    1- 1363     	.line	871, "main.c"; 	if(workStep < 6 && R_AIN4_DATA > 200)
     0041 2106                      1- 1364     	MOVIA	0x06
     0042 04rr                      1- 1365     	SUBAR	_workStep,W
     0043 0C03                      1- 1366     	BTRSC	STATUS,0
                                    1- 1367     	MGOTO	_00700_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1368     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1369     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0045 2100                      1- 1370     	MOVIA	0x00
     0046 04rr                      1- 1371     	SUBAR	(_R_AIN4_DATA + 1),W
     0047 0903                      1- 1372     	BTRSS	STATUS,2
                                    1- 1373     	MGOTO	_00736_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 21C9                      1- 1374     	MOVIA	0xc9
     004A 04rr                      1- 1375     	SUBAR	_R_AIN4_DATA,W
     004B                           1- 1376     _00736_DS_:
     004B 0803                      1- 1377     	BTRSS	STATUS,0
                                    1- 1378     	MGOTO	_00700_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1379     	.line	873, "main.c"; 	if(++overCount > 5)
     004D 05rr                      1- 1380     	INCR	_overCount,F
                                    1- 1381     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1382     ;;unsigned compare: left >= lit (0x6=6), size=1
     004E 2106                      1- 1383     	MOVIA	0x06
     004F 04rr                      1- 1384     	SUBAR	_overCount,W
     0050 0803                      1- 1385     	BTRSS	STATUS,0
                                    1- 1386     	MGOTO	_00703_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1387     	.line	875, "main.c"; 	overCount = 5;
     0052 2105                      1- 1388     	MOVIA	0x05
     0053 00rr                      1- 1389     	MOVAR	_overCount
                                    1- 1390     	.line	876, "main.c"; 	tempLedStep = workStep;
     0054 01rr                      1- 1391     	MOVR	_workStep,W
     0055 00rr                      1- 1392     	MOVAR	_tempLedStep
                                    1- 1393     	.line	876, "main.c"; 	}
                                    1- 1394     	MGOTO	_00703_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1395     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1396     ;;unsigned compare: left >= lit (0x191=401), size=2
     0057                           1- 1397     _00700_DS_:
                                    1- 1398     	.line	879, "main.c"; 	else if(R_AIN4_DATA > 400)
     0057 2101                      1- 1399     	MOVIA	0x01
     0058 04rr                      1- 1400     	SUBAR	(_R_AIN4_DATA + 1),W
     0059 0903                      1- 1401     	BTRSS	STATUS,2
                                    1- 1402     	MGOTO	_00738_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B 2191                      1- 1403     	MOVIA	0x91
     005C 04rr                      1- 1404     	SUBAR	_R_AIN4_DATA,W
     005D                           1- 1405     _00738_DS_:
     005D 0803                      1- 1406     	BTRSS	STATUS,0
                                    1- 1407     	MGOTO	_00697_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1408     	.line	881, "main.c"; 	if(++overCount > 5)
     005F 05rr                      1- 1409     	INCR	_overCount,F
                                    1- 1410     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1411     ;;unsigned compare: left >= lit (0x6=6), size=1
     0060 2106                      1- 1412     	MOVIA	0x06
     0061 04rr                      1- 1413     	SUBAR	_overCount,W
     0062 0803                      1- 1414     	BTRSS	STATUS,0
                                    1- 1415     	MGOTO	_00703_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1416     	.line	883, "main.c"; 	overCount = 5;
     0064 2105                      1- 1417     	MOVIA	0x05
     0065 00rr                      1- 1418     	MOVAR	_overCount
                                    1- 1419     	.line	884, "main.c"; 	tempLedStep = workStep;
     0066 01rr                      1- 1420     	MOVR	_workStep,W
     0067 00rr                      1- 1421     	MOVAR	_tempLedStep
                                    1- 1422     	.line	884, "main.c"; 	//        		if(tempDuty > 50)
                                    1- 1423     	MGOTO	_00703_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1424     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1425     ;;unsigned compare: left >= lit (0x2E=46), size=2
     0069                           1- 1426     _00697_DS_:
                                    1- 1427     	.line	892, "main.c"; 	else if(R_AIN4_DATA > 45)
     0069 2100                      1- 1428     	MOVIA	0x00
     006A 04rr                      1- 1429     	SUBAR	(_R_AIN4_DATA + 1),W
     006B 0903                      1- 1430     	BTRSS	STATUS,2
                                    1- 1431     	MGOTO	_00740_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
     006D 212E                      1- 1432     	MOVIA	0x2e
     006E 04rr                      1- 1433     	SUBAR	_R_AIN4_DATA,W
     006F                           1- 1434     _00740_DS_:
     006F 0803                      1- 1435     	BTRSS	STATUS,0
                                    1- 1436     	MGOTO	_00694_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1437     	.line	894, "main.c"; 	if(overCount > 0)
     0071 01rr                      1- 1438     	MOVR	_overCount,W
     0072 0D03                      1- 1439     	BTRSC	STATUS,2
                                    1- 1440     	MGOTO	_00703_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1441     	.line	896, "main.c"; 	overCount--;
     0074 06rr                      1- 1442     	DECR	_overCount,F
                                    1- 1443     	.line	896, "main.c"; 	}
                                    1- 1444     	MGOTO	_00703_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
     0076                           1- 1445     _00694_DS_:
                                    1- 1446     	.line	913, "main.c"; 	if(overCount > 0)
     0076 01rr                      1- 1447     	MOVR	_overCount,W
     0077 0903                      1- 1448     	BTRSS	STATUS,2
                                    1- 1449     	.line	915, "main.c"; 	overCount--;
     0078 06rr                      1- 1450     	DECR	_overCount,F
                                    1- 1451     	.line	927, "main.c"; 	if(workStep > 0)
     0079 01rr                      1- 1452     	MOVR	_workStep,W
     007A 0D03                      1- 1453     	BTRSC	STATUS,2
                                    1- 1454     	MGOTO	_00703_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1455     	.line	928, "main.c"; 	ledStep = workStep;
     007C 01rr                      1- 1456     	MOVR	_workStep,W
     007D 00rr                      1- 1457     	MOVAR	_ledStep
     007E                           1- 1458     _00703_DS_:
                                    1- 1459     	.line	932, "main.c"; 	}
                                    1- 1460     	RETURN	
     007E 0010                      3-   40 m1      ret
                                    1- 1461     ; exit point of _checkOutA
                                    1- 1463     ;***
                                    1- 1464     ;  pBlock Stats: dbName = C
                                    1- 1465     ;***
                                    1- 1466     ;has an exit
                                    1- 1467     ;functions called:
                                    1- 1468     ;   _F_AIN3_Convert
                                    1- 1469     ;   _F_AIN3_Convert
                                    1- 1470     ;4 compiler assigned registers:
                                    1- 1471     ;   r0x104F
                                    1- 1472     ;   r0x1050
                                    1- 1473     ;   r0x1051
                                    1- 1474     ;   r0x1052
                                    1- 1475     ;; Starting pCode block
                                    1- 1476     .segment "code"; module=main, function=_checkChrgV
     0000                           1- 1478     _checkChrgV:
                                    1- 1479     ; 2 exit points
                                    1- 1480     	.line	849, "main.c"; 	R_AIN3_DATA = R_AIN3_DATA_LB = 0x00;
     0000 02rr                      1- 1481     	CLRR	_R_AIN3_DATA_LB
     0001 02rr                      1- 1482     	CLRR	_R_AIN3_DATA
     0002 02rr                      1- 1483     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1484     	.line	850, "main.c"; 	F_AIN3_Convert(8);					// execute AIN0 ADC converting 8 times
     0003 2108                      1- 1485     	MOVIA	0x08
                                    1- 1486     	MCALL	_F_AIN3_Convert
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1487     	.line	851, "main.c"; 	R_AIN3_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
     0005 15rr                      1- 1488     	SWAPR	(_R_AIN3_DATA + 1),W
     0006 22F0                      1- 1489     	ANDIA	0xf0
     0007 00rr                      1- 1490     	MOVAR	(_R_AIN3_DATA + 1)
     0008 15rr                      1- 1491     	SWAPR	_R_AIN3_DATA,W
     0009 00rr                      1- 1492     	MOVAR	_R_AIN3_DATA
     000A 220F                      1- 1493     	ANDIA	0x0f
     000B 11rr                      1- 1494     	IORAR	(_R_AIN3_DATA + 1),F
     000C 12rr                      1- 1495     	XORAR	_R_AIN3_DATA,F
                                    1- 1496     	.line	852, "main.c"; 	R_AIN3_DATA_LB &= 0xF0;				// Only get Bit7~4
     000D 21F0                      1- 1497     	MOVIA	0xf0
     000E 10rr                      1- 1498     	ANDAR	_R_AIN3_DATA_LB,F
                                    1- 1499     	.line	853, "main.c"; 	R_AIN3_DATA += R_AIN3_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     000F 01rr                      1- 1500     	MOVR	_R_AIN3_DATA_LB,W
     0010 00rr                      1- 1501     	MOVAR	r0x1051
                                    1- 1502     ;;1	MOVAR	r0x104F
                                    1- 1503     ;;1	CLRR	r0x1050
                                    1- 1504     ;;100	MOVR	r0x104F,W
     0011 2100                      1- 1505     	MOVIA	0x00
     0012 00rr                      1- 1506     	MOVAR	r0x1052
     0013 01rr                      1- 1507     	MOVR	r0x1051,W
     0014 03rr                      1- 1508     	ADDAR	_R_AIN3_DATA,F
     0015 01rr                      1- 1509     	MOVR	r0x1052,W
     0016 0C03                      1- 1510     	BTRSC	STATUS,0
     0017 16rr                      1- 1511     	INCRSZ	r0x1052,W
     0018 03rr                      1- 1512     	ADDAR	(_R_AIN3_DATA + 1),F
                                    1- 1513     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
                                    1- 1514     	.line	854, "main.c"; 	R_AIN3_DATA >>=3;					// R_AIN0_DATA divided 8
     0019 1C03                      1- 1515     	BCR	STATUS,0
     001A 13rr                      1- 1516     	RRR	(_R_AIN3_DATA + 1),F
     001B 13rr                      1- 1517     	RRR	_R_AIN3_DATA,F
                                    1- 1518     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     001C 1C03                      1- 1519     	BCR	STATUS,0
     001D 13rr                      1- 1520     	RRR	(_R_AIN3_DATA + 1),F
     001E 13rr                      1- 1521     	RRR	_R_AIN3_DATA,F
                                    1- 1522     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     001F 1C03                      1- 1523     	BCR	STATUS,0
     0020 13rr                      1- 1524     	RRR	(_R_AIN3_DATA + 1),F
     0021 13rr                      1- 1525     	RRR	_R_AIN3_DATA,F
                                    1- 1526     	.line	855, "main.c"; 	}
                                    1- 1527     	RETURN	
     0022 0010                      3-   40 m1      ret
                                    1- 1528     ; exit point of _checkChrgV
                                    1- 1530     ;***
                                    1- 1531     ;  pBlock Stats: dbName = C
                                    1- 1532     ;***
                                    1- 1533     ;has an exit
                                    1- 1534     ;functions called:
                                    1- 1535     ;   _F_AIN2_Convert
                                    1- 1536     ;   _F_AIN2_Convert
                                    1- 1537     ;4 compiler assigned registers:
                                    1- 1538     ;   r0x1053
                                    1- 1539     ;   r0x1054
                                    1- 1540     ;   r0x1055
                                    1- 1541     ;   r0x1056
                                    1- 1542     ;; Starting pCode block
                                    1- 1543     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1545     _checkBatAD:
                                    1- 1546     ; 2 exit points
                                    1- 1547     	.line	794, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
     0000 02rr                      1- 1548     	CLRR	_R_AIN2_DATA_LB
     0001 02rr                      1- 1549     	CLRR	_R_AIN2_DATA
     0002 02rr                      1- 1550     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1551     	.line	795, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0003 2108                      1- 1552     	MOVIA	0x08
                                    1- 1553     	MCALL	_F_AIN2_Convert
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1554     	.line	796, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
     0005 15rr                      1- 1555     	SWAPR	(_R_AIN2_DATA + 1),W
     0006 22F0                      1- 1556     	ANDIA	0xf0
     0007 00rr                      1- 1557     	MOVAR	(_R_AIN2_DATA + 1)
     0008 15rr                      1- 1558     	SWAPR	_R_AIN2_DATA,W
     0009 00rr                      1- 1559     	MOVAR	_R_AIN2_DATA
     000A 220F                      1- 1560     	ANDIA	0x0f
     000B 11rr                      1- 1561     	IORAR	(_R_AIN2_DATA + 1),F
     000C 12rr                      1- 1562     	XORAR	_R_AIN2_DATA,F
                                    1- 1563     	.line	797, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     000D 21F0                      1- 1564     	MOVIA	0xf0
     000E 10rr                      1- 1565     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1566     	.line	798, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     000F 01rr                      1- 1567     	MOVR	_R_AIN2_DATA_LB,W
     0010 00rr                      1- 1568     	MOVAR	r0x1055
                                    1- 1569     ;;1	MOVAR	r0x1053
                                    1- 1570     ;;1	CLRR	r0x1054
                                    1- 1571     ;;99	MOVR	r0x1053,W
     0011 2100                      1- 1572     	MOVIA	0x00
     0012 00rr                      1- 1573     	MOVAR	r0x1056
     0013 01rr                      1- 1574     	MOVR	r0x1055,W
     0014 03rr                      1- 1575     	ADDAR	_R_AIN2_DATA,F
     0015 01rr                      1- 1576     	MOVR	r0x1056,W
     0016 0C03                      1- 1577     	BTRSC	STATUS,0
     0017 16rr                      1- 1578     	INCRSZ	r0x1056,W
     0018 03rr                      1- 1579     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1580     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
                                    1- 1581     	.line	799, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0019 1C03                      1- 1582     	BCR	STATUS,0
     001A 13rr                      1- 1583     	RRR	(_R_AIN2_DATA + 1),F
     001B 13rr                      1- 1584     	RRR	_R_AIN2_DATA,F
                                    1- 1585     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     001C 1C03                      1- 1586     	BCR	STATUS,0
     001D 13rr                      1- 1587     	RRR	(_R_AIN2_DATA + 1),F
     001E 13rr                      1- 1588     	RRR	_R_AIN2_DATA,F
                                    1- 1589     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     001F 1C03                      1- 1590     	BCR	STATUS,0
     0020 13rr                      1- 1591     	RRR	(_R_AIN2_DATA + 1),F
     0021 13rr                      1- 1592     	RRR	_R_AIN2_DATA,F
                                    1- 1593     	.line	800, "main.c"; 	if(debug)
     0022 01rr                      1- 1594     	MOVR	_debug,W
     0023 0D03                      1- 1595     	BTRSC	STATUS,2
                                    1- 1596     	MGOTO	_00590_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1597     	.line	801, "main.c"; 	R_AIN2_DATA = BATTLE;
     0025 210E                      1- 1598     	MOVIA	0x0e
     0026 00rr                      1- 1599     	MOVAR	_R_AIN2_DATA
     0027 2106                      1- 1600     	MOVIA	0x06
     0028 00rr                      1- 1601     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1602     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1603     ;;unsigned compare: left >= lit (0x623=1571), size=2
     0029                           1- 1604     _00590_DS_:
                                    1- 1605     	.line	803, "main.c"; 	if(R_AIN2_DATA > 1570)
     0029 2106                      1- 1606     	MOVIA	0x06
     002A 04rr                      1- 1607     	SUBAR	(_R_AIN2_DATA + 1),W
     002B 0903                      1- 1608     	BTRSS	STATUS,2
                                    1- 1609     	MGOTO	_00664_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
     002D 2123                      1- 1610     	MOVIA	0x23
     002E 04rr                      1- 1611     	SUBAR	_R_AIN2_DATA,W
     002F                           1- 1612     _00664_DS_:
     002F 0803                      1- 1613     	BTRSS	STATUS,0
                                    1- 1614     	MGOTO	_00615_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1615     	.line	806, "main.c"; 	lowCount = 0;
     0031 02rr                      1- 1616     	CLRR	_lowCount
                                    1- 1617     	.line	807, "main.c"; 	pwStep = 8;
     0032 2108                      1- 1618     	MOVIA	0x08
     0033 00rr                      1- 1619     	MOVAR	_pwStep
                                    1- 1620     	MGOTO	_00616_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1621     ;;unsigned compare: left < lit (0x47E=1150), size=2
     0035                           1- 1622     _00615_DS_:
                                    1- 1623     	.line	809, "main.c"; 	else if(R_AIN2_DATA < 1150)
     0035 2104                      1- 1624     	MOVIA	0x04
     0036 04rr                      1- 1625     	SUBAR	(_R_AIN2_DATA + 1),W
     0037 0903                      1- 1626     	BTRSS	STATUS,2
                                    1- 1627     	MGOTO	_00665_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
     0039 217E                      1- 1628     	MOVIA	0x7e
     003A 04rr                      1- 1629     	SUBAR	_R_AIN2_DATA,W
     003B                           1- 1630     _00665_DS_:
     003B 0C03                      1- 1631     	BTRSC	STATUS,0
                                    1- 1632     	MGOTO	_00612_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1633     	.line	811, "main.c"; 	if(++lowCount < 10)
     003D 05rr                      1- 1634     	INCR	_lowCount,F
                                    1- 1635     ;;unsigned compare: left < lit (0xA=10), size=1
     003E 210A                      1- 1636     	MOVIA	0x0a
     003F 04rr                      1- 1637     	SUBAR	_lowCount,W
     0040 0803                      1- 1638     	BTRSS	STATUS,0
                                    1- 1639     	.line	812, "main.c"; 	return;
                                    1- 1640     	MGOTO	_00623_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1641     	.line	813, "main.c"; 	lowCount = 10;
     0042 210A                      1- 1642     	MOVIA	0x0a
     0043 00rr                      1- 1643     	MOVAR	_lowCount
                                    1- 1644     	.line	814, "main.c"; 	pwStep = 0;
     0044 02rr                      1- 1645     	CLRR	_pwStep
                                    1- 1646     	.line	815, "main.c"; 	R_AIN2_DATA = 1150;
     0045 217E                      1- 1647     	MOVIA	0x7e
     0046 00rr                      1- 1648     	MOVAR	_R_AIN2_DATA
     0047 2104                      1- 1649     	MOVIA	0x04
     0048 00rr                      1- 1650     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1651     	MGOTO	_00616_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
     004A                           1- 1652     _00612_DS_:
                                    1- 1653     	.line	820, "main.c"; 	lowCount = 0;
     004A 02rr                      1- 1654     	CLRR	_lowCount
                                    1- 1655     	.line	821, "main.c"; 	firstTime = 0;
     004B 02rr                      1- 1656     	CLRR	_firstTime
                                    1- 1657     ;;unsigned compare: left < lit (0x4F6=1270), size=2
                                    1- 1658     	.line	822, "main.c"; 	if(R_AIN2_DATA < 1270)
     004C 2104                      1- 1659     	MOVIA	0x04
     004D 04rr                      1- 1660     	SUBAR	(_R_AIN2_DATA + 1),W
     004E 0903                      1- 1661     	BTRSS	STATUS,2
                                    1- 1662     	MGOTO	_00667_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
     0050 21F6                      1- 1663     	MOVIA	0xf6
     0051 04rr                      1- 1664     	SUBAR	_R_AIN2_DATA,W
     0052                           1- 1665     _00667_DS_:
     0052 0C03                      1- 1666     	BTRSC	STATUS,0
                                    1- 1667     	MGOTO	_00609_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1668     	.line	823, "main.c"; 	pwStep = 1;
     0054 2101                      1- 1669     	MOVIA	0x01
     0055 00rr                      1- 1670     	MOVAR	_pwStep
                                    1- 1671     	MGOTO	_00616_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1672     ;;unsigned compare: left < lit (0x53C=1340), size=2
     0057                           1- 1673     _00609_DS_:
                                    1- 1674     	.line	824, "main.c"; 	else if(R_AIN2_DATA < 1340)
     0057 2105                      1- 1675     	MOVIA	0x05
     0058 04rr                      1- 1676     	SUBAR	(_R_AIN2_DATA + 1),W
     0059 0903                      1- 1677     	BTRSS	STATUS,2
                                    1- 1678     	MGOTO	_00668_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B 213C                      1- 1679     	MOVIA	0x3c
     005C 04rr                      1- 1680     	SUBAR	_R_AIN2_DATA,W
     005D                           1- 1681     _00668_DS_:
     005D 0C03                      1- 1682     	BTRSC	STATUS,0
                                    1- 1683     	MGOTO	_00606_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1684     	.line	825, "main.c"; 	pwStep = 2;
     005F 2102                      1- 1685     	MOVIA	0x02
     0060 00rr                      1- 1686     	MOVAR	_pwStep
                                    1- 1687     	MGOTO	_00616_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1688     ;;unsigned compare: left < lit (0x56E=1390), size=2
     0062                           1- 1689     _00606_DS_:
                                    1- 1690     	.line	826, "main.c"; 	else if(R_AIN2_DATA < 1390)
     0062 2105                      1- 1691     	MOVIA	0x05
     0063 04rr                      1- 1692     	SUBAR	(_R_AIN2_DATA + 1),W
     0064 0903                      1- 1693     	BTRSS	STATUS,2
                                    1- 1694     	MGOTO	_00669_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
     0066 216E                      1- 1695     	MOVIA	0x6e
     0067 04rr                      1- 1696     	SUBAR	_R_AIN2_DATA,W
     0068                           1- 1697     _00669_DS_:
     0068 0C03                      1- 1698     	BTRSC	STATUS,0
                                    1- 1699     	MGOTO	_00603_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1700     	.line	827, "main.c"; 	pwStep = 3;
     006A 2103                      1- 1701     	MOVIA	0x03
     006B 00rr                      1- 1702     	MOVAR	_pwStep
                                    1- 1703     	MGOTO	_00616_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1704     ;;unsigned compare: left < lit (0x5AA=1450), size=2
     006D                           1- 1705     _00603_DS_:
                                    1- 1706     	.line	828, "main.c"; 	else if(R_AIN2_DATA < 1450)
     006D 2105                      1- 1707     	MOVIA	0x05
     006E 04rr                      1- 1708     	SUBAR	(_R_AIN2_DATA + 1),W
     006F 0903                      1- 1709     	BTRSS	STATUS,2
                                    1- 1710     	MGOTO	_00670_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
     0071 21AA                      1- 1711     	MOVIA	0xaa
     0072 04rr                      1- 1712     	SUBAR	_R_AIN2_DATA,W
     0073                           1- 1713     _00670_DS_:
     0073 0C03                      1- 1714     	BTRSC	STATUS,0
                                    1- 1715     	MGOTO	_00600_DS_
     0074 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1716     	.line	829, "main.c"; 	pwStep = 4;
     0075 2104                      1- 1717     	MOVIA	0x04
     0076 00rr                      1- 1718     	MOVAR	_pwStep
                                    1- 1719     	MGOTO	_00616_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1720     ;;unsigned compare: left < lit (0x5E6=1510), size=2
     0078                           1- 1721     _00600_DS_:
                                    1- 1722     	.line	830, "main.c"; 	else if(R_AIN2_DATA < 1510)
     0078 2105                      1- 1723     	MOVIA	0x05
     0079 04rr                      1- 1724     	SUBAR	(_R_AIN2_DATA + 1),W
     007A 0903                      1- 1725     	BTRSS	STATUS,2
                                    1- 1726     	MGOTO	_00671_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
     007C 21E6                      1- 1727     	MOVIA	0xe6
     007D 04rr                      1- 1728     	SUBAR	_R_AIN2_DATA,W
     007E                           1- 1729     _00671_DS_:
     007E 0C03                      1- 1730     	BTRSC	STATUS,0
                                    1- 1731     	MGOTO	_00597_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1732     	.line	831, "main.c"; 	pwStep = 5;
     0080 2105                      1- 1733     	MOVIA	0x05
     0081 00rr                      1- 1734     	MOVAR	_pwStep
                                    1- 1735     	MGOTO	_00616_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1736     ;;unsigned compare: left < lit (0x604=1540), size=2
     0083                           1- 1737     _00597_DS_:
                                    1- 1738     	.line	832, "main.c"; 	else if(R_AIN2_DATA < 1540)
     0083 2106                      1- 1739     	MOVIA	0x06
     0084 04rr                      1- 1740     	SUBAR	(_R_AIN2_DATA + 1),W
     0085 0903                      1- 1741     	BTRSS	STATUS,2
                                    1- 1742     	MGOTO	_00672_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
     0087 2104                      1- 1743     	MOVIA	0x04
     0088 04rr                      1- 1744     	SUBAR	_R_AIN2_DATA,W
     0089                           1- 1745     _00672_DS_:
     0089 0C03                      1- 1746     	BTRSC	STATUS,0
                                    1- 1747     	MGOTO	_00594_DS_
     008A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1748     	.line	833, "main.c"; 	pwStep = 6;
     008B 2106                      1- 1749     	MOVIA	0x06
     008C 00rr                      1- 1750     	MOVAR	_pwStep
                                    1- 1751     	MGOTO	_00616_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
     008E                           1- 1752     _00594_DS_:
                                    1- 1753     	.line	835, "main.c"; 	pwStep = 7;
     008E 2107                      1- 1754     	MOVIA	0x07
     008F 00rr                      1- 1755     	MOVAR	_pwStep
     0090                           1- 1756     _00616_DS_:
                                    1- 1757     	.line	838, "main.c"; 	if(prePwStep == 0 || prePwStep < pwStep)
     0090 01rr                      1- 1758     	MOVR	_prePwStep,W
     0091 0D03                      1- 1759     	BTRSC	STATUS,2
                                    1- 1760     	MGOTO	_00617_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
     0093 01rr                      1- 1761     	MOVR	_pwStep,W
     0094 04rr                      1- 1762     	SUBAR	_prePwStep,W
     0095 0C03                      1- 1763     	BTRSC	STATUS,0
                                    1- 1764     	MGOTO	_00618_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
     0097                           1- 1765     _00617_DS_:
                                    1- 1766     	.line	839, "main.c"; 	prePwStep = pwStep;
     0097 01rr                      1- 1767     	MOVR	_pwStep,W
     0098 00rr                      1- 1768     	MOVAR	_prePwStep
     0099                           1- 1769     _00618_DS_:
                                    1- 1770     	.line	841, "main.c"; 	if(ledLightTime > 0 && prePwStep > 0)
     0099 01rr                      1- 1771     	MOVR	_ledLightTime,W
     009A 0D03                      1- 1772     	BTRSC	STATUS,2
                                    1- 1773     	MGOTO	_00623_DS_
     009B 3rrr                      3-   63 m1      LGOTO rom_address
     009C 01rr                      1- 1774     	MOVR	_prePwStep,W
     009D 0D03                      1- 1775     	BTRSC	STATUS,2
                                    1- 1776     	MGOTO	_00623_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1777     	.line	842, "main.c"; 	pwStep = prePwStep;
     009F 01rr                      1- 1778     	MOVR	_prePwStep,W
     00A0 00rr                      1- 1779     	MOVAR	_pwStep
     00A1                           1- 1780     _00623_DS_:
                                    1- 1781     	.line	844, "main.c"; 	}
                                    1- 1782     	RETURN	
     00A1 0010                      3-   40 m1      ret
                                    1- 1783     ; exit point of _checkBatAD
                                    1- 1785     ;***
                                    1- 1786     ;  pBlock Stats: dbName = C
                                    1- 1787     ;***
                                    1- 1788     ;has an exit
                                    1- 1789     ;functions called:
                                    1- 1790     ;   _delay
                                    1- 1791     ;   _delay
                                    1- 1792     ;; Starting pCode block
                                    1- 1793     .segment "code"; module=main, function=_initAD
     0000                           1- 1795     _initAD:
                                    1- 1796     ; 2 exit points
                                    1- 1797     	.line	770, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1798     	MOVIA	0x84
     0001 00rr                      1- 1799     	MOVAR	_ADMD
                                    1- 1800     	.line	775, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1801     	CLRR	_ADVREFH
                                    1- 1802     	.line	780, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1803     	MOVIA	0x10
     0004 00rr                      1- 1804     	MOVAR	_ADR
                                    1- 1805     	.line	782, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1806     	MOVIA	0x03
     0006 00rr                      1- 1807     	MOVAR	_ADCR
                                    1- 1808     	.line	785, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1809     	BSR	_ADMDbits,4
                                    1- 1810     	.line	786, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1811     	MOVIA	0x64
                                    1- 1812     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1813     	.line	789, "main.c"; 	}
                                    1- 1814     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1815     ; exit point of _initAD
                                    1- 1817     ;***
                                    1- 1818     ;  pBlock Stats: dbName = C
                                    1- 1819     ;***
                                    1- 1820     ;has an exit
                                    1- 1821     ;2 compiler assigned registers:
                                    1- 1822     ;   r0x1037
                                    1- 1823     ;   r0x1038
                                    1- 1824     ;; Starting pCode block
                                    1- 1825     .segment "code"; module=main, function=_delay
                                    1- 1827     ;local variable name mapping:
     0000                           1- 1830     _delay:
                                    1- 1831     ; 2 exit points
                                    1- 1832     	.line	760, "main.c"; 	void delay(u8t time)
     0000 00rr                      1- 1833     	MOVAR	r0x1037
                                    1- 1834     	.line	762, "main.c"; 	for(u8t i=0;i<time;i++)
     0001 02rr                      1- 1835     	CLRR	r0x1038
     0002                           1- 1836     _00578_DS_:
     0002 01rr                      1- 1837     	MOVR	r0x1037,W
     0003 04rr                      1- 1838     	SUBAR	r0x1038,W
     0004 0C03                      1- 1839     	BTRSC	STATUS,0
                                    1- 1840     	MGOTO	_00580_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1841     	.line	763, "main.c"; 	NOP();
     0006 0000                      1- 1842     	nop
                                    1- 1843     	.line	762, "main.c"; 	for(u8t i=0;i<time;i++)
     0007 05rr                      1- 1844     	INCR	r0x1038,F
                                    1- 1845     	MGOTO	_00578_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
     0009                           1- 1846     _00580_DS_:
                                    1- 1847     	.line	764, "main.c"; 	}
                                    1- 1848     	RETURN	
     0009 0010                      3-   40 m1      ret
                                    1- 1849     ; exit point of _delay
                                    1- 1851     ;***
                                    1- 1852     ;  pBlock Stats: dbName = C
                                    1- 1853     ;***
                                    1- 1854     ;has an exit
                                    1- 1855     ;functions called:
                                    1- 1856     ;   _pwmStop
                                    1- 1857     ;   _pwm1Stop
                                    1- 1858     ;   _pwm1Init
                                    1- 1859     ;   _pwm1Stop
                                    1- 1860     ;   _pwmStop
                                    1- 1861     ;   _pwm1Stop
                                    1- 1862     ;   _pwm1Init
                                    1- 1863     ;   _pwm1Stop
                                    1- 1864     ;5 compiler assigned registers:
                                    1- 1865     ;   r0x1058
                                    1- 1866     ;   r0x1059
                                    1- 1867     ;   r0x105A
                                    1- 1868     ;   r0x105B
                                    1- 1869     ;   r0x105C
                                    1- 1870     ;; Starting pCode block
                                    1- 1871     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1873     _chrgCtr:
                                    1- 1874     ; 2 exit points
                                    1- 1875     	.line	642, "main.c"; 	if(PORTA & 0x08)
     0000 09rr                      1- 1876     	BTRSS	_PORTA,3
                                    1- 1877     	MGOTO	_00498_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1878     	.line	645, "main.c"; 	chrgFlag = 1;
     0002 19rr                      1- 1879     	BSR	_Status,3
                                    1- 1880     	.line	646, "main.c"; 	workStep = 0;
     0003 02rr                      1- 1881     	CLRR	_workStep
                                    1- 1882     	.line	647, "main.c"; 	ledLightTime = 0;
     0004 02rr                      1- 1883     	CLRR	_ledLightTime
                                    1- 1884     	.line	648, "main.c"; 	pwmStop();
                                    1- 1885     	MCALL	_pwmStop
     0005 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1886     ;;unsigned compare: left < lit (0x8=8), size=1
                                    1- 1887     	.line	650, "main.c"; 	if(pwStep >= 8 || chrgFullFlag)
     0006 2108                      1- 1888     	MOVIA	0x08
     0007 04rr                      1- 1889     	SUBAR	_pwStep,W
     0008 0C03                      1- 1890     	BTRSC	STATUS,0
                                    1- 1891     	MGOTO	_00491_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
     000A 01rr                      1- 1892     	MOVR	_chrgFullFlag,W
     000B 0D03                      1- 1893     	BTRSC	STATUS,2
                                    1- 1894     	MGOTO	_00492_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
     000D                           1- 1895     _00491_DS_:
                                    1- 1896     	.line	652, "main.c"; 	chrgStep = 6;
     000D 2106                      1- 1897     	MOVIA	0x06
     000E 00rr                      1- 1898     	MOVAR	_chrgStep
                                    1- 1899     	.line	654, "main.c"; 	ledStep = 6;
     000F 00rr                      1- 1900     	MOVAR	_ledStep
                                    1- 1901     	.line	655, "main.c"; 	if(++fullCount >= 2000)
     0010 05rr                      1- 1902     	INCR	_fullCount,F
     0011 0D03                      1- 1903     	BTRSC	STATUS,2
     0012 05rr                      1- 1904     	INCR	(_fullCount + 1),F
                                    1- 1905     ;;unsigned compare: left < lit (0x7D0=2000), size=2
     0013 2107                      1- 1906     	MOVIA	0x07
     0014 04rr                      1- 1907     	SUBAR	(_fullCount + 1),W
     0015 0903                      1- 1908     	BTRSS	STATUS,2
                                    1- 1909     	MGOTO	_00560_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
     0017 21D0                      1- 1910     	MOVIA	0xd0
     0018 04rr                      1- 1911     	SUBAR	_fullCount,W
     0019                           1- 1912     _00560_DS_:
     0019 0803                      1- 1913     	BTRSS	STATUS,0
                                    1- 1914     	MGOTO	_00500_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1915     	.line	657, "main.c"; 	fullCount = 2000;
     001B 21D0                      1- 1916     	MOVIA	0xd0
     001C 00rr                      1- 1917     	MOVAR	_fullCount
     001D 2107                      1- 1918     	MOVIA	0x07
     001E 00rr                      1- 1919     	MOVAR	(_fullCount + 1)
                                    1- 1920     	.line	658, "main.c"; 	chrgFullFlag = 1;
     001F 2101                      1- 1921     	MOVIA	0x01
     0020 00rr                      1- 1922     	MOVAR	_chrgFullFlag
                                    1- 1923     	.line	659, "main.c"; 	pwm1Stop();
                                    1- 1924     	MCALL	_pwm1Stop
     0021 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1925     	.line	660, "main.c"; 	PORTB &= 0xF7;
     0022 1Drr                      1- 1926     	BCR	_PORTB,3
                                    1- 1927     	.line	661, "main.c"; 	IOSTB |= 0X08;
     0023 001r                      1- 1928     	IOSTR	_IOSTB
     0024 00rr                      1- 1929     	MOVAR	r0x1058
     0025 19rr                      1- 1930     	BSR	r0x1058,3
     0026 01rr                      1- 1931     	MOVR	r0x1058,W
     0027 000r                      1- 1932     	IOST	_IOSTB
                                    1- 1933     	MGOTO	_00500_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
     0029                           1- 1934     _00492_DS_:
                                    1- 1935     	.line	669, "main.c"; 	IOSTB &= 0xF7;
     0029 001r                      1- 1936     	IOSTR	_IOSTB
     002A 00rr                      1- 1937     	MOVAR	r0x1058
     002B 1Drr                      1- 1938     	BCR	r0x1058,3
     002C 01rr                      1- 1939     	MOVR	r0x1058,W
     002D 000r                      1- 1940     	IOST	_IOSTB
                                    1- 1941     	.line	670, "main.c"; 	fullCount = 0;
     002E 02rr                      1- 1942     	CLRR	_fullCount
     002F 02rr                      1- 1943     	CLRR	(_fullCount + 1)
                                    1- 1944     ;;unsigned compare: left < lit (0x1=1), size=1
                                    1- 1945     	.line	671, "main.c"; 	if(pwStep < 1)
     0030 2101                      1- 1946     	MOVIA	0x01
     0031 04rr                      1- 1947     	SUBAR	_pwStep,W
     0032 0C03                      1- 1948     	BTRSC	STATUS,0
                                    1- 1949     	MGOTO	_00458_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1950     	.line	673, "main.c"; 	limitDuty = 19;
     0034 2113                      1- 1951     	MOVIA	0x13
     0035 00rr                      1- 1952     	MOVAR	_limitDuty
                                    1- 1953     ;;unsigned compare: left < lit (0x2=2), size=1
     0036                           1- 1954     _00458_DS_:
                                    1- 1955     	.line	675, "main.c"; 	if(pwStep < 2)
     0036 2102                      1- 1956     	MOVIA	0x02
     0037 04rr                      1- 1957     	SUBAR	_pwStep,W
     0038 0C03                      1- 1958     	BTRSC	STATUS,0
                                    1- 1959     	MGOTO	_00463_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1960     	.line	677, "main.c"; 	limitDuty = 20;
     003A 2114                      1- 1961     	MOVIA	0x14
     003B 00rr                      1- 1962     	MOVAR	_limitDuty
                                    1- 1963     	MGOTO	_00464_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1964     ;;unsigned compare: left < lit (0x6=6), size=1
     003D                           1- 1965     _00463_DS_:
                                    1- 1966     	.line	679, "main.c"; 	else if(pwStep < 6)
     003D 2106                      1- 1967     	MOVIA	0x06
     003E 04rr                      1- 1968     	SUBAR	_pwStep,W
     003F 0C03                      1- 1969     	BTRSC	STATUS,0
                                    1- 1970     	MGOTO	_00460_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1971     	.line	681, "main.c"; 	limitDuty = 23;
     0041 2117                      1- 1972     	MOVIA	0x17
     0042 00rr                      1- 1973     	MOVAR	_limitDuty
                                    1- 1974     	MGOTO	_00464_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
     0044                           1- 1975     _00460_DS_:
                                    1- 1976     	.line	685, "main.c"; 	limitDuty = 24;
     0044 2118                      1- 1977     	MOVIA	0x18
     0045 00rr                      1- 1978     	MOVAR	_limitDuty
     0046                           1- 1979     _00464_DS_:
                                    1- 1980     	.line	687, "main.c"; 	if(count500ms == 0 && pwStep < 7)
     0046 01rr                      1- 1981     	MOVR	_count500ms,W
     0047 0903                      1- 1982     	BTRSS	STATUS,2
                                    1- 1983     	MGOTO	_00470_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1984     ;;unsigned compare: left < lit (0x7=7), size=1
     0049 2107                      1- 1985     	MOVIA	0x07
     004A 04rr                      1- 1986     	SUBAR	_pwStep,W
     004B 0C03                      1- 1987     	BTRSC	STATUS,0
                                    1- 1988     	MGOTO	_00470_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1989     	.line	689, "main.c"; 	if(lockLedStep < pwStep - 1)
     004D 01rr                      1- 1990     	MOVR	_pwStep,W
     004E 00rr                      1- 1991     	MOVAR	r0x1058
     004F 02rr                      1- 1992     	CLRR	r0x1059
     0050 21FF                      1- 1993     	MOVIA	0xff
     0051 03rr                      1- 1994     	ADDAR	r0x1058,F
     0052 0803                      1- 1995     	BTRSS	STATUS,0
     0053 06rr                      1- 1996     	DECR	r0x1059,F
     0054 01rr                      1- 1997     	MOVR	_lockLedStep,W
     0055 00rr                      1- 1998     	MOVAR	r0x105A
                                    1- 1999     ;;1	CLRR	r0x105B
     0056 2100                      1- 2000     	MOVIA	0x00
     0057 2580                      1- 2001     	ADDIA	0x80
     0058 00rr                      1- 2002     	MOVAR	r0x105C
     0059 01rr                      1- 2003     	MOVR	r0x1059,W
     005A 2580                      1- 2004     	ADDIA	0x80
     005B 04rr                      1- 2005     	SUBAR	r0x105C,W
     005C 0903                      1- 2006     	BTRSS	STATUS,2
                                    1- 2007     	MGOTO	_00565_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
     005E 01rr                      1- 2008     	MOVR	r0x1058,W
     005F 04rr                      1- 2009     	SUBAR	r0x105A,W
     0060                           1- 2010     _00565_DS_:
     0060 0C03                      1- 2011     	BTRSC	STATUS,0
                                    1- 2012     	MGOTO	_00466_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2013     	.line	690, "main.c"; 	lockLedStep = pwStep - 1;
     0062 06rr                      1- 2014     	DECR	_pwStep,W
     0063 00rr                      1- 2015     	MOVAR	_lockLedStep
     0064                           1- 2016     _00466_DS_:
                                    1- 2017     	.line	691, "main.c"; 	if(++ledStep > 6)
     0064 05rr                      1- 2018     	INCR	_ledStep,F
                                    1- 2019     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2020     ;;unsigned compare: left >= lit (0x7=7), size=1
     0065 2107                      1- 2021     	MOVIA	0x07
     0066 04rr                      1- 2022     	SUBAR	_ledStep,W
     0067 0803                      1- 2023     	BTRSS	STATUS,0
                                    1- 2024     	MGOTO	_00470_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2025     	.line	692, "main.c"; 	ledStep = lockLedStep;
     0069 01rr                      1- 2026     	MOVR	_lockLedStep,W
     006A 00rr                      1- 2027     	MOVAR	_ledStep
     006B                           1- 2028     _00470_DS_:
                                    1- 2029     	.line	694, "main.c"; 	if(pwStep == 7)
     006B 01rr                      1- 2030     	MOVR	_pwStep,W
     006C 2407                      1- 2031     	XORIA	0x07
     006D 0903                      1- 2032     	BTRSS	STATUS,2
                                    1- 2033     	MGOTO	_00473_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2034     	.line	696, "main.c"; 	ledStep = 6;	//亮灯不闪了
     006F 2106                      1- 2035     	MOVIA	0x06
     0070 00rr                      1- 2036     	MOVAR	_ledStep
     0071                           1- 2037     _00473_DS_:
                                    1- 2038     	.line	698, "main.c"; 	if(maxduty > limitDuty)
     0071 01rr                      1- 2039     	MOVR	_maxduty,W
     0072 04rr                      1- 2040     	SUBAR	_limitDuty,W
     0073 0C03                      1- 2041     	BTRSC	STATUS,0
                                    1- 2042     	MGOTO	_00475_DS_
     0074 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2043     	.line	700, "main.c"; 	maxduty = limitDuty;
     0075 01rr                      1- 2044     	MOVR	_limitDuty,W
     0076 00rr                      1- 2045     	MOVAR	_maxduty
                                    1- 2046     	.line	701, "main.c"; 	PWM1DUTY = maxduty;
     0077 00rr                      1- 2047     	SFUN	_PWM1DUTY
                                    1- 2048     	MGOTO	_00476_DS_
     0078 3rrr                      3-   63 m1      LGOTO rom_address
     0079                           1- 2049     _00475_DS_:
                                    1- 2050     	.line	705, "main.c"; 	PWM1DUTY = chrgduty;
     0079 01rr                      1- 2051     	MOVR	_chrgduty,W
     007A 00rr                      1- 2052     	SFUN	_PWM1DUTY
     007B                           1- 2053     _00476_DS_:
                                    1- 2054     	.line	707, "main.c"; 	pwm1Init();
                                    1- 2055     	MCALL	_pwm1Init
     007B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2056     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2057     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1- 2058     	.line	708, "main.c"; 	if(count200ms > 5)
     007C 2106                      1- 2059     	MOVIA	0x06
     007D 04rr                      1- 2060     	SUBAR	_count200ms,W
     007E 0803                      1- 2061     	BTRSS	STATUS,0
                                    1- 2062     	MGOTO	_00500_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2063     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2064     ;;unsigned compare: left >= lit (0x26=38), size=2
                                    1- 2065     	.line	711, "main.c"; 	if(R_AIN4_DATA > 37)
     0080 2100                      1- 2066     	MOVIA	0x00
     0081 04rr                      1- 2067     	SUBAR	(_R_AIN4_DATA + 1),W
     0082 0903                      1- 2068     	BTRSS	STATUS,2
                                    1- 2069     	MGOTO	_00569_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
     0084 2126                      1- 2070     	MOVIA	0x26
     0085 04rr                      1- 2071     	SUBAR	_R_AIN4_DATA,W
     0086                           1- 2072     _00569_DS_:
     0086 0803                      1- 2073     	BTRSS	STATUS,0
                                    1- 2074     	MGOTO	_00484_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2075     	.line	713, "main.c"; 	if(++subTime > 50)
     0088 05rr                      1- 2076     	INCR	_subTime,F
                                    1- 2077     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2078     ;;unsigned compare: left >= lit (0x33=51), size=1
     0089 2133                      1- 2079     	MOVIA	0x33
     008A 04rr                      1- 2080     	SUBAR	_subTime,W
     008B 0803                      1- 2081     	BTRSS	STATUS,0
                                    1- 2082     	MGOTO	_00478_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2083     	.line	715, "main.c"; 	maxduty = maxduty - 1;
     008D 06rr                      1- 2084     	DECR	_maxduty,F
                                    1- 2085     	.line	716, "main.c"; 	subTime = 0;
     008E 02rr                      1- 2086     	CLRR	_subTime
                                    1- 2087     	.line	717, "main.c"; 	subMin = 34;
     008F 2122                      1- 2088     	MOVIA	0x22
     0090 00rr                      1- 2089     	MOVAR	_subMin
     0091                           1- 2090     _00478_DS_:
                                    1- 2091     	.line	719, "main.c"; 	addTime = 0;
     0091 02rr                      1- 2092     	CLRR	_addTime
                                    1- 2093     	MGOTO	_00485_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
     0093                           1- 2094     _00484_DS_:
                                    1- 2095     	.line	721, "main.c"; 	else if(R_AIN4_DATA < subMin)
     0093 01rr                      1- 2096     	MOVR	_subMin,W
     0094 00rr                      1- 2097     	MOVAR	r0x1058
     0095 02rr                      1- 2098     	CLRR	r0x1059
     0096 2100                      1- 2099     	MOVIA	0x00
     0097 04rr                      1- 2100     	SUBAR	(_R_AIN4_DATA + 1),W
     0098 0903                      1- 2101     	BTRSS	STATUS,2
                                    1- 2102     	MGOTO	_00571_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
     009A 01rr                      1- 2103     	MOVR	r0x1058,W
     009B 04rr                      1- 2104     	SUBAR	_R_AIN4_DATA,W
     009C                           1- 2105     _00571_DS_:
     009C 0C03                      1- 2106     	BTRSC	STATUS,0
                                    1- 2107     	MGOTO	_00485_DS_
     009D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2108     	.line	723, "main.c"; 	if(++addTime > 50)
     009E 05rr                      1- 2109     	INCR	_addTime,F
                                    1- 2110     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2111     ;;unsigned compare: left >= lit (0x33=51), size=1
     009F 2133                      1- 2112     	MOVIA	0x33
     00A0 04rr                      1- 2113     	SUBAR	_addTime,W
     00A1 0803                      1- 2114     	BTRSS	STATUS,0
                                    1- 2115     	MGOTO	_00480_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2116     	.line	725, "main.c"; 	maxduty = maxduty + 1;
     00A3 05rr                      1- 2117     	INCR	_maxduty,F
                                    1- 2118     	.line	726, "main.c"; 	addTime = 0;
     00A4 02rr                      1- 2119     	CLRR	_addTime
     00A5                           1- 2120     _00480_DS_:
                                    1- 2121     	.line	728, "main.c"; 	subTime = 0;
     00A5 02rr                      1- 2122     	CLRR	_subTime
     00A6                           1- 2123     _00485_DS_:
                                    1- 2124     	.line	730, "main.c"; 	if(chrgduty < maxduty)
     00A6 01rr                      1- 2125     	MOVR	_maxduty,W
     00A7 04rr                      1- 2126     	SUBAR	_chrgduty,W
     00A8 0C03                      1- 2127     	BTRSC	STATUS,0
                                    1- 2128     	MGOTO	_00487_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2129     	.line	731, "main.c"; 	chrgduty++;
     00AA 05rr                      1- 2130     	INCR	_chrgduty,F
                                    1- 2131     	MGOTO	_00500_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
     00AC                           1- 2132     _00487_DS_:
                                    1- 2133     	.line	733, "main.c"; 	chrgduty = maxduty;
     00AC 01rr                      1- 2134     	MOVR	_maxduty,W
     00AD 00rr                      1- 2135     	MOVAR	_chrgduty
                                    1- 2136     	MGOTO	_00500_DS_
     00AE 3rrr                      3-   63 m1      LGOTO rom_address
     00AF                           1- 2137     _00498_DS_:
                                    1- 2138     	.line	742, "main.c"; 	subMin = 37;
     00AF 2125                      1- 2139     	MOVIA	0x25
     00B0 00rr                      1- 2140     	MOVAR	_subMin
                                    1- 2141     	.line	743, "main.c"; 	chrgFullFlag = 0;
     00B1 02rr                      1- 2142     	CLRR	_chrgFullFlag
                                    1- 2143     	.line	744, "main.c"; 	chrgduty = 0;
     00B2 02rr                      1- 2144     	CLRR	_chrgduty
                                    1- 2145     	.line	745, "main.c"; 	maxduty = 0;
     00B3 02rr                      1- 2146     	CLRR	_maxduty
                                    1- 2147     	.line	746, "main.c"; 	chrgStep = 0;
     00B4 02rr                      1- 2148     	CLRR	_chrgStep
                                    1- 2149     	.line	747, "main.c"; 	lockLedStep = 0;
     00B5 02rr                      1- 2150     	CLRR	_lockLedStep
                                    1- 2151     	.line	748, "main.c"; 	chrgTime = 0;
     00B6 02rr                      1- 2152     	CLRR	_chrgTime
     00B7 02rr                      1- 2153     	CLRR	(_chrgTime + 1)
                                    1- 2154     	.line	749, "main.c"; 	pwm1Stop();
                                    1- 2155     	MCALL	_pwm1Stop
     00B8 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2156     	.line	750, "main.c"; 	if(workStep == 0)
     00B9 01rr                      1- 2157     	MOVR	_workStep,W
     00BA 0D03                      1- 2158     	BTRSC	STATUS,2
                                    1- 2159     	.line	751, "main.c"; 	ledStep = 0;
     00BB 02rr                      1- 2160     	CLRR	_ledStep
                                    1- 2161     	.line	752, "main.c"; 	chrgFlag = 0;
     00BC 1Drr                      1- 2162     	BCR	_Status,3
                                    1- 2163     	.line	753, "main.c"; 	chrgTime = 0;	//重置充电计数
     00BD 02rr                      1- 2164     	CLRR	_chrgTime
     00BE 02rr                      1- 2165     	CLRR	(_chrgTime + 1)
     00BF                           1- 2166     _00500_DS_:
                                    1- 2167     	.line	756, "main.c"; 	}
                                    1- 2168     	RETURN	
     00BF 0010                      3-   40 m1      ret
                                    1- 2169     ; exit point of _chrgCtr
                                    1- 2171     ;***
                                    1- 2172     ;  pBlock Stats: dbName = C
                                    1- 2173     ;***
                                    1- 2174     ;has an exit
                                    1- 2175     ;1 compiler assigned register :
                                    1- 2176     ;   r0x105D
                                    1- 2177     ;; Starting pCode block
                                    1- 2178     .segment "code"; module=main, function=_keyRead
                                    1- 2180     ;local variable name mapping:
     0000                           1- 2182     _keyRead:
                                    1- 2183     ; 2 exit points
                                    1- 2184     	.line	603, "main.c"; 	char keyRead(char keyStatus)	
     0000 00rr                      1- 2185     	MOVAR	r0x105D
                                    1- 2186     	.line	605, "main.c"; 	if(keyStatus)
     0001 01rr                      1- 2187     	MOVR	r0x105D,W
     0002 0D03                      1- 2188     	BTRSC	STATUS,2
                                    1- 2189     	MGOTO	_00448_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2190     	.line	607, "main.c"; 	keyCount++;
     0004 05rr                      1- 2191     	INCR	_keyCount,F
                                    1- 2192     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 2193     	.line	608, "main.c"; 	if(keyCount >= 100)
     0005 2164                      1- 2194     	MOVIA	0x64
     0006 04rr                      1- 2195     	SUBAR	_keyCount,W
     0007 0803                      1- 2196     	BTRSS	STATUS,0
                                    1- 2197     	MGOTO	_00449_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2198     	.line	610, "main.c"; 	keyCount = 100;
     0009 2164                      1- 2199     	MOVIA	0x64
     000A 00rr                      1- 2200     	MOVAR	_keyCount
                                    1- 2201     	.line	611, "main.c"; 	if(!longPressFlag)
     000B 0Crr                      1- 2202     	BTRSC	_Status,1
                                    1- 2203     	MGOTO	_00449_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2204     	.line	613, "main.c"; 	longPressFlag = 1;
     000D 18rr                      1- 2205     	BSR	_Status,1
                                    1- 2206     	.line	614, "main.c"; 	return 2;
     000E 2102                      1- 2207     	MOVIA	0x02
                                    1- 2208     	MGOTO	_00450_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2209     ;;unsigned compare: left < lit (0x64=100), size=1
     0010                           1- 2210     _00448_DS_:
                                    1- 2211     	.line	620, "main.c"; 	if(keyCount >= 100)
     0010 2164                      1- 2212     	MOVIA	0x64
     0011 04rr                      1- 2213     	SUBAR	_keyCount,W
     0012 0803                      1- 2214     	BTRSS	STATUS,0
                                    1- 2215     	MGOTO	_00445_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2216     	.line	622, "main.c"; 	keyCount = 0;
     0014 02rr                      1- 2217     	CLRR	_keyCount
                                    1- 2218     	.line	623, "main.c"; 	longPressFlag = 0;
     0015 1Crr                      1- 2219     	BCR	_Status,1
                                    1- 2220     	.line	624, "main.c"; 	return	0;
     0016 2100                      1- 2221     	MOVIA	0x00
                                    1- 2222     	MGOTO	_00450_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2223     ;;unsigned compare: left < lit (0x4=4), size=1
     0018                           1- 2224     _00445_DS_:
                                    1- 2225     	.line	626, "main.c"; 	else if(keyCount >= 4)
     0018 2104                      1- 2226     	MOVIA	0x04
     0019 04rr                      1- 2227     	SUBAR	_keyCount,W
     001A 0803                      1- 2228     	BTRSS	STATUS,0
                                    1- 2229     	MGOTO	_00446_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2230     	.line	628, "main.c"; 	keyCount = 0;
     001C 02rr                      1- 2231     	CLRR	_keyCount
                                    1- 2232     	.line	629, "main.c"; 	return	1;
     001D 2101                      1- 2233     	MOVIA	0x01
                                    1- 2234     	MGOTO	_00450_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
     001F                           1- 2235     _00446_DS_:
                                    1- 2236     	.line	631, "main.c"; 	keyCount = 0;
     001F 02rr                      1- 2237     	CLRR	_keyCount
     0020                           1- 2238     _00449_DS_:
                                    1- 2239     	.line	633, "main.c"; 	return 0;
     0020 2100                      1- 2240     	MOVIA	0x00
     0021                           1- 2241     _00450_DS_:
                                    1- 2242     	.line	634, "main.c"; 	}
                                    1- 2243     	RETURN	
     0021 0010                      3-   40 m1      ret
                                    1- 2244     ; exit point of _keyRead
                                    1- 2246     ;***
                                    1- 2247     ;  pBlock Stats: dbName = C
                                    1- 2248     ;***
                                    1- 2249     ;has an exit
                                    1- 2250     ;functions called:
                                    1- 2251     ;   _LedInput
                                    1- 2252     ;   _pwmStop
                                    1- 2253     ;   _pwm1Stop
                                    1- 2254     ;   _LedInput
                                    1- 2255     ;   _pwmStop
                                    1- 2256     ;   _pwm1Stop
                                    1- 2257     ;; Starting pCode block
                                    1- 2258     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2260     _gotoSleep:
                                    1- 2261     ; 2 exit points
                                    1- 2262     	.line	568, "main.c"; 	LedInput();
                                    1- 2263     	MCALL	_LedInput
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2264     	.line	569, "main.c"; 	sleepTime = 0;
     0001 02rr                      1- 2265     	CLRR	_sleepTime
     0002 02rr                      1- 2266     	CLRR	(_sleepTime + 1)
                                    1- 2267     	.line	571, "main.c"; 	pwmStop();
                                    1- 2268     	MCALL	_pwmStop
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2269     	.line	572, "main.c"; 	pwm1Stop();
                                    1- 2270     	MCALL	_pwm1Stop
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2271     	.line	573, "main.c"; 	IOSTA = 0xC8;
     0005 21C8                      1- 2272     	MOVIA	0xc8
     0006 000r                      1- 2273     	IOST	_IOSTA
                                    1- 2274     	.line	574, "main.c"; 	PORTA = 0x46;
     0007 2146                      1- 2275     	MOVIA	0x46
     0008 00rr                      1- 2276     	MOVAR	_PORTA
                                    1- 2277     	.line	575, "main.c"; 	APHCON = 0x3F;
     0009 213F                      1- 2278     	MOVIA	0x3f
     000A 000r                      1- 2279     	IOST	_APHCON
                                    1- 2280     	.line	576, "main.c"; 	PORTB = 0x00;
     000B 02rr                      1- 2281     	CLRR	_PORTB
                                    1- 2282     	.line	577, "main.c"; 	workStep = 0;
     000C 02rr                      1- 2283     	CLRR	_workStep
                                    1- 2284     	.line	578, "main.c"; 	AWUCON = 0x88;
     000D 2188                      1- 2285     	MOVIA	0x88
     000E 00rr                      1- 2286     	MOVAR	_AWUCON
                                    1- 2287     	.line	579, "main.c"; 	BWUCON = 0x00;
     000F 02rr                      1- 2288     	CLRR	_BWUCON
                                    1- 2289     	.line	580, "main.c"; 	redLedFlag = 0;
     0010 1Drr                      1- 2290     	BCR	_Status,2
                                    1- 2291     	.line	583, "main.c"; 	INTE =  C_INT_PABKey;
     0011 2102                      1- 2292     	MOVIA	0x02
     0012 00rr                      1- 2293     	MOVAR	_INTE
                                    1- 2294     	.line	584, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0013 2118                      1- 2295     	MOVIA	0x18
     0014 00rr                      1- 2296     	MOVAR	_PCON
                                    1- 2297     	.line	585, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0015 02rr                      1- 2298     	CLRR	_INTF
                                    1- 2299     	.line	586, "main.c"; 	CLRWDT();
     0016 0002                      1- 2300     	clrwdt
                                    1- 2301     	.line	587, "main.c"; 	ENI();
     0017 0004                      1- 2302     	ENI
                                    1- 2303     	.line	588, "main.c"; 	SLEEP();
     0018 0001                      1- 2304     	sleep
                                    1- 2305     	.line	589, "main.c"; 	AWUCON = 0x00;
     0019 02rr                      1- 2306     	CLRR	_AWUCON
                                    1- 2307     	.line	590, "main.c"; 	IOSTA = C_PA7_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     001A 21BE                      1- 2308     	MOVIA	0xbe
     001B 000r                      1- 2309     	IOST	_IOSTA
                                    1- 2310     	.line	591, "main.c"; 	IOSTB = 0x00;
     001C 0200                      1- 2311     	CLRA	
     001D 000r                      1- 2312     	IOST	_IOSTB
                                    1- 2313     	.line	592, "main.c"; 	PORTA = 0x00;
     001E 02rr                      1- 2314     	CLRR	_PORTA
                                    1- 2315     	.line	593, "main.c"; 	APHCON = 0x7F;
     001F 217F                      1- 2316     	MOVIA	0x7f
     0020 000r                      1- 2317     	IOST	_APHCON
                                    1- 2318     	.line	594, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     0021 2101                      1- 2319     	MOVIA	0x01
     0022 00rr                      1- 2320     	MOVAR	_INTE
                                    1- 2321     	.line	595, "main.c"; 	INTF = 0;
     0023 02rr                      1- 2322     	CLRR	_INTF
                                    1- 2323     	.line	597, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0024 21B8                      1- 2324     	MOVIA	0xb8
     0025 00rr                      1- 2325     	MOVAR	_PCON
                                    1- 2326     	.line	600, "main.c"; 	}
                                    1- 2327     	RETURN	
     0026 0010                      3-   40 m1      ret
                                    1- 2328     ; exit point of _gotoSleep
                                    1- 2330     ;***
                                    1- 2331     ;  pBlock Stats: dbName = C
                                    1- 2332     ;***
                                    1- 2333     ;has an exit
                                    1- 2334     ;; Starting pCode block
                                    1- 2335     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2337     _pwmStop:
                                    1- 2338     ; 2 exit points
                                    1- 2339     	.line	560, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2340     	CLRA	
     0001 00rr                      1- 2341     	SFUN	_T2CR1
                                    1- 2342     	.line	561, "main.c"; 	}
                                    1- 2343     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2344     ; exit point of _pwmStop
                                    1- 2346     ;***
                                    1- 2347     ;  pBlock Stats: dbName = C
                                    1- 2348     ;***
                                    1- 2349     ;has an exit
                                    1- 2350     ;1 compiler assigned register :
                                    1- 2351     ;   r0x105F
                                    1- 2352     ;; Starting pCode block
                                    1- 2353     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2355     _pwmInit:
                                    1- 2356     ; 2 exit points
                                    1- 2357     	.line	548, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2358     	SFUNR	_T2CR1
     0001 00rr                      1- 2359     	MOVAR	r0x105F
     0002 0Frr                      1- 2360     	BTRSC	r0x105F,7
                                    1- 2361     	.line	549, "main.c"; 	return;
                                    1- 2362     	MGOTO	_00425_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2363     	.line	550, "main.c"; 	TMRH = 0x00;
     0004 02rr                      1- 2364     	CLRR	_TMRH
                                    1- 2365     	.line	551, "main.c"; 	TMR2 = 100;							//频率为110K
     0005 2164                      1- 2366     	MOVIA	0x64
     0006 00rr                      1- 2367     	SFUN	_TMR2
                                    1- 2368     	.line	554, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0007 2101                      1- 2369     	MOVIA	0x01
     0008 00rr                      1- 2370     	SFUN	_T2CR2
                                    1- 2371     	.line	555, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     0009 2183                      1- 2372     	MOVIA	0x83
     000A 00rr                      1- 2373     	SFUN	_T2CR1
     000B                           1- 2374     _00425_DS_:
                                    1- 2375     	.line	556, "main.c"; 	}
                                    1- 2376     	RETURN	
     000B 0010                      3-   40 m1      ret
                                    1- 2377     ; exit point of _pwmInit
                                    1- 2379     ;***
                                    1- 2380     ;  pBlock Stats: dbName = C
                                    1- 2381     ;***
                                    1- 2382     ;has an exit
                                    1- 2383     ;; Starting pCode block
                                    1- 2384     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2386     _pwm1Stop:
                                    1- 2387     ; 2 exit points
                                    1- 2388     	.line	541, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2389     	CLRA	
     0001 00rr                      1- 2390     	SFUN	_T1CR1
                                    1- 2391     	.line	542, "main.c"; 	}
                                    1- 2392     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2393     ; exit point of _pwm1Stop
                                    1- 2395     ;***
                                    1- 2396     ;  pBlock Stats: dbName = C
                                    1- 2397     ;***
                                    1- 2398     ;has an exit
                                    1- 2399     ;1 compiler assigned register :
                                    1- 2400     ;   r0x1057
                                    1- 2401     ;; Starting pCode block
                                    1- 2402     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2404     _pwm1Init:
                                    1- 2405     ; 2 exit points
                                    1- 2406     	.line	528, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2407     	SFUNR	_T1CR1
     0001 00rr                      1- 2408     	MOVAR	r0x1057
     0002 0Frr                      1- 2409     	BTRSC	r0x1057,7
                                    1- 2410     	.line	529, "main.c"; 	return;
                                    1- 2411     	MGOTO	_00414_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2412     	.line	530, "main.c"; 	TMRH = 0x00;
     0004 02rr                      1- 2413     	CLRR	_TMRH
                                    1- 2414     	.line	531, "main.c"; 	TMR1 = 48;							//频率为110K
     0005 2130                      1- 2415     	MOVIA	0x30
     0006 00rr                      1- 2416     	SFUN	_TMR1
                                    1- 2417     	.line	534, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0007 0200                      1- 2418     	CLRA	
     0008 00rr                      1- 2419     	SFUN	_T1CR2
                                    1- 2420     	.line	535, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Dis;
     0009 2108                      1- 2421     	MOVIA	0x08
     000A 00rr                      1- 2422     	SFUN	_T1CR2
                                    1- 2423     	.line	536, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000B 2183                      1- 2424     	MOVIA	0x83
     000C 00rr                      1- 2425     	SFUN	_T1CR1
     000D                           1- 2426     _00414_DS_:
                                    1- 2427     	.line	537, "main.c"; 	}
                                    1- 2428     	RETURN	
     000D 0010                      3-   40 m1      ret
                                    1- 2429     ; exit point of _pwm1Init
                                    1- 2431     ;***
                                    1- 2432     ;  pBlock Stats: dbName = C
                                    1- 2433     ;***
                                    1- 2434     ;has an exit
                                    1- 2435     ;functions called:
                                    1- 2436     ;   _delay
                                    1- 2437     ;   _LedInput
                                    1- 2438     ;   _delay
                                    1- 2439     ;   _LedInput
                                    1- 2440     ;1 compiler assigned register :
                                    1- 2441     ;   r0x1060
                                    1- 2442     ;; Starting pCode block
                                    1- 2443     .segment "code"; module=main, function=_LED6ON
     0000                           1- 2445     _LED6ON:
                                    1- 2446     ; 2 exit points
                                    1- 2447     	.line	518, "main.c"; 	L2OUT;
     0000 001r                      1- 2448     	IOSTR	_IOSTA
     0001 00rr                      1- 2449     	MOVAR	r0x1060
     0002 1Crr                      1- 2450     	BCR	r0x1060,0
     0003 01rr                      1- 2451     	MOVR	r0x1060,W
     0004 000r                      1- 2452     	IOST	_IOSTA
                                    1- 2453     	.line	519, "main.c"; 	L1OUT;
     0005 001r                      1- 2454     	IOSTR	_IOSTB
     0006 00rr                      1- 2455     	MOVAR	r0x1060
     0007 1Crr                      1- 2456     	BCR	r0x1060,1
     0008 01rr                      1- 2457     	MOVR	r0x1060,W
     0009 000r                      1- 2458     	IOST	_IOSTB
                                    1- 2459     	.line	520, "main.c"; 	L1H;
     000A 18rr                      1- 2460     	BSR	_PORTB,1
                                    1- 2461     	.line	521, "main.c"; 	L2L;
     000B 1Crr                      1- 2462     	BCR	_PORTA,0
                                    1- 2463     	.line	522, "main.c"; 	delay(100);
     000C 2164                      1- 2464     	MOVIA	0x64
                                    1- 2465     	MCALL	_delay
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2466     	.line	523, "main.c"; 	LedInput();
                                    1- 2467     	MCALL	_LedInput
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2468     	.line	524, "main.c"; 	}
                                    1- 2469     	RETURN	
     000F 0010                      3-   40 m1      ret
                                    1- 2470     ; exit point of _LED6ON
                                    1- 2472     ;***
                                    1- 2473     ;  pBlock Stats: dbName = C
                                    1- 2474     ;***
                                    1- 2475     ;has an exit
                                    1- 2476     ;functions called:
                                    1- 2477     ;   _delay
                                    1- 2478     ;   _LedInput
                                    1- 2479     ;   _delay
                                    1- 2480     ;   _LedInput
                                    1- 2481     ;1 compiler assigned register :
                                    1- 2482     ;   r0x1061
                                    1- 2483     ;; Starting pCode block
                                    1- 2484     .segment "code"; module=main, function=_LED5ON
     0000                           1- 2486     _LED5ON:
                                    1- 2487     ; 2 exit points
                                    1- 2488     	.line	507, "main.c"; 	L2OUT;
     0000 001r                      1- 2489     	IOSTR	_IOSTA
     0001 00rr                      1- 2490     	MOVAR	r0x1061
     0002 1Crr                      1- 2491     	BCR	r0x1061,0
     0003 01rr                      1- 2492     	MOVR	r0x1061,W
     0004 000r                      1- 2493     	IOST	_IOSTA
                                    1- 2494     	.line	508, "main.c"; 	L1OUT;
     0005 001r                      1- 2495     	IOSTR	_IOSTB
     0006 00rr                      1- 2496     	MOVAR	r0x1061
     0007 1Crr                      1- 2497     	BCR	r0x1061,1
     0008 01rr                      1- 2498     	MOVR	r0x1061,W
     0009 000r                      1- 2499     	IOST	_IOSTB
                                    1- 2500     	.line	509, "main.c"; 	L2H;
     000A 18rr                      1- 2501     	BSR	_PORTA,0
                                    1- 2502     	.line	510, "main.c"; 	L1L;
     000B 1Crr                      1- 2503     	BCR	_PORTB,1
                                    1- 2504     	.line	511, "main.c"; 	delay(100);
     000C 2164                      1- 2505     	MOVIA	0x64
                                    1- 2506     	MCALL	_delay
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2507     	.line	512, "main.c"; 	LedInput();
                                    1- 2508     	MCALL	_LedInput
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2509     	.line	513, "main.c"; 	}
                                    1- 2510     	RETURN	
     000F 0010                      3-   40 m1      ret
                                    1- 2511     ; exit point of _LED5ON
                                    1- 2513     ;***
                                    1- 2514     ;  pBlock Stats: dbName = C
                                    1- 2515     ;***
                                    1- 2516     ;has an exit
                                    1- 2517     ;functions called:
                                    1- 2518     ;   _delay
                                    1- 2519     ;   _LedInput
                                    1- 2520     ;   _delay
                                    1- 2521     ;   _LedInput
                                    1- 2522     ;1 compiler assigned register :
                                    1- 2523     ;   r0x1062
                                    1- 2524     ;; Starting pCode block
                                    1- 2525     .segment "code"; module=main, function=_LED4ON
     0000                           1- 2527     _LED4ON:
                                    1- 2528     ; 2 exit points
                                    1- 2529     	.line	497, "main.c"; 	L3OUT;
     0000 001r                      1- 2530     	IOSTR	_IOSTB
     0001 00rr                      1- 2531     	MOVAR	r0x1062
     0002 1Crr                      1- 2532     	BCR	r0x1062,0
     0003 01rr                      1- 2533     	MOVR	r0x1062,W
     0004 000r                      1- 2534     	IOST	_IOSTB
                                    1- 2535     	.line	498, "main.c"; 	L2OUT;
     0005 001r                      1- 2536     	IOSTR	_IOSTA
     0006 00rr                      1- 2537     	MOVAR	r0x1062
     0007 1Crr                      1- 2538     	BCR	r0x1062,0
     0008 01rr                      1- 2539     	MOVR	r0x1062,W
     0009 000r                      1- 2540     	IOST	_IOSTA
                                    1- 2541     	.line	499, "main.c"; 	L3H;
     000A 18rr                      1- 2542     	BSR	_PORTB,0
                                    1- 2543     	.line	500, "main.c"; 	L2L;
     000B 1Crr                      1- 2544     	BCR	_PORTA,0
                                    1- 2545     	.line	501, "main.c"; 	delay(100);
     000C 2164                      1- 2546     	MOVIA	0x64
                                    1- 2547     	MCALL	_delay
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2548     	.line	502, "main.c"; 	LedInput();
                                    1- 2549     	MCALL	_LedInput
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2550     	.line	503, "main.c"; 	}
                                    1- 2551     	RETURN	
     000F 0010                      3-   40 m1      ret
                                    1- 2552     ; exit point of _LED4ON
                                    1- 2554     ;***
                                    1- 2555     ;  pBlock Stats: dbName = C
                                    1- 2556     ;***
                                    1- 2557     ;has an exit
                                    1- 2558     ;functions called:
                                    1- 2559     ;   _delay
                                    1- 2560     ;   _LedInput
                                    1- 2561     ;   _delay
                                    1- 2562     ;   _LedInput
                                    1- 2563     ;1 compiler assigned register :
                                    1- 2564     ;   r0x1063
                                    1- 2565     ;; Starting pCode block
                                    1- 2566     .segment "code"; module=main, function=_LED3ON
     0000                           1- 2568     _LED3ON:
                                    1- 2569     ; 2 exit points
                                    1- 2570     	.line	487, "main.c"; 	L3OUT;
     0000 001r                      1- 2571     	IOSTR	_IOSTB
     0001 00rr                      1- 2572     	MOVAR	r0x1063
     0002 1Crr                      1- 2573     	BCR	r0x1063,0
     0003 01rr                      1- 2574     	MOVR	r0x1063,W
     0004 000r                      1- 2575     	IOST	_IOSTB
                                    1- 2576     	.line	488, "main.c"; 	L1OUT;
     0005 001r                      1- 2577     	IOSTR	_IOSTB
     0006 00rr                      1- 2578     	MOVAR	r0x1063
     0007 1Crr                      1- 2579     	BCR	r0x1063,1
     0008 01rr                      1- 2580     	MOVR	r0x1063,W
     0009 000r                      1- 2581     	IOST	_IOSTB
                                    1- 2582     	.line	489, "main.c"; 	L1H;
     000A 18rr                      1- 2583     	BSR	_PORTB,1
                                    1- 2584     	.line	490, "main.c"; 	L3L;
     000B 1Crr                      1- 2585     	BCR	_PORTB,0
                                    1- 2586     	.line	491, "main.c"; 	delay(100);
     000C 2164                      1- 2587     	MOVIA	0x64
                                    1- 2588     	MCALL	_delay
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2589     	.line	492, "main.c"; 	LedInput();
                                    1- 2590     	MCALL	_LedInput
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2591     	.line	493, "main.c"; 	}
                                    1- 2592     	RETURN	
     000F 0010                      3-   40 m1      ret
                                    1- 2593     ; exit point of _LED3ON
                                    1- 2595     ;***
                                    1- 2596     ;  pBlock Stats: dbName = C
                                    1- 2597     ;***
                                    1- 2598     ;has an exit
                                    1- 2599     ;functions called:
                                    1- 2600     ;   _delay
                                    1- 2601     ;   _LedInput
                                    1- 2602     ;   _delay
                                    1- 2603     ;   _LedInput
                                    1- 2604     ;1 compiler assigned register :
                                    1- 2605     ;   r0x1064
                                    1- 2606     ;; Starting pCode block
                                    1- 2607     .segment "code"; module=main, function=_LED2ON
     0000                           1- 2609     _LED2ON:
                                    1- 2610     ; 2 exit points
                                    1- 2611     	.line	477, "main.c"; 	L2OUT;
     0000 001r                      1- 2612     	IOSTR	_IOSTA
     0001 00rr                      1- 2613     	MOVAR	r0x1064
     0002 1Crr                      1- 2614     	BCR	r0x1064,0
     0003 01rr                      1- 2615     	MOVR	r0x1064,W
     0004 000r                      1- 2616     	IOST	_IOSTA
                                    1- 2617     	.line	478, "main.c"; 	L3OUT;
     0005 001r                      1- 2618     	IOSTR	_IOSTB
     0006 00rr                      1- 2619     	MOVAR	r0x1064
     0007 1Crr                      1- 2620     	BCR	r0x1064,0
     0008 01rr                      1- 2621     	MOVR	r0x1064,W
     0009 000r                      1- 2622     	IOST	_IOSTB
                                    1- 2623     	.line	479, "main.c"; 	L2H;
     000A 18rr                      1- 2624     	BSR	_PORTA,0
                                    1- 2625     	.line	480, "main.c"; 	L3L;
     000B 1Crr                      1- 2626     	BCR	_PORTB,0
                                    1- 2627     	.line	481, "main.c"; 	delay(100);
     000C 2164                      1- 2628     	MOVIA	0x64
                                    1- 2629     	MCALL	_delay
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2630     	.line	482, "main.c"; 	LedInput();
                                    1- 2631     	MCALL	_LedInput
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2632     	.line	483, "main.c"; 	}
                                    1- 2633     	RETURN	
     000F 0010                      3-   40 m1      ret
                                    1- 2634     ; exit point of _LED2ON
                                    1- 2636     ;***
                                    1- 2637     ;  pBlock Stats: dbName = C
                                    1- 2638     ;***
                                    1- 2639     ;has an exit
                                    1- 2640     ;functions called:
                                    1- 2641     ;   _delay
                                    1- 2642     ;   _LedInput
                                    1- 2643     ;   _delay
                                    1- 2644     ;   _LedInput
                                    1- 2645     ;1 compiler assigned register :
                                    1- 2646     ;   r0x1065
                                    1- 2647     ;; Starting pCode block
                                    1- 2648     .segment "code"; module=main, function=_LED1ON
     0000                           1- 2650     _LED1ON:
                                    1- 2651     ; 2 exit points
                                    1- 2652     	.line	467, "main.c"; 	L3OUT;
     0000 001r                      1- 2653     	IOSTR	_IOSTB
     0001 00rr                      1- 2654     	MOVAR	r0x1065
     0002 1Crr                      1- 2655     	BCR	r0x1065,0
     0003 01rr                      1- 2656     	MOVR	r0x1065,W
     0004 000r                      1- 2657     	IOST	_IOSTB
                                    1- 2658     	.line	468, "main.c"; 	L1OUT;
     0005 001r                      1- 2659     	IOSTR	_IOSTB
     0006 00rr                      1- 2660     	MOVAR	r0x1065
     0007 1Crr                      1- 2661     	BCR	r0x1065,1
     0008 01rr                      1- 2662     	MOVR	r0x1065,W
     0009 000r                      1- 2663     	IOST	_IOSTB
                                    1- 2664     	.line	469, "main.c"; 	L3H;
     000A 18rr                      1- 2665     	BSR	_PORTB,0
                                    1- 2666     	.line	470, "main.c"; 	L1L;
     000B 1Crr                      1- 2667     	BCR	_PORTB,1
                                    1- 2668     	.line	471, "main.c"; 	delay(100);
     000C 2164                      1- 2669     	MOVIA	0x64
                                    1- 2670     	MCALL	_delay
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2671     	.line	472, "main.c"; 	LedInput();
                                    1- 2672     	MCALL	_LedInput
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2673     	.line	473, "main.c"; 	}
                                    1- 2674     	RETURN	
     000F 0010                      3-   40 m1      ret
                                    1- 2675     ; exit point of _LED1ON
                                    1- 2677     ;***
                                    1- 2678     ;  pBlock Stats: dbName = C
                                    1- 2679     ;***
                                    1- 2680     ;has an exit
                                    1- 2681     ;1 compiler assigned register :
                                    1- 2682     ;   r0x105E
                                    1- 2683     ;; Starting pCode block
                                    1- 2684     .segment "code"; module=main, function=_LedInput
     0000                           1- 2686     _LedInput:
                                    1- 2687     ; 2 exit points
                                    1- 2688     	.line	459, "main.c"; 	IOSTA |= 0x01;
     0000 001r                      1- 2689     	IOSTR	_IOSTA
     0001 00rr                      1- 2690     	MOVAR	r0x105E
     0002 18rr                      1- 2691     	BSR	r0x105E,0
     0003 01rr                      1- 2692     	MOVR	r0x105E,W
     0004 000r                      1- 2693     	IOST	_IOSTA
                                    1- 2694     	.line	460, "main.c"; 	IOSTB |= 0x03;
     0005 001r                      1- 2695     	IOSTR	_IOSTB
     0006 00rr                      1- 2696     	MOVAR	r0x105E
     0007 2103                      1- 2697     	MOVIA	0x03
     0008 11rr                      1- 2698     	IORAR	r0x105E,F
     0009 01rr                      1- 2699     	MOVR	r0x105E,W
     000A 000r                      1- 2700     	IOST	_IOSTB
                                    1- 2701     	.line	461, "main.c"; 	PORTA &= 0xFE;
     000B 1Crr                      1- 2702     	BCR	_PORTA,0
                                    1- 2703     	.line	462, "main.c"; 	PORTB &= 0xFC;
     000C 21FC                      1- 2704     	MOVIA	0xfc
     000D 10rr                      1- 2705     	ANDAR	_PORTB,F
                                    1- 2706     	.line	463, "main.c"; 	}
                                    1- 2707     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2708     ; exit point of _LedInput
                                    1- 2710     ;***
                                    1- 2711     ;  pBlock Stats: dbName = C
                                    1- 2712     ;***
                                    1- 2713     ;has an exit
                                    1- 2714     ;functions called:
                                    1- 2715     ;   _LedInput
                                    1- 2716     ;   _LedInput
                                    1- 2717     ;   _LED6ON
                                    1- 2718     ;   _LED5ON
                                    1- 2719     ;   _LED4ON
                                    1- 2720     ;   _LED3ON
                                    1- 2721     ;   _LED2ON
                                    1- 2722     ;   _LED1ON
                                    1- 2723     ;   _LedInput
                                    1- 2724     ;   _LedInput
                                    1- 2725     ;   _LED6ON
                                    1- 2726     ;   _LED5ON
                                    1- 2727     ;   _LED4ON
                                    1- 2728     ;   _LED3ON
                                    1- 2729     ;   _LED2ON
                                    1- 2730     ;   _LED1ON
                                    1- 2731     ;; Starting pCode block
                                    1- 2732     .segment "code"; module=main, function=_ledShow
     0000                           1- 2734     _ledShow:
                                    1- 2735     ; 2 exit points
                                    1- 2736     	.line	394, "main.c"; 	if(ledDeadTime > 0 && workStep == 0)
     0000 01rr                      1- 2737     	MOVR	_ledDeadTime,W
     0001 0D03                      1- 2738     	BTRSC	STATUS,2
                                    1- 2739     	MGOTO	_00311_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
     0003 01rr                      1- 2740     	MOVR	_workStep,W
     0004 0903                      1- 2741     	BTRSS	STATUS,2
                                    1- 2742     	MGOTO	_00311_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2743     	.line	396, "main.c"; 	if(ledDeadTime % 2 == 0)
     0006 0Crr                      1- 2744     	BTRSC	_ledDeadTime,0
                                    1- 2745     	MGOTO	_00308_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2746     	.line	398, "main.c"; 	ledStep = 0;
     0008 02rr                      1- 2747     	CLRR	_ledStep
                                    1- 2748     	MGOTO	_00311_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
     000A                           1- 2749     _00308_DS_:
                                    1- 2750     	.line	402, "main.c"; 	ledStep = tempLedStep;
     000A 01rr                      1- 2751     	MOVR	_tempLedStep,W
     000B 00rr                      1- 2752     	MOVAR	_ledStep
     000C                           1- 2753     _00311_DS_:
                                    1- 2754     	.line	413, "main.c"; 	if(ledLightTime > 0 && pwStep > 0)
     000C 01rr                      1- 2755     	MOVR	_ledLightTime,W
     000D 0D03                      1- 2756     	BTRSC	STATUS,2
                                    1- 2757     	MGOTO	_00319_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
     000F 01rr                      1- 2758     	MOVR	_pwStep,W
     0010 0D03                      1- 2759     	BTRSC	STATUS,2
                                    1- 2760     	MGOTO	_00319_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2761     	.line	415, "main.c"; 	if(ledLightTime > 0)
     0012 01rr                      1- 2762     	MOVR	_ledLightTime,W
     0013 0D03                      1- 2763     	BTRSC	STATUS,2
                                    1- 2764     	MGOTO	_00319_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2765     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2766     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 2767     	.line	417, "main.c"; 	if(pwStep > 6 )
     0015 2107                      1- 2768     	MOVIA	0x07
     0016 04rr                      1- 2769     	SUBAR	_pwStep,W
     0017 0803                      1- 2770     	BTRSS	STATUS,0
                                    1- 2771     	MGOTO	_00314_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2772     	.line	418, "main.c"; 	ledStep = 6;
     0019 2106                      1- 2773     	MOVIA	0x06
     001A 00rr                      1- 2774     	MOVAR	_ledStep
                                    1- 2775     	MGOTO	_00319_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
     001C                           1- 2776     _00314_DS_:
                                    1- 2777     	.line	420, "main.c"; 	ledStep = pwStep;
     001C 01rr                      1- 2778     	MOVR	_pwStep,W
     001D 00rr                      1- 2779     	MOVAR	_ledStep
     001E                           1- 2780     _00319_DS_:
                                    1- 2781     	.line	423, "main.c"; 	if(shanshuoTime > 0 && workStep > 0 && pwStep == 0)
     001E 01rr                      1- 2782     	MOVR	_shanshuoTime,W
     001F 0D03                      1- 2783     	BTRSC	STATUS,2
                                    1- 2784     	MGOTO	_00325_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
     0021 01rr                      1- 2785     	MOVR	_workStep,W
     0022 0D03                      1- 2786     	BTRSC	STATUS,2
                                    1- 2787     	MGOTO	_00325_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
     0024 01rr                      1- 2788     	MOVR	_pwStep,W
     0025 0903                      1- 2789     	BTRSS	STATUS,2
                                    1- 2790     	MGOTO	_00325_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2791     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 2792     	.line	425, "main.c"; 	if(count1s < 50)
     0027 2132                      1- 2793     	MOVIA	0x32
     0028 04rr                      1- 2794     	SUBAR	_count1s,W
     0029 0C03                      1- 2795     	BTRSC	STATUS,0
                                    1- 2796     	MGOTO	_00322_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2797     	.line	426, "main.c"; 	ledStep = workStep;
     002B 01rr                      1- 2798     	MOVR	_workStep,W
     002C 00rr                      1- 2799     	MOVAR	_ledStep
                                    1- 2800     	MGOTO	_00325_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
     002E                           1- 2801     _00322_DS_:
                                    1- 2802     	.line	428, "main.c"; 	ledStep = 0;
     002E 02rr                      1- 2803     	CLRR	_ledStep
     002F                           1- 2804     _00325_DS_:
                                    1- 2805     	.line	431, "main.c"; 	LedInput();
                                    1- 2806     	MCALL	_LedInput
     002F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2807     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2808     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 2809     	.line	432, "main.c"; 	switch(ledStep)
     0030 2109                      1- 2810     	MOVIA	0x09
     0031 04rr                      1- 2811     	SUBAR	_ledStep,W
     0032 0C03                      1- 2812     	BTRSC	STATUS,0
                                    1- 2813     	MGOTO	_00338_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
     0034 21rr                      1- 2814     	MOVIA	((_00379_DS_ >> 8) & 0xff)
     0035 008A                      1- 2815     	MOVAR	PCHBUF
     0036 01rr                      1- 2816     	MOVR	_ledStep,W
     0037 25rr                      1- 2817     	ADDIA	_00379_DS_
     0038 0C03                      1- 2818     	BTRSC	STATUS,0
     0039 058A                      1- 2819     	INCR	PCHBUF,F
     003A 0082                      1- 2820     	MOVAR	PCL
     003B                           1- 2821     _00379_DS_:
                                    1- 2822     	MGOTO	_00328_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2823     	MGOTO	_00336_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2824     	MGOTO	_00335_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2825     	MGOTO	_00334_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2826     	MGOTO	_00333_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2827     	MGOTO	_00332_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2828     	MGOTO	_00331_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2829     	MGOTO	_00331_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2830     	MGOTO	_00331_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
     0044                           1- 2831     _00328_DS_:
                                    1- 2832     	.line	435, "main.c"; 	LedInput();
                                    1- 2833     	MCALL	_LedInput
     0044 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2834     	.line	436, "main.c"; 	break;
                                    1- 2835     	MGOTO	_00338_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
     0046                           1- 2836     _00331_DS_:
                                    1- 2837     	.line	440, "main.c"; 	LED6ON();
                                    1- 2838     	MCALL	_LED6ON
     0046 2rrr                      3-   66 m1      LCALL rom_address
     0047                           1- 2839     _00332_DS_:
                                    1- 2840     	.line	442, "main.c"; 	LED5ON();
                                    1- 2841     	MCALL	_LED5ON
     0047 2rrr                      3-   66 m1      LCALL rom_address
     0048                           1- 2842     _00333_DS_:
                                    1- 2843     	.line	444, "main.c"; 	LED4ON();
                                    1- 2844     	MCALL	_LED4ON
     0048 2rrr                      3-   66 m1      LCALL rom_address
     0049                           1- 2845     _00334_DS_:
                                    1- 2846     	.line	446, "main.c"; 	LED3ON();
                                    1- 2847     	MCALL	_LED3ON
     0049 2rrr                      3-   66 m1      LCALL rom_address
     004A                           1- 2848     _00335_DS_:
                                    1- 2849     	.line	448, "main.c"; 	LED2ON();
                                    1- 2850     	MCALL	_LED2ON
     004A 2rrr                      3-   66 m1      LCALL rom_address
     004B                           1- 2851     _00336_DS_:
                                    1- 2852     	.line	450, "main.c"; 	LED1ON();
                                    1- 2853     	MCALL	_LED1ON
     004B 2rrr                      3-   66 m1      LCALL rom_address
     004C                           1- 2854     _00338_DS_:
                                    1- 2855     	.line	453, "main.c"; 	}
                                    1- 2856     	RETURN	
     004C 0010                      3-   40 m1      ret
                                    1- 2857     ; exit point of _ledShow
                                    1- 2859     ;***
                                    1- 2860     ;  pBlock Stats: dbName = C
                                    1- 2861     ;***
                                    1- 2862     ;has an exit
                                    1- 2863     ;functions called:
                                    1- 2864     ;   _LedInput
                                    1- 2865     ;   _LedInput
                                    1- 2866     ;; Starting pCode block
                                    1- 2867     .segment "code"; module=main, function=_initSys
     0000                           1- 2869     _initSys:
                                    1- 2870     ; 2 exit points
                                    1- 2871     	.line	362, "main.c"; 	DISI();
     0000 0013                      1- 2872     	DISI
                                    1- 2873     	.line	363, "main.c"; 	IOSTA = C_PA7_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0001 21BE                      1- 2874     	MOVIA	0xbe
     0002 000r                      1- 2875     	IOST	_IOSTA
                                    1- 2876     	.line	364, "main.c"; 	IOSTB = C_PB3_Input;
     0003 2108                      1- 2877     	MOVIA	0x08
     0004 000r                      1- 2878     	IOST	_IOSTB
                                    1- 2879     	.line	365, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2880     	CLRR	_PORTB
                                    1- 2881     	.line	366, "main.c"; 	PORTA = 0x00;
     0006 02rr                      1- 2882     	CLRR	_PORTA
                                    1- 2883     	.line	367, "main.c"; 	LedInput();
                                    1- 2884     	MCALL	_LedInput
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2885     	.line	368, "main.c"; 	APHCON = 0x7F;
     0008 217F                      1- 2886     	MOVIA	0x7f
     0009 000r                      1- 2887     	IOST	_APHCON
                                    1- 2888     	.line	369, "main.c"; 	BPHCON = 0xFF;
     000A 21FF                      1- 2889     	MOVIA	0xff
     000B 00rr                      1- 2890     	MOVAR	_BPHCON
                                    1- 2891     	.line	370, "main.c"; 	ABPLCON = 0xFF;
     000C 00rr                      1- 2892     	MOVAR	_ABPLCON
                                    1- 2893     	.line	372, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000D 2101                      1- 2894     	MOVIA	0x01
     000E 00rr                      1- 2895     	MOVAR	_INTE
                                    1- 2896     	.line	374, "main.c"; 	PCON1 = C_TMR0_Dis;
     000F 0200                      1- 2897     	CLRA	
     0010 000r                      1- 2898     	IOST	_PCON1
                                    1- 2899     	.line	376, "main.c"; 	TMR0 = 55;
     0011 2137                      1- 2900     	MOVIA	0x37
     0012 00rr                      1- 2901     	MOVAR	_TMR0
                                    1- 2902     	.line	377, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0013 2101                      1- 2903     	MOVIA	0x01
     0014 0003                      1- 2904     	T0MD	
                                    1- 2905     	.line	379, "main.c"; 	PCON1 = C_TMR0_En;
     0015 000r                      1- 2906     	IOST	_PCON1
                                    1- 2907     	.line	382, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0016 2198                      1- 2908     	MOVIA	0x98
     0017 00rr                      1- 2909     	MOVAR	_PCON
                                    1- 2910     	.line	385, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0018 2101                      1- 2911     	MOVIA	0x01
     0019 000r                      1- 2912     	IOST	_PCON1
                                    1- 2913     	.line	386, "main.c"; 	ENI();
     001A 0004                      1- 2914     	ENI
                                    1- 2915     	.line	387, "main.c"; 	}
                                    1- 2916     	RETURN	
     001B 0010                      3-   40 m1      ret
                                    1- 2917     ; exit point of _initSys
                                    1- 2919     ;***
                                    1- 2920     ;  pBlock Stats: dbName = C
                                    1- 2921     ;***
                                    1- 2922     ;has an exit
                                    1- 2923     ;functions called:
                                    1- 2924     ;   _pwmStop
                                    1- 2925     ;   _pwmStop
                                    1- 2926     ;; Starting pCode block
                                    1- 2927     .segment "code"; module=main, function=_powerOff
     0000                           1- 2929     _powerOff:
                                    1- 2930     ; 2 exit points
                                    1- 2931     	.line	353, "main.c"; 	workStep = 0;
     0000 02rr                      1- 2932     	CLRR	_workStep
                                    1- 2933     	.line	354, "main.c"; 	pwmStop();
                                    1- 2934     	MCALL	_pwmStop
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2935     	.line	356, "main.c"; 	}
                                    1- 2936     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2937     ; exit point of _powerOff
                                    1- 2939     ;***
                                    1- 2940     ;  pBlock Stats: dbName = C
                                    1- 2941     ;***
                                    1- 2942     ;has an exit
                                    1- 2943     ;functions called:
                                    1- 2944     ;   _keyRead
                                    1- 2945     ;   _pwmInit
                                    1- 2946     ;   _powerOff
                                    1- 2947     ;   _pwmInit
                                    1- 2948     ;   _keyRead
                                    1- 2949     ;   _pwmInit
                                    1- 2950     ;   _powerOff
                                    1- 2951     ;   _pwmInit
                                    1- 2952     ;1 compiler assigned register :
                                    1- 2953     ;   r0x1066
                                    1- 2954     ;; Starting pCode block
                                    1- 2955     .segment "code"; module=main, function=_keyCtr
                                    1- 2957     ;local variable name mapping:
     0000                           1- 2959     _keyCtr:
                                    1- 2960     ; 2 exit points
                                    1- 2961     	.line	282, "main.c"; 	char kclick = keyRead(0x80 & (~PORTA));
     0000 07rr                      1- 2962     	COMR	_PORTA,W
     0001 00rr                      1- 2963     	MOVAR	r0x1066
     0002 2180                      1- 2964     	MOVIA	0x80
     0003 10rr                      1- 2965     	ANDAR	r0x1066,F
     0004 01rr                      1- 2966     	MOVR	r0x1066,W
                                    1- 2967     	MCALL	_keyRead
     0005 2rrr                      3-   66 m1      LCALL rom_address
     0006 00rr                      1- 2968     	MOVAR	r0x1066
                                    1- 2969     	.line	283, "main.c"; 	if(kclick == 1)
     0007 2401                      1- 2970     	XORIA	0x01
     0008 0903                      1- 2971     	BTRSS	STATUS,2
                                    1- 2972     	MGOTO	_00292_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2973     	.line	285, "main.c"; 	count500ms = 0;
     000A 02rr                      1- 2974     	CLRR	_count500ms
                                    1- 2975     	.line	286, "main.c"; 	ledLightTime = 0;
     000B 02rr                      1- 2976     	CLRR	_ledLightTime
                                    1- 2977     	.line	287, "main.c"; 	if(workStep == 0)
     000C 01rr                      1- 2978     	MOVR	_workStep,W
     000D 0903                      1- 2979     	BTRSS	STATUS,2
                                    1- 2980     	MGOTO	_00258_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2981     	.line	289, "main.c"; 	count1s = 0;
     000F 02rr                      1- 2982     	CLRR	_count1s
                                    1- 2983     	.line	290, "main.c"; 	ledLightTime = 3;
     0010 2103                      1- 2984     	MOVIA	0x03
     0011 00rr                      1- 2985     	MOVAR	_ledLightTime
                                    1- 2986     	.line	291, "main.c"; 	prePwStep = 0;
     0012 02rr                      1- 2987     	CLRR	_prePwStep
                                    1- 2988     	.line	292, "main.c"; 	return;
                                    1- 2989     	MGOTO	_00294_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
     0014                           1- 2990     _00258_DS_:
                                    1- 2991     	.line	294, "main.c"; 	ledTime = 0;
     0014 02rr                      1- 2992     	CLRR	_ledTime
                                    1- 2993     	.line	295, "main.c"; 	if(++workStep > 6)
     0015 05rr                      1- 2994     	INCR	_workStep,F
                                    1- 2995     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2996     ;;unsigned compare: left >= lit (0x7=7), size=1
     0016 2107                      1- 2997     	MOVIA	0x07
     0017 04rr                      1- 2998     	SUBAR	_workStep,W
     0018 0803                      1- 2999     	BTRSS	STATUS,0
                                    1- 3000     	MGOTO	_00260_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3001     	.line	296, "main.c"; 	workStep = 1;
     001A 2101                      1- 3002     	MOVIA	0x01
     001B 00rr                      1- 3003     	MOVAR	_workStep
     001C                           1- 3004     _00260_DS_:
                                    1- 3005     	.line	297, "main.c"; 	if(pwStep == 0)
     001C 01rr                      1- 3006     	MOVR	_pwStep,W
     001D 0903                      1- 3007     	BTRSS	STATUS,2
                                    1- 3008     	MGOTO	_00262_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3009     	.line	298, "main.c"; 	shanshuoTime = 10;
     001F 210A                      1- 3010     	MOVIA	0x0a
     0020 00rr                      1- 3011     	MOVAR	_shanshuoTime
     0021                           1- 3012     _00262_DS_:
                                    1- 3013     	.line	299, "main.c"; 	if(workStep == 1)
     0021 01rr                      1- 3014     	MOVR	_workStep,W
     0022 2401                      1- 3015     	XORIA	0x01
     0023 0903                      1- 3016     	BTRSS	STATUS,2
                                    1- 3017     	MGOTO	_00278_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3018     	.line	301, "main.c"; 	maxDuty = 73;
     0025 2149                      1- 3019     	MOVIA	0x49
     0026 00rr                      1- 3020     	MOVAR	_maxDuty
                                    1- 3021     	.line	302, "main.c"; 	currentDuty = 85;
     0027 2155                      1- 3022     	MOVIA	0x55
     0028 00rr                      1- 3023     	MOVAR	_currentDuty
                                    1- 3024     	.line	303, "main.c"; 	ledLightTime = 0;
     0029 02rr                      1- 3025     	CLRR	_ledLightTime
                                    1- 3026     	MGOTO	_00279_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
     002B                           1- 3027     _00278_DS_:
                                    1- 3028     	.line	305, "main.c"; 	else if(workStep == 2)
     002B 01rr                      1- 3029     	MOVR	_workStep,W
     002C 2402                      1- 3030     	XORIA	0x02
     002D 0903                      1- 3031     	BTRSS	STATUS,2
                                    1- 3032     	MGOTO	_00275_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3033     	.line	306, "main.c"; 	maxDuty = 79;
     002F 214F                      1- 3034     	MOVIA	0x4f
     0030 00rr                      1- 3035     	MOVAR	_maxDuty
                                    1- 3036     	MGOTO	_00279_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
     0032                           1- 3037     _00275_DS_:
                                    1- 3038     	.line	307, "main.c"; 	else if(workStep == 3)
     0032 01rr                      1- 3039     	MOVR	_workStep,W
     0033 2403                      1- 3040     	XORIA	0x03
     0034 0903                      1- 3041     	BTRSS	STATUS,2
                                    1- 3042     	MGOTO	_00272_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3043     	.line	308, "main.c"; 	maxDuty = 84;
     0036 2154                      1- 3044     	MOVIA	0x54
     0037 00rr                      1- 3045     	MOVAR	_maxDuty
                                    1- 3046     	MGOTO	_00279_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
     0039                           1- 3047     _00272_DS_:
                                    1- 3048     	.line	309, "main.c"; 	else if(workStep == 4)
     0039 01rr                      1- 3049     	MOVR	_workStep,W
     003A 2404                      1- 3050     	XORIA	0x04
     003B 0903                      1- 3051     	BTRSS	STATUS,2
                                    1- 3052     	MGOTO	_00269_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3053     	.line	310, "main.c"; 	maxDuty = 89;
     003D 2159                      1- 3054     	MOVIA	0x59
     003E 00rr                      1- 3055     	MOVAR	_maxDuty
                                    1- 3056     	MGOTO	_00279_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
     0040                           1- 3057     _00269_DS_:
                                    1- 3058     	.line	311, "main.c"; 	else if(workStep == 5)
     0040 01rr                      1- 3059     	MOVR	_workStep,W
     0041 2405                      1- 3060     	XORIA	0x05
     0042 0903                      1- 3061     	BTRSS	STATUS,2
                                    1- 3062     	MGOTO	_00266_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3063     	.line	312, "main.c"; 	maxDuty = 94;
     0044 215E                      1- 3064     	MOVIA	0x5e
     0045 00rr                      1- 3065     	MOVAR	_maxDuty
                                    1- 3066     	MGOTO	_00279_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
     0047                           1- 3067     _00266_DS_:
                                    1- 3068     	.line	313, "main.c"; 	else if(workStep == 6)
     0047 01rr                      1- 3069     	MOVR	_workStep,W
     0048 2406                      1- 3070     	XORIA	0x06
     0049 0903                      1- 3071     	BTRSS	STATUS,2
                                    1- 3072     	MGOTO	_00279_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3073     	.line	314, "main.c"; 	maxDuty = 100;
     004B 2164                      1- 3074     	MOVIA	0x64
     004C 00rr                      1- 3075     	MOVAR	_maxDuty
     004D                           1- 3076     _00279_DS_:
                                    1- 3077     	.line	315, "main.c"; 	if(workStep > 0)
     004D 01rr                      1- 3078     	MOVR	_workStep,W
     004E 0D03                      1- 3079     	BTRSC	STATUS,2
                                    1- 3080     	MGOTO	_00281_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3081     	.line	317, "main.c"; 	PWM2DUTY = maxDuty;
     0050 01rr                      1- 3082     	MOVR	_maxDuty,W
     0051 00rr                      1- 3083     	SFUN	_PWM2DUTY
                                    1- 3084     	.line	318, "main.c"; 	pwmInit();
                                    1- 3085     	MCALL	_pwmInit
     0052 2rrr                      3-   66 m1      LCALL rom_address
     0053                           1- 3086     _00281_DS_:
                                    1- 3087     	.line	320, "main.c"; 	ledStep = workStep;
     0053 01rr                      1- 3088     	MOVR	_workStep,W
     0054 00rr                      1- 3089     	MOVAR	_ledStep
                                    1- 3090     	MGOTO	_00294_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
     0056                           1- 3091     _00292_DS_:
                                    1- 3092     	.line	322, "main.c"; 	else if(kclick == 2)
     0056 01rr                      1- 3093     	MOVR	r0x1066,W
     0057 2402                      1- 3094     	XORIA	0x02
     0058 0903                      1- 3095     	BTRSS	STATUS,2
                                    1- 3096     	MGOTO	_00294_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3097     	.line	324, "main.c"; 	if(workStep > 0)
     005A 01rr                      1- 3098     	MOVR	_workStep,W
     005B 0D03                      1- 3099     	BTRSC	STATUS,2
                                    1- 3100     	MGOTO	_00287_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3101     	.line	326, "main.c"; 	powerOff();
                                    1- 3102     	MCALL	_powerOff
     005D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3103     	MGOTO	_00288_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
     005F                           1- 3104     _00287_DS_:
                                    1- 3105     	.line	330, "main.c"; 	if(pwStep == 10)
     005F 01rr                      1- 3106     	MOVR	_pwStep,W
     0060 240A                      1- 3107     	XORIA	0x0a
     0061 0903                      1- 3108     	BTRSS	STATUS,2
                                    1- 3109     	MGOTO	_00283_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3110     	.line	332, "main.c"; 	sleepTime = 0;
     0063 02rr                      1- 3111     	CLRR	_sleepTime
     0064 02rr                      1- 3112     	CLRR	(_sleepTime + 1)
                                    1- 3113     	.line	333, "main.c"; 	return;
                                    1- 3114     	MGOTO	_00294_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
     0066                           1- 3115     _00283_DS_:
                                    1- 3116     	.line	335, "main.c"; 	ledLightTime = 0;
     0066 02rr                      1- 3117     	CLRR	_ledLightTime
                                    1- 3118     	.line	336, "main.c"; 	ledStep = 1;
     0067 2101                      1- 3119     	MOVIA	0x01
     0068 00rr                      1- 3120     	MOVAR	_ledStep
                                    1- 3121     	.line	337, "main.c"; 	workStep = 1;
     0069 00rr                      1- 3122     	MOVAR	_workStep
                                    1- 3123     	.line	338, "main.c"; 	PWM2DUTY = 73;
     006A 2149                      1- 3124     	MOVIA	0x49
     006B 00rr                      1- 3125     	SFUN	_PWM2DUTY
                                    1- 3126     	.line	339, "main.c"; 	currentDuty = 85;
     006C 2155                      1- 3127     	MOVIA	0x55
     006D 00rr                      1- 3128     	MOVAR	_currentDuty
                                    1- 3129     	.line	340, "main.c"; 	maxDuty = 73;
     006E 2149                      1- 3130     	MOVIA	0x49
     006F 00rr                      1- 3131     	MOVAR	_maxDuty
                                    1- 3132     	.line	341, "main.c"; 	pwmInit();
                                    1- 3133     	MCALL	_pwmInit
     0070 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3134     	.line	342, "main.c"; 	if(pwStep == 0)
     0071 01rr                      1- 3135     	MOVR	_pwStep,W
     0072 0903                      1- 3136     	BTRSS	STATUS,2
                                    1- 3137     	MGOTO	_00288_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3138     	.line	343, "main.c"; 	shanshuoTime = 10;
     0074 210A                      1- 3139     	MOVIA	0x0a
     0075 00rr                      1- 3140     	MOVAR	_shanshuoTime
     0076                           1- 3141     _00288_DS_:
                                    1- 3142     	.line	346, "main.c"; 	ledStep = workStep;
     0076 01rr                      1- 3143     	MOVR	_workStep,W
     0077 00rr                      1- 3144     	MOVAR	_ledStep
     0078                           1- 3145     _00294_DS_:
                                    1- 3146     	.line	348, "main.c"; 	}
                                    1- 3147     	RETURN	
     0078 0010                      3-   40 m1      ret
                                    1- 3148     ; exit point of _keyCtr
                                    1- 3151     ;	code size estimation:
                                    1- 3152     ;	 1293+    0 =  1293 instructions ( 2586 byte)
                                    1- 3154     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810613
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000000
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b061d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B061D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000005FF
DATA ROM     = 0x00000000 - 0x000005FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
