
                    Nyquest Technology Co., Ltd.

NYASM 2.30

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubGewei
                                    1-   20     	extern	_showNubGewei2
                                    1-   21     	extern	_showNubShiwei
                                    1-   22     	extern	_showNubShiwei2
                                    1-   23     	extern	_showKeyLed
                                    1-   24     	extern	_A2
                                    1-   25     	extern	_B2
                                    1-   26     	extern	_C2
                                    1-   27     	extern	_D2
                                    1-   28     	extern	_E2
                                    1-   29     	extern	_F2
                                    1-   30     	extern	_G2
                                    1-   31     	extern	_A3
                                    1-   32     	extern	_B3
                                    1-   33     	extern	_C3
                                    1-   34     	extern	_D3
                                    1-   35     	extern	_E3
                                    1-   36     	extern	_F3
                                    1-   37     	extern	_G3
                                    1-   38     	extern	_delayms
                                    1-   39     	extern	_delay
                                    1-   40     	extern	_LedCtr2
                                    1-   41     	extern	_checkInAD
                                    1-   42     	extern	_F_AIN3_Convert
                                    1-   43     	extern	_fgCtr
                                    1-   44     	extern	_ledCtr
                                    1-   45     	extern	_workCtr
                                    1-   46     	extern	__divuchar
                                    1-   47     	extern	__moduchar
                                    1-   48     	extern	_PORTAbits
                                    1-   49     	extern	_PORTBbits
                                    1-   50     	extern	_PCONbits
                                    1-   51     	extern	_BWUCONbits
                                    1-   52     	extern	_ABPLCONbits
                                    1-   53     	extern	_BPHCONbits
                                    1-   54     	extern	_INTEbits
                                    1-   55     	extern	_INTFbits
                                    1-   56     	extern	_ADMDbits
                                    1-   57     	extern	_ADRbits
                                    1-   58     	extern	_ADVREFHbits
                                    1-   59     	extern	_ADCRbits
                                    1-   60     	extern	_AWUCONbits
                                    1-   61     	extern	_PACONbits
                                    1-   62     	extern	_INTEDGbits
                                    1-   63     	extern	_ANAENbits
                                    1-   64     	extern	_RFCbits
                                    1-   65     	extern	_INTE2bits
                                    1-   66     	extern	_INDF
                                    1-   67     	extern	_TMR0
                                    1-   68     	extern	_PCL
                                    1-   69     	extern	_STATUS
                                    1-   70     	extern	_FSR
                                    1-   71     	extern	_PORTA
                                    1-   72     	extern	_PORTB
                                    1-   73     	extern	_PCON
                                    1-   74     	extern	_BWUCON
                                    1-   75     	extern	_PCHBUF
                                    1-   76     	extern	_ABPLCON
                                    1-   77     	extern	_BPHCON
                                    1-   78     	extern	_INTE
                                    1-   79     	extern	_INTF
                                    1-   80     	extern	_ADMD
                                    1-   81     	extern	_ADR
                                    1-   82     	extern	_ADD
                                    1-   83     	extern	_ADVREFH
                                    1-   84     	extern	_ADCR
                                    1-   85     	extern	_AWUCON
                                    1-   86     	extern	_PACON
                                    1-   87     	extern	_INTEDG
                                    1-   88     	extern	_TMRH
                                    1-   89     	extern	_ANAEN
                                    1-   90     	extern	_RFC
                                    1-   91     	extern	_TM3RH
                                    1-   92     	extern	_INTE2
                                    1-   93     	extern	_TMR1
                                    1-   94     	extern	_T1CR1
                                    1-   95     	extern	_T1CR2
                                    1-   96     	extern	_PWM1DUTY
                                    1-   97     	extern	_PS1CV
                                    1-   98     	extern	_BZ1CR
                                    1-   99     	extern	_IRCR
                                    1-  100     	extern	_TBHP
                                    1-  101     	extern	_TBHD
                                    1-  102     	extern	_TMR2
                                    1-  103     	extern	_T2CR1
                                    1-  104     	extern	_T2CR2
                                    1-  105     	extern	_PWM2DUTY
                                    1-  106     	extern	_PS2CV
                                    1-  107     	extern	_BZ2CR
                                    1-  108     	extern	_OSCCR
                                    1-  109     	extern	_TMR3
                                    1-  110     	extern	_T3CR1
                                    1-  111     	extern	_T3CR2
                                    1-  112     	extern	_PWM3DUTY
                                    1-  113     	extern	_PS3CV
                                    1-  114     	extern	_BZ3CR
                                    1-  115     	extern	_IOSTA
                                    1-  116     	extern	_IOSTB
                                    1-  117     	extern	_APHCON
                                    1-  118     	extern	_PS0CV
                                    1-  119     	extern	_BODCON
                                    1-  120     	extern	_CMPCR
                                    1-  121     	extern	_PCON1
                                    1-  122     	extern	_T0MD
                                    1-  123     	extern	___sdcc_saved_fsr
                                    1-  124     	extern	___sdcc_saved_stk00
                                    1-  125     	extern	___sdcc_saved_stk01
                                    1-  126     	extern	__gptrget1
                                    1-  127     	extern	__mulchar
                                    1-  128     	extern	__nyc_ny8_startup
                                    1-  129     ;--------------------------------------------------------
                                    1-  130     ; global declarations
                                    1-  131     ;--------------------------------------------------------
                                    1-  132     	extern	_F_wait_eoc
                                    1-  133     	extern	_F_AIN2_Convert
                                    1-  134     	extern	_F_AIN4_Convert
                                    1-  135     	extern	_checkOutA
                                    1-  136     	extern	_checkBatAD
                                    1-  137     	extern	_initAD
                                    1-  138     	extern	_keyRead
                                    1-  139     	extern	_gotoSleep
                                    1-  140     	extern	_pwmStop
                                    1-  141     	extern	_pwmInit
                                    1-  142     	extern	_pwm1Stop
                                    1-  143     	extern	_pwm1Init
                                    1-  144     	extern	_powerOff
                                    1-  145     	extern	_initSys
                                    1-  146     	extern	_keyCtr
                                    1-  147     	extern	_refreshNub
                                    1-  148     	extern	_chrgCtr
                                    1-  149     	extern	_isr
                                    1-  150     	extern	_main
                                    1-  151     	extern	_setMaxDuty
                                    1-  152     	extern	_Status
                                    1-  153     	extern	_R_AIN4_DATA
                                    1-  154     	extern	_R_AIN4_DATA_LB
                                    1-  155     	extern	_R_AIN2_DATA
                                    1-  156     	extern	_R_AIN2_DATA_LB
                                    1-  157     	extern	_intCount
                                    1-  158     	extern	_sleepTime
                                    1-  159     	extern	_count200ms
                                    1-  160     	extern	_count500ms
                                    1-  161     	extern	_count1s
                                    1-  162     	extern	_count5s
                                    1-  163     	extern	_count900s
                                    1-  164     	extern	_workStep
                                    1-  165     	extern	_keyCount
                                    1-  166     	extern	_pwStep
                                    1-  167     	extern	_ledLightTime
                                    1-  168     	extern	_maxDuty
                                    1-  169     	extern	_currentDuty
                                    1-  170     	extern	_overCount
                                    1-  171     	extern	_tempDuty
                                    1-  172     	extern	_count5S
                                    1-  173     	extern	_ledDeadTime
                                    1-  174     	extern	_countFull
                                    1-  175     	extern	_tempshiweiNum
                                    1-  176     	extern	_tempgeweiNum
                                    1-  177     	extern	_shiweiNum
                                    1-  178     	extern	_geweiNum
                                    1-  179     	extern	_batValue
                                    1-  180     	extern	_cDuty
                                    1-  181     	extern	_preBatValue
                                    1-  182     	extern	_closeCount
                                    1-  183     	extern	_firstShowCount
                                    1-  184     	extern	_chrgStep
                                    1-  185     	extern	_maxduty
                                    1-  186     	extern	_chrgFullFlag
                                    1-  187     	extern	_fullTime
                                    1-  188     	extern	_fullFlag
                                    1-  189     	extern	_subTime
                                    1-  190     	extern	_subMin
                                    1-  191     	extern	_addMax
                                    1-  192     	extern	_addTime
                                    1-  193     	extern	_chrgduty
                                    1-  194     	extern	_lowATime
                                    1-  195     	extern	_highATime
                                    1-  196     	extern	_chrgWaitTime
                                    1-  197     	extern	_startFlag
                                    1-  199     	extern PSAVE
                                    1-  200     	extern SSAVE
                                    1-  201     	extern WSAVE
                                    1-  202     	extern STK02
                                    1-  203     	extern STK01
                                    1-  204     	extern STK00
                                    1-  206     .segment "uninit", 0x20000040
 20000040                           1-  207     PSAVE:
                                    1-  208     	.res 1
 20000041                           1-  209     SSAVE:
                                    1-  210     	.res 1
 20000042                           1-  211     WSAVE:
                                    1-  212     	.res 1
 20000043                           1-  213     STK02:
                                    1-  214     	.res 1
 20000044                           1-  215     STK01:
                                    1-  216     	.res 1
 20000045                           1-  217     STK00:
                                    1-  218     	.res 1
                                    1-  220     ;--------------------------------------------------------
                                    1-  221     ; global definitions
                                    1-  222     ;--------------------------------------------------------
                                    1-  223     .segment "uninit"
     0000                           1-  224     _R_AIN4_DATA:
                                    1-  225     	.res	2
                                    1-  228     .segment "uninit"
     0000                           1-  229     _R_AIN4_DATA_LB:
                                    1-  230     	.res	1
                                    1-  233     .segment "uninit"
     0000                           1-  234     _R_AIN2_DATA:
                                    1-  235     	.res	2
                                    1-  238     .segment "uninit"
     0000                           1-  239     _R_AIN2_DATA_LB:
                                    1-  240     	.res	1
                                    1-  243     ;--------------------------------------------------------
                                    1-  244     ; absolute symbol definitions
                                    1-  245     ;--------------------------------------------------------
                                    1-  246     ;--------------------------------------------------------
                                    1-  247     ; compiler-defined variables
                                    1-  248     ;--------------------------------------------------------
                                    1-  249     .segment "uninit"
     0000                           1-  250     r0x105C:
                                    1-  251     	.res	1
                                    1-  252     .segment "uninit"
     0000                           1-  253     r0x105D:
                                    1-  254     	.res	1
                                    1-  255     .segment "uninit"
     0000                           1-  256     r0x105E:
                                    1-  257     	.res	1
                                    1-  258     .segment "uninit"
     0000                           1-  259     r0x1060:
                                    1-  260     	.res	1
                                    1-  261     .segment "uninit"
     0000                           1-  262     r0x1059:
                                    1-  263     	.res	1
                                    1-  264     .segment "uninit"
     0000                           1-  265     r0x105A:
                                    1-  266     	.res	1
                                    1-  267     .segment "uninit"
     0000                           1-  268     r0x1057:
                                    1-  269     	.res	1
                                    1-  270     .segment "uninit"
     0000                           1-  271     r0x1058:
                                    1-  272     	.res	1
                                    1-  273     .segment "uninit"
     0000                           1-  274     r0x1056:
                                    1-  275     	.res	1
                                    1-  276     .segment "uninit"
     0000                           1-  277     r0x1055:
                                    1-  278     	.res	1
                                    1-  279     .segment "uninit"
     0000                           1-  280     r0x1054:
                                    1-  281     	.res	1
                                    1-  282     .segment "uninit"
     0000                           1-  283     r0x104F:
                                    1-  284     	.res	1
                                    1-  285     .segment "uninit"
     0000                           1-  286     r0x1050:
                                    1-  287     	.res	1
                                    1-  288     .segment "uninit"
     0000                           1-  289     r0x1051:
                                    1-  290     	.res	1
                                    1-  291     .segment "uninit"
     0000                           1-  292     r0x1052:
                                    1-  293     	.res	1
                                    1-  294     .segment "uninit"
     0000                           1-  295     r0x1053:
                                    1-  296     	.res	1
                                    1-  297     .segment "uninit"
     0000                           1-  298     r0x104B:
                                    1-  299     	.res	1
                                    1-  300     .segment "uninit"
     0000                           1-  301     r0x104C:
                                    1-  302     	.res	1
                                    1-  303     .segment "uninit"
     0000                           1-  304     r0x104D:
                                    1-  305     	.res	1
                                    1-  306     .segment "uninit"
     0000                           1-  307     r0x104E:
                                    1-  308     	.res	1
                                    1-  309     .segment "uninit"
     0000                           1-  310     r0x1045:
                                    1-  311     	.res	1
                                    1-  312     .segment "uninit"
     0000                           1-  313     r0x1046:
                                    1-  314     	.res	1
                                    1-  315     .segment "uninit"
     0000                           1-  316     r0x1047:
                                    1-  317     	.res	1
                                    1-  318     .segment "uninit"
     0000                           1-  319     r0x104A:
                                    1-  320     	.res	1
                                    1-  321     .segment "uninit"
     0000                           1-  322     r0x103F:
                                    1-  323     	.res	1
                                    1-  324     .segment "uninit"
     0000                           1-  325     r0x1040:
                                    1-  326     	.res	1
                                    1-  327     .segment "uninit"
     0000                           1-  328     r0x1041:
                                    1-  329     	.res	1
                                    1-  330     .segment "uninit"
     0000                           1-  331     r0x1044:
                                    1-  332     	.res	1
                                    1-  333     ;--------------------------------------------------------
                                    1-  334     ; initialized data
                                    1-  335     ;--------------------------------------------------------
                                    1-  337     .segment "idata"
     0000                           1-  338     _numArray:
     0000 003F                      1-  339     	dw	0x3f
     0001 0006                      1-  340     	dw	0x06
     0002 005B                      1-  341     	dw	0x5b
     0003 004F                      1-  342     	dw	0x4f
     0004 0066                      1-  343     	dw	0x66
     0005 006D                      1-  344     	dw	0x6d
     0006 007D                      1-  345     	dw	0x7d
     0007 0007                      1-  346     	dw	0x07
     0008 007F                      1-  347     	dw	0x7f
     0009 006F                      1-  348     	dw	0x6f
     000A 0071                      1-  349     	dw	0x71
     000B 0079                      1-  350     	dw	0x79
     000C 0050                      1-  351     	dw	0x50
                                    1-  355     .segment "idata"
     0000                           1-  356     _Status:
     0000 0000                      1-  357     	dw	0x00
                                    1-  361     .segment "idata"
     0000                           1-  362     _intCount:
     0000 0000                      1-  363     	dw	0x00
                                    1-  367     .segment "idata"
     0000                           1-  368     _sleepTime:
     0000 0000 0000                 1-  369     	dw	0x00, 0x00
                                    1-  373     .segment "idata"
     0000                           1-  374     _count200ms:
     0000 0000                      1-  375     	dw	0x00
                                    1-  379     .segment "idata"
     0000                           1-  380     _count500ms:
     0000 0000                      1-  381     	dw	0x00
                                    1-  385     .segment "idata"
     0000                           1-  386     _count1s:
     0000 0000                      1-  387     	dw	0x00
                                    1-  391     .segment "idata"
     0000                           1-  392     _count5s:
     0000 0000 0000                 1-  393     	dw	0x00, 0x00
                                    1-  397     .segment "idata"
     0000                           1-  398     _count900s:
     0000 0000 0000                 1-  399     	dw	0x00, 0x00
                                    1-  403     .segment "idata"
     0000                           1-  404     _workStep:
     0000 0000                      1-  405     	dw	0x00
                                    1-  409     .segment "idata"
     0000                           1-  410     _keyCount:
     0000 0000                      1-  411     	dw	0x00
                                    1-  415     .segment "idata"
     0000                           1-  416     _pwStep:
     0000 0000                      1-  417     	dw	0x00
                                    1-  421     .segment "idata"
     0000                           1-  422     _ledLightTime:
     0000 0000                      1-  423     	dw	0x00
                                    1-  427     .segment "idata"
     0000                           1-  428     _maxDuty:
     0000 0000                      1-  429     	dw	0x00
                                    1-  433     .segment "idata"
     0000                           1-  434     _currentDuty:
     0000 0000                      1-  435     	dw	0x00
                                    1-  439     .segment "idata"
     0000                           1-  440     _overCount:
     0000 0000                      1-  441     	dw	0x00
                                    1-  445     .segment "idata"
     0000                           1-  446     _tempDuty:
     0000 0000                      1-  447     	dw	0x00
                                    1-  451     .segment "idata"
     0000                           1-  452     _count5S:
     0000 0000 0000                 1-  453     	dw	0x00, 0x00
                                    1-  457     .segment "idata"
     0000                           1-  458     _ledDeadTime:
     0000 0000                      1-  459     	dw	0x00
                                    1-  463     .segment "idata"
     0000                           1-  464     _countFull:
     0000 0000                      1-  465     	dw	0x00
                                    1-  469     .segment "idata"
     0000                           1-  470     _tempshiweiNum:
     0000 0000                      1-  471     	dw	0x00
                                    1-  475     .segment "idata"
     0000                           1-  476     _tempgeweiNum:
     0000 0000                      1-  477     	dw	0x00
                                    1-  481     .segment "idata"
     0000                           1-  482     _shiweiNum:
     0000 0000                      1-  483     	dw	0x00
                                    1-  487     .segment "idata"
     0000                           1-  488     _geweiNum:
     0000 0000                      1-  489     	dw	0x00
                                    1-  493     .segment "idata"
     0000                           1-  494     _batValue:
     0000 0000                      1-  495     	dw	0x00
                                    1-  499     .segment "idata"
     0000                           1-  500     _cDuty:
     0000 0000                      1-  501     	dw	0x00
                                    1-  505     .segment "idata"
     0000                           1-  506     _preBatValue:
     0000 0000                      1-  507     	dw	0x00
                                    1-  511     .segment "idata"
     0000                           1-  512     _closeCount:
     0000 0000 0000                 1-  513     	dw	0x00, 0x00
                                    1-  517     .segment "idata"
     0000                           1-  518     _firstShowCount:
     0000 0000                      1-  519     	dw	0x00
                                    1-  523     .segment "idata"
     0000                           1-  524     _chrgStep:
     0000 0000                      1-  525     	dw	0x00
                                    1-  529     .segment "idata"
     0000                           1-  530     _maxduty:
     0000 0000                      1-  531     	dw	0x00
                                    1-  535     .segment "idata"
     0000                           1-  536     _chrgFullFlag:
     0000 0000                      1-  537     	dw	0x00
                                    1-  541     .segment "idata"
     0000                           1-  542     _fullTime:
     0000 0000                      1-  543     	dw	0x00
                                    1-  547     .segment "idata"
     0000                           1-  548     _fullFlag:
     0000 0000                      1-  549     	dw	0x00
                                    1-  553     .segment "idata"
     0000                           1-  554     _subTime:
     0000 0000                      1-  555     	dw	0x00
                                    1-  559     .segment "idata"
     0000                           1-  560     _subMin:
     0000 0000                      1-  561     	dw	0x00
                                    1-  565     .segment "idata"
     0000                           1-  566     _addMax:
     0000 0000                      1-  567     	dw	0x00
                                    1-  571     .segment "idata"
     0000                           1-  572     _addTime:
     0000 0000                      1-  573     	dw	0x00
                                    1-  577     .segment "idata"
     0000                           1-  578     _chrgduty:
     0000 0000                      1-  579     	dw	0x00
                                    1-  583     .segment "idata"
     0000                           1-  584     _lowATime:
     0000 0000                      1-  585     	dw	0x00
                                    1-  589     .segment "idata"
     0000                           1-  590     _highATime:
     0000 0000                      1-  591     	dw	0x00
                                    1-  595     .segment "idata"
     0000                           1-  596     _chrgWaitTime:
     0000 0000                      1-  597     	dw	0x00
                                    1-  601     .segment "idata"
     0000                           1-  602     _startFlag:
     0000 0000                      1-  603     	dw	0x00
                                    1-  606     ;--------------------------------------------------------
                                    1-  607     ; overlayable items in internal ram 
                                    1-  608     ;--------------------------------------------------------
                                    1-  609     ;	udata_ovr
                                    1-  610     ;--------------------------------------------------------
                                    1-  611     ; reset vector 
                                    1-  612     ;--------------------------------------------------------
                                    1-  613     ORG	0x0000
     0000 3rrr                      1-  614     	LGOTO	__nyc_ny8_startup
                                    1-  615     ;--------------------------------------------------------
                                    1-  616     ; interrupt and initialization code
                                    1-  617     ;--------------------------------------------------------
                                    1-  618     ORG 0x0008
                                    1-  619     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  621     .segment "code"
     0000                           1-  622     __sdcc_interrupt:
                                    1-  623     ;***
                                    1-  624     ;  pBlock Stats: dbName = I
                                    1-  625     ;***
                                    1-  626     ;2 compiler assigned registers:
                                    1-  627     ;   STK00
                                    1-  628     ;   STK01
                                    1-  629     ;; Starting pCode block
     0000                           1-  630     _isr:
                                    1-  631     ; 0 exit points
                                    1-  632     	.line	96, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  633     	MOVAR	WSAVE
     0001 1503                      1-  634     	SWAPR	STATUS,W
     0002 0283                      1-  635     	CLRR	STATUS
     0003 00rr                      1-  636     	MOVAR	SSAVE
     0004 010A                      1-  637     	MOVR	PCHBUF,W
     0005 028A                      1-  638     	CLRR	PCHBUF
     0006 00rr                      1-  639     	MOVAR	PSAVE
     0007 0104                      1-  640     	MOVR	FSR,W
                                    1-  641     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  642     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  643     	MOVR	STK00,W
                                    1-  644     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  645     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  646     	MOVR	STK01,W
                                    1-  647     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  648     	MOVAR	___sdcc_saved_stk01
                                    1-  649     	.line	98, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  650     	BTRSS	_INTFbits,0
                                    1-  651     	MGOTO	_00121_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  652     	.line	100, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  653     	MOVIA	0x37
     0013 03rr                      1-  654     	ADDAR	_TMR0,F
                                    1-  655     	.line	102, "main.c"; 	if(++intCount >= 125)
                                    1-  656     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  657     	INCR	_intCount,F
                                    1-  658     ;;unsigned compare: left < lit (0x7D=125), size=1
     0016 217D                      1-  659     	MOVIA	0x7d
     0017 04rr                      1-  660     	SUBAR	_intCount,W
     0018 0803                      1-  661     	BTRSS	STATUS,0
                                    1-  662     	MGOTO	_00121_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  663     	.line	104, "main.c"; 	IntFlag = 1;
                                    1-  664     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  665     	BSR	_Status,0
                                    1-  666     	.line	105, "main.c"; 	intCount = 0;
                                    1-  667     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  668     	CLRR	_intCount
                                    1-  669     	.line	107, "main.c"; 	if(++count200ms >= 20)
                                    1-  670     	BANKSEL	_count200ms
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 05rr                      1-  671     	INCR	_count200ms,F
                                    1-  672     ;;unsigned compare: left < lit (0x14=20), size=1
     0020 2114                      1-  673     	MOVIA	0x14
     0021 04rr                      1-  674     	SUBAR	_count200ms,W
     0022 0803                      1-  675     	BTRSS	STATUS,0
                                    1-  676     	MGOTO	_00108_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  677     	.line	109, "main.c"; 	count200ms = 0;
     0024 02rr                      1-  678     	CLRR	_count200ms
                                    1-  679     	.line	110, "main.c"; 	if(ledDeadTime > 0)
                                    1-  680     	BANKSEL	_ledDeadTime
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1-  681     	MOVR	_ledDeadTime,W
     0027 0903                      1-  682     	BTRSS	STATUS,2
                                    1-  683     	.line	111, "main.c"; 	--ledDeadTime;
     0028 06rr                      1-  684     	DECR	_ledDeadTime,F
     0029                           1-  685     _00108_DS_:
                                    1-  686     	.line	113, "main.c"; 	if(++count5s >= 3000)
                                    1-  687     	BANKSEL	_count5s
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 05rr                      1-  688     	INCR	_count5s,F
     002B 0D03                      1-  689     	BTRSC	STATUS,2
     002C 05rr                      1-  690     	INCR	(_count5s + 1),F
                                    1-  691     ;;unsigned compare: left < lit (0xBB8=3000), size=2
     002D 210B                      1-  692     	MOVIA	0x0b
     002E 04rr                      1-  693     	SUBAR	(_count5s + 1),W
     002F 0903                      1-  694     	BTRSS	STATUS,2
                                    1-  695     	MGOTO	_00155_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031 21B8                      1-  696     	MOVIA	0xb8
     0032 04rr                      1-  697     	SUBAR	_count5s,W
     0033                           1-  698     _00155_DS_:
     0033 0803                      1-  699     	BTRSS	STATUS,0
                                    1-  700     	MGOTO	_00110_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  701     	.line	115, "main.c"; 	count5s = 0;
                                    1-  702     	BANKSEL	_count5s
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 02rr                      1-  703     	CLRR	_count5s
     0037 02rr                      1-  704     	CLRR	(_count5s + 1)
     0038                           1-  705     _00110_DS_:
                                    1-  706     	.line	117, "main.c"; 	if(++count1s >= 100)
                                    1-  707     	BANKSEL	_count1s
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 05rr                      1-  708     	INCR	_count1s,F
                                    1-  709     ;;unsigned compare: left < lit (0x64=100), size=1
     003A 2164                      1-  710     	MOVIA	0x64
     003B 04rr                      1-  711     	SUBAR	_count1s,W
     003C 0803                      1-  712     	BTRSS	STATUS,0
                                    1-  713     	MGOTO	_00121_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  714     	.line	119, "main.c"; 	count1s = 0;
     003E 02rr                      1-  715     	CLRR	_count1s
                                    1-  716     	.line	120, "main.c"; 	if(ledLightTime > 0)
                                    1-  717     	BANKSEL	_ledLightTime
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 01rr                      1-  718     	MOVR	_ledLightTime,W
     0041 0903                      1-  719     	BTRSS	STATUS,2
                                    1-  720     	.line	121, "main.c"; 	ledLightTime--;
     0042 06rr                      1-  721     	DECR	_ledLightTime,F
                                    1-  722     	.line	122, "main.c"; 	if(workStep)
                                    1-  723     	BANKSEL	_workStep
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1-  724     	MOVR	_workStep,W
     0045 0D03                      1-  725     	BTRSC	STATUS,2
                                    1-  726     	MGOTO	_00114_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  727     	.line	124, "main.c"; 	++count900s;
                                    1-  728     	BANKSEL	_count900s
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 05rr                      1-  729     	INCR	_count900s,F
     0049 0D03                      1-  730     	BTRSC	STATUS,2
     004A 05rr                      1-  731     	INCR	(_count900s + 1),F
                                    1-  732     	MGOTO	_00121_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C                           1-  733     _00114_DS_:
                                    1-  734     	.line	128, "main.c"; 	count900s = 0;
                                    1-  735     	BANKSEL	_count900s
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 02rr                      1-  736     	CLRR	_count900s
     004E 02rr                      1-  737     	CLRR	(_count900s + 1)
     004F                           1-  738     _00121_DS_:
                                    1-  739     	.line	137, "main.c"; 	if(INTFbits.PABIF)
     004F 08rr                      1-  740     	BTRSS	_INTFbits,1
                                    1-  741     	MGOTO	_00123_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  742     	.line	139, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0051 21FD                      1-  743     	MOVIA	0xfd
     0052 00rr                      1-  744     	MOVAR	_INTF
     0053                           1-  745     _00123_DS_:
                                    1-  746     	.line	142, "main.c"; 	INTF = 0;
     0053 02rr                      1-  747     	CLRR	_INTF
                                    1-  748     	.line	144, "main.c"; 	}
                                    1-  749     	BANKSEL	___sdcc_saved_stk01
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 01rr                      1-  750     	MOVR	___sdcc_saved_stk01,W
     0056 00rr                      1-  751     	MOVAR	STK01
                                    1-  752     	BANKSEL	___sdcc_saved_stk00
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 01rr                      1-  753     	MOVR	___sdcc_saved_stk00,W
     0059 00rr                      1-  754     	MOVAR	STK00
                                    1-  755     	BANKSEL	___sdcc_saved_fsr
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 01rr                      1-  756     	MOVR	___sdcc_saved_fsr,W
     005C 0084                      1-  757     	MOVAR	FSR
     005D 01rr                      1-  758     	MOVR	PSAVE,W
     005E 008A                      1-  759     	MOVAR	PCHBUF
     005F 0283                      1-  760     	CLRR	STATUS
     0060 15rr                      1-  761     	SWAPR	SSAVE,W
     0061 0083                      1-  762     	MOVAR	STATUS
     0062 15rr                      1-  763     	SWAPR	WSAVE,F
     0063 15rr                      1-  764     	SWAPR	WSAVE,W
     0064                           1-  765     END_OF_INTERRUPT:
     0064 0011                      1-  766     	RETIE	
                                    1-  768     ;--------------------------------------------------------
                                    1-  769     ; code
                                    1-  770     ;--------------------------------------------------------
                                    1-  771     ;***
                                    1-  772     ;  pBlock Stats: dbName = M
                                    1-  773     ;***
                                    1-  774     ;has an exit
                                    1-  775     ;functions called:
                                    1-  776     ;   _initSys
                                    1-  777     ;   _initAD
                                    1-  778     ;   _delayms
                                    1-  779     ;   _refreshNub
                                    1-  780     ;   _setInput
                                    1-  781     ;   _checkBatAD
                                    1-  782     ;   _pwmStop
                                    1-  783     ;   _powerOff
                                    1-  784     ;   _checkOutA
                                    1-  785     ;   _checkBatAD
                                    1-  786     ;   _chrgCtr
                                    1-  787     ;   _keyCtr
                                    1-  788     ;   _gotoSleep
                                    1-  789     ;   _powerOff
                                    1-  790     ;   _initSys
                                    1-  791     ;   _initAD
                                    1-  792     ;   _delayms
                                    1-  793     ;   _refreshNub
                                    1-  794     ;   _setInput
                                    1-  795     ;   _checkBatAD
                                    1-  796     ;   _pwmStop
                                    1-  797     ;   _powerOff
                                    1-  798     ;   _checkOutA
                                    1-  799     ;   _checkBatAD
                                    1-  800     ;   _chrgCtr
                                    1-  801     ;   _keyCtr
                                    1-  802     ;   _gotoSleep
                                    1-  803     ;   _powerOff
                                    1-  804     ;; Starting pCode block
                                    1-  805     .segment "code"; module=main, function=_main
     0000                           1-  807     _main:
                                    1-  808     ; 2 exit points
                                    1-  809     	.line	149, "main.c"; 	initSys();
                                    1-  810     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  811     	.line	150, "main.c"; 	initAD();
                                    1-  812     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  813     	.line	151, "main.c"; 	firstShowCount = 100;
     0002 2164                      1-  814     	MOVIA	0x64
                                    1-  815     	BANKSEL	_firstShowCount
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1-  816     	MOVAR	_firstShowCount
                                    1-  817     	.line	152, "main.c"; 	ledLightTime = showFlag = 1;
                                    1-  818     	BANKSEL	_Status
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 1Arr                      1-  819     	BSR	_Status,4
                                    1-  820     	BANKSEL	_ledLightTime
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1-  821     	CLRR	_ledLightTime
                                    1-  822     	BANKSEL	_Status
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 0Arr                      1-  823     	BTRSS	_Status,4
                                    1-  824     	MGOTO	_00010_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  825     	BANKSEL	_ledLightTime
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 05rr                      1-  826     	INCR	_ledLightTime,F
     000E                           1-  827     _00010_DS_:
                                    1-  828     	.line	153, "main.c"; 	tempshiweiNum = shiweiNum = 8;
     000E 2108                      1-  829     	MOVIA	0x08
                                    1-  830     	BANKSEL	_shiweiNum
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 00rr                      1-  831     	MOVAR	_shiweiNum
                                    1-  832     	BANKSEL	_tempshiweiNum
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1-  833     	MOVAR	_tempshiweiNum
                                    1-  834     	.line	154, "main.c"; 	tempgeweiNum = geweiNum = 8;
                                    1-  835     	BANKSEL	_geweiNum
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 00rr                      1-  836     	MOVAR	_geweiNum
     0015 2108                      1-  837     	MOVIA	0x08
                                    1-  838     	BANKSEL	_tempgeweiNum
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1-  839     	MOVAR	_tempgeweiNum
                                    1-  840     	.line	155, "main.c"; 	delayms(250);
     0018 21FA                      1-  841     	MOVIA	0xfa
                                    1-  842     	MCALL	_delayms
     0019 2rrr                      3-   66 m1      LCALL rom_address
     001A                           1-  843     _00209_DS_:
                                    1-  844     	.line	158, "main.c"; 	CLRWDT();
     001A 0002                      1-  845     	clrwdt
                                    1-  846     	.line	159, "main.c"; 	if(showFlag)
                                    1-  847     	BANKSEL	_Status
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 0Arr                      1-  848     	BTRSS	_Status,4
                                    1-  849     	MGOTO	_00161_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  850     	.line	160, "main.c"; 	refreshNub();
                                    1-  851     	MCALL	_refreshNub
     001E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  852     	MGOTO	_00162_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1-  853     _00161_DS_:
                                    1-  854     	.line	162, "main.c"; 	setInput();
                                    1-  855     	MCALL	_setInput
     0020 2rrr                      3-   66 m1      LCALL rom_address
     0021                           1-  856     _00162_DS_:
                                    1-  857     	.line	163, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  858     	BANKSEL	_workStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1-  859     	MOVR	_workStep,W
     0023 0D03                      1-  860     	BTRSC	STATUS,2
                                    1-  861     	MGOTO	_00172_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  862     	BANKSEL	_currentDuty
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1-  863     	MOVR	_currentDuty,W
                                    1-  864     	BANKSEL	_maxDuty
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 04rr                      1-  865     	SUBAR	_maxDuty,W
     0029 0C03                      1-  866     	BTRSC	STATUS,0
                                    1-  867     	MGOTO	_00172_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  868     	.line	165, "main.c"; 	currentDuty = currentDuty - 1;
                                    1-  869     	BANKSEL	_currentDuty
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 06rr                      1-  870     	DECR	_currentDuty,F
                                    1-  871     	.line	166, "main.c"; 	PWM2DUTY = currentDuty;
     002D 01rr                      1-  872     	MOVR	_currentDuty,W
     002E 00rr                      1-  873     	SFUN	_PWM2DUTY
                                    1-  874     	.line	167, "main.c"; 	cDuty = currentDuty;
     002F 01rr                      1-  875     	MOVR	_currentDuty,W
                                    1-  876     	BANKSEL	_cDuty
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 00rr                      1-  877     	MOVAR	_cDuty
                                    1-  878     	MGOTO	_00173_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033                           1-  879     _00172_DS_:
                                    1-  880     	.line	169, "main.c"; 	else if(workStep > 0 && tempDuty >= 40)
                                    1-  881     	BANKSEL	_workStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1-  882     	MOVR	_workStep,W
     0035 0D03                      1-  883     	BTRSC	STATUS,2
                                    1-  884     	MGOTO	_00173_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  885     ;;unsigned compare: left < lit (0x28=40), size=1
     0037 2128                      1-  886     	MOVIA	0x28
                                    1-  887     	BANKSEL	_tempDuty
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 04rr                      1-  888     	SUBAR	_tempDuty,W
     003A 0803                      1-  889     	BTRSS	STATUS,0
                                    1-  890     	MGOTO	_00173_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  891     	.line	171, "main.c"; 	if(cDuty > tempDuty)
                                    1-  892     	BANKSEL	_cDuty
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1-  893     	MOVR	_cDuty,W
                                    1-  894     	BANKSEL	_tempDuty
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 04rr                      1-  895     	SUBAR	_tempDuty,W
     0040 0C03                      1-  896     	BTRSC	STATUS,0
                                    1-  897     	MGOTO	_00166_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  898     	.line	173, "main.c"; 	cDuty--;
                                    1-  899     	BANKSEL	_cDuty
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 06rr                      1-  900     	DECR	_cDuty,F
                                    1-  901     	.line	174, "main.c"; 	PWM2DUTY = cDuty;
     0044 01rr                      1-  902     	MOVR	_cDuty,W
     0045 00rr                      1-  903     	SFUN	_PWM2DUTY
                                    1-  904     	MGOTO	_00173_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
     0047                           1-  905     _00166_DS_:
                                    1-  906     	.line	176, "main.c"; 	else if(cDuty < tempDuty)
                                    1-  907     	BANKSEL	_tempDuty
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 01rr                      1-  908     	MOVR	_tempDuty,W
                                    1-  909     	BANKSEL	_cDuty
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 04rr                      1-  910     	SUBAR	_cDuty,W
     004B 0C03                      1-  911     	BTRSC	STATUS,0
                                    1-  912     	MGOTO	_00173_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  913     	.line	178, "main.c"; 	cDuty++;
     004D 05rr                      1-  914     	INCR	_cDuty,F
                                    1-  915     	.line	179, "main.c"; 	PWM2DUTY = cDuty;
     004E 01rr                      1-  916     	MOVR	_cDuty,W
     004F 00rr                      1-  917     	SFUN	_PWM2DUTY
     0050                           1-  918     _00173_DS_:
                                    1-  919     	.line	183, "main.c"; 	if(!IntFlag)
                                    1-  920     	BANKSEL	_Status
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 08rr                      1-  921     	BTRSS	_Status,0
                                    1-  922     	MGOTO	_00209_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  923     	.line	185, "main.c"; 	IntFlag = 0;
     0053 1Crr                      1-  924     	BCR	_Status,0
                                    1-  925     	.line	186, "main.c"; 	if(firstShowCount > 0)
                                    1-  926     	BANKSEL	_firstShowCount
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 01rr                      1-  927     	MOVR	_firstShowCount,W
     0056 0D03                      1-  928     	BTRSC	STATUS,2
                                    1-  929     	MGOTO	_00178_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  930     	.line	188, "main.c"; 	firstShowCount--;
     0058 06rr                      1-  931     	DECR	_firstShowCount,F
                                    1-  932     	.line	189, "main.c"; 	checkBatAD();
                                    1-  933     	MCALL	_checkBatAD
     0059 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  934     ;;unsigned compare: left < lit (0x5=5), size=1
     005A                           1-  935     _00178_DS_:
                                    1-  936     	.line	192, "main.c"; 	if(batValue < 5 && workStep > 0)
     005A 2105                      1-  937     	MOVIA	0x05
                                    1-  938     	BANKSEL	_batValue
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 04rr                      1-  939     	SUBAR	_batValue,W
     005D 0C03                      1-  940     	BTRSC	STATUS,0
                                    1-  941     	MGOTO	_00182_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  942     	BANKSEL	_workStep
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 01rr                      1-  943     	MOVR	_workStep,W
     0061 0D03                      1-  944     	BTRSC	STATUS,2
                                    1-  945     	MGOTO	_00182_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  946     	.line	194, "main.c"; 	if(++closeCount >= 6000)
                                    1-  947     	BANKSEL	_closeCount
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 05rr                      1-  948     	INCR	_closeCount,F
     0065 0D03                      1-  949     	BTRSC	STATUS,2
     0066 05rr                      1-  950     	INCR	(_closeCount + 1),F
                                    1-  951     ;;unsigned compare: left < lit (0x1770=6000), size=2
     0067 2117                      1-  952     	MOVIA	0x17
     0068 04rr                      1-  953     	SUBAR	(_closeCount + 1),W
     0069 0903                      1-  954     	BTRSS	STATUS,2
                                    1-  955     	MGOTO	_00296_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
     006B 2170                      1-  956     	MOVIA	0x70
     006C 04rr                      1-  957     	SUBAR	_closeCount,W
     006D                           1-  958     _00296_DS_:
     006D 0803                      1-  959     	BTRSS	STATUS,0
                                    1-  960     	MGOTO	_00183_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  961     	.line	196, "main.c"; 	closeCount = 0;
                                    1-  962     	BANKSEL	_closeCount
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 02rr                      1-  963     	CLRR	_closeCount
     0071 02rr                      1-  964     	CLRR	(_closeCount + 1)
                                    1-  965     	.line	197, "main.c"; 	preBatValue = 0;
                                    1-  966     	BANKSEL	_preBatValue
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 02rr                      1-  967     	CLRR	_preBatValue
                                    1-  968     	.line	198, "main.c"; 	workStep = 0;
                                    1-  969     	BANKSEL	_workStep
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 02rr                      1-  970     	CLRR	_workStep
                                    1-  971     	.line	199, "main.c"; 	pwmStop();
                                    1-  972     	MCALL	_pwmStop
     0076 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  973     	MGOTO	_00183_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
     0078                           1-  974     _00182_DS_:
                                    1-  975     	.line	204, "main.c"; 	closeCount = 0;
                                    1-  976     	BANKSEL	_closeCount
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 02rr                      1-  977     	CLRR	_closeCount
     007A 02rr                      1-  978     	CLRR	(_closeCount + 1)
                                    1-  979     ;;unsigned compare: left < lit (0x5=5), size=1
     007B                           1-  980     _00183_DS_:
                                    1-  981     	.line	207, "main.c"; 	if(overCount >= 5 && workStep > 0)
     007B 2105                      1-  982     	MOVIA	0x05
                                    1-  983     	BANKSEL	_overCount
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 04rr                      1-  984     	SUBAR	_overCount,W
     007E 0803                      1-  985     	BTRSS	STATUS,0
                                    1-  986     	MGOTO	_00188_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  987     	BANKSEL	_workStep
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 01rr                      1-  988     	MOVR	_workStep,W
     0082 0D03                      1-  989     	BTRSC	STATUS,2
                                    1-  990     	MGOTO	_00188_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  991     	.line	209, "main.c"; 	if(++count5S > 250)
                                    1-  992     	BANKSEL	_count5S
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 05rr                      1-  993     	INCR	_count5S,F
     0086 0D03                      1-  994     	BTRSC	STATUS,2
     0087 05rr                      1-  995     	INCR	(_count5S + 1),F
                                    1-  996     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  997     ;;unsigned compare: left >= lit (0xFB=251), size=2
     0088 2100                      1-  998     	MOVIA	0x00
     0089 04rr                      1-  999     	SUBAR	(_count5S + 1),W
     008A 0903                      1- 1000     	BTRSS	STATUS,2
                                    1- 1001     	MGOTO	_00298_DS_
     008B 3rrr                      3-   63 m1      LGOTO rom_address
     008C 21FB                      1- 1002     	MOVIA	0xfb
     008D 04rr                      1- 1003     	SUBAR	_count5S,W
     008E                           1- 1004     _00298_DS_:
     008E 0803                      1- 1005     	BTRSS	STATUS,0
                                    1- 1006     	MGOTO	_00189_DS_
     008F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1007     	.line	211, "main.c"; 	overCount = 0;
                                    1- 1008     	BANKSEL	_overCount
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 02rr                      1- 1009     	CLRR	_overCount
                                    1- 1010     	.line	212, "main.c"; 	count5S = 0;
                                    1- 1011     	BANKSEL	_count5S
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 02rr                      1- 1012     	CLRR	_count5S
     0094 02rr                      1- 1013     	CLRR	(_count5S + 1)
                                    1- 1014     	.line	213, "main.c"; 	ledDeadTime = 25;
     0095 2119                      1- 1015     	MOVIA	0x19
                                    1- 1016     	BANKSEL	_ledDeadTime
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 00rr                      1- 1017     	MOVAR	_ledDeadTime
                                    1- 1018     	.line	214, "main.c"; 	powerOff();
                                    1- 1019     	MCALL	_powerOff
     0098 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1020     	MGOTO	_00189_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
     009A                           1- 1021     _00188_DS_:
                                    1- 1022     	.line	219, "main.c"; 	count5S = 0;
                                    1- 1023     	BANKSEL	_count5S
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 02rr                      1- 1024     	CLRR	_count5S
     009C 02rr                      1- 1025     	CLRR	(_count5S + 1)
     009D                           1- 1026     _00189_DS_:
                                    1- 1027     	.line	222, "main.c"; 	if(firstShowCount == 0)
                                    1- 1028     	BANKSEL	_firstShowCount
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 01rr                      1- 1029     	MOVR	_firstShowCount,W
     009F 0D03                      1- 1030     	BTRSC	STATUS,2
                                    1- 1031     	.line	223, "main.c"; 	checkOutA();
                                    1- 1032     	MCALL	_checkOutA
     00A0 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1033     	.line	224, "main.c"; 	if(count200ms < 3)
     00A1 2103                      1- 1034     	MOVIA	0x03
                                    1- 1035     	BANKSEL	_count200ms
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 04rr                      1- 1036     	SUBAR	_count200ms,W
     00A4 0803                      1- 1037     	BTRSS	STATUS,0
                                    1- 1038     	.line	226, "main.c"; 	checkBatAD();
                                    1- 1039     	MCALL	_checkBatAD
     00A5 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1040     	.line	228, "main.c"; 	chrgCtr();
                                    1- 1041     	MCALL	_chrgCtr
     00A6 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1042     	.line	229, "main.c"; 	if(chrgFlag == 0)
                                    1- 1043     	BANKSEL	_Status
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 09rr                      1- 1044     	BTRSS	_Status,3
                                    1- 1045     	.line	230, "main.c"; 	keyCtr();
                                    1- 1046     	MCALL	_keyCtr
     00A9 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1047     	.line	231, "main.c"; 	if(workStep == 0 && keyCount == 0 && chrgFlag == 0 && ledLightTime == 0 && ledDeadTime == 0)
                                    1- 1048     	BANKSEL	_workStep
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 01rr                      1- 1049     	MOVR	_workStep,W
     00AC 0903                      1- 1050     	BTRSS	STATUS,2
                                    1- 1051     	MGOTO	_00200_DS_
     00AD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1052     	BANKSEL	_keyCount
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 01rr                      1- 1053     	MOVR	_keyCount,W
     00B0 0903                      1- 1054     	BTRSS	STATUS,2
                                    1- 1055     	MGOTO	_00200_DS_
     00B1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1056     	BANKSEL	_Status
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 0Drr                      1- 1057     	BTRSC	_Status,3
                                    1- 1058     	MGOTO	_00200_DS_
     00B4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1059     	BANKSEL	_ledLightTime
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 01rr                      1- 1060     	MOVR	_ledLightTime,W
     00B7 0903                      1- 1061     	BTRSS	STATUS,2
                                    1- 1062     	MGOTO	_00200_DS_
     00B8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1063     	BANKSEL	_ledDeadTime
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 01rr                      1- 1064     	MOVR	_ledDeadTime,W
     00BB 0903                      1- 1065     	BTRSS	STATUS,2
                                    1- 1066     	MGOTO	_00200_DS_
     00BC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1067     	.line	233, "main.c"; 	showFlag = 0;
                                    1- 1068     	BANKSEL	_Status
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 1Err                      1- 1069     	BCR	_Status,4
                                    1- 1070     	.line	234, "main.c"; 	if(++sleepTime > 200)
                                    1- 1071     	BANKSEL	_sleepTime
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 05rr                      1- 1072     	INCR	_sleepTime,F
     00C1 0D03                      1- 1073     	BTRSC	STATUS,2
     00C2 05rr                      1- 1074     	INCR	(_sleepTime + 1),F
                                    1- 1075     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1076     ;;unsigned compare: left >= lit (0xC9=201), size=2
     00C3 2100                      1- 1077     	MOVIA	0x00
     00C4 04rr                      1- 1078     	SUBAR	(_sleepTime + 1),W
     00C5 0903                      1- 1079     	BTRSS	STATUS,2
                                    1- 1080     	MGOTO	_00300_DS_
     00C6 3rrr                      3-   63 m1      LGOTO rom_address
     00C7 21C9                      1- 1081     	MOVIA	0xc9
     00C8 04rr                      1- 1082     	SUBAR	_sleepTime,W
     00C9                           1- 1083     _00300_DS_:
     00C9 0803                      1- 1084     	BTRSS	STATUS,0
                                    1- 1085     	MGOTO	_00201_DS_
     00CA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1086     	.line	235, "main.c"; 	gotoSleep();
                                    1- 1087     	MCALL	_gotoSleep
     00CB 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1088     	MGOTO	_00201_DS_
     00CC 3rrr                      3-   63 m1      LGOTO rom_address
     00CD                           1- 1089     _00200_DS_:
                                    1- 1090     	.line	240, "main.c"; 	sleepTime = 0;
                                    1- 1091     	BANKSEL	_sleepTime
     00CD rrrr                      3-  110 m1      .banksel ram_address
     00CE 02rr                      1- 1092     	CLRR	_sleepTime
     00CF 02rr                      1- 1093     	CLRR	(_sleepTime + 1)
                                    1- 1094     ;;unsigned compare: left < lit (0x384=900), size=2
     00D0                           1- 1095     _00201_DS_:
                                    1- 1096     	.line	243, "main.c"; 	if(count900s >= 900)
     00D0 2103                      1- 1097     	MOVIA	0x03
                                    1- 1098     	BANKSEL	_count900s
     00D1 rrrr                      3-  110 m1      .banksel ram_address
     00D2 04rr                      1- 1099     	SUBAR	(_count900s + 1),W
     00D3 0903                      1- 1100     	BTRSS	STATUS,2
                                    1- 1101     	MGOTO	_00301_DS_
     00D4 3rrr                      3-   63 m1      LGOTO rom_address
     00D5 2184                      1- 1102     	MOVIA	0x84
     00D6 04rr                      1- 1103     	SUBAR	_count900s,W
     00D7                           1- 1104     _00301_DS_:
     00D7 0803                      1- 1105     	BTRSS	STATUS,0
                                    1- 1106     	MGOTO	_00209_DS_
     00D8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1107     	.line	245, "main.c"; 	powerOff();
                                    1- 1108     	MCALL	_powerOff
     00D9 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1109     	MGOTO	_00209_DS_
     00DA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1110     	.line	248, "main.c"; 	}
                                    1- 1111     	RETURN	
     00DB 0010                      3-   40 m1      ret
                                    1- 1112     ; exit point of _main
                                    1- 1114     ;***
                                    1- 1115     ;  pBlock Stats: dbName = C
                                    1- 1116     ;***
                                    1- 1117     ;has an exit
                                    1- 1118     ;; Starting pCode block
                                    1- 1119     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1121     _F_wait_eoc:
                                    1- 1122     ; 2 exit points
     0000                           1- 1123     _00789_DS_:
                                    1- 1124     	.line	836, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1125     	BTRSS	_ADMDbits,5
                                    1- 1126     	MGOTO	_00789_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1127     	.line	838, "main.c"; 	}
                                    1- 1128     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1129     ; exit point of _F_wait_eoc
                                    1- 1131     ;***
                                    1- 1132     ;  pBlock Stats: dbName = C
                                    1- 1133     ;***
                                    1- 1134     ;has an exit
                                    1- 1135     ;functions called:
                                    1- 1136     ;   _delayms
                                    1- 1137     ;   _F_wait_eoc
                                    1- 1138     ;   _delayms
                                    1- 1139     ;   _F_wait_eoc
                                    1- 1140     ;6 compiler assigned registers:
                                    1- 1141     ;   r0x103F
                                    1- 1142     ;   r0x1040
                                    1- 1143     ;   r0x1041
                                    1- 1144     ;   r0x1042
                                    1- 1145     ;   r0x1043
                                    1- 1146     ;   r0x1044
                                    1- 1147     ;; Starting pCode block
                                    1- 1148     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1150     ;local variable name mapping:
     0000                           1- 1153     _F_AIN2_Convert:
                                    1- 1154     ; 2 exit points
                                    1- 1155     	.line	819, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1156     	BANKSEL	r0x103F
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1157     	MOVAR	r0x103F
                                    1- 1158     	.line	821, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1159     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1160     	CLRR	_R_AIN2_DATA_LB
                                    1- 1161     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1162     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1163     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1164     	.line	823, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1165     	MOVIA	0x92
     0008 00rr                      1- 1166     	MOVAR	_ADMD
                                    1- 1167     	.line	824, "main.c"; 	delayms(200);	
     0009 21C8                      1- 1168     	MOVIA	0xc8
                                    1- 1169     	MCALL	_delayms
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1170     	.line	825, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1171     	MOVIA	0x01
                                    1- 1172     	BANKSEL	r0x1040
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1173     	MOVAR	r0x1040
     000E                           1- 1174     _00782_DS_:
                                    1- 1175     	BANKSEL	r0x1040
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1176     	MOVR	r0x1040,W
                                    1- 1177     	BANKSEL	r0x103F
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1178     	SUBAR	r0x103F,W
     0012 0803                      1- 1179     	BTRSS	STATUS,0
                                    1- 1180     	MGOTO	_00784_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1181     	.line	827, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1182     	BSR	_ADMDbits,6
                                    1- 1183     	.line	828, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1184     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1185     	.line	829, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1186     	MOVIA	0x0f
     0017 10rr                      1- 1187     	ANDAR	_ADR,W
                                    1- 1188     ;;3	MOVAR	r0x1041
                                    1- 1189     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1190     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1191     	.line	830, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1- 1192     	MOVR	_ADD,W
                                    1- 1193     	BANKSEL	r0x1041
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1194     	MOVAR	r0x1041
                                    1- 1195     ;;1	CLRR	r0x1042
                                    1- 1196     ;;106	MOVR	r0x1041,W
                                    1- 1197     ;;104	MOVAR	r0x1043
     001D 2100                      1- 1198     	MOVIA	0x00
                                    1- 1199     	BANKSEL	r0x1044
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1200     	MOVAR	r0x1044
                                    1- 1201     ;;105	MOVR	r0x1043,W
                                    1- 1202     	BANKSEL	r0x1041
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1203     	MOVR	r0x1041,W
                                    1- 1204     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1205     	ADDAR	_R_AIN2_DATA,F
                                    1- 1206     	BANKSEL	r0x1044
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1207     	MOVR	r0x1044,W
     0026 0C03                      1- 1208     	BTRSC	STATUS,0
     0027 05rr                      1- 1209     	INCR	r0x1044,W
     0028 0D03                      1- 1210     	BTRSC	STATUS,2
                                    1- 1211     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1212     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1213     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1- 1214     _00001_DS_:
                                    1- 1215     	.line	825, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1216     	BANKSEL	r0x1040
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1217     	INCR	r0x1040,F
                                    1- 1218     	MGOTO	_00782_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1219     _00784_DS_:
                                    1- 1220     	.line	832, "main.c"; 	}
                                    1- 1221     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1222     ; exit point of _F_AIN2_Convert
                                    1- 1224     ;***
                                    1- 1225     ;  pBlock Stats: dbName = C
                                    1- 1226     ;***
                                    1- 1227     ;has an exit
                                    1- 1228     ;functions called:
                                    1- 1229     ;   _delayms
                                    1- 1230     ;   _F_wait_eoc
                                    1- 1231     ;   _delayms
                                    1- 1232     ;   _F_wait_eoc
                                    1- 1233     ;6 compiler assigned registers:
                                    1- 1234     ;   r0x1045
                                    1- 1235     ;   r0x1046
                                    1- 1236     ;   r0x1047
                                    1- 1237     ;   r0x1048
                                    1- 1238     ;   r0x1049
                                    1- 1239     ;   r0x104A
                                    1- 1240     ;; Starting pCode block
                                    1- 1241     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1243     ;local variable name mapping:
     0000                           1- 1246     _F_AIN4_Convert:
                                    1- 1247     ; 2 exit points
                                    1- 1248     	.line	804, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1249     	BANKSEL	r0x1045
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1250     	MOVAR	r0x1045
                                    1- 1251     	.line	806, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1252     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1253     	CLRR	_R_AIN4_DATA_LB
                                    1- 1254     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1255     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1256     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1257     	.line	808, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1258     	MOVIA	0x94
     0008 00rr                      1- 1259     	MOVAR	_ADMD
                                    1- 1260     	.line	809, "main.c"; 	delayms(200);	
     0009 21C8                      1- 1261     	MOVIA	0xc8
                                    1- 1262     	MCALL	_delayms
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1263     	.line	810, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1264     	MOVIA	0x01
                                    1- 1265     	BANKSEL	r0x1046
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1266     	MOVAR	r0x1046
     000E                           1- 1267     _00773_DS_:
                                    1- 1268     	BANKSEL	r0x1046
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1269     	MOVR	r0x1046,W
                                    1- 1270     	BANKSEL	r0x1045
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1271     	SUBAR	r0x1045,W
     0012 0803                      1- 1272     	BTRSS	STATUS,0
                                    1- 1273     	MGOTO	_00775_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1274     	.line	812, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1275     	BSR	_ADMDbits,6
                                    1- 1276     	.line	813, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1277     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1278     	.line	814, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1279     	MOVIA	0x0f
     0017 10rr                      1- 1280     	ANDAR	_ADR,W
                                    1- 1281     ;;3	MOVAR	r0x1047
                                    1- 1282     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1283     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1284     	.line	815, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1285     	MOVR	_ADD,W
                                    1- 1286     	BANKSEL	r0x1047
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1287     	MOVAR	r0x1047
                                    1- 1288     ;;1	CLRR	r0x1048
                                    1- 1289     ;;103	MOVR	r0x1047,W
                                    1- 1290     ;;101	MOVAR	r0x1049
     001D 2100                      1- 1291     	MOVIA	0x00
                                    1- 1292     	BANKSEL	r0x104A
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1293     	MOVAR	r0x104A
                                    1- 1294     ;;102	MOVR	r0x1049,W
                                    1- 1295     	BANKSEL	r0x1047
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1296     	MOVR	r0x1047,W
                                    1- 1297     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1298     	ADDAR	_R_AIN4_DATA,F
                                    1- 1299     	BANKSEL	r0x104A
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1300     	MOVR	r0x104A,W
     0026 0C03                      1- 1301     	BTRSC	STATUS,0
     0027 05rr                      1- 1302     	INCR	r0x104A,W
     0028 0D03                      1- 1303     	BTRSC	STATUS,2
                                    1- 1304     	MGOTO	_00002_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1305     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1306     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1307     _00002_DS_:
                                    1- 1308     	.line	810, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1309     	BANKSEL	r0x1046
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1310     	INCR	r0x1046,F
                                    1- 1311     	MGOTO	_00773_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1312     _00775_DS_:
                                    1- 1313     	.line	817, "main.c"; 	}
                                    1- 1314     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1315     ; exit point of _F_AIN4_Convert
                                    1- 1317     ;***
                                    1- 1318     ;  pBlock Stats: dbName = C
                                    1- 1319     ;***
                                    1- 1320     ;has an exit
                                    1- 1321     ;functions called:
                                    1- 1322     ;   _F_AIN4_Convert
                                    1- 1323     ;   __mulchar
                                    1- 1324     ;   _F_AIN4_Convert
                                    1- 1325     ;   __mulchar
                                    1- 1326     ;5 compiler assigned registers:
                                    1- 1327     ;   r0x104B
                                    1- 1328     ;   r0x104C
                                    1- 1329     ;   r0x104D
                                    1- 1330     ;   r0x104E
                                    1- 1331     ;   STK00
                                    1- 1332     ;; Starting pCode block
                                    1- 1333     .segment "code"; module=main, function=_checkOutA
                                    1- 1335     ;local variable name mapping:
     0000                           1- 1337     _checkOutA:
                                    1- 1338     ; 2 exit points
                                    1- 1339     	.line	720, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1340     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1341     	CLRR	_R_AIN4_DATA_LB
                                    1- 1342     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1343     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1344     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1345     	.line	721, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1346     	MOVIA	0x08
                                    1- 1347     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1348     	.line	722, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1349     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1350     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1351     	ANDIA	0xf0
     000A 00rr                      1- 1352     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1353     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1354     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1355     	ANDIA	0x0f
     000E 11rr                      1- 1356     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1357     	XORAR	_R_AIN4_DATA,F
                                    1- 1358     	.line	723, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1359     	MOVIA	0xf0
                                    1- 1360     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1361     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1362     	.line	724, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1363     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1364     	BANKSEL	r0x104D
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1365     	MOVAR	r0x104D
                                    1- 1366     	BANKSEL	r0x104B
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1367     	MOVAR	r0x104B
                                    1- 1368     	BANKSEL	r0x104C
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1369     	CLRR	r0x104C
                                    1- 1370     ;;108	MOVR	r0x104B,W
     001A 2100                      1- 1371     	MOVIA	0x00
                                    1- 1372     	BANKSEL	r0x104E
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1373     	MOVAR	r0x104E
                                    1- 1374     	BANKSEL	r0x104D
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1375     	MOVR	r0x104D,W
                                    1- 1376     	BANKSEL	_R_AIN4_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1377     	ADDAR	_R_AIN4_DATA,F
                                    1- 1378     	BANKSEL	r0x104E
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1379     	MOVR	r0x104E,W
     0023 0C03                      1- 1380     	BTRSC	STATUS,0
     0024 05rr                      1- 1381     	INCR	r0x104E,W
     0025 0D03                      1- 1382     	BTRSC	STATUS,2
                                    1- 1383     	MGOTO	_00003_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1384     	BANKSEL	_R_AIN4_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1385     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1386     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1387     _00003_DS_:
                                    1- 1388     	.line	725, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0029 1C03                      1- 1389     	BCR	STATUS,0
                                    1- 1390     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1391     	RRR	(_R_AIN4_DATA + 1),F
     002C 13rr                      1- 1392     	RRR	_R_AIN4_DATA,F
                                    1- 1393     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1394     	BCR	STATUS,0
     002E 13rr                      1- 1395     	RRR	(_R_AIN4_DATA + 1),F
     002F 13rr                      1- 1396     	RRR	_R_AIN4_DATA,F
                                    1- 1397     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1398     	BCR	STATUS,0
     0031 13rr                      1- 1399     	RRR	(_R_AIN4_DATA + 1),F
     0032 13rr                      1- 1400     	RRR	_R_AIN4_DATA,F
                                    1- 1401     ;;unsigned compare: left < lit (0x6=6), size=1
                                    1- 1402     	.line	726, "main.c"; 	if(workStep < 6 && R_AIN4_DATA > 200)
     0033 2106                      1- 1403     	MOVIA	0x06
                                    1- 1404     	BANKSEL	_workStep
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 04rr                      1- 1405     	SUBAR	_workStep,W
     0036 0C03                      1- 1406     	BTRSC	STATUS,0
                                    1- 1407     	MGOTO	_00705_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1408     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1409     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0038 2100                      1- 1410     	MOVIA	0x00
                                    1- 1411     	BANKSEL	_R_AIN4_DATA
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1412     	SUBAR	(_R_AIN4_DATA + 1),W
     003B 0903                      1- 1413     	BTRSS	STATUS,2
                                    1- 1414     	MGOTO	_00759_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 21C9                      1- 1415     	MOVIA	0xc9
     003E 04rr                      1- 1416     	SUBAR	_R_AIN4_DATA,W
     003F                           1- 1417     _00759_DS_:
     003F 0803                      1- 1418     	BTRSS	STATUS,0
                                    1- 1419     	MGOTO	_00705_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1420     	.line	728, "main.c"; 	if(++overCount > 5)
                                    1- 1421     	BANKSEL	_overCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 05rr                      1- 1422     	INCR	_overCount,F
                                    1- 1423     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1424     ;;unsigned compare: left >= lit (0x6=6), size=1
     0043 2106                      1- 1425     	MOVIA	0x06
     0044 04rr                      1- 1426     	SUBAR	_overCount,W
     0045 0803                      1- 1427     	BTRSS	STATUS,0
                                    1- 1428     	MGOTO	_00708_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1429     	.line	730, "main.c"; 	overCount = 5;
     0047 2105                      1- 1430     	MOVIA	0x05
     0048 00rr                      1- 1431     	MOVAR	_overCount
                                    1- 1432     	MGOTO	_00708_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1433     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1434     ;;unsigned compare: left >= lit (0x191=401), size=2
     004A                           1- 1435     _00705_DS_:
                                    1- 1436     	.line	733, "main.c"; 	else if(R_AIN4_DATA > 400)
     004A 2101                      1- 1437     	MOVIA	0x01
                                    1- 1438     	BANKSEL	_R_AIN4_DATA
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 04rr                      1- 1439     	SUBAR	(_R_AIN4_DATA + 1),W
     004D 0903                      1- 1440     	BTRSS	STATUS,2
                                    1- 1441     	MGOTO	_00761_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
     004F 2191                      1- 1442     	MOVIA	0x91
     0050 04rr                      1- 1443     	SUBAR	_R_AIN4_DATA,W
     0051                           1- 1444     _00761_DS_:
     0051 0803                      1- 1445     	BTRSS	STATUS,0
                                    1- 1446     	MGOTO	_00702_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1447     	.line	735, "main.c"; 	if(++overCount > 5)
                                    1- 1448     	BANKSEL	_overCount
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 05rr                      1- 1449     	INCR	_overCount,F
                                    1- 1450     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1451     ;;unsigned compare: left >= lit (0x6=6), size=1
     0055 2106                      1- 1452     	MOVIA	0x06
     0056 04rr                      1- 1453     	SUBAR	_overCount,W
     0057 0803                      1- 1454     	BTRSS	STATUS,0
                                    1- 1455     	MGOTO	_00708_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1456     	.line	737, "main.c"; 	overCount = 5;
     0059 2105                      1- 1457     	MOVIA	0x05
     005A 00rr                      1- 1458     	MOVAR	_overCount
                                    1- 1459     	MGOTO	_00708_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
     005C                           1- 1460     _00702_DS_:
                                    1- 1461     	.line	747, "main.c"; 	u8t maxAout = 45;
     005C 212D                      1- 1462     	MOVIA	0x2d
                                    1- 1463     	BANKSEL	r0x104B
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 00rr                      1- 1464     	MOVAR	r0x104B
                                    1- 1465     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1466     ;;unsigned compare: left >= lit (0x1F=31), size=1
                                    1- 1467     	.line	748, "main.c"; 	if(batValue > 30)
     005F 211F                      1- 1468     	MOVIA	0x1f
                                    1- 1469     	BANKSEL	_batValue
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 04rr                      1- 1470     	SUBAR	_batValue,W
     0062 0803                      1- 1471     	BTRSS	STATUS,0
                                    1- 1472     	MGOTO	_00673_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1473     	.line	749, "main.c"; 	maxAout = 52;
     0064 2134                      1- 1474     	MOVIA	0x34
                                    1- 1475     	BANKSEL	r0x104B
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 00rr                      1- 1476     	MOVAR	r0x104B
     0067                           1- 1477     _00673_DS_:
                                    1- 1478     	.line	750, "main.c"; 	if(workStep == 1)
                                    1- 1479     	BANKSEL	_workStep
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 01rr                      1- 1480     	MOVR	_workStep,W
     0069 2401                      1- 1481     	XORIA	0x01
     006A 0903                      1- 1482     	BTRSS	STATUS,2
                                    1- 1483     	MGOTO	_00692_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1484     	.line	752, "main.c"; 	maxAout = maxAout - 10;
     006C 21F6                      1- 1485     	MOVIA	0xf6
                                    1- 1486     	BANKSEL	r0x104B
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 03rr                      1- 1487     	ADDAR	r0x104B,F
                                    1- 1488     	MGOTO	_00693_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
     0070                           1- 1489     _00692_DS_:
                                    1- 1490     	.line	754, "main.c"; 	else if(workStep == 2)
                                    1- 1491     	BANKSEL	_workStep
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 01rr                      1- 1492     	MOVR	_workStep,W
     0072 2402                      1- 1493     	XORIA	0x02
     0073 0903                      1- 1494     	BTRSS	STATUS,2
                                    1- 1495     	MGOTO	_00689_DS_
     0074 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1496     	.line	756, "main.c"; 	maxAout = maxAout - 8;
     0075 21F8                      1- 1497     	MOVIA	0xf8
                                    1- 1498     	BANKSEL	r0x104B
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 03rr                      1- 1499     	ADDAR	r0x104B,F
                                    1- 1500     	MGOTO	_00693_DS_
     0078 3rrr                      3-   63 m1      LGOTO rom_address
     0079                           1- 1501     _00689_DS_:
                                    1- 1502     	.line	758, "main.c"; 	else if(workStep == 3)
                                    1- 1503     	BANKSEL	_workStep
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 01rr                      1- 1504     	MOVR	_workStep,W
     007B 2403                      1- 1505     	XORIA	0x03
     007C 0903                      1- 1506     	BTRSS	STATUS,2
                                    1- 1507     	MGOTO	_00686_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1508     	.line	760, "main.c"; 	maxAout = maxAout - 3;
     007E 21FD                      1- 1509     	MOVIA	0xfd
                                    1- 1510     	BANKSEL	r0x104B
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 03rr                      1- 1511     	ADDAR	r0x104B,F
                                    1- 1512     	MGOTO	_00693_DS_
     0081 3rrr                      3-   63 m1      LGOTO rom_address
     0082                           1- 1513     _00686_DS_:
                                    1- 1514     	.line	762, "main.c"; 	else if(workStep == 4)
                                    1- 1515     	BANKSEL	_workStep
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 01rr                      1- 1516     	MOVR	_workStep,W
     0084 2404                      1- 1517     	XORIA	0x04
     0085 0903                      1- 1518     	BTRSS	STATUS,2
                                    1- 1519     	MGOTO	_00683_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1520     	.line	764, "main.c"; 	maxAout = maxAout + 2;
                                    1- 1521     	BANKSEL	r0x104B
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 05rr                      1- 1522     	INCR	r0x104B,F
     0089 05rr                      1- 1523     	INCR	r0x104B,F
                                    1- 1524     	MGOTO	_00693_DS_
     008A 3rrr                      3-   63 m1      LGOTO rom_address
     008B                           1- 1525     _00683_DS_:
                                    1- 1526     	.line	766, "main.c"; 	else if(workStep == 5)
                                    1- 1527     	BANKSEL	_workStep
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 01rr                      1- 1528     	MOVR	_workStep,W
     008D 2405                      1- 1529     	XORIA	0x05
     008E 0903                      1- 1530     	BTRSS	STATUS,2
                                    1- 1531     	MGOTO	_00680_DS_
     008F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1532     	.line	768, "main.c"; 	maxAout = maxAout + 7;
     0090 2107                      1- 1533     	MOVIA	0x07
                                    1- 1534     	BANKSEL	r0x104B
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 03rr                      1- 1535     	ADDAR	r0x104B,F
                                    1- 1536     	MGOTO	_00693_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
     0094                           1- 1537     _00680_DS_:
                                    1- 1538     	.line	770, "main.c"; 	else if(workStep == 6)
                                    1- 1539     	BANKSEL	_workStep
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 01rr                      1- 1540     	MOVR	_workStep,W
     0096 2406                      1- 1541     	XORIA	0x06
     0097 0903                      1- 1542     	BTRSS	STATUS,2
                                    1- 1543     	MGOTO	_00677_DS_
     0098 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1544     	.line	772, "main.c"; 	maxAout = maxAout + 15;
     0099 210F                      1- 1545     	MOVIA	0x0f
                                    1- 1546     	BANKSEL	r0x104B
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 03rr                      1- 1547     	ADDAR	r0x104B,F
                                    1- 1548     	MGOTO	_00693_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1549     ;;unsigned compare: left < lit (0x7=7), size=1
     009D                           1- 1550     _00677_DS_:
                                    1- 1551     	.line	774, "main.c"; 	else if(workStep >= 7)
     009D 2107                      1- 1552     	MOVIA	0x07
                                    1- 1553     	BANKSEL	_workStep
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 04rr                      1- 1554     	SUBAR	_workStep,W
     00A0 0803                      1- 1555     	BTRSS	STATUS,0
                                    1- 1556     	MGOTO	_00693_DS_
     00A1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1557     	.line	776, "main.c"; 	maxAout = maxAout + 18;
     00A2 2112                      1- 1558     	MOVIA	0x12
                                    1- 1559     	BANKSEL	r0x104B
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 03rr                      1- 1560     	ADDAR	r0x104B,F
     00A5                           1- 1561     _00693_DS_:
                                    1- 1562     	.line	778, "main.c"; 	if(overCount > 0)
                                    1- 1563     	BANKSEL	_overCount
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 01rr                      1- 1564     	MOVR	_overCount,W
     00A7 0903                      1- 1565     	BTRSS	STATUS,2
                                    1- 1566     	.line	780, "main.c"; 	overCount--;
     00A8 06rr                      1- 1567     	DECR	_overCount,F
                                    1- 1568     	.line	782, "main.c"; 	if(R_AIN4_DATA > maxAout)
                                    1- 1569     	BANKSEL	r0x104B
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 01rr                      1- 1570     	MOVR	r0x104B,W
                                    1- 1571     	BANKSEL	r0x104C
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 00rr                      1- 1572     	MOVAR	r0x104C
                                    1- 1573     	BANKSEL	r0x104D
     00AD rrrr                      3-  110 m1      .banksel ram_address
     00AE 02rr                      1- 1574     	CLRR	r0x104D
                                    1- 1575     	BANKSEL	_R_AIN4_DATA
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 01rr                      1- 1576     	MOVR	(_R_AIN4_DATA + 1),W
                                    1- 1577     	BANKSEL	r0x104D
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 04rr                      1- 1578     	SUBAR	r0x104D,W
     00B3 0903                      1- 1579     	BTRSS	STATUS,2
                                    1- 1580     	MGOTO	_00765_DS_
     00B4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1581     	BANKSEL	_R_AIN4_DATA
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 01rr                      1- 1582     	MOVR	_R_AIN4_DATA,W
                                    1- 1583     	BANKSEL	r0x104C
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 04rr                      1- 1584     	SUBAR	r0x104C,W
     00B9                           1- 1585     _00765_DS_:
     00B9 0C03                      1- 1586     	BTRSC	STATUS,0
                                    1- 1587     	MGOTO	_00699_DS_
     00BA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1588     	.line	784, "main.c"; 	tempDuty = 70 + workStep*3;
     00BB 2103                      1- 1589     	MOVIA	0x03
     00BC 00rr                      1- 1590     	MOVAR	STK00
                                    1- 1591     	BANKSEL	_workStep
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 01rr                      1- 1592     	MOVR	_workStep,W
                                    1- 1593     	MCALL	__mulchar
     00BF 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1594     	BANKSEL	r0x104B
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 00rr                      1- 1595     	MOVAR	r0x104B
     00C2 2146                      1- 1596     	MOVIA	0x46
     00C3 03rr                      1- 1597     	ADDAR	r0x104B,W
                                    1- 1598     	BANKSEL	_tempDuty
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 00rr                      1- 1599     	MOVAR	_tempDuty
                                    1- 1600     	MGOTO	_00708_DS_
     00C6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1601     ;;unsigned compare: left < lit (0x4B=75), size=2
     00C7                           1- 1602     _00699_DS_:
                                    1- 1603     	.line	787, "main.c"; 	else if(R_AIN4_DATA < 75)
     00C7 2100                      1- 1604     	MOVIA	0x00
                                    1- 1605     	BANKSEL	_R_AIN4_DATA
     00C8 rrrr                      3-  110 m1      .banksel ram_address
     00C9 04rr                      1- 1606     	SUBAR	(_R_AIN4_DATA + 1),W
     00CA 0903                      1- 1607     	BTRSS	STATUS,2
                                    1- 1608     	MGOTO	_00766_DS_
     00CB 3rrr                      3-   63 m1      LGOTO rom_address
     00CC 214B                      1- 1609     	MOVIA	0x4b
     00CD 04rr                      1- 1610     	SUBAR	_R_AIN4_DATA,W
     00CE                           1- 1611     _00766_DS_:
     00CE 0C03                      1- 1612     	BTRSC	STATUS,0
                                    1- 1613     	MGOTO	_00708_DS_
     00CF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1614     	.line	790, "main.c"; 	tempDuty = maxDuty;
                                    1- 1615     	BANKSEL	_maxDuty
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 01rr                      1- 1616     	MOVR	_maxDuty,W
                                    1- 1617     	BANKSEL	_tempDuty
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 00rr                      1- 1618     	MOVAR	_tempDuty
     00D4                           1- 1619     _00708_DS_:
                                    1- 1620     	.line	798, "main.c"; 	}
                                    1- 1621     	RETURN	
     00D4 0010                      3-   40 m1      ret
                                    1- 1622     ; exit point of _checkOutA
                                    1- 1624     ;***
                                    1- 1625     ;  pBlock Stats: dbName = C
                                    1- 1626     ;***
                                    1- 1627     ;has an exit
                                    1- 1628     ;functions called:
                                    1- 1629     ;   _F_AIN2_Convert
                                    1- 1630     ;   _F_AIN2_Convert
                                    1- 1631     ;5 compiler assigned registers:
                                    1- 1632     ;   r0x104F
                                    1- 1633     ;   r0x1050
                                    1- 1634     ;   r0x1051
                                    1- 1635     ;   r0x1052
                                    1- 1636     ;   r0x1053
                                    1- 1637     ;; Starting pCode block
                                    1- 1638     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1640     _checkBatAD:
                                    1- 1641     ; 2 exit points
                                    1- 1642     	.line	641, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1643     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1644     	CLRR	_R_AIN2_DATA_LB
                                    1- 1645     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1646     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1647     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1648     	.line	642, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1649     	MOVIA	0x08
                                    1- 1650     	MCALL	_F_AIN2_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1651     	.line	643, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1652     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1653     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1654     	ANDIA	0xf0
     000A 00rr                      1- 1655     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1656     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1657     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1658     	ANDIA	0x0f
     000E 11rr                      1- 1659     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1660     	XORAR	_R_AIN2_DATA,F
                                    1- 1661     	.line	644, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1662     	MOVIA	0xf0
                                    1- 1663     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1664     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1665     	.line	645, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1666     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1667     	BANKSEL	r0x1051
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1668     	MOVAR	r0x1051
                                    1- 1669     	BANKSEL	r0x104F
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1670     	MOVAR	r0x104F
                                    1- 1671     	BANKSEL	r0x1050
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1672     	CLRR	r0x1050
                                    1- 1673     ;;107	MOVR	r0x104F,W
     001A 2100                      1- 1674     	MOVIA	0x00
                                    1- 1675     	BANKSEL	r0x1052
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1676     	MOVAR	r0x1052
                                    1- 1677     	BANKSEL	r0x1051
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1678     	MOVR	r0x1051,W
                                    1- 1679     	BANKSEL	_R_AIN2_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1680     	ADDAR	_R_AIN2_DATA,F
                                    1- 1681     	BANKSEL	r0x1052
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1682     	MOVR	r0x1052,W
     0023 0C03                      1- 1683     	BTRSC	STATUS,0
     0024 05rr                      1- 1684     	INCR	r0x1052,W
     0025 0D03                      1- 1685     	BTRSC	STATUS,2
                                    1- 1686     	MGOTO	_00004_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1687     	BANKSEL	_R_AIN2_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1688     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1689     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1690     _00004_DS_:
                                    1- 1691     	.line	646, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0029 1C03                      1- 1692     	BCR	STATUS,0
                                    1- 1693     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1694     	RRR	(_R_AIN2_DATA + 1),F
     002C 13rr                      1- 1695     	RRR	_R_AIN2_DATA,F
                                    1- 1696     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1697     	BCR	STATUS,0
     002E 13rr                      1- 1698     	RRR	(_R_AIN2_DATA + 1),F
     002F 13rr                      1- 1699     	RRR	_R_AIN2_DATA,F
                                    1- 1700     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1701     	BCR	STATUS,0
     0031 13rr                      1- 1702     	RRR	(_R_AIN2_DATA + 1),F
     0032 13rr                      1- 1703     	RRR	_R_AIN2_DATA,F
                                    1- 1704     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1705     ;;unsigned compare: left >= lit (0x623=1571), size=2
                                    1- 1706     	.line	649, "main.c"; 	if(R_AIN2_DATA > 1570)
     0033 2106                      1- 1707     	MOVIA	0x06
     0034 04rr                      1- 1708     	SUBAR	(_R_AIN2_DATA + 1),W
     0035 0903                      1- 1709     	BTRSS	STATUS,2
                                    1- 1710     	MGOTO	_00658_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037 2123                      1- 1711     	MOVIA	0x23
     0038 04rr                      1- 1712     	SUBAR	_R_AIN2_DATA,W
     0039                           1- 1713     _00658_DS_:
     0039 0803                      1- 1714     	BTRSS	STATUS,0
                                    1- 1715     	MGOTO	_00603_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1716     	.line	651, "main.c"; 	if(++fullTime > 200)
                                    1- 1717     	BANKSEL	_fullTime
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 05rr                      1- 1718     	INCR	_fullTime,F
                                    1- 1719     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1720     ;;unsigned compare: left >= lit (0xC9=201), size=1
     003D 21C9                      1- 1721     	MOVIA	0xc9
     003E 04rr                      1- 1722     	SUBAR	_fullTime,W
     003F 0803                      1- 1723     	BTRSS	STATUS,0
                                    1- 1724     	MGOTO	_00605_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1725     	.line	653, "main.c"; 	fullFlag = 1;
     0041 2101                      1- 1726     	MOVIA	0x01
                                    1- 1727     	BANKSEL	_fullFlag
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1- 1728     	MOVAR	_fullFlag
                                    1- 1729     	.line	654, "main.c"; 	batValue = 100;
     0044 2164                      1- 1730     	MOVIA	0x64
                                    1- 1731     	BANKSEL	_batValue
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 00rr                      1- 1732     	MOVAR	_batValue
                                    1- 1733     	MGOTO	_00605_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1734     ;;unsigned compare: left < lit (0x44C=1100), size=2
     0048                           1- 1735     _00603_DS_:
                                    1- 1736     	.line	657, "main.c"; 	else if(R_AIN2_DATA < 1100)
     0048 2104                      1- 1737     	MOVIA	0x04
                                    1- 1738     	BANKSEL	_R_AIN2_DATA
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 04rr                      1- 1739     	SUBAR	(_R_AIN2_DATA + 1),W
     004B 0903                      1- 1740     	BTRSS	STATUS,2
                                    1- 1741     	MGOTO	_00660_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
     004D 214C                      1- 1742     	MOVIA	0x4c
     004E 04rr                      1- 1743     	SUBAR	_R_AIN2_DATA,W
     004F                           1- 1744     _00660_DS_:
     004F 0C03                      1- 1745     	BTRSC	STATUS,0
                                    1- 1746     	MGOTO	_00600_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1747     	.line	659, "main.c"; 	batValue = 0;
                                    1- 1748     	BANKSEL	_batValue
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 02rr                      1- 1749     	CLRR	_batValue
                                    1- 1750     	.line	660, "main.c"; 	fullTime = 0;
                                    1- 1751     	BANKSEL	_fullTime
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 02rr                      1- 1752     	CLRR	_fullTime
                                    1- 1753     	MGOTO	_00605_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
     0056                           1- 1754     _00600_DS_:
                                    1- 1755     	.line	664, "main.c"; 	fullTime = 0;
                                    1- 1756     	BANKSEL	_fullTime
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 02rr                      1- 1757     	CLRR	_fullTime
                                    1- 1758     ;;unsigned compare: left < lit (0x604=1540), size=2
                                    1- 1759     	.line	665, "main.c"; 	if(R_AIN2_DATA >= 1540)
     0058 2106                      1- 1760     	MOVIA	0x06
                                    1- 1761     	BANKSEL	_R_AIN2_DATA
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 04rr                      1- 1762     	SUBAR	(_R_AIN2_DATA + 1),W
     005B 0903                      1- 1763     	BTRSS	STATUS,2
                                    1- 1764     	MGOTO	_00661_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
     005D 2104                      1- 1765     	MOVIA	0x04
     005E 04rr                      1- 1766     	SUBAR	_R_AIN2_DATA,W
     005F                           1- 1767     _00661_DS_:
     005F 0803                      1- 1768     	BTRSS	STATUS,0
                                    1- 1769     	MGOTO	_00570_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1770     	.line	667, "main.c"; 	batValue = (R_AIN2_DATA - 1540) + 100;
                                    1- 1771     	BANKSEL	_R_AIN2_DATA
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1- 1772     	MOVR	_R_AIN2_DATA,W
                                    1- 1773     	BANKSEL	r0x104F
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 00rr                      1- 1774     	MOVAR	r0x104F
                                    1- 1775     	BANKSEL	r0x1050
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 00rr                      1- 1776     	MOVAR	r0x1050
     0067 2160                      1- 1777     	MOVIA	0x60
     0068 03rr                      1- 1778     	ADDAR	r0x1050,W
                                    1- 1779     	BANKSEL	_batValue
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 00rr                      1- 1780     	MOVAR	_batValue
                                    1- 1781     	MGOTO	_00571_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1782     ;;unsigned compare: left < lit (0x55E=1374), size=2
     006C                           1- 1783     _00570_DS_:
                                    1- 1784     	.line	669, "main.c"; 	else if(R_AIN2_DATA >= 1374)
     006C 2105                      1- 1785     	MOVIA	0x05
                                    1- 1786     	BANKSEL	_R_AIN2_DATA
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 04rr                      1- 1787     	SUBAR	(_R_AIN2_DATA + 1),W
     006F 0903                      1- 1788     	BTRSS	STATUS,2
                                    1- 1789     	MGOTO	_00662_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
     0071 215E                      1- 1790     	MOVIA	0x5e
     0072 04rr                      1- 1791     	SUBAR	_R_AIN2_DATA,W
     0073                           1- 1792     _00662_DS_:
     0073 0803                      1- 1793     	BTRSS	STATUS,0
                                    1- 1794     	MGOTO	_00567_DS_
     0074 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1795     	.line	671, "main.c"; 	batValue = ((R_AIN2_DATA - 1374) /2) + 17;
     0075 21A2                      1- 1796     	MOVIA	0xa2
                                    1- 1797     	BANKSEL	_R_AIN2_DATA
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 03rr                      1- 1798     	ADDAR	_R_AIN2_DATA,W
                                    1- 1799     	BANKSEL	r0x104F
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 00rr                      1- 1800     	MOVAR	r0x104F
     007A 21FA                      1- 1801     	MOVIA	0xfa
                                    1- 1802     	BANKSEL	r0x1050
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 00rr                      1- 1803     	MOVAR	r0x1050
                                    1- 1804     	BANKSEL	_R_AIN2_DATA
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 01rr                      1- 1805     	MOVR	(_R_AIN2_DATA + 1),W
     007F 0C03                      1- 1806     	BTRSC	STATUS,0
     0080 05rr                      1- 1807     	INCR	(_R_AIN2_DATA + 1),W
     0081 0D03                      1- 1808     	BTRSC	STATUS,2
                                    1- 1809     	MGOTO	_00005_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1810     	BANKSEL	r0x1050
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 03rr                      1- 1811     	ADDAR	r0x1050,F
                                    1- 1812     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=0, offr=0
     0085                           1- 1813     _00005_DS_:
     0085 1C03                      1- 1814     	BCR	STATUS,0
                                    1- 1815     	BANKSEL	r0x1050
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 13rr                      1- 1816     	RRR	r0x1050,W
                                    1- 1817     	BANKSEL	r0x1052
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 00rr                      1- 1818     	MOVAR	r0x1052
                                    1- 1819     	BANKSEL	r0x104F
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 13rr                      1- 1820     	RRR	r0x104F,W
                                    1- 1821     	BANKSEL	r0x1051
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 00rr                      1- 1822     	MOVAR	r0x1051
                                    1- 1823     	BANKSEL	r0x104F
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 00rr                      1- 1824     	MOVAR	r0x104F
     0090 2111                      1- 1825     	MOVIA	0x11
     0091 03rr                      1- 1826     	ADDAR	r0x104F,W
                                    1- 1827     	BANKSEL	_batValue
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 00rr                      1- 1828     	MOVAR	_batValue
                                    1- 1829     	MGOTO	_00571_DS_
     0094 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1830     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1831     ;;unsigned compare: left >= lit (0x44D=1101), size=2
     0095                           1- 1832     _00567_DS_:
                                    1- 1833     	.line	673, "main.c"; 	else if(R_AIN2_DATA > 1100)
     0095 2104                      1- 1834     	MOVIA	0x04
                                    1- 1835     	BANKSEL	_R_AIN2_DATA
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 04rr                      1- 1836     	SUBAR	(_R_AIN2_DATA + 1),W
     0098 0903                      1- 1837     	BTRSS	STATUS,2
                                    1- 1838     	MGOTO	_00663_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
     009A 214D                      1- 1839     	MOVIA	0x4d
     009B 04rr                      1- 1840     	SUBAR	_R_AIN2_DATA,W
     009C                           1- 1841     _00663_DS_:
     009C 0803                      1- 1842     	BTRSS	STATUS,0
                                    1- 1843     	MGOTO	_00564_DS_
     009D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1844     	.line	675, "main.c"; 	batValue = (R_AIN2_DATA - 1100) / 16;
     009E 21B4                      1- 1845     	MOVIA	0xb4
                                    1- 1846     	BANKSEL	_R_AIN2_DATA
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 03rr                      1- 1847     	ADDAR	_R_AIN2_DATA,W
                                    1- 1848     	BANKSEL	r0x104F
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 00rr                      1- 1849     	MOVAR	r0x104F
     00A3 21FB                      1- 1850     	MOVIA	0xfb
                                    1- 1851     	BANKSEL	r0x1051
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 00rr                      1- 1852     	MOVAR	r0x1051
                                    1- 1853     	BANKSEL	_R_AIN2_DATA
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 01rr                      1- 1854     	MOVR	(_R_AIN2_DATA + 1),W
     00A8 0C03                      1- 1855     	BTRSC	STATUS,0
     00A9 05rr                      1- 1856     	INCR	(_R_AIN2_DATA + 1),W
     00AA 0D03                      1- 1857     	BTRSC	STATUS,2
                                    1- 1858     	MGOTO	_00006_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1859     	BANKSEL	r0x1051
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 03rr                      1- 1860     	ADDAR	r0x1051,F
     00AE                           1- 1861     _00006_DS_:
                                    1- 1862     	BANKSEL	r0x104F
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 15rr                      1- 1863     	SWAPR	r0x104F,W
     00B0 220F                      1- 1864     	ANDIA	0x0f
                                    1- 1865     	BANKSEL	r0x1052
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 00rr                      1- 1866     	MOVAR	r0x1052
                                    1- 1867     	BANKSEL	r0x1051
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 15rr                      1- 1868     	SWAPR	r0x1051,W
                                    1- 1869     	BANKSEL	r0x1053
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 00rr                      1- 1870     	MOVAR	r0x1053
     00B7 22F0                      1- 1871     	ANDIA	0xf0
                                    1- 1872     	BANKSEL	r0x1052
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 11rr                      1- 1873     	IORAR	r0x1052,F
                                    1- 1874     	BANKSEL	r0x1053
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 12rr                      1- 1875     	XORAR	r0x1053,F
                                    1- 1876     	BANKSEL	r0x1052
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 01rr                      1- 1877     	MOVR	r0x1052,W
                                    1- 1878     	BANKSEL	_batValue
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 00rr                      1- 1879     	MOVAR	_batValue
                                    1- 1880     	MGOTO	_00571_DS_
     00C0 3rrr                      3-   63 m1      LGOTO rom_address
     00C1                           1- 1881     _00564_DS_:
                                    1- 1882     	.line	679, "main.c"; 	batValue = 0;
                                    1- 1883     	BANKSEL	_batValue
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 02rr                      1- 1884     	CLRR	_batValue
     00C3                           1- 1885     _00571_DS_:
                                    1- 1886     	.line	681, "main.c"; 	if(firstShowCount > 0 && firstShowCount < 50)
                                    1- 1887     	BANKSEL	_firstShowCount
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 01rr                      1- 1888     	MOVR	_firstShowCount,W
     00C5 0D03                      1- 1889     	BTRSC	STATUS,2
                                    1- 1890     	MGOTO	_00582_DS_
     00C6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1891     ;;unsigned compare: left < lit (0x32=50), size=1
     00C7 2132                      1- 1892     	MOVIA	0x32
     00C8 04rr                      1- 1893     	SUBAR	_firstShowCount,W
     00C9 0C03                      1- 1894     	BTRSC	STATUS,0
                                    1- 1895     	MGOTO	_00582_DS_
     00CA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1896     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1897     ;;unsigned compare: left >= lit (0x3D=61), size=1
                                    1- 1898     	.line	683, "main.c"; 	if(batValue > 60)
     00CB 213D                      1- 1899     	MOVIA	0x3d
                                    1- 1900     	BANKSEL	_batValue
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 04rr                      1- 1901     	SUBAR	_batValue,W
     00CE 0803                      1- 1902     	BTRSS	STATUS,0
                                    1- 1903     	MGOTO	_00579_DS_
     00CF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1904     ;;unsigned compare: left < lit (0x5A=90), size=1
                                    1- 1905     	.line	685, "main.c"; 	if(batValue < 90)
     00D0 215A                      1- 1906     	MOVIA	0x5a
     00D1 04rr                      1- 1907     	SUBAR	_batValue,W
     00D2 0C03                      1- 1908     	BTRSC	STATUS,0
                                    1- 1909     	MGOTO	_00573_DS_
     00D3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1910     	.line	686, "main.c"; 	preBatValue = batValue - 12;
     00D4 21F4                      1- 1911     	MOVIA	0xf4
     00D5 03rr                      1- 1912     	ADDAR	_batValue,W
                                    1- 1913     	BANKSEL	_preBatValue
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 00rr                      1- 1914     	MOVAR	_preBatValue
                                    1- 1915     	MGOTO	_00582_DS_
     00D8 3rrr                      3-   63 m1      LGOTO rom_address
     00D9                           1- 1916     _00573_DS_:
                                    1- 1917     	.line	688, "main.c"; 	preBatValue = batValue;
                                    1- 1918     	BANKSEL	_batValue
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 01rr                      1- 1919     	MOVR	_batValue,W
                                    1- 1920     	BANKSEL	_preBatValue
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 00rr                      1- 1921     	MOVAR	_preBatValue
                                    1- 1922     	MGOTO	_00582_DS_
     00DD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1923     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1924     ;;unsigned compare: left >= lit (0x1F=31), size=1
     00DE                           1- 1925     _00579_DS_:
                                    1- 1926     	.line	690, "main.c"; 	else if(preBatValue > 30)
     00DE 211F                      1- 1927     	MOVIA	0x1f
                                    1- 1928     	BANKSEL	_preBatValue
     00DF rrrr                      3-  110 m1      .banksel ram_address
     00E0 04rr                      1- 1929     	SUBAR	_preBatValue,W
     00E1 0803                      1- 1930     	BTRSS	STATUS,0
                                    1- 1931     	MGOTO	_00576_DS_
     00E2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1932     	.line	691, "main.c"; 	preBatValue = batValue - 10;
     00E3 21F6                      1- 1933     	MOVIA	0xf6
                                    1- 1934     	BANKSEL	_batValue
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 03rr                      1- 1935     	ADDAR	_batValue,W
                                    1- 1936     	BANKSEL	_preBatValue
     00E6 rrrr                      3-  110 m1      .banksel ram_address
     00E7 00rr                      1- 1937     	MOVAR	_preBatValue
                                    1- 1938     	MGOTO	_00582_DS_
     00E8 3rrr                      3-   63 m1      LGOTO rom_address
     00E9                           1- 1939     _00576_DS_:
                                    1- 1940     	.line	693, "main.c"; 	preBatValue = batValue;
                                    1- 1941     	BANKSEL	_batValue
     00E9 rrrr                      3-  110 m1      .banksel ram_address
     00EA 01rr                      1- 1942     	MOVR	_batValue,W
                                    1- 1943     	BANKSEL	_preBatValue
     00EB rrrr                      3-  110 m1      .banksel ram_address
     00EC 00rr                      1- 1944     	MOVAR	_preBatValue
     00ED                           1- 1945     _00582_DS_:
                                    1- 1946     	.line	695, "main.c"; 	if(0x08 & PORTA)
                                    1- 1947     	BANKSEL	_PORTA
     00ED rrrr                      3-  110 m1      .banksel ram_address
     00EE 09rr                      1- 1948     	BTRSS	_PORTA,3
                                    1- 1949     	MGOTO	_00596_DS_
     00EF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1950     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1951     ;;unsigned compare: left >= lit (0x51=81), size=1
                                    1- 1952     	.line	697, "main.c"; 	if(batValue > 80)
     00F0 2151                      1- 1953     	MOVIA	0x51
                                    1- 1954     	BANKSEL	_batValue
     00F1 rrrr                      3-  110 m1      .banksel ram_address
     00F2 04rr                      1- 1955     	SUBAR	_batValue,W
     00F3 0803                      1- 1956     	BTRSS	STATUS,0
                                    1- 1957     	MGOTO	_00591_DS_
     00F4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1958     	.line	698, "main.c"; 	batValue = batValue - 30;
     00F5 21E2                      1- 1959     	MOVIA	0xe2
     00F6 03rr                      1- 1960     	ADDAR	_batValue,F
                                    1- 1961     	MGOTO	_00592_DS_
     00F7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1962     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1963     ;;unsigned compare: left >= lit (0x33=51), size=1
     00F8                           1- 1964     _00591_DS_:
                                    1- 1965     	.line	699, "main.c"; 	else if(batValue > 50)
     00F8 2133                      1- 1966     	MOVIA	0x33
                                    1- 1967     	BANKSEL	_batValue
     00F9 rrrr                      3-  110 m1      .banksel ram_address
     00FA 04rr                      1- 1968     	SUBAR	_batValue,W
     00FB 0803                      1- 1969     	BTRSS	STATUS,0
                                    1- 1970     	MGOTO	_00588_DS_
     00FC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1971     	.line	700, "main.c"; 	batValue = batValue - 25;
     00FD 21E7                      1- 1972     	MOVIA	0xe7
     00FE 03rr                      1- 1973     	ADDAR	_batValue,F
                                    1- 1974     	MGOTO	_00592_DS_
     00FF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1975     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1976     ;;unsigned compare: left >= lit (0x10=16), size=1
     0100                           1- 1977     _00588_DS_:
                                    1- 1978     	.line	701, "main.c"; 	else if(batValue > 15)
     0100 2110                      1- 1979     	MOVIA	0x10
                                    1- 1980     	BANKSEL	_batValue
     0101 rrrr                      3-  110 m1      .banksel ram_address
     0102 04rr                      1- 1981     	SUBAR	_batValue,W
     0103 0803                      1- 1982     	BTRSS	STATUS,0
                                    1- 1983     	MGOTO	_00585_DS_
     0104 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1984     	.line	702, "main.c"; 	batValue = batValue - 15;
     0105 21F1                      1- 1985     	MOVIA	0xf1
     0106 03rr                      1- 1986     	ADDAR	_batValue,F
                                    1- 1987     	MGOTO	_00592_DS_
     0107 3rrr                      3-   63 m1      LGOTO rom_address
     0108                           1- 1988     _00585_DS_:
                                    1- 1989     	.line	704, "main.c"; 	batValue = 1;
     0108 2101                      1- 1990     	MOVIA	0x01
                                    1- 1991     	BANKSEL	_batValue
     0109 rrrr                      3-  110 m1      .banksel ram_address
     010A 00rr                      1- 1992     	MOVAR	_batValue
                                    1- 1993     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1994     ;;unsigned compare: left >= lit (0x64=100), size=1
     010B                           1- 1995     _00592_DS_:
                                    1- 1996     	.line	705, "main.c"; 	if(batValue > 99)
     010B 2164                      1- 1997     	MOVIA	0x64
                                    1- 1998     	BANKSEL	_batValue
     010C rrrr                      3-  110 m1      .banksel ram_address
     010D 04rr                      1- 1999     	SUBAR	_batValue,W
     010E 0803                      1- 2000     	BTRSS	STATUS,0
                                    1- 2001     	MGOTO	_00596_DS_
     010F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2002     	.line	706, "main.c"; 	batValue = 99;
     0110 2163                      1- 2003     	MOVIA	0x63
     0111 00rr                      1- 2004     	MOVAR	_batValue
                                    1- 2005     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2006     ;;unsigned compare: left >= lit (0x65=101), size=1
     0112                           1- 2007     _00596_DS_:
                                    1- 2008     	.line	708, "main.c"; 	if(batValue > 100)
     0112 2165                      1- 2009     	MOVIA	0x65
                                    1- 2010     	BANKSEL	_batValue
     0113 rrrr                      3-  110 m1      .banksel ram_address
     0114 04rr                      1- 2011     	SUBAR	_batValue,W
     0115 0803                      1- 2012     	BTRSS	STATUS,0
                                    1- 2013     	MGOTO	_00605_DS_
     0116 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2014     	.line	709, "main.c"; 	batValue = 100;
     0117 2164                      1- 2015     	MOVIA	0x64
     0118 00rr                      1- 2016     	MOVAR	_batValue
     0119                           1- 2017     _00605_DS_:
                                    1- 2018     	.line	714, "main.c"; 	}
                                    1- 2019     	RETURN	
     0119 0010                      3-   40 m1      ret
                                    1- 2020     ; exit point of _checkBatAD
                                    1- 2022     ;***
                                    1- 2023     ;  pBlock Stats: dbName = C
                                    1- 2024     ;***
                                    1- 2025     ;has an exit
                                    1- 2026     ;functions called:
                                    1- 2027     ;   _delayms
                                    1- 2028     ;   _delayms
                                    1- 2029     ;; Starting pCode block
                                    1- 2030     .segment "code"; module=main, function=_initAD
     0000                           1- 2032     _initAD:
                                    1- 2033     ; 2 exit points
                                    1- 2034     	.line	617, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 2035     	MOVIA	0x84
     0001 00rr                      1- 2036     	MOVAR	_ADMD
                                    1- 2037     	.line	622, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 2038     	CLRR	_ADVREFH
                                    1- 2039     	.line	627, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 2040     	MOVIA	0x10
     0004 00rr                      1- 2041     	MOVAR	_ADR
                                    1- 2042     	.line	629, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 2043     	MOVIA	0x03
     0006 00rr                      1- 2044     	MOVAR	_ADCR
                                    1- 2045     	.line	631, "main.c"; 	PACON = C_PA2_AIN2 | C_PA1_AIN1 | C_PA4_AIN4;						// Set AIN0(PA0) as pure ADC input for reduce power consumption (SFR "PACON")
     0007 2116                      1- 2046     	MOVIA	0x16
     0008 00rr                      1- 2047     	MOVAR	_PACON
                                    1- 2048     	.line	632, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0009 1Arr                      1- 2049     	BSR	_ADMDbits,4
                                    1- 2050     	.line	633, "main.c"; 	delayms(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     000A 2164                      1- 2051     	MOVIA	0x64
                                    1- 2052     	MCALL	_delayms
     000B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2053     	.line	636, "main.c"; 	}
                                    1- 2054     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2055     ; exit point of _initAD
                                    1- 2057     ;***
                                    1- 2058     ;  pBlock Stats: dbName = C
                                    1- 2059     ;***
                                    1- 2060     ;has an exit
                                    1- 2061     ;1 compiler assigned register :
                                    1- 2062     ;   r0x1054
                                    1- 2063     ;; Starting pCode block
                                    1- 2064     .segment "code"; module=main, function=_keyRead
                                    1- 2066     ;local variable name mapping:
     0000                           1- 2068     _keyRead:
                                    1- 2069     ; 2 exit points
                                    1- 2070     	.line	579, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2071     	BANKSEL	r0x1054
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2072     	MOVAR	r0x1054
                                    1- 2073     	.line	581, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2074     	MOVR	r0x1054,W
     0003 0D03                      1- 2075     	BTRSC	STATUS,2
                                    1- 2076     	MGOTO	_00550_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2077     	.line	583, "main.c"; 	keyCount++;
                                    1- 2078     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2079     	INCR	_keyCount,F
                                    1- 2080     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 2081     	.line	585, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 2082     	MOVIA	0xc8
     0008 04rr                      1- 2083     	SUBAR	_keyCount,W
     0009 0803                      1- 2084     	BTRSS	STATUS,0
                                    1- 2085     	MGOTO	_00551_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2086     	.line	587, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 2087     	MOVIA	0xc8
     000C 00rr                      1- 2088     	MOVAR	_keyCount
                                    1- 2089     	.line	588, "main.c"; 	if(!longPressFlag)
                                    1- 2090     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Crr                      1- 2091     	BTRSC	_Status,1
                                    1- 2092     	MGOTO	_00551_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2093     	.line	590, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 2094     	BSR	_Status,1
                                    1- 2095     	.line	591, "main.c"; 	return 2;
     0011 2102                      1- 2096     	MOVIA	0x02
                                    1- 2097     	MGOTO	_00552_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2098     ;;unsigned compare: left < lit (0xC8=200), size=1
     0013                           1- 2099     _00550_DS_:
                                    1- 2100     	.line	597, "main.c"; 	if(keyCount >= 200)
     0013 21C8                      1- 2101     	MOVIA	0xc8
                                    1- 2102     	BANKSEL	_keyCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 2103     	SUBAR	_keyCount,W
     0016 0803                      1- 2104     	BTRSS	STATUS,0
                                    1- 2105     	MGOTO	_00547_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2106     	.line	599, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 2107     	CLRR	_keyCount
                                    1- 2108     	.line	600, "main.c"; 	longPressFlag = 0;
                                    1- 2109     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Crr                      1- 2110     	BCR	_Status,1
                                    1- 2111     	.line	601, "main.c"; 	return	0;
     001B 2100                      1- 2112     	MOVIA	0x00
                                    1- 2113     	MGOTO	_00552_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2114     ;;unsigned compare: left < lit (0x4=4), size=1
     001D                           1- 2115     _00547_DS_:
                                    1- 2116     	.line	603, "main.c"; 	else if(keyCount >= 4)
     001D 2104                      1- 2117     	MOVIA	0x04
                                    1- 2118     	BANKSEL	_keyCount
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 2119     	SUBAR	_keyCount,W
     0020 0803                      1- 2120     	BTRSS	STATUS,0
                                    1- 2121     	MGOTO	_00548_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2122     	.line	605, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 2123     	CLRR	_keyCount
                                    1- 2124     	.line	606, "main.c"; 	return	1;
     0023 2101                      1- 2125     	MOVIA	0x01
                                    1- 2126     	MGOTO	_00552_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 2127     _00548_DS_:
                                    1- 2128     	.line	608, "main.c"; 	keyCount = 0;
                                    1- 2129     	BANKSEL	_keyCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 2130     	CLRR	_keyCount
     0027                           1- 2131     _00551_DS_:
                                    1- 2132     	.line	610, "main.c"; 	return 0;
     0027 2100                      1- 2133     	MOVIA	0x00
     0028                           1- 2134     _00552_DS_:
                                    1- 2135     	.line	611, "main.c"; 	}
                                    1- 2136     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 2137     ; exit point of _keyRead
                                    1- 2139     ;***
                                    1- 2140     ;  pBlock Stats: dbName = C
                                    1- 2141     ;***
                                    1- 2142     ;has an exit
                                    1- 2143     ;functions called:
                                    1- 2144     ;   _checkBatAD
                                    1- 2145     ;   _setInput
                                    1- 2146     ;   _pwmStop
                                    1- 2147     ;   _pwm1Stop
                                    1- 2148     ;   _checkBatAD
                                    1- 2149     ;   _setInput
                                    1- 2150     ;   _pwmStop
                                    1- 2151     ;   _pwm1Stop
                                    1- 2152     ;; Starting pCode block
                                    1- 2153     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2155     _gotoSleep:
                                    1- 2156     ; 2 exit points
                                    1- 2157     	.line	546, "main.c"; 	count900s = 0;
                                    1- 2158     	BANKSEL	_count900s
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2159     	CLRR	_count900s
     0002 02rr                      1- 2160     	CLRR	(_count900s + 1)
                                    1- 2161     	.line	547, "main.c"; 	checkBatAD();
                                    1- 2162     	MCALL	_checkBatAD
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2163     	.line	548, "main.c"; 	setInput();
                                    1- 2164     	MCALL	_setInput
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2165     	.line	549, "main.c"; 	count5s = 0;
                                    1- 2166     	BANKSEL	_count5s
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1- 2167     	CLRR	_count5s
     0007 02rr                      1- 2168     	CLRR	(_count5s + 1)
                                    1- 2169     	.line	550, "main.c"; 	showFlag = 0;
                                    1- 2170     	BANKSEL	_Status
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 1Err                      1- 2171     	BCR	_Status,4
                                    1- 2172     	.line	551, "main.c"; 	IOSTA = C_PA5_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     000A 212E                      1- 2173     	MOVIA	0x2e
     000B 000r                      1- 2174     	IOST	_IOSTA
                                    1- 2175     	.line	553, "main.c"; 	IOSTB = 0x00;
     000C 0200                      1- 2176     	CLRA	
     000D 000r                      1- 2177     	IOST	_IOSTB
                                    1- 2178     	.line	554, "main.c"; 	PORTB = 0x00;
     000E 02rr                      1- 2179     	CLRR	_PORTB
                                    1- 2180     	.line	555, "main.c"; 	PORTA = 0x00;
                                    1- 2181     	BANKSEL	_PORTA
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2182     	CLRR	_PORTA
                                    1- 2183     	.line	556, "main.c"; 	sleepTime = 0;
                                    1- 2184     	BANKSEL	_sleepTime
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 02rr                      1- 2185     	CLRR	_sleepTime
     0013 02rr                      1- 2186     	CLRR	(_sleepTime + 1)
                                    1- 2187     	.line	558, "main.c"; 	pwmStop();
                                    1- 2188     	MCALL	_pwmStop
     0014 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2189     	.line	559, "main.c"; 	pwm1Stop();
                                    1- 2190     	MCALL	_pwm1Stop
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2191     	.line	560, "main.c"; 	workStep = 0;
                                    1- 2192     	BANKSEL	_workStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 02rr                      1- 2193     	CLRR	_workStep
                                    1- 2194     	.line	561, "main.c"; 	AWUCON = 0x28;
     0018 2128                      1- 2195     	MOVIA	0x28
     0019 00rr                      1- 2196     	MOVAR	_AWUCON
                                    1- 2197     	.line	562, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     001A 210B                      1- 2198     	MOVIA	0x0b
     001B 00rr                      1- 2199     	MOVAR	_INTE
                                    1- 2200     	.line	563, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     001C 2118                      1- 2201     	MOVIA	0x18
     001D 00rr                      1- 2202     	MOVAR	_PCON
                                    1- 2203     	.line	564, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     001E 02rr                      1- 2204     	CLRR	_INTF
                                    1- 2205     	.line	565, "main.c"; 	CLRWDT();
     001F 0002                      1- 2206     	clrwdt
                                    1- 2207     	.line	566, "main.c"; 	ENI();
     0020 0004                      1- 2208     	ENI
                                    1- 2209     	.line	567, "main.c"; 	SLEEP();
     0021 0001                      1- 2210     	sleep
                                    1- 2211     	.line	568, "main.c"; 	AWUCON = 0x00;
     0022 02rr                      1- 2212     	CLRR	_AWUCON
                                    1- 2213     	.line	570, "main.c"; 	IOSTA =  C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0023 213E                      1- 2214     	MOVIA	0x3e
     0024 000r                      1- 2215     	IOST	_IOSTA
                                    1- 2216     	.line	571, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0025 2101                      1- 2217     	MOVIA	0x01
     0026 00rr                      1- 2218     	MOVAR	_INTE
                                    1- 2219     	.line	572, "main.c"; 	INTF = 0;
     0027 02rr                      1- 2220     	CLRR	_INTF
                                    1- 2221     	.line	574, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En ;				// Enable WDT ,  Enable LVR
     0028 21A8                      1- 2222     	MOVIA	0xa8
     0029 00rr                      1- 2223     	MOVAR	_PCON
                                    1- 2224     	.line	576, "main.c"; 	}
                                    1- 2225     	RETURN	
     002A 0010                      3-   40 m1      ret
                                    1- 2226     ; exit point of _gotoSleep
                                    1- 2228     ;***
                                    1- 2229     ;  pBlock Stats: dbName = C
                                    1- 2230     ;***
                                    1- 2231     ;has an exit
                                    1- 2232     ;; Starting pCode block
                                    1- 2233     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2235     _pwmStop:
                                    1- 2236     ; 2 exit points
                                    1- 2237     	.line	540, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2238     	CLRA	
     0001 00rr                      1- 2239     	SFUN	_T2CR1
                                    1- 2240     	.line	541, "main.c"; 	}
                                    1- 2241     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2242     ; exit point of _pwmStop
                                    1- 2244     ;***
                                    1- 2245     ;  pBlock Stats: dbName = C
                                    1- 2246     ;***
                                    1- 2247     ;has an exit
                                    1- 2248     ;1 compiler assigned register :
                                    1- 2249     ;   r0x1055
                                    1- 2250     ;; Starting pCode block
                                    1- 2251     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2253     _pwmInit:
                                    1- 2254     ; 2 exit points
                                    1- 2255     	.line	528, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2256     	SFUNR	_T2CR1
                                    1- 2257     	BANKSEL	r0x1055
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2258     	MOVAR	r0x1055
     0003 0Frr                      1- 2259     	BTRSC	r0x1055,7
                                    1- 2260     	.line	529, "main.c"; 	return;
                                    1- 2261     	MGOTO	_00527_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2262     	.line	530, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2263     	CLRR	_TMRH
                                    1- 2264     	.line	531, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 2265     	MOVIA	0x64
     0007 00rr                      1- 2266     	SFUN	_TMR2
                                    1- 2267     	.line	534, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2101                      1- 2268     	MOVIA	0x01
     0009 00rr                      1- 2269     	SFUN	_T2CR2
                                    1- 2270     	.line	535, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2271     	MOVIA	0x83
     000B 00rr                      1- 2272     	SFUN	_T2CR1
     000C                           1- 2273     _00527_DS_:
                                    1- 2274     	.line	536, "main.c"; 	}
                                    1- 2275     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2276     ; exit point of _pwmInit
                                    1- 2278     ;***
                                    1- 2279     ;  pBlock Stats: dbName = C
                                    1- 2280     ;***
                                    1- 2281     ;has an exit
                                    1- 2282     ;; Starting pCode block
                                    1- 2283     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2285     _pwm1Stop:
                                    1- 2286     ; 2 exit points
                                    1- 2287     	.line	521, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2288     	CLRA	
     0001 00rr                      1- 2289     	SFUN	_T1CR1
                                    1- 2290     	.line	522, "main.c"; 	}
                                    1- 2291     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2292     ; exit point of _pwm1Stop
                                    1- 2294     ;***
                                    1- 2295     ;  pBlock Stats: dbName = C
                                    1- 2296     ;***
                                    1- 2297     ;has an exit
                                    1- 2298     ;1 compiler assigned register :
                                    1- 2299     ;   r0x1056
                                    1- 2300     ;; Starting pCode block
                                    1- 2301     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2303     _pwm1Init:
                                    1- 2304     ; 2 exit points
                                    1- 2305     	.line	508, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2306     	SFUNR	_T1CR1
                                    1- 2307     	BANKSEL	r0x1056
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2308     	MOVAR	r0x1056
     0003 0Frr                      1- 2309     	BTRSC	r0x1056,7
                                    1- 2310     	.line	509, "main.c"; 	return;
                                    1- 2311     	MGOTO	_00516_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2312     	.line	510, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2313     	CLRR	_TMRH
                                    1- 2314     	.line	511, "main.c"; 	TMR1 = 70;							//频率为110K
     0006 2146                      1- 2315     	MOVIA	0x46
     0007 00rr                      1- 2316     	SFUN	_TMR1
                                    1- 2317     	.line	514, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2318     	CLRA	
     0009 00rr                      1- 2319     	SFUN	_T1CR2
                                    1- 2320     	.line	515, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Dis;
     000A 2108                      1- 2321     	MOVIA	0x08
     000B 00rr                      1- 2322     	SFUN	_T1CR2
                                    1- 2323     	.line	516, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000C 2183                      1- 2324     	MOVIA	0x83
     000D 00rr                      1- 2325     	SFUN	_T1CR1
     000E                           1- 2326     _00516_DS_:
                                    1- 2327     	.line	517, "main.c"; 	}
                                    1- 2328     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2329     ; exit point of _pwm1Init
                                    1- 2331     ;***
                                    1- 2332     ;  pBlock Stats: dbName = C
                                    1- 2333     ;***
                                    1- 2334     ;has an exit
                                    1- 2335     ;functions called:
                                    1- 2336     ;   _pwmStop
                                    1- 2337     ;   _pwmStop
                                    1- 2338     ;; Starting pCode block
                                    1- 2339     .segment "code"; module=main, function=_powerOff
     0000                           1- 2341     _powerOff:
                                    1- 2342     ; 2 exit points
                                    1- 2343     	.line	501, "main.c"; 	workStep = 0;
                                    1- 2344     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2345     	CLRR	_workStep
                                    1- 2346     	.line	502, "main.c"; 	pwmStop();
                                    1- 2347     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2348     	.line	503, "main.c"; 	}
                                    1- 2349     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 2350     ; exit point of _powerOff
                                    1- 2352     ;***
                                    1- 2353     ;  pBlock Stats: dbName = C
                                    1- 2354     ;***
                                    1- 2355     ;has an exit
                                    1- 2356     ;; Starting pCode block
                                    1- 2357     .segment "code"; module=main, function=_initSys
     0000                           1- 2359     _initSys:
                                    1- 2360     ; 2 exit points
                                    1- 2361     	.line	473, "main.c"; 	DISI();
     0000 0013                      1- 2362     	DISI
                                    1- 2363     	.line	474, "main.c"; 	IOSTA = C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0001 213E                      1- 2364     	MOVIA	0x3e
     0002 000r                      1- 2365     	IOST	_IOSTA
                                    1- 2366     	.line	475, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 2367     	CLRA	
     0004 000r                      1- 2368     	IOST	_IOSTB
                                    1- 2369     	.line	476, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2370     	CLRR	_PORTB
                                    1- 2371     	.line	477, "main.c"; 	PORTA = 0x00;
                                    1- 2372     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2373     	CLRR	_PORTA
                                    1- 2374     	.line	478, "main.c"; 	APHCON = 0xFF;
     0008 21FF                      1- 2375     	MOVIA	0xff
     0009 000r                      1- 2376     	IOST	_APHCON
                                    1- 2377     	.line	479, "main.c"; 	BPHCON = 0xFF;
     000A 00rr                      1- 2378     	MOVAR	_BPHCON
                                    1- 2379     	.line	480, "main.c"; 	ABPLCON = 0xFF;
     000B 00rr                      1- 2380     	MOVAR	_ABPLCON
                                    1- 2381     	.line	482, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000C 2101                      1- 2382     	MOVIA	0x01
     000D 00rr                      1- 2383     	MOVAR	_INTE
                                    1- 2384     	.line	484, "main.c"; 	PCON1 = C_TMR0_Dis;
     000E 0200                      1- 2385     	CLRA	
     000F 000r                      1- 2386     	IOST	_PCON1
                                    1- 2387     	.line	486, "main.c"; 	TMR0 = 55;
     0010 2137                      1- 2388     	MOVIA	0x37
     0011 00rr                      1- 2389     	MOVAR	_TMR0
                                    1- 2390     	.line	487, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0012 2101                      1- 2391     	MOVIA	0x01
     0013 0003                      1- 2392     	T0MD	
                                    1- 2393     	.line	489, "main.c"; 	PCON1 = C_TMR0_En;
     0014 000r                      1- 2394     	IOST	_PCON1
                                    1- 2395     	.line	492, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0015 2188                      1- 2396     	MOVIA	0x88
     0016 00rr                      1- 2397     	MOVAR	_PCON
                                    1- 2398     	.line	495, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0017 2101                      1- 2399     	MOVIA	0x01
     0018 000r                      1- 2400     	IOST	_PCON1
                                    1- 2401     	.line	496, "main.c"; 	ENI();
     0019 0004                      1- 2402     	ENI
                                    1- 2403     	.line	497, "main.c"; 	}
                                    1- 2404     	RETURN	
     001A 0010                      3-   40 m1      ret
                                    1- 2405     ; exit point of _initSys
                                    1- 2407     ;***
                                    1- 2408     ;  pBlock Stats: dbName = C
                                    1- 2409     ;***
                                    1- 2410     ;has an exit
                                    1- 2411     ;functions called:
                                    1- 2412     ;   _keyRead
                                    1- 2413     ;   __mulchar
                                    1- 2414     ;   _setMaxDuty
                                    1- 2415     ;   _powerOff
                                    1- 2416     ;   _setMaxDuty
                                    1- 2417     ;   _keyRead
                                    1- 2418     ;   __mulchar
                                    1- 2419     ;   _setMaxDuty
                                    1- 2420     ;   _powerOff
                                    1- 2421     ;   _setMaxDuty
                                    1- 2422     ;3 compiler assigned registers:
                                    1- 2423     ;   r0x1057
                                    1- 2424     ;   STK00
                                    1- 2425     ;   r0x1058
                                    1- 2426     ;; Starting pCode block
                                    1- 2427     .segment "code"; module=main, function=_keyCtr
                                    1- 2429     ;local variable name mapping:
     0000                           1- 2431     _keyCtr:
                                    1- 2432     ; 2 exit points
                                    1- 2433     	.line	414, "main.c"; 	char kclick = keyRead(0x20 & (~PORTA));
                                    1- 2434     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 2435     	COMR	_PORTA,W
                                    1- 2436     	BANKSEL	r0x1057
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 2437     	MOVAR	r0x1057
     0004 2120                      1- 2438     	MOVIA	0x20
     0005 10rr                      1- 2439     	ANDAR	r0x1057,F
     0006 01rr                      1- 2440     	MOVR	r0x1057,W
                                    1- 2441     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2442     	BANKSEL	r0x1057
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2443     	MOVAR	r0x1057
                                    1- 2444     	.line	415, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 2445     	XORIA	0x01
     000B 0903                      1- 2446     	BTRSS	STATUS,2
                                    1- 2447     	MGOTO	_00499_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2448     	.line	418, "main.c"; 	ledLightTime = 0;
                                    1- 2449     	BANKSEL	_ledLightTime
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 2450     	CLRR	_ledLightTime
                                    1- 2451     	.line	419, "main.c"; 	count5S = 0;
                                    1- 2452     	BANKSEL	_count5S
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2453     	CLRR	_count5S
     0011 02rr                      1- 2454     	CLRR	(_count5S + 1)
                                    1- 2455     	.line	420, "main.c"; 	if(workStep == 0)
                                    1- 2456     	BANKSEL	_workStep
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 2457     	MOVR	_workStep,W
     0014 0903                      1- 2458     	BTRSS	STATUS,2
                                    1- 2459     	MGOTO	_00487_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2460     	.line	422, "main.c"; 	if(showFlag)
                                    1- 2461     	BANKSEL	_Status
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 0Arr                      1- 2462     	BTRSS	_Status,4
                                    1- 2463     	MGOTO	_00484_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2464     	.line	424, "main.c"; 	ledLightTime = 0;
                                    1- 2465     	BANKSEL	_ledLightTime
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 02rr                      1- 2466     	CLRR	_ledLightTime
                                    1- 2467     	.line	425, "main.c"; 	showFlag = 0;
                                    1- 2468     	BANKSEL	_Status
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 1Err                      1- 2469     	BCR	_Status,4
                                    1- 2470     	MGOTO	_00485_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
     001E                           1- 2471     _00484_DS_:
                                    1- 2472     	.line	429, "main.c"; 	count1s = 0;
                                    1- 2473     	BANKSEL	_count1s
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 02rr                      1- 2474     	CLRR	_count1s
                                    1- 2475     	.line	430, "main.c"; 	ledLightTime = 3;
     0020 2103                      1- 2476     	MOVIA	0x03
                                    1- 2477     	BANKSEL	_ledLightTime
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 00rr                      1- 2478     	MOVAR	_ledLightTime
                                    1- 2479     	.line	431, "main.c"; 	showFlag = 1;
                                    1- 2480     	BANKSEL	_Status
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 1Arr                      1- 2481     	BSR	_Status,4
     0025                           1- 2482     _00485_DS_:
                                    1- 2483     	.line	433, "main.c"; 	return;
                                    1- 2484     	MGOTO	_00501_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
     0026                           1- 2485     _00487_DS_:
                                    1- 2486     	.line	435, "main.c"; 	if(++workStep > 10)
                                    1- 2487     	BANKSEL	_workStep
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 05rr                      1- 2488     	INCR	_workStep,F
                                    1- 2489     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2490     ;;unsigned compare: left >= lit (0xB=11), size=1
     0028 210B                      1- 2491     	MOVIA	0x0b
     0029 04rr                      1- 2492     	SUBAR	_workStep,W
     002A 0803                      1- 2493     	BTRSS	STATUS,0
                                    1- 2494     	MGOTO	_00489_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2495     	.line	436, "main.c"; 	workStep = 1;
     002C 2101                      1- 2496     	MOVIA	0x01
     002D 00rr                      1- 2497     	MOVAR	_workStep
     002E                           1- 2498     _00489_DS_:
                                    1- 2499     	.line	437, "main.c"; 	maxDuty = 38 + workStep*2;
     002E 2102                      1- 2500     	MOVIA	0x02
     002F 00rr                      1- 2501     	MOVAR	STK00
                                    1- 2502     	BANKSEL	_workStep
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1- 2503     	MOVR	_workStep,W
                                    1- 2504     	MCALL	__mulchar
     0032 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2505     	BANKSEL	r0x1058
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 00rr                      1- 2506     	MOVAR	r0x1058
     0035 2126                      1- 2507     	MOVIA	0x26
     0036 03rr                      1- 2508     	ADDAR	r0x1058,W
                                    1- 2509     	BANKSEL	_maxDuty
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 00rr                      1- 2510     	MOVAR	_maxDuty
                                    1- 2511     	.line	438, "main.c"; 	setMaxDuty();
                                    1- 2512     	MCALL	_setMaxDuty
     0039 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2513     	MGOTO	_00501_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
     003B                           1- 2514     _00499_DS_:
                                    1- 2515     	.line	440, "main.c"; 	else if(kclick == 2)
                                    1- 2516     	BANKSEL	r0x1057
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 01rr                      1- 2517     	MOVR	r0x1057,W
     003D 2402                      1- 2518     	XORIA	0x02
     003E 0903                      1- 2519     	BTRSS	STATUS,2
                                    1- 2520     	MGOTO	_00501_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2521     	.line	442, "main.c"; 	if(workStep > 0)
                                    1- 2522     	BANKSEL	_workStep
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 01rr                      1- 2523     	MOVR	_workStep,W
     0042 0D03                      1- 2524     	BTRSC	STATUS,2
                                    1- 2525     	MGOTO	_00494_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2526     	.line	444, "main.c"; 	workStep = 0;
     0044 02rr                      1- 2527     	CLRR	_workStep
                                    1- 2528     	.line	445, "main.c"; 	powerOff();
                                    1- 2529     	MCALL	_powerOff
     0045 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2530     	.line	446, "main.c"; 	showFlag = 0;
                                    1- 2531     	BANKSEL	_Status
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 1Err                      1- 2532     	BCR	_Status,4
                                    1- 2533     	MGOTO	_00501_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049                           1- 2534     _00494_DS_:
                                    1- 2535     	.line	450, "main.c"; 	if(batValue == 0 || preBatValue == 0)
                                    1- 2536     	BANKSEL	_batValue
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 01rr                      1- 2537     	MOVR	_batValue,W
     004B 0D03                      1- 2538     	BTRSC	STATUS,2
                                    1- 2539     	MGOTO	_00490_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2540     	BANKSEL	_preBatValue
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 01rr                      1- 2541     	MOVR	_preBatValue,W
     004F 0903                      1- 2542     	BTRSS	STATUS,2
                                    1- 2543     	MGOTO	_00491_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
     0051                           1- 2544     _00490_DS_:
                                    1- 2545     	.line	452, "main.c"; 	ledLightTime = 3;
     0051 2103                      1- 2546     	MOVIA	0x03
                                    1- 2547     	BANKSEL	_ledLightTime
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 00rr                      1- 2548     	MOVAR	_ledLightTime
                                    1- 2549     	.line	453, "main.c"; 	preBatValue = 0;
                                    1- 2550     	BANKSEL	_preBatValue
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 02rr                      1- 2551     	CLRR	_preBatValue
                                    1- 2552     	.line	454, "main.c"; 	showFlag = 1;
                                    1- 2553     	BANKSEL	_Status
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 1Arr                      1- 2554     	BSR	_Status,4
                                    1- 2555     	.line	455, "main.c"; 	return;
                                    1- 2556     	MGOTO	_00501_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
     0059                           1- 2557     _00491_DS_:
                                    1- 2558     	.line	457, "main.c"; 	workStep = 1;
     0059 2101                      1- 2559     	MOVIA	0x01
                                    1- 2560     	BANKSEL	_workStep
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 00rr                      1- 2561     	MOVAR	_workStep
                                    1- 2562     	.line	458, "main.c"; 	PWM2DUTY = 80;
     005C 2150                      1- 2563     	MOVIA	0x50
     005D 00rr                      1- 2564     	SFUN	_PWM2DUTY
                                    1- 2565     	.line	459, "main.c"; 	cDuty = 80;
                                    1- 2566     	BANKSEL	_cDuty
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 00rr                      1- 2567     	MOVAR	_cDuty
                                    1- 2568     	.line	460, "main.c"; 	currentDuty = 80;
                                    1- 2569     	BANKSEL	_currentDuty
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 00rr                      1- 2570     	MOVAR	_currentDuty
                                    1- 2571     	.line	461, "main.c"; 	maxDuty = 40;
     0062 2128                      1- 2572     	MOVIA	0x28
                                    1- 2573     	BANKSEL	_maxDuty
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 00rr                      1- 2574     	MOVAR	_maxDuty
                                    1- 2575     	.line	462, "main.c"; 	setMaxDuty();
                                    1- 2576     	MCALL	_setMaxDuty
     0065 2rrr                      3-   66 m1      LCALL rom_address
     0066                           1- 2577     _00501_DS_:
                                    1- 2578     	.line	466, "main.c"; 	}
                                    1- 2579     	RETURN	
     0066 0010                      3-   40 m1      ret
                                    1- 2580     ; exit point of _keyCtr
                                    1- 2582     ;***
                                    1- 2583     ;  pBlock Stats: dbName = C
                                    1- 2584     ;***
                                    1- 2585     ;has an exit
                                    1- 2586     ;functions called:
                                    1- 2587     ;   _pwmInit
                                    1- 2588     ;   _pwmInit
                                    1- 2589     ;; Starting pCode block
                                    1- 2590     .segment "code"; module=main, function=_setMaxDuty
     0000                           1- 2592     _setMaxDuty:
                                    1- 2593     ; 2 exit points
                                    1- 2594     	.line	407, "main.c"; 	tempDuty = maxDuty;
                                    1- 2595     	BANKSEL	_maxDuty
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2596     	MOVR	_maxDuty,W
                                    1- 2597     	BANKSEL	_tempDuty
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 2598     	MOVAR	_tempDuty
                                    1- 2599     	.line	408, "main.c"; 	pwmInit();
                                    1- 2600     	MCALL	_pwmInit
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2601     	.line	409, "main.c"; 	}
                                    1- 2602     	RETURN	
     0005 0010                      3-   40 m1      ret
                                    1- 2603     ; exit point of _setMaxDuty
                                    1- 2605     ;***
                                    1- 2606     ;  pBlock Stats: dbName = C
                                    1- 2607     ;***
                                    1- 2608     ;has an exit
                                    1- 2609     ;functions called:
                                    1- 2610     ;   _setInput
                                    1- 2611     ;   _showKeyLed
                                    1- 2612     ;   __gptrget1
                                    1- 2613     ;   _showNubShiwei
                                    1- 2614     ;   __gptrget1
                                    1- 2615     ;   _showNubGewei
                                    1- 2616     ;   _setInput
                                    1- 2617     ;   _showKeyLed
                                    1- 2618     ;   __gptrget1
                                    1- 2619     ;   _showNubShiwei
                                    1- 2620     ;   __gptrget1
                                    1- 2621     ;   _showNubGewei
                                    1- 2622     ;5 compiler assigned registers:
                                    1- 2623     ;   r0x1059
                                    1- 2624     ;   r0x105A
                                    1- 2625     ;   STK01
                                    1- 2626     ;   STK00
                                    1- 2627     ;   r0x105B
                                    1- 2628     ;; Starting pCode block
                                    1- 2629     .segment "code"; module=main, function=_refreshNub
     0000                           1- 2631     _refreshNub:
                                    1- 2632     ; 2 exit points
                                    1- 2633     ;;unsigned compare: left < lit (0x384=900), size=2
                                    1- 2634     	.line	378, "main.c"; 	if(count900s >= 900)
     0000 2103                      1- 2635     	MOVIA	0x03
                                    1- 2636     	BANKSEL	_count900s
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2637     	SUBAR	(_count900s + 1),W
     0003 0903                      1- 2638     	BTRSS	STATUS,2
                                    1- 2639     	MGOTO	_00474_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
     0005 2184                      1- 2640     	MOVIA	0x84
     0006 04rr                      1- 2641     	SUBAR	_count900s,W
     0007                           1- 2642     _00474_DS_:
     0007 0803                      1- 2643     	BTRSS	STATUS,0
                                    1- 2644     	MGOTO	_00452_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2645     	.line	380, "main.c"; 	setInput();
                                    1- 2646     	MCALL	_setInput
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2647     	.line	381, "main.c"; 	return;
                                    1- 2648     	MGOTO	_00460_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
     000B                           1- 2649     _00452_DS_:
                                    1- 2650     	.line	384, "main.c"; 	tempshiweiNum = shiweiNum;
                                    1- 2651     	BANKSEL	_shiweiNum
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 01rr                      1- 2652     	MOVR	_shiweiNum,W
                                    1- 2653     	BANKSEL	_tempshiweiNum
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 2654     	MOVAR	_tempshiweiNum
                                    1- 2655     	.line	385, "main.c"; 	tempgeweiNum = geweiNum;
                                    1- 2656     	BANKSEL	_geweiNum
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 2657     	MOVR	_geweiNum,W
                                    1- 2658     	BANKSEL	_tempgeweiNum
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1- 2659     	MOVAR	_tempgeweiNum
                                    1- 2660     	.line	386, "main.c"; 	if(workStep > 0 || ledLightTime > 0)
                                    1- 2661     	BANKSEL	_workStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2662     	MOVR	_workStep,W
     0015 0903                      1- 2663     	BTRSS	STATUS,2
                                    1- 2664     	MGOTO	_00453_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2665     	BANKSEL	_ledLightTime
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 01rr                      1- 2666     	MOVR	_ledLightTime,W
     0019 0903                      1- 2667     	BTRSS	STATUS,2
     001A                           1- 2668     _00453_DS_:
                                    1- 2669     	.line	388, "main.c"; 	showKeyLed();
                                    1- 2670     	MCALL	_showKeyLed
     001A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2671     	.line	391, "main.c"; 	if(ledDeadTime > 0)
                                    1- 2672     	BANKSEL	_ledDeadTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1- 2673     	MOVR	_ledDeadTime,W
     001D 0D03                      1- 2674     	BTRSC	STATUS,2
                                    1- 2675     	MGOTO	_00457_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2676     	.line	393, "main.c"; 	tempshiweiNum = 11;
     001F 210B                      1- 2677     	MOVIA	0x0b
                                    1- 2678     	BANKSEL	_tempshiweiNum
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 2679     	MOVAR	_tempshiweiNum
                                    1- 2680     	.line	394, "main.c"; 	tempgeweiNum = 12;
     0022 210C                      1- 2681     	MOVIA	0x0c
                                    1- 2682     	BANKSEL	_tempgeweiNum
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 2683     	MOVAR	_tempgeweiNum
     0025                           1- 2684     _00457_DS_:
                                    1- 2685     	.line	397, "main.c"; 	if(firstShowCount > 0)
                                    1- 2686     	BANKSEL	_firstShowCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1- 2687     	MOVR	_firstShowCount,W
     0027 0D03                      1- 2688     	BTRSC	STATUS,2
                                    1- 2689     	MGOTO	_00459_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2690     	.line	398, "main.c"; 	tempshiweiNum = tempgeweiNum = 8;
     0029 2108                      1- 2691     	MOVIA	0x08
                                    1- 2692     	BANKSEL	_tempgeweiNum
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1- 2693     	MOVAR	_tempgeweiNum
                                    1- 2694     	BANKSEL	_tempshiweiNum
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1- 2695     	MOVAR	_tempshiweiNum
     002E                           1- 2696     _00459_DS_:
                                    1- 2697     	.line	399, "main.c"; 	showNubShiwei(numArray[tempshiweiNum]);
                                    1- 2698     	BANKSEL	_tempshiweiNum
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 2699     	MOVR	_tempshiweiNum,W
     0030 25rr                      1- 2700     	ADDIA	(_numArray + 0)
                                    1- 2701     	BANKSEL	r0x1059
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 00rr                      1- 2702     	MOVAR	r0x1059
     0033 21rr                      1- 2703     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0034 0C03                      1- 2704     	BTRSC	STATUS,0
     0035 2501                      1- 2705     	ADDIA	0x01
                                    1- 2706     	BANKSEL	r0x105A
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 00rr                      1- 2707     	MOVAR	r0x105A
                                    1- 2708     	BANKSEL	r0x1059
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 01rr                      1- 2709     	MOVR	r0x1059,W
     003A 00rr                      1- 2710     	MOVAR	STK01
                                    1- 2711     	BANKSEL	r0x105A
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 01rr                      1- 2712     	MOVR	r0x105A,W
     003D 00rr                      1- 2713     	MOVAR	STK00
     003E 2100                      1- 2714     	MOVIA	0x00
                                    1- 2715     	MCALL	__gptrget1
     003F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2716     ;;100	MOVAR	r0x105B
                                    1- 2717     	MCALL	_showNubShiwei
     0040 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2718     	.line	400, "main.c"; 	showNubGewei(numArray[tempgeweiNum]);
                                    1- 2719     	BANKSEL	_tempgeweiNum
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 01rr                      1- 2720     	MOVR	_tempgeweiNum,W
     0043 25rr                      1- 2721     	ADDIA	(_numArray + 0)
                                    1- 2722     	BANKSEL	r0x1059
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 2723     	MOVAR	r0x1059
     0046 21rr                      1- 2724     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0047 0C03                      1- 2725     	BTRSC	STATUS,0
     0048 2501                      1- 2726     	ADDIA	0x01
                                    1- 2727     	BANKSEL	r0x105A
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 2728     	MOVAR	r0x105A
                                    1- 2729     	BANKSEL	r0x1059
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 01rr                      1- 2730     	MOVR	r0x1059,W
     004D 00rr                      1- 2731     	MOVAR	STK01
                                    1- 2732     	BANKSEL	r0x105A
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1- 2733     	MOVR	r0x105A,W
     0050 00rr                      1- 2734     	MOVAR	STK00
     0051 2100                      1- 2735     	MOVIA	0x00
                                    1- 2736     	MCALL	__gptrget1
     0052 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2737     ;;99	MOVAR	r0x105B
                                    1- 2738     	MCALL	_showNubGewei
     0053 2rrr                      3-   66 m1      LCALL rom_address
     0054                           1- 2739     _00460_DS_:
                                    1- 2740     	.line	401, "main.c"; 	}
                                    1- 2741     	RETURN	
     0054 0010                      3-   40 m1      ret
                                    1- 2742     ; exit point of _refreshNub
                                    1- 2744     ;***
                                    1- 2745     ;  pBlock Stats: dbName = C
                                    1- 2746     ;***
                                    1- 2747     ;functions called:
                                    1- 2748     ;   __divuchar
                                    1- 2749     ;   __moduchar
                                    1- 2750     ;   _pwmStop
                                    1- 2751     ;   _pwm1Stop
                                    1- 2752     ;   _pwm1Init
                                    1- 2753     ;   _pwm1Stop
                                    1- 2754     ;   __divuchar
                                    1- 2755     ;   __moduchar
                                    1- 2756     ;   _pwmStop
                                    1- 2757     ;   _pwm1Stop
                                    1- 2758     ;   _pwm1Init
                                    1- 2759     ;   _pwm1Stop
                                    1- 2760     ;6 compiler assigned registers:
                                    1- 2761     ;   STK00
                                    1- 2762     ;   r0x105C
                                    1- 2763     ;   r0x105D
                                    1- 2764     ;   r0x105E
                                    1- 2765     ;   r0x105F
                                    1- 2766     ;   r0x1060
                                    1- 2767     ;; Starting pCode block
                                    1- 2768     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2770     _chrgCtr:
                                    1- 2771     ; 0 exit points
                                    1- 2772     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2773     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1- 2774     	.line	254, "main.c"; 	if(preBatValue > 99)
     0000 2164                      1- 2775     	MOVIA	0x64
                                    1- 2776     	BANKSEL	_preBatValue
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2777     	SUBAR	_preBatValue,W
     0003 0803                      1- 2778     	BTRSS	STATUS,0
                                    1- 2779     	MGOTO	_00307_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2780     	.line	256, "main.c"; 	shiweiNum = geweiNum = 9;
     0005 2109                      1- 2781     	MOVIA	0x09
                                    1- 2782     	BANKSEL	_geweiNum
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 2783     	MOVAR	_geweiNum
                                    1- 2784     	BANKSEL	_shiweiNum
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2785     	MOVAR	_shiweiNum
                                    1- 2786     	MGOTO	_00308_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
     000B                           1- 2787     _00307_DS_:
                                    1- 2788     	.line	260, "main.c"; 	shiweiNum = preBatValue/10;
     000B 210A                      1- 2789     	MOVIA	0x0a
     000C 00rr                      1- 2790     	MOVAR	STK00
                                    1- 2791     	BANKSEL	_preBatValue
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2792     	MOVR	_preBatValue,W
                                    1- 2793     	MCALL	__divuchar
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2794     	BANKSEL	_shiweiNum
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 2795     	MOVAR	_shiweiNum
                                    1- 2796     	.line	261, "main.c"; 	geweiNum = preBatValue%10;
     0012 210A                      1- 2797     	MOVIA	0x0a
     0013 00rr                      1- 2798     	MOVAR	STK00
                                    1- 2799     	BANKSEL	_preBatValue
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 01rr                      1- 2800     	MOVR	_preBatValue,W
                                    1- 2801     	MCALL	__moduchar
     0016 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2802     	BANKSEL	_geweiNum
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 2803     	MOVAR	_geweiNum
     0019                           1- 2804     _00308_DS_:
                                    1- 2805     	.line	263, "main.c"; 	if(workStep > 0)
                                    1- 2806     	BANKSEL	_workStep
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 2807     	MOVR	_workStep,W
     001B 0D03                      1- 2808     	BTRSC	STATUS,2
                                    1- 2809     	MGOTO	_00313_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2810     	.line	265, "main.c"; 	showFlag = 1;
                                    1- 2811     	BANKSEL	_Status
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 1Arr                      1- 2812     	BSR	_Status,4
                                    1- 2813     ;;unsigned compare: left < lit (0xA=10), size=1
                                    1- 2814     	.line	266, "main.c"; 	if(workStep < 10)
     001F 210A                      1- 2815     	MOVIA	0x0a
                                    1- 2816     	BANKSEL	_workStep
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 2817     	SUBAR	_workStep,W
     0022 0C03                      1- 2818     	BTRSC	STATUS,0
                                    1- 2819     	MGOTO	_00310_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2820     	.line	268, "main.c"; 	shiweiNum = 0;
                                    1- 2821     	BANKSEL	_shiweiNum
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 02rr                      1- 2822     	CLRR	_shiweiNum
                                    1- 2823     	.line	269, "main.c"; 	geweiNum = workStep;
                                    1- 2824     	BANKSEL	_workStep
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 2825     	MOVR	_workStep,W
                                    1- 2826     	BANKSEL	_geweiNum
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 00rr                      1- 2827     	MOVAR	_geweiNum
                                    1- 2828     	MGOTO	_00313_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
     002B                           1- 2829     _00310_DS_:
                                    1- 2830     	.line	273, "main.c"; 	shiweiNum = 1;
     002B 2101                      1- 2831     	MOVIA	0x01
                                    1- 2832     	BANKSEL	_shiweiNum
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1- 2833     	MOVAR	_shiweiNum
                                    1- 2834     	.line	274, "main.c"; 	geweiNum = 0;
                                    1- 2835     	BANKSEL	_geweiNum
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 02rr                      1- 2836     	CLRR	_geweiNum
     0030                           1- 2837     _00313_DS_:
                                    1- 2838     	.line	278, "main.c"; 	if(0x08 & PORTA)
                                    1- 2839     	BANKSEL	_PORTA
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 09rr                      1- 2840     	BTRSS	_PORTA,3
                                    1- 2841     	MGOTO	_00353_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2842     	.line	281, "main.c"; 	chrgFlag = 1;
                                    1- 2843     	BANKSEL	_Status
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 19rr                      1- 2844     	BSR	_Status,3
                                    1- 2845     	.line	282, "main.c"; 	showFlag = 1;
     0035 1Arr                      1- 2846     	BSR	_Status,4
                                    1- 2847     	.line	283, "main.c"; 	workStep = 0;
                                    1- 2848     	BANKSEL	_workStep
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 02rr                      1- 2849     	CLRR	_workStep
                                    1- 2850     	.line	284, "main.c"; 	ledLightTime = 0;
                                    1- 2851     	BANKSEL	_ledLightTime
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 02rr                      1- 2852     	CLRR	_ledLightTime
                                    1- 2853     	.line	285, "main.c"; 	pwmStop();
                                    1- 2854     	MCALL	_pwmStop
     003A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2855     ;;unsigned compare: left < lit (0x63=99), size=1
                                    1- 2856     	.line	286, "main.c"; 	if(preBatValue < 99 && batValue >= preBatValue && count5s == 1)
     003B 2163                      1- 2857     	MOVIA	0x63
                                    1- 2858     	BANKSEL	_preBatValue
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 04rr                      1- 2859     	SUBAR	_preBatValue,W
     003E 0C03                      1- 2860     	BTRSC	STATUS,0
                                    1- 2861     	MGOTO	_00007_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
     0040 01rr                      1- 2862     	MOVR	_preBatValue,W
                                    1- 2863     	BANKSEL	_batValue
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 04rr                      1- 2864     	SUBAR	_batValue,W
     0043 0803                      1- 2865     	BTRSS	STATUS,0
                                    1- 2866     	MGOTO	_00007_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2867     	BANKSEL	_count5s
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1- 2868     	MOVR	_count5s,W
     0047 2401                      1- 2869     	XORIA	0x01
     0048 0903                      1- 2870     	BTRSS	STATUS,2
                                    1- 2871     	MGOTO	_00007_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
     004A 01rr                      1- 2872     	MOVR	(_count5s + 1),W
     004B 2400                      1- 2873     	XORIA	0x00
     004C 0903                      1- 2874     	BTRSS	STATUS,2
                                    1- 2875     	MGOTO	_00007_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2876     	.line	288, "main.c"; 	preBatValue = preBatValue+1;
                                    1- 2877     	BANKSEL	_preBatValue
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 05rr                      1- 2878     	INCR	_preBatValue,F
     0050                           1- 2879     _00007_DS_:
                                    1- 2880     	.line	290, "main.c"; 	if(batValue >= 99 || chrgFullFlag)
     0050 2163                      1- 2881     	MOVIA	0x63
                                    1- 2882     	BANKSEL	_batValue
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 04rr                      1- 2883     	SUBAR	_batValue,W
     0053 0C03                      1- 2884     	BTRSC	STATUS,0
                                    1- 2885     	MGOTO	_00344_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2886     	BANKSEL	_chrgFullFlag
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 01rr                      1- 2887     	MOVR	_chrgFullFlag,W
     0057 0D03                      1- 2888     	BTRSC	STATUS,2
                                    1- 2889     	MGOTO	_00345_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
     0059                           1- 2890     _00344_DS_:
                                    1- 2891     	.line	292, "main.c"; 	chrgStep = 4;
     0059 2104                      1- 2892     	MOVIA	0x04
                                    1- 2893     	BANKSEL	_chrgStep
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 00rr                      1- 2894     	MOVAR	_chrgStep
                                    1- 2895     	.line	294, "main.c"; 	if(shiweiNum == 9 &&  geweiNum == 9 && batValue >= 100 && ++countFull > 200)
                                    1- 2896     	BANKSEL	_shiweiNum
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 01rr                      1- 2897     	MOVR	_shiweiNum,W
     005E 2409                      1- 2898     	XORIA	0x09
     005F 0903                      1- 2899     	BTRSS	STATUS,2
                                    1- 2900     	MGOTO	_00009_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2901     	BANKSEL	_geweiNum
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1- 2902     	MOVR	_geweiNum,W
     0063 2409                      1- 2903     	XORIA	0x09
     0064 0903                      1- 2904     	BTRSS	STATUS,2
                                    1- 2905     	MGOTO	_00009_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2906     ;;unsigned compare: left < lit (0x64=100), size=1
     0066 2164                      1- 2907     	MOVIA	0x64
                                    1- 2908     	BANKSEL	_batValue
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 04rr                      1- 2909     	SUBAR	_batValue,W
     0069 0803                      1- 2910     	BTRSS	STATUS,0
                                    1- 2911     	MGOTO	_00009_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2912     	BANKSEL	_countFull
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 05rr                      1- 2913     	INCR	_countFull,F
                                    1- 2914     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2915     ;;unsigned compare: left >= lit (0xC9=201), size=1
     006D 21C9                      1- 2916     	MOVIA	0xc9
     006E 04rr                      1- 2917     	SUBAR	_countFull,W
     006F 0803                      1- 2918     	BTRSS	STATUS,0
                                    1- 2919     	MGOTO	_00009_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2920     	.line	296, "main.c"; 	pwm1Stop();
                                    1- 2921     	MCALL	_pwm1Stop
     0071 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2922     	.line	298, "main.c"; 	PORTB &= 0xF7;
     0072 1Drr                      1- 2923     	BCR	_PORTB,3
                                    1- 2924     	.line	299, "main.c"; 	IOSTB |= 0X08;
     0073 001r                      1- 2925     	IOSTR	_IOSTB
                                    1- 2926     	BANKSEL	r0x105C
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 00rr                      1- 2927     	MOVAR	r0x105C
     0076 19rr                      1- 2928     	BSR	r0x105C,3
     0077 01rr                      1- 2929     	MOVR	r0x105C,W
     0078 000r                      1- 2930     	IOST	_IOSTB
                                    1- 2931     	.line	300, "main.c"; 	chrgFullFlag = 1;
     0079 2101                      1- 2932     	MOVIA	0x01
                                    1- 2933     	BANKSEL	_chrgFullFlag
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 00rr                      1- 2934     	MOVAR	_chrgFullFlag
                                    1- 2935     	MGOTO	_00009_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
     007D                           1- 2936     _00345_DS_:
                                    1- 2937     	.line	306, "main.c"; 	countFull = 0;
                                    1- 2938     	BANKSEL	_countFull
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 02rr                      1- 2939     	CLRR	_countFull
                                    1- 2940     	.line	307, "main.c"; 	IOSTB &= 0xF7;
     007F 001r                      1- 2941     	IOSTR	_IOSTB
                                    1- 2942     	BANKSEL	r0x105C
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 00rr                      1- 2943     	MOVAR	r0x105C
     0082 1Drr                      1- 2944     	BCR	r0x105C,3
     0083 01rr                      1- 2945     	MOVR	r0x105C,W
     0084 000r                      1- 2946     	IOST	_IOSTB
                                    1- 2947     	.line	308, "main.c"; 	PWM1DUTY = maxduty;
                                    1- 2948     	BANKSEL	_maxduty
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 01rr                      1- 2949     	MOVR	_maxduty,W
     0087 00rr                      1- 2950     	SFUN	_PWM1DUTY
                                    1- 2951     	.line	309, "main.c"; 	pwm1Init();
                                    1- 2952     	MCALL	_pwm1Init
     0088 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2953     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2954     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1- 2955     	.line	310, "main.c"; 	if(count200ms > 5)
     0089 2106                      1- 2956     	MOVIA	0x06
                                    1- 2957     	BANKSEL	_count200ms
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 04rr                      1- 2958     	SUBAR	_count200ms,W
     008C 0803                      1- 2959     	BTRSS	STATUS,0
                                    1- 2960     	MGOTO	_00009_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2961     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2962     ;;unsigned compare: left >= lit (0x22=34), size=2
                                    1- 2963     	.line	312, "main.c"; 	if(R_AIN4_DATA <= 33 && R_AIN4_DATA >=subMin)
     008E 2100                      1- 2964     	MOVIA	0x00
                                    1- 2965     	BANKSEL	_R_AIN4_DATA
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 04rr                      1- 2966     	SUBAR	(_R_AIN4_DATA + 1),W
     0091 0903                      1- 2967     	BTRSS	STATUS,2
                                    1- 2968     	MGOTO	_00437_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
     0093 2122                      1- 2969     	MOVIA	0x22
     0094 04rr                      1- 2970     	SUBAR	_R_AIN4_DATA,W
     0095                           1- 2971     _00437_DS_:
     0095 0C03                      1- 2972     	BTRSC	STATUS,0
                                    1- 2973     	MGOTO	_00324_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2974     	BANKSEL	_subMin
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 01rr                      1- 2975     	MOVR	_subMin,W
                                    1- 2976     	BANKSEL	r0x105C
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 00rr                      1- 2977     	MOVAR	r0x105C
                                    1- 2978     	BANKSEL	r0x105D
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 02rr                      1- 2979     	CLRR	r0x105D
     009D 2100                      1- 2980     	MOVIA	0x00
                                    1- 2981     	BANKSEL	_R_AIN4_DATA
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 04rr                      1- 2982     	SUBAR	(_R_AIN4_DATA + 1),W
     00A0 0903                      1- 2983     	BTRSS	STATUS,2
                                    1- 2984     	MGOTO	_00438_DS_
     00A1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2985     	BANKSEL	r0x105C
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 01rr                      1- 2986     	MOVR	r0x105C,W
                                    1- 2987     	BANKSEL	_R_AIN4_DATA
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 04rr                      1- 2988     	SUBAR	_R_AIN4_DATA,W
     00A6                           1- 2989     _00438_DS_:
     00A6 0803                      1- 2990     	BTRSS	STATUS,0
                                    1- 2991     	MGOTO	_00324_DS_
     00A7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2992     	.line	314, "main.c"; 	addTime = subTime = 0;
                                    1- 2993     	BANKSEL	_subTime
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 02rr                      1- 2994     	CLRR	_subTime
                                    1- 2995     	BANKSEL	_addTime
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 02rr                      1- 2996     	CLRR	_addTime
                                    1- 2997     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2998     ;;unsigned compare: left >= lit (0x22=34), size=2
     00AC                           1- 2999     _00324_DS_:
                                    1- 3000     	.line	316, "main.c"; 	if(R_AIN4_DATA > 33)
     00AC 2100                      1- 3001     	MOVIA	0x00
                                    1- 3002     	BANKSEL	_R_AIN4_DATA
     00AD rrrr                      3-  110 m1      .banksel ram_address
     00AE 04rr                      1- 3003     	SUBAR	(_R_AIN4_DATA + 1),W
     00AF 0903                      1- 3004     	BTRSS	STATUS,2
                                    1- 3005     	MGOTO	_00439_DS_
     00B0 3rrr                      3-   63 m1      LGOTO rom_address
     00B1 2122                      1- 3006     	MOVIA	0x22
     00B2 04rr                      1- 3007     	SUBAR	_R_AIN4_DATA,W
     00B3                           1- 3008     _00439_DS_:
     00B3 0803                      1- 3009     	BTRSS	STATUS,0
                                    1- 3010     	MGOTO	_00337_DS_
     00B4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3011     	.line	318, "main.c"; 	if(++subTime > chrgWaitTime)
                                    1- 3012     	BANKSEL	_subTime
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 05rr                      1- 3013     	INCR	_subTime,F
     00B7 01rr                      1- 3014     	MOVR	_subTime,W
                                    1- 3015     	BANKSEL	_chrgWaitTime
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 04rr                      1- 3016     	SUBAR	_chrgWaitTime,W
     00BA 0C03                      1- 3017     	BTRSC	STATUS,0
                                    1- 3018     	MGOTO	_00329_DS_
     00BB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3019     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3020     ;;unsigned compare: left >= lit (0x3=3), size=1
                                    1- 3021     	.line	320, "main.c"; 	if(maxduty > 2)
     00BC 2103                      1- 3022     	MOVIA	0x03
                                    1- 3023     	BANKSEL	_maxduty
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 04rr                      1- 3024     	SUBAR	_maxduty,W
     00BF 0C03                      1- 3025     	BTRSC	STATUS,0
                                    1- 3026     	.line	321, "main.c"; 	maxduty = maxduty - 1;
     00C0 06rr                      1- 3027     	DECR	_maxduty,F
                                    1- 3028     	.line	322, "main.c"; 	subTime = 0;
                                    1- 3029     	BANKSEL	_subTime
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 02rr                      1- 3030     	CLRR	_subTime
                                    1- 3031     	.line	323, "main.c"; 	subMin = 32;
     00C3 2120                      1- 3032     	MOVIA	0x20
                                    1- 3033     	BANKSEL	_subMin
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 00rr                      1- 3034     	MOVAR	_subMin
                                    1- 3035     	.line	324, "main.c"; 	chrgWaitTime = 250;
     00C6 21FA                      1- 3036     	MOVIA	0xfa
                                    1- 3037     	BANKSEL	_chrgWaitTime
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 00rr                      1- 3038     	MOVAR	_chrgWaitTime
     00C9                           1- 3039     _00329_DS_:
                                    1- 3040     	.line	326, "main.c"; 	addTime = 0;
                                    1- 3041     	BANKSEL	_addTime
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 02rr                      1- 3042     	CLRR	_addTime
                                    1- 3043     	MGOTO	_00338_DS_
     00CB 3rrr                      3-   63 m1      LGOTO rom_address
     00CC                           1- 3044     _00337_DS_:
                                    1- 3045     	.line	328, "main.c"; 	else if(R_AIN4_DATA < subMin)
                                    1- 3046     	BANKSEL	_subMin
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 01rr                      1- 3047     	MOVR	_subMin,W
                                    1- 3048     	BANKSEL	r0x105C
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 00rr                      1- 3049     	MOVAR	r0x105C
                                    1- 3050     	BANKSEL	r0x105D
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 02rr                      1- 3051     	CLRR	r0x105D
     00D2 2100                      1- 3052     	MOVIA	0x00
                                    1- 3053     	BANKSEL	_R_AIN4_DATA
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 04rr                      1- 3054     	SUBAR	(_R_AIN4_DATA + 1),W
     00D5 0903                      1- 3055     	BTRSS	STATUS,2
                                    1- 3056     	MGOTO	_00442_DS_
     00D6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3057     	BANKSEL	r0x105C
     00D7 rrrr                      3-  110 m1      .banksel ram_address
     00D8 01rr                      1- 3058     	MOVR	r0x105C,W
                                    1- 3059     	BANKSEL	_R_AIN4_DATA
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 04rr                      1- 3060     	SUBAR	_R_AIN4_DATA,W
     00DB                           1- 3061     _00442_DS_:
     00DB 0C03                      1- 3062     	BTRSC	STATUS,0
                                    1- 3063     	MGOTO	_00338_DS_
     00DC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3064     	.line	330, "main.c"; 	if(++addTime > chrgWaitTime)
                                    1- 3065     	BANKSEL	_addTime
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 05rr                      1- 3066     	INCR	_addTime,F
     00DF 01rr                      1- 3067     	MOVR	_addTime,W
                                    1- 3068     	BANKSEL	_chrgWaitTime
     00E0 rrrr                      3-  110 m1      .banksel ram_address
     00E1 04rr                      1- 3069     	SUBAR	_chrgWaitTime,W
     00E2 0C03                      1- 3070     	BTRSC	STATUS,0
                                    1- 3071     	MGOTO	_00333_DS_
     00E3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3072     ;;unsigned compare: left < lit (0x3C=60), size=1
                                    1- 3073     	.line	332, "main.c"; 	if(maxduty < 60)
     00E4 213C                      1- 3074     	MOVIA	0x3c
                                    1- 3075     	BANKSEL	_maxduty
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 04rr                      1- 3076     	SUBAR	_maxduty,W
     00E7 0803                      1- 3077     	BTRSS	STATUS,0
                                    1- 3078     	.line	333, "main.c"; 	maxduty = maxduty + 1;
     00E8 05rr                      1- 3079     	INCR	_maxduty,F
                                    1- 3080     	.line	334, "main.c"; 	addTime = 0;
                                    1- 3081     	BANKSEL	_addTime
     00E9 rrrr                      3-  110 m1      .banksel ram_address
     00EA 02rr                      1- 3082     	CLRR	_addTime
     00EB                           1- 3083     _00333_DS_:
                                    1- 3084     	.line	336, "main.c"; 	subTime = 0;
                                    1- 3085     	BANKSEL	_subTime
     00EB rrrr                      3-  110 m1      .banksel ram_address
     00EC 02rr                      1- 3086     	CLRR	_subTime
     00ED                           1- 3087     _00338_DS_:
                                    1- 3088     	.line	338, "main.c"; 	if(chrgduty < maxduty)
                                    1- 3089     	BANKSEL	_maxduty
     00ED rrrr                      3-  110 m1      .banksel ram_address
     00EE 01rr                      1- 3090     	MOVR	_maxduty,W
                                    1- 3091     	BANKSEL	_chrgduty
     00EF rrrr                      3-  110 m1      .banksel ram_address
     00F0 04rr                      1- 3092     	SUBAR	_chrgduty,W
     00F1 0C03                      1- 3093     	BTRSC	STATUS,0
                                    1- 3094     	MGOTO	_00340_DS_
     00F2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3095     	.line	339, "main.c"; 	chrgduty++;
     00F3 05rr                      1- 3096     	INCR	_chrgduty,F
                                    1- 3097     	MGOTO	_00009_DS_
     00F4 3rrr                      3-   63 m1      LGOTO rom_address
     00F5                           1- 3098     _00340_DS_:
                                    1- 3099     	.line	341, "main.c"; 	chrgduty = maxduty;
                                    1- 3100     	BANKSEL	_maxduty
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 01rr                      1- 3101     	MOVR	_maxduty,W
                                    1- 3102     	BANKSEL	_chrgduty
     00F7 rrrr                      3-  110 m1      .banksel ram_address
     00F8 00rr                      1- 3103     	MOVAR	_chrgduty
                                    1- 3104     	MGOTO	_00009_DS_
     00F9 3rrr                      3-   63 m1      LGOTO rom_address
     00FA                           1- 3105     _00353_DS_:
                                    1- 3106     	.line	351, "main.c"; 	startFlag = 0;
                                    1- 3107     	BANKSEL	_startFlag
     00FA rrrr                      3-  110 m1      .banksel ram_address
     00FB 02rr                      1- 3108     	CLRR	_startFlag
                                    1- 3109     	.line	352, "main.c"; 	chrgWaitTime = 20;
     00FC 2114                      1- 3110     	MOVIA	0x14
                                    1- 3111     	BANKSEL	_chrgWaitTime
     00FD rrrr                      3-  110 m1      .banksel ram_address
     00FE 00rr                      1- 3112     	MOVAR	_chrgWaitTime
                                    1- 3113     	.line	353, "main.c"; 	subMin = 33;
     00FF 2121                      1- 3114     	MOVIA	0x21
                                    1- 3115     	BANKSEL	_subMin
     0100 rrrr                      3-  110 m1      .banksel ram_address
     0101 00rr                      1- 3116     	MOVAR	_subMin
                                    1- 3117     	.line	354, "main.c"; 	chrgFullFlag = 0;
                                    1- 3118     	BANKSEL	_chrgFullFlag
     0102 rrrr                      3-  110 m1      .banksel ram_address
     0103 02rr                      1- 3119     	CLRR	_chrgFullFlag
                                    1- 3120     	.line	355, "main.c"; 	maxduty = 0;
                                    1- 3121     	BANKSEL	_maxduty
     0104 rrrr                      3-  110 m1      .banksel ram_address
     0105 02rr                      1- 3122     	CLRR	_maxduty
                                    1- 3123     	.line	356, "main.c"; 	countFull = 0;
                                    1- 3124     	BANKSEL	_countFull
     0106 rrrr                      3-  110 m1      .banksel ram_address
     0107 02rr                      1- 3125     	CLRR	_countFull
                                    1- 3126     	.line	357, "main.c"; 	pwm1Stop();
                                    1- 3127     	MCALL	_pwm1Stop
     0108 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3128     	.line	358, "main.c"; 	chrgFlag = 0;
                                    1- 3129     	BANKSEL	_Status
     0109 rrrr                      3-  110 m1      .banksel ram_address
     010A 1Drr                      1- 3130     	BCR	_Status,3
                                    1- 3131     	.line	361, "main.c"; 	if(preBatValue > batValue + 1)
                                    1- 3132     	BANKSEL	_batValue
     010B rrrr                      3-  110 m1      .banksel ram_address
     010C 01rr                      1- 3133     	MOVR	_batValue,W
                                    1- 3134     	BANKSEL	r0x105C
     010D rrrr                      3-  110 m1      .banksel ram_address
     010E 00rr                      1- 3135     	MOVAR	r0x105C
                                    1- 3136     	BANKSEL	r0x105D
     010F rrrr                      3-  110 m1      .banksel ram_address
     0110 02rr                      1- 3137     	CLRR	r0x105D
                                    1- 3138     	BANKSEL	r0x105C
     0111 rrrr                      3-  110 m1      .banksel ram_address
     0112 05rr                      1- 3139     	INCR	r0x105C,F
     0113 0903                      1- 3140     	BTRSS	STATUS,2
                                    1- 3141     	MGOTO	_00008_DS_
     0114 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3142     	BANKSEL	r0x105D
     0115 rrrr                      3-  110 m1      .banksel ram_address
     0116 05rr                      1- 3143     	INCR	r0x105D,F
     0117                           1- 3144     _00008_DS_:
                                    1- 3145     	BANKSEL	_preBatValue
     0117 rrrr                      3-  110 m1      .banksel ram_address
     0118 01rr                      1- 3146     	MOVR	_preBatValue,W
                                    1- 3147     	BANKSEL	r0x105E
     0119 rrrr                      3-  110 m1      .banksel ram_address
     011A 00rr                      1- 3148     	MOVAR	r0x105E
                                    1- 3149     ;;1	CLRR	r0x105F
                                    1- 3150     	BANKSEL	r0x105D
     011B rrrr                      3-  110 m1      .banksel ram_address
     011C 01rr                      1- 3151     	MOVR	r0x105D,W
     011D 2580                      1- 3152     	ADDIA	0x80
                                    1- 3153     	BANKSEL	r0x1060
     011E rrrr                      3-  110 m1      .banksel ram_address
     011F 00rr                      1- 3154     	MOVAR	r0x1060
     0120 2100                      1- 3155     	MOVIA	0x00
     0121 2580                      1- 3156     	ADDIA	0x80
     0122 04rr                      1- 3157     	SUBAR	r0x1060,W
     0123 0903                      1- 3158     	BTRSS	STATUS,2
                                    1- 3159     	MGOTO	_00446_DS_
     0124 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3160     	BANKSEL	r0x105E
     0125 rrrr                      3-  110 m1      .banksel ram_address
     0126 01rr                      1- 3161     	MOVR	r0x105E,W
                                    1- 3162     	BANKSEL	r0x105C
     0127 rrrr                      3-  110 m1      .banksel ram_address
     0128 04rr                      1- 3163     	SUBAR	r0x105C,W
     0129                           1- 3164     _00446_DS_:
     0129 0C03                      1- 3165     	BTRSC	STATUS,0
                                    1- 3166     	MGOTO	_00009_DS_
     012A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3167     	.line	363, "main.c"; 	if(count5s == 0)
                                    1- 3168     	BANKSEL	_count5s
     012B rrrr                      3-  110 m1      .banksel ram_address
     012C 01rr                      1- 3169     	MOVR	_count5s,W
     012D 11rr                      1- 3170     	IORAR	(_count5s + 1),W
     012E 0903                      1- 3171     	BTRSS	STATUS,2
                                    1- 3172     	MGOTO	_00009_DS_
     012F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3173     	.line	366, "main.c"; 	preBatValue = preBatValue - 1;
                                    1- 3174     	BANKSEL	_preBatValue
     0130 rrrr                      3-  110 m1      .banksel ram_address
     0131 06rr                      1- 3175     	DECR	_preBatValue,F
     0132                           1- 3176     _00009_DS_:
                                    1- 3177     	.line	371, "main.c"; 	}
                                    1- 3178     	RETURN	
     0132 0010                      3-   40 m1      ret
                                    1- 3181     ;	code size estimation:
                                    1- 3182     ;	 1200+  372 =  1572 instructions ( 3888 byte)
                                    1- 3184     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
