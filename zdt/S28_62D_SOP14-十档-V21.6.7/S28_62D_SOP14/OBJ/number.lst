
                    Nyquest Technology Co., Ltd.

NYASM 2.30

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"number.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_ADMDbits
                                    1-   23     	extern	_ADRbits
                                    1-   24     	extern	_ADVREFHbits
                                    1-   25     	extern	_ADCRbits
                                    1-   26     	extern	_AWUCONbits
                                    1-   27     	extern	_PACONbits
                                    1-   28     	extern	_INTEDGbits
                                    1-   29     	extern	_ANAENbits
                                    1-   30     	extern	_RFCbits
                                    1-   31     	extern	_INTE2bits
                                    1-   32     	extern	_INDF
                                    1-   33     	extern	_TMR0
                                    1-   34     	extern	_PCL
                                    1-   35     	extern	_STATUS
                                    1-   36     	extern	_FSR
                                    1-   37     	extern	_PORTA
                                    1-   38     	extern	_PORTB
                                    1-   39     	extern	_PCON
                                    1-   40     	extern	_BWUCON
                                    1-   41     	extern	_PCHBUF
                                    1-   42     	extern	_ABPLCON
                                    1-   43     	extern	_BPHCON
                                    1-   44     	extern	_INTE
                                    1-   45     	extern	_INTF
                                    1-   46     	extern	_ADMD
                                    1-   47     	extern	_ADR
                                    1-   48     	extern	_ADD
                                    1-   49     	extern	_ADVREFH
                                    1-   50     	extern	_ADCR
                                    1-   51     	extern	_AWUCON
                                    1-   52     	extern	_PACON
                                    1-   53     	extern	_INTEDG
                                    1-   54     	extern	_TMRH
                                    1-   55     	extern	_ANAEN
                                    1-   56     	extern	_RFC
                                    1-   57     	extern	_TM3RH
                                    1-   58     	extern	_INTE2
                                    1-   59     	extern	_TMR1
                                    1-   60     	extern	_T1CR1
                                    1-   61     	extern	_T1CR2
                                    1-   62     	extern	_PWM1DUTY
                                    1-   63     	extern	_PS1CV
                                    1-   64     	extern	_BZ1CR
                                    1-   65     	extern	_IRCR
                                    1-   66     	extern	_TBHP
                                    1-   67     	extern	_TBHD
                                    1-   68     	extern	_TMR2
                                    1-   69     	extern	_T2CR1
                                    1-   70     	extern	_T2CR2
                                    1-   71     	extern	_PWM2DUTY
                                    1-   72     	extern	_PS2CV
                                    1-   73     	extern	_BZ2CR
                                    1-   74     	extern	_OSCCR
                                    1-   75     	extern	_TMR3
                                    1-   76     	extern	_T3CR1
                                    1-   77     	extern	_T3CR2
                                    1-   78     	extern	_PWM3DUTY
                                    1-   79     	extern	_PS3CV
                                    1-   80     	extern	_BZ3CR
                                    1-   81     	extern	_IOSTA
                                    1-   82     	extern	_IOSTB
                                    1-   83     	extern	_APHCON
                                    1-   84     	extern	_PS0CV
                                    1-   85     	extern	_BODCON
                                    1-   86     	extern	_CMPCR
                                    1-   87     	extern	_PCON1
                                    1-   88     	extern	_T0MD
                                    1-   90     	extern PSAVE
                                    1-   91     	extern SSAVE
                                    1-   92     	extern WSAVE
                                    1-   93     	extern STK02
                                    1-   94     	extern STK01
                                    1-   95     	extern STK00
                                    1-   96     ;--------------------------------------------------------
                                    1-   97     ; global declarations
                                    1-   98     ;--------------------------------------------------------
                                    1-   99     	extern	_delayms
                                    1-  100     	extern	_setInput
                                    1-  101     	extern	_setOutput
                                    1-  102     	extern	_setlowOutput
                                    1-  103     	extern	_setHightOutput
                                    1-  104     	extern	_showNub
                                    1-  105     	extern	_G3
                                    1-  106     	extern	_F3
                                    1-  107     	extern	_E3
                                    1-  108     	extern	_D3
                                    1-  109     	extern	_C3
                                    1-  110     	extern	_B3
                                    1-  111     	extern	_A3
                                    1-  112     	extern	_G2
                                    1-  113     	extern	_F2
                                    1-  114     	extern	_E2
                                    1-  115     	extern	_D2
                                    1-  116     	extern	_C2
                                    1-  117     	extern	_B2
                                    1-  118     	extern	_A2
                                    1-  119     	extern	_showKeyLed
                                    1-  120     	extern	_showNubGewei2
                                    1-  121     	extern	_showNubGewei
                                    1-  122     	extern	_showNubShiwei2
                                    1-  123     	extern	_showNubShiwei
                                    1-  125     ;--------------------------------------------------------
                                    1-  126     ; global definitions
                                    1-  127     ;--------------------------------------------------------
                                    1-  128     ;--------------------------------------------------------
                                    1-  129     ; absolute symbol definitions
                                    1-  130     ;--------------------------------------------------------
                                    1-  131     ;--------------------------------------------------------
                                    1-  132     ; compiler-defined variables
                                    1-  133     ;--------------------------------------------------------
                                    1-  134     .segment "uninit"
     0000                           1-  135     r0x100D:
                                    1-  136     	.res	1
                                    1-  137     .segment "uninit"
     0000                           1-  138     r0x100E:
                                    1-  139     	.res	1
                                    1-  140     .segment "uninit"
     0000                           1-  141     r0x100F:
                                    1-  142     	.res	1
                                    1-  143     .segment "uninit"
     0000                           1-  144     r0x100C:
                                    1-  145     	.res	1
                                    1-  146     .segment "uninit"
     0000                           1-  147     r0x1009:
                                    1-  148     	.res	1
                                    1-  149     .segment "uninit"
     0000                           1-  150     r0x100A:
                                    1-  151     	.res	1
                                    1-  152     .segment "uninit"
     0000                           1-  153     r0x100B:
                                    1-  154     	.res	1
                                    1-  155     .segment "uninit"
     0000                           1-  156     r0x1008:
                                    1-  157     	.res	1
                                    1-  158     .segment "uninit"
     0000                           1-  159     r0x1006:
                                    1-  160     	.res	1
                                    1-  161     .segment "uninit"
     0000                           1-  162     r0x1007:
                                    1-  163     	.res	1
                                    1-  164     .segment "uninit"
     0000                           1-  165     r0x1005:
                                    1-  166     	.res	1
                                    1-  167     .segment "uninit"
     0000                           1-  168     r0x1004:
                                    1-  169     	.res	1
                                    1-  170     .segment "uninit"
     0000                           1-  171     r0x1003:
                                    1-  172     	.res	1
                                    1-  173     .segment "uninit"
     0000                           1-  174     r0x1002:
                                    1-  175     	.res	1
                                    1-  176     .segment "uninit"
     0000                           1-  177     r0x1000:
                                    1-  178     	.res	1
                                    1-  179     .segment "uninit"
     0000                           1-  180     r0x1001:
                                    1-  181     	.res	1
                                    1-  182     ;--------------------------------------------------------
                                    1-  183     ; initialized data
                                    1-  184     ;--------------------------------------------------------
                                    1-  185     ;--------------------------------------------------------
                                    1-  186     ; overlayable items in internal ram 
                                    1-  187     ;--------------------------------------------------------
                                    1-  188     ;	udata_ovr
                                    1-  189     ;--------------------------------------------------------
                                    1-  190     ; code
                                    1-  191     ;--------------------------------------------------------
                                    1-  192     ;***
                                    1-  193     ;  pBlock Stats: dbName = C
                                    1-  194     ;***
                                    1-  195     ;has an exit
                                    1-  196     ;2 compiler assigned registers:
                                    1-  197     ;   r0x1000
                                    1-  198     ;   r0x1001
                                    1-  199     ;; Starting pCode block
                                    1-  200     .segment "code"; module=number, function=_delayms
                                    1-  202     ;local variable name mapping:
     0000                           1-  205     _delayms:
                                    1-  206     ; 2 exit points
                                    1-  207     	.line	263, "number.c"; 	void delayms(u8t time)
                                    1-  208     	BANKSEL	r0x1000
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  209     	MOVAR	r0x1000
                                    1-  210     	.line	265, "number.c"; 	for(u8t i=0;i<time;i++)
                                    1-  211     	BANKSEL	r0x1001
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  212     	CLRR	r0x1001
     0004                           1-  213     _00328_DS_:
                                    1-  214     	BANKSEL	r0x1000
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  215     	MOVR	r0x1000,W
                                    1-  216     	BANKSEL	r0x1001
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1-  217     	SUBAR	r0x1001,W
     0008 0C03                      1-  218     	BTRSC	STATUS,0
                                    1-  219     	MGOTO	_00330_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  220     	.line	266, "number.c"; 	NOP();
     000A 0000                      1-  221     	nop
                                    1-  222     	.line	265, "number.c"; 	for(u8t i=0;i<time;i++)
                                    1-  223     	BANKSEL	r0x1001
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1-  224     	INCR	r0x1001,F
                                    1-  225     	MGOTO	_00328_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1-  226     _00330_DS_:
                                    1-  227     	.line	267, "number.c"; 	}
                                    1-  228     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1-  229     ; exit point of _delayms
                                    1-  231     ;***
                                    1-  232     ;  pBlock Stats: dbName = C
                                    1-  233     ;***
                                    1-  234     ;has an exit
                                    1-  235     ;1 compiler assigned register :
                                    1-  236     ;   r0x1002
                                    1-  237     ;; Starting pCode block
                                    1-  238     .segment "code"; module=number, function=_setInput
     0000                           1-  240     _setInput:
                                    1-  241     ; 2 exit points
                                    1-  242     	.line	259, "number.c"; 	IOSTA |= 0xC1;		//PA0-PA6-A7设为输入脚
     0000 001r                      1-  243     	IOSTR	_IOSTA
                                    1-  244     	BANKSEL	r0x1002
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1-  245     	MOVAR	r0x1002
     0003 21C1                      1-  246     	MOVIA	0xc1
     0004 11rr                      1-  247     	IORAR	r0x1002,F
     0005 01rr                      1-  248     	MOVR	r0x1002,W
     0006 000r                      1-  249     	IOST	_IOSTA
                                    1-  250     	.line	260, "number.c"; 	IOSTB |= 0x23;		//PB0-PB1设为输入脚
     0007 001r                      1-  251     	IOSTR	_IOSTB
     0008 00rr                      1-  252     	MOVAR	r0x1002
     0009 2123                      1-  253     	MOVIA	0x23
     000A 11rr                      1-  254     	IORAR	r0x1002,F
     000B 01rr                      1-  255     	MOVR	r0x1002,W
     000C 000r                      1-  256     	IOST	_IOSTB
                                    1-  257     	.line	261, "number.c"; 	}
                                    1-  258     	RETURN	
     000D 0010                      3-   40 m1      ret
                                    1-  259     ; exit point of _setInput
                                    1-  261     ;***
                                    1-  262     ;  pBlock Stats: dbName = C
                                    1-  263     ;***
                                    1-  264     ;has an exit
                                    1-  265     ;1 compiler assigned register :
                                    1-  266     ;   r0x1003
                                    1-  267     ;; Starting pCode block
                                    1-  268     .segment "code"; module=number, function=_setOutput
                                    1-  270     ;local variable name mapping:
     0000                           1-  272     _setOutput:
                                    1-  273     ; 2 exit points
                                    1-  274     	.line	234, "number.c"; 	void setOutput(char outPut)
                                    1-  275     	BANKSEL	r0x1003
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  276     	MOVAR	r0x1003
                                    1-  277     ;;unsigned compare: left < lit (0x1=1), size=1
                                    1-  278     	.line	236, "number.c"; 	switch(outPut)
     0002 2101                      1-  279     	MOVIA	0x01
     0003 04rr                      1-  280     	SUBAR	r0x1003,W
     0004 0803                      1-  281     	BTRSS	STATUS,0
                                    1-  282     	MGOTO	_00307_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  283     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1-  284     ;;unsigned compare: left >= lit (0x6=6), size=1
     0006 2106                      1-  285     	MOVIA	0x06
     0007 04rr                      1-  286     	SUBAR	r0x1003,W
     0008 0C03                      1-  287     	BTRSC	STATUS,0
                                    1-  288     	MGOTO	_00307_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
     000A 06rr                      1-  289     	DECR	r0x1003,F
     000B 21rr                      1-  290     	MOVIA	((_00317_DS_ >> 8) & 0xff)
     000C 008A                      1-  291     	MOVAR	PCHBUF
     000D 01rr                      1-  292     	MOVR	r0x1003,W
     000E 25rr                      1-  293     	ADDIA	_00317_DS_
     000F 0C03                      1-  294     	BTRSC	STATUS,0
     0010 058A                      1-  295     	INCR	PCHBUF,F
     0011 0082                      1-  296     	MOVAR	PCL
     0012                           1-  297     _00317_DS_:
                                    1-  298     	MGOTO	_00301_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  299     	MGOTO	_00302_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  300     	MGOTO	_00303_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  301     	MGOTO	_00304_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  302     	MGOTO	_00305_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
     0017                           1-  303     _00301_DS_:
                                    1-  304     	.line	240, "number.c"; 	IOSTA &= 0xBF;
     0017 001r                      1-  305     	IOSTR	_IOSTA
                                    1-  306     	BANKSEL	r0x1003
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 00rr                      1-  307     	MOVAR	r0x1003
     001A 1Frr                      1-  308     	BCR	r0x1003,6
     001B 01rr                      1-  309     	MOVR	r0x1003,W
     001C 000r                      1-  310     	IOST	_IOSTA
                                    1-  311     	.line	241, "number.c"; 	break;
                                    1-  312     	MGOTO	_00307_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
     001E                           1-  313     _00302_DS_:
                                    1-  314     	.line	243, "number.c"; 	IOSTA &= 0x7F;
     001E 001r                      1-  315     	IOSTR	_IOSTA
                                    1-  316     	BANKSEL	r0x1003
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 00rr                      1-  317     	MOVAR	r0x1003
     0021 1Frr                      1-  318     	BCR	r0x1003,7
     0022 01rr                      1-  319     	MOVR	r0x1003,W
     0023 000r                      1-  320     	IOST	_IOSTA
                                    1-  321     	.line	244, "number.c"; 	break;
                                    1-  322     	MGOTO	_00307_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1-  323     _00303_DS_:
                                    1-  324     	.line	246, "number.c"; 	IOSTB &= 0xFD;
     0025 001r                      1-  325     	IOSTR	_IOSTB
                                    1-  326     	BANKSEL	r0x1003
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 00rr                      1-  327     	MOVAR	r0x1003
     0028 1Crr                      1-  328     	BCR	r0x1003,1
     0029 01rr                      1-  329     	MOVR	r0x1003,W
     002A 000r                      1-  330     	IOST	_IOSTB
                                    1-  331     	.line	247, "number.c"; 	break;
                                    1-  332     	MGOTO	_00307_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C                           1-  333     _00304_DS_:
                                    1-  334     	.line	249, "number.c"; 	IOSTB &= 0xDE;
     002C 001r                      1-  335     	IOSTR	_IOSTB
                                    1-  336     	BANKSEL	r0x1003
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 00rr                      1-  337     	MOVAR	r0x1003
     002F 21DE                      1-  338     	MOVIA	0xde
     0030 10rr                      1-  339     	ANDAR	r0x1003,F
     0031 01rr                      1-  340     	MOVR	r0x1003,W
     0032 000r                      1-  341     	IOST	_IOSTB
                                    1-  342     	.line	250, "number.c"; 	break;
                                    1-  343     	MGOTO	_00307_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
     0034                           1-  344     _00305_DS_:
                                    1-  345     	.line	252, "number.c"; 	IOSTA &= 0xFE;
     0034 001r                      1-  346     	IOSTR	_IOSTA
                                    1-  347     	BANKSEL	r0x1003
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 00rr                      1-  348     	MOVAR	r0x1003
     0037 1Crr                      1-  349     	BCR	r0x1003,0
     0038 01rr                      1-  350     	MOVR	r0x1003,W
     0039 000r                      1-  351     	IOST	_IOSTA
     003A                           1-  352     _00307_DS_:
                                    1-  353     	.line	255, "number.c"; 	}
                                    1-  354     	RETURN	
     003A 0010                      3-   40 m1      ret
                                    1-  355     ; exit point of _setOutput
                                    1-  357     ;***
                                    1-  358     ;  pBlock Stats: dbName = C
                                    1-  359     ;***
                                    1-  360     ;has an exit
                                    1-  361     ;1 compiler assigned register :
                                    1-  362     ;   r0x1004
                                    1-  363     ;; Starting pCode block
                                    1-  364     .segment "code"; module=number, function=_setlowOutput
                                    1-  366     ;local variable name mapping:
     0000                           1-  368     _setlowOutput:
                                    1-  369     ; 2 exit points
                                    1-  370     	.line	210, "number.c"; 	void setlowOutput(char outPut)
                                    1-  371     	BANKSEL	r0x1004
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  372     	MOVAR	r0x1004
                                    1-  373     ;;unsigned compare: left < lit (0x1=1), size=1
                                    1-  374     	.line	212, "number.c"; 	switch(outPut)
     0002 2101                      1-  375     	MOVIA	0x01
     0003 04rr                      1-  376     	SUBAR	r0x1004,W
     0004 0803                      1-  377     	BTRSS	STATUS,0
                                    1-  378     	MGOTO	_00286_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  379     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1-  380     ;;unsigned compare: left >= lit (0x6=6), size=1
     0006 2106                      1-  381     	MOVIA	0x06
     0007 04rr                      1-  382     	SUBAR	r0x1004,W
     0008 0C03                      1-  383     	BTRSC	STATUS,0
                                    1-  384     	MGOTO	_00286_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
     000A 06rr                      1-  385     	DECR	r0x1004,F
     000B 21rr                      1-  386     	MOVIA	((_00296_DS_ >> 8) & 0xff)
     000C 008A                      1-  387     	MOVAR	PCHBUF
     000D 01rr                      1-  388     	MOVR	r0x1004,W
     000E 25rr                      1-  389     	ADDIA	_00296_DS_
     000F 0C03                      1-  390     	BTRSC	STATUS,0
     0010 058A                      1-  391     	INCR	PCHBUF,F
     0011 0082                      1-  392     	MOVAR	PCL
     0012                           1-  393     _00296_DS_:
                                    1-  394     	MGOTO	_00280_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  395     	MGOTO	_00281_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  396     	MGOTO	_00282_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  397     	MGOTO	_00283_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  398     	MGOTO	_00284_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
     0017                           1-  399     _00280_DS_:
                                    1-  400     	.line	216, "number.c"; 	PORTA &= 0xBF;
     0017 1Frr                      1-  401     	BCR	_PORTA,6
                                    1-  402     	.line	217, "number.c"; 	break;
                                    1-  403     	MGOTO	_00286_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
     0019                           1-  404     _00281_DS_:
                                    1-  405     	.line	219, "number.c"; 	PORTA &= 0x7F;
     0019 1Frr                      1-  406     	BCR	_PORTA,7
                                    1-  407     	.line	220, "number.c"; 	break;
                                    1-  408     	MGOTO	_00286_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
     001B                           1-  409     _00282_DS_:
                                    1-  410     	.line	222, "number.c"; 	PORTB &= 0xFD;
     001B 1Crr                      1-  411     	BCR	_PORTB,1
                                    1-  412     	.line	223, "number.c"; 	break;
                                    1-  413     	MGOTO	_00286_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
     001D                           1-  414     _00283_DS_:
                                    1-  415     	.line	225, "number.c"; 	PORTB &= 0xDE;
     001D 21DE                      1-  416     	MOVIA	0xde
     001E 10rr                      1-  417     	ANDAR	_PORTB,F
                                    1-  418     	.line	226, "number.c"; 	break;
                                    1-  419     	MGOTO	_00286_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1-  420     _00284_DS_:
                                    1-  421     	.line	228, "number.c"; 	PORTA &= 0xFE;
     0020 1Crr                      1-  422     	BCR	_PORTA,0
     0021                           1-  423     _00286_DS_:
                                    1-  424     	.line	231, "number.c"; 	}
                                    1-  425     	RETURN	
     0021 0010                      3-   40 m1      ret
                                    1-  426     ; exit point of _setlowOutput
                                    1-  428     ;***
                                    1-  429     ;  pBlock Stats: dbName = C
                                    1-  430     ;***
                                    1-  431     ;has an exit
                                    1-  432     ;1 compiler assigned register :
                                    1-  433     ;   r0x1005
                                    1-  434     ;; Starting pCode block
                                    1-  435     .segment "code"; module=number, function=_setHightOutput
                                    1-  437     ;local variable name mapping:
     0000                           1-  439     _setHightOutput:
                                    1-  440     ; 2 exit points
                                    1-  441     	.line	186, "number.c"; 	void setHightOutput(char outPut)
                                    1-  442     	BANKSEL	r0x1005
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  443     	MOVAR	r0x1005
                                    1-  444     ;;unsigned compare: left < lit (0x1=1), size=1
                                    1-  445     	.line	188, "number.c"; 	switch(outPut)
     0002 2101                      1-  446     	MOVIA	0x01
     0003 04rr                      1-  447     	SUBAR	r0x1005,W
     0004 0803                      1-  448     	BTRSS	STATUS,0
                                    1-  449     	MGOTO	_00265_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  450     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1-  451     ;;unsigned compare: left >= lit (0x6=6), size=1
     0006 2106                      1-  452     	MOVIA	0x06
     0007 04rr                      1-  453     	SUBAR	r0x1005,W
     0008 0C03                      1-  454     	BTRSC	STATUS,0
                                    1-  455     	MGOTO	_00265_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
     000A 06rr                      1-  456     	DECR	r0x1005,F
     000B 21rr                      1-  457     	MOVIA	((_00275_DS_ >> 8) & 0xff)
     000C 008A                      1-  458     	MOVAR	PCHBUF
     000D 01rr                      1-  459     	MOVR	r0x1005,W
     000E 25rr                      1-  460     	ADDIA	_00275_DS_
     000F 0C03                      1-  461     	BTRSC	STATUS,0
     0010 058A                      1-  462     	INCR	PCHBUF,F
     0011 0082                      1-  463     	MOVAR	PCL
     0012                           1-  464     _00275_DS_:
                                    1-  465     	MGOTO	_00259_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  466     	MGOTO	_00260_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  467     	MGOTO	_00261_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  468     	MGOTO	_00262_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  469     	MGOTO	_00263_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
     0017                           1-  470     _00259_DS_:
                                    1-  471     	.line	192, "number.c"; 	PORTA |= 0x40;
     0017 1Brr                      1-  472     	BSR	_PORTA,6
                                    1-  473     	.line	193, "number.c"; 	break;
                                    1-  474     	MGOTO	_00265_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
     0019                           1-  475     _00260_DS_:
                                    1-  476     	.line	195, "number.c"; 	PORTA |= 0x80;
     0019 1Brr                      1-  477     	BSR	_PORTA,7
                                    1-  478     	.line	196, "number.c"; 	break;
                                    1-  479     	MGOTO	_00265_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
     001B                           1-  480     _00261_DS_:
                                    1-  481     	.line	198, "number.c"; 	PORTB |= 0x02;
     001B 18rr                      1-  482     	BSR	_PORTB,1
                                    1-  483     	.line	199, "number.c"; 	break;
                                    1-  484     	MGOTO	_00265_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
     001D                           1-  485     _00262_DS_:
                                    1-  486     	.line	201, "number.c"; 	PORTB |= 0x21;
     001D 2121                      1-  487     	MOVIA	0x21
     001E 11rr                      1-  488     	IORAR	_PORTB,F
                                    1-  489     	.line	202, "number.c"; 	break;
                                    1-  490     	MGOTO	_00265_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1-  491     _00263_DS_:
                                    1-  492     	.line	204, "number.c"; 	PORTA |= 0x01;
     0020 18rr                      1-  493     	BSR	_PORTA,0
     0021                           1-  494     _00265_DS_:
                                    1-  495     	.line	207, "number.c"; 	}
                                    1-  496     	RETURN	
     0021 0010                      3-   40 m1      ret
                                    1-  497     ; exit point of _setHightOutput
                                    1-  499     ;***
                                    1-  500     ;  pBlock Stats: dbName = C
                                    1-  501     ;***
                                    1-  502     ;has an exit
                                    1-  503     ;functions called:
                                    1-  504     ;   _setInput
                                    1-  505     ;   _setOutput
                                    1-  506     ;   _setHightOutput
                                    1-  507     ;   _setOutput
                                    1-  508     ;   _setlowOutput
                                    1-  509     ;   _delayms
                                    1-  510     ;   _setInput
                                    1-  511     ;   _setOutput
                                    1-  512     ;   _setHightOutput
                                    1-  513     ;   _setOutput
                                    1-  514     ;   _setlowOutput
                                    1-  515     ;   _delayms
                                    1-  516     ;3 compiler assigned registers:
                                    1-  517     ;   r0x1006
                                    1-  518     ;   STK00
                                    1-  519     ;   r0x1007
                                    1-  520     ;; Starting pCode block
                                    1-  521     .segment "code"; module=number, function=_showNub
                                    1-  523     ;local variable name mapping:
     0000                           1-  526     _showNub:
                                    1-  527     ; 2 exit points
                                    1-  528     	.line	170, "number.c"; 	void showNub(char hight,char low)
                                    1-  529     	BANKSEL	r0x1006
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  530     	MOVAR	r0x1006
     0002 01rr                      1-  531     	MOVR	STK00,W
                                    1-  532     	BANKSEL	r0x1007
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1-  533     	MOVAR	r0x1007
                                    1-  534     	.line	172, "number.c"; 	setInput();
                                    1-  535     	MCALL	_setInput
     0005 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  536     	.line	173, "number.c"; 	PORTA &= 0x3E;		
     0006 213E                      1-  537     	MOVIA	0x3e
     0007 10rr                      1-  538     	ANDAR	_PORTA,F
                                    1-  539     	.line	174, "number.c"; 	PORTB &= 0xDC;
     0008 21DC                      1-  540     	MOVIA	0xdc
     0009 10rr                      1-  541     	ANDAR	_PORTB,F
                                    1-  542     	.line	175, "number.c"; 	setOutput(hight);	//设置输出方向
                                    1-  543     	BANKSEL	r0x1006
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1-  544     	MOVR	r0x1006,W
                                    1-  545     	MCALL	_setOutput
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  546     	.line	176, "number.c"; 	setHightOutput(hight);
                                    1-  547     	BANKSEL	r0x1006
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1-  548     	MOVR	r0x1006,W
                                    1-  549     	MCALL	_setHightOutput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  550     	.line	177, "number.c"; 	setOutput(low);		//设置输出方向
                                    1-  551     	BANKSEL	r0x1007
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1-  552     	MOVR	r0x1007,W
                                    1-  553     	MCALL	_setOutput
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  554     	.line	178, "number.c"; 	setlowOutput(low);
                                    1-  555     	BANKSEL	r0x1007
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1-  556     	MOVR	r0x1007,W
                                    1-  557     	MCALL	_setlowOutput
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  558     	.line	179, "number.c"; 	delayms(10);
     0016 210A                      1-  559     	MOVIA	0x0a
                                    1-  560     	MCALL	_delayms
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  561     	.line	180, "number.c"; 	CLRWDT(); 
     0018 0002                      1-  562     	clrwdt
                                    1-  563     	.line	181, "number.c"; 	PORTA &= 0x3E;		
     0019 213E                      1-  564     	MOVIA	0x3e
     001A 10rr                      1-  565     	ANDAR	_PORTA,F
                                    1-  566     	.line	182, "number.c"; 	PORTB &= 0xDC;
     001B 21DC                      1-  567     	MOVIA	0xdc
     001C 10rr                      1-  568     	ANDAR	_PORTB,F
                                    1-  569     	.line	183, "number.c"; 	}
                                    1-  570     	RETURN	
     001D 0010                      3-   40 m1      ret
                                    1-  571     ; exit point of _showNub
                                    1-  573     ;***
                                    1-  574     ;  pBlock Stats: dbName = C
                                    1-  575     ;***
                                    1-  576     ;has an exit
                                    1-  577     ;functions called:
                                    1-  578     ;   _showNub
                                    1-  579     ;   _showNub
                                    1-  580     ;1 compiler assigned register :
                                    1-  581     ;   STK00
                                    1-  582     ;; Starting pCode block
                                    1-  583     .segment "code"; module=number, function=_G3
     0000                           1-  585     _G3:
                                    1-  586     ; 2 exit points
                                    1-  587     	.line	166, "number.c"; 	showNub(1,5);
     0000 2105                      1-  588     	MOVIA	0x05
     0001 00rr                      1-  589     	MOVAR	STK00
     0002 2101                      1-  590     	MOVIA	0x01
                                    1-  591     	MCALL	_showNub
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  592     	.line	167, "number.c"; 	}
                                    1-  593     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1-  594     ; exit point of _G3
                                    1-  596     ;***
                                    1-  597     ;  pBlock Stats: dbName = C
                                    1-  598     ;***
                                    1-  599     ;has an exit
                                    1-  600     ;functions called:
                                    1-  601     ;   _showNub
                                    1-  602     ;   _showNub
                                    1-  603     ;1 compiler assigned register :
                                    1-  604     ;   STK00
                                    1-  605     ;; Starting pCode block
                                    1-  606     .segment "code"; module=number, function=_F3
     0000                           1-  608     _F3:
                                    1-  609     ; 2 exit points
                                    1-  610     	.line	161, "number.c"; 	showNub(1,4);
     0000 2104                      1-  611     	MOVIA	0x04
     0001 00rr                      1-  612     	MOVAR	STK00
     0002 2101                      1-  613     	MOVIA	0x01
                                    1-  614     	MCALL	_showNub
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  615     	.line	162, "number.c"; 	}
                                    1-  616     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1-  617     ; exit point of _F3
                                    1-  619     ;***
                                    1-  620     ;  pBlock Stats: dbName = C
                                    1-  621     ;***
                                    1-  622     ;has an exit
                                    1-  623     ;functions called:
                                    1-  624     ;   _showNub
                                    1-  625     ;   _showNub
                                    1-  626     ;1 compiler assigned register :
                                    1-  627     ;   STK00
                                    1-  628     ;; Starting pCode block
                                    1-  629     .segment "code"; module=number, function=_E3
     0000                           1-  631     _E3:
                                    1-  632     ; 2 exit points
                                    1-  633     	.line	156, "number.c"; 	showNub(4,1);
     0000 2101                      1-  634     	MOVIA	0x01
     0001 00rr                      1-  635     	MOVAR	STK00
     0002 2104                      1-  636     	MOVIA	0x04
                                    1-  637     	MCALL	_showNub
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  638     	.line	157, "number.c"; 	}
                                    1-  639     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1-  640     ; exit point of _E3
                                    1-  642     ;***
                                    1-  643     ;  pBlock Stats: dbName = C
                                    1-  644     ;***
                                    1-  645     ;has an exit
                                    1-  646     ;functions called:
                                    1-  647     ;   _showNub
                                    1-  648     ;   _showNub
                                    1-  649     ;1 compiler assigned register :
                                    1-  650     ;   STK00
                                    1-  651     ;; Starting pCode block
                                    1-  652     .segment "code"; module=number, function=_D3
     0000                           1-  654     _D3:
                                    1-  655     ; 2 exit points
                                    1-  656     	.line	151, "number.c"; 	showNub(1,3);
     0000 2103                      1-  657     	MOVIA	0x03
     0001 00rr                      1-  658     	MOVAR	STK00
     0002 2101                      1-  659     	MOVIA	0x01
                                    1-  660     	MCALL	_showNub
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  661     	.line	152, "number.c"; 	}
                                    1-  662     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1-  663     ; exit point of _D3
                                    1-  665     ;***
                                    1-  666     ;  pBlock Stats: dbName = C
                                    1-  667     ;***
                                    1-  668     ;has an exit
                                    1-  669     ;functions called:
                                    1-  670     ;   _showNub
                                    1-  671     ;   _showNub
                                    1-  672     ;1 compiler assigned register :
                                    1-  673     ;   STK00
                                    1-  674     ;; Starting pCode block
                                    1-  675     .segment "code"; module=number, function=_C3
     0000                           1-  677     _C3:
                                    1-  678     ; 2 exit points
                                    1-  679     	.line	146, "number.c"; 	showNub(3,1);
     0000 2101                      1-  680     	MOVIA	0x01
     0001 00rr                      1-  681     	MOVAR	STK00
     0002 2103                      1-  682     	MOVIA	0x03
                                    1-  683     	MCALL	_showNub
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  684     	.line	147, "number.c"; 	}
                                    1-  685     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1-  686     ; exit point of _C3
                                    1-  688     ;***
                                    1-  689     ;  pBlock Stats: dbName = C
                                    1-  690     ;***
                                    1-  691     ;has an exit
                                    1-  692     ;functions called:
                                    1-  693     ;   _showNub
                                    1-  694     ;   _showNub
                                    1-  695     ;1 compiler assigned register :
                                    1-  696     ;   STK00
                                    1-  697     ;; Starting pCode block
                                    1-  698     .segment "code"; module=number, function=_B3
     0000                           1-  700     _B3:
                                    1-  701     ; 2 exit points
                                    1-  702     	.line	141, "number.c"; 	showNub(1,2);
     0000 2102                      1-  703     	MOVIA	0x02
     0001 00rr                      1-  704     	MOVAR	STK00
     0002 2101                      1-  705     	MOVIA	0x01
                                    1-  706     	MCALL	_showNub
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  707     	.line	142, "number.c"; 	}
                                    1-  708     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1-  709     ; exit point of _B3
                                    1-  711     ;***
                                    1-  712     ;  pBlock Stats: dbName = C
                                    1-  713     ;***
                                    1-  714     ;has an exit
                                    1-  715     ;functions called:
                                    1-  716     ;   _showNub
                                    1-  717     ;   _showNub
                                    1-  718     ;1 compiler assigned register :
                                    1-  719     ;   STK00
                                    1-  720     ;; Starting pCode block
                                    1-  721     .segment "code"; module=number, function=_A3
     0000                           1-  723     _A3:
                                    1-  724     ; 2 exit points
                                    1-  725     	.line	136, "number.c"; 	showNub(2,1);
     0000 2101                      1-  726     	MOVIA	0x01
     0001 00rr                      1-  727     	MOVAR	STK00
     0002 2102                      1-  728     	MOVIA	0x02
                                    1-  729     	MCALL	_showNub
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  730     	.line	137, "number.c"; 	}
                                    1-  731     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1-  732     ; exit point of _A3
                                    1-  734     ;***
                                    1-  735     ;  pBlock Stats: dbName = C
                                    1-  736     ;***
                                    1-  737     ;has an exit
                                    1-  738     ;functions called:
                                    1-  739     ;   _showNub
                                    1-  740     ;   _showNub
                                    1-  741     ;1 compiler assigned register :
                                    1-  742     ;   STK00
                                    1-  743     ;; Starting pCode block
                                    1-  744     .segment "code"; module=number, function=_G2
     0000                           1-  746     _G2:
                                    1-  747     ; 2 exit points
                                    1-  748     	.line	131, "number.c"; 	showNub(4,5);
     0000 2105                      1-  749     	MOVIA	0x05
     0001 00rr                      1-  750     	MOVAR	STK00
     0002 2104                      1-  751     	MOVIA	0x04
                                    1-  752     	MCALL	_showNub
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  753     	.line	132, "number.c"; 	}
                                    1-  754     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1-  755     ; exit point of _G2
                                    1-  757     ;***
                                    1-  758     ;  pBlock Stats: dbName = C
                                    1-  759     ;***
                                    1-  760     ;has an exit
                                    1-  761     ;functions called:
                                    1-  762     ;   _showNub
                                    1-  763     ;   _showNub
                                    1-  764     ;1 compiler assigned register :
                                    1-  765     ;   STK00
                                    1-  766     ;; Starting pCode block
                                    1-  767     .segment "code"; module=number, function=_F2
     0000                           1-  769     _F2:
                                    1-  770     ; 2 exit points
                                    1-  771     	.line	126, "number.c"; 	showNub(3,5);
     0000 2105                      1-  772     	MOVIA	0x05
     0001 00rr                      1-  773     	MOVAR	STK00
     0002 2103                      1-  774     	MOVIA	0x03
                                    1-  775     	MCALL	_showNub
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  776     	.line	127, "number.c"; 	}
                                    1-  777     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1-  778     ; exit point of _F2
                                    1-  780     ;***
                                    1-  781     ;  pBlock Stats: dbName = C
                                    1-  782     ;***
                                    1-  783     ;has an exit
                                    1-  784     ;functions called:
                                    1-  785     ;   _showNub
                                    1-  786     ;   _showNub
                                    1-  787     ;1 compiler assigned register :
                                    1-  788     ;   STK00
                                    1-  789     ;; Starting pCode block
                                    1-  790     .segment "code"; module=number, function=_E2
     0000                           1-  792     _E2:
                                    1-  793     ; 2 exit points
                                    1-  794     	.line	121, "number.c"; 	showNub(2,5);
     0000 2105                      1-  795     	MOVIA	0x05
     0001 00rr                      1-  796     	MOVAR	STK00
     0002 2102                      1-  797     	MOVIA	0x02
                                    1-  798     	MCALL	_showNub
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  799     	.line	122, "number.c"; 	}
                                    1-  800     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1-  801     ; exit point of _E2
                                    1-  803     ;***
                                    1-  804     ;  pBlock Stats: dbName = C
                                    1-  805     ;***
                                    1-  806     ;has an exit
                                    1-  807     ;functions called:
                                    1-  808     ;   _showNub
                                    1-  809     ;   _showNub
                                    1-  810     ;1 compiler assigned register :
                                    1-  811     ;   STK00
                                    1-  812     ;; Starting pCode block
                                    1-  813     .segment "code"; module=number, function=_D2
     0000                           1-  815     _D2:
                                    1-  816     ; 2 exit points
                                    1-  817     	.line	116, "number.c"; 	showNub(2,4);
     0000 2104                      1-  818     	MOVIA	0x04
     0001 00rr                      1-  819     	MOVAR	STK00
     0002 2102                      1-  820     	MOVIA	0x02
                                    1-  821     	MCALL	_showNub
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  822     	.line	117, "number.c"; 	}
                                    1-  823     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1-  824     ; exit point of _D2
                                    1-  826     ;***
                                    1-  827     ;  pBlock Stats: dbName = C
                                    1-  828     ;***
                                    1-  829     ;has an exit
                                    1-  830     ;functions called:
                                    1-  831     ;   _showNub
                                    1-  832     ;   _showNub
                                    1-  833     ;1 compiler assigned register :
                                    1-  834     ;   STK00
                                    1-  835     ;; Starting pCode block
                                    1-  836     .segment "code"; module=number, function=_C2
     0000                           1-  838     _C2:
                                    1-  839     ; 2 exit points
                                    1-  840     	.line	111, "number.c"; 	showNub(3,4);
     0000 2104                      1-  841     	MOVIA	0x04
     0001 00rr                      1-  842     	MOVAR	STK00
     0002 2103                      1-  843     	MOVIA	0x03
                                    1-  844     	MCALL	_showNub
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  845     	.line	112, "number.c"; 	}
                                    1-  846     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1-  847     ; exit point of _C2
                                    1-  849     ;***
                                    1-  850     ;  pBlock Stats: dbName = C
                                    1-  851     ;***
                                    1-  852     ;has an exit
                                    1-  853     ;functions called:
                                    1-  854     ;   _showNub
                                    1-  855     ;   _showNub
                                    1-  856     ;1 compiler assigned register :
                                    1-  857     ;   STK00
                                    1-  858     ;; Starting pCode block
                                    1-  859     .segment "code"; module=number, function=_B2
     0000                           1-  861     _B2:
                                    1-  862     ; 2 exit points
                                    1-  863     	.line	106, "number.c"; 	showNub(2,3);
     0000 2103                      1-  864     	MOVIA	0x03
     0001 00rr                      1-  865     	MOVAR	STK00
     0002 2102                      1-  866     	MOVIA	0x02
                                    1-  867     	MCALL	_showNub
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  868     	.line	107, "number.c"; 	}
                                    1-  869     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1-  870     ; exit point of _B2
                                    1-  872     ;***
                                    1-  873     ;  pBlock Stats: dbName = C
                                    1-  874     ;***
                                    1-  875     ;has an exit
                                    1-  876     ;functions called:
                                    1-  877     ;   _showNub
                                    1-  878     ;   _showNub
                                    1-  879     ;1 compiler assigned register :
                                    1-  880     ;   STK00
                                    1-  881     ;; Starting pCode block
                                    1-  882     .segment "code"; module=number, function=_A2
     0000                           1-  884     _A2:
                                    1-  885     ; 2 exit points
                                    1-  886     	.line	101, "number.c"; 	showNub(3,2);
     0000 2102                      1-  887     	MOVIA	0x02
     0001 00rr                      1-  888     	MOVAR	STK00
     0002 2103                      1-  889     	MOVIA	0x03
                                    1-  890     	MCALL	_showNub
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  891     	.line	102, "number.c"; 	}
                                    1-  892     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1-  893     ; exit point of _A2
                                    1-  895     ;***
                                    1-  896     ;  pBlock Stats: dbName = C
                                    1-  897     ;***
                                    1-  898     ;has an exit
                                    1-  899     ;functions called:
                                    1-  900     ;   _showNub
                                    1-  901     ;   _showNub
                                    1-  902     ;1 compiler assigned register :
                                    1-  903     ;   STK00
                                    1-  904     ;; Starting pCode block
                                    1-  905     .segment "code"; module=number, function=_showKeyLed
     0000                           1-  907     _showKeyLed:
                                    1-  908     ; 2 exit points
                                    1-  909     	.line	95, "number.c"; 	showNub(5,1);
     0000 2101                      1-  910     	MOVIA	0x01
     0001 00rr                      1-  911     	MOVAR	STK00
     0002 2105                      1-  912     	MOVIA	0x05
                                    1-  913     	MCALL	_showNub
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  914     	.line	96, "number.c"; 	}
                                    1-  915     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1-  916     ; exit point of _showKeyLed
                                    1-  918     ;***
                                    1-  919     ;  pBlock Stats: dbName = C
                                    1-  920     ;***
                                    1-  921     ;has an exit
                                    1-  922     ;functions called:
                                    1-  923     ;   _A3
                                    1-  924     ;   _B3
                                    1-  925     ;   _C3
                                    1-  926     ;   _D3
                                    1-  927     ;   _E3
                                    1-  928     ;   _F3
                                    1-  929     ;   _G3
                                    1-  930     ;   _A3
                                    1-  931     ;   _B3
                                    1-  932     ;   _C3
                                    1-  933     ;   _D3
                                    1-  934     ;   _E3
                                    1-  935     ;   _F3
                                    1-  936     ;   _G3
                                    1-  937     ;1 compiler assigned register :
                                    1-  938     ;   r0x1008
                                    1-  939     ;; Starting pCode block
                                    1-  940     .segment "code"; module=number, function=_showNubGewei2
                                    1-  942     ;local variable name mapping:
     0000                           1-  944     _showNubGewei2:
                                    1-  945     ; 2 exit points
                                    1-  946     	.line	64, "number.c"; 	void showNubGewei2(char index)
                                    1-  947     	BANKSEL	r0x1008
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  948     	MOVAR	r0x1008
                                    1-  949     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1-  950     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1-  951     	.line	66, "number.c"; 	switch(index)
     0002 2107                      1-  952     	MOVIA	0x07
     0003 04rr                      1-  953     	SUBAR	r0x1008,W
     0004 0C03                      1-  954     	BTRSC	STATUS,0
                                    1-  955     	MGOTO	_00184_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
     0006 21rr                      1-  956     	MOVIA	((_00190_DS_ >> 8) & 0xff)
     0007 008A                      1-  957     	MOVAR	PCHBUF
     0008 01rr                      1-  958     	MOVR	r0x1008,W
     0009 25rr                      1-  959     	ADDIA	_00190_DS_
     000A 0C03                      1-  960     	BTRSC	STATUS,0
     000B 058A                      1-  961     	INCR	PCHBUF,F
     000C 0082                      1-  962     	MOVAR	PCL
     000D                           1-  963     _00190_DS_:
                                    1-  964     	MGOTO	_00176_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  965     	MGOTO	_00177_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  966     	MGOTO	_00178_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  967     	MGOTO	_00179_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  968     	MGOTO	_00180_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  969     	MGOTO	_00181_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  970     	MGOTO	_00182_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
     0014                           1-  971     _00176_DS_:
                                    1-  972     	.line	69, "number.c"; 	A3();
                                    1-  973     	MCALL	_A3
     0014 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  974     	.line	70, "number.c"; 	break;
                                    1-  975     	MGOTO	_00184_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
     0016                           1-  976     _00177_DS_:
                                    1-  977     	.line	72, "number.c"; 	B3();
                                    1-  978     	MCALL	_B3
     0016 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  979     	.line	73, "number.c"; 	break;
                                    1-  980     	MGOTO	_00184_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
     0018                           1-  981     _00178_DS_:
                                    1-  982     	.line	75, "number.c"; 	C3();
                                    1-  983     	MCALL	_C3
     0018 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  984     	.line	76, "number.c"; 	break;
                                    1-  985     	MGOTO	_00184_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
     001A                           1-  986     _00179_DS_:
                                    1-  987     	.line	78, "number.c"; 	D3();
                                    1-  988     	MCALL	_D3
     001A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  989     	.line	79, "number.c"; 	break;
                                    1-  990     	MGOTO	_00184_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
     001C                           1-  991     _00180_DS_:
                                    1-  992     	.line	81, "number.c"; 	E3();
                                    1-  993     	MCALL	_E3
     001C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  994     	.line	82, "number.c"; 	break;
                                    1-  995     	MGOTO	_00184_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
     001E                           1-  996     _00181_DS_:
                                    1-  997     	.line	84, "number.c"; 	F3();
                                    1-  998     	MCALL	_F3
     001E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  999     	.line	85, "number.c"; 	break;
                                    1- 1000     	MGOTO	_00184_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1- 1001     _00182_DS_:
                                    1- 1002     	.line	87, "number.c"; 	G3();
                                    1- 1003     	MCALL	_G3
     0020 2rrr                      3-   66 m1      LCALL rom_address
     0021                           1- 1004     _00184_DS_:
                                    1- 1005     	.line	90, "number.c"; 	}
                                    1- 1006     	RETURN	
     0021 0010                      3-   40 m1      ret
                                    1- 1007     ; exit point of _showNubGewei2
                                    1- 1009     ;***
                                    1- 1010     ;  pBlock Stats: dbName = C
                                    1- 1011     ;***
                                    1- 1012     ;has an exit
                                    1- 1013     ;functions called:
                                    1- 1014     ;   _showNubGewei2
                                    1- 1015     ;   _setInput
                                    1- 1016     ;   _showNubGewei2
                                    1- 1017     ;   _setInput
                                    1- 1018     ;3 compiler assigned registers:
                                    1- 1019     ;   r0x1009
                                    1- 1020     ;   r0x100A
                                    1- 1021     ;   r0x100B
                                    1- 1022     ;; Starting pCode block
                                    1- 1023     .segment "code"; module=number, function=_showNubGewei
                                    1- 1025     ;local variable name mapping:
     0000                           1- 1028     _showNubGewei:
                                    1- 1029     ; 2 exit points
                                    1- 1030     	.line	52, "number.c"; 	void showNubGewei(char num)
                                    1- 1031     	BANKSEL	r0x1009
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1032     	MOVAR	r0x1009
                                    1- 1033     	.line	54, "number.c"; 	for(char i=0;i<7;i++)
                                    1- 1034     	BANKSEL	r0x100A
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1035     	CLRR	r0x100A
                                    1- 1036     ;;unsigned compare: left < lit (0x7=7), size=1
     0004                           1- 1037     _00155_DS_:
     0004 2107                      1- 1038     	MOVIA	0x07
                                    1- 1039     	BANKSEL	r0x100A
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 04rr                      1- 1040     	SUBAR	r0x100A,W
     0007 0C03                      1- 1041     	BTRSC	STATUS,0
                                    1- 1042     	MGOTO	_00157_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1043     	.line	56, "number.c"; 	if((num >> i) & 0x01)
                                    1- 1044     	BANKSEL	r0x1009
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 01rr                      1- 1045     	MOVR	r0x1009,W
                                    1- 1046     	BANKSEL	r0x100B
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1- 1047     	MOVAR	r0x100B
                                    1- 1048     	BANKSEL	r0x100A
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 1049     	MOVR	r0x100A,W
     000F 2700                      1- 1050     	SUBIA	0x00
     0010 0D03                      1- 1051     	BTRSC	STATUS,2
                                    1- 1052     	MGOTO	_00171_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
     0012                           1- 1053     _00170_DS_:
                                    1- 1054     	BANKSEL	r0x100B
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 13rr                      1- 1055     	RRR	r0x100B,F
     0014 2501                      1- 1056     	ADDIA	0x01
     0015 0803                      1- 1057     	BTRSS	STATUS,0
                                    1- 1058     	MGOTO	_00170_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
     0017                           1- 1059     _00171_DS_:
                                    1- 1060     	BANKSEL	r0x100B
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 08rr                      1- 1061     	BTRSS	r0x100B,0
                                    1- 1062     	MGOTO	_00151_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1063     	.line	57, "number.c"; 	showNubGewei2(i);
                                    1- 1064     	BANKSEL	r0x100A
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 01rr                      1- 1065     	MOVR	r0x100A,W
                                    1- 1066     	MCALL	_showNubGewei2
     001C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1067     	MGOTO	_00156_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
     001E                           1- 1068     _00151_DS_:
                                    1- 1069     	.line	59, "number.c"; 	setInput();
                                    1- 1070     	MCALL	_setInput
     001E 2rrr                      3-   66 m1      LCALL rom_address
     001F                           1- 1071     _00156_DS_:
                                    1- 1072     	.line	54, "number.c"; 	for(char i=0;i<7;i++)
                                    1- 1073     	BANKSEL	r0x100A
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1- 1074     	INCR	r0x100A,F
                                    1- 1075     	MGOTO	_00155_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
     0022                           1- 1076     _00157_DS_:
                                    1- 1077     	.line	61, "number.c"; 	}
                                    1- 1078     	RETURN	
     0022 0010                      3-   40 m1      ret
                                    1- 1079     ; exit point of _showNubGewei
                                    1- 1081     ;***
                                    1- 1082     ;  pBlock Stats: dbName = C
                                    1- 1083     ;***
                                    1- 1084     ;has an exit
                                    1- 1085     ;functions called:
                                    1- 1086     ;   _A2
                                    1- 1087     ;   _B2
                                    1- 1088     ;   _C2
                                    1- 1089     ;   _D2
                                    1- 1090     ;   _E2
                                    1- 1091     ;   _F2
                                    1- 1092     ;   _G2
                                    1- 1093     ;   _A2
                                    1- 1094     ;   _B2
                                    1- 1095     ;   _C2
                                    1- 1096     ;   _D2
                                    1- 1097     ;   _E2
                                    1- 1098     ;   _F2
                                    1- 1099     ;   _G2
                                    1- 1100     ;1 compiler assigned register :
                                    1- 1101     ;   r0x100C
                                    1- 1102     ;; Starting pCode block
                                    1- 1103     .segment "code"; module=number, function=_showNubShiwei2
                                    1- 1105     ;local variable name mapping:
     0000                           1- 1107     _showNubShiwei2:
                                    1- 1108     ; 2 exit points
                                    1- 1109     	.line	24, "number.c"; 	void showNubShiwei2(char index)
                                    1- 1110     	BANKSEL	r0x100C
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1111     	MOVAR	r0x100C
                                    1- 1112     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 1113     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 1114     	.line	26, "number.c"; 	switch(index)
     0002 2107                      1- 1115     	MOVIA	0x07
     0003 04rr                      1- 1116     	SUBAR	r0x100C,W
     0004 0C03                      1- 1117     	BTRSC	STATUS,0
                                    1- 1118     	MGOTO	_00139_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
     0006 21rr                      1- 1119     	MOVIA	((_00145_DS_ >> 8) & 0xff)
     0007 008A                      1- 1120     	MOVAR	PCHBUF
     0008 01rr                      1- 1121     	MOVR	r0x100C,W
     0009 25rr                      1- 1122     	ADDIA	_00145_DS_
     000A 0C03                      1- 1123     	BTRSC	STATUS,0
     000B 058A                      1- 1124     	INCR	PCHBUF,F
     000C 0082                      1- 1125     	MOVAR	PCL
     000D                           1- 1126     _00145_DS_:
                                    1- 1127     	MGOTO	_00131_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1128     	MGOTO	_00132_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1129     	MGOTO	_00133_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1130     	MGOTO	_00134_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1131     	MGOTO	_00135_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1132     	MGOTO	_00136_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1133     	MGOTO	_00137_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
     0014                           1- 1134     _00131_DS_:
                                    1- 1135     	.line	29, "number.c"; 	A2();
                                    1- 1136     	MCALL	_A2
     0014 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1137     	.line	30, "number.c"; 	break;
                                    1- 1138     	MGOTO	_00139_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
     0016                           1- 1139     _00132_DS_:
                                    1- 1140     	.line	32, "number.c"; 	B2();
                                    1- 1141     	MCALL	_B2
     0016 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1142     	.line	33, "number.c"; 	break;
                                    1- 1143     	MGOTO	_00139_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
     0018                           1- 1144     _00133_DS_:
                                    1- 1145     	.line	35, "number.c"; 	C2();
                                    1- 1146     	MCALL	_C2
     0018 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1147     	.line	36, "number.c"; 	break;
                                    1- 1148     	MGOTO	_00139_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
     001A                           1- 1149     _00134_DS_:
                                    1- 1150     	.line	38, "number.c"; 	D2();
                                    1- 1151     	MCALL	_D2
     001A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1152     	.line	39, "number.c"; 	break;
                                    1- 1153     	MGOTO	_00139_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
     001C                           1- 1154     _00135_DS_:
                                    1- 1155     	.line	41, "number.c"; 	E2();
                                    1- 1156     	MCALL	_E2
     001C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1157     	.line	42, "number.c"; 	break;
                                    1- 1158     	MGOTO	_00139_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
     001E                           1- 1159     _00136_DS_:
                                    1- 1160     	.line	44, "number.c"; 	F2();
                                    1- 1161     	MCALL	_F2
     001E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1162     	.line	45, "number.c"; 	break;
                                    1- 1163     	MGOTO	_00139_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1- 1164     _00137_DS_:
                                    1- 1165     	.line	47, "number.c"; 	G2();
                                    1- 1166     	MCALL	_G2
     0020 2rrr                      3-   66 m1      LCALL rom_address
     0021                           1- 1167     _00139_DS_:
                                    1- 1168     	.line	50, "number.c"; 	}
                                    1- 1169     	RETURN	
     0021 0010                      3-   40 m1      ret
                                    1- 1170     ; exit point of _showNubShiwei2
                                    1- 1172     ;***
                                    1- 1173     ;  pBlock Stats: dbName = C
                                    1- 1174     ;***
                                    1- 1175     ;has an exit
                                    1- 1176     ;functions called:
                                    1- 1177     ;   _showNubShiwei2
                                    1- 1178     ;   _setInput
                                    1- 1179     ;   _showNubShiwei2
                                    1- 1180     ;   _setInput
                                    1- 1181     ;3 compiler assigned registers:
                                    1- 1182     ;   r0x100D
                                    1- 1183     ;   r0x100E
                                    1- 1184     ;   r0x100F
                                    1- 1185     ;; Starting pCode block
                                    1- 1186     .segment "code"; module=number, function=_showNubShiwei
                                    1- 1188     ;local variable name mapping:
     0000                           1- 1191     _showNubShiwei:
                                    1- 1192     ; 2 exit points
                                    1- 1193     	.line	12, "number.c"; 	void showNubShiwei(char num)
                                    1- 1194     	BANKSEL	r0x100D
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1195     	MOVAR	r0x100D
                                    1- 1196     	.line	14, "number.c"; 	for(char i=0;i<7;i++)
                                    1- 1197     	BANKSEL	r0x100E
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1198     	CLRR	r0x100E
                                    1- 1199     ;;unsigned compare: left < lit (0x7=7), size=1
     0004                           1- 1200     _00110_DS_:
     0004 2107                      1- 1201     	MOVIA	0x07
                                    1- 1202     	BANKSEL	r0x100E
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 04rr                      1- 1203     	SUBAR	r0x100E,W
     0007 0C03                      1- 1204     	BTRSC	STATUS,0
                                    1- 1205     	MGOTO	_00112_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1206     	.line	16, "number.c"; 	if((num >> i) & 0x01)
                                    1- 1207     	BANKSEL	r0x100D
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 01rr                      1- 1208     	MOVR	r0x100D,W
                                    1- 1209     	BANKSEL	r0x100F
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1- 1210     	MOVAR	r0x100F
                                    1- 1211     	BANKSEL	r0x100E
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 1212     	MOVR	r0x100E,W
     000F 2700                      1- 1213     	SUBIA	0x00
     0010 0D03                      1- 1214     	BTRSC	STATUS,2
                                    1- 1215     	MGOTO	_00126_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
     0012                           1- 1216     _00125_DS_:
                                    1- 1217     	BANKSEL	r0x100F
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 13rr                      1- 1218     	RRR	r0x100F,F
     0014 2501                      1- 1219     	ADDIA	0x01
     0015 0803                      1- 1220     	BTRSS	STATUS,0
                                    1- 1221     	MGOTO	_00125_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
     0017                           1- 1222     _00126_DS_:
                                    1- 1223     	BANKSEL	r0x100F
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 08rr                      1- 1224     	BTRSS	r0x100F,0
                                    1- 1225     	MGOTO	_00106_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1226     	.line	17, "number.c"; 	showNubShiwei2(i);
                                    1- 1227     	BANKSEL	r0x100E
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 01rr                      1- 1228     	MOVR	r0x100E,W
                                    1- 1229     	MCALL	_showNubShiwei2
     001C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1230     	MGOTO	_00111_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
     001E                           1- 1231     _00106_DS_:
                                    1- 1232     	.line	19, "number.c"; 	setInput();
                                    1- 1233     	MCALL	_setInput
     001E 2rrr                      3-   66 m1      LCALL rom_address
     001F                           1- 1234     _00111_DS_:
                                    1- 1235     	.line	14, "number.c"; 	for(char i=0;i<7;i++)
                                    1- 1236     	BANKSEL	r0x100E
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1- 1237     	INCR	r0x100E,F
                                    1- 1238     	MGOTO	_00110_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
     0022                           1- 1239     _00112_DS_:
                                    1- 1240     	.line	21, "number.c"; 	}
                                    1- 1241     	RETURN	
     0022 0010                      3-   40 m1      ret
                                    1- 1242     ; exit point of _showNubShiwei
                                    1- 1245     ;	code size estimation:
                                    1- 1246     ;	  355+   42 =   397 instructions (  878 byte)
                                    1- 1248     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/number.s
002 ny8b062d.inc
003 common.inc
004 number.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
