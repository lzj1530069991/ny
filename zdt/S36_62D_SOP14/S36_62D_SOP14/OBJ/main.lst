
                    Nyquest Technology Co., Ltd.

NYASM 2.30

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_fgCtr
                                    1-   18     	extern	_LedCtr2
                                    1-   19     	extern	_checkInAD
                                    1-   20     	extern	_PORTAbits
                                    1-   21     	extern	_PORTBbits
                                    1-   22     	extern	_PCONbits
                                    1-   23     	extern	_BWUCONbits
                                    1-   24     	extern	_ABPLCONbits
                                    1-   25     	extern	_BPHCONbits
                                    1-   26     	extern	_INTEbits
                                    1-   27     	extern	_INTFbits
                                    1-   28     	extern	_ADMDbits
                                    1-   29     	extern	_ADRbits
                                    1-   30     	extern	_ADVREFHbits
                                    1-   31     	extern	_ADCRbits
                                    1-   32     	extern	_AWUCONbits
                                    1-   33     	extern	_PACONbits
                                    1-   34     	extern	_INTEDGbits
                                    1-   35     	extern	_ANAENbits
                                    1-   36     	extern	_RFCbits
                                    1-   37     	extern	_INTE2bits
                                    1-   38     	extern	_INDF
                                    1-   39     	extern	_TMR0
                                    1-   40     	extern	_PCL
                                    1-   41     	extern	_STATUS
                                    1-   42     	extern	_FSR
                                    1-   43     	extern	_PORTA
                                    1-   44     	extern	_PORTB
                                    1-   45     	extern	_PCON
                                    1-   46     	extern	_BWUCON
                                    1-   47     	extern	_PCHBUF
                                    1-   48     	extern	_ABPLCON
                                    1-   49     	extern	_BPHCON
                                    1-   50     	extern	_INTE
                                    1-   51     	extern	_INTF
                                    1-   52     	extern	_ADMD
                                    1-   53     	extern	_ADR
                                    1-   54     	extern	_ADD
                                    1-   55     	extern	_ADVREFH
                                    1-   56     	extern	_ADCR
                                    1-   57     	extern	_AWUCON
                                    1-   58     	extern	_PACON
                                    1-   59     	extern	_INTEDG
                                    1-   60     	extern	_TMRH
                                    1-   61     	extern	_ANAEN
                                    1-   62     	extern	_RFC
                                    1-   63     	extern	_TM3RH
                                    1-   64     	extern	_INTE2
                                    1-   65     	extern	_TMR1
                                    1-   66     	extern	_T1CR1
                                    1-   67     	extern	_T1CR2
                                    1-   68     	extern	_PWM1DUTY
                                    1-   69     	extern	_PS1CV
                                    1-   70     	extern	_BZ1CR
                                    1-   71     	extern	_IRCR
                                    1-   72     	extern	_TBHP
                                    1-   73     	extern	_TBHD
                                    1-   74     	extern	_TMR2
                                    1-   75     	extern	_T2CR1
                                    1-   76     	extern	_T2CR2
                                    1-   77     	extern	_PWM2DUTY
                                    1-   78     	extern	_PS2CV
                                    1-   79     	extern	_BZ2CR
                                    1-   80     	extern	_OSCCR
                                    1-   81     	extern	_TMR3
                                    1-   82     	extern	_T3CR1
                                    1-   83     	extern	_T3CR2
                                    1-   84     	extern	_PWM3DUTY
                                    1-   85     	extern	_PS3CV
                                    1-   86     	extern	_BZ3CR
                                    1-   87     	extern	_IOSTA
                                    1-   88     	extern	_IOSTB
                                    1-   89     	extern	_APHCON
                                    1-   90     	extern	_PS0CV
                                    1-   91     	extern	_BODCON
                                    1-   92     	extern	_CMPCR
                                    1-   93     	extern	_PCON1
                                    1-   94     	extern	_T0MD
                                    1-   95     	extern	___sdcc_saved_fsr
                                    1-   96     	extern	___sdcc_saved_stk00
                                    1-   97     	extern	___sdcc_saved_stk01
                                    1-   98     	extern	__nyc_ny8_startup
                                    1-   99     ;--------------------------------------------------------
                                    1-  100     ; global declarations
                                    1-  101     ;--------------------------------------------------------
                                    1-  102     	extern	_F_wait_eoc
                                    1-  103     	extern	_F_AIN2_Convert
                                    1-  104     	extern	_F_AIN3_Convert
                                    1-  105     	extern	_F_AIN4_Convert
                                    1-  106     	extern	_checkOutA
                                    1-  107     	extern	_checkBatAD
                                    1-  108     	extern	_initAD
                                    1-  109     	extern	_delay
                                    1-  110     	extern	_chrgCtr
                                    1-  111     	extern	_keyRead
                                    1-  112     	extern	_gotoSleep
                                    1-  113     	extern	_pwmStop
                                    1-  114     	extern	_pwmInit
                                    1-  115     	extern	_pwm1Stop
                                    1-  116     	extern	_pwm1Init
                                    1-  117     	extern	_LED8ON
                                    1-  118     	extern	_LED7ON
                                    1-  119     	extern	_LED6ON
                                    1-  120     	extern	_LED5ON
                                    1-  121     	extern	_LED4ON
                                    1-  122     	extern	_LED3ON
                                    1-  123     	extern	_LED2ON
                                    1-  124     	extern	_LED1ON
                                    1-  125     	extern	_LedInput
                                    1-  126     	extern	_ledShow
                                    1-  127     	extern	_initSys
                                    1-  128     	extern	_powerOff
                                    1-  129     	extern	_keyCtr
                                    1-  130     	extern	_isr
                                    1-  131     	extern	_main
                                    1-  132     	extern	_Status
                                    1-  133     	extern	_duty
                                    1-  134     	extern	_intCount
                                    1-  135     	extern	_count500ms
                                    1-  136     	extern	_keyCount
                                    1-  137     	extern	_workStep
                                    1-  138     	extern	_ledStep
                                    1-  139     	extern	_fgCount
                                    1-  140     	extern	_fgPRD
                                    1-  141     	extern	_preFG
                                    1-  142     	extern	_maxDuty
                                    1-  143     	extern	_pwStep
                                    1-  144     	extern	_R_AIN4_DATA
                                    1-  145     	extern	_R_AIN4_DATA_LB
                                    1-  146     	extern	_R_AIN3_DATA
                                    1-  147     	extern	_R_AIN3_DATA_LB
                                    1-  148     	extern	_R_AIN2_DATA
                                    1-  149     	extern	_R_AIN2_DATA_LB
                                    1-  150     	extern	_chrgTime
                                    1-  151     	extern	_startStep
                                    1-  152     	extern	_sleepTime
                                    1-  153     	extern	_count200ms
                                    1-  154     	extern	_count1s
                                    1-  155     	extern	_count900s
                                    1-  156     	extern	_lowBatTime
                                    1-  157     	extern	_ledTime
                                    1-  158     	extern	_overCount
                                    1-  159     	extern	_chrgCount
                                    1-  160     	extern	_ledLightTime
                                    1-  161     	extern	_currentDuty
                                    1-  162     	extern	_fullCount
                                    1-  163     	extern	_shanshuoTime
                                    1-  164     	extern	_firstTime
                                    1-  165     	extern	_tempDuty
                                    1-  166     	extern	_lowCount
                                    1-  167     	extern	_longPressFlag
                                    1-  168     	extern	_IntFlag
                                    1-  169     	extern	_chrgFlag
                                    1-  170     	extern	_redLedFlag
                                    1-  171     	extern	_tempLedStep
                                    1-  172     	extern	_count5S
                                    1-  173     	extern	_ledDeadTime
                                    1-  174     	extern	_lockLedStep
                                    1-  175     	extern	_shandengTime
                                    1-  176     	extern	_lowBat
                                    1-  177     	extern	_lockStart
                                    1-  178     	extern	_fullLock
                                    1-  179     	extern	_fullLockCount
                                    1-  180     	extern	_ledCount
                                    1-  181     	extern	_maxOut
                                    1-  182     	extern	_debug
                                    1-  184     	extern PSAVE
                                    1-  185     	extern SSAVE
                                    1-  186     	extern WSAVE
                                    1-  187     	extern STK02
                                    1-  188     	extern STK01
                                    1-  189     	extern STK00
                                    1-  191     .segment "uninit", 0x20000040
 20000040                           1-  192     PSAVE:
                                    1-  193     	.res 1
 20000041                           1-  194     SSAVE:
                                    1-  195     	.res 1
 20000042                           1-  196     WSAVE:
                                    1-  197     	.res 1
 20000043                           1-  198     STK02:
                                    1-  199     	.res 1
 20000044                           1-  200     STK01:
                                    1-  201     	.res 1
 20000045                           1-  202     STK00:
                                    1-  203     	.res 1
                                    1-  205     ;--------------------------------------------------------
                                    1-  206     ; global definitions
                                    1-  207     ;--------------------------------------------------------
                                    1-  208     .segment "uninit"
     0000                           1-  209     _R_AIN4_DATA:
                                    1-  210     	.res	2
                                    1-  213     .segment "uninit"
     0000                           1-  214     _R_AIN4_DATA_LB:
                                    1-  215     	.res	1
                                    1-  218     .segment "uninit"
     0000                           1-  219     _R_AIN3_DATA:
                                    1-  220     	.res	2
                                    1-  223     .segment "uninit"
     0000                           1-  224     _R_AIN3_DATA_LB:
                                    1-  225     	.res	1
                                    1-  228     .segment "uninit"
     0000                           1-  229     _R_AIN2_DATA:
                                    1-  230     	.res	2
                                    1-  233     .segment "uninit"
     0000                           1-  234     _R_AIN2_DATA_LB:
                                    1-  235     	.res	1
                                    1-  238     ;--------------------------------------------------------
                                    1-  239     ; absolute symbol definitions
                                    1-  240     ;--------------------------------------------------------
                                    1-  241     ;--------------------------------------------------------
                                    1-  242     ; compiler-defined variables
                                    1-  243     ;--------------------------------------------------------
                                    1-  244     .segment "uninit"
     0000                           1-  245     r0x1065:
                                    1-  246     	.res	1
                                    1-  247     .segment "uninit"
     0000                           1-  248     r0x105A:
                                    1-  249     	.res	1
                                    1-  250     .segment "uninit"
     0000                           1-  251     r0x1064:
                                    1-  252     	.res	1
                                    1-  253     .segment "uninit"
     0000                           1-  254     r0x1063:
                                    1-  255     	.res	1
                                    1-  256     .segment "uninit"
     0000                           1-  257     r0x1062:
                                    1-  258     	.res	1
                                    1-  259     .segment "uninit"
     0000                           1-  260     r0x1061:
                                    1-  261     	.res	1
                                    1-  262     .segment "uninit"
     0000                           1-  263     r0x1060:
                                    1-  264     	.res	1
                                    1-  265     .segment "uninit"
     0000                           1-  266     r0x105F:
                                    1-  267     	.res	1
                                    1-  268     .segment "uninit"
     0000                           1-  269     r0x105E:
                                    1-  270     	.res	1
                                    1-  271     .segment "uninit"
     0000                           1-  272     r0x105D:
                                    1-  273     	.res	1
                                    1-  274     .segment "uninit"
     0000                           1-  275     r0x105C:
                                    1-  276     	.res	1
                                    1-  277     .segment "uninit"
     0000                           1-  278     r0x105B:
                                    1-  279     	.res	1
                                    1-  280     .segment "uninit"
     0000                           1-  281     r0x1059:
                                    1-  282     	.res	1
                                    1-  283     .segment "uninit"
     0000                           1-  284     r0x1054:
                                    1-  285     	.res	1
                                    1-  286     .segment "uninit"
     0000                           1-  287     r0x1055:
                                    1-  288     	.res	1
                                    1-  289     .segment "uninit"
     0000                           1-  290     r0x1056:
                                    1-  291     	.res	1
                                    1-  292     .segment "uninit"
     0000                           1-  293     r0x1058:
                                    1-  294     	.res	1
                                    1-  295     .segment "uninit"
     0000                           1-  296     r0x1038:
                                    1-  297     	.res	1
                                    1-  298     .segment "uninit"
     0000                           1-  299     r0x1039:
                                    1-  300     	.res	1
                                    1-  301     .segment "uninit"
     0000                           1-  302     r0x1052:
                                    1-  303     	.res	1
                                    1-  304     .segment "uninit"
     0000                           1-  305     r0x1053:
                                    1-  306     	.res	1
                                    1-  307     .segment "uninit"
     0000                           1-  308     r0x104C:
                                    1-  309     	.res	1
                                    1-  310     .segment "uninit"
     0000                           1-  311     r0x104D:
                                    1-  312     	.res	1
                                    1-  313     .segment "uninit"
     0000                           1-  314     r0x104E:
                                    1-  315     	.res	1
                                    1-  316     .segment "uninit"
     0000                           1-  317     r0x104F:
                                    1-  318     	.res	1
                                    1-  319     .segment "uninit"
     0000                           1-  320     r0x1046:
                                    1-  321     	.res	1
                                    1-  322     .segment "uninit"
     0000                           1-  323     r0x1047:
                                    1-  324     	.res	1
                                    1-  325     .segment "uninit"
     0000                           1-  326     r0x1048:
                                    1-  327     	.res	1
                                    1-  328     .segment "uninit"
     0000                           1-  329     r0x104B:
                                    1-  330     	.res	1
                                    1-  331     .segment "uninit"
     0000                           1-  332     r0x1040:
                                    1-  333     	.res	1
                                    1-  334     .segment "uninit"
     0000                           1-  335     r0x1041:
                                    1-  336     	.res	1
                                    1-  337     .segment "uninit"
     0000                           1-  338     r0x1042:
                                    1-  339     	.res	1
                                    1-  340     .segment "uninit"
     0000                           1-  341     r0x1045:
                                    1-  342     	.res	1
                                    1-  343     .segment "uninit"
     0000                           1-  344     r0x103A:
                                    1-  345     	.res	1
                                    1-  346     .segment "uninit"
     0000                           1-  347     r0x103B:
                                    1-  348     	.res	1
                                    1-  349     .segment "uninit"
     0000                           1-  350     r0x103C:
                                    1-  351     	.res	1
                                    1-  352     .segment "uninit"
     0000                           1-  353     r0x103F:
                                    1-  354     	.res	1
                                    1-  355     ;--------------------------------------------------------
                                    1-  356     ; initialized data
                                    1-  357     ;--------------------------------------------------------
                                    1-  359     .segment "idata"
     0000                           1-  360     _Status:
     0000 0000                      1-  361     	dw	0x00
                                    1-  365     .segment "idata"
     0000                           1-  366     _duty:
     0000 0000 0000                 1-  367     	dw	0x00, 0x00
                                    1-  371     .segment "idata"
     0000                           1-  372     _intCount:
     0000 0000                      1-  373     	dw	0x00
                                    1-  377     .segment "idata"
     0000                           1-  378     _count500ms:
     0000 0000                      1-  379     	dw	0x00
                                    1-  383     .segment "idata"
     0000                           1-  384     _keyCount:
     0000 0000                      1-  385     	dw	0x00
                                    1-  389     .segment "idata"
     0000                           1-  390     _workStep:
     0000 0000                      1-  391     	dw	0x00
                                    1-  395     .segment "idata"
     0000                           1-  396     _ledStep:
     0000 0000                      1-  397     	dw	0x00
                                    1-  401     .segment "idata"
     0000                           1-  402     _fgCount:
     0000 0000 0000                 1-  403     	dw	0x00, 0x00
                                    1-  407     .segment "idata"
     0000                           1-  408     _fgPRD:
     0000 0000 0000                 1-  409     	dw	0x00, 0x00
                                    1-  413     .segment "idata"
     0000                           1-  414     _preFG:
     0000 0000                      1-  415     	dw	0x00
                                    1-  419     .segment "idata"
     0000                           1-  420     _maxDuty:
     0000 0000                      1-  421     	dw	0x00
                                    1-  425     .segment "idata"
     0000                           1-  426     _pwStep:
     0000 0000                      1-  427     	dw	0x00
                                    1-  431     .segment "idata"
     0000                           1-  432     _chrgTime:
     0000 0000 0000                 1-  433     	dw	0x00, 0x00
                                    1-  437     .segment "idata"
     0000                           1-  438     _startStep:
     0000 0000                      1-  439     	dw	0x00
                                    1-  443     .segment "idata"
     0000                           1-  444     _sleepTime:
     0000 0000 0000                 1-  445     	dw	0x00, 0x00
                                    1-  449     .segment "idata"
     0000                           1-  450     _count200ms:
     0000 0000                      1-  451     	dw	0x00
                                    1-  455     .segment "idata"
     0000                           1-  456     _count1s:
     0000 0000                      1-  457     	dw	0x00
                                    1-  461     .segment "idata"
     0000                           1-  462     _count900s:
     0000 0000 0000                 1-  463     	dw	0x00, 0x00
                                    1-  467     .segment "idata"
     0000                           1-  468     _lowBatTime:
     0000 0000                      1-  469     	dw	0x00
                                    1-  473     .segment "idata"
     0000                           1-  474     _ledTime:
     0000 0000                      1-  475     	dw	0x00
                                    1-  479     .segment "idata"
     0000                           1-  480     _overCount:
     0000 0000                      1-  481     	dw	0x00
                                    1-  485     .segment "idata"
     0000                           1-  486     _chrgCount:
     0000 0000                      1-  487     	dw	0x00
                                    1-  491     .segment "idata"
     0000                           1-  492     _ledLightTime:
     0000 0000                      1-  493     	dw	0x00
                                    1-  497     .segment "idata"
     0000                           1-  498     _currentDuty:
     0000 0000                      1-  499     	dw	0x00
                                    1-  503     .segment "idata"
     0000                           1-  504     _fullCount:
     0000 0000                      1-  505     	dw	0x00
                                    1-  509     .segment "idata"
     0000                           1-  510     _shanshuoTime:
     0000 0000                      1-  511     	dw	0x00
                                    1-  515     .segment "idata"
     0000                           1-  516     _firstTime:
     0000 0000                      1-  517     	dw	0x00
                                    1-  521     .segment "idata"
     0000                           1-  522     _tempDuty:
     0000 0000                      1-  523     	dw	0x00
                                    1-  527     .segment "idata"
     0000                           1-  528     _lowCount:
     0000 0000                      1-  529     	dw	0x00
                                    1-  533     .segment "idata"
     0000                           1-  534     _longPressFlag:
     0000 0000                      1-  535     	dw	0x00
                                    1-  539     .segment "idata"
     0000                           1-  540     _IntFlag:
     0000 0000                      1-  541     	dw	0x00
                                    1-  545     .segment "idata"
     0000                           1-  546     _chrgFlag:
     0000 0000                      1-  547     	dw	0x00
                                    1-  551     .segment "idata"
     0000                           1-  552     _redLedFlag:
     0000 0000                      1-  553     	dw	0x00
                                    1-  557     .segment "idata"
     0000                           1-  558     _tempLedStep:
     0000 0000                      1-  559     	dw	0x00
                                    1-  563     .segment "idata"
     0000                           1-  564     _count5S:
     0000 0000 0000                 1-  565     	dw	0x00, 0x00
                                    1-  569     .segment "idata"
     0000                           1-  570     _ledDeadTime:
     0000 0000                      1-  571     	dw	0x00
                                    1-  575     .segment "idata"
     0000                           1-  576     _lockLedStep:
     0000 0000                      1-  577     	dw	0x00
                                    1-  581     .segment "idata"
     0000                           1-  582     _shandengTime:
     0000 0000 0000                 1-  583     	dw	0x00, 0x00
                                    1-  587     .segment "idata"
     0000                           1-  588     _lowBat:
     0000 0000 0000                 1-  589     	dw	0x00, 0x00
                                    1-  593     .segment "idata"
     0000                           1-  594     _lockStart:
     0000 0000                      1-  595     	dw	0x00
                                    1-  599     .segment "idata"
     0000                           1-  600     _fullLock:
     0000 0000                      1-  601     	dw	0x00
                                    1-  605     .segment "idata"
     0000                           1-  606     _fullLockCount:
     0000 0000                      1-  607     	dw	0x00
                                    1-  611     .segment "idata"
     0000                           1-  612     _ledCount:
     0000 0000                      1-  613     	dw	0x00
                                    1-  617     .segment "idata"
     0000                           1-  618     _maxOut:
     0000 0000                      1-  619     	dw	0x00
                                    1-  623     .segment "idata"
     0000                           1-  624     _debug:
     0000 0000                      1-  625     	dw	0x00
                                    1-  628     ;--------------------------------------------------------
                                    1-  629     ; overlayable items in internal ram 
                                    1-  630     ;--------------------------------------------------------
                                    1-  631     ;	udata_ovr
                                    1-  632     ;--------------------------------------------------------
                                    1-  633     ; reset vector 
                                    1-  634     ;--------------------------------------------------------
                                    1-  635     ORG	0x0000
     0000 3rrr                      1-  636     	LGOTO	__nyc_ny8_startup
                                    1-  637     ;--------------------------------------------------------
                                    1-  638     ; interrupt and initialization code
                                    1-  639     ;--------------------------------------------------------
                                    1-  640     ORG 0x0008
                                    1-  641     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  643     .segment "code"
     0000                           1-  644     __sdcc_interrupt:
                                    1-  645     ;***
                                    1-  646     ;  pBlock Stats: dbName = I
                                    1-  647     ;***
                                    1-  648     ;2 compiler assigned registers:
                                    1-  649     ;   STK00
                                    1-  650     ;   STK01
                                    1-  651     ;; Starting pCode block
     0000                           1-  652     _isr:
                                    1-  653     ; 0 exit points
                                    1-  654     	.line	125, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  655     	MOVAR	WSAVE
     0001 1503                      1-  656     	SWAPR	STATUS,W
     0002 0283                      1-  657     	CLRR	STATUS
     0003 00rr                      1-  658     	MOVAR	SSAVE
     0004 010A                      1-  659     	MOVR	PCHBUF,W
     0005 028A                      1-  660     	CLRR	PCHBUF
     0006 00rr                      1-  661     	MOVAR	PSAVE
     0007 0104                      1-  662     	MOVR	FSR,W
                                    1-  663     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  664     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  665     	MOVR	STK00,W
                                    1-  666     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  667     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  668     	MOVR	STK01,W
                                    1-  669     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  670     	MOVAR	___sdcc_saved_stk01
                                    1-  671     	.line	127, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  672     	BTRSS	_INTFbits,0
                                    1-  673     	MGOTO	_00128_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  674     	.line	129, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  675     	MOVIA	0x37
     0013 03rr                      1-  676     	ADDAR	_TMR0,F
                                    1-  677     	.line	131, "main.c"; 	if(++intCount >= 100)
                                    1-  678     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  679     	INCR	_intCount,F
                                    1-  680     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  681     	MOVIA	0x64
     0017 04rr                      1-  682     	SUBAR	_intCount,W
     0018 0803                      1-  683     	BTRSS	STATUS,0
                                    1-  684     	MGOTO	_00128_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  685     	.line	133, "main.c"; 	IntFlag = 1;
     001A 2101                      1-  686     	MOVIA	0x01
                                    1-  687     	BANKSEL	_IntFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  688     	MOVAR	_IntFlag
                                    1-  689     	.line	134, "main.c"; 	intCount = 0;
                                    1-  690     	BANKSEL	_intCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  691     	CLRR	_intCount
                                    1-  692     	.line	135, "main.c"; 	if(workStep)
                                    1-  693     	BANKSEL	_workStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 01rr                      1-  694     	MOVR	_workStep,W
     0021 0D03                      1-  695     	BTRSC	STATUS,2
                                    1-  696     	MGOTO	_00106_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  697     	.line	136, "main.c"; 	++fgCount;
                                    1-  698     	BANKSEL	_fgCount
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 05rr                      1-  699     	INCR	_fgCount,F
     0025 0D03                      1-  700     	BTRSC	STATUS,2
     0026 05rr                      1-  701     	INCR	(_fgCount + 1),F
     0027                           1-  702     _00106_DS_:
                                    1-  703     	.line	137, "main.c"; 	if(++count500ms >= 60)
                                    1-  704     	BANKSEL	_count500ms
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 05rr                      1-  705     	INCR	_count500ms,F
                                    1-  706     ;;unsigned compare: left < lit (0x3C=60), size=1
     0029 213C                      1-  707     	MOVIA	0x3c
     002A 04rr                      1-  708     	SUBAR	_count500ms,W
     002B 0C03                      1-  709     	BTRSC	STATUS,0
                                    1-  710     	.line	138, "main.c"; 	count500ms = 0;
     002C 02rr                      1-  711     	CLRR	_count500ms
                                    1-  712     	.line	139, "main.c"; 	if(++count200ms >= 20)
                                    1-  713     	BANKSEL	_count200ms
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 05rr                      1-  714     	INCR	_count200ms,F
     002F 2114                      1-  715     	MOVIA	0x14
     0030 04rr                      1-  716     	SUBAR	_count200ms,W
     0031 0803                      1-  717     	BTRSS	STATUS,0
                                    1-  718     	MGOTO	_00112_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  719     	.line	141, "main.c"; 	count200ms = 0;
     0033 02rr                      1-  720     	CLRR	_count200ms
                                    1-  721     	.line	142, "main.c"; 	if(ledDeadTime > 0)
                                    1-  722     	BANKSEL	_ledDeadTime
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 01rr                      1-  723     	MOVR	_ledDeadTime,W
     0036 0903                      1-  724     	BTRSS	STATUS,2
                                    1-  725     	.line	143, "main.c"; 	--ledDeadTime;
     0037 06rr                      1-  726     	DECR	_ledDeadTime,F
     0038                           1-  727     _00112_DS_:
                                    1-  728     	.line	145, "main.c"; 	if(++count1s >= 100)
                                    1-  729     	BANKSEL	_count1s
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 05rr                      1-  730     	INCR	_count1s,F
     003A 2164                      1-  731     	MOVIA	0x64
     003B 04rr                      1-  732     	SUBAR	_count1s,W
     003C 0803                      1-  733     	BTRSS	STATUS,0
                                    1-  734     	MGOTO	_00128_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  735     	.line	147, "main.c"; 	count1s = 0;
     003E 02rr                      1-  736     	CLRR	_count1s
                                    1-  737     	.line	148, "main.c"; 	if(chrgFlag == 1 && pwStep == 8)
                                    1-  738     	BANKSEL	_chrgFlag
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 01rr                      1-  739     	MOVR	_chrgFlag,W
     0041 2401                      1-  740     	XORIA	0x01
     0042 0903                      1-  741     	BTRSS	STATUS,2
                                    1-  742     	MGOTO	_00114_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  743     	BANKSEL	_pwStep
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 01rr                      1-  744     	MOVR	_pwStep,W
     0046 2408                      1-  745     	XORIA	0x08
     0047 0903                      1-  746     	BTRSS	STATUS,2
                                    1-  747     	MGOTO	_00114_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  748     	.line	150, "main.c"; 	++chrgTime;
                                    1-  749     	BANKSEL	_chrgTime
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 05rr                      1-  750     	INCR	_chrgTime,F
     004B 0D03                      1-  751     	BTRSC	STATUS,2
     004C 05rr                      1-  752     	INCR	(_chrgTime + 1),F
     004D                           1-  753     _00114_DS_:
                                    1-  754     	.line	152, "main.c"; 	if(ledLightTime > 0)
                                    1-  755     	BANKSEL	_ledLightTime
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 01rr                      1-  756     	MOVR	_ledLightTime,W
     004F 0903                      1-  757     	BTRSS	STATUS,2
                                    1-  758     	.line	153, "main.c"; 	--ledLightTime;
     0050 06rr                      1-  759     	DECR	_ledLightTime,F
                                    1-  760     	.line	154, "main.c"; 	if(shanshuoTime > 0)
                                    1-  761     	BANKSEL	_shanshuoTime
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 01rr                      1-  762     	MOVR	_shanshuoTime,W
     0053 0903                      1-  763     	BTRSS	STATUS,2
                                    1-  764     	.line	155, "main.c"; 	--shanshuoTime;
     0054 06rr                      1-  765     	DECR	_shanshuoTime,F
                                    1-  766     	.line	156, "main.c"; 	if(workStep)
                                    1-  767     	BANKSEL	_workStep
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 01rr                      1-  768     	MOVR	_workStep,W
     0057 0D03                      1-  769     	BTRSC	STATUS,2
                                    1-  770     	MGOTO	_00121_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  771     	.line	158, "main.c"; 	++count900s;
                                    1-  772     	BANKSEL	_count900s
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 05rr                      1-  773     	INCR	_count900s,F
     005B 0D03                      1-  774     	BTRSC	STATUS,2
     005C 05rr                      1-  775     	INCR	(_count900s + 1),F
                                    1-  776     	MGOTO	_00128_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
     005E                           1-  777     _00121_DS_:
                                    1-  778     	.line	162, "main.c"; 	count900s = 0;
                                    1-  779     	BANKSEL	_count900s
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 02rr                      1-  780     	CLRR	_count900s
     0060 02rr                      1-  781     	CLRR	(_count900s + 1)
     0061                           1-  782     _00128_DS_:
                                    1-  783     	.line	171, "main.c"; 	if(INTFbits.PABIF)
     0061 08rr                      1-  784     	BTRSS	_INTFbits,1
                                    1-  785     	MGOTO	_00130_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  786     	.line	173, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0063 21FD                      1-  787     	MOVIA	0xfd
     0064 00rr                      1-  788     	MOVAR	_INTF
     0065                           1-  789     _00130_DS_:
                                    1-  790     	.line	176, "main.c"; 	INTF = 0;
     0065 02rr                      1-  791     	CLRR	_INTF
                                    1-  792     	.line	178, "main.c"; 	}
                                    1-  793     	BANKSEL	___sdcc_saved_stk01
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 01rr                      1-  794     	MOVR	___sdcc_saved_stk01,W
     0068 00rr                      1-  795     	MOVAR	STK01
                                    1-  796     	BANKSEL	___sdcc_saved_stk00
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 01rr                      1-  797     	MOVR	___sdcc_saved_stk00,W
     006B 00rr                      1-  798     	MOVAR	STK00
                                    1-  799     	BANKSEL	___sdcc_saved_fsr
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 01rr                      1-  800     	MOVR	___sdcc_saved_fsr,W
     006E 0084                      1-  801     	MOVAR	FSR
     006F 01rr                      1-  802     	MOVR	PSAVE,W
     0070 008A                      1-  803     	MOVAR	PCHBUF
     0071 0283                      1-  804     	CLRR	STATUS
     0072 15rr                      1-  805     	SWAPR	SSAVE,W
     0073 0083                      1-  806     	MOVAR	STATUS
     0074 15rr                      1-  807     	SWAPR	WSAVE,F
     0075 15rr                      1-  808     	SWAPR	WSAVE,W
     0076                           1-  809     END_OF_INTERRUPT:
     0076 0011                      1-  810     	RETIE	
                                    1-  812     ;--------------------------------------------------------
                                    1-  813     ; code
                                    1-  814     ;--------------------------------------------------------
                                    1-  815     ;***
                                    1-  816     ;  pBlock Stats: dbName = M
                                    1-  817     ;***
                                    1-  818     ;has an exit
                                    1-  819     ;functions called:
                                    1-  820     ;   _initSys
                                    1-  821     ;   _initAD
                                    1-  822     ;   _ledShow
                                    1-  823     ;   _keyCtr
                                    1-  824     ;   _checkBatAD
                                    1-  825     ;   _checkOutA
                                    1-  826     ;   _chrgCtr
                                    1-  827     ;   _ledShow
                                    1-  828     ;   _powerOff
                                    1-  829     ;   _gotoSleep
                                    1-  830     ;   _powerOff
                                    1-  831     ;   _initSys
                                    1-  832     ;   _initAD
                                    1-  833     ;   _ledShow
                                    1-  834     ;   _keyCtr
                                    1-  835     ;   _checkBatAD
                                    1-  836     ;   _checkOutA
                                    1-  837     ;   _chrgCtr
                                    1-  838     ;   _ledShow
                                    1-  839     ;   _powerOff
                                    1-  840     ;   _gotoSleep
                                    1-  841     ;   _powerOff
                                    1-  842     ;; Starting pCode block
                                    1-  843     .segment "code"; module=main, function=_main
     0000                           1-  845     _main:
                                    1-  846     ; 2 exit points
                                    1-  847     	.line	182, "main.c"; 	initSys();
                                    1-  848     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  849     	.line	183, "main.c"; 	initAD();
                                    1-  850     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  851     _00166_DS_:
                                    1-  852     	.line	186, "main.c"; 	CLRWDT();
     0002 0002                      1-  853     	clrwdt
                                    1-  854     	.line	187, "main.c"; 	ledShow();
                                    1-  855     	MCALL	_ledShow
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  856     	.line	188, "main.c"; 	if(!IntFlag)
                                    1-  857     	BANKSEL	_IntFlag
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  858     	MOVR	_IntFlag,W
     0006 0D03                      1-  859     	BTRSC	STATUS,2
                                    1-  860     	MGOTO	_00166_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  861     	.line	190, "main.c"; 	IntFlag = 0;
     0008 02rr                      1-  862     	CLRR	_IntFlag
                                    1-  863     	.line	191, "main.c"; 	if(chrgFlag == 0)
                                    1-  864     	BANKSEL	_chrgFlag
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 01rr                      1-  865     	MOVR	_chrgFlag,W
     000B 0D03                      1-  866     	BTRSC	STATUS,2
                                    1-  867     	.line	192, "main.c"; 	keyCtr();
                                    1-  868     	MCALL	_keyCtr
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  869     	.line	193, "main.c"; 	if(count200ms < 5)
     000D 2105                      1-  870     	MOVIA	0x05
                                    1-  871     	BANKSEL	_count200ms
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 04rr                      1-  872     	SUBAR	_count200ms,W
     0010 0C03                      1-  873     	BTRSC	STATUS,0
                                    1-  874     	MGOTO	_00143_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  875     	.line	195, "main.c"; 	checkBatAD();
                                    1-  876     	MCALL	_checkBatAD
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  877     	MGOTO	_00144_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  878     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  879     ;;unsigned compare: left >= lit (0x9=9), size=1
     0014                           1-  880     _00143_DS_:
                                    1-  881     	.line	197, "main.c"; 	else if(count200ms > 8 && count200ms < 11)
     0014 2109                      1-  882     	MOVIA	0x09
                                    1-  883     	BANKSEL	_count200ms
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 04rr                      1-  884     	SUBAR	_count200ms,W
     0017 0803                      1-  885     	BTRSS	STATUS,0
                                    1-  886     	MGOTO	_00144_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  887     ;;unsigned compare: left < lit (0xB=11), size=1
     0019 210B                      1-  888     	MOVIA	0x0b
     001A 04rr                      1-  889     	SUBAR	_count200ms,W
     001B 0803                      1-  890     	BTRSS	STATUS,0
                                    1-  891     	.line	199, "main.c"; 	checkOutA();
                                    1-  892     	MCALL	_checkOutA
     001C 2rrr                      3-   66 m1      LCALL rom_address
     001D                           1-  893     _00144_DS_:
                                    1-  894     	.line	201, "main.c"; 	chrgCtr();
                                    1-  895     	MCALL	_chrgCtr
     001D 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  896     	.line	202, "main.c"; 	ledShow();
                                    1-  897     	MCALL	_ledShow
     001E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  898     	.line	203, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  899     	BANKSEL	_workStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 01rr                      1-  900     	MOVR	_workStep,W
     0021 0D03                      1-  901     	BTRSC	STATUS,2
                                    1-  902     	MGOTO	_00146_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  903     	BANKSEL	_currentDuty
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 01rr                      1-  904     	MOVR	_currentDuty,W
                                    1-  905     	BANKSEL	_maxDuty
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 04rr                      1-  906     	SUBAR	_maxDuty,W
     0027 0C03                      1-  907     	BTRSC	STATUS,0
                                    1-  908     	MGOTO	_00146_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  909     	.line	205, "main.c"; 	currentDuty = currentDuty - 10;
     0029 21F6                      1-  910     	MOVIA	0xf6
                                    1-  911     	BANKSEL	_currentDuty
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1-  912     	ADDAR	_currentDuty,F
                                    1-  913     	.line	206, "main.c"; 	PWM2DUTY = currentDuty;
     002C 01rr                      1-  914     	MOVR	_currentDuty,W
     002D 00rr                      1-  915     	SFUN	_PWM2DUTY
                                    1-  916     ;;unsigned compare: left < lit (0x5=5), size=1
     002E                           1-  917     _00146_DS_:
                                    1-  918     	.line	209, "main.c"; 	if(overCount >= 5 && workStep > 0)
     002E 2105                      1-  919     	MOVIA	0x05
                                    1-  920     	BANKSEL	_overCount
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 04rr                      1-  921     	SUBAR	_overCount,W
     0031 0803                      1-  922     	BTRSS	STATUS,0
                                    1-  923     	MGOTO	_00151_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  924     	BANKSEL	_workStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1-  925     	MOVR	_workStep,W
     0035 0D03                      1-  926     	BTRSC	STATUS,2
                                    1-  927     	MGOTO	_00151_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  928     	.line	211, "main.c"; 	if(++count5S > 500)
                                    1-  929     	BANKSEL	_count5S
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 05rr                      1-  930     	INCR	_count5S,F
     0039 0D03                      1-  931     	BTRSC	STATUS,2
     003A 05rr                      1-  932     	INCR	(_count5S + 1),F
                                    1-  933     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  934     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     003B 2101                      1-  935     	MOVIA	0x01
     003C 04rr                      1-  936     	SUBAR	(_count5S + 1),W
     003D 0903                      1-  937     	BTRSS	STATUS,2
                                    1-  938     	MGOTO	_00232_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
     003F 21F5                      1-  939     	MOVIA	0xf5
     0040 04rr                      1-  940     	SUBAR	_count5S,W
     0041                           1-  941     _00232_DS_:
     0041 0803                      1-  942     	BTRSS	STATUS,0
                                    1-  943     	MGOTO	_00152_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  944     	.line	213, "main.c"; 	overCount = 0;
                                    1-  945     	BANKSEL	_overCount
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 02rr                      1-  946     	CLRR	_overCount
                                    1-  947     	.line	214, "main.c"; 	count5S = 0;
                                    1-  948     	BANKSEL	_count5S
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 02rr                      1-  949     	CLRR	_count5S
     0047 02rr                      1-  950     	CLRR	(_count5S + 1)
                                    1-  951     	.line	215, "main.c"; 	ledDeadTime = 25;
     0048 2119                      1-  952     	MOVIA	0x19
                                    1-  953     	BANKSEL	_ledDeadTime
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1-  954     	MOVAR	_ledDeadTime
                                    1-  955     	.line	216, "main.c"; 	powerOff();
                                    1-  956     	MCALL	_powerOff
     004B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  957     	MGOTO	_00152_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
     004D                           1-  958     _00151_DS_:
                                    1-  959     	.line	221, "main.c"; 	count5S = 0;
                                    1-  960     	BANKSEL	_count5S
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 02rr                      1-  961     	CLRR	_count5S
     004F 02rr                      1-  962     	CLRR	(_count5S + 1)
     0050                           1-  963     _00152_DS_:
                                    1-  964     	.line	223, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x20) == 0 && ledLightTime == 0 && ledDeadTime == 0 && shandengTime == 0)
                                    1-  965     	BANKSEL	_workStep
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 01rr                      1-  966     	MOVR	_workStep,W
     0052 0903                      1-  967     	BTRSS	STATUS,2
                                    1-  968     	MGOTO	_00157_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  969     	BANKSEL	_keyCount
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 01rr                      1-  970     	MOVR	_keyCount,W
     0056 0903                      1-  971     	BTRSS	STATUS,2
                                    1-  972     	MGOTO	_00157_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  973     	BANKSEL	_PORTA
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 0Err                      1-  974     	BTRSC	_PORTA,5
                                    1-  975     	MGOTO	_00157_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  976     	BANKSEL	_ledLightTime
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 01rr                      1-  977     	MOVR	_ledLightTime,W
     005D 0903                      1-  978     	BTRSS	STATUS,2
                                    1-  979     	MGOTO	_00157_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  980     	BANKSEL	_ledDeadTime
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 01rr                      1-  981     	MOVR	_ledDeadTime,W
     0061 0903                      1-  982     	BTRSS	STATUS,2
                                    1-  983     	MGOTO	_00157_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  984     	BANKSEL	_shandengTime
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 01rr                      1-  985     	MOVR	_shandengTime,W
     0065 11rr                      1-  986     	IORAR	(_shandengTime + 1),W
     0066 0903                      1-  987     	BTRSS	STATUS,2
                                    1-  988     	MGOTO	_00157_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  989     	.line	225, "main.c"; 	if(++sleepTime > 30)
                                    1-  990     	BANKSEL	_sleepTime
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 05rr                      1-  991     	INCR	_sleepTime,F
     006A 0D03                      1-  992     	BTRSC	STATUS,2
     006B 05rr                      1-  993     	INCR	(_sleepTime + 1),F
                                    1-  994     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  995     ;;unsigned compare: left >= lit (0x1F=31), size=2
     006C 2100                      1-  996     	MOVIA	0x00
     006D 04rr                      1-  997     	SUBAR	(_sleepTime + 1),W
     006E 0903                      1-  998     	BTRSS	STATUS,2
                                    1-  999     	MGOTO	_00233_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
     0070 211F                      1- 1000     	MOVIA	0x1f
     0071 04rr                      1- 1001     	SUBAR	_sleepTime,W
     0072                           1- 1002     _00233_DS_:
     0072 0803                      1- 1003     	BTRSS	STATUS,0
                                    1- 1004     	MGOTO	_00157_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1005     	.line	227, "main.c"; 	gotoSleep();
                                    1- 1006     	MCALL	_gotoSleep
     0074 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1007     ;;unsigned compare: left < lit (0x384=900), size=2
     0075                           1- 1008     _00157_DS_:
                                    1- 1009     	.line	231, "main.c"; 	if(count900s >= 900)
     0075 2103                      1- 1010     	MOVIA	0x03
                                    1- 1011     	BANKSEL	_count900s
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 04rr                      1- 1012     	SUBAR	(_count900s + 1),W
     0078 0903                      1- 1013     	BTRSS	STATUS,2
                                    1- 1014     	MGOTO	_00234_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
     007A 2184                      1- 1015     	MOVIA	0x84
     007B 04rr                      1- 1016     	SUBAR	_count900s,W
     007C                           1- 1017     _00234_DS_:
     007C 0803                      1- 1018     	BTRSS	STATUS,0
                                    1- 1019     	MGOTO	_00166_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1020     	.line	233, "main.c"; 	powerOff();
                                    1- 1021     	MCALL	_powerOff
     007E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1022     	MGOTO	_00166_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1023     	.line	237, "main.c"; 	}
                                    1- 1024     	RETURN	
     0080 0010                      3-   40 m1      ret
                                    1- 1025     ; exit point of _main
                                    1- 1027     ;***
                                    1- 1028     ;  pBlock Stats: dbName = C
                                    1- 1029     ;***
                                    1- 1030     ;has an exit
                                    1- 1031     ;; Starting pCode block
                                    1- 1032     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1034     _F_wait_eoc:
                                    1- 1035     ; 2 exit points
     0000                           1- 1036     _01109_DS_:
                                    1- 1037     	.line	1155, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1038     	BTRSS	_ADMDbits,5
                                    1- 1039     	MGOTO	_01109_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1040     	.line	1157, "main.c"; 	}
                                    1- 1041     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1042     ; exit point of _F_wait_eoc
                                    1- 1044     ;***
                                    1- 1045     ;  pBlock Stats: dbName = C
                                    1- 1046     ;***
                                    1- 1047     ;has an exit
                                    1- 1048     ;functions called:
                                    1- 1049     ;   _delay
                                    1- 1050     ;   _F_wait_eoc
                                    1- 1051     ;   _delay
                                    1- 1052     ;   _F_wait_eoc
                                    1- 1053     ;6 compiler assigned registers:
                                    1- 1054     ;   r0x103A
                                    1- 1055     ;   r0x103B
                                    1- 1056     ;   r0x103C
                                    1- 1057     ;   r0x103D
                                    1- 1058     ;   r0x103E
                                    1- 1059     ;   r0x103F
                                    1- 1060     ;; Starting pCode block
                                    1- 1061     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1063     ;local variable name mapping:
     0000                           1- 1066     _F_AIN2_Convert:
                                    1- 1067     ; 2 exit points
                                    1- 1068     	.line	1138, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1069     	BANKSEL	r0x103A
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1070     	MOVAR	r0x103A
                                    1- 1071     	.line	1140, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1072     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1073     	CLRR	_R_AIN2_DATA_LB
                                    1- 1074     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1075     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1076     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1077     	.line	1142, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1078     	MOVIA	0x92
     0008 00rr                      1- 1079     	MOVAR	_ADMD
                                    1- 1080     	.line	1143, "main.c"; 	delay(200);	
     0009 21C8                      1- 1081     	MOVIA	0xc8
                                    1- 1082     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1083     	.line	1144, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1084     	MOVIA	0x01
                                    1- 1085     	BANKSEL	r0x103B
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1086     	MOVAR	r0x103B
     000E                           1- 1087     _01102_DS_:
                                    1- 1088     	BANKSEL	r0x103B
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1089     	MOVR	r0x103B,W
                                    1- 1090     	BANKSEL	r0x103A
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1091     	SUBAR	r0x103A,W
     0012 0803                      1- 1092     	BTRSS	STATUS,0
                                    1- 1093     	MGOTO	_01104_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1094     	.line	1146, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1095     	BSR	_ADMDbits,6
                                    1- 1096     	.line	1147, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1097     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1098     	.line	1148, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1099     	MOVIA	0x0f
     0017 10rr                      1- 1100     	ANDAR	_ADR,W
                                    1- 1101     ;;3	MOVAR	r0x103C
                                    1- 1102     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1103     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1104     	.line	1149, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1- 1105     	MOVR	_ADD,W
                                    1- 1106     	BANKSEL	r0x103C
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1107     	MOVAR	r0x103C
                                    1- 1108     ;;1	CLRR	r0x103D
                                    1- 1109     ;;108	MOVR	r0x103C,W
                                    1- 1110     ;;106	MOVAR	r0x103E
     001D 2100                      1- 1111     	MOVIA	0x00
                                    1- 1112     	BANKSEL	r0x103F
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1113     	MOVAR	r0x103F
                                    1- 1114     ;;107	MOVR	r0x103E,W
                                    1- 1115     	BANKSEL	r0x103C
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1116     	MOVR	r0x103C,W
                                    1- 1117     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1118     	ADDAR	_R_AIN2_DATA,F
                                    1- 1119     	BANKSEL	r0x103F
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1120     	MOVR	r0x103F,W
     0026 0C03                      1- 1121     	BTRSC	STATUS,0
     0027 05rr                      1- 1122     	INCR	r0x103F,W
     0028 0D03                      1- 1123     	BTRSC	STATUS,2
                                    1- 1124     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1125     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1126     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1- 1127     _00001_DS_:
                                    1- 1128     	.line	1144, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1129     	BANKSEL	r0x103B
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1130     	INCR	r0x103B,F
                                    1- 1131     	MGOTO	_01102_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1132     _01104_DS_:
                                    1- 1133     	.line	1151, "main.c"; 	}
                                    1- 1134     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1135     ; exit point of _F_AIN2_Convert
                                    1- 1137     ;***
                                    1- 1138     ;  pBlock Stats: dbName = C
                                    1- 1139     ;***
                                    1- 1140     ;has an exit
                                    1- 1141     ;functions called:
                                    1- 1142     ;   _delay
                                    1- 1143     ;   _F_wait_eoc
                                    1- 1144     ;   _delay
                                    1- 1145     ;   _F_wait_eoc
                                    1- 1146     ;6 compiler assigned registers:
                                    1- 1147     ;   r0x1040
                                    1- 1148     ;   r0x1041
                                    1- 1149     ;   r0x1042
                                    1- 1150     ;   r0x1043
                                    1- 1151     ;   r0x1044
                                    1- 1152     ;   r0x1045
                                    1- 1153     ;; Starting pCode block
                                    1- 1154     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1- 1156     ;local variable name mapping:
     0000                           1- 1159     _F_AIN3_Convert:
                                    1- 1160     ; 2 exit points
                                    1- 1161     	.line	1123, "main.c"; 	void F_AIN3_Convert(char count)
                                    1- 1162     	BANKSEL	r0x1040
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1163     	MOVAR	r0x1040
                                    1- 1164     	.line	1125, "main.c"; 	R_AIN3_DATA=R_AIN3_DATA_LB=0x00;   
                                    1- 1165     	BANKSEL	_R_AIN3_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1166     	CLRR	_R_AIN3_DATA_LB
                                    1- 1167     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1168     	CLRR	_R_AIN3_DATA
     0006 02rr                      1- 1169     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1170     	.line	1127, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0007 2193                      1- 1171     	MOVIA	0x93
     0008 00rr                      1- 1172     	MOVAR	_ADMD
                                    1- 1173     	.line	1128, "main.c"; 	delay(200);	
     0009 21C8                      1- 1174     	MOVIA	0xc8
                                    1- 1175     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1176     	.line	1129, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1177     	MOVIA	0x01
                                    1- 1178     	BANKSEL	r0x1041
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1179     	MOVAR	r0x1041
     000E                           1- 1180     _01093_DS_:
                                    1- 1181     	BANKSEL	r0x1041
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1182     	MOVR	r0x1041,W
                                    1- 1183     	BANKSEL	r0x1040
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1184     	SUBAR	r0x1040,W
     0012 0803                      1- 1185     	BTRSS	STATUS,0
                                    1- 1186     	MGOTO	_01095_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1187     	.line	1131, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1188     	BSR	_ADMDbits,6
                                    1- 1189     	.line	1132, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1190     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1191     	.line	1133, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1192     	MOVIA	0x0f
     0017 10rr                      1- 1193     	ANDAR	_ADR,W
                                    1- 1194     ;;3	MOVAR	r0x1042
                                    1- 1195     	BANKSEL	_R_AIN3_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1196     	ADDAR	_R_AIN3_DATA_LB,F
                                    1- 1197     	.line	1134, "main.c"; 	R_AIN3_DATA    += ADD; 
     001A 01rr                      1- 1198     	MOVR	_ADD,W
                                    1- 1199     	BANKSEL	r0x1042
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1200     	MOVAR	r0x1042
                                    1- 1201     ;;1	CLRR	r0x1043
                                    1- 1202     ;;105	MOVR	r0x1042,W
                                    1- 1203     ;;103	MOVAR	r0x1044
     001D 2100                      1- 1204     	MOVIA	0x00
                                    1- 1205     	BANKSEL	r0x1045
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1206     	MOVAR	r0x1045
                                    1- 1207     ;;104	MOVR	r0x1044,W
                                    1- 1208     	BANKSEL	r0x1042
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1209     	MOVR	r0x1042,W
                                    1- 1210     	BANKSEL	_R_AIN3_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1211     	ADDAR	_R_AIN3_DATA,F
                                    1- 1212     	BANKSEL	r0x1045
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1213     	MOVR	r0x1045,W
     0026 0C03                      1- 1214     	BTRSC	STATUS,0
     0027 05rr                      1- 1215     	INCR	r0x1045,W
     0028 0D03                      1- 1216     	BTRSC	STATUS,2
                                    1- 1217     	MGOTO	_00002_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1218     	BANKSEL	_R_AIN3_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1219     	ADDAR	(_R_AIN3_DATA + 1),F
     002C                           1- 1220     _00002_DS_:
                                    1- 1221     	.line	1129, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1222     	BANKSEL	r0x1041
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1223     	INCR	r0x1041,F
                                    1- 1224     	MGOTO	_01093_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1225     _01095_DS_:
                                    1- 1226     	.line	1136, "main.c"; 	}
                                    1- 1227     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1228     ; exit point of _F_AIN3_Convert
                                    1- 1230     ;***
                                    1- 1231     ;  pBlock Stats: dbName = C
                                    1- 1232     ;***
                                    1- 1233     ;has an exit
                                    1- 1234     ;functions called:
                                    1- 1235     ;   _delay
                                    1- 1236     ;   _F_wait_eoc
                                    1- 1237     ;   _delay
                                    1- 1238     ;   _F_wait_eoc
                                    1- 1239     ;6 compiler assigned registers:
                                    1- 1240     ;   r0x1046
                                    1- 1241     ;   r0x1047
                                    1- 1242     ;   r0x1048
                                    1- 1243     ;   r0x1049
                                    1- 1244     ;   r0x104A
                                    1- 1245     ;   r0x104B
                                    1- 1246     ;; Starting pCode block
                                    1- 1247     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1249     ;local variable name mapping:
     0000                           1- 1252     _F_AIN4_Convert:
                                    1- 1253     ; 2 exit points
                                    1- 1254     	.line	1108, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1255     	BANKSEL	r0x1046
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1256     	MOVAR	r0x1046
                                    1- 1257     	.line	1110, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1258     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1259     	CLRR	_R_AIN4_DATA_LB
                                    1- 1260     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1261     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1262     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1263     	.line	1112, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1264     	MOVIA	0x94
     0008 00rr                      1- 1265     	MOVAR	_ADMD
                                    1- 1266     	.line	1113, "main.c"; 	delay(200);	
     0009 21C8                      1- 1267     	MOVIA	0xc8
                                    1- 1268     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1269     	.line	1114, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1270     	MOVIA	0x01
                                    1- 1271     	BANKSEL	r0x1047
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1272     	MOVAR	r0x1047
     000E                           1- 1273     _01084_DS_:
                                    1- 1274     	BANKSEL	r0x1047
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1275     	MOVR	r0x1047,W
                                    1- 1276     	BANKSEL	r0x1046
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1277     	SUBAR	r0x1046,W
     0012 0803                      1- 1278     	BTRSS	STATUS,0
                                    1- 1279     	MGOTO	_01086_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1280     	.line	1116, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1281     	BSR	_ADMDbits,6
                                    1- 1282     	.line	1117, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1283     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1284     	.line	1118, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1285     	MOVIA	0x0f
     0017 10rr                      1- 1286     	ANDAR	_ADR,W
                                    1- 1287     ;;3	MOVAR	r0x1048
                                    1- 1288     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1289     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1290     	.line	1119, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1291     	MOVR	_ADD,W
                                    1- 1292     	BANKSEL	r0x1048
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1293     	MOVAR	r0x1048
                                    1- 1294     ;;1	CLRR	r0x1049
                                    1- 1295     ;;102	MOVR	r0x1048,W
                                    1- 1296     ;;100	MOVAR	r0x104A
     001D 2100                      1- 1297     	MOVIA	0x00
                                    1- 1298     	BANKSEL	r0x104B
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1299     	MOVAR	r0x104B
                                    1- 1300     ;;101	MOVR	r0x104A,W
                                    1- 1301     	BANKSEL	r0x1048
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1302     	MOVR	r0x1048,W
                                    1- 1303     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1304     	ADDAR	_R_AIN4_DATA,F
                                    1- 1305     	BANKSEL	r0x104B
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1306     	MOVR	r0x104B,W
     0026 0C03                      1- 1307     	BTRSC	STATUS,0
     0027 05rr                      1- 1308     	INCR	r0x104B,W
     0028 0D03                      1- 1309     	BTRSC	STATUS,2
                                    1- 1310     	MGOTO	_00003_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1311     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1312     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1313     _00003_DS_:
                                    1- 1314     	.line	1114, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1315     	BANKSEL	r0x1047
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1316     	INCR	r0x1047,F
                                    1- 1317     	MGOTO	_01084_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1318     _01086_DS_:
                                    1- 1319     	.line	1121, "main.c"; 	}
                                    1- 1320     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1321     ; exit point of _F_AIN4_Convert
                                    1- 1323     ;***
                                    1- 1324     ;  pBlock Stats: dbName = C
                                    1- 1325     ;***
                                    1- 1326     ;has an exit
                                    1- 1327     ;functions called:
                                    1- 1328     ;   _F_AIN3_Convert
                                    1- 1329     ;   _F_AIN3_Convert
                                    1- 1330     ;4 compiler assigned registers:
                                    1- 1331     ;   r0x104C
                                    1- 1332     ;   r0x104D
                                    1- 1333     ;   r0x104E
                                    1- 1334     ;   r0x104F
                                    1- 1335     ;; Starting pCode block
                                    1- 1336     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1338     _checkOutA:
                                    1- 1339     ; 2 exit points
                                    1- 1340     	.line	968, "main.c"; 	R_AIN3_DATA = R_AIN3_DATA_LB = 0x00;
                                    1- 1341     	BANKSEL	_R_AIN3_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1342     	CLRR	_R_AIN3_DATA_LB
                                    1- 1343     	BANKSEL	_R_AIN3_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1344     	CLRR	_R_AIN3_DATA
     0004 02rr                      1- 1345     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1346     	.line	969, "main.c"; 	F_AIN3_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1347     	MOVIA	0x08
                                    1- 1348     	MCALL	_F_AIN3_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1349     	.line	970, "main.c"; 	R_AIN3_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1350     	BANKSEL	_R_AIN3_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1351     	SWAPR	(_R_AIN3_DATA + 1),W
     0009 22F0                      1- 1352     	ANDIA	0xf0
     000A 00rr                      1- 1353     	MOVAR	(_R_AIN3_DATA + 1)
     000B 15rr                      1- 1354     	SWAPR	_R_AIN3_DATA,W
     000C 00rr                      1- 1355     	MOVAR	_R_AIN3_DATA
     000D 220F                      1- 1356     	ANDIA	0x0f
     000E 11rr                      1- 1357     	IORAR	(_R_AIN3_DATA + 1),F
     000F 12rr                      1- 1358     	XORAR	_R_AIN3_DATA,F
                                    1- 1359     	.line	971, "main.c"; 	R_AIN3_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1360     	MOVIA	0xf0
                                    1- 1361     	BANKSEL	_R_AIN3_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1362     	ANDAR	_R_AIN3_DATA_LB,F
                                    1- 1363     	.line	972, "main.c"; 	R_AIN3_DATA += R_AIN3_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1364     	MOVR	_R_AIN3_DATA_LB,W
                                    1- 1365     	BANKSEL	r0x104E
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1366     	MOVAR	r0x104E
                                    1- 1367     	BANKSEL	r0x104C
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1368     	MOVAR	r0x104C
                                    1- 1369     	BANKSEL	r0x104D
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1370     	CLRR	r0x104D
                                    1- 1371     ;;109	MOVR	r0x104C,W
     001A 2100                      1- 1372     	MOVIA	0x00
                                    1- 1373     	BANKSEL	r0x104F
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1374     	MOVAR	r0x104F
                                    1- 1375     	BANKSEL	r0x104E
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1376     	MOVR	r0x104E,W
                                    1- 1377     	BANKSEL	_R_AIN3_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1378     	ADDAR	_R_AIN3_DATA,F
                                    1- 1379     	BANKSEL	r0x104F
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1380     	MOVR	r0x104F,W
     0023 0C03                      1- 1381     	BTRSC	STATUS,0
     0024 05rr                      1- 1382     	INCR	r0x104F,W
     0025 0D03                      1- 1383     	BTRSC	STATUS,2
                                    1- 1384     	MGOTO	_00004_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1385     	BANKSEL	_R_AIN3_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1386     	ADDAR	(_R_AIN3_DATA + 1),F
                                    1- 1387     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1388     _00004_DS_:
                                    1- 1389     	.line	973, "main.c"; 	R_AIN3_DATA >>=3;					// R_AIN0_DATA divided 8
     0029 1C03                      1- 1390     	BCR	STATUS,0
                                    1- 1391     	BANKSEL	_R_AIN3_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1392     	RRR	(_R_AIN3_DATA + 1),F
     002C 13rr                      1- 1393     	RRR	_R_AIN3_DATA,F
                                    1- 1394     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1395     	BCR	STATUS,0
     002E 13rr                      1- 1396     	RRR	(_R_AIN3_DATA + 1),F
     002F 13rr                      1- 1397     	RRR	_R_AIN3_DATA,F
                                    1- 1398     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1399     	BCR	STATUS,0
     0031 13rr                      1- 1400     	RRR	(_R_AIN3_DATA + 1),F
     0032 13rr                      1- 1401     	RRR	_R_AIN3_DATA,F
                                    1- 1402     	.line	974, "main.c"; 	if(debug)
                                    1- 1403     	BANKSEL	_debug
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 1404     	MOVR	_debug,W
     0035 0D03                      1- 1405     	BTRSC	STATUS,2
                                    1- 1406     	MGOTO	_00877_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1407     	.line	975, "main.c"; 	R_AIN3_DATA = OUTA;
     0037 212D                      1- 1408     	MOVIA	0x2d
                                    1- 1409     	BANKSEL	_R_AIN3_DATA
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 00rr                      1- 1410     	MOVAR	_R_AIN3_DATA
     003A 2101                      1- 1411     	MOVIA	0x01
     003B 00rr                      1- 1412     	MOVAR	(_R_AIN3_DATA + 1)
                                    1- 1413     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1414     ;;unsigned compare: left >= lit (0x4=4), size=1
     003C                           1- 1415     _00877_DS_:
                                    1- 1416     	.line	977, "main.c"; 	if(pwStep > 3)
     003C 2104                      1- 1417     	MOVIA	0x04
                                    1- 1418     	BANKSEL	_pwStep
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 04rr                      1- 1419     	SUBAR	_pwStep,W
     003F 0803                      1- 1420     	BTRSS	STATUS,0
                                    1- 1421     	MGOTO	_00882_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1422     	.line	979, "main.c"; 	maxOut = 80;
     0041 2150                      1- 1423     	MOVIA	0x50
                                    1- 1424     	BANKSEL	_maxOut
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1- 1425     	MOVAR	_maxOut
                                    1- 1426     	MGOTO	_00883_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1427     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1428     ;;unsigned compare: left >= lit (0x2=2), size=1
     0045                           1- 1429     _00882_DS_:
                                    1- 1430     	.line	981, "main.c"; 	else if(pwStep > 1)
     0045 2102                      1- 1431     	MOVIA	0x02
                                    1- 1432     	BANKSEL	_pwStep
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 04rr                      1- 1433     	SUBAR	_pwStep,W
     0048 0803                      1- 1434     	BTRSS	STATUS,0
                                    1- 1435     	MGOTO	_00879_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1436     	.line	983, "main.c"; 	maxOut = 65;
     004A 2141                      1- 1437     	MOVIA	0x41
                                    1- 1438     	BANKSEL	_maxOut
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 00rr                      1- 1439     	MOVAR	_maxOut
                                    1- 1440     	MGOTO	_00883_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
     004E                           1- 1441     _00879_DS_:
                                    1- 1442     	.line	987, "main.c"; 	maxOut = 60;
     004E 213C                      1- 1443     	MOVIA	0x3c
                                    1- 1444     	BANKSEL	_maxOut
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 00rr                      1- 1445     	MOVAR	_maxOut
                                    1- 1446     ;;unsigned compare: left < lit (0x9=9), size=1
     0051                           1- 1447     _00883_DS_:
                                    1- 1448     	.line	989, "main.c"; 	if(workStep < 9 && R_AIN3_DATA > 200)
     0051 2109                      1- 1449     	MOVIA	0x09
                                    1- 1450     	BANKSEL	_workStep
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 04rr                      1- 1451     	SUBAR	_workStep,W
     0054 0C03                      1- 1452     	BTRSC	STATUS,0
                                    1- 1453     	MGOTO	_00953_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1454     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1455     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0056 2100                      1- 1456     	MOVIA	0x00
                                    1- 1457     	BANKSEL	_R_AIN3_DATA
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 04rr                      1- 1458     	SUBAR	(_R_AIN3_DATA + 1),W
     0059 0903                      1- 1459     	BTRSS	STATUS,2
                                    1- 1460     	MGOTO	_01063_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B 21C9                      1- 1461     	MOVIA	0xc9
     005C 04rr                      1- 1462     	SUBAR	_R_AIN3_DATA,W
     005D                           1- 1463     _01063_DS_:
     005D 0803                      1- 1464     	BTRSS	STATUS,0
                                    1- 1465     	MGOTO	_00953_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1466     	.line	991, "main.c"; 	if(++overCount > 5)
                                    1- 1467     	BANKSEL	_overCount
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 05rr                      1- 1468     	INCR	_overCount,F
                                    1- 1469     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1470     ;;unsigned compare: left >= lit (0x6=6), size=1
     0061 2106                      1- 1471     	MOVIA	0x06
     0062 04rr                      1- 1472     	SUBAR	_overCount,W
     0063 0803                      1- 1473     	BTRSS	STATUS,0
                                    1- 1474     	MGOTO	_00956_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1475     	.line	993, "main.c"; 	overCount = 5;
     0065 2105                      1- 1476     	MOVIA	0x05
     0066 00rr                      1- 1477     	MOVAR	_overCount
                                    1- 1478     	.line	994, "main.c"; 	tempLedStep = workStep;
                                    1- 1479     	BANKSEL	_workStep
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 01rr                      1- 1480     	MOVR	_workStep,W
                                    1- 1481     	BANKSEL	_tempLedStep
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 00rr                      1- 1482     	MOVAR	_tempLedStep
                                    1- 1483     	MGOTO	_00956_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1484     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1485     ;;unsigned compare: left >= lit (0x191=401), size=2
     006C                           1- 1486     _00953_DS_:
                                    1- 1487     	.line	998, "main.c"; 	else if(R_AIN3_DATA > 400)
     006C 2101                      1- 1488     	MOVIA	0x01
                                    1- 1489     	BANKSEL	_R_AIN3_DATA
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 04rr                      1- 1490     	SUBAR	(_R_AIN3_DATA + 1),W
     006F 0903                      1- 1491     	BTRSS	STATUS,2
                                    1- 1492     	MGOTO	_01065_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
     0071 2191                      1- 1493     	MOVIA	0x91
     0072 04rr                      1- 1494     	SUBAR	_R_AIN3_DATA,W
     0073                           1- 1495     _01065_DS_:
     0073 0803                      1- 1496     	BTRSS	STATUS,0
                                    1- 1497     	MGOTO	_00950_DS_
     0074 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1498     	.line	1000, "main.c"; 	if(++overCount > 5)
                                    1- 1499     	BANKSEL	_overCount
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 05rr                      1- 1500     	INCR	_overCount,F
                                    1- 1501     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1502     ;;unsigned compare: left >= lit (0x6=6), size=1
     0077 2106                      1- 1503     	MOVIA	0x06
     0078 04rr                      1- 1504     	SUBAR	_overCount,W
     0079 0803                      1- 1505     	BTRSS	STATUS,0
                                    1- 1506     	MGOTO	_00956_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1507     	.line	1002, "main.c"; 	overCount = 5;
     007B 2105                      1- 1508     	MOVIA	0x05
     007C 00rr                      1- 1509     	MOVAR	_overCount
                                    1- 1510     	.line	1003, "main.c"; 	tempLedStep = workStep;
                                    1- 1511     	BANKSEL	_workStep
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 01rr                      1- 1512     	MOVR	_workStep,W
                                    1- 1513     	BANKSEL	_tempLedStep
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 00rr                      1- 1514     	MOVAR	_tempLedStep
                                    1- 1515     	MGOTO	_00956_DS_
     0081 3rrr                      3-   63 m1      LGOTO rom_address
     0082                           1- 1516     _00950_DS_:
                                    1- 1517     	.line	1011, "main.c"; 	else if(R_AIN3_DATA > maxOut)
                                    1- 1518     	BANKSEL	_maxOut
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 01rr                      1- 1519     	MOVR	_maxOut,W
                                    1- 1520     	BANKSEL	r0x104C
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 00rr                      1- 1521     	MOVAR	r0x104C
                                    1- 1522     	BANKSEL	r0x104D
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 02rr                      1- 1523     	CLRR	r0x104D
                                    1- 1524     	BANKSEL	_R_AIN3_DATA
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 01rr                      1- 1525     	MOVR	(_R_AIN3_DATA + 1),W
                                    1- 1526     	BANKSEL	r0x104D
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 04rr                      1- 1527     	SUBAR	r0x104D,W
     008C 0903                      1- 1528     	BTRSS	STATUS,2
                                    1- 1529     	MGOTO	_01067_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1530     	BANKSEL	_R_AIN3_DATA
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 01rr                      1- 1531     	MOVR	_R_AIN3_DATA,W
                                    1- 1532     	BANKSEL	r0x104C
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 04rr                      1- 1533     	SUBAR	r0x104C,W
     0092                           1- 1534     _01067_DS_:
     0092 0C03                      1- 1535     	BTRSC	STATUS,0
                                    1- 1536     	MGOTO	_00947_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1537     	.line	1013, "main.c"; 	if(overCount > 0)
                                    1- 1538     	BANKSEL	_overCount
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 01rr                      1- 1539     	MOVR	_overCount,W
     0096 0903                      1- 1540     	BTRSS	STATUS,2
                                    1- 1541     	.line	1015, "main.c"; 	overCount--;
     0097 06rr                      1- 1542     	DECR	_overCount,F
                                    1- 1543     	.line	1018, "main.c"; 	if(workStep == 1)
                                    1- 1544     	BANKSEL	_workStep
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 01rr                      1- 1545     	MOVR	_workStep,W
     009A 2401                      1- 1546     	XORIA	0x01
     009B 0903                      1- 1547     	BTRSS	STATUS,2
                                    1- 1548     	MGOTO	_00913_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1549     	.line	1020, "main.c"; 	tempDuty = 79;
     009D 214F                      1- 1550     	MOVIA	0x4f
                                    1- 1551     	BANKSEL	_tempDuty
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 00rr                      1- 1552     	MOVAR	_tempDuty
                                    1- 1553     	MGOTO	_00914_DS_
     00A0 3rrr                      3-   63 m1      LGOTO rom_address
     00A1                           1- 1554     _00913_DS_:
                                    1- 1555     	.line	1022, "main.c"; 	else if(workStep == 2)
                                    1- 1556     	BANKSEL	_workStep
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 01rr                      1- 1557     	MOVR	_workStep,W
     00A3 2402                      1- 1558     	XORIA	0x02
     00A4 0903                      1- 1559     	BTRSS	STATUS,2
                                    1- 1560     	MGOTO	_00910_DS_
     00A5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1561     	.line	1024, "main.c"; 	tempDuty = 82;
     00A6 2152                      1- 1562     	MOVIA	0x52
                                    1- 1563     	BANKSEL	_tempDuty
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 00rr                      1- 1564     	MOVAR	_tempDuty
                                    1- 1565     	MGOTO	_00914_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
     00AA                           1- 1566     _00910_DS_:
                                    1- 1567     	.line	1026, "main.c"; 	else if(workStep == 3)
                                    1- 1568     	BANKSEL	_workStep
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 01rr                      1- 1569     	MOVR	_workStep,W
     00AC 2403                      1- 1570     	XORIA	0x03
     00AD 0903                      1- 1571     	BTRSS	STATUS,2
                                    1- 1572     	MGOTO	_00907_DS_
     00AE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1573     	.line	1028, "main.c"; 	tempDuty = 85;
     00AF 2155                      1- 1574     	MOVIA	0x55
                                    1- 1575     	BANKSEL	_tempDuty
     00B0 rrrr                      3-  110 m1      .banksel ram_address
     00B1 00rr                      1- 1576     	MOVAR	_tempDuty
                                    1- 1577     	MGOTO	_00914_DS_
     00B2 3rrr                      3-   63 m1      LGOTO rom_address
     00B3                           1- 1578     _00907_DS_:
                                    1- 1579     	.line	1030, "main.c"; 	else if(workStep == 4)
                                    1- 1580     	BANKSEL	_workStep
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 01rr                      1- 1581     	MOVR	_workStep,W
     00B5 2404                      1- 1582     	XORIA	0x04
     00B6 0903                      1- 1583     	BTRSS	STATUS,2
                                    1- 1584     	MGOTO	_00904_DS_
     00B7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1585     	.line	1032, "main.c"; 	tempDuty = 88;
     00B8 2158                      1- 1586     	MOVIA	0x58
                                    1- 1587     	BANKSEL	_tempDuty
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 00rr                      1- 1588     	MOVAR	_tempDuty
                                    1- 1589     	MGOTO	_00914_DS_
     00BB 3rrr                      3-   63 m1      LGOTO rom_address
     00BC                           1- 1590     _00904_DS_:
                                    1- 1591     	.line	1034, "main.c"; 	else if(workStep == 5)
                                    1- 1592     	BANKSEL	_workStep
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 01rr                      1- 1593     	MOVR	_workStep,W
     00BE 2405                      1- 1594     	XORIA	0x05
     00BF 0903                      1- 1595     	BTRSS	STATUS,2
                                    1- 1596     	MGOTO	_00901_DS_
     00C0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1597     	.line	1036, "main.c"; 	tempDuty = 90;
     00C1 215A                      1- 1598     	MOVIA	0x5a
                                    1- 1599     	BANKSEL	_tempDuty
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 00rr                      1- 1600     	MOVAR	_tempDuty
                                    1- 1601     	MGOTO	_00914_DS_
     00C4 3rrr                      3-   63 m1      LGOTO rom_address
     00C5                           1- 1602     _00901_DS_:
                                    1- 1603     	.line	1038, "main.c"; 	else if(workStep == 6)
                                    1- 1604     	BANKSEL	_workStep
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 01rr                      1- 1605     	MOVR	_workStep,W
     00C7 2406                      1- 1606     	XORIA	0x06
     00C8 0903                      1- 1607     	BTRSS	STATUS,2
                                    1- 1608     	MGOTO	_00898_DS_
     00C9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1609     	.line	1040, "main.c"; 	tempDuty = 93;
     00CA 215D                      1- 1610     	MOVIA	0x5d
                                    1- 1611     	BANKSEL	_tempDuty
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 00rr                      1- 1612     	MOVAR	_tempDuty
                                    1- 1613     	MGOTO	_00914_DS_
     00CD 3rrr                      3-   63 m1      LGOTO rom_address
     00CE                           1- 1614     _00898_DS_:
                                    1- 1615     	.line	1042, "main.c"; 	else if(workStep == 7)
                                    1- 1616     	BANKSEL	_workStep
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 01rr                      1- 1617     	MOVR	_workStep,W
     00D0 2407                      1- 1618     	XORIA	0x07
     00D1 0903                      1- 1619     	BTRSS	STATUS,2
                                    1- 1620     	MGOTO	_00895_DS_
     00D2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1621     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1622     ;;unsigned compare: left >= lit (0x56=86), size=2
                                    1- 1623     	.line	1044, "main.c"; 	if(R_AIN3_DATA > 85)
     00D3 2100                      1- 1624     	MOVIA	0x00
                                    1- 1625     	BANKSEL	_R_AIN3_DATA
     00D4 rrrr                      3-  110 m1      .banksel ram_address
     00D5 04rr                      1- 1626     	SUBAR	(_R_AIN3_DATA + 1),W
     00D6 0903                      1- 1627     	BTRSS	STATUS,2
                                    1- 1628     	MGOTO	_01068_DS_
     00D7 3rrr                      3-   63 m1      LGOTO rom_address
     00D8 2156                      1- 1629     	MOVIA	0x56
     00D9 04rr                      1- 1630     	SUBAR	_R_AIN3_DATA,W
     00DA                           1- 1631     _01068_DS_:
     00DA 0803                      1- 1632     	BTRSS	STATUS,0
                                    1- 1633     	MGOTO	_00914_DS_
     00DB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1634     	.line	1045, "main.c"; 	tempDuty = 96;
     00DC 2160                      1- 1635     	MOVIA	0x60
                                    1- 1636     	BANKSEL	_tempDuty
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 00rr                      1- 1637     	MOVAR	_tempDuty
                                    1- 1638     	MGOTO	_00914_DS_
     00DF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1639     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1640     ;;unsigned compare: left >= lit (0x5B=91), size=2
     00E0                           1- 1641     _00895_DS_:
                                    1- 1642     	.line	1049, "main.c"; 	if(R_AIN3_DATA > 90)
     00E0 2100                      1- 1643     	MOVIA	0x00
                                    1- 1644     	BANKSEL	_R_AIN3_DATA
     00E1 rrrr                      3-  110 m1      .banksel ram_address
     00E2 04rr                      1- 1645     	SUBAR	(_R_AIN3_DATA + 1),W
     00E3 0903                      1- 1646     	BTRSS	STATUS,2
                                    1- 1647     	MGOTO	_01069_DS_
     00E4 3rrr                      3-   63 m1      LGOTO rom_address
     00E5 215B                      1- 1648     	MOVIA	0x5b
     00E6 04rr                      1- 1649     	SUBAR	_R_AIN3_DATA,W
     00E7                           1- 1650     _01069_DS_:
     00E7 0803                      1- 1651     	BTRSS	STATUS,0
                                    1- 1652     	MGOTO	_00914_DS_
     00E8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1653     	.line	1050, "main.c"; 	tempDuty = 99;
     00E9 2163                      1- 1654     	MOVIA	0x63
                                    1- 1655     	BANKSEL	_tempDuty
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 00rr                      1- 1656     	MOVAR	_tempDuty
     00EC                           1- 1657     _00914_DS_:
                                    1- 1658     	.line	1053, "main.c"; 	PWM2DUTY = tempDuty;
                                    1- 1659     	BANKSEL	_tempDuty
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 01rr                      1- 1660     	MOVR	_tempDuty,W
     00EE 00rr                      1- 1661     	SFUN	_PWM2DUTY
                                    1- 1662     	MGOTO	_00956_DS_
     00EF 3rrr                      3-   63 m1      LGOTO rom_address
     00F0                           1- 1663     _00947_DS_:
                                    1- 1664     	.line	1057, "main.c"; 	if(overCount > 0)
                                    1- 1665     	BANKSEL	_overCount
     00F0 rrrr                      3-  110 m1      .banksel ram_address
     00F1 01rr                      1- 1666     	MOVR	_overCount,W
     00F2 0903                      1- 1667     	BTRSS	STATUS,2
                                    1- 1668     	.line	1059, "main.c"; 	overCount--;
     00F3 06rr                      1- 1669     	DECR	_overCount,F
                                    1- 1670     	.line	1061, "main.c"; 	if(R_AIN3_DATA > (maxOut - 26) && workStep < 4)
                                    1- 1671     	BANKSEL	_maxOut
     00F4 rrrr                      3-  110 m1      .banksel ram_address
     00F5 01rr                      1- 1672     	MOVR	_maxOut,W
                                    1- 1673     	BANKSEL	r0x104C
     00F6 rrrr                      3-  110 m1      .banksel ram_address
     00F7 00rr                      1- 1674     	MOVAR	r0x104C
                                    1- 1675     	BANKSEL	r0x104D
     00F8 rrrr                      3-  110 m1      .banksel ram_address
     00F9 02rr                      1- 1676     	CLRR	r0x104D
     00FA 21E6                      1- 1677     	MOVIA	0xe6
                                    1- 1678     	BANKSEL	r0x104C
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 03rr                      1- 1679     	ADDAR	r0x104C,F
     00FD 0C03                      1- 1680     	BTRSC	STATUS,0
                                    1- 1681     	MGOTO	_00005_DS_
     00FE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1682     	BANKSEL	r0x104D
     00FF rrrr                      3-  110 m1      .banksel ram_address
     0100 06rr                      1- 1683     	DECR	r0x104D,F
     0101                           1- 1684     _00005_DS_:
                                    1- 1685     	BANKSEL	r0x104C
     0101 rrrr                      3-  110 m1      .banksel ram_address
     0102 01rr                      1- 1686     	MOVR	r0x104C,W
                                    1- 1687     	BANKSEL	r0x104E
     0103 rrrr                      3-  110 m1      .banksel ram_address
     0104 00rr                      1- 1688     	MOVAR	r0x104E
                                    1- 1689     	BANKSEL	r0x104D
     0105 rrrr                      3-  110 m1      .banksel ram_address
     0106 01rr                      1- 1690     	MOVR	r0x104D,W
                                    1- 1691     	BANKSEL	r0x104F
     0107 rrrr                      3-  110 m1      .banksel ram_address
     0108 00rr                      1- 1692     	MOVAR	r0x104F
                                    1- 1693     	BANKSEL	_R_AIN3_DATA
     0109 rrrr                      3-  110 m1      .banksel ram_address
     010A 01rr                      1- 1694     	MOVR	(_R_AIN3_DATA + 1),W
                                    1- 1695     	BANKSEL	r0x104F
     010B rrrr                      3-  110 m1      .banksel ram_address
     010C 04rr                      1- 1696     	SUBAR	r0x104F,W
     010D 0903                      1- 1697     	BTRSS	STATUS,2
                                    1- 1698     	MGOTO	_01070_DS_
     010E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1699     	BANKSEL	_R_AIN3_DATA
     010F rrrr                      3-  110 m1      .banksel ram_address
     0110 01rr                      1- 1700     	MOVR	_R_AIN3_DATA,W
                                    1- 1701     	BANKSEL	r0x104E
     0111 rrrr                      3-  110 m1      .banksel ram_address
     0112 04rr                      1- 1702     	SUBAR	r0x104E,W
     0113                           1- 1703     _01070_DS_:
     0113 0C03                      1- 1704     	BTRSC	STATUS,0
                                    1- 1705     	MGOTO	_00926_DS_
     0114 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1706     ;;unsigned compare: left < lit (0x4=4), size=1
     0115 2104                      1- 1707     	MOVIA	0x04
                                    1- 1708     	BANKSEL	_workStep
     0116 rrrr                      3-  110 m1      .banksel ram_address
     0117 04rr                      1- 1709     	SUBAR	_workStep,W
     0118 0C03                      1- 1710     	BTRSC	STATUS,0
                                    1- 1711     	MGOTO	_00926_DS_
     0119 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1712     	.line	1063, "main.c"; 	if(workStep == 1)
     011A 01rr                      1- 1713     	MOVR	_workStep,W
     011B 2401                      1- 1714     	XORIA	0x01
     011C 0903                      1- 1715     	BTRSS	STATUS,2
                                    1- 1716     	MGOTO	_00923_DS_
     011D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1717     	.line	1065, "main.c"; 	tempDuty = 79;
     011E 214F                      1- 1718     	MOVIA	0x4f
                                    1- 1719     	BANKSEL	_tempDuty
     011F rrrr                      3-  110 m1      .banksel ram_address
     0120 00rr                      1- 1720     	MOVAR	_tempDuty
                                    1- 1721     	MGOTO	_00924_DS_
     0121 3rrr                      3-   63 m1      LGOTO rom_address
     0122                           1- 1722     _00923_DS_:
                                    1- 1723     	.line	1067, "main.c"; 	else if(workStep == 2)
                                    1- 1724     	BANKSEL	_workStep
     0122 rrrr                      3-  110 m1      .banksel ram_address
     0123 01rr                      1- 1725     	MOVR	_workStep,W
     0124 2402                      1- 1726     	XORIA	0x02
     0125 0903                      1- 1727     	BTRSS	STATUS,2
                                    1- 1728     	MGOTO	_00920_DS_
     0126 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1729     	.line	1069, "main.c"; 	tempDuty = 82;
     0127 2152                      1- 1730     	MOVIA	0x52
                                    1- 1731     	BANKSEL	_tempDuty
     0128 rrrr                      3-  110 m1      .banksel ram_address
     0129 00rr                      1- 1732     	MOVAR	_tempDuty
                                    1- 1733     	MGOTO	_00924_DS_
     012A 3rrr                      3-   63 m1      LGOTO rom_address
     012B                           1- 1734     _00920_DS_:
                                    1- 1735     	.line	1071, "main.c"; 	else if(workStep == 3)
                                    1- 1736     	BANKSEL	_workStep
     012B rrrr                      3-  110 m1      .banksel ram_address
     012C 01rr                      1- 1737     	MOVR	_workStep,W
     012D 2403                      1- 1738     	XORIA	0x03
     012E 0903                      1- 1739     	BTRSS	STATUS,2
                                    1- 1740     	MGOTO	_00924_DS_
     012F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1741     	.line	1073, "main.c"; 	tempDuty = 85;
     0130 2155                      1- 1742     	MOVIA	0x55
                                    1- 1743     	BANKSEL	_tempDuty
     0131 rrrr                      3-  110 m1      .banksel ram_address
     0132 00rr                      1- 1744     	MOVAR	_tempDuty
     0133                           1- 1745     _00924_DS_:
                                    1- 1746     	.line	1076, "main.c"; 	PWM2DUTY = tempDuty;
                                    1- 1747     	BANKSEL	_tempDuty
     0133 rrrr                      3-  110 m1      .banksel ram_address
     0134 01rr                      1- 1748     	MOVR	_tempDuty,W
     0135 00rr                      1- 1749     	SFUN	_PWM2DUTY
                                    1- 1750     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1751     ;;unsigned compare: left >= lit (0x3C=60), size=2
     0136                           1- 1752     _00926_DS_:
                                    1- 1753     	.line	1078, "main.c"; 	if(R_AIN3_DATA > 59 && workStep < 6 && workStep > 3)
     0136 2100                      1- 1754     	MOVIA	0x00
                                    1- 1755     	BANKSEL	_R_AIN3_DATA
     0137 rrrr                      3-  110 m1      .banksel ram_address
     0138 04rr                      1- 1756     	SUBAR	(_R_AIN3_DATA + 1),W
     0139 0903                      1- 1757     	BTRSS	STATUS,2
                                    1- 1758     	MGOTO	_01072_DS_
     013A 3rrr                      3-   63 m1      LGOTO rom_address
     013B 213C                      1- 1759     	MOVIA	0x3c
     013C 04rr                      1- 1760     	SUBAR	_R_AIN3_DATA,W
     013D                           1- 1761     _01072_DS_:
     013D 0803                      1- 1762     	BTRSS	STATUS,0
                                    1- 1763     	MGOTO	_00940_DS_
     013E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1764     ;;unsigned compare: left < lit (0x6=6), size=1
     013F 2106                      1- 1765     	MOVIA	0x06
                                    1- 1766     	BANKSEL	_workStep
     0140 rrrr                      3-  110 m1      .banksel ram_address
     0141 04rr                      1- 1767     	SUBAR	_workStep,W
     0142 0C03                      1- 1768     	BTRSC	STATUS,0
                                    1- 1769     	MGOTO	_00940_DS_
     0143 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1770     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1771     ;;unsigned compare: left >= lit (0x4=4), size=1
     0144 2104                      1- 1772     	MOVIA	0x04
     0145 04rr                      1- 1773     	SUBAR	_workStep,W
     0146 0803                      1- 1774     	BTRSS	STATUS,0
                                    1- 1775     	MGOTO	_00940_DS_
     0147 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1776     	.line	1080, "main.c"; 	if(workStep == 4)
     0148 01rr                      1- 1777     	MOVR	_workStep,W
     0149 2404                      1- 1778     	XORIA	0x04
     014A 0903                      1- 1779     	BTRSS	STATUS,2
                                    1- 1780     	MGOTO	_00931_DS_
     014B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1781     	.line	1082, "main.c"; 	tempDuty = 88;
     014C 2158                      1- 1782     	MOVIA	0x58
                                    1- 1783     	BANKSEL	_tempDuty
     014D rrrr                      3-  110 m1      .banksel ram_address
     014E 00rr                      1- 1784     	MOVAR	_tempDuty
                                    1- 1785     	MGOTO	_00941_DS_
     014F 3rrr                      3-   63 m1      LGOTO rom_address
     0150                           1- 1786     _00931_DS_:
                                    1- 1787     	.line	1084, "main.c"; 	else if(workStep == 5)
                                    1- 1788     	BANKSEL	_workStep
     0150 rrrr                      3-  110 m1      .banksel ram_address
     0151 01rr                      1- 1789     	MOVR	_workStep,W
     0152 2405                      1- 1790     	XORIA	0x05
     0153 0903                      1- 1791     	BTRSS	STATUS,2
                                    1- 1792     	MGOTO	_00941_DS_
     0154 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1793     	.line	1086, "main.c"; 	tempDuty = 90;
     0155 215A                      1- 1794     	MOVIA	0x5a
                                    1- 1795     	BANKSEL	_tempDuty
     0156 rrrr                      3-  110 m1      .banksel ram_address
     0157 00rr                      1- 1796     	MOVAR	_tempDuty
                                    1- 1797     	MGOTO	_00941_DS_
     0158 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1798     ;;unsigned compare: left < lit (0x43=67), size=2
     0159                           1- 1799     _00940_DS_:
                                    1- 1800     	.line	1089, "main.c"; 	else if(R_AIN3_DATA < 67)
     0159 2100                      1- 1801     	MOVIA	0x00
                                    1- 1802     	BANKSEL	_R_AIN3_DATA
     015A rrrr                      3-  110 m1      .banksel ram_address
     015B 04rr                      1- 1803     	SUBAR	(_R_AIN3_DATA + 1),W
     015C 0903                      1- 1804     	BTRSS	STATUS,2
                                    1- 1805     	MGOTO	_01075_DS_
     015D 3rrr                      3-   63 m1      LGOTO rom_address
     015E 2143                      1- 1806     	MOVIA	0x43
     015F 04rr                      1- 1807     	SUBAR	_R_AIN3_DATA,W
     0160                           1- 1808     _01075_DS_:
     0160 0C03                      1- 1809     	BTRSC	STATUS,0
                                    1- 1810     	MGOTO	_00937_DS_
     0161 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1811     	.line	1091, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 1812     	BANKSEL	_maxDuty
     0162 rrrr                      3-  110 m1      .banksel ram_address
     0163 01rr                      1- 1813     	MOVR	_maxDuty,W
     0164 00rr                      1- 1814     	SFUN	_PWM2DUTY
                                    1- 1815     	MGOTO	_00941_DS_
     0165 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1816     ;;unsigned compare: left < lit (0x7=7), size=1
     0166                           1- 1817     _00937_DS_:
                                    1- 1818     	.line	1093, "main.c"; 	else if(workStep >= 7 && R_AIN3_DATA < 75)
     0166 2107                      1- 1819     	MOVIA	0x07
                                    1- 1820     	BANKSEL	_workStep
     0167 rrrr                      3-  110 m1      .banksel ram_address
     0168 04rr                      1- 1821     	SUBAR	_workStep,W
     0169 0803                      1- 1822     	BTRSS	STATUS,0
                                    1- 1823     	MGOTO	_00941_DS_
     016A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1824     ;;unsigned compare: left < lit (0x4B=75), size=2
     016B 2100                      1- 1825     	MOVIA	0x00
                                    1- 1826     	BANKSEL	_R_AIN3_DATA
     016C rrrr                      3-  110 m1      .banksel ram_address
     016D 04rr                      1- 1827     	SUBAR	(_R_AIN3_DATA + 1),W
     016E 0903                      1- 1828     	BTRSS	STATUS,2
                                    1- 1829     	MGOTO	_01077_DS_
     016F 3rrr                      3-   63 m1      LGOTO rom_address
     0170 214B                      1- 1830     	MOVIA	0x4b
     0171 04rr                      1- 1831     	SUBAR	_R_AIN3_DATA,W
     0172                           1- 1832     _01077_DS_:
     0172 0C03                      1- 1833     	BTRSC	STATUS,0
                                    1- 1834     	MGOTO	_00941_DS_
     0173 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1835     	.line	1095, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 1836     	BANKSEL	_maxDuty
     0174 rrrr                      3-  110 m1      .banksel ram_address
     0175 01rr                      1- 1837     	MOVR	_maxDuty,W
     0176 00rr                      1- 1838     	SFUN	_PWM2DUTY
     0177                           1- 1839     _00941_DS_:
                                    1- 1840     	.line	1097, "main.c"; 	if(workStep > 0)
                                    1- 1841     	BANKSEL	_workStep
     0177 rrrr                      3-  110 m1      .banksel ram_address
     0178 01rr                      1- 1842     	MOVR	_workStep,W
     0179 0D03                      1- 1843     	BTRSC	STATUS,2
                                    1- 1844     	MGOTO	_00956_DS_
     017A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1845     	.line	1098, "main.c"; 	ledStep = workStep;
     017B 01rr                      1- 1846     	MOVR	_workStep,W
                                    1- 1847     	BANKSEL	_ledStep
     017C rrrr                      3-  110 m1      .banksel ram_address
     017D 00rr                      1- 1848     	MOVAR	_ledStep
     017E                           1- 1849     _00956_DS_:
                                    1- 1850     	.line	1102, "main.c"; 	}
                                    1- 1851     	RETURN	
     017E 0010                      3-   40 m1      ret
                                    1- 1852     ; exit point of _checkOutA
                                    1- 1854     ;***
                                    1- 1855     ;  pBlock Stats: dbName = C
                                    1- 1856     ;***
                                    1- 1857     ;has an exit
                                    1- 1858     ;functions called:
                                    1- 1859     ;   _F_AIN4_Convert
                                    1- 1860     ;   _F_AIN4_Convert
                                    1- 1861     ;4 compiler assigned registers:
                                    1- 1862     ;   r0x1050
                                    1- 1863     ;   r0x1051
                                    1- 1864     ;   r0x1052
                                    1- 1865     ;   r0x1053
                                    1- 1866     ;; Starting pCode block
                                    1- 1867     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1869     _checkBatAD:
                                    1- 1870     ; 2 exit points
                                    1- 1871     	.line	780, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1872     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1873     	CLRR	_R_AIN4_DATA_LB
                                    1- 1874     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1875     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1876     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1877     	.line	781, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1878     	MOVIA	0x08
                                    1- 1879     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1880     	.line	782, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1881     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1882     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1883     	ANDIA	0xf0
     000A 00rr                      1- 1884     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1885     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1886     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1887     	ANDIA	0x0f
     000E 11rr                      1- 1888     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1889     	XORAR	_R_AIN4_DATA,F
                                    1- 1890     	.line	783, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1891     	MOVIA	0xf0
                                    1- 1892     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1893     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1894     	.line	784, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1895     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1896     	BANKSEL	r0x1052
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1897     	MOVAR	r0x1052
                                    1- 1898     ;;1	MOVAR	r0x1050
                                    1- 1899     ;;1	CLRR	r0x1051
                                    1- 1900     ;;99	MOVR	r0x1050,W
     0016 2100                      1- 1901     	MOVIA	0x00
                                    1- 1902     	BANKSEL	r0x1053
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1903     	MOVAR	r0x1053
                                    1- 1904     	BANKSEL	r0x1052
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1905     	MOVR	r0x1052,W
                                    1- 1906     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1907     	ADDAR	_R_AIN4_DATA,F
                                    1- 1908     	BANKSEL	r0x1053
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1909     	MOVR	r0x1053,W
     001F 0C03                      1- 1910     	BTRSC	STATUS,0
     0020 05rr                      1- 1911     	INCR	r0x1053,W
     0021 0D03                      1- 1912     	BTRSC	STATUS,2
                                    1- 1913     	MGOTO	_00006_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1914     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1915     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1916     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1917     _00006_DS_:
                                    1- 1918     	.line	785, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1919     	BCR	STATUS,0
                                    1- 1920     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1921     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1922     	RRR	_R_AIN4_DATA,F
                                    1- 1923     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1924     	BCR	STATUS,0
     002A 13rr                      1- 1925     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1926     	RRR	_R_AIN4_DATA,F
                                    1- 1927     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1928     	BCR	STATUS,0
     002D 13rr                      1- 1929     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1930     	RRR	_R_AIN4_DATA,F
                                    1- 1931     	.line	786, "main.c"; 	if(debug)
                                    1- 1932     	BANKSEL	_debug
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1933     	MOVR	_debug,W
     0031 0D03                      1- 1934     	BTRSC	STATUS,2
                                    1- 1935     	MGOTO	_00563_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1936     	.line	787, "main.c"; 	R_AIN4_DATA = BATTLE;
     0033 210E                      1- 1937     	MOVIA	0x0e
                                    1- 1938     	BANKSEL	_R_AIN4_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1939     	MOVAR	_R_AIN4_DATA
     0036 2106                      1- 1940     	MOVIA	0x06
     0037 00rr                      1- 1941     	MOVAR	(_R_AIN4_DATA + 1)
                                    1- 1942     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1943     ;;unsigned compare: left >= lit (0x60F=1551), size=2
     0038                           1- 1944     _00563_DS_:
                                    1- 1945     	.line	789, "main.c"; 	if(R_AIN4_DATA > 1550)
     0038 2106                      1- 1946     	MOVIA	0x06
                                    1- 1947     	BANKSEL	_R_AIN4_DATA
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1948     	SUBAR	(_R_AIN4_DATA + 1),W
     003B 0903                      1- 1949     	BTRSS	STATUS,2
                                    1- 1950     	MGOTO	_00834_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 210F                      1- 1951     	MOVIA	0x0f
     003E 04rr                      1- 1952     	SUBAR	_R_AIN4_DATA,W
     003F                           1- 1953     _00834_DS_:
     003F 0803                      1- 1954     	BTRSS	STATUS,0
                                    1- 1955     	MGOTO	_00575_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1956     	.line	792, "main.c"; 	lowCount = 0;
                                    1- 1957     	BANKSEL	_lowCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 1958     	CLRR	_lowCount
                                    1- 1959     	MGOTO	_00576_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1960     ;;unsigned compare: left < lit (0x479=1145), size=2
     0044                           1- 1961     _00575_DS_:
                                    1- 1962     	.line	794, "main.c"; 	else if(R_AIN4_DATA < 1145)
     0044 2104                      1- 1963     	MOVIA	0x04
                                    1- 1964     	BANKSEL	_R_AIN4_DATA
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 04rr                      1- 1965     	SUBAR	(_R_AIN4_DATA + 1),W
     0047 0903                      1- 1966     	BTRSS	STATUS,2
                                    1- 1967     	MGOTO	_00835_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 2179                      1- 1968     	MOVIA	0x79
     004A 04rr                      1- 1969     	SUBAR	_R_AIN4_DATA,W
     004B                           1- 1970     _00835_DS_:
     004B 0C03                      1- 1971     	BTRSC	STATUS,0
                                    1- 1972     	MGOTO	_00572_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1973     	.line	796, "main.c"; 	if(++lowCount < 10)
                                    1- 1974     	BANKSEL	_lowCount
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 05rr                      1- 1975     	INCR	_lowCount,F
                                    1- 1976     ;;unsigned compare: left < lit (0xA=10), size=1
     004F 210A                      1- 1977     	MOVIA	0x0a
     0050 04rr                      1- 1978     	SUBAR	_lowCount,W
     0051 0803                      1- 1979     	BTRSS	STATUS,0
                                    1- 1980     	.line	797, "main.c"; 	return;
                                    1- 1981     	MGOTO	_00679_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1982     	.line	798, "main.c"; 	lowCount = 10;
     0053 210A                      1- 1983     	MOVIA	0x0a
     0054 00rr                      1- 1984     	MOVAR	_lowCount
                                    1- 1985     	.line	799, "main.c"; 	pwStep = 0;
                                    1- 1986     	BANKSEL	_pwStep
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 02rr                      1- 1987     	CLRR	_pwStep
                                    1- 1988     	.line	800, "main.c"; 	R_AIN4_DATA = 1135;
     0057 216F                      1- 1989     	MOVIA	0x6f
                                    1- 1990     	BANKSEL	_R_AIN4_DATA
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 00rr                      1- 1991     	MOVAR	_R_AIN4_DATA
     005A 2104                      1- 1992     	MOVIA	0x04
     005B 00rr                      1- 1993     	MOVAR	(_R_AIN4_DATA + 1)
                                    1- 1994     	.line	802, "main.c"; 	if(workStep > 0 && ++firstTime == 10)
                                    1- 1995     	BANKSEL	_workStep
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 01rr                      1- 1996     	MOVR	_workStep,W
     005E 0D03                      1- 1997     	BTRSC	STATUS,2
                                    1- 1998     	MGOTO	_00567_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1999     	BANKSEL	_firstTime
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 05rr                      1- 2000     	INCR	_firstTime,F
     0062 01rr                      1- 2001     	MOVR	_firstTime,W
     0063 240A                      1- 2002     	XORIA	0x0a
     0064 0903                      1- 2003     	BTRSS	STATUS,2
                                    1- 2004     	MGOTO	_00567_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2005     	.line	804, "main.c"; 	shanshuoTime = 16;
     0066 2110                      1- 2006     	MOVIA	0x10
                                    1- 2007     	BANKSEL	_shanshuoTime
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 00rr                      1- 2008     	MOVAR	_shanshuoTime
                                    1- 2009     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2010     ;;unsigned compare: left >= lit (0xC=12), size=1
     0069                           1- 2011     _00567_DS_:
                                    1- 2012     	.line	807, "main.c"; 	if(firstTime > 11)
     0069 210C                      1- 2013     	MOVIA	0x0c
                                    1- 2014     	BANKSEL	_firstTime
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 04rr                      1- 2015     	SUBAR	_firstTime,W
     006C 0803                      1- 2016     	BTRSS	STATUS,0
                                    1- 2017     	MGOTO	_00576_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2018     	.line	808, "main.c"; 	firstTime = 11;
     006E 210B                      1- 2019     	MOVIA	0x0b
     006F 00rr                      1- 2020     	MOVAR	_firstTime
                                    1- 2021     	MGOTO	_00576_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
     0071                           1- 2022     _00572_DS_:
                                    1- 2023     	.line	812, "main.c"; 	lowCount = 0;
                                    1- 2024     	BANKSEL	_lowCount
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 02rr                      1- 2025     	CLRR	_lowCount
                                    1- 2026     	.line	813, "main.c"; 	firstTime = 0;
                                    1- 2027     	BANKSEL	_firstTime
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 02rr                      1- 2028     	CLRR	_firstTime
     0075                           1- 2029     _00576_DS_:
                                    1- 2030     	.line	815, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA - 1135;
     0075 2191                      1- 2031     	MOVIA	0x91
                                    1- 2032     	BANKSEL	_R_AIN4_DATA
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 03rr                      1- 2033     	ADDAR	_R_AIN4_DATA,F
     0078 21FB                      1- 2034     	MOVIA	0xfb
     0079 0C03                      1- 2035     	BTRSC	STATUS,0
     007A 21FC                      1- 2036     	MOVIA	0xfc
     007B 03rr                      1- 2037     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 2038     ;;unsigned compare: left < lit (0x1A4=420), size=2
                                    1- 2039     	.line	816, "main.c"; 	if(R_AIN4_DATA >= 420)
     007C 2101                      1- 2040     	MOVIA	0x01
     007D 04rr                      1- 2041     	SUBAR	(_R_AIN4_DATA + 1),W
     007E 0903                      1- 2042     	BTRSS	STATUS,2
                                    1- 2043     	MGOTO	_00838_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
     0080 21A4                      1- 2044     	MOVIA	0xa4
     0081 04rr                      1- 2045     	SUBAR	_R_AIN4_DATA,W
     0082                           1- 2046     _00838_DS_:
     0082 0803                      1- 2047     	BTRSS	STATUS,0
                                    1- 2048     	MGOTO	_00675_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2049     	.line	818, "main.c"; 	pwStep = 10;
     0084 210A                      1- 2050     	MOVIA	0x0a
                                    1- 2051     	BANKSEL	_pwStep
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 00rr                      1- 2052     	MOVAR	_pwStep
                                    1- 2053     	MGOTO	_00676_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2054     ;;unsigned compare: left < lit (0x19A=410), size=2
     0088                           1- 2055     _00675_DS_:
                                    1- 2056     	.line	820, "main.c"; 	else if(R_AIN4_DATA >= 410)
     0088 2101                      1- 2057     	MOVIA	0x01
                                    1- 2058     	BANKSEL	_R_AIN4_DATA
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 04rr                      1- 2059     	SUBAR	(_R_AIN4_DATA + 1),W
     008B 0903                      1- 2060     	BTRSS	STATUS,2
                                    1- 2061     	MGOTO	_00839_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
     008D 219A                      1- 2062     	MOVIA	0x9a
     008E 04rr                      1- 2063     	SUBAR	_R_AIN4_DATA,W
     008F                           1- 2064     _00839_DS_:
     008F 0803                      1- 2065     	BTRSS	STATUS,0
                                    1- 2066     	MGOTO	_00672_DS_
     0090 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2067     	.line	822, "main.c"; 	pwStep = 9;
     0091 2109                      1- 2068     	MOVIA	0x09
                                    1- 2069     	BANKSEL	_pwStep
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 00rr                      1- 2070     	MOVAR	_pwStep
                                    1- 2071     	MGOTO	_00676_DS_
     0094 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2072     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2073     ;;unsigned compare: left >= lit (0x18C=396), size=2
     0095                           1- 2074     _00672_DS_:
                                    1- 2075     	.line	824, "main.c"; 	else if(R_AIN4_DATA > 395)
     0095 2101                      1- 2076     	MOVIA	0x01
                                    1- 2077     	BANKSEL	_R_AIN4_DATA
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 04rr                      1- 2078     	SUBAR	(_R_AIN4_DATA + 1),W
     0098 0903                      1- 2079     	BTRSS	STATUS,2
                                    1- 2080     	MGOTO	_00840_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
     009A 218C                      1- 2081     	MOVIA	0x8c
     009B 04rr                      1- 2082     	SUBAR	_R_AIN4_DATA,W
     009C                           1- 2083     _00840_DS_:
     009C 0803                      1- 2084     	BTRSS	STATUS,0
                                    1- 2085     	MGOTO	_00669_DS_
     009D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2086     	.line	826, "main.c"; 	fullCount = 0;
                                    1- 2087     	BANKSEL	_fullCount
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 02rr                      1- 2088     	CLRR	_fullCount
                                    1- 2089     ;;unsigned compare: left < lit (0x8=8), size=1
                                    1- 2090     	.line	827, "main.c"; 	if(pwStep < 8)
     00A0 2108                      1- 2091     	MOVIA	0x08
                                    1- 2092     	BANKSEL	_pwStep
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 04rr                      1- 2093     	SUBAR	_pwStep,W
     00A3 0C03                      1- 2094     	BTRSC	STATUS,0
                                    1- 2095     	MGOTO	_00583_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2096     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2097     ;;unsigned compare: left >= lit (0x191=401), size=2
                                    1- 2098     	.line	829, "main.c"; 	if(R_AIN4_DATA > 400)
     00A5 2101                      1- 2099     	MOVIA	0x01
                                    1- 2100     	BANKSEL	_R_AIN4_DATA
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 04rr                      1- 2101     	SUBAR	(_R_AIN4_DATA + 1),W
     00A8 0903                      1- 2102     	BTRSS	STATUS,2
                                    1- 2103     	MGOTO	_00842_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
     00AA 2191                      1- 2104     	MOVIA	0x91
     00AB 04rr                      1- 2105     	SUBAR	_R_AIN4_DATA,W
     00AC                           1- 2106     _00842_DS_:
     00AC 0803                      1- 2107     	BTRSS	STATUS,0
                                    1- 2108     	MGOTO	_00584_DS_
     00AD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2109     	.line	830, "main.c"; 	pwStep = 8;
     00AE 2108                      1- 2110     	MOVIA	0x08
                                    1- 2111     	BANKSEL	_pwStep
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 00rr                      1- 2112     	MOVAR	_pwStep
                                    1- 2113     	MGOTO	_00584_DS_
     00B1 3rrr                      3-   63 m1      LGOTO rom_address
     00B2                           1- 2114     _00583_DS_:
                                    1- 2115     	.line	832, "main.c"; 	else if(chrgTime == 0 && R_AIN4_DATA < 405)
                                    1- 2116     	BANKSEL	_chrgTime
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 01rr                      1- 2117     	MOVR	_chrgTime,W
     00B4 11rr                      1- 2118     	IORAR	(_chrgTime + 1),W
     00B5 0903                      1- 2119     	BTRSS	STATUS,2
                                    1- 2120     	MGOTO	_00584_DS_
     00B6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2121     ;;unsigned compare: left < lit (0x195=405), size=2
     00B7 2101                      1- 2122     	MOVIA	0x01
                                    1- 2123     	BANKSEL	_R_AIN4_DATA
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 04rr                      1- 2124     	SUBAR	(_R_AIN4_DATA + 1),W
     00BA 0903                      1- 2125     	BTRSS	STATUS,2
                                    1- 2126     	MGOTO	_00843_DS_
     00BB 3rrr                      3-   63 m1      LGOTO rom_address
     00BC 2195                      1- 2127     	MOVIA	0x95
     00BD 04rr                      1- 2128     	SUBAR	_R_AIN4_DATA,W
     00BE                           1- 2129     _00843_DS_:
     00BE 0C03                      1- 2130     	BTRSC	STATUS,0
                                    1- 2131     	MGOTO	_00584_DS_
     00BF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2132     	.line	834, "main.c"; 	pwStep = 8;
     00C0 2108                      1- 2133     	MOVIA	0x08
                                    1- 2134     	BANKSEL	_pwStep
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 00rr                      1- 2135     	MOVAR	_pwStep
     00C3                           1- 2136     _00584_DS_:
                                    1- 2137     	.line	838, "main.c"; 	if(chrgTime > 0 && R_AIN4_DATA > 406 && chrgTime > 600)
                                    1- 2138     	BANKSEL	_chrgTime
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 01rr                      1- 2139     	MOVR	_chrgTime,W
     00C5 11rr                      1- 2140     	IORAR	(_chrgTime + 1),W
     00C6 0D03                      1- 2141     	BTRSC	STATUS,2
                                    1- 2142     	MGOTO	_00676_DS_
     00C7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2143     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2144     ;;unsigned compare: left >= lit (0x197=407), size=2
     00C8 2101                      1- 2145     	MOVIA	0x01
                                    1- 2146     	BANKSEL	_R_AIN4_DATA
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 04rr                      1- 2147     	SUBAR	(_R_AIN4_DATA + 1),W
     00CB 0903                      1- 2148     	BTRSS	STATUS,2
                                    1- 2149     	MGOTO	_00844_DS_
     00CC 3rrr                      3-   63 m1      LGOTO rom_address
     00CD 2197                      1- 2150     	MOVIA	0x97
     00CE 04rr                      1- 2151     	SUBAR	_R_AIN4_DATA,W
     00CF                           1- 2152     _00844_DS_:
     00CF 0803                      1- 2153     	BTRSS	STATUS,0
                                    1- 2154     	MGOTO	_00676_DS_
     00D0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2155     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2156     ;;unsigned compare: left >= lit (0x259=601), size=2
     00D1 2102                      1- 2157     	MOVIA	0x02
                                    1- 2158     	BANKSEL	_chrgTime
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 04rr                      1- 2159     	SUBAR	(_chrgTime + 1),W
     00D4 0903                      1- 2160     	BTRSS	STATUS,2
                                    1- 2161     	MGOTO	_00845_DS_
     00D5 3rrr                      3-   63 m1      LGOTO rom_address
     00D6 2159                      1- 2162     	MOVIA	0x59
     00D7 04rr                      1- 2163     	SUBAR	_chrgTime,W
     00D8                           1- 2164     _00845_DS_:
     00D8 0803                      1- 2165     	BTRSS	STATUS,0
                                    1- 2166     	MGOTO	_00676_DS_
     00D9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2167     	.line	840, "main.c"; 	chrgTime = 600;
     00DA 2158                      1- 2168     	MOVIA	0x58
                                    1- 2169     	BANKSEL	_chrgTime
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 00rr                      1- 2170     	MOVAR	_chrgTime
     00DD 2102                      1- 2171     	MOVIA	0x02
     00DE 00rr                      1- 2172     	MOVAR	(_chrgTime + 1)
                                    1- 2173     	.line	841, "main.c"; 	pwStep = 9;
     00DF 2109                      1- 2174     	MOVIA	0x09
                                    1- 2175     	BANKSEL	_pwStep
     00E0 rrrr                      3-  110 m1      .banksel ram_address
     00E1 00rr                      1- 2176     	MOVAR	_pwStep
                                    1- 2177     	MGOTO	_00676_DS_
     00E2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2178     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2179     ;;unsigned compare: left >= lit (0x17D=381), size=2
     00E3                           1- 2180     _00669_DS_:
                                    1- 2181     	.line	844, "main.c"; 	else if(R_AIN4_DATA > 380)
     00E3 2101                      1- 2182     	MOVIA	0x01
                                    1- 2183     	BANKSEL	_R_AIN4_DATA
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 04rr                      1- 2184     	SUBAR	(_R_AIN4_DATA + 1),W
     00E6 0903                      1- 2185     	BTRSS	STATUS,2
                                    1- 2186     	MGOTO	_00846_DS_
     00E7 3rrr                      3-   63 m1      LGOTO rom_address
     00E8 217D                      1- 2187     	MOVIA	0x7d
     00E9 04rr                      1- 2188     	SUBAR	_R_AIN4_DATA,W
     00EA                           1- 2189     _00846_DS_:
     00EA 0803                      1- 2190     	BTRSS	STATUS,0
                                    1- 2191     	MGOTO	_00666_DS_
     00EB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2192     	.line	847, "main.c"; 	if(pwStep == 6)
                                    1- 2193     	BANKSEL	_pwStep
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 01rr                      1- 2194     	MOVR	_pwStep,W
     00EE 2406                      1- 2195     	XORIA	0x06
     00EF 0903                      1- 2196     	BTRSS	STATUS,2
                                    1- 2197     	MGOTO	_00592_DS_
     00F0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2198     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2199     ;;unsigned compare: left >= lit (0x182=386), size=2
                                    1- 2200     	.line	849, "main.c"; 	if(R_AIN4_DATA > 385)
     00F1 2101                      1- 2201     	MOVIA	0x01
                                    1- 2202     	BANKSEL	_R_AIN4_DATA
     00F2 rrrr                      3-  110 m1      .banksel ram_address
     00F3 04rr                      1- 2203     	SUBAR	(_R_AIN4_DATA + 1),W
     00F4 0903                      1- 2204     	BTRSS	STATUS,2
                                    1- 2205     	MGOTO	_00847_DS_
     00F5 3rrr                      3-   63 m1      LGOTO rom_address
     00F6 2182                      1- 2206     	MOVIA	0x82
     00F7 04rr                      1- 2207     	SUBAR	_R_AIN4_DATA,W
     00F8                           1- 2208     _00847_DS_:
     00F8 0803                      1- 2209     	BTRSS	STATUS,0
                                    1- 2210     	MGOTO	_00592_DS_
     00F9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2211     	.line	850, "main.c"; 	pwStep = 7;
     00FA 2107                      1- 2212     	MOVIA	0x07
                                    1- 2213     	BANKSEL	_pwStep
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 00rr                      1- 2214     	MOVAR	_pwStep
                                    1- 2215     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2216     ;;unsigned compare: left >= lit (0x8=8), size=1
     00FD                           1- 2217     _00592_DS_:
                                    1- 2218     	.line	852, "main.c"; 	if(pwStep > 7)
     00FD 2108                      1- 2219     	MOVIA	0x08
                                    1- 2220     	BANKSEL	_pwStep
     00FE rrrr                      3-  110 m1      .banksel ram_address
     00FF 04rr                      1- 2221     	SUBAR	_pwStep,W
     0100 0803                      1- 2222     	BTRSS	STATUS,0
                                    1- 2223     	MGOTO	_00596_DS_
     0101 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2224     ;;unsigned compare: left < lit (0x186=390), size=2
                                    1- 2225     	.line	854, "main.c"; 	if(R_AIN4_DATA < 390)
     0102 2101                      1- 2226     	MOVIA	0x01
                                    1- 2227     	BANKSEL	_R_AIN4_DATA
     0103 rrrr                      3-  110 m1      .banksel ram_address
     0104 04rr                      1- 2228     	SUBAR	(_R_AIN4_DATA + 1),W
     0105 0903                      1- 2229     	BTRSS	STATUS,2
                                    1- 2230     	MGOTO	_00849_DS_
     0106 3rrr                      3-   63 m1      LGOTO rom_address
     0107 2186                      1- 2231     	MOVIA	0x86
     0108 04rr                      1- 2232     	SUBAR	_R_AIN4_DATA,W
     0109                           1- 2233     _00849_DS_:
     0109 0C03                      1- 2234     	BTRSC	STATUS,0
                                    1- 2235     	MGOTO	_00597_DS_
     010A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2236     	.line	855, "main.c"; 	pwStep = 7;
     010B 2107                      1- 2237     	MOVIA	0x07
                                    1- 2238     	BANKSEL	_pwStep
     010C rrrr                      3-  110 m1      .banksel ram_address
     010D 00rr                      1- 2239     	MOVAR	_pwStep
                                    1- 2240     	MGOTO	_00597_DS_
     010E 3rrr                      3-   63 m1      LGOTO rom_address
     010F                           1- 2241     _00596_DS_:
                                    1- 2242     	.line	858, "main.c"; 	pwStep = 7;
     010F 2107                      1- 2243     	MOVIA	0x07
                                    1- 2244     	BANKSEL	_pwStep
     0110 rrrr                      3-  110 m1      .banksel ram_address
     0111 00rr                      1- 2245     	MOVAR	_pwStep
     0112                           1- 2246     _00597_DS_:
                                    1- 2247     	.line	859, "main.c"; 	chrgTime = 0;
                                    1- 2248     	BANKSEL	_chrgTime
     0112 rrrr                      3-  110 m1      .banksel ram_address
     0113 02rr                      1- 2249     	CLRR	_chrgTime
     0114 02rr                      1- 2250     	CLRR	(_chrgTime + 1)
                                    1- 2251     	MGOTO	_00676_DS_
     0115 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2252     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2253     ;;unsigned compare: left >= lit (0x15A=346), size=2
     0116                           1- 2254     _00666_DS_:
                                    1- 2255     	.line	861, "main.c"; 	else if(R_AIN4_DATA > 345)
     0116 2101                      1- 2256     	MOVIA	0x01
                                    1- 2257     	BANKSEL	_R_AIN4_DATA
     0117 rrrr                      3-  110 m1      .banksel ram_address
     0118 04rr                      1- 2258     	SUBAR	(_R_AIN4_DATA + 1),W
     0119 0903                      1- 2259     	BTRSS	STATUS,2
                                    1- 2260     	MGOTO	_00850_DS_
     011A 3rrr                      3-   63 m1      LGOTO rom_address
     011B 215A                      1- 2261     	MOVIA	0x5a
     011C 04rr                      1- 2262     	SUBAR	_R_AIN4_DATA,W
     011D                           1- 2263     _00850_DS_:
     011D 0803                      1- 2264     	BTRSS	STATUS,0
                                    1- 2265     	MGOTO	_00663_DS_
     011E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2266     	.line	864, "main.c"; 	if(pwStep == 5)
                                    1- 2267     	BANKSEL	_pwStep
     011F rrrr                      3-  110 m1      .banksel ram_address
     0120 01rr                      1- 2268     	MOVR	_pwStep,W
     0121 2405                      1- 2269     	XORIA	0x05
     0122 0903                      1- 2270     	BTRSS	STATUS,2
                                    1- 2271     	MGOTO	_00601_DS_
     0123 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2272     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2273     ;;unsigned compare: left >= lit (0x15F=351), size=2
                                    1- 2274     	.line	866, "main.c"; 	if(R_AIN4_DATA > 350)
     0124 2101                      1- 2275     	MOVIA	0x01
                                    1- 2276     	BANKSEL	_R_AIN4_DATA
     0125 rrrr                      3-  110 m1      .banksel ram_address
     0126 04rr                      1- 2277     	SUBAR	(_R_AIN4_DATA + 1),W
     0127 0903                      1- 2278     	BTRSS	STATUS,2
                                    1- 2279     	MGOTO	_00851_DS_
     0128 3rrr                      3-   63 m1      LGOTO rom_address
     0129 215F                      1- 2280     	MOVIA	0x5f
     012A 04rr                      1- 2281     	SUBAR	_R_AIN4_DATA,W
     012B                           1- 2282     _00851_DS_:
     012B 0803                      1- 2283     	BTRSS	STATUS,0
                                    1- 2284     	MGOTO	_00601_DS_
     012C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2285     	.line	867, "main.c"; 	pwStep = 6;
     012D 2106                      1- 2286     	MOVIA	0x06
                                    1- 2287     	BANKSEL	_pwStep
     012E rrrr                      3-  110 m1      .banksel ram_address
     012F 00rr                      1- 2288     	MOVAR	_pwStep
                                    1- 2289     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2290     ;;unsigned compare: left >= lit (0x7=7), size=1
     0130                           1- 2291     _00601_DS_:
                                    1- 2292     	.line	869, "main.c"; 	if(pwStep > 6)
     0130 2107                      1- 2293     	MOVIA	0x07
                                    1- 2294     	BANKSEL	_pwStep
     0131 rrrr                      3-  110 m1      .banksel ram_address
     0132 04rr                      1- 2295     	SUBAR	_pwStep,W
     0133 0803                      1- 2296     	BTRSS	STATUS,0
                                    1- 2297     	MGOTO	_00605_DS_
     0134 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2298     ;;unsigned compare: left < lit (0x177=375), size=2
                                    1- 2299     	.line	871, "main.c"; 	if(R_AIN4_DATA < 375)
     0135 2101                      1- 2300     	MOVIA	0x01
                                    1- 2301     	BANKSEL	_R_AIN4_DATA
     0136 rrrr                      3-  110 m1      .banksel ram_address
     0137 04rr                      1- 2302     	SUBAR	(_R_AIN4_DATA + 1),W
     0138 0903                      1- 2303     	BTRSS	STATUS,2
                                    1- 2304     	MGOTO	_00853_DS_
     0139 3rrr                      3-   63 m1      LGOTO rom_address
     013A 2177                      1- 2305     	MOVIA	0x77
     013B 04rr                      1- 2306     	SUBAR	_R_AIN4_DATA,W
     013C                           1- 2307     _00853_DS_:
     013C 0C03                      1- 2308     	BTRSC	STATUS,0
                                    1- 2309     	MGOTO	_00606_DS_
     013D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2310     	.line	872, "main.c"; 	pwStep = 6;
     013E 2106                      1- 2311     	MOVIA	0x06
                                    1- 2312     	BANKSEL	_pwStep
     013F rrrr                      3-  110 m1      .banksel ram_address
     0140 00rr                      1- 2313     	MOVAR	_pwStep
                                    1- 2314     	MGOTO	_00606_DS_
     0141 3rrr                      3-   63 m1      LGOTO rom_address
     0142                           1- 2315     _00605_DS_:
                                    1- 2316     	.line	875, "main.c"; 	pwStep = 6;
     0142 2106                      1- 2317     	MOVIA	0x06
                                    1- 2318     	BANKSEL	_pwStep
     0143 rrrr                      3-  110 m1      .banksel ram_address
     0144 00rr                      1- 2319     	MOVAR	_pwStep
     0145                           1- 2320     _00606_DS_:
                                    1- 2321     	.line	876, "main.c"; 	chrgTime = 0;
                                    1- 2322     	BANKSEL	_chrgTime
     0145 rrrr                      3-  110 m1      .banksel ram_address
     0146 02rr                      1- 2323     	CLRR	_chrgTime
     0147 02rr                      1- 2324     	CLRR	(_chrgTime + 1)
                                    1- 2325     	MGOTO	_00676_DS_
     0148 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2326     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2327     ;;unsigned compare: left >= lit (0x132=306), size=2
     0149                           1- 2328     _00663_DS_:
                                    1- 2329     	.line	878, "main.c"; 	else if(R_AIN4_DATA > 305)
     0149 2101                      1- 2330     	MOVIA	0x01
                                    1- 2331     	BANKSEL	_R_AIN4_DATA
     014A rrrr                      3-  110 m1      .banksel ram_address
     014B 04rr                      1- 2332     	SUBAR	(_R_AIN4_DATA + 1),W
     014C 0903                      1- 2333     	BTRSS	STATUS,2
                                    1- 2334     	MGOTO	_00854_DS_
     014D 3rrr                      3-   63 m1      LGOTO rom_address
     014E 2132                      1- 2335     	MOVIA	0x32
     014F 04rr                      1- 2336     	SUBAR	_R_AIN4_DATA,W
     0150                           1- 2337     _00854_DS_:
     0150 0803                      1- 2338     	BTRSS	STATUS,0
                                    1- 2339     	MGOTO	_00660_DS_
     0151 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2340     	.line	881, "main.c"; 	if(pwStep == 4)
                                    1- 2341     	BANKSEL	_pwStep
     0152 rrrr                      3-  110 m1      .banksel ram_address
     0153 01rr                      1- 2342     	MOVR	_pwStep,W
     0154 2404                      1- 2343     	XORIA	0x04
     0155 0903                      1- 2344     	BTRSS	STATUS,2
                                    1- 2345     	MGOTO	_00610_DS_
     0156 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2346     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2347     ;;unsigned compare: left >= lit (0x137=311), size=2
                                    1- 2348     	.line	883, "main.c"; 	if(R_AIN4_DATA > 310)
     0157 2101                      1- 2349     	MOVIA	0x01
                                    1- 2350     	BANKSEL	_R_AIN4_DATA
     0158 rrrr                      3-  110 m1      .banksel ram_address
     0159 04rr                      1- 2351     	SUBAR	(_R_AIN4_DATA + 1),W
     015A 0903                      1- 2352     	BTRSS	STATUS,2
                                    1- 2353     	MGOTO	_00855_DS_
     015B 3rrr                      3-   63 m1      LGOTO rom_address
     015C 2137                      1- 2354     	MOVIA	0x37
     015D 04rr                      1- 2355     	SUBAR	_R_AIN4_DATA,W
     015E                           1- 2356     _00855_DS_:
     015E 0803                      1- 2357     	BTRSS	STATUS,0
                                    1- 2358     	MGOTO	_00610_DS_
     015F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2359     	.line	884, "main.c"; 	pwStep = 5;
     0160 2105                      1- 2360     	MOVIA	0x05
                                    1- 2361     	BANKSEL	_pwStep
     0161 rrrr                      3-  110 m1      .banksel ram_address
     0162 00rr                      1- 2362     	MOVAR	_pwStep
                                    1- 2363     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2364     ;;unsigned compare: left >= lit (0x6=6), size=1
     0163                           1- 2365     _00610_DS_:
                                    1- 2366     	.line	886, "main.c"; 	if(pwStep > 5)
     0163 2106                      1- 2367     	MOVIA	0x06
                                    1- 2368     	BANKSEL	_pwStep
     0164 rrrr                      3-  110 m1      .banksel ram_address
     0165 04rr                      1- 2369     	SUBAR	_pwStep,W
     0166 0803                      1- 2370     	BTRSS	STATUS,0
                                    1- 2371     	MGOTO	_00614_DS_
     0167 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2372     ;;unsigned compare: left < lit (0x154=340), size=2
                                    1- 2373     	.line	888, "main.c"; 	if(R_AIN4_DATA < 340)
     0168 2101                      1- 2374     	MOVIA	0x01
                                    1- 2375     	BANKSEL	_R_AIN4_DATA
     0169 rrrr                      3-  110 m1      .banksel ram_address
     016A 04rr                      1- 2376     	SUBAR	(_R_AIN4_DATA + 1),W
     016B 0903                      1- 2377     	BTRSS	STATUS,2
                                    1- 2378     	MGOTO	_00857_DS_
     016C 3rrr                      3-   63 m1      LGOTO rom_address
     016D 2154                      1- 2379     	MOVIA	0x54
     016E 04rr                      1- 2380     	SUBAR	_R_AIN4_DATA,W
     016F                           1- 2381     _00857_DS_:
     016F 0C03                      1- 2382     	BTRSC	STATUS,0
                                    1- 2383     	MGOTO	_00615_DS_
     0170 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2384     	.line	889, "main.c"; 	pwStep = 5;
     0171 2105                      1- 2385     	MOVIA	0x05
                                    1- 2386     	BANKSEL	_pwStep
     0172 rrrr                      3-  110 m1      .banksel ram_address
     0173 00rr                      1- 2387     	MOVAR	_pwStep
                                    1- 2388     	MGOTO	_00615_DS_
     0174 3rrr                      3-   63 m1      LGOTO rom_address
     0175                           1- 2389     _00614_DS_:
                                    1- 2390     	.line	892, "main.c"; 	pwStep = 5;
     0175 2105                      1- 2391     	MOVIA	0x05
                                    1- 2392     	BANKSEL	_pwStep
     0176 rrrr                      3-  110 m1      .banksel ram_address
     0177 00rr                      1- 2393     	MOVAR	_pwStep
     0178                           1- 2394     _00615_DS_:
                                    1- 2395     	.line	893, "main.c"; 	chrgTime = 0;
                                    1- 2396     	BANKSEL	_chrgTime
     0178 rrrr                      3-  110 m1      .banksel ram_address
     0179 02rr                      1- 2397     	CLRR	_chrgTime
     017A 02rr                      1- 2398     	CLRR	(_chrgTime + 1)
                                    1- 2399     	MGOTO	_00676_DS_
     017B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2400     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2401     ;;unsigned compare: left >= lit (0xF1=241), size=2
     017C                           1- 2402     _00660_DS_:
                                    1- 2403     	.line	895, "main.c"; 	else if(R_AIN4_DATA > 240)
     017C 2100                      1- 2404     	MOVIA	0x00
                                    1- 2405     	BANKSEL	_R_AIN4_DATA
     017D rrrr                      3-  110 m1      .banksel ram_address
     017E 04rr                      1- 2406     	SUBAR	(_R_AIN4_DATA + 1),W
     017F 0903                      1- 2407     	BTRSS	STATUS,2
                                    1- 2408     	MGOTO	_00858_DS_
     0180 3rrr                      3-   63 m1      LGOTO rom_address
     0181 21F1                      1- 2409     	MOVIA	0xf1
     0182 04rr                      1- 2410     	SUBAR	_R_AIN4_DATA,W
     0183                           1- 2411     _00858_DS_:
     0183 0803                      1- 2412     	BTRSS	STATUS,0
                                    1- 2413     	MGOTO	_00657_DS_
     0184 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2414     	.line	897, "main.c"; 	if(pwStep == 3)
                                    1- 2415     	BANKSEL	_pwStep
     0185 rrrr                      3-  110 m1      .banksel ram_address
     0186 01rr                      1- 2416     	MOVR	_pwStep,W
     0187 2403                      1- 2417     	XORIA	0x03
     0188 0903                      1- 2418     	BTRSS	STATUS,2
                                    1- 2419     	MGOTO	_00619_DS_
     0189 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2420     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2421     ;;unsigned compare: left >= lit (0xF6=246), size=2
                                    1- 2422     	.line	899, "main.c"; 	if(R_AIN4_DATA > 245)
     018A 2100                      1- 2423     	MOVIA	0x00
                                    1- 2424     	BANKSEL	_R_AIN4_DATA
     018B rrrr                      3-  110 m1      .banksel ram_address
     018C 04rr                      1- 2425     	SUBAR	(_R_AIN4_DATA + 1),W
     018D 0903                      1- 2426     	BTRSS	STATUS,2
                                    1- 2427     	MGOTO	_00859_DS_
     018E 3rrr                      3-   63 m1      LGOTO rom_address
     018F 21F6                      1- 2428     	MOVIA	0xf6
     0190 04rr                      1- 2429     	SUBAR	_R_AIN4_DATA,W
     0191                           1- 2430     _00859_DS_:
     0191 0803                      1- 2431     	BTRSS	STATUS,0
                                    1- 2432     	MGOTO	_00619_DS_
     0192 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2433     	.line	900, "main.c"; 	pwStep = 4;
     0193 2104                      1- 2434     	MOVIA	0x04
                                    1- 2435     	BANKSEL	_pwStep
     0194 rrrr                      3-  110 m1      .banksel ram_address
     0195 00rr                      1- 2436     	MOVAR	_pwStep
                                    1- 2437     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2438     ;;unsigned compare: left >= lit (0x5=5), size=1
     0196                           1- 2439     _00619_DS_:
                                    1- 2440     	.line	902, "main.c"; 	if(pwStep > 4)
     0196 2105                      1- 2441     	MOVIA	0x05
                                    1- 2442     	BANKSEL	_pwStep
     0197 rrrr                      3-  110 m1      .banksel ram_address
     0198 04rr                      1- 2443     	SUBAR	_pwStep,W
     0199 0803                      1- 2444     	BTRSS	STATUS,0
                                    1- 2445     	MGOTO	_00623_DS_
     019A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2446     ;;unsigned compare: left < lit (0x12C=300), size=2
                                    1- 2447     	.line	904, "main.c"; 	if(R_AIN4_DATA < 300)
     019B 2101                      1- 2448     	MOVIA	0x01
                                    1- 2449     	BANKSEL	_R_AIN4_DATA
     019C rrrr                      3-  110 m1      .banksel ram_address
     019D 04rr                      1- 2450     	SUBAR	(_R_AIN4_DATA + 1),W
     019E 0903                      1- 2451     	BTRSS	STATUS,2
                                    1- 2452     	MGOTO	_00861_DS_
     019F 3rrr                      3-   63 m1      LGOTO rom_address
     01A0 212C                      1- 2453     	MOVIA	0x2c
     01A1 04rr                      1- 2454     	SUBAR	_R_AIN4_DATA,W
     01A2                           1- 2455     _00861_DS_:
     01A2 0C03                      1- 2456     	BTRSC	STATUS,0
                                    1- 2457     	MGOTO	_00624_DS_
     01A3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2458     	.line	905, "main.c"; 	pwStep = 4;
     01A4 2104                      1- 2459     	MOVIA	0x04
                                    1- 2460     	BANKSEL	_pwStep
     01A5 rrrr                      3-  110 m1      .banksel ram_address
     01A6 00rr                      1- 2461     	MOVAR	_pwStep
                                    1- 2462     	MGOTO	_00624_DS_
     01A7 3rrr                      3-   63 m1      LGOTO rom_address
     01A8                           1- 2463     _00623_DS_:
                                    1- 2464     	.line	908, "main.c"; 	pwStep = 4;
     01A8 2104                      1- 2465     	MOVIA	0x04
                                    1- 2466     	BANKSEL	_pwStep
     01A9 rrrr                      3-  110 m1      .banksel ram_address
     01AA 00rr                      1- 2467     	MOVAR	_pwStep
     01AB                           1- 2468     _00624_DS_:
                                    1- 2469     	.line	909, "main.c"; 	chrgTime = 0;
                                    1- 2470     	BANKSEL	_chrgTime
     01AB rrrr                      3-  110 m1      .banksel ram_address
     01AC 02rr                      1- 2471     	CLRR	_chrgTime
     01AD 02rr                      1- 2472     	CLRR	(_chrgTime + 1)
                                    1- 2473     	MGOTO	_00676_DS_
     01AE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2474     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2475     ;;unsigned compare: left >= lit (0xC9=201), size=2
     01AF                           1- 2476     _00657_DS_:
                                    1- 2477     	.line	911, "main.c"; 	else if(R_AIN4_DATA > 200)
     01AF 2100                      1- 2478     	MOVIA	0x00
                                    1- 2479     	BANKSEL	_R_AIN4_DATA
     01B0 rrrr                      3-  110 m1      .banksel ram_address
     01B1 04rr                      1- 2480     	SUBAR	(_R_AIN4_DATA + 1),W
     01B2 0903                      1- 2481     	BTRSS	STATUS,2
                                    1- 2482     	MGOTO	_00862_DS_
     01B3 3rrr                      3-   63 m1      LGOTO rom_address
     01B4 21C9                      1- 2483     	MOVIA	0xc9
     01B5 04rr                      1- 2484     	SUBAR	_R_AIN4_DATA,W
     01B6                           1- 2485     _00862_DS_:
     01B6 0803                      1- 2486     	BTRSS	STATUS,0
                                    1- 2487     	MGOTO	_00654_DS_
     01B7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2488     	.line	913, "main.c"; 	if(pwStep == 2)
                                    1- 2489     	BANKSEL	_pwStep
     01B8 rrrr                      3-  110 m1      .banksel ram_address
     01B9 01rr                      1- 2490     	MOVR	_pwStep,W
     01BA 2402                      1- 2491     	XORIA	0x02
     01BB 0903                      1- 2492     	BTRSS	STATUS,2
                                    1- 2493     	MGOTO	_00628_DS_
     01BC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2494     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2495     ;;unsigned compare: left >= lit (0xD3=211), size=2
                                    1- 2496     	.line	915, "main.c"; 	if(R_AIN4_DATA > 210)
     01BD 2100                      1- 2497     	MOVIA	0x00
                                    1- 2498     	BANKSEL	_R_AIN4_DATA
     01BE rrrr                      3-  110 m1      .banksel ram_address
     01BF 04rr                      1- 2499     	SUBAR	(_R_AIN4_DATA + 1),W
     01C0 0903                      1- 2500     	BTRSS	STATUS,2
                                    1- 2501     	MGOTO	_00863_DS_
     01C1 3rrr                      3-   63 m1      LGOTO rom_address
     01C2 21D3                      1- 2502     	MOVIA	0xd3
     01C3 04rr                      1- 2503     	SUBAR	_R_AIN4_DATA,W
     01C4                           1- 2504     _00863_DS_:
     01C4 0803                      1- 2505     	BTRSS	STATUS,0
                                    1- 2506     	MGOTO	_00628_DS_
     01C5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2507     	.line	916, "main.c"; 	pwStep = 3;
     01C6 2103                      1- 2508     	MOVIA	0x03
                                    1- 2509     	BANKSEL	_pwStep
     01C7 rrrr                      3-  110 m1      .banksel ram_address
     01C8 00rr                      1- 2510     	MOVAR	_pwStep
                                    1- 2511     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2512     ;;unsigned compare: left >= lit (0x4=4), size=1
     01C9                           1- 2513     _00628_DS_:
                                    1- 2514     	.line	918, "main.c"; 	if(pwStep > 3)
     01C9 2104                      1- 2515     	MOVIA	0x04
                                    1- 2516     	BANKSEL	_pwStep
     01CA rrrr                      3-  110 m1      .banksel ram_address
     01CB 04rr                      1- 2517     	SUBAR	_pwStep,W
     01CC 0803                      1- 2518     	BTRSS	STATUS,0
                                    1- 2519     	MGOTO	_00632_DS_
     01CD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2520     ;;unsigned compare: left < lit (0xEB=235), size=2
                                    1- 2521     	.line	920, "main.c"; 	if(R_AIN4_DATA < 235)
     01CE 2100                      1- 2522     	MOVIA	0x00
                                    1- 2523     	BANKSEL	_R_AIN4_DATA
     01CF rrrr                      3-  110 m1      .banksel ram_address
     01D0 04rr                      1- 2524     	SUBAR	(_R_AIN4_DATA + 1),W
     01D1 0903                      1- 2525     	BTRSS	STATUS,2
                                    1- 2526     	MGOTO	_00865_DS_
     01D2 3rrr                      3-   63 m1      LGOTO rom_address
     01D3 21EB                      1- 2527     	MOVIA	0xeb
     01D4 04rr                      1- 2528     	SUBAR	_R_AIN4_DATA,W
     01D5                           1- 2529     _00865_DS_:
     01D5 0C03                      1- 2530     	BTRSC	STATUS,0
                                    1- 2531     	MGOTO	_00633_DS_
     01D6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2532     	.line	921, "main.c"; 	pwStep = 3;
     01D7 2103                      1- 2533     	MOVIA	0x03
                                    1- 2534     	BANKSEL	_pwStep
     01D8 rrrr                      3-  110 m1      .banksel ram_address
     01D9 00rr                      1- 2535     	MOVAR	_pwStep
                                    1- 2536     	MGOTO	_00633_DS_
     01DA 3rrr                      3-   63 m1      LGOTO rom_address
     01DB                           1- 2537     _00632_DS_:
                                    1- 2538     	.line	924, "main.c"; 	pwStep = 3;
     01DB 2103                      1- 2539     	MOVIA	0x03
                                    1- 2540     	BANKSEL	_pwStep
     01DC rrrr                      3-  110 m1      .banksel ram_address
     01DD 00rr                      1- 2541     	MOVAR	_pwStep
     01DE                           1- 2542     _00633_DS_:
                                    1- 2543     	.line	925, "main.c"; 	chrgTime = 0;
                                    1- 2544     	BANKSEL	_chrgTime
     01DE rrrr                      3-  110 m1      .banksel ram_address
     01DF 02rr                      1- 2545     	CLRR	_chrgTime
     01E0 02rr                      1- 2546     	CLRR	(_chrgTime + 1)
                                    1- 2547     	MGOTO	_00676_DS_
     01E1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2548     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2549     ;;unsigned compare: left >= lit (0x65=101), size=2
     01E2                           1- 2550     _00654_DS_:
                                    1- 2551     	.line	927, "main.c"; 	else if(R_AIN4_DATA > 100)
     01E2 2100                      1- 2552     	MOVIA	0x00
                                    1- 2553     	BANKSEL	_R_AIN4_DATA
     01E3 rrrr                      3-  110 m1      .banksel ram_address
     01E4 04rr                      1- 2554     	SUBAR	(_R_AIN4_DATA + 1),W
     01E5 0903                      1- 2555     	BTRSS	STATUS,2
                                    1- 2556     	MGOTO	_00866_DS_
     01E6 3rrr                      3-   63 m1      LGOTO rom_address
     01E7 2165                      1- 2557     	MOVIA	0x65
     01E8 04rr                      1- 2558     	SUBAR	_R_AIN4_DATA,W
     01E9                           1- 2559     _00866_DS_:
     01E9 0803                      1- 2560     	BTRSS	STATUS,0
                                    1- 2561     	MGOTO	_00651_DS_
     01EA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2562     	.line	930, "main.c"; 	if(pwStep == 1)
                                    1- 2563     	BANKSEL	_pwStep
     01EB rrrr                      3-  110 m1      .banksel ram_address
     01EC 01rr                      1- 2564     	MOVR	_pwStep,W
     01ED 2401                      1- 2565     	XORIA	0x01
     01EE 0903                      1- 2566     	BTRSS	STATUS,2
                                    1- 2567     	MGOTO	_00637_DS_
     01EF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2568     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2569     ;;unsigned compare: left >= lit (0x6F=111), size=2
                                    1- 2570     	.line	932, "main.c"; 	if(R_AIN4_DATA > 110)
     01F0 2100                      1- 2571     	MOVIA	0x00
                                    1- 2572     	BANKSEL	_R_AIN4_DATA
     01F1 rrrr                      3-  110 m1      .banksel ram_address
     01F2 04rr                      1- 2573     	SUBAR	(_R_AIN4_DATA + 1),W
     01F3 0903                      1- 2574     	BTRSS	STATUS,2
                                    1- 2575     	MGOTO	_00867_DS_
     01F4 3rrr                      3-   63 m1      LGOTO rom_address
     01F5 216F                      1- 2576     	MOVIA	0x6f
     01F6 04rr                      1- 2577     	SUBAR	_R_AIN4_DATA,W
     01F7                           1- 2578     _00867_DS_:
     01F7 0803                      1- 2579     	BTRSS	STATUS,0
                                    1- 2580     	MGOTO	_00637_DS_
     01F8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2581     	.line	933, "main.c"; 	pwStep = 2;
     01F9 2102                      1- 2582     	MOVIA	0x02
                                    1- 2583     	BANKSEL	_pwStep
     01FA rrrr                      3-  110 m1      .banksel ram_address
     01FB 00rr                      1- 2584     	MOVAR	_pwStep
                                    1- 2585     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2586     ;;unsigned compare: left >= lit (0x3=3), size=1
     01FC                           1- 2587     _00637_DS_:
                                    1- 2588     	.line	935, "main.c"; 	if(pwStep > 2)
     01FC 2103                      1- 2589     	MOVIA	0x03
                                    1- 2590     	BANKSEL	_pwStep
     01FD rrrr                      3-  110 m1      .banksel ram_address
     01FE 04rr                      1- 2591     	SUBAR	_pwStep,W
     01FF 0803                      1- 2592     	BTRSS	STATUS,0
                                    1- 2593     	MGOTO	_00641_DS_
     0200 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2594     ;;unsigned compare: left < lit (0x96=150), size=2
                                    1- 2595     	.line	937, "main.c"; 	if(R_AIN4_DATA < 150)
     0201 2100                      1- 2596     	MOVIA	0x00
                                    1- 2597     	BANKSEL	_R_AIN4_DATA
     0202 rrrr                      3-  110 m1      .banksel ram_address
     0203 04rr                      1- 2598     	SUBAR	(_R_AIN4_DATA + 1),W
     0204 0903                      1- 2599     	BTRSS	STATUS,2
                                    1- 2600     	MGOTO	_00869_DS_
     0205 3rrr                      3-   63 m1      LGOTO rom_address
     0206 2196                      1- 2601     	MOVIA	0x96
     0207 04rr                      1- 2602     	SUBAR	_R_AIN4_DATA,W
     0208                           1- 2603     _00869_DS_:
     0208 0C03                      1- 2604     	BTRSC	STATUS,0
                                    1- 2605     	MGOTO	_00642_DS_
     0209 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2606     	.line	938, "main.c"; 	pwStep = 2;
     020A 2102                      1- 2607     	MOVIA	0x02
                                    1- 2608     	BANKSEL	_pwStep
     020B rrrr                      3-  110 m1      .banksel ram_address
     020C 00rr                      1- 2609     	MOVAR	_pwStep
                                    1- 2610     	MGOTO	_00642_DS_
     020D 3rrr                      3-   63 m1      LGOTO rom_address
     020E                           1- 2611     _00641_DS_:
                                    1- 2612     	.line	941, "main.c"; 	pwStep = 2;
     020E 2102                      1- 2613     	MOVIA	0x02
                                    1- 2614     	BANKSEL	_pwStep
     020F rrrr                      3-  110 m1      .banksel ram_address
     0210 00rr                      1- 2615     	MOVAR	_pwStep
     0211                           1- 2616     _00642_DS_:
                                    1- 2617     	.line	942, "main.c"; 	chrgTime = 0;
                                    1- 2618     	BANKSEL	_chrgTime
     0211 rrrr                      3-  110 m1      .banksel ram_address
     0212 02rr                      1- 2619     	CLRR	_chrgTime
     0213 02rr                      1- 2620     	CLRR	(_chrgTime + 1)
                                    1- 2621     	MGOTO	_00676_DS_
     0214 3rrr                      3-   63 m1      LGOTO rom_address
     0215                           1- 2622     _00651_DS_:
                                    1- 2623     	.line	944, "main.c"; 	else  if(R_AIN4_DATA > 0)
                                    1- 2624     	BANKSEL	_R_AIN4_DATA
     0215 rrrr                      3-  110 m1      .banksel ram_address
     0216 01rr                      1- 2625     	MOVR	_R_AIN4_DATA,W
     0217 11rr                      1- 2626     	IORAR	(_R_AIN4_DATA + 1),W
     0218 0D03                      1- 2627     	BTRSC	STATUS,2
                                    1- 2628     	MGOTO	_00676_DS_
     0219 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2629     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2630     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 2631     	.line	947, "main.c"; 	if(pwStep > 1)
     021A 2102                      1- 2632     	MOVIA	0x02
                                    1- 2633     	BANKSEL	_pwStep
     021B rrrr                      3-  110 m1      .banksel ram_address
     021C 04rr                      1- 2634     	SUBAR	_pwStep,W
     021D 0803                      1- 2635     	BTRSS	STATUS,0
                                    1- 2636     	MGOTO	_00646_DS_
     021E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2637     ;;unsigned compare: left < lit (0x32=50), size=2
                                    1- 2638     	.line	949, "main.c"; 	if(R_AIN4_DATA < 50)
     021F 2100                      1- 2639     	MOVIA	0x00
                                    1- 2640     	BANKSEL	_R_AIN4_DATA
     0220 rrrr                      3-  110 m1      .banksel ram_address
     0221 04rr                      1- 2641     	SUBAR	(_R_AIN4_DATA + 1),W
     0222 0903                      1- 2642     	BTRSS	STATUS,2
                                    1- 2643     	MGOTO	_00871_DS_
     0223 3rrr                      3-   63 m1      LGOTO rom_address
     0224 2132                      1- 2644     	MOVIA	0x32
     0225 04rr                      1- 2645     	SUBAR	_R_AIN4_DATA,W
     0226                           1- 2646     _00871_DS_:
     0226 0C03                      1- 2647     	BTRSC	STATUS,0
                                    1- 2648     	MGOTO	_00647_DS_
     0227 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2649     	.line	950, "main.c"; 	pwStep = 1;
     0228 2101                      1- 2650     	MOVIA	0x01
                                    1- 2651     	BANKSEL	_pwStep
     0229 rrrr                      3-  110 m1      .banksel ram_address
     022A 00rr                      1- 2652     	MOVAR	_pwStep
                                    1- 2653     	MGOTO	_00647_DS_
     022B 3rrr                      3-   63 m1      LGOTO rom_address
     022C                           1- 2654     _00646_DS_:
                                    1- 2655     	.line	953, "main.c"; 	pwStep = 1;
     022C 2101                      1- 2656     	MOVIA	0x01
                                    1- 2657     	BANKSEL	_pwStep
     022D rrrr                      3-  110 m1      .banksel ram_address
     022E 00rr                      1- 2658     	MOVAR	_pwStep
     022F                           1- 2659     _00647_DS_:
                                    1- 2660     	.line	954, "main.c"; 	chrgTime = 0;
                                    1- 2661     	BANKSEL	_chrgTime
     022F rrrr                      3-  110 m1      .banksel ram_address
     0230 02rr                      1- 2662     	CLRR	_chrgTime
     0231 02rr                      1- 2663     	CLRR	(_chrgTime + 1)
     0232                           1- 2664     _00676_DS_:
                                    1- 2665     	.line	956, "main.c"; 	if(workStep > 0)
                                    1- 2666     	BANKSEL	_workStep
     0232 rrrr                      3-  110 m1      .banksel ram_address
     0233 01rr                      1- 2667     	MOVR	_workStep,W
     0234 0D03                      1- 2668     	BTRSC	STATUS,2
                                    1- 2669     	MGOTO	_00679_DS_
     0235 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2670     	.line	957, "main.c"; 	ledStep = workStep;
     0236 01rr                      1- 2671     	MOVR	_workStep,W
                                    1- 2672     	BANKSEL	_ledStep
     0237 rrrr                      3-  110 m1      .banksel ram_address
     0238 00rr                      1- 2673     	MOVAR	_ledStep
     0239                           1- 2674     _00679_DS_:
                                    1- 2675     	.line	959, "main.c"; 	}
                                    1- 2676     	RETURN	
     0239 0010                      3-   40 m1      ret
                                    1- 2677     ; exit point of _checkBatAD
                                    1- 2679     ;***
                                    1- 2680     ;  pBlock Stats: dbName = C
                                    1- 2681     ;***
                                    1- 2682     ;has an exit
                                    1- 2683     ;functions called:
                                    1- 2684     ;   _delay
                                    1- 2685     ;   _delay
                                    1- 2686     ;; Starting pCode block
                                    1- 2687     .segment "code"; module=main, function=_initAD
     0000                           1- 2689     _initAD:
                                    1- 2690     ; 2 exit points
                                    1- 2691     	.line	756, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 2692     	MOVIA	0x84
     0001 00rr                      1- 2693     	MOVAR	_ADMD
                                    1- 2694     	.line	761, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 2695     	CLRR	_ADVREFH
                                    1- 2696     	.line	766, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 2697     	MOVIA	0x10
     0004 00rr                      1- 2698     	MOVAR	_ADR
                                    1- 2699     	.line	768, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 2700     	MOVIA	0x03
     0006 00rr                      1- 2701     	MOVAR	_ADCR
                                    1- 2702     	.line	771, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 2703     	BSR	_ADMDbits,4
                                    1- 2704     	.line	772, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 2705     	MOVIA	0x64
                                    1- 2706     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2707     	.line	775, "main.c"; 	}
                                    1- 2708     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 2709     ; exit point of _initAD
                                    1- 2711     ;***
                                    1- 2712     ;  pBlock Stats: dbName = C
                                    1- 2713     ;***
                                    1- 2714     ;has an exit
                                    1- 2715     ;2 compiler assigned registers:
                                    1- 2716     ;   r0x1038
                                    1- 2717     ;   r0x1039
                                    1- 2718     ;; Starting pCode block
                                    1- 2719     .segment "code"; module=main, function=_delay
                                    1- 2721     ;local variable name mapping:
     0000                           1- 2724     _delay:
                                    1- 2725     ; 2 exit points
                                    1- 2726     	.line	746, "main.c"; 	void delay(u8t time)
                                    1- 2727     	BANKSEL	r0x1038
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2728     	MOVAR	r0x1038
                                    1- 2729     	.line	748, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2730     	BANKSEL	r0x1039
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2731     	CLRR	r0x1039
     0004                           1- 2732     _00551_DS_:
                                    1- 2733     	BANKSEL	r0x1038
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 2734     	MOVR	r0x1038,W
                                    1- 2735     	BANKSEL	r0x1039
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1- 2736     	SUBAR	r0x1039,W
     0008 0C03                      1- 2737     	BTRSC	STATUS,0
                                    1- 2738     	MGOTO	_00553_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2739     	.line	749, "main.c"; 	NOP();
     000A 0000                      1- 2740     	nop
                                    1- 2741     	.line	748, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2742     	BANKSEL	r0x1039
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 2743     	INCR	r0x1039,F
                                    1- 2744     	MGOTO	_00551_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 2745     _00553_DS_:
                                    1- 2746     	.line	750, "main.c"; 	}
                                    1- 2747     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2748     ; exit point of _delay
                                    1- 2750     ;***
                                    1- 2751     ;  pBlock Stats: dbName = C
                                    1- 2752     ;***
                                    1- 2753     ;has an exit
                                    1- 2754     ;functions called:
                                    1- 2755     ;   _pwmStop
                                    1- 2756     ;   _powerOff
                                    1- 2757     ;   _pwmStop
                                    1- 2758     ;   _powerOff
                                    1- 2759     ;5 compiler assigned registers:
                                    1- 2760     ;   r0x1054
                                    1- 2761     ;   r0x1055
                                    1- 2762     ;   r0x1056
                                    1- 2763     ;   r0x1057
                                    1- 2764     ;   r0x1058
                                    1- 2765     ;; Starting pCode block
                                    1- 2766     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2768     _chrgCtr:
                                    1- 2769     ; 2 exit points
                                    1- 2770     	.line	636, "main.c"; 	if(PORTA & 0x20)
                                    1- 2771     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Arr                      1- 2772     	BTRSS	_PORTA,5
                                    1- 2773     	MGOTO	_00482_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2774     	.line	639, "main.c"; 	lockStart = 0;
                                    1- 2775     	BANKSEL	_lockStart
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 2776     	CLRR	_lockStart
                                    1- 2777     	.line	640, "main.c"; 	chrgFlag = 1;
     0005 2101                      1- 2778     	MOVIA	0x01
                                    1- 2779     	BANKSEL	_chrgFlag
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 2780     	MOVAR	_chrgFlag
                                    1- 2781     	.line	641, "main.c"; 	workStep = 0;
                                    1- 2782     	BANKSEL	_workStep
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 2783     	CLRR	_workStep
                                    1- 2784     	.line	642, "main.c"; 	ledLightTime = 0;
                                    1- 2785     	BANKSEL	_ledLightTime
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 02rr                      1- 2786     	CLRR	_ledLightTime
                                    1- 2787     	.line	643, "main.c"; 	pwmStop();
                                    1- 2788     	MCALL	_pwmStop
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2789     	.line	645, "main.c"; 	if(fullLock || pwStep >= 9)
                                    1- 2790     	BANKSEL	_fullLock
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2791     	MOVR	_fullLock,W
     000F 0903                      1- 2792     	BTRSS	STATUS,2
                                    1- 2793     	MGOTO	_00463_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2794     ;;unsigned compare: left < lit (0x9=9), size=1
     0011 2109                      1- 2795     	MOVIA	0x09
                                    1- 2796     	BANKSEL	_pwStep
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 2797     	SUBAR	_pwStep,W
     0014 0803                      1- 2798     	BTRSS	STATUS,0
                                    1- 2799     	MGOTO	_00464_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
     0016                           1- 2800     _00463_DS_:
                                    1- 2801     	.line	648, "main.c"; 	ledStep = 8;
     0016 2108                      1- 2802     	MOVIA	0x08
                                    1- 2803     	BANKSEL	_ledStep
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 2804     	MOVAR	_ledStep
                                    1- 2805     	.line	649, "main.c"; 	if(++fullLockCount > 200)
                                    1- 2806     	BANKSEL	_fullLockCount
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 05rr                      1- 2807     	INCR	_fullLockCount,F
                                    1- 2808     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2809     ;;unsigned compare: left >= lit (0xC9=201), size=1
     001B 21C9                      1- 2810     	MOVIA	0xc9
     001C 04rr                      1- 2811     	SUBAR	_fullLockCount,W
     001D 0803                      1- 2812     	BTRSS	STATUS,0
                                    1- 2813     	MGOTO	_00446_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2814     	.line	651, "main.c"; 	fullLock = 1;
     001F 2101                      1- 2815     	MOVIA	0x01
                                    1- 2816     	BANKSEL	_fullLock
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 2817     	MOVAR	_fullLock
                                    1- 2818     	.line	652, "main.c"; 	fullLockCount = 200;
     0022 21C8                      1- 2819     	MOVIA	0xc8
                                    1- 2820     	BANKSEL	_fullLockCount
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 2821     	MOVAR	_fullLockCount
                                    1- 2822     	.line	653, "main.c"; 	PORTA |= 0x04;		//打开充满提示灯
                                    1- 2823     	BANKSEL	_PORTA
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 19rr                      1- 2824     	BSR	_PORTA,2
     0027                           1- 2825     _00446_DS_:
                                    1- 2826     	.line	655, "main.c"; 	if(pwStep == 10 && ++fullCount > 100)
                                    1- 2827     	BANKSEL	_pwStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 2828     	MOVR	_pwStep,W
     0029 240A                      1- 2829     	XORIA	0x0a
     002A 0903                      1- 2830     	BTRSS	STATUS,2
                                    1- 2831     	MGOTO	_00484_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2832     	BANKSEL	_fullCount
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 2833     	INCR	_fullCount,F
                                    1- 2834     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2835     ;;unsigned compare: left >= lit (0x65=101), size=1
     002E 2165                      1- 2836     	MOVIA	0x65
     002F 04rr                      1- 2837     	SUBAR	_fullCount,W
     0030 0803                      1- 2838     	BTRSS	STATUS,0
                                    1- 2839     	MGOTO	_00484_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2840     	.line	657, "main.c"; 	IOSTA |= 0x01;
     0032 001r                      1- 2841     	IOSTR	_IOSTA
                                    1- 2842     	BANKSEL	r0x1054
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 00rr                      1- 2843     	MOVAR	r0x1054
     0035 18rr                      1- 2844     	BSR	r0x1054,0
     0036 01rr                      1- 2845     	MOVR	r0x1054,W
     0037 000r                      1- 2846     	IOST	_IOSTA
                                    1- 2847     	.line	658, "main.c"; 	PORTA |= 0x04;		//打开充满提示灯
                                    1- 2848     	BANKSEL	_PORTA
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 19rr                      1- 2849     	BSR	_PORTA,2
                                    1- 2850     	MGOTO	_00484_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
     003B                           1- 2851     _00464_DS_:
                                    1- 2852     	.line	665, "main.c"; 	fullLockCount = 0;
                                    1- 2853     	BANKSEL	_fullLockCount
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 02rr                      1- 2854     	CLRR	_fullLockCount
                                    1- 2855     	.line	667, "main.c"; 	PORTA &= 0xFB;		//关闭充满提示灯
                                    1- 2856     	BANKSEL	_PORTA
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 1Drr                      1- 2857     	BCR	_PORTA,2
                                    1- 2858     	.line	668, "main.c"; 	fullCount = 0;
                                    1- 2859     	BANKSEL	_fullCount
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 02rr                      1- 2860     	CLRR	_fullCount
                                    1- 2861     	.line	669, "main.c"; 	if(count500ms == 0 && pwStep < 9)
                                    1- 2862     	BANKSEL	_count500ms
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 01rr                      1- 2863     	MOVR	_count500ms,W
     0043 0903                      1- 2864     	BTRSS	STATUS,2
                                    1- 2865     	MGOTO	_00458_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2866     ;;unsigned compare: left < lit (0x9=9), size=1
     0045 2109                      1- 2867     	MOVIA	0x09
                                    1- 2868     	BANKSEL	_pwStep
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 04rr                      1- 2869     	SUBAR	_pwStep,W
     0048 0C03                      1- 2870     	BTRSC	STATUS,0
                                    1- 2871     	MGOTO	_00458_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2872     	.line	671, "main.c"; 	if(lockLedStep < pwStep - 1)
     004A 01rr                      1- 2873     	MOVR	_pwStep,W
                                    1- 2874     	BANKSEL	r0x1054
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 00rr                      1- 2875     	MOVAR	r0x1054
                                    1- 2876     	BANKSEL	r0x1055
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 02rr                      1- 2877     	CLRR	r0x1055
     004F 21FF                      1- 2878     	MOVIA	0xff
                                    1- 2879     	BANKSEL	r0x1054
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 03rr                      1- 2880     	ADDAR	r0x1054,F
     0052 0C03                      1- 2881     	BTRSC	STATUS,0
                                    1- 2882     	MGOTO	_00007_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2883     	BANKSEL	r0x1055
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 06rr                      1- 2884     	DECR	r0x1055,F
     0056                           1- 2885     _00007_DS_:
                                    1- 2886     	BANKSEL	_lockLedStep
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 01rr                      1- 2887     	MOVR	_lockLedStep,W
                                    1- 2888     	BANKSEL	r0x1056
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 00rr                      1- 2889     	MOVAR	r0x1056
                                    1- 2890     ;;1	CLRR	r0x1057
     005A 2100                      1- 2891     	MOVIA	0x00
     005B 2580                      1- 2892     	ADDIA	0x80
                                    1- 2893     	BANKSEL	r0x1058
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 00rr                      1- 2894     	MOVAR	r0x1058
                                    1- 2895     	BANKSEL	r0x1055
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 01rr                      1- 2896     	MOVR	r0x1055,W
     0060 2580                      1- 2897     	ADDIA	0x80
                                    1- 2898     	BANKSEL	r0x1058
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 04rr                      1- 2899     	SUBAR	r0x1058,W
     0063 0903                      1- 2900     	BTRSS	STATUS,2
                                    1- 2901     	MGOTO	_00541_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2902     	BANKSEL	r0x1054
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 01rr                      1- 2903     	MOVR	r0x1054,W
                                    1- 2904     	BANKSEL	r0x1056
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 04rr                      1- 2905     	SUBAR	r0x1056,W
     0069                           1- 2906     _00541_DS_:
     0069 0C03                      1- 2907     	BTRSC	STATUS,0
                                    1- 2908     	MGOTO	_00455_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2909     	.line	673, "main.c"; 	if(lockLedStep == 0)
                                    1- 2910     	BANKSEL	_lockLedStep
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 01rr                      1- 2911     	MOVR	_lockLedStep,W
     006D 0903                      1- 2912     	BTRSS	STATUS,2
                                    1- 2913     	MGOTO	_00451_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2914     	.line	674, "main.c"; 	lockLedStep = pwStep - 1;
                                    1- 2915     	BANKSEL	_pwStep
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 06rr                      1- 2916     	DECR	_pwStep,W
                                    1- 2917     	BANKSEL	_lockLedStep
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 00rr                      1- 2918     	MOVAR	_lockLedStep
     0073                           1- 2919     _00451_DS_:
                                    1- 2920     	.line	675, "main.c"; 	if(++ledCount > 100)
                                    1- 2921     	BANKSEL	_ledCount
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 05rr                      1- 2922     	INCR	_ledCount,F
                                    1- 2923     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2924     ;;unsigned compare: left >= lit (0x65=101), size=1
     0075 2165                      1- 2925     	MOVIA	0x65
     0076 04rr                      1- 2926     	SUBAR	_ledCount,W
     0077 0803                      1- 2927     	BTRSS	STATUS,0
                                    1- 2928     	MGOTO	_00456_DS_
     0078 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2929     	.line	676, "main.c"; 	lockLedStep = pwStep - 1;
                                    1- 2930     	BANKSEL	_pwStep
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 06rr                      1- 2931     	DECR	_pwStep,W
                                    1- 2932     	BANKSEL	_lockLedStep
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 00rr                      1- 2933     	MOVAR	_lockLedStep
                                    1- 2934     	MGOTO	_00456_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
     007E                           1- 2935     _00455_DS_:
                                    1- 2936     	.line	681, "main.c"; 	ledCount = 0;
                                    1- 2937     	BANKSEL	_ledCount
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 02rr                      1- 2938     	CLRR	_ledCount
     0080                           1- 2939     _00456_DS_:
                                    1- 2940     	.line	684, "main.c"; 	ledStep = lockLedStep;
                                    1- 2941     	BANKSEL	_lockLedStep
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 01rr                      1- 2942     	MOVR	_lockLedStep,W
                                    1- 2943     	BANKSEL	_ledStep
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 00rr                      1- 2944     	MOVAR	_ledStep
                                    1- 2945     ;;unsigned compare: left < lit (0x1E=30), size=1
     0084                           1- 2946     _00458_DS_:
                                    1- 2947     	.line	686, "main.c"; 	if(count500ms < 30)
     0084 211E                      1- 2948     	MOVIA	0x1e
                                    1- 2949     	BANKSEL	_count500ms
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 04rr                      1- 2950     	SUBAR	_count500ms,W
     0087 0C03                      1- 2951     	BTRSC	STATUS,0
                                    1- 2952     	MGOTO	_00461_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2953     	.line	688, "main.c"; 	PORTA |= 0x02;		//打开充电灯
                                    1- 2954     	BANKSEL	_PORTA
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 18rr                      1- 2955     	BSR	_PORTA,1
                                    1- 2956     	MGOTO	_00462_DS_
     008B 3rrr                      3-   63 m1      LGOTO rom_address
     008C                           1- 2957     _00461_DS_:
                                    1- 2958     	.line	692, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
                                    1- 2959     	BANKSEL	_PORTA
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 1Crr                      1- 2960     	BCR	_PORTA,1
     008E                           1- 2961     _00462_DS_:
                                    1- 2962     	.line	695, "main.c"; 	IOSTA &= 0xFE;
     008E 001r                      1- 2963     	IOSTR	_IOSTA
                                    1- 2964     	BANKSEL	r0x1054
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 00rr                      1- 2965     	MOVAR	r0x1054
     0091 1Crr                      1- 2966     	BCR	r0x1054,0
     0092 01rr                      1- 2967     	MOVR	r0x1054,W
     0093 000r                      1- 2968     	IOST	_IOSTA
                                    1- 2969     	.line	696, "main.c"; 	PORTA |= 0x01;			//打开充电
                                    1- 2970     	BANKSEL	_PORTA
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 18rr                      1- 2971     	BSR	_PORTA,0
                                    1- 2972     	MGOTO	_00484_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
     0097                           1- 2973     _00482_DS_:
                                    1- 2974     	.line	702, "main.c"; 	fullLock = 0;
                                    1- 2975     	BANKSEL	_fullLock
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 02rr                      1- 2976     	CLRR	_fullLock
                                    1- 2977     	.line	703, "main.c"; 	fullLockCount = 0;
                                    1- 2978     	BANKSEL	_fullLockCount
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 02rr                      1- 2979     	CLRR	_fullLockCount
                                    1- 2980     	.line	704, "main.c"; 	lockLedStep = 0;
                                    1- 2981     	BANKSEL	_lockLedStep
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 02rr                      1- 2982     	CLRR	_lockLedStep
                                    1- 2983     	.line	705, "main.c"; 	if(workStep > 0 && pwStep == 0)
                                    1- 2984     	BANKSEL	_workStep
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 01rr                      1- 2985     	MOVR	_workStep,W
     009F 0D03                      1- 2986     	BTRSC	STATUS,2
                                    1- 2987     	MGOTO	_00470_DS_
     00A0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2988     	BANKSEL	_pwStep
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 01rr                      1- 2989     	MOVR	_pwStep,W
     00A3 0903                      1- 2990     	BTRSS	STATUS,2
                                    1- 2991     	MGOTO	_00470_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2992     	.line	707, "main.c"; 	if(++lowBat > 6000)
                                    1- 2993     	BANKSEL	_lowBat
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 05rr                      1- 2994     	INCR	_lowBat,F
     00A7 0D03                      1- 2995     	BTRSC	STATUS,2
     00A8 05rr                      1- 2996     	INCR	(_lowBat + 1),F
                                    1- 2997     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2998     ;;unsigned compare: left >= lit (0x1771=6001), size=2
     00A9 2117                      1- 2999     	MOVIA	0x17
     00AA 04rr                      1- 3000     	SUBAR	(_lowBat + 1),W
     00AB 0903                      1- 3001     	BTRSS	STATUS,2
                                    1- 3002     	MGOTO	_00544_DS_
     00AC 3rrr                      3-   63 m1      LGOTO rom_address
     00AD 2171                      1- 3003     	MOVIA	0x71
     00AE 04rr                      1- 3004     	SUBAR	_lowBat,W
     00AF                           1- 3005     _00544_DS_:
     00AF 0803                      1- 3006     	BTRSS	STATUS,0
                                    1- 3007     	MGOTO	_00471_DS_
     00B0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3008     	.line	709, "main.c"; 	shandengTime = 500;
     00B1 21F4                      1- 3009     	MOVIA	0xf4
                                    1- 3010     	BANKSEL	_shandengTime
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 00rr                      1- 3011     	MOVAR	_shandengTime
     00B4 2101                      1- 3012     	MOVIA	0x01
     00B5 00rr                      1- 3013     	MOVAR	(_shandengTime + 1)
                                    1- 3014     	.line	710, "main.c"; 	lockStart = 1;
                                    1- 3015     	BANKSEL	_lockStart
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 00rr                      1- 3016     	MOVAR	_lockStart
                                    1- 3017     	.line	711, "main.c"; 	lowBat = 0;
                                    1- 3018     	BANKSEL	_lowBat
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 02rr                      1- 3019     	CLRR	_lowBat
     00BA 02rr                      1- 3020     	CLRR	(_lowBat + 1)
                                    1- 3021     	.line	712, "main.c"; 	powerOff();
                                    1- 3022     	MCALL	_powerOff
     00BB 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3023     	MGOTO	_00471_DS_
     00BC 3rrr                      3-   63 m1      LGOTO rom_address
     00BD                           1- 3024     _00470_DS_:
                                    1- 3025     	.line	717, "main.c"; 	lowBat = 0;
                                    1- 3026     	BANKSEL	_lowBat
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 02rr                      1- 3027     	CLRR	_lowBat
     00BF 02rr                      1- 3028     	CLRR	(_lowBat + 1)
     00C0                           1- 3029     _00471_DS_:
                                    1- 3030     	.line	719, "main.c"; 	if(shandengTime > 0)
                                    1- 3031     	BANKSEL	_shandengTime
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 01rr                      1- 3032     	MOVR	_shandengTime,W
     00C2 11rr                      1- 3033     	IORAR	(_shandengTime + 1),W
     00C3 0D03                      1- 3034     	BTRSC	STATUS,2
                                    1- 3035     	MGOTO	_00477_DS_
     00C4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3036     	.line	721, "main.c"; 	shandengTime--;
     00C5 21FF                      1- 3037     	MOVIA	0xff
     00C6 03rr                      1- 3038     	ADDAR	_shandengTime,F
     00C7 0803                      1- 3039     	BTRSS	STATUS,0
     00C8 06rr                      1- 3040     	DECR	(_shandengTime + 1),F
                                    1- 3041     ;;unsigned compare: left < lit (0x1E=30), size=1
                                    1- 3042     	.line	722, "main.c"; 	if(count500ms < 30)
     00C9 211E                      1- 3043     	MOVIA	0x1e
                                    1- 3044     	BANKSEL	_count500ms
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 04rr                      1- 3045     	SUBAR	_count500ms,W
     00CC 0C03                      1- 3046     	BTRSC	STATUS,0
                                    1- 3047     	MGOTO	_00474_DS_
     00CD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3048     	.line	724, "main.c"; 	PORTA |= 0x02;		//打开充电灯
                                    1- 3049     	BANKSEL	_PORTA
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 18rr                      1- 3050     	BSR	_PORTA,1
                                    1- 3051     	MGOTO	_00478_DS_
     00D0 3rrr                      3-   63 m1      LGOTO rom_address
     00D1                           1- 3052     _00474_DS_:
                                    1- 3053     	.line	728, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
                                    1- 3054     	BANKSEL	_PORTA
     00D1 rrrr                      3-  110 m1      .banksel ram_address
     00D2 1Crr                      1- 3055     	BCR	_PORTA,1
                                    1- 3056     	MGOTO	_00478_DS_
     00D3 3rrr                      3-   63 m1      LGOTO rom_address
     00D4                           1- 3057     _00477_DS_:
                                    1- 3058     	.line	732, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
                                    1- 3059     	BANKSEL	_PORTA
     00D4 rrrr                      3-  110 m1      .banksel ram_address
     00D5 1Crr                      1- 3060     	BCR	_PORTA,1
     00D6                           1- 3061     _00478_DS_:
                                    1- 3062     	.line	733, "main.c"; 	PORTA &= 0xFB;		//关闭充满提示灯
                                    1- 3063     	BANKSEL	_PORTA
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 1Drr                      1- 3064     	BCR	_PORTA,2
                                    1- 3065     	.line	734, "main.c"; 	IOSTA |= 0x01;
     00D8 001r                      1- 3066     	IOSTR	_IOSTA
                                    1- 3067     	BANKSEL	r0x1054
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 00rr                      1- 3068     	MOVAR	r0x1054
     00DB 18rr                      1- 3069     	BSR	r0x1054,0
     00DC 01rr                      1- 3070     	MOVR	r0x1054,W
     00DD 000r                      1- 3071     	IOST	_IOSTA
                                    1- 3072     	.line	735, "main.c"; 	chrgTime = 0;
                                    1- 3073     	BANKSEL	_chrgTime
     00DE rrrr                      3-  110 m1      .banksel ram_address
     00DF 02rr                      1- 3074     	CLRR	_chrgTime
     00E0 02rr                      1- 3075     	CLRR	(_chrgTime + 1)
                                    1- 3076     	.line	737, "main.c"; 	if(workStep == 0)
                                    1- 3077     	BANKSEL	_workStep
     00E1 rrrr                      3-  110 m1      .banksel ram_address
     00E2 01rr                      1- 3078     	MOVR	_workStep,W
     00E3 0903                      1- 3079     	BTRSS	STATUS,2
                                    1- 3080     	MGOTO	_00008_DS_
     00E4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3081     	.line	738, "main.c"; 	ledStep = 0;
                                    1- 3082     	BANKSEL	_ledStep
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 02rr                      1- 3083     	CLRR	_ledStep
     00E7                           1- 3084     _00008_DS_:
                                    1- 3085     	.line	739, "main.c"; 	chrgFlag = 0;
                                    1- 3086     	BANKSEL	_chrgFlag
     00E7 rrrr                      3-  110 m1      .banksel ram_address
     00E8 02rr                      1- 3087     	CLRR	_chrgFlag
                                    1- 3088     	.line	740, "main.c"; 	chrgTime = 0;	//重置充电计数
                                    1- 3089     	BANKSEL	_chrgTime
     00E9 rrrr                      3-  110 m1      .banksel ram_address
     00EA 02rr                      1- 3090     	CLRR	_chrgTime
     00EB 02rr                      1- 3091     	CLRR	(_chrgTime + 1)
     00EC                           1- 3092     _00484_DS_:
                                    1- 3093     	.line	743, "main.c"; 	}
                                    1- 3094     	RETURN	
     00EC 0010                      3-   40 m1      ret
                                    1- 3095     ; exit point of _chrgCtr
                                    1- 3097     ;***
                                    1- 3098     ;  pBlock Stats: dbName = C
                                    1- 3099     ;***
                                    1- 3100     ;has an exit
                                    1- 3101     ;1 compiler assigned register :
                                    1- 3102     ;   r0x1059
                                    1- 3103     ;; Starting pCode block
                                    1- 3104     .segment "code"; module=main, function=_keyRead
                                    1- 3106     ;local variable name mapping:
     0000                           1- 3108     _keyRead:
                                    1- 3109     ; 2 exit points
                                    1- 3110     	.line	599, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 3111     	BANKSEL	r0x1059
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 3112     	MOVAR	r0x1059
                                    1- 3113     	.line	601, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 3114     	MOVR	r0x1059,W
     0003 0D03                      1- 3115     	BTRSC	STATUS,2
                                    1- 3116     	MGOTO	_00438_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3117     	.line	603, "main.c"; 	keyCount++;
                                    1- 3118     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 3119     	INCR	_keyCount,F
                                    1- 3120     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 3121     	.line	604, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 3122     	MOVIA	0x64
     0008 04rr                      1- 3123     	SUBAR	_keyCount,W
     0009 0803                      1- 3124     	BTRSS	STATUS,0
                                    1- 3125     	MGOTO	_00439_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3126     	.line	606, "main.c"; 	keyCount = 100;
     000B 2164                      1- 3127     	MOVIA	0x64
     000C 00rr                      1- 3128     	MOVAR	_keyCount
                                    1- 3129     	.line	607, "main.c"; 	if(!longPressFlag)
                                    1- 3130     	BANKSEL	_longPressFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 3131     	MOVR	_longPressFlag,W
     000F 0903                      1- 3132     	BTRSS	STATUS,2
                                    1- 3133     	MGOTO	_00439_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3134     	.line	609, "main.c"; 	longPressFlag = 1;
     0011 2101                      1- 3135     	MOVIA	0x01
     0012 00rr                      1- 3136     	MOVAR	_longPressFlag
                                    1- 3137     	.line	610, "main.c"; 	return 2;
     0013 2102                      1- 3138     	MOVIA	0x02
                                    1- 3139     	MGOTO	_00440_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3140     ;;unsigned compare: left < lit (0x64=100), size=1
     0015                           1- 3141     _00438_DS_:
                                    1- 3142     	.line	616, "main.c"; 	if(keyCount >= 100)
     0015 2164                      1- 3143     	MOVIA	0x64
                                    1- 3144     	BANKSEL	_keyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1- 3145     	SUBAR	_keyCount,W
     0018 0803                      1- 3146     	BTRSS	STATUS,0
                                    1- 3147     	MGOTO	_00435_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3148     	.line	618, "main.c"; 	keyCount = 0;
     001A 02rr                      1- 3149     	CLRR	_keyCount
                                    1- 3150     	.line	619, "main.c"; 	longPressFlag = 0;
                                    1- 3151     	BANKSEL	_longPressFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 3152     	CLRR	_longPressFlag
                                    1- 3153     	.line	620, "main.c"; 	return	0;
     001D 2100                      1- 3154     	MOVIA	0x00
                                    1- 3155     	MGOTO	_00440_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3156     ;;unsigned compare: left < lit (0x4=4), size=1
     001F                           1- 3157     _00435_DS_:
                                    1- 3158     	.line	622, "main.c"; 	else if(keyCount >= 4)
     001F 2104                      1- 3159     	MOVIA	0x04
                                    1- 3160     	BANKSEL	_keyCount
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 3161     	SUBAR	_keyCount,W
     0022 0803                      1- 3162     	BTRSS	STATUS,0
                                    1- 3163     	MGOTO	_00436_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3164     	.line	624, "main.c"; 	keyCount = 0;
     0024 02rr                      1- 3165     	CLRR	_keyCount
                                    1- 3166     	.line	625, "main.c"; 	return	1;
     0025 2101                      1- 3167     	MOVIA	0x01
                                    1- 3168     	MGOTO	_00440_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 3169     _00436_DS_:
                                    1- 3170     	.line	627, "main.c"; 	keyCount = 0;
                                    1- 3171     	BANKSEL	_keyCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 3172     	CLRR	_keyCount
     0029                           1- 3173     _00439_DS_:
                                    1- 3174     	.line	629, "main.c"; 	return 0;
     0029 2100                      1- 3175     	MOVIA	0x00
     002A                           1- 3176     _00440_DS_:
                                    1- 3177     	.line	630, "main.c"; 	}
                                    1- 3178     	RETURN	
     002A 0010                      3-   40 m1      ret
                                    1- 3179     ; exit point of _keyRead
                                    1- 3181     ;***
                                    1- 3182     ;  pBlock Stats: dbName = C
                                    1- 3183     ;***
                                    1- 3184     ;has an exit
                                    1- 3185     ;functions called:
                                    1- 3186     ;   _LedInput
                                    1- 3187     ;   _pwmStop
                                    1- 3188     ;   _LedInput
                                    1- 3189     ;   _pwmStop
                                    1- 3190     ;; Starting pCode block
                                    1- 3191     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 3193     _gotoSleep:
                                    1- 3194     ; 2 exit points
                                    1- 3195     	.line	568, "main.c"; 	count900s = 0;
                                    1- 3196     	BANKSEL	_count900s
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 3197     	CLRR	_count900s
     0002 02rr                      1- 3198     	CLRR	(_count900s + 1)
                                    1- 3199     	.line	569, "main.c"; 	LedInput();
                                    1- 3200     	MCALL	_LedInput
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3201     	.line	570, "main.c"; 	pwmStop();
                                    1- 3202     	MCALL	_pwmStop
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3203     	.line	571, "main.c"; 	IOSTA = 0x60;
     0005 2160                      1- 3204     	MOVIA	0x60
     0006 000r                      1- 3205     	IOST	_IOSTA
                                    1- 3206     	.line	572, "main.c"; 	IOSTB = 0x00;
     0007 0200                      1- 3207     	CLRA	
     0008 000r                      1- 3208     	IOST	_IOSTB
                                    1- 3209     	.line	573, "main.c"; 	APHCON = 0x9F;
     0009 219F                      1- 3210     	MOVIA	0x9f
     000A 000r                      1- 3211     	IOST	_APHCON
                                    1- 3212     	.line	574, "main.c"; 	PORTB = 0x00;
     000B 02rr                      1- 3213     	CLRR	_PORTB
                                    1- 3214     	.line	575, "main.c"; 	PORTA = 0x00;
                                    1- 3215     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 02rr                      1- 3216     	CLRR	_PORTA
                                    1- 3217     	.line	576, "main.c"; 	sleepTime = 0;
                                    1- 3218     	BANKSEL	_sleepTime
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1- 3219     	CLRR	_sleepTime
     0010 02rr                      1- 3220     	CLRR	(_sleepTime + 1)
                                    1- 3221     	.line	578, "main.c"; 	workStep = 0;
                                    1- 3222     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 02rr                      1- 3223     	CLRR	_workStep
                                    1- 3224     	.line	579, "main.c"; 	AWUCON = 0x60;
     0013 2160                      1- 3225     	MOVIA	0x60
     0014 00rr                      1- 3226     	MOVAR	_AWUCON
                                    1- 3227     	.line	580, "main.c"; 	INTE =  C_INT_PABKey;
     0015 2102                      1- 3228     	MOVIA	0x02
     0016 00rr                      1- 3229     	MOVAR	_INTE
                                    1- 3230     	.line	581, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0017 2118                      1- 3231     	MOVIA	0x18
     0018 00rr                      1- 3232     	MOVAR	_PCON
                                    1- 3233     	.line	582, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0019 02rr                      1- 3234     	CLRR	_INTF
                                    1- 3235     	.line	583, "main.c"; 	CLRWDT();
     001A 0002                      1- 3236     	clrwdt
                                    1- 3237     	.line	584, "main.c"; 	ENI();
     001B 0004                      1- 3238     	ENI
                                    1- 3239     	.line	585, "main.c"; 	SLEEP();
     001C 0001                      1- 3240     	sleep
                                    1- 3241     	.line	586, "main.c"; 	AWUCON = 0x00;
     001D 02rr                      1- 3242     	CLRR	_AWUCON
                                    1- 3243     	.line	587, "main.c"; 	APHCON = 0xBF;
     001E 21BF                      1- 3244     	MOVIA	0xbf
     001F 000r                      1- 3245     	IOST	_APHCON
                                    1- 3246     	.line	588, "main.c"; 	PORTB = 0x00;
     0020 02rr                      1- 3247     	CLRR	_PORTB
                                    1- 3248     	.line	589, "main.c"; 	PORTA = 0x40;
     0021 2140                      1- 3249     	MOVIA	0x40
                                    1- 3250     	BANKSEL	_PORTA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 00rr                      1- 3251     	MOVAR	_PORTA
                                    1- 3252     	.line	590, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input ;
     0024 2178                      1- 3253     	MOVIA	0x78
     0025 000r                      1- 3254     	IOST	_IOSTA
                                    1- 3255     	.line	591, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0026 2101                      1- 3256     	MOVIA	0x01
     0027 00rr                      1- 3257     	MOVAR	_INTE
                                    1- 3258     	.line	592, "main.c"; 	INTF = 0;
     0028 02rr                      1- 3259     	CLRR	_INTF
                                    1- 3260     	.line	594, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0029 21B8                      1- 3261     	MOVIA	0xb8
     002A 00rr                      1- 3262     	MOVAR	_PCON
                                    1- 3263     	.line	596, "main.c"; 	}
                                    1- 3264     	RETURN	
     002B 0010                      3-   40 m1      ret
                                    1- 3265     ; exit point of _gotoSleep
                                    1- 3267     ;***
                                    1- 3268     ;  pBlock Stats: dbName = C
                                    1- 3269     ;***
                                    1- 3270     ;has an exit
                                    1- 3271     ;; Starting pCode block
                                    1- 3272     .segment "code"; module=main, function=_pwmStop
     0000                           1- 3274     _pwmStop:
                                    1- 3275     ; 2 exit points
                                    1- 3276     	.line	562, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 3277     	CLRA	
     0001 00rr                      1- 3278     	SFUN	_T2CR1
                                    1- 3279     	.line	563, "main.c"; 	}
                                    1- 3280     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 3281     ; exit point of _pwmStop
                                    1- 3283     ;***
                                    1- 3284     ;  pBlock Stats: dbName = C
                                    1- 3285     ;***
                                    1- 3286     ;has an exit
                                    1- 3287     ;1 compiler assigned register :
                                    1- 3288     ;   r0x105B
                                    1- 3289     ;; Starting pCode block
                                    1- 3290     .segment "code"; module=main, function=_pwmInit
     0000                           1- 3292     _pwmInit:
                                    1- 3293     ; 2 exit points
                                    1- 3294     	.line	550, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 3295     	SFUNR	_T2CR1
                                    1- 3296     	BANKSEL	r0x105B
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3297     	MOVAR	r0x105B
     0003 0Frr                      1- 3298     	BTRSC	r0x105B,7
                                    1- 3299     	.line	551, "main.c"; 	return;
                                    1- 3300     	MGOTO	_00415_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3301     	.line	552, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 3302     	CLRR	_TMRH
                                    1- 3303     	.line	553, "main.c"; 	TMR2 = 99;							//频率为110K
     0006 2163                      1- 3304     	MOVIA	0x63
     0007 00rr                      1- 3305     	SFUN	_TMR2
                                    1- 3306     	.line	556, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 3307     	CLRA	
     0009 00rr                      1- 3308     	SFUN	_T2CR2
                                    1- 3309     	.line	557, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 3310     	MOVIA	0x83
     000B 00rr                      1- 3311     	SFUN	_T2CR1
     000C                           1- 3312     _00415_DS_:
                                    1- 3313     	.line	558, "main.c"; 	}
                                    1- 3314     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 3315     ; exit point of _pwmInit
                                    1- 3317     ;***
                                    1- 3318     ;  pBlock Stats: dbName = C
                                    1- 3319     ;***
                                    1- 3320     ;has an exit
                                    1- 3321     ;; Starting pCode block
                                    1- 3322     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 3324     _pwm1Stop:
                                    1- 3325     ; 2 exit points
                                    1- 3326     	.line	543, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 3327     	CLRA	
     0001 00rr                      1- 3328     	SFUN	_T1CR1
                                    1- 3329     	.line	544, "main.c"; 	}
                                    1- 3330     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 3331     ; exit point of _pwm1Stop
                                    1- 3333     ;***
                                    1- 3334     ;  pBlock Stats: dbName = C
                                    1- 3335     ;***
                                    1- 3336     ;has an exit
                                    1- 3337     ;1 compiler assigned register :
                                    1- 3338     ;   r0x105C
                                    1- 3339     ;; Starting pCode block
                                    1- 3340     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 3342     _pwm1Init:
                                    1- 3343     ; 2 exit points
                                    1- 3344     	.line	531, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 3345     	SFUNR	_T1CR1
                                    1- 3346     	BANKSEL	r0x105C
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3347     	MOVAR	r0x105C
     0003 0Frr                      1- 3348     	BTRSC	r0x105C,7
                                    1- 3349     	.line	532, "main.c"; 	return;
                                    1- 3350     	MGOTO	_00404_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3351     	.line	533, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 3352     	CLRR	_TMRH
                                    1- 3353     	.line	534, "main.c"; 	TMR1 = 12;							//频率为110K
     0006 210C                      1- 3354     	MOVIA	0x0c
     0007 00rr                      1- 3355     	SFUN	_TMR1
                                    1- 3356     	.line	537, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 3357     	CLRA	
     0009 00rr                      1- 3358     	SFUN	_T1CR2
                                    1- 3359     	.line	538, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 3360     	MOVIA	0x83
     000B 00rr                      1- 3361     	SFUN	_T1CR1
     000C                           1- 3362     _00404_DS_:
                                    1- 3363     	.line	539, "main.c"; 	}
                                    1- 3364     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 3365     ; exit point of _pwm1Init
                                    1- 3367     ;***
                                    1- 3368     ;  pBlock Stats: dbName = C
                                    1- 3369     ;***
                                    1- 3370     ;has an exit
                                    1- 3371     ;functions called:
                                    1- 3372     ;   _delay
                                    1- 3373     ;   _LedInput
                                    1- 3374     ;   _delay
                                    1- 3375     ;   _LedInput
                                    1- 3376     ;1 compiler assigned register :
                                    1- 3377     ;   r0x105D
                                    1- 3378     ;; Starting pCode block
                                    1- 3379     .segment "code"; module=main, function=_LED8ON
     0000                           1- 3381     _LED8ON:
                                    1- 3382     ; 2 exit points
                                    1- 3383     	.line	521, "main.c"; 	L4OUT;
     0000 001r                      1- 3384     	IOSTR	_IOSTB
                                    1- 3385     	BANKSEL	r0x105D
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3386     	MOVAR	r0x105D
     0003 1Crr                      1- 3387     	BCR	r0x105D,0
     0004 01rr                      1- 3388     	MOVR	r0x105D,W
     0005 000r                      1- 3389     	IOST	_IOSTB
                                    1- 3390     	.line	522, "main.c"; 	L2OUT;
     0006 001r                      1- 3391     	IOSTR	_IOSTB
     0007 00rr                      1- 3392     	MOVAR	r0x105D
     0008 1Drr                      1- 3393     	BCR	r0x105D,3
     0009 01rr                      1- 3394     	MOVR	r0x105D,W
     000A 000r                      1- 3395     	IOST	_IOSTB
                                    1- 3396     	.line	523, "main.c"; 	L4H;
     000B 18rr                      1- 3397     	BSR	_PORTB,0
                                    1- 3398     	.line	524, "main.c"; 	L2L;
     000C 1Drr                      1- 3399     	BCR	_PORTB,3
                                    1- 3400     	.line	525, "main.c"; 	delay(80);
     000D 2150                      1- 3401     	MOVIA	0x50
                                    1- 3402     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3403     	.line	526, "main.c"; 	LedInput();
                                    1- 3404     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3405     	.line	527, "main.c"; 	}
                                    1- 3406     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3407     ; exit point of _LED8ON
                                    1- 3409     ;***
                                    1- 3410     ;  pBlock Stats: dbName = C
                                    1- 3411     ;***
                                    1- 3412     ;has an exit
                                    1- 3413     ;functions called:
                                    1- 3414     ;   _delay
                                    1- 3415     ;   _LedInput
                                    1- 3416     ;   _delay
                                    1- 3417     ;   _LedInput
                                    1- 3418     ;1 compiler assigned register :
                                    1- 3419     ;   r0x105E
                                    1- 3420     ;; Starting pCode block
                                    1- 3421     .segment "code"; module=main, function=_LED7ON
     0000                           1- 3423     _LED7ON:
                                    1- 3424     ; 2 exit points
                                    1- 3425     	.line	511, "main.c"; 	L4OUT;
     0000 001r                      1- 3426     	IOSTR	_IOSTB
                                    1- 3427     	BANKSEL	r0x105E
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3428     	MOVAR	r0x105E
     0003 1Crr                      1- 3429     	BCR	r0x105E,0
     0004 01rr                      1- 3430     	MOVR	r0x105E,W
     0005 000r                      1- 3431     	IOST	_IOSTB
                                    1- 3432     	.line	512, "main.c"; 	L2OUT;
     0006 001r                      1- 3433     	IOSTR	_IOSTB
     0007 00rr                      1- 3434     	MOVAR	r0x105E
     0008 1Drr                      1- 3435     	BCR	r0x105E,3
     0009 01rr                      1- 3436     	MOVR	r0x105E,W
     000A 000r                      1- 3437     	IOST	_IOSTB
                                    1- 3438     	.line	513, "main.c"; 	L2H;
     000B 19rr                      1- 3439     	BSR	_PORTB,3
                                    1- 3440     	.line	514, "main.c"; 	L4L;
     000C 1Crr                      1- 3441     	BCR	_PORTB,0
                                    1- 3442     	.line	515, "main.c"; 	delay(80);
     000D 2150                      1- 3443     	MOVIA	0x50
                                    1- 3444     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3445     	.line	516, "main.c"; 	LedInput();
                                    1- 3446     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3447     	.line	517, "main.c"; 	}
                                    1- 3448     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3449     ; exit point of _LED7ON
                                    1- 3451     ;***
                                    1- 3452     ;  pBlock Stats: dbName = C
                                    1- 3453     ;***
                                    1- 3454     ;has an exit
                                    1- 3455     ;functions called:
                                    1- 3456     ;   _delay
                                    1- 3457     ;   _LedInput
                                    1- 3458     ;   _delay
                                    1- 3459     ;   _LedInput
                                    1- 3460     ;1 compiler assigned register :
                                    1- 3461     ;   r0x105F
                                    1- 3462     ;; Starting pCode block
                                    1- 3463     .segment "code"; module=main, function=_LED6ON
     0000                           1- 3465     _LED6ON:
                                    1- 3466     ; 2 exit points
                                    1- 3467     	.line	501, "main.c"; 	L4OUT;
     0000 001r                      1- 3468     	IOSTR	_IOSTB
                                    1- 3469     	BANKSEL	r0x105F
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3470     	MOVAR	r0x105F
     0003 1Crr                      1- 3471     	BCR	r0x105F,0
     0004 01rr                      1- 3472     	MOVR	r0x105F,W
     0005 000r                      1- 3473     	IOST	_IOSTB
                                    1- 3474     	.line	502, "main.c"; 	L1OUT;
     0006 001r                      1- 3475     	IOSTR	_IOSTA
     0007 00rr                      1- 3476     	MOVAR	r0x105F
     0008 1Frr                      1- 3477     	BCR	r0x105F,7
     0009 01rr                      1- 3478     	MOVR	r0x105F,W
     000A 000r                      1- 3479     	IOST	_IOSTA
                                    1- 3480     	.line	503, "main.c"; 	L1H;
                                    1- 3481     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 1Brr                      1- 3482     	BSR	_PORTA,7
                                    1- 3483     	.line	504, "main.c"; 	L4L;
     000D 1Crr                      1- 3484     	BCR	_PORTB,0
                                    1- 3485     	.line	505, "main.c"; 	delay(80);
     000E 2150                      1- 3486     	MOVIA	0x50
                                    1- 3487     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3488     	.line	506, "main.c"; 	LedInput();
                                    1- 3489     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3490     	.line	507, "main.c"; 	}
                                    1- 3491     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3492     ; exit point of _LED6ON
                                    1- 3494     ;***
                                    1- 3495     ;  pBlock Stats: dbName = C
                                    1- 3496     ;***
                                    1- 3497     ;has an exit
                                    1- 3498     ;functions called:
                                    1- 3499     ;   _delay
                                    1- 3500     ;   _LedInput
                                    1- 3501     ;   _delay
                                    1- 3502     ;   _LedInput
                                    1- 3503     ;1 compiler assigned register :
                                    1- 3504     ;   r0x1060
                                    1- 3505     ;; Starting pCode block
                                    1- 3506     .segment "code"; module=main, function=_LED5ON
     0000                           1- 3508     _LED5ON:
                                    1- 3509     ; 2 exit points
                                    1- 3510     	.line	490, "main.c"; 	L4OUT;
     0000 001r                      1- 3511     	IOSTR	_IOSTB
                                    1- 3512     	BANKSEL	r0x1060
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3513     	MOVAR	r0x1060
     0003 1Crr                      1- 3514     	BCR	r0x1060,0
     0004 01rr                      1- 3515     	MOVR	r0x1060,W
     0005 000r                      1- 3516     	IOST	_IOSTB
                                    1- 3517     	.line	491, "main.c"; 	L1OUT;
     0006 001r                      1- 3518     	IOSTR	_IOSTA
     0007 00rr                      1- 3519     	MOVAR	r0x1060
     0008 1Frr                      1- 3520     	BCR	r0x1060,7
     0009 01rr                      1- 3521     	MOVR	r0x1060,W
     000A 000r                      1- 3522     	IOST	_IOSTA
                                    1- 3523     	.line	492, "main.c"; 	L4H;
     000B 18rr                      1- 3524     	BSR	_PORTB,0
                                    1- 3525     	.line	493, "main.c"; 	L1L;
                                    1- 3526     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Frr                      1- 3527     	BCR	_PORTA,7
                                    1- 3528     	.line	494, "main.c"; 	delay(80);
     000E 2150                      1- 3529     	MOVIA	0x50
                                    1- 3530     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3531     	.line	495, "main.c"; 	LedInput();
                                    1- 3532     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3533     	.line	496, "main.c"; 	}
                                    1- 3534     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3535     ; exit point of _LED5ON
                                    1- 3537     ;***
                                    1- 3538     ;  pBlock Stats: dbName = C
                                    1- 3539     ;***
                                    1- 3540     ;has an exit
                                    1- 3541     ;functions called:
                                    1- 3542     ;   _delay
                                    1- 3543     ;   _LedInput
                                    1- 3544     ;   _delay
                                    1- 3545     ;   _LedInput
                                    1- 3546     ;1 compiler assigned register :
                                    1- 3547     ;   r0x1061
                                    1- 3548     ;; Starting pCode block
                                    1- 3549     .segment "code"; module=main, function=_LED4ON
     0000                           1- 3551     _LED4ON:
                                    1- 3552     ; 2 exit points
                                    1- 3553     	.line	480, "main.c"; 	L3OUT;
     0000 001r                      1- 3554     	IOSTR	_IOSTB
                                    1- 3555     	BANKSEL	r0x1061
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3556     	MOVAR	r0x1061
     0003 1Crr                      1- 3557     	BCR	r0x1061,1
     0004 01rr                      1- 3558     	MOVR	r0x1061,W
     0005 000r                      1- 3559     	IOST	_IOSTB
                                    1- 3560     	.line	481, "main.c"; 	L2OUT;
     0006 001r                      1- 3561     	IOSTR	_IOSTB
     0007 00rr                      1- 3562     	MOVAR	r0x1061
     0008 1Drr                      1- 3563     	BCR	r0x1061,3
     0009 01rr                      1- 3564     	MOVR	r0x1061,W
     000A 000r                      1- 3565     	IOST	_IOSTB
                                    1- 3566     	.line	482, "main.c"; 	L3H;
     000B 18rr                      1- 3567     	BSR	_PORTB,1
                                    1- 3568     	.line	483, "main.c"; 	L2L;
     000C 1Drr                      1- 3569     	BCR	_PORTB,3
                                    1- 3570     	.line	484, "main.c"; 	delay(80);
     000D 2150                      1- 3571     	MOVIA	0x50
                                    1- 3572     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3573     	.line	485, "main.c"; 	LedInput();
                                    1- 3574     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3575     	.line	486, "main.c"; 	}
                                    1- 3576     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3577     ; exit point of _LED4ON
                                    1- 3579     ;***
                                    1- 3580     ;  pBlock Stats: dbName = C
                                    1- 3581     ;***
                                    1- 3582     ;has an exit
                                    1- 3583     ;functions called:
                                    1- 3584     ;   _delay
                                    1- 3585     ;   _LedInput
                                    1- 3586     ;   _delay
                                    1- 3587     ;   _LedInput
                                    1- 3588     ;1 compiler assigned register :
                                    1- 3589     ;   r0x1062
                                    1- 3590     ;; Starting pCode block
                                    1- 3591     .segment "code"; module=main, function=_LED3ON
     0000                           1- 3593     _LED3ON:
                                    1- 3594     ; 2 exit points
                                    1- 3595     	.line	470, "main.c"; 	L3OUT;
     0000 001r                      1- 3596     	IOSTR	_IOSTB
                                    1- 3597     	BANKSEL	r0x1062
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3598     	MOVAR	r0x1062
     0003 1Crr                      1- 3599     	BCR	r0x1062,1
     0004 01rr                      1- 3600     	MOVR	r0x1062,W
     0005 000r                      1- 3601     	IOST	_IOSTB
                                    1- 3602     	.line	471, "main.c"; 	L2OUT;
     0006 001r                      1- 3603     	IOSTR	_IOSTB
     0007 00rr                      1- 3604     	MOVAR	r0x1062
     0008 1Drr                      1- 3605     	BCR	r0x1062,3
     0009 01rr                      1- 3606     	MOVR	r0x1062,W
     000A 000r                      1- 3607     	IOST	_IOSTB
                                    1- 3608     	.line	472, "main.c"; 	L2H;
     000B 19rr                      1- 3609     	BSR	_PORTB,3
                                    1- 3610     	.line	473, "main.c"; 	L3L;
     000C 1Crr                      1- 3611     	BCR	_PORTB,1
                                    1- 3612     	.line	474, "main.c"; 	delay(80);
     000D 2150                      1- 3613     	MOVIA	0x50
                                    1- 3614     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3615     	.line	475, "main.c"; 	LedInput();
                                    1- 3616     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3617     	.line	476, "main.c"; 	}
                                    1- 3618     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3619     ; exit point of _LED3ON
                                    1- 3621     ;***
                                    1- 3622     ;  pBlock Stats: dbName = C
                                    1- 3623     ;***
                                    1- 3624     ;has an exit
                                    1- 3625     ;functions called:
                                    1- 3626     ;   _delay
                                    1- 3627     ;   _LedInput
                                    1- 3628     ;   _delay
                                    1- 3629     ;   _LedInput
                                    1- 3630     ;1 compiler assigned register :
                                    1- 3631     ;   r0x1063
                                    1- 3632     ;; Starting pCode block
                                    1- 3633     .segment "code"; module=main, function=_LED2ON
     0000                           1- 3635     _LED2ON:
                                    1- 3636     ; 2 exit points
                                    1- 3637     	.line	460, "main.c"; 	L1OUT;
     0000 001r                      1- 3638     	IOSTR	_IOSTA
                                    1- 3639     	BANKSEL	r0x1063
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3640     	MOVAR	r0x1063
     0003 1Frr                      1- 3641     	BCR	r0x1063,7
     0004 01rr                      1- 3642     	MOVR	r0x1063,W
     0005 000r                      1- 3643     	IOST	_IOSTA
                                    1- 3644     	.line	461, "main.c"; 	L3OUT;
     0006 001r                      1- 3645     	IOSTR	_IOSTB
     0007 00rr                      1- 3646     	MOVAR	r0x1063
     0008 1Crr                      1- 3647     	BCR	r0x1063,1
     0009 01rr                      1- 3648     	MOVR	r0x1063,W
     000A 000r                      1- 3649     	IOST	_IOSTB
                                    1- 3650     	.line	462, "main.c"; 	L3H;
     000B 18rr                      1- 3651     	BSR	_PORTB,1
                                    1- 3652     	.line	463, "main.c"; 	L1L;
                                    1- 3653     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Frr                      1- 3654     	BCR	_PORTA,7
                                    1- 3655     	.line	464, "main.c"; 	delay(80);
     000E 2150                      1- 3656     	MOVIA	0x50
                                    1- 3657     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3658     	.line	465, "main.c"; 	LedInput();
                                    1- 3659     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3660     	.line	466, "main.c"; 	}
                                    1- 3661     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3662     ; exit point of _LED2ON
                                    1- 3664     ;***
                                    1- 3665     ;  pBlock Stats: dbName = C
                                    1- 3666     ;***
                                    1- 3667     ;has an exit
                                    1- 3668     ;functions called:
                                    1- 3669     ;   _delay
                                    1- 3670     ;   _LedInput
                                    1- 3671     ;   _delay
                                    1- 3672     ;   _LedInput
                                    1- 3673     ;1 compiler assigned register :
                                    1- 3674     ;   r0x1064
                                    1- 3675     ;; Starting pCode block
                                    1- 3676     .segment "code"; module=main, function=_LED1ON
     0000                           1- 3678     _LED1ON:
                                    1- 3679     ; 2 exit points
                                    1- 3680     	.line	450, "main.c"; 	L3OUT;
     0000 001r                      1- 3681     	IOSTR	_IOSTB
                                    1- 3682     	BANKSEL	r0x1064
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3683     	MOVAR	r0x1064
     0003 1Crr                      1- 3684     	BCR	r0x1064,1
     0004 01rr                      1- 3685     	MOVR	r0x1064,W
     0005 000r                      1- 3686     	IOST	_IOSTB
                                    1- 3687     	.line	451, "main.c"; 	L1OUT;
     0006 001r                      1- 3688     	IOSTR	_IOSTA
     0007 00rr                      1- 3689     	MOVAR	r0x1064
     0008 1Frr                      1- 3690     	BCR	r0x1064,7
     0009 01rr                      1- 3691     	MOVR	r0x1064,W
     000A 000r                      1- 3692     	IOST	_IOSTA
                                    1- 3693     	.line	452, "main.c"; 	L1H;
                                    1- 3694     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 1Brr                      1- 3695     	BSR	_PORTA,7
                                    1- 3696     	.line	453, "main.c"; 	L3L;
     000D 1Crr                      1- 3697     	BCR	_PORTB,1
                                    1- 3698     	.line	454, "main.c"; 	delay(80);
     000E 2150                      1- 3699     	MOVIA	0x50
                                    1- 3700     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3701     	.line	455, "main.c"; 	LedInput();
                                    1- 3702     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3703     	.line	456, "main.c"; 	}
                                    1- 3704     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3705     ; exit point of _LED1ON
                                    1- 3707     ;***
                                    1- 3708     ;  pBlock Stats: dbName = C
                                    1- 3709     ;***
                                    1- 3710     ;has an exit
                                    1- 3711     ;1 compiler assigned register :
                                    1- 3712     ;   r0x105A
                                    1- 3713     ;; Starting pCode block
                                    1- 3714     .segment "code"; module=main, function=_LedInput
     0000                           1- 3716     _LedInput:
                                    1- 3717     ; 2 exit points
                                    1- 3718     	.line	442, "main.c"; 	IOSTA |= 0x80;
     0000 001r                      1- 3719     	IOSTR	_IOSTA
                                    1- 3720     	BANKSEL	r0x105A
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3721     	MOVAR	r0x105A
     0003 1Brr                      1- 3722     	BSR	r0x105A,7
     0004 01rr                      1- 3723     	MOVR	r0x105A,W
     0005 000r                      1- 3724     	IOST	_IOSTA
                                    1- 3725     	.line	443, "main.c"; 	IOSTB |= 0x0B;
     0006 001r                      1- 3726     	IOSTR	_IOSTB
     0007 00rr                      1- 3727     	MOVAR	r0x105A
     0008 210B                      1- 3728     	MOVIA	0x0b
     0009 11rr                      1- 3729     	IORAR	r0x105A,F
     000A 01rr                      1- 3730     	MOVR	r0x105A,W
     000B 000r                      1- 3731     	IOST	_IOSTB
                                    1- 3732     	.line	444, "main.c"; 	PORTA &= 0x7F;
                                    1- 3733     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Frr                      1- 3734     	BCR	_PORTA,7
                                    1- 3735     	.line	445, "main.c"; 	PORTB &= 0xF4;
     000E 21F4                      1- 3736     	MOVIA	0xf4
     000F 10rr                      1- 3737     	ANDAR	_PORTB,F
                                    1- 3738     	.line	446, "main.c"; 	}
                                    1- 3739     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3740     ; exit point of _LedInput
                                    1- 3742     ;***
                                    1- 3743     ;  pBlock Stats: dbName = C
                                    1- 3744     ;***
                                    1- 3745     ;has an exit
                                    1- 3746     ;functions called:
                                    1- 3747     ;   _LedInput
                                    1- 3748     ;   _LedInput
                                    1- 3749     ;   _LED8ON
                                    1- 3750     ;   _LED7ON
                                    1- 3751     ;   _LED6ON
                                    1- 3752     ;   _LED5ON
                                    1- 3753     ;   _LED4ON
                                    1- 3754     ;   _LED3ON
                                    1- 3755     ;   _LED2ON
                                    1- 3756     ;   _LED1ON
                                    1- 3757     ;   _LedInput
                                    1- 3758     ;   _LedInput
                                    1- 3759     ;   _LED8ON
                                    1- 3760     ;   _LED7ON
                                    1- 3761     ;   _LED6ON
                                    1- 3762     ;   _LED5ON
                                    1- 3763     ;   _LED4ON
                                    1- 3764     ;   _LED3ON
                                    1- 3765     ;   _LED2ON
                                    1- 3766     ;   _LED1ON
                                    1- 3767     ;; Starting pCode block
                                    1- 3768     .segment "code"; module=main, function=_ledShow
     0000                           1- 3770     _ledShow:
                                    1- 3771     ; 2 exit points
                                    1- 3772     	.line	382, "main.c"; 	if(ledDeadTime > 0 && workStep == 0)
                                    1- 3773     	BANKSEL	_ledDeadTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 3774     	MOVR	_ledDeadTime,W
     0002 0D03                      1- 3775     	BTRSC	STATUS,2
                                    1- 3776     	MGOTO	_00325_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3777     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 3778     	MOVR	_workStep,W
     0006 0903                      1- 3779     	BTRSS	STATUS,2
                                    1- 3780     	MGOTO	_00325_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3781     	.line	384, "main.c"; 	if(ledDeadTime % 2 == 0)
                                    1- 3782     	BANKSEL	_ledDeadTime
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 0Crr                      1- 3783     	BTRSC	_ledDeadTime,0
                                    1- 3784     	MGOTO	_00322_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3785     	.line	386, "main.c"; 	ledStep = 0;
                                    1- 3786     	BANKSEL	_ledStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 02rr                      1- 3787     	CLRR	_ledStep
                                    1- 3788     	MGOTO	_00325_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 3789     _00322_DS_:
                                    1- 3790     	.line	390, "main.c"; 	ledStep = tempLedStep;
                                    1- 3791     	BANKSEL	_tempLedStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 3792     	MOVR	_tempLedStep,W
                                    1- 3793     	BANKSEL	_ledStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 3794     	MOVAR	_ledStep
     0012                           1- 3795     _00325_DS_:
                                    1- 3796     	.line	394, "main.c"; 	if(ledLightTime > 0 && pwStep > 0)
                                    1- 3797     	BANKSEL	_ledLightTime
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 3798     	MOVR	_ledLightTime,W
     0014 0D03                      1- 3799     	BTRSC	STATUS,2
                                    1- 3800     	MGOTO	_00328_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3801     	BANKSEL	_pwStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 3802     	MOVR	_pwStep,W
     0018 0D03                      1- 3803     	BTRSC	STATUS,2
                                    1- 3804     	MGOTO	_00328_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3805     	.line	397, "main.c"; 	ledStep = tempLedStep;
                                    1- 3806     	BANKSEL	_tempLedStep
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 01rr                      1- 3807     	MOVR	_tempLedStep,W
                                    1- 3808     	BANKSEL	_ledStep
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 00rr                      1- 3809     	MOVAR	_ledStep
     001E                           1- 3810     _00328_DS_:
                                    1- 3811     	.line	412, "main.c"; 	LedInput();
                                    1- 3812     	MCALL	_LedInput
     001E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3813     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3814     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 3815     	.line	413, "main.c"; 	switch(ledStep)
     001F 2109                      1- 3816     	MOVIA	0x09
                                    1- 3817     	BANKSEL	_ledStep
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 3818     	SUBAR	_ledStep,W
     0022 0C03                      1- 3819     	BTRSC	STATUS,0
                                    1- 3820     	MGOTO	_00340_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
     0024 21rr                      1- 3821     	MOVIA	((_00361_DS_ >> 8) & 0xff)
     0025 008A                      1- 3822     	MOVAR	PCHBUF
     0026 01rr                      1- 3823     	MOVR	_ledStep,W
     0027 25rr                      1- 3824     	ADDIA	_00361_DS_
     0028 0C03                      1- 3825     	BTRSC	STATUS,0
     0029 058A                      1- 3826     	INCR	PCHBUF,F
     002A 0082                      1- 3827     	MOVAR	PCL
     002B                           1- 3828     _00361_DS_:
                                    1- 3829     	MGOTO	_00330_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3830     	MGOTO	_00338_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3831     	MGOTO	_00337_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3832     	MGOTO	_00336_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3833     	MGOTO	_00335_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3834     	MGOTO	_00334_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3835     	MGOTO	_00333_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3836     	MGOTO	_00332_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3837     	MGOTO	_00331_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
     0034                           1- 3838     _00330_DS_:
                                    1- 3839     	.line	416, "main.c"; 	LedInput();
                                    1- 3840     	MCALL	_LedInput
     0034 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3841     	.line	417, "main.c"; 	break;
                                    1- 3842     	MGOTO	_00340_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
     0036                           1- 3843     _00331_DS_:
                                    1- 3844     	.line	419, "main.c"; 	LED8ON();
                                    1- 3845     	MCALL	_LED8ON
     0036 2rrr                      3-   66 m1      LCALL rom_address
     0037                           1- 3846     _00332_DS_:
                                    1- 3847     	.line	421, "main.c"; 	LED7ON();
                                    1- 3848     	MCALL	_LED7ON
     0037 2rrr                      3-   66 m1      LCALL rom_address
     0038                           1- 3849     _00333_DS_:
                                    1- 3850     	.line	423, "main.c"; 	LED6ON();
                                    1- 3851     	MCALL	_LED6ON
     0038 2rrr                      3-   66 m1      LCALL rom_address
     0039                           1- 3852     _00334_DS_:
                                    1- 3853     	.line	425, "main.c"; 	LED5ON();
                                    1- 3854     	MCALL	_LED5ON
     0039 2rrr                      3-   66 m1      LCALL rom_address
     003A                           1- 3855     _00335_DS_:
                                    1- 3856     	.line	427, "main.c"; 	LED4ON();
                                    1- 3857     	MCALL	_LED4ON
     003A 2rrr                      3-   66 m1      LCALL rom_address
     003B                           1- 3858     _00336_DS_:
                                    1- 3859     	.line	429, "main.c"; 	LED3ON();
                                    1- 3860     	MCALL	_LED3ON
     003B 2rrr                      3-   66 m1      LCALL rom_address
     003C                           1- 3861     _00337_DS_:
                                    1- 3862     	.line	431, "main.c"; 	LED2ON();
                                    1- 3863     	MCALL	_LED2ON
     003C 2rrr                      3-   66 m1      LCALL rom_address
     003D                           1- 3864     _00338_DS_:
                                    1- 3865     	.line	433, "main.c"; 	LED1ON();
                                    1- 3866     	MCALL	_LED1ON
     003D 2rrr                      3-   66 m1      LCALL rom_address
     003E                           1- 3867     _00340_DS_:
                                    1- 3868     	.line	436, "main.c"; 	}
                                    1- 3869     	RETURN	
     003E 0010                      3-   40 m1      ret
                                    1- 3870     ; exit point of _ledShow
                                    1- 3872     ;***
                                    1- 3873     ;  pBlock Stats: dbName = C
                                    1- 3874     ;***
                                    1- 3875     ;has an exit
                                    1- 3876     ;functions called:
                                    1- 3877     ;   _LedInput
                                    1- 3878     ;   _LedInput
                                    1- 3879     ;; Starting pCode block
                                    1- 3880     .segment "code"; module=main, function=_initSys
     0000                           1- 3882     _initSys:
                                    1- 3883     ; 2 exit points
                                    1- 3884     	.line	350, "main.c"; 	DISI();
     0000 0013                      1- 3885     	DISI
                                    1- 3886     	.line	351, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input ;
     0001 2178                      1- 3887     	MOVIA	0x78
     0002 000r                      1- 3888     	IOST	_IOSTA
                                    1- 3889     	.line	352, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 3890     	CLRA	
     0004 000r                      1- 3891     	IOST	_IOSTB
                                    1- 3892     	.line	353, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 3893     	CLRR	_PORTB
                                    1- 3894     	.line	354, "main.c"; 	PORTA = 0x00;
                                    1- 3895     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 3896     	CLRR	_PORTA
                                    1- 3897     	.line	355, "main.c"; 	LedInput();
                                    1- 3898     	MCALL	_LedInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3899     	.line	356, "main.c"; 	APHCON = 0xBF;
     0009 21BF                      1- 3900     	MOVIA	0xbf
     000A 000r                      1- 3901     	IOST	_APHCON
                                    1- 3902     	.line	357, "main.c"; 	BPHCON = 0xFF;
     000B 21FF                      1- 3903     	MOVIA	0xff
     000C 00rr                      1- 3904     	MOVAR	_BPHCON
                                    1- 3905     	.line	358, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 3906     	MOVAR	_ABPLCON
                                    1- 3907     	.line	360, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1- 3908     	MOVIA	0x01
     000F 00rr                      1- 3909     	MOVAR	_INTE
                                    1- 3910     	.line	362, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 3911     	CLRA	
     0011 000r                      1- 3912     	IOST	_PCON1
                                    1- 3913     	.line	364, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 3914     	MOVIA	0x37
     0013 00rr                      1- 3915     	MOVAR	_TMR0
                                    1- 3916     	.line	365, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0014 0200                      1- 3917     	CLRA	
     0015 0003                      1- 3918     	T0MD	
                                    1- 3919     	.line	367, "main.c"; 	PCON1 = C_TMR0_En;
     0016 2101                      1- 3920     	MOVIA	0x01
     0017 000r                      1- 3921     	IOST	_PCON1
                                    1- 3922     	.line	370, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0018 2198                      1- 3923     	MOVIA	0x98
     0019 00rr                      1- 3924     	MOVAR	_PCON
                                    1- 3925     	.line	373, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001A 2101                      1- 3926     	MOVIA	0x01
     001B 000r                      1- 3927     	IOST	_PCON1
                                    1- 3928     	.line	374, "main.c"; 	ENI();
     001C 0004                      1- 3929     	ENI
                                    1- 3930     	.line	375, "main.c"; 	}
                                    1- 3931     	RETURN	
     001D 0010                      3-   40 m1      ret
                                    1- 3932     ; exit point of _initSys
                                    1- 3934     ;***
                                    1- 3935     ;  pBlock Stats: dbName = C
                                    1- 3936     ;***
                                    1- 3937     ;has an exit
                                    1- 3938     ;functions called:
                                    1- 3939     ;   _pwmStop
                                    1- 3940     ;   _pwmStop
                                    1- 3941     ;; Starting pCode block
                                    1- 3942     .segment "code"; module=main, function=_powerOff
     0000                           1- 3944     _powerOff:
                                    1- 3945     ; 2 exit points
                                    1- 3946     	.line	341, "main.c"; 	workStep = 0;
                                    1- 3947     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 3948     	CLRR	_workStep
                                    1- 3949     	.line	342, "main.c"; 	pwmStop();
                                    1- 3950     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3951     	.line	343, "main.c"; 	ledStep = 0;
                                    1- 3952     	BANKSEL	_ledStep
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 3953     	CLRR	_ledStep
                                    1- 3954     	.line	344, "main.c"; 	}
                                    1- 3955     	RETURN	
     0005 0010                      3-   40 m1      ret
                                    1- 3956     ; exit point of _powerOff
                                    1- 3958     ;***
                                    1- 3959     ;  pBlock Stats: dbName = C
                                    1- 3960     ;***
                                    1- 3961     ;has an exit
                                    1- 3962     ;functions called:
                                    1- 3963     ;   _keyRead
                                    1- 3964     ;   _pwmInit
                                    1- 3965     ;   _powerOff
                                    1- 3966     ;   _pwmInit
                                    1- 3967     ;   _keyRead
                                    1- 3968     ;   _pwmInit
                                    1- 3969     ;   _powerOff
                                    1- 3970     ;   _pwmInit
                                    1- 3971     ;1 compiler assigned register :
                                    1- 3972     ;   r0x1065
                                    1- 3973     ;; Starting pCode block
                                    1- 3974     .segment "code"; module=main, function=_keyCtr
                                    1- 3976     ;local variable name mapping:
     0000                           1- 3978     _keyCtr:
                                    1- 3979     ; 2 exit points
                                    1- 3980     	.line	242, "main.c"; 	char kclick = keyRead(0x40 & (~PORTA));
                                    1- 3981     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 3982     	COMR	_PORTA,W
                                    1- 3983     	BANKSEL	r0x1065
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 3984     	MOVAR	r0x1065
     0004 2140                      1- 3985     	MOVIA	0x40
     0005 10rr                      1- 3986     	ANDAR	r0x1065,F
     0006 01rr                      1- 3987     	MOVR	r0x1065,W
                                    1- 3988     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3989     	BANKSEL	r0x1065
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 3990     	MOVAR	r0x1065
                                    1- 3991     	.line	243, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 3992     	XORIA	0x01
     000B 0903                      1- 3993     	BTRSS	STATUS,2
                                    1- 3994     	MGOTO	_00306_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3995     	.line	245, "main.c"; 	count500ms = 0;
                                    1- 3996     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 3997     	CLRR	_count500ms
                                    1- 3998     	.line	246, "main.c"; 	ledLightTime = 0;
                                    1- 3999     	BANKSEL	_ledLightTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 4000     	CLRR	_ledLightTime
                                    1- 4001     	.line	247, "main.c"; 	if(workStep == 0)
                                    1- 4002     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 4003     	MOVR	_workStep,W
     0013 0903                      1- 4004     	BTRSS	STATUS,2
                                    1- 4005     	MGOTO	_00240_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 4006     	.line	249, "main.c"; 	count1s = 0;
                                    1- 4007     	BANKSEL	_count1s
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 4008     	CLRR	_count1s
                                    1- 4009     	.line	255, "main.c"; 	return;
                                    1- 4010     	MGOTO	_00308_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
     0018                           1- 4011     _00240_DS_:
                                    1- 4012     	.line	257, "main.c"; 	ledTime = 0;
                                    1- 4013     	BANKSEL	_ledTime
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 4014     	CLRR	_ledTime
                                    1- 4015     	.line	258, "main.c"; 	if(++workStep > 8)
                                    1- 4016     	BANKSEL	_workStep
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 05rr                      1- 4017     	INCR	_workStep,F
                                    1- 4018     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 4019     ;;unsigned compare: left >= lit (0x9=9), size=1
     001C 2109                      1- 4020     	MOVIA	0x09
     001D 04rr                      1- 4021     	SUBAR	_workStep,W
     001E 0803                      1- 4022     	BTRSS	STATUS,0
                                    1- 4023     	MGOTO	_00242_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 4024     	.line	259, "main.c"; 	workStep = 1;
     0020 2101                      1- 4025     	MOVIA	0x01
     0021 00rr                      1- 4026     	MOVAR	_workStep
     0022                           1- 4027     _00242_DS_:
                                    1- 4028     	.line	260, "main.c"; 	shanshuoTime = 6;
     0022 2106                      1- 4029     	MOVIA	0x06
                                    1- 4030     	BANKSEL	_shanshuoTime
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 4031     	MOVAR	_shanshuoTime
                                    1- 4032     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 4033     ;;unsigned compare: left >= lit (0x3=3), size=1
                                    1- 4034     	.line	262, "main.c"; 	if(pwStep <= 2)
     0025 2103                      1- 4035     	MOVIA	0x03
                                    1- 4036     	BANKSEL	_pwStep
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 04rr                      1- 4037     	SUBAR	_pwStep,W
     0028 0C03                      1- 4038     	BTRSC	STATUS,0
                                    1- 4039     	MGOTO	_00290_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 4040     	.line	264, "main.c"; 	if(workStep == 1)
                                    1- 4041     	BANKSEL	_workStep
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1- 4042     	MOVR	_workStep,W
     002C 2401                      1- 4043     	XORIA	0x01
     002D 0903                      1- 4044     	BTRSS	STATUS,2
                                    1- 4045     	MGOTO	_00264_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 4046     	.line	265, "main.c"; 	maxDuty = 50;
     002F 2132                      1- 4047     	MOVIA	0x32
                                    1- 4048     	BANKSEL	_maxDuty
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 00rr                      1- 4049     	MOVAR	_maxDuty
                                    1- 4050     	MGOTO	_00291_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033                           1- 4051     _00264_DS_:
                                    1- 4052     	.line	266, "main.c"; 	else if(workStep == 2)
                                    1- 4053     	BANKSEL	_workStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 4054     	MOVR	_workStep,W
     0035 2402                      1- 4055     	XORIA	0x02
     0036 0903                      1- 4056     	BTRSS	STATUS,2
                                    1- 4057     	MGOTO	_00261_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 4058     	.line	267, "main.c"; 	maxDuty = 52;
     0038 2134                      1- 4059     	MOVIA	0x34
                                    1- 4060     	BANKSEL	_maxDuty
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 00rr                      1- 4061     	MOVAR	_maxDuty
                                    1- 4062     	MGOTO	_00291_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
     003C                           1- 4063     _00261_DS_:
                                    1- 4064     	.line	268, "main.c"; 	else if(workStep == 3)
                                    1- 4065     	BANKSEL	_workStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 4066     	MOVR	_workStep,W
     003E 2403                      1- 4067     	XORIA	0x03
     003F 0903                      1- 4068     	BTRSS	STATUS,2
                                    1- 4069     	MGOTO	_00258_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 4070     	.line	269, "main.c"; 	maxDuty = 54;
     0041 2136                      1- 4071     	MOVIA	0x36
                                    1- 4072     	BANKSEL	_maxDuty
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1- 4073     	MOVAR	_maxDuty
                                    1- 4074     	MGOTO	_00291_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
     0045                           1- 4075     _00258_DS_:
                                    1- 4076     	.line	270, "main.c"; 	else if(workStep == 4)
                                    1- 4077     	BANKSEL	_workStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1- 4078     	MOVR	_workStep,W
     0047 2404                      1- 4079     	XORIA	0x04
     0048 0903                      1- 4080     	BTRSS	STATUS,2
                                    1- 4081     	MGOTO	_00255_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 4082     	.line	271, "main.c"; 	maxDuty = 56;
     004A 2138                      1- 4083     	MOVIA	0x38
                                    1- 4084     	BANKSEL	_maxDuty
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 00rr                      1- 4085     	MOVAR	_maxDuty
                                    1- 4086     	MGOTO	_00291_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
     004E                           1- 4087     _00255_DS_:
                                    1- 4088     	.line	272, "main.c"; 	else if(workStep == 5)
                                    1- 4089     	BANKSEL	_workStep
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1- 4090     	MOVR	_workStep,W
     0050 2405                      1- 4091     	XORIA	0x05
     0051 0903                      1- 4092     	BTRSS	STATUS,2
                                    1- 4093     	MGOTO	_00252_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 4094     	.line	273, "main.c"; 	maxDuty = 58;
     0053 213A                      1- 4095     	MOVIA	0x3a
                                    1- 4096     	BANKSEL	_maxDuty
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 00rr                      1- 4097     	MOVAR	_maxDuty
                                    1- 4098     	MGOTO	_00291_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
     0057                           1- 4099     _00252_DS_:
                                    1- 4100     	.line	274, "main.c"; 	else if(workStep == 6)
                                    1- 4101     	BANKSEL	_workStep
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 01rr                      1- 4102     	MOVR	_workStep,W
     0059 2406                      1- 4103     	XORIA	0x06
     005A 0903                      1- 4104     	BTRSS	STATUS,2
                                    1- 4105     	MGOTO	_00249_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 4106     	.line	275, "main.c"; 	maxDuty = 60;
     005C 213C                      1- 4107     	MOVIA	0x3c
                                    1- 4108     	BANKSEL	_maxDuty
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 00rr                      1- 4109     	MOVAR	_maxDuty
                                    1- 4110     	MGOTO	_00291_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
     0060                           1- 4111     _00249_DS_:
                                    1- 4112     	.line	276, "main.c"; 	else if(workStep == 7)
                                    1- 4113     	BANKSEL	_workStep
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1- 4114     	MOVR	_workStep,W
     0062 2407                      1- 4115     	XORIA	0x07
     0063 0903                      1- 4116     	BTRSS	STATUS,2
                                    1- 4117     	MGOTO	_00246_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 4118     	.line	277, "main.c"; 	maxDuty = 62;
     0065 213E                      1- 4119     	MOVIA	0x3e
                                    1- 4120     	BANKSEL	_maxDuty
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 00rr                      1- 4121     	MOVAR	_maxDuty
                                    1- 4122     	MGOTO	_00291_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
     0069                           1- 4123     _00246_DS_:
                                    1- 4124     	.line	278, "main.c"; 	else if(workStep == 8)
                                    1- 4125     	BANKSEL	_workStep
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 01rr                      1- 4126     	MOVR	_workStep,W
     006B 2408                      1- 4127     	XORIA	0x08
     006C 0903                      1- 4128     	BTRSS	STATUS,2
                                    1- 4129     	MGOTO	_00291_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 4130     	.line	279, "main.c"; 	maxDuty = 64;
     006E 2140                      1- 4131     	MOVIA	0x40
                                    1- 4132     	BANKSEL	_maxDuty
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 00rr                      1- 4133     	MOVAR	_maxDuty
                                    1- 4134     	MGOTO	_00291_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
     0072                           1- 4135     _00290_DS_:
                                    1- 4136     	.line	283, "main.c"; 	if(workStep == 1)
                                    1- 4137     	BANKSEL	_workStep
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 01rr                      1- 4138     	MOVR	_workStep,W
     0074 2401                      1- 4139     	XORIA	0x01
     0075 0903                      1- 4140     	BTRSS	STATUS,2
                                    1- 4141     	MGOTO	_00287_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 4142     	.line	284, "main.c"; 	maxDuty = 40;
     0077 2128                      1- 4143     	MOVIA	0x28
                                    1- 4144     	BANKSEL	_maxDuty
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 00rr                      1- 4145     	MOVAR	_maxDuty
                                    1- 4146     	MGOTO	_00291_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
     007B                           1- 4147     _00287_DS_:
                                    1- 4148     	.line	285, "main.c"; 	else if(workStep == 2)
                                    1- 4149     	BANKSEL	_workStep
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 01rr                      1- 4150     	MOVR	_workStep,W
     007D 2402                      1- 4151     	XORIA	0x02
     007E 0903                      1- 4152     	BTRSS	STATUS,2
                                    1- 4153     	MGOTO	_00284_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 4154     	.line	286, "main.c"; 	maxDuty = 44;
     0080 212C                      1- 4155     	MOVIA	0x2c
                                    1- 4156     	BANKSEL	_maxDuty
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 00rr                      1- 4157     	MOVAR	_maxDuty
                                    1- 4158     	MGOTO	_00291_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
     0084                           1- 4159     _00284_DS_:
                                    1- 4160     	.line	287, "main.c"; 	else if(workStep == 3)
                                    1- 4161     	BANKSEL	_workStep
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 01rr                      1- 4162     	MOVR	_workStep,W
     0086 2403                      1- 4163     	XORIA	0x03
     0087 0903                      1- 4164     	BTRSS	STATUS,2
                                    1- 4165     	MGOTO	_00281_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 4166     	.line	288, "main.c"; 	maxDuty = 48;
     0089 2130                      1- 4167     	MOVIA	0x30
                                    1- 4168     	BANKSEL	_maxDuty
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 00rr                      1- 4169     	MOVAR	_maxDuty
                                    1- 4170     	MGOTO	_00291_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
     008D                           1- 4171     _00281_DS_:
                                    1- 4172     	.line	289, "main.c"; 	else if(workStep == 4)
                                    1- 4173     	BANKSEL	_workStep
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 01rr                      1- 4174     	MOVR	_workStep,W
     008F 2404                      1- 4175     	XORIA	0x04
     0090 0903                      1- 4176     	BTRSS	STATUS,2
                                    1- 4177     	MGOTO	_00278_DS_
     0091 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 4178     	.line	290, "main.c"; 	maxDuty = 52;
     0092 2134                      1- 4179     	MOVIA	0x34
                                    1- 4180     	BANKSEL	_maxDuty
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 00rr                      1- 4181     	MOVAR	_maxDuty
                                    1- 4182     	MGOTO	_00291_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
     0096                           1- 4183     _00278_DS_:
                                    1- 4184     	.line	291, "main.c"; 	else if(workStep == 5)
                                    1- 4185     	BANKSEL	_workStep
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 01rr                      1- 4186     	MOVR	_workStep,W
     0098 2405                      1- 4187     	XORIA	0x05
     0099 0903                      1- 4188     	BTRSS	STATUS,2
                                    1- 4189     	MGOTO	_00275_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 4190     	.line	292, "main.c"; 	maxDuty = 55;
     009B 2137                      1- 4191     	MOVIA	0x37
                                    1- 4192     	BANKSEL	_maxDuty
     009C rrrr                      3-  110 m1      .banksel ram_address
     009D 00rr                      1- 4193     	MOVAR	_maxDuty
                                    1- 4194     	MGOTO	_00291_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
     009F                           1- 4195     _00275_DS_:
                                    1- 4196     	.line	293, "main.c"; 	else if(workStep == 6)
                                    1- 4197     	BANKSEL	_workStep
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 01rr                      1- 4198     	MOVR	_workStep,W
     00A1 2406                      1- 4199     	XORIA	0x06
     00A2 0903                      1- 4200     	BTRSS	STATUS,2
                                    1- 4201     	MGOTO	_00272_DS_
     00A3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 4202     	.line	294, "main.c"; 	maxDuty = 58;
     00A4 213A                      1- 4203     	MOVIA	0x3a
                                    1- 4204     	BANKSEL	_maxDuty
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 00rr                      1- 4205     	MOVAR	_maxDuty
                                    1- 4206     	MGOTO	_00291_DS_
     00A7 3rrr                      3-   63 m1      LGOTO rom_address
     00A8                           1- 4207     _00272_DS_:
                                    1- 4208     	.line	295, "main.c"; 	else if(workStep == 7)
                                    1- 4209     	BANKSEL	_workStep
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 01rr                      1- 4210     	MOVR	_workStep,W
     00AA 2407                      1- 4211     	XORIA	0x07
     00AB 0903                      1- 4212     	BTRSS	STATUS,2
                                    1- 4213     	MGOTO	_00269_DS_
     00AC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 4214     	.line	296, "main.c"; 	maxDuty = 61;
     00AD 213D                      1- 4215     	MOVIA	0x3d
                                    1- 4216     	BANKSEL	_maxDuty
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 00rr                      1- 4217     	MOVAR	_maxDuty
                                    1- 4218     	MGOTO	_00291_DS_
     00B0 3rrr                      3-   63 m1      LGOTO rom_address
     00B1                           1- 4219     _00269_DS_:
                                    1- 4220     	.line	297, "main.c"; 	else if(workStep == 8)
                                    1- 4221     	BANKSEL	_workStep
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 01rr                      1- 4222     	MOVR	_workStep,W
     00B3 2408                      1- 4223     	XORIA	0x08
     00B4 0903                      1- 4224     	BTRSS	STATUS,2
                                    1- 4225     	MGOTO	_00291_DS_
     00B5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 4226     	.line	298, "main.c"; 	maxDuty = 64;
     00B6 2140                      1- 4227     	MOVIA	0x40
                                    1- 4228     	BANKSEL	_maxDuty
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 00rr                      1- 4229     	MOVAR	_maxDuty
     00B9                           1- 4230     _00291_DS_:
                                    1- 4231     	.line	300, "main.c"; 	if(workStep > 0)
                                    1- 4232     	BANKSEL	_workStep
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 01rr                      1- 4233     	MOVR	_workStep,W
     00BB 0D03                      1- 4234     	BTRSC	STATUS,2
                                    1- 4235     	MGOTO	_00293_DS_
     00BC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 4236     	.line	302, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 4237     	BANKSEL	_maxDuty
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 01rr                      1- 4238     	MOVR	_maxDuty,W
     00BF 00rr                      1- 4239     	SFUN	_PWM2DUTY
                                    1- 4240     	.line	303, "main.c"; 	pwmInit();
                                    1- 4241     	MCALL	_pwmInit
     00C0 2rrr                      3-   66 m1      LCALL rom_address
     00C1                           1- 4242     _00293_DS_:
                                    1- 4243     	.line	305, "main.c"; 	ledStep = workStep;
                                    1- 4244     	BANKSEL	_workStep
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 01rr                      1- 4245     	MOVR	_workStep,W
                                    1- 4246     	BANKSEL	_ledStep
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 00rr                      1- 4247     	MOVAR	_ledStep
                                    1- 4248     	MGOTO	_00308_DS_
     00C5 3rrr                      3-   63 m1      LGOTO rom_address
     00C6                           1- 4249     _00306_DS_:
                                    1- 4250     	.line	307, "main.c"; 	else if(kclick == 2)
                                    1- 4251     	BANKSEL	r0x1065
     00C6 rrrr                      3-  110 m1      .banksel ram_address
     00C7 01rr                      1- 4252     	MOVR	r0x1065,W
     00C8 2402                      1- 4253     	XORIA	0x02
     00C9 0903                      1- 4254     	BTRSS	STATUS,2
                                    1- 4255     	MGOTO	_00308_DS_
     00CA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 4256     	.line	309, "main.c"; 	if(workStep > 0)
                                    1- 4257     	BANKSEL	_workStep
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 01rr                      1- 4258     	MOVR	_workStep,W
     00CD 0D03                      1- 4259     	BTRSC	STATUS,2
                                    1- 4260     	MGOTO	_00301_DS_
     00CE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 4261     	.line	311, "main.c"; 	powerOff();
                                    1- 4262     	MCALL	_powerOff
     00CF 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 4263     	MGOTO	_00302_DS_
     00D0 3rrr                      3-   63 m1      LGOTO rom_address
     00D1                           1- 4264     _00301_DS_:
                                    1- 4265     	.line	315, "main.c"; 	if(pwStep <= 0 || lockStart)
                                    1- 4266     	BANKSEL	_pwStep
     00D1 rrrr                      3-  110 m1      .banksel ram_address
     00D2 01rr                      1- 4267     	MOVR	_pwStep,W
     00D3 0D03                      1- 4268     	BTRSC	STATUS,2
                                    1- 4269     	MGOTO	_00294_DS_
     00D4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 4270     	BANKSEL	_lockStart
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 01rr                      1- 4271     	MOVR	_lockStart,W
     00D7 0D03                      1- 4272     	BTRSC	STATUS,2
                                    1- 4273     	MGOTO	_00295_DS_
     00D8 3rrr                      3-   63 m1      LGOTO rom_address
     00D9                           1- 4274     _00294_DS_:
                                    1- 4275     	.line	318, "main.c"; 	lockStart = 1;
     00D9 2101                      1- 4276     	MOVIA	0x01
                                    1- 4277     	BANKSEL	_lockStart
     00DA rrrr                      3-  110 m1      .banksel ram_address
     00DB 00rr                      1- 4278     	MOVAR	_lockStart
                                    1- 4279     	.line	319, "main.c"; 	shandengTime = 500;
     00DC 21F4                      1- 4280     	MOVIA	0xf4
                                    1- 4281     	BANKSEL	_shandengTime
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 00rr                      1- 4282     	MOVAR	_shandengTime
     00DF 2101                      1- 4283     	MOVIA	0x01
     00E0 00rr                      1- 4284     	MOVAR	(_shandengTime + 1)
                                    1- 4285     	.line	320, "main.c"; 	return;	
                                    1- 4286     	MGOTO	_00308_DS_
     00E1 3rrr                      3-   63 m1      LGOTO rom_address
     00E2                           1- 4287     _00295_DS_:
                                    1- 4288     	.line	322, "main.c"; 	ledLightTime = 0;
                                    1- 4289     	BANKSEL	_ledLightTime
     00E2 rrrr                      3-  110 m1      .banksel ram_address
     00E3 02rr                      1- 4290     	CLRR	_ledLightTime
                                    1- 4291     	.line	323, "main.c"; 	workStep = 1;
     00E4 2101                      1- 4292     	MOVIA	0x01
                                    1- 4293     	BANKSEL	_workStep
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 00rr                      1- 4294     	MOVAR	_workStep
                                    1- 4295     	.line	324, "main.c"; 	PWM2DUTY = 80;
     00E7 2150                      1- 4296     	MOVIA	0x50
     00E8 00rr                      1- 4297     	SFUN	_PWM2DUTY
                                    1- 4298     	.line	325, "main.c"; 	currentDuty = 80;
                                    1- 4299     	BANKSEL	_currentDuty
     00E9 rrrr                      3-  110 m1      .banksel ram_address
     00EA 00rr                      1- 4300     	MOVAR	_currentDuty
                                    1- 4301     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 4302     ;;unsigned compare: left >= lit (0x3=3), size=1
                                    1- 4303     	.line	326, "main.c"; 	if(pwStep <= 2)
     00EB 2103                      1- 4304     	MOVIA	0x03
                                    1- 4305     	BANKSEL	_pwStep
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 04rr                      1- 4306     	SUBAR	_pwStep,W
     00EE 0C03                      1- 4307     	BTRSC	STATUS,0
                                    1- 4308     	MGOTO	_00298_DS_
     00EF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 4309     	.line	327, "main.c"; 	maxDuty = 50;
     00F0 2132                      1- 4310     	MOVIA	0x32
                                    1- 4311     	BANKSEL	_maxDuty
     00F1 rrrr                      3-  110 m1      .banksel ram_address
     00F2 00rr                      1- 4312     	MOVAR	_maxDuty
                                    1- 4313     	MGOTO	_00299_DS_
     00F3 3rrr                      3-   63 m1      LGOTO rom_address
     00F4                           1- 4314     _00298_DS_:
                                    1- 4315     	.line	329, "main.c"; 	maxDuty = 40;
     00F4 2128                      1- 4316     	MOVIA	0x28
                                    1- 4317     	BANKSEL	_maxDuty
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 00rr                      1- 4318     	MOVAR	_maxDuty
     00F7                           1- 4319     _00299_DS_:
                                    1- 4320     	.line	330, "main.c"; 	pwmInit();
                                    1- 4321     	MCALL	_pwmInit
     00F7 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 4322     	.line	331, "main.c"; 	shanshuoTime = 16;
     00F8 2110                      1- 4323     	MOVIA	0x10
                                    1- 4324     	BANKSEL	_shanshuoTime
     00F9 rrrr                      3-  110 m1      .banksel ram_address
     00FA 00rr                      1- 4325     	MOVAR	_shanshuoTime
     00FB                           1- 4326     _00302_DS_:
                                    1- 4327     	.line	334, "main.c"; 	ledStep = workStep;
                                    1- 4328     	BANKSEL	_workStep
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 01rr                      1- 4329     	MOVR	_workStep,W
                                    1- 4330     	BANKSEL	_ledStep
     00FD rrrr                      3-  110 m1      .banksel ram_address
     00FE 00rr                      1- 4331     	MOVAR	_ledStep
     00FF                           1- 4332     _00308_DS_:
                                    1- 4333     	.line	336, "main.c"; 	}
                                    1- 4334     	RETURN	
     00FF 0010                      3-   40 m1      ret
                                    1- 4335     ; exit point of _keyCtr
                                    1- 4338     ;	code size estimation:
                                    1- 4339     ;	 1778+  457 =  2235 instructions ( 5384 byte)
                                    1- 4341     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
