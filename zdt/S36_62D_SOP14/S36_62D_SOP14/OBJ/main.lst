
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_fgCtr
                                    1-   18     	extern	_LedCtr2
                                    1-   19     	extern	_checkInAD
                                    1-   20     	extern	_PORTAbits
                                    1-   21     	extern	_PORTBbits
                                    1-   22     	extern	_PCONbits
                                    1-   23     	extern	_BWUCONbits
                                    1-   24     	extern	_ABPLCONbits
                                    1-   25     	extern	_BPHCONbits
                                    1-   26     	extern	_INTEbits
                                    1-   27     	extern	_INTFbits
                                    1-   28     	extern	_ADMDbits
                                    1-   29     	extern	_ADRbits
                                    1-   30     	extern	_ADVREFHbits
                                    1-   31     	extern	_ADCRbits
                                    1-   32     	extern	_AWUCONbits
                                    1-   33     	extern	_PACONbits
                                    1-   34     	extern	_INTEDGbits
                                    1-   35     	extern	_ANAENbits
                                    1-   36     	extern	_RFCbits
                                    1-   37     	extern	_INTE2bits
                                    1-   38     	extern	_INDF
                                    1-   39     	extern	_TMR0
                                    1-   40     	extern	_PCL
                                    1-   41     	extern	_STATUS
                                    1-   42     	extern	_FSR
                                    1-   43     	extern	_PORTA
                                    1-   44     	extern	_PORTB
                                    1-   45     	extern	_PCON
                                    1-   46     	extern	_BWUCON
                                    1-   47     	extern	_PCHBUF
                                    1-   48     	extern	_ABPLCON
                                    1-   49     	extern	_BPHCON
                                    1-   50     	extern	_INTE
                                    1-   51     	extern	_INTF
                                    1-   52     	extern	_ADMD
                                    1-   53     	extern	_ADR
                                    1-   54     	extern	_ADD
                                    1-   55     	extern	_ADVREFH
                                    1-   56     	extern	_ADCR
                                    1-   57     	extern	_AWUCON
                                    1-   58     	extern	_PACON
                                    1-   59     	extern	_INTEDG
                                    1-   60     	extern	_TMRH
                                    1-   61     	extern	_ANAEN
                                    1-   62     	extern	_RFC
                                    1-   63     	extern	_TM3RH
                                    1-   64     	extern	_INTE2
                                    1-   65     	extern	_TMR1
                                    1-   66     	extern	_T1CR1
                                    1-   67     	extern	_T1CR2
                                    1-   68     	extern	_PWM1DUTY
                                    1-   69     	extern	_PS1CV
                                    1-   70     	extern	_BZ1CR
                                    1-   71     	extern	_IRCR
                                    1-   72     	extern	_TBHP
                                    1-   73     	extern	_TBHD
                                    1-   74     	extern	_TMR2
                                    1-   75     	extern	_T2CR1
                                    1-   76     	extern	_T2CR2
                                    1-   77     	extern	_PWM2DUTY
                                    1-   78     	extern	_PS2CV
                                    1-   79     	extern	_BZ2CR
                                    1-   80     	extern	_OSCCR
                                    1-   81     	extern	_TMR3
                                    1-   82     	extern	_T3CR1
                                    1-   83     	extern	_T3CR2
                                    1-   84     	extern	_PWM3DUTY
                                    1-   85     	extern	_PS3CV
                                    1-   86     	extern	_BZ3CR
                                    1-   87     	extern	_IOSTA
                                    1-   88     	extern	_IOSTB
                                    1-   89     	extern	_APHCON
                                    1-   90     	extern	_PS0CV
                                    1-   91     	extern	_BODCON
                                    1-   92     	extern	_CMPCR
                                    1-   93     	extern	_PCON1
                                    1-   94     	extern	_T0MD
                                    1-   95     	extern	___sdcc_saved_fsr
                                    1-   96     	extern	___sdcc_saved_stk00
                                    1-   97     	extern	___sdcc_saved_stk01
                                    1-   98     	extern	__nyc_ny8_startup
                                    1-   99     ;--------------------------------------------------------
                                    1-  100     ; global declarations
                                    1-  101     ;--------------------------------------------------------
                                    1-  102     	extern	_F_wait_eoc
                                    1-  103     	extern	_F_AIN2_Convert
                                    1-  104     	extern	_F_AIN3_Convert
                                    1-  105     	extern	_F_AIN4_Convert
                                    1-  106     	extern	_checkOutA
                                    1-  107     	extern	_checkBatAD
                                    1-  108     	extern	_initAD
                                    1-  109     	extern	_delay
                                    1-  110     	extern	_chrgCtr
                                    1-  111     	extern	_keyRead
                                    1-  112     	extern	_gotoSleep
                                    1-  113     	extern	_pwmStop
                                    1-  114     	extern	_pwmInit
                                    1-  115     	extern	_pwm1Stop
                                    1-  116     	extern	_pwm1Init
                                    1-  117     	extern	_LED8ON
                                    1-  118     	extern	_LED7ON
                                    1-  119     	extern	_LED6ON
                                    1-  120     	extern	_LED5ON
                                    1-  121     	extern	_LED4ON
                                    1-  122     	extern	_LED3ON
                                    1-  123     	extern	_LED2ON
                                    1-  124     	extern	_LED1ON
                                    1-  125     	extern	_LedInput
                                    1-  126     	extern	_ledShow
                                    1-  127     	extern	_initSys
                                    1-  128     	extern	_powerOff
                                    1-  129     	extern	_keyCtr
                                    1-  130     	extern	_isr
                                    1-  131     	extern	_main
                                    1-  132     	extern	_Status
                                    1-  133     	extern	_duty
                                    1-  134     	extern	_intCount
                                    1-  135     	extern	_count500ms
                                    1-  136     	extern	_keyCount
                                    1-  137     	extern	_workStep
                                    1-  138     	extern	_ledStep
                                    1-  139     	extern	_fgCount
                                    1-  140     	extern	_fgPRD
                                    1-  141     	extern	_preFG
                                    1-  142     	extern	_maxDuty
                                    1-  143     	extern	_pwStep
                                    1-  144     	extern	_R_AIN4_DATA
                                    1-  145     	extern	_R_AIN4_DATA_LB
                                    1-  146     	extern	_R_AIN3_DATA
                                    1-  147     	extern	_R_AIN3_DATA_LB
                                    1-  148     	extern	_R_AIN2_DATA
                                    1-  149     	extern	_R_AIN2_DATA_LB
                                    1-  150     	extern	_chrgTime
                                    1-  151     	extern	_startStep
                                    1-  152     	extern	_sleepTime
                                    1-  153     	extern	_count200ms
                                    1-  154     	extern	_count1s
                                    1-  155     	extern	_count900s
                                    1-  156     	extern	_lowBatTime
                                    1-  157     	extern	_ledTime
                                    1-  158     	extern	_overCount
                                    1-  159     	extern	_chrgCount
                                    1-  160     	extern	_ledLightTime
                                    1-  161     	extern	_currentDuty
                                    1-  162     	extern	_fullCount
                                    1-  163     	extern	_shanshuoTime
                                    1-  164     	extern	_firstTime
                                    1-  165     	extern	_tempDuty
                                    1-  166     	extern	_lowCount
                                    1-  167     	extern	_longPressFlag
                                    1-  168     	extern	_IntFlag
                                    1-  169     	extern	_chrgFlag
                                    1-  170     	extern	_redLedFlag
                                    1-  171     	extern	_tempLedStep
                                    1-  172     	extern	_count5S
                                    1-  173     	extern	_ledDeadTime
                                    1-  174     	extern	_lockLedStep
                                    1-  175     	extern	_debug
                                    1-  177     	extern PSAVE
                                    1-  178     	extern SSAVE
                                    1-  179     	extern WSAVE
                                    1-  180     	extern STK02
                                    1-  181     	extern STK01
                                    1-  182     	extern STK00
                                    1-  184     .segment "uninit", 0x20000040
 20000040                           1-  185     PSAVE:
                                    1-  186     	.res 1
 20000041                           1-  187     SSAVE:
                                    1-  188     	.res 1
 20000042                           1-  189     WSAVE:
                                    1-  190     	.res 1
 20000043                           1-  191     STK02:
                                    1-  192     	.res 1
 20000044                           1-  193     STK01:
                                    1-  194     	.res 1
 20000045                           1-  195     STK00:
                                    1-  196     	.res 1
                                    1-  198     ;--------------------------------------------------------
                                    1-  199     ; global definitions
                                    1-  200     ;--------------------------------------------------------
                                    1-  201     .segment "uninit"
     0000                           1-  202     _R_AIN4_DATA:
                                    1-  203     	.res	2
                                    1-  206     .segment "uninit"
     0000                           1-  207     _R_AIN4_DATA_LB:
                                    1-  208     	.res	1
                                    1-  211     .segment "uninit"
     0000                           1-  212     _R_AIN3_DATA:
                                    1-  213     	.res	2
                                    1-  216     .segment "uninit"
     0000                           1-  217     _R_AIN3_DATA_LB:
                                    1-  218     	.res	1
                                    1-  221     .segment "uninit"
     0000                           1-  222     _R_AIN2_DATA:
                                    1-  223     	.res	2
                                    1-  226     .segment "uninit"
     0000                           1-  227     _R_AIN2_DATA_LB:
                                    1-  228     	.res	1
                                    1-  231     ;--------------------------------------------------------
                                    1-  232     ; absolute symbol definitions
                                    1-  233     ;--------------------------------------------------------
                                    1-  234     ;--------------------------------------------------------
                                    1-  235     ; compiler-defined variables
                                    1-  236     ;--------------------------------------------------------
                                    1-  237     .segment "uninit"
     0000                           1-  238     r0x105C:
                                    1-  239     	.res	1
                                    1-  240     .segment "uninit"
     0000                           1-  241     r0x1051:
                                    1-  242     	.res	1
                                    1-  243     .segment "uninit"
     0000                           1-  244     r0x105B:
                                    1-  245     	.res	1
                                    1-  246     .segment "uninit"
     0000                           1-  247     r0x105A:
                                    1-  248     	.res	1
                                    1-  249     .segment "uninit"
     0000                           1-  250     r0x1059:
                                    1-  251     	.res	1
                                    1-  252     .segment "uninit"
     0000                           1-  253     r0x1058:
                                    1-  254     	.res	1
                                    1-  255     .segment "uninit"
     0000                           1-  256     r0x1057:
                                    1-  257     	.res	1
                                    1-  258     .segment "uninit"
     0000                           1-  259     r0x1056:
                                    1-  260     	.res	1
                                    1-  261     .segment "uninit"
     0000                           1-  262     r0x1055:
                                    1-  263     	.res	1
                                    1-  264     .segment "uninit"
     0000                           1-  265     r0x1054:
                                    1-  266     	.res	1
                                    1-  267     .segment "uninit"
     0000                           1-  268     r0x1053:
                                    1-  269     	.res	1
                                    1-  270     .segment "uninit"
     0000                           1-  271     r0x1052:
                                    1-  272     	.res	1
                                    1-  273     .segment "uninit"
     0000                           1-  274     r0x1050:
                                    1-  275     	.res	1
                                    1-  276     .segment "uninit"
     0000                           1-  277     r0x104B:
                                    1-  278     	.res	1
                                    1-  279     .segment "uninit"
     0000                           1-  280     r0x104C:
                                    1-  281     	.res	1
                                    1-  282     .segment "uninit"
     0000                           1-  283     r0x104D:
                                    1-  284     	.res	1
                                    1-  285     .segment "uninit"
     0000                           1-  286     r0x104F:
                                    1-  287     	.res	1
                                    1-  288     .segment "uninit"
     0000                           1-  289     r0x102F:
                                    1-  290     	.res	1
                                    1-  291     .segment "uninit"
     0000                           1-  292     r0x1030:
                                    1-  293     	.res	1
                                    1-  294     .segment "uninit"
     0000                           1-  295     r0x1049:
                                    1-  296     	.res	1
                                    1-  297     .segment "uninit"
     0000                           1-  298     r0x104A:
                                    1-  299     	.res	1
                                    1-  300     .segment "uninit"
     0000                           1-  301     r0x1045:
                                    1-  302     	.res	1
                                    1-  303     .segment "uninit"
     0000                           1-  304     r0x1046:
                                    1-  305     	.res	1
                                    1-  306     .segment "uninit"
     0000                           1-  307     r0x103D:
                                    1-  308     	.res	1
                                    1-  309     .segment "uninit"
     0000                           1-  310     r0x103E:
                                    1-  311     	.res	1
                                    1-  312     .segment "uninit"
     0000                           1-  313     r0x103F:
                                    1-  314     	.res	1
                                    1-  315     .segment "uninit"
     0000                           1-  316     r0x1042:
                                    1-  317     	.res	1
                                    1-  318     .segment "uninit"
     0000                           1-  319     r0x1037:
                                    1-  320     	.res	1
                                    1-  321     .segment "uninit"
     0000                           1-  322     r0x1038:
                                    1-  323     	.res	1
                                    1-  324     .segment "uninit"
     0000                           1-  325     r0x1039:
                                    1-  326     	.res	1
                                    1-  327     .segment "uninit"
     0000                           1-  328     r0x103C:
                                    1-  329     	.res	1
                                    1-  330     .segment "uninit"
     0000                           1-  331     r0x1031:
                                    1-  332     	.res	1
                                    1-  333     .segment "uninit"
     0000                           1-  334     r0x1032:
                                    1-  335     	.res	1
                                    1-  336     .segment "uninit"
     0000                           1-  337     r0x1033:
                                    1-  338     	.res	1
                                    1-  339     .segment "uninit"
     0000                           1-  340     r0x1036:
                                    1-  341     	.res	1
                                    1-  342     ;--------------------------------------------------------
                                    1-  343     ; initialized data
                                    1-  344     ;--------------------------------------------------------
                                    1-  346     .segment "idata"
     0000                           1-  347     _Status:
     0000 0000                      1-  348     	dw	0x00
                                    1-  352     .segment "idata"
     0000                           1-  353     _duty:
     0000 0000 0000                 1-  354     	dw	0x00, 0x00
                                    1-  358     .segment "idata"
     0000                           1-  359     _intCount:
     0000 0000                      1-  360     	dw	0x00
                                    1-  364     .segment "idata"
     0000                           1-  365     _count500ms:
     0000 0000                      1-  366     	dw	0x00
                                    1-  370     .segment "idata"
     0000                           1-  371     _keyCount:
     0000 0000                      1-  372     	dw	0x00
                                    1-  376     .segment "idata"
     0000                           1-  377     _workStep:
     0000 0000                      1-  378     	dw	0x00
                                    1-  382     .segment "idata"
     0000                           1-  383     _ledStep:
     0000 0000                      1-  384     	dw	0x00
                                    1-  388     .segment "idata"
     0000                           1-  389     _fgCount:
     0000 0000 0000                 1-  390     	dw	0x00, 0x00
                                    1-  394     .segment "idata"
     0000                           1-  395     _fgPRD:
     0000 0000 0000                 1-  396     	dw	0x00, 0x00
                                    1-  400     .segment "idata"
     0000                           1-  401     _preFG:
     0000 0000                      1-  402     	dw	0x00
                                    1-  406     .segment "idata"
     0000                           1-  407     _maxDuty:
     0000 0000                      1-  408     	dw	0x00
                                    1-  412     .segment "idata"
     0000                           1-  413     _pwStep:
     0000 0000                      1-  414     	dw	0x00
                                    1-  418     .segment "idata"
     0000                           1-  419     _chrgTime:
     0000 0000 0000                 1-  420     	dw	0x00, 0x00
                                    1-  424     .segment "idata"
     0000                           1-  425     _startStep:
     0000 0000                      1-  426     	dw	0x00
                                    1-  430     .segment "idata"
     0000                           1-  431     _sleepTime:
     0000 0000 0000                 1-  432     	dw	0x00, 0x00
                                    1-  436     .segment "idata"
     0000                           1-  437     _count200ms:
     0000 0000                      1-  438     	dw	0x00
                                    1-  442     .segment "idata"
     0000                           1-  443     _count1s:
     0000 0000                      1-  444     	dw	0x00
                                    1-  448     .segment "idata"
     0000                           1-  449     _count900s:
     0000 0000 0000                 1-  450     	dw	0x00, 0x00
                                    1-  454     .segment "idata"
     0000                           1-  455     _lowBatTime:
     0000 0000                      1-  456     	dw	0x00
                                    1-  460     .segment "idata"
     0000                           1-  461     _ledTime:
     0000 0000                      1-  462     	dw	0x00
                                    1-  466     .segment "idata"
     0000                           1-  467     _overCount:
     0000 0000                      1-  468     	dw	0x00
                                    1-  472     .segment "idata"
     0000                           1-  473     _chrgCount:
     0000 0000                      1-  474     	dw	0x00
                                    1-  478     .segment "idata"
     0000                           1-  479     _ledLightTime:
     0000 0000                      1-  480     	dw	0x00
                                    1-  484     .segment "idata"
     0000                           1-  485     _currentDuty:
     0000 0000                      1-  486     	dw	0x00
                                    1-  490     .segment "idata"
     0000                           1-  491     _fullCount:
     0000 0000                      1-  492     	dw	0x00
                                    1-  496     .segment "idata"
     0000                           1-  497     _shanshuoTime:
     0000 0000                      1-  498     	dw	0x00
                                    1-  502     .segment "idata"
     0000                           1-  503     _firstTime:
     0000 0000                      1-  504     	dw	0x00
                                    1-  508     .segment "idata"
     0000                           1-  509     _tempDuty:
     0000 0000                      1-  510     	dw	0x00
                                    1-  514     .segment "idata"
     0000                           1-  515     _lowCount:
     0000 0000                      1-  516     	dw	0x00
                                    1-  520     .segment "idata"
     0000                           1-  521     _longPressFlag:
     0000 0000                      1-  522     	dw	0x00
                                    1-  526     .segment "idata"
     0000                           1-  527     _IntFlag:
     0000 0000                      1-  528     	dw	0x00
                                    1-  532     .segment "idata"
     0000                           1-  533     _chrgFlag:
     0000 0000                      1-  534     	dw	0x00
                                    1-  538     .segment "idata"
     0000                           1-  539     _redLedFlag:
     0000 0000                      1-  540     	dw	0x00
                                    1-  544     .segment "idata"
     0000                           1-  545     _tempLedStep:
     0000 0000                      1-  546     	dw	0x00
                                    1-  550     .segment "idata"
     0000                           1-  551     _count5S:
     0000 0000 0000                 1-  552     	dw	0x00, 0x00
                                    1-  556     .segment "idata"
     0000                           1-  557     _ledDeadTime:
     0000 0000                      1-  558     	dw	0x00
                                    1-  562     .segment "idata"
     0000                           1-  563     _lockLedStep:
     0000 0000                      1-  564     	dw	0x00
                                    1-  568     .segment "idata"
     0000                           1-  569     _debug:
     0000 0000                      1-  570     	dw	0x00
                                    1-  573     ;--------------------------------------------------------
                                    1-  574     ; overlayable items in internal ram 
                                    1-  575     ;--------------------------------------------------------
                                    1-  576     ;	udata_ovr
                                    1-  577     ;--------------------------------------------------------
                                    1-  578     ; reset vector 
                                    1-  579     ;--------------------------------------------------------
                                    1-  580     ORG	0x0000
     0000 3rrr                      1-  581     	LGOTO	__nyc_ny8_startup
                                    1-  582     ;--------------------------------------------------------
                                    1-  583     ; interrupt and initialization code
                                    1-  584     ;--------------------------------------------------------
                                    1-  585     ORG 0x0008
                                    1-  586     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  588     .segment "code"
     0000                           1-  589     __sdcc_interrupt:
                                    1-  590     ;***
                                    1-  591     ;  pBlock Stats: dbName = I
                                    1-  592     ;***
                                    1-  593     ;2 compiler assigned registers:
                                    1-  594     ;   STK00
                                    1-  595     ;   STK01
                                    1-  596     ;; Starting pCode block
     0000                           1-  597     _isr:
                                    1-  598     ; 0 exit points
                                    1-  599     	.line	118, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  600     	MOVAR	WSAVE
     0001 1503                      1-  601     	SWAPR	STATUS,W
     0002 0283                      1-  602     	CLRR	STATUS
     0003 00rr                      1-  603     	MOVAR	SSAVE
     0004 010A                      1-  604     	MOVR	PCHBUF,W
     0005 028A                      1-  605     	CLRR	PCHBUF
     0006 00rr                      1-  606     	MOVAR	PSAVE
     0007 0104                      1-  607     	MOVR	FSR,W
                                    1-  608     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  609     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  610     	MOVR	STK00,W
                                    1-  611     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  612     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  613     	MOVR	STK01,W
                                    1-  614     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  615     	MOVAR	___sdcc_saved_stk01
                                    1-  616     	.line	120, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  617     	BTRSS	_INTFbits,0
                                    1-  618     	MGOTO	_00128_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  619     	.line	122, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  620     	MOVIA	0x37
     0013 03rr                      1-  621     	ADDAR	_TMR0,F
                                    1-  622     	.line	124, "main.c"; 	if(++intCount >= 100)
                                    1-  623     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  624     	INCR	_intCount,F
                                    1-  625     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  626     	MOVIA	0x64
     0017 04rr                      1-  627     	SUBAR	_intCount,W
     0018 0803                      1-  628     	BTRSS	STATUS,0
                                    1-  629     	MGOTO	_00128_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  630     	.line	126, "main.c"; 	IntFlag = 1;
     001A 2101                      1-  631     	MOVIA	0x01
                                    1-  632     	BANKSEL	_IntFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  633     	MOVAR	_IntFlag
                                    1-  634     	.line	127, "main.c"; 	intCount = 0;
                                    1-  635     	BANKSEL	_intCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  636     	CLRR	_intCount
                                    1-  637     	.line	128, "main.c"; 	if(workStep)
                                    1-  638     	BANKSEL	_workStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 01rr                      1-  639     	MOVR	_workStep,W
     0021 0D03                      1-  640     	BTRSC	STATUS,2
                                    1-  641     	MGOTO	_00106_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  642     	.line	129, "main.c"; 	++fgCount;
                                    1-  643     	BANKSEL	_fgCount
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 05rr                      1-  644     	INCR	_fgCount,F
     0025 0D03                      1-  645     	BTRSC	STATUS,2
     0026 05rr                      1-  646     	INCR	(_fgCount + 1),F
     0027                           1-  647     _00106_DS_:
                                    1-  648     	.line	130, "main.c"; 	if(++count500ms >= 60)
                                    1-  649     	BANKSEL	_count500ms
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 05rr                      1-  650     	INCR	_count500ms,F
                                    1-  651     ;;unsigned compare: left < lit (0x3C=60), size=1
     0029 213C                      1-  652     	MOVIA	0x3c
     002A 04rr                      1-  653     	SUBAR	_count500ms,W
     002B 0C03                      1-  654     	BTRSC	STATUS,0
                                    1-  655     	.line	131, "main.c"; 	count500ms = 0;
     002C 02rr                      1-  656     	CLRR	_count500ms
                                    1-  657     	.line	132, "main.c"; 	if(++count200ms >= 20)
                                    1-  658     	BANKSEL	_count200ms
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 05rr                      1-  659     	INCR	_count200ms,F
     002F 2114                      1-  660     	MOVIA	0x14
     0030 04rr                      1-  661     	SUBAR	_count200ms,W
     0031 0803                      1-  662     	BTRSS	STATUS,0
                                    1-  663     	MGOTO	_00112_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  664     	.line	134, "main.c"; 	count200ms = 0;
     0033 02rr                      1-  665     	CLRR	_count200ms
                                    1-  666     	.line	135, "main.c"; 	if(ledDeadTime > 0)
                                    1-  667     	BANKSEL	_ledDeadTime
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 01rr                      1-  668     	MOVR	_ledDeadTime,W
     0036 0903                      1-  669     	BTRSS	STATUS,2
                                    1-  670     	.line	136, "main.c"; 	--ledDeadTime;
     0037 06rr                      1-  671     	DECR	_ledDeadTime,F
     0038                           1-  672     _00112_DS_:
                                    1-  673     	.line	138, "main.c"; 	if(++count1s >= 100)
                                    1-  674     	BANKSEL	_count1s
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 05rr                      1-  675     	INCR	_count1s,F
     003A 2164                      1-  676     	MOVIA	0x64
     003B 04rr                      1-  677     	SUBAR	_count1s,W
     003C 0803                      1-  678     	BTRSS	STATUS,0
                                    1-  679     	MGOTO	_00128_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  680     	.line	140, "main.c"; 	count1s = 0;
     003E 02rr                      1-  681     	CLRR	_count1s
                                    1-  682     	.line	141, "main.c"; 	if(chrgFlag == 1 && pwStep == 8)
                                    1-  683     	BANKSEL	_chrgFlag
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 01rr                      1-  684     	MOVR	_chrgFlag,W
     0041 2401                      1-  685     	XORIA	0x01
     0042 0903                      1-  686     	BTRSS	STATUS,2
                                    1-  687     	MGOTO	_00114_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  688     	BANKSEL	_pwStep
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 01rr                      1-  689     	MOVR	_pwStep,W
     0046 2408                      1-  690     	XORIA	0x08
     0047 0903                      1-  691     	BTRSS	STATUS,2
                                    1-  692     	MGOTO	_00114_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  693     	.line	143, "main.c"; 	++chrgTime;
                                    1-  694     	BANKSEL	_chrgTime
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 05rr                      1-  695     	INCR	_chrgTime,F
     004B 0D03                      1-  696     	BTRSC	STATUS,2
     004C 05rr                      1-  697     	INCR	(_chrgTime + 1),F
     004D                           1-  698     _00114_DS_:
                                    1-  699     	.line	145, "main.c"; 	if(ledLightTime > 0)
                                    1-  700     	BANKSEL	_ledLightTime
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 01rr                      1-  701     	MOVR	_ledLightTime,W
     004F 0903                      1-  702     	BTRSS	STATUS,2
                                    1-  703     	.line	146, "main.c"; 	--ledLightTime;
     0050 06rr                      1-  704     	DECR	_ledLightTime,F
                                    1-  705     	.line	147, "main.c"; 	if(shanshuoTime > 0)
                                    1-  706     	BANKSEL	_shanshuoTime
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 01rr                      1-  707     	MOVR	_shanshuoTime,W
     0053 0903                      1-  708     	BTRSS	STATUS,2
                                    1-  709     	.line	148, "main.c"; 	--shanshuoTime;
     0054 06rr                      1-  710     	DECR	_shanshuoTime,F
                                    1-  711     	.line	149, "main.c"; 	if(workStep)
                                    1-  712     	BANKSEL	_workStep
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 01rr                      1-  713     	MOVR	_workStep,W
     0057 0D03                      1-  714     	BTRSC	STATUS,2
                                    1-  715     	MGOTO	_00121_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  716     	.line	151, "main.c"; 	++count900s;
                                    1-  717     	BANKSEL	_count900s
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 05rr                      1-  718     	INCR	_count900s,F
     005B 0D03                      1-  719     	BTRSC	STATUS,2
     005C 05rr                      1-  720     	INCR	(_count900s + 1),F
                                    1-  721     	MGOTO	_00128_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
     005E                           1-  722     _00121_DS_:
                                    1-  723     	.line	155, "main.c"; 	count900s = 0;
                                    1-  724     	BANKSEL	_count900s
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 02rr                      1-  725     	CLRR	_count900s
     0060 02rr                      1-  726     	CLRR	(_count900s + 1)
     0061                           1-  727     _00128_DS_:
                                    1-  728     	.line	164, "main.c"; 	if(INTFbits.PABIF)
     0061 08rr                      1-  729     	BTRSS	_INTFbits,1
                                    1-  730     	MGOTO	_00130_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  731     	.line	166, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0063 21FD                      1-  732     	MOVIA	0xfd
     0064 00rr                      1-  733     	MOVAR	_INTF
     0065                           1-  734     _00130_DS_:
                                    1-  735     	.line	169, "main.c"; 	INTF = 0;
     0065 02rr                      1-  736     	CLRR	_INTF
                                    1-  737     	.line	171, "main.c"; 	}
                                    1-  738     	BANKSEL	___sdcc_saved_stk01
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 01rr                      1-  739     	MOVR	___sdcc_saved_stk01,W
     0068 00rr                      1-  740     	MOVAR	STK01
                                    1-  741     	BANKSEL	___sdcc_saved_stk00
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 01rr                      1-  742     	MOVR	___sdcc_saved_stk00,W
     006B 00rr                      1-  743     	MOVAR	STK00
                                    1-  744     	BANKSEL	___sdcc_saved_fsr
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 01rr                      1-  745     	MOVR	___sdcc_saved_fsr,W
     006E 0084                      1-  746     	MOVAR	FSR
     006F 01rr                      1-  747     	MOVR	PSAVE,W
     0070 008A                      1-  748     	MOVAR	PCHBUF
     0071 0283                      1-  749     	CLRR	STATUS
     0072 15rr                      1-  750     	SWAPR	SSAVE,W
     0073 0083                      1-  751     	MOVAR	STATUS
     0074 15rr                      1-  752     	SWAPR	WSAVE,F
     0075 15rr                      1-  753     	SWAPR	WSAVE,W
     0076                           1-  754     END_OF_INTERRUPT:
     0076 0011                      1-  755     	RETIE	
                                    1-  757     ;--------------------------------------------------------
                                    1-  758     ; code
                                    1-  759     ;--------------------------------------------------------
                                    1-  760     ;***
                                    1-  761     ;  pBlock Stats: dbName = M
                                    1-  762     ;***
                                    1-  763     ;has an exit
                                    1-  764     ;functions called:
                                    1-  765     ;   _initSys
                                    1-  766     ;   _initAD
                                    1-  767     ;   _ledShow
                                    1-  768     ;   _keyCtr
                                    1-  769     ;   _checkBatAD
                                    1-  770     ;   _checkOutA
                                    1-  771     ;   _chrgCtr
                                    1-  772     ;   _powerOff
                                    1-  773     ;   _gotoSleep
                                    1-  774     ;   _powerOff
                                    1-  775     ;   _initSys
                                    1-  776     ;   _initAD
                                    1-  777     ;   _ledShow
                                    1-  778     ;   _keyCtr
                                    1-  779     ;   _checkBatAD
                                    1-  780     ;   _checkOutA
                                    1-  781     ;   _chrgCtr
                                    1-  782     ;   _powerOff
                                    1-  783     ;   _gotoSleep
                                    1-  784     ;   _powerOff
                                    1-  785     ;; Starting pCode block
                                    1-  786     .segment "code"; module=main, function=_main
     0000                           1-  788     _main:
                                    1-  789     ; 2 exit points
                                    1-  790     	.line	175, "main.c"; 	initSys();
                                    1-  791     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  792     	.line	176, "main.c"; 	initAD();
                                    1-  793     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  794     _00165_DS_:
                                    1-  795     	.line	179, "main.c"; 	CLRWDT();
     0002 0002                      1-  796     	clrwdt
                                    1-  797     	.line	180, "main.c"; 	ledShow();
                                    1-  798     	MCALL	_ledShow
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  799     	.line	181, "main.c"; 	if(!IntFlag)
                                    1-  800     	BANKSEL	_IntFlag
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  801     	MOVR	_IntFlag,W
     0006 0D03                      1-  802     	BTRSC	STATUS,2
                                    1-  803     	MGOTO	_00165_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  804     	.line	183, "main.c"; 	IntFlag = 0;
     0008 02rr                      1-  805     	CLRR	_IntFlag
                                    1-  806     	.line	184, "main.c"; 	if(chrgFlag == 0)
                                    1-  807     	BANKSEL	_chrgFlag
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 01rr                      1-  808     	MOVR	_chrgFlag,W
     000B 0D03                      1-  809     	BTRSC	STATUS,2
                                    1-  810     	.line	185, "main.c"; 	keyCtr();
                                    1-  811     	MCALL	_keyCtr
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  812     	.line	186, "main.c"; 	if(count200ms < 5)
     000D 2105                      1-  813     	MOVIA	0x05
                                    1-  814     	BANKSEL	_count200ms
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 04rr                      1-  815     	SUBAR	_count200ms,W
     0010 0C03                      1-  816     	BTRSC	STATUS,0
                                    1-  817     	MGOTO	_00143_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  818     	.line	188, "main.c"; 	checkBatAD();
                                    1-  819     	MCALL	_checkBatAD
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  820     	MGOTO	_00144_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  821     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  822     ;;unsigned compare: left >= lit (0x9=9), size=1
     0014                           1-  823     _00143_DS_:
                                    1-  824     	.line	190, "main.c"; 	else if(count200ms > 8 && count200ms < 11)
     0014 2109                      1-  825     	MOVIA	0x09
                                    1-  826     	BANKSEL	_count200ms
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 04rr                      1-  827     	SUBAR	_count200ms,W
     0017 0803                      1-  828     	BTRSS	STATUS,0
                                    1-  829     	MGOTO	_00144_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  830     ;;unsigned compare: left < lit (0xB=11), size=1
     0019 210B                      1-  831     	MOVIA	0x0b
     001A 04rr                      1-  832     	SUBAR	_count200ms,W
     001B 0803                      1-  833     	BTRSS	STATUS,0
                                    1-  834     	.line	192, "main.c"; 	checkOutA();
                                    1-  835     	MCALL	_checkOutA
     001C 2rrr                      3-   66 m1      LCALL rom_address
     001D                           1-  836     _00144_DS_:
                                    1-  837     	.line	194, "main.c"; 	chrgCtr();
                                    1-  838     	MCALL	_chrgCtr
     001D 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  839     	.line	196, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  840     	BANKSEL	_workStep
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 01rr                      1-  841     	MOVR	_workStep,W
     0020 0D03                      1-  842     	BTRSC	STATUS,2
                                    1-  843     	MGOTO	_00146_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  844     	BANKSEL	_currentDuty
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1-  845     	MOVR	_currentDuty,W
                                    1-  846     	BANKSEL	_maxDuty
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 04rr                      1-  847     	SUBAR	_maxDuty,W
     0026 0C03                      1-  848     	BTRSC	STATUS,0
                                    1-  849     	MGOTO	_00146_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  850     	.line	198, "main.c"; 	currentDuty = currentDuty - 10;
     0028 21F6                      1-  851     	MOVIA	0xf6
                                    1-  852     	BANKSEL	_currentDuty
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 03rr                      1-  853     	ADDAR	_currentDuty,F
                                    1-  854     	.line	199, "main.c"; 	PWM2DUTY = currentDuty;
     002B 01rr                      1-  855     	MOVR	_currentDuty,W
     002C 00rr                      1-  856     	SFUN	_PWM2DUTY
                                    1-  857     ;;unsigned compare: left < lit (0x5=5), size=1
     002D                           1-  858     _00146_DS_:
                                    1-  859     	.line	202, "main.c"; 	if(overCount >= 5 && workStep > 0)
     002D 2105                      1-  860     	MOVIA	0x05
                                    1-  861     	BANKSEL	_overCount
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 04rr                      1-  862     	SUBAR	_overCount,W
     0030 0803                      1-  863     	BTRSS	STATUS,0
                                    1-  864     	MGOTO	_00151_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  865     	BANKSEL	_workStep
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 01rr                      1-  866     	MOVR	_workStep,W
     0034 0D03                      1-  867     	BTRSC	STATUS,2
                                    1-  868     	MGOTO	_00151_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  869     	.line	204, "main.c"; 	if(++count5S > 500)
                                    1-  870     	BANKSEL	_count5S
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 05rr                      1-  871     	INCR	_count5S,F
     0038 0D03                      1-  872     	BTRSC	STATUS,2
     0039 05rr                      1-  873     	INCR	(_count5S + 1),F
                                    1-  874     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  875     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     003A 2101                      1-  876     	MOVIA	0x01
     003B 04rr                      1-  877     	SUBAR	(_count5S + 1),W
     003C 0903                      1-  878     	BTRSS	STATUS,2
                                    1-  879     	MGOTO	_00228_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
     003E 21F5                      1-  880     	MOVIA	0xf5
     003F 04rr                      1-  881     	SUBAR	_count5S,W
     0040                           1-  882     _00228_DS_:
     0040 0803                      1-  883     	BTRSS	STATUS,0
                                    1-  884     	MGOTO	_00152_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  885     	.line	206, "main.c"; 	overCount = 0;
                                    1-  886     	BANKSEL	_overCount
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 02rr                      1-  887     	CLRR	_overCount
                                    1-  888     	.line	207, "main.c"; 	count5S = 0;
                                    1-  889     	BANKSEL	_count5S
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 02rr                      1-  890     	CLRR	_count5S
     0046 02rr                      1-  891     	CLRR	(_count5S + 1)
                                    1-  892     	.line	208, "main.c"; 	ledDeadTime = 25;
     0047 2119                      1-  893     	MOVIA	0x19
                                    1-  894     	BANKSEL	_ledDeadTime
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1-  895     	MOVAR	_ledDeadTime
                                    1-  896     	.line	209, "main.c"; 	powerOff();
                                    1-  897     	MCALL	_powerOff
     004A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  898     	MGOTO	_00152_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C                           1-  899     _00151_DS_:
                                    1-  900     	.line	214, "main.c"; 	count5S = 0;
                                    1-  901     	BANKSEL	_count5S
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 02rr                      1-  902     	CLRR	_count5S
     004E 02rr                      1-  903     	CLRR	(_count5S + 1)
     004F                           1-  904     _00152_DS_:
                                    1-  905     	.line	216, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x20) == 0 && ledLightTime == 0 && ledDeadTime == 0)
                                    1-  906     	BANKSEL	_workStep
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 01rr                      1-  907     	MOVR	_workStep,W
     0051 0903                      1-  908     	BTRSS	STATUS,2
                                    1-  909     	MGOTO	_00157_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  910     	BANKSEL	_keyCount
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 01rr                      1-  911     	MOVR	_keyCount,W
     0055 0903                      1-  912     	BTRSS	STATUS,2
                                    1-  913     	MGOTO	_00157_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  914     	BANKSEL	_PORTA
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 0Err                      1-  915     	BTRSC	_PORTA,5
                                    1-  916     	MGOTO	_00157_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  917     	BANKSEL	_ledLightTime
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 01rr                      1-  918     	MOVR	_ledLightTime,W
     005C 0903                      1-  919     	BTRSS	STATUS,2
                                    1-  920     	MGOTO	_00157_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  921     	BANKSEL	_ledDeadTime
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 01rr                      1-  922     	MOVR	_ledDeadTime,W
     0060 0903                      1-  923     	BTRSS	STATUS,2
                                    1-  924     	MGOTO	_00157_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  925     	.line	218, "main.c"; 	if(++sleepTime > 30)
                                    1-  926     	BANKSEL	_sleepTime
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 05rr                      1-  927     	INCR	_sleepTime,F
     0064 0D03                      1-  928     	BTRSC	STATUS,2
     0065 05rr                      1-  929     	INCR	(_sleepTime + 1),F
                                    1-  930     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  931     ;;unsigned compare: left >= lit (0x1F=31), size=2
     0066 2100                      1-  932     	MOVIA	0x00
     0067 04rr                      1-  933     	SUBAR	(_sleepTime + 1),W
     0068 0903                      1-  934     	BTRSS	STATUS,2
                                    1-  935     	MGOTO	_00229_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
     006A 211F                      1-  936     	MOVIA	0x1f
     006B 04rr                      1-  937     	SUBAR	_sleepTime,W
     006C                           1-  938     _00229_DS_:
     006C 0803                      1-  939     	BTRSS	STATUS,0
                                    1-  940     	MGOTO	_00157_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  941     	.line	220, "main.c"; 	gotoSleep();
                                    1-  942     	MCALL	_gotoSleep
     006E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  943     ;;unsigned compare: left < lit (0x384=900), size=2
     006F                           1-  944     _00157_DS_:
                                    1-  945     	.line	224, "main.c"; 	if(count900s >= 900)
     006F 2103                      1-  946     	MOVIA	0x03
                                    1-  947     	BANKSEL	_count900s
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 04rr                      1-  948     	SUBAR	(_count900s + 1),W
     0072 0903                      1-  949     	BTRSS	STATUS,2
                                    1-  950     	MGOTO	_00230_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
     0074 2184                      1-  951     	MOVIA	0x84
     0075 04rr                      1-  952     	SUBAR	_count900s,W
     0076                           1-  953     _00230_DS_:
     0076 0803                      1-  954     	BTRSS	STATUS,0
                                    1-  955     	MGOTO	_00165_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  956     	.line	226, "main.c"; 	powerOff();
                                    1-  957     	MCALL	_powerOff
     0078 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  958     	MGOTO	_00165_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  959     	.line	230, "main.c"; 	}
                                    1-  960     	RETURN	
     007A 0010                      3-   40 m1      ret
                                    1-  961     ; exit point of _main
                                    1-  963     ;***
                                    1-  964     ;  pBlock Stats: dbName = C
                                    1-  965     ;***
                                    1-  966     ;has an exit
                                    1-  967     ;; Starting pCode block
                                    1-  968     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  970     _F_wait_eoc:
                                    1-  971     ; 2 exit points
     0000                           1-  972     _00989_DS_:
                                    1-  973     	.line	1033, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  974     	BTRSS	_ADMDbits,5
                                    1-  975     	MGOTO	_00989_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  976     	.line	1035, "main.c"; 	}
                                    1-  977     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1-  978     ; exit point of _F_wait_eoc
                                    1-  980     ;***
                                    1-  981     ;  pBlock Stats: dbName = C
                                    1-  982     ;***
                                    1-  983     ;has an exit
                                    1-  984     ;functions called:
                                    1-  985     ;   _delay
                                    1-  986     ;   _F_wait_eoc
                                    1-  987     ;   _delay
                                    1-  988     ;   _F_wait_eoc
                                    1-  989     ;6 compiler assigned registers:
                                    1-  990     ;   r0x1031
                                    1-  991     ;   r0x1032
                                    1-  992     ;   r0x1033
                                    1-  993     ;   r0x1034
                                    1-  994     ;   r0x1035
                                    1-  995     ;   r0x1036
                                    1-  996     ;; Starting pCode block
                                    1-  997     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1-  999     ;local variable name mapping:
     0000                           1- 1002     _F_AIN2_Convert:
                                    1- 1003     ; 2 exit points
                                    1- 1004     	.line	1016, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1005     	BANKSEL	r0x1031
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1006     	MOVAR	r0x1031
                                    1- 1007     	.line	1018, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1008     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1009     	CLRR	_R_AIN2_DATA_LB
                                    1- 1010     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1011     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1012     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1013     	.line	1020, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1014     	MOVIA	0x92
     0008 00rr                      1- 1015     	MOVAR	_ADMD
                                    1- 1016     	.line	1021, "main.c"; 	delay(200);	
     0009 21C8                      1- 1017     	MOVIA	0xc8
                                    1- 1018     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1019     	.line	1022, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1020     	MOVIA	0x01
                                    1- 1021     	BANKSEL	r0x1032
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1022     	MOVAR	r0x1032
     000E                           1- 1023     _00982_DS_:
                                    1- 1024     	BANKSEL	r0x1032
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1025     	MOVR	r0x1032,W
                                    1- 1026     	BANKSEL	r0x1031
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1027     	SUBAR	r0x1031,W
     0012 0803                      1- 1028     	BTRSS	STATUS,0
                                    1- 1029     	MGOTO	_00984_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1030     	.line	1024, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1031     	BSR	_ADMDbits,6
                                    1- 1032     	.line	1025, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1033     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1034     	.line	1026, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1035     	MOVIA	0x0f
     0017 10rr                      1- 1036     	ANDAR	_ADR,W
                                    1- 1037     ;;3	MOVAR	r0x1033
                                    1- 1038     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1039     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1040     	.line	1027, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1- 1041     	MOVR	_ADD,W
                                    1- 1042     	BANKSEL	r0x1033
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1043     	MOVAR	r0x1033
                                    1- 1044     ;;1	CLRR	r0x1034
                                    1- 1045     ;;109	MOVR	r0x1033,W
                                    1- 1046     ;;107	MOVAR	r0x1035
     001D 2100                      1- 1047     	MOVIA	0x00
                                    1- 1048     	BANKSEL	r0x1036
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1049     	MOVAR	r0x1036
                                    1- 1050     ;;108	MOVR	r0x1035,W
                                    1- 1051     	BANKSEL	r0x1033
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1052     	MOVR	r0x1033,W
                                    1- 1053     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1054     	ADDAR	_R_AIN2_DATA,F
                                    1- 1055     	BANKSEL	r0x1036
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1056     	MOVR	r0x1036,W
     0026 0C03                      1- 1057     	BTRSC	STATUS,0
     0027 05rr                      1- 1058     	INCR	r0x1036,W
     0028 0D03                      1- 1059     	BTRSC	STATUS,2
                                    1- 1060     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1061     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1062     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1- 1063     _00001_DS_:
                                    1- 1064     	.line	1022, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1065     	BANKSEL	r0x1032
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1066     	INCR	r0x1032,F
                                    1- 1067     	MGOTO	_00982_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1068     _00984_DS_:
                                    1- 1069     	.line	1029, "main.c"; 	}
                                    1- 1070     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1071     ; exit point of _F_AIN2_Convert
                                    1- 1073     ;***
                                    1- 1074     ;  pBlock Stats: dbName = C
                                    1- 1075     ;***
                                    1- 1076     ;has an exit
                                    1- 1077     ;functions called:
                                    1- 1078     ;   _delay
                                    1- 1079     ;   _F_wait_eoc
                                    1- 1080     ;   _delay
                                    1- 1081     ;   _F_wait_eoc
                                    1- 1082     ;6 compiler assigned registers:
                                    1- 1083     ;   r0x1037
                                    1- 1084     ;   r0x1038
                                    1- 1085     ;   r0x1039
                                    1- 1086     ;   r0x103A
                                    1- 1087     ;   r0x103B
                                    1- 1088     ;   r0x103C
                                    1- 1089     ;; Starting pCode block
                                    1- 1090     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1- 1092     ;local variable name mapping:
     0000                           1- 1095     _F_AIN3_Convert:
                                    1- 1096     ; 2 exit points
                                    1- 1097     	.line	1001, "main.c"; 	void F_AIN3_Convert(char count)
                                    1- 1098     	BANKSEL	r0x1037
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1099     	MOVAR	r0x1037
                                    1- 1100     	.line	1003, "main.c"; 	R_AIN3_DATA=R_AIN3_DATA_LB=0x00;   
                                    1- 1101     	BANKSEL	_R_AIN3_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1102     	CLRR	_R_AIN3_DATA_LB
                                    1- 1103     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1104     	CLRR	_R_AIN3_DATA
     0006 02rr                      1- 1105     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1106     	.line	1005, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0007 2193                      1- 1107     	MOVIA	0x93
     0008 00rr                      1- 1108     	MOVAR	_ADMD
                                    1- 1109     	.line	1006, "main.c"; 	delay(200);	
     0009 21C8                      1- 1110     	MOVIA	0xc8
                                    1- 1111     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1112     	.line	1007, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1113     	MOVIA	0x01
                                    1- 1114     	BANKSEL	r0x1038
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1115     	MOVAR	r0x1038
     000E                           1- 1116     _00973_DS_:
                                    1- 1117     	BANKSEL	r0x1038
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1118     	MOVR	r0x1038,W
                                    1- 1119     	BANKSEL	r0x1037
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1120     	SUBAR	r0x1037,W
     0012 0803                      1- 1121     	BTRSS	STATUS,0
                                    1- 1122     	MGOTO	_00975_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1123     	.line	1009, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1124     	BSR	_ADMDbits,6
                                    1- 1125     	.line	1010, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1126     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1127     	.line	1011, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1128     	MOVIA	0x0f
     0017 10rr                      1- 1129     	ANDAR	_ADR,W
                                    1- 1130     ;;3	MOVAR	r0x1039
                                    1- 1131     	BANKSEL	_R_AIN3_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1132     	ADDAR	_R_AIN3_DATA_LB,F
                                    1- 1133     	.line	1012, "main.c"; 	R_AIN3_DATA    += ADD; 
     001A 01rr                      1- 1134     	MOVR	_ADD,W
                                    1- 1135     	BANKSEL	r0x1039
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1136     	MOVAR	r0x1039
                                    1- 1137     ;;1	CLRR	r0x103A
                                    1- 1138     ;;106	MOVR	r0x1039,W
                                    1- 1139     ;;104	MOVAR	r0x103B
     001D 2100                      1- 1140     	MOVIA	0x00
                                    1- 1141     	BANKSEL	r0x103C
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1142     	MOVAR	r0x103C
                                    1- 1143     ;;105	MOVR	r0x103B,W
                                    1- 1144     	BANKSEL	r0x1039
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1145     	MOVR	r0x1039,W
                                    1- 1146     	BANKSEL	_R_AIN3_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1147     	ADDAR	_R_AIN3_DATA,F
                                    1- 1148     	BANKSEL	r0x103C
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1149     	MOVR	r0x103C,W
     0026 0C03                      1- 1150     	BTRSC	STATUS,0
     0027 05rr                      1- 1151     	INCR	r0x103C,W
     0028 0D03                      1- 1152     	BTRSC	STATUS,2
                                    1- 1153     	MGOTO	_00002_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1154     	BANKSEL	_R_AIN3_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1155     	ADDAR	(_R_AIN3_DATA + 1),F
     002C                           1- 1156     _00002_DS_:
                                    1- 1157     	.line	1007, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1158     	BANKSEL	r0x1038
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1159     	INCR	r0x1038,F
                                    1- 1160     	MGOTO	_00973_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1161     _00975_DS_:
                                    1- 1162     	.line	1014, "main.c"; 	}
                                    1- 1163     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1164     ; exit point of _F_AIN3_Convert
                                    1- 1166     ;***
                                    1- 1167     ;  pBlock Stats: dbName = C
                                    1- 1168     ;***
                                    1- 1169     ;has an exit
                                    1- 1170     ;functions called:
                                    1- 1171     ;   _delay
                                    1- 1172     ;   _F_wait_eoc
                                    1- 1173     ;   _delay
                                    1- 1174     ;   _F_wait_eoc
                                    1- 1175     ;6 compiler assigned registers:
                                    1- 1176     ;   r0x103D
                                    1- 1177     ;   r0x103E
                                    1- 1178     ;   r0x103F
                                    1- 1179     ;   r0x1040
                                    1- 1180     ;   r0x1041
                                    1- 1181     ;   r0x1042
                                    1- 1182     ;; Starting pCode block
                                    1- 1183     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1185     ;local variable name mapping:
     0000                           1- 1188     _F_AIN4_Convert:
                                    1- 1189     ; 2 exit points
                                    1- 1190     	.line	986, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1191     	BANKSEL	r0x103D
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1192     	MOVAR	r0x103D
                                    1- 1193     	.line	988, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1194     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1195     	CLRR	_R_AIN4_DATA_LB
                                    1- 1196     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1197     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1198     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1199     	.line	990, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1200     	MOVIA	0x94
     0008 00rr                      1- 1201     	MOVAR	_ADMD
                                    1- 1202     	.line	991, "main.c"; 	delay(200);	
     0009 21C8                      1- 1203     	MOVIA	0xc8
                                    1- 1204     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1205     	.line	992, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1206     	MOVIA	0x01
                                    1- 1207     	BANKSEL	r0x103E
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1208     	MOVAR	r0x103E
     000E                           1- 1209     _00964_DS_:
                                    1- 1210     	BANKSEL	r0x103E
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1211     	MOVR	r0x103E,W
                                    1- 1212     	BANKSEL	r0x103D
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1213     	SUBAR	r0x103D,W
     0012 0803                      1- 1214     	BTRSS	STATUS,0
                                    1- 1215     	MGOTO	_00966_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1216     	.line	994, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1217     	BSR	_ADMDbits,6
                                    1- 1218     	.line	995, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1219     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1220     	.line	996, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1221     	MOVIA	0x0f
     0017 10rr                      1- 1222     	ANDAR	_ADR,W
                                    1- 1223     ;;3	MOVAR	r0x103F
                                    1- 1224     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1225     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1226     	.line	997, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1227     	MOVR	_ADD,W
                                    1- 1228     	BANKSEL	r0x103F
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1229     	MOVAR	r0x103F
                                    1- 1230     ;;1	CLRR	r0x1040
                                    1- 1231     ;;103	MOVR	r0x103F,W
                                    1- 1232     ;;101	MOVAR	r0x1041
     001D 2100                      1- 1233     	MOVIA	0x00
                                    1- 1234     	BANKSEL	r0x1042
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1235     	MOVAR	r0x1042
                                    1- 1236     ;;102	MOVR	r0x1041,W
                                    1- 1237     	BANKSEL	r0x103F
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1238     	MOVR	r0x103F,W
                                    1- 1239     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1240     	ADDAR	_R_AIN4_DATA,F
                                    1- 1241     	BANKSEL	r0x1042
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1242     	MOVR	r0x1042,W
     0026 0C03                      1- 1243     	BTRSC	STATUS,0
     0027 05rr                      1- 1244     	INCR	r0x1042,W
     0028 0D03                      1- 1245     	BTRSC	STATUS,2
                                    1- 1246     	MGOTO	_00003_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1247     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1248     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1249     _00003_DS_:
                                    1- 1250     	.line	992, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1251     	BANKSEL	r0x103E
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1252     	INCR	r0x103E,F
                                    1- 1253     	MGOTO	_00964_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1254     _00966_DS_:
                                    1- 1255     	.line	999, "main.c"; 	}
                                    1- 1256     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1257     ; exit point of _F_AIN4_Convert
                                    1- 1259     ;***
                                    1- 1260     ;  pBlock Stats: dbName = C
                                    1- 1261     ;***
                                    1- 1262     ;has an exit
                                    1- 1263     ;functions called:
                                    1- 1264     ;   _F_AIN3_Convert
                                    1- 1265     ;   _F_AIN3_Convert
                                    1- 1266     ;4 compiler assigned registers:
                                    1- 1267     ;   r0x1043
                                    1- 1268     ;   r0x1044
                                    1- 1269     ;   r0x1045
                                    1- 1270     ;   r0x1046
                                    1- 1271     ;; Starting pCode block
                                    1- 1272     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1274     _checkOutA:
                                    1- 1275     ; 2 exit points
                                    1- 1276     	.line	877, "main.c"; 	R_AIN3_DATA = R_AIN3_DATA_LB = 0x00;
                                    1- 1277     	BANKSEL	_R_AIN3_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1278     	CLRR	_R_AIN3_DATA_LB
                                    1- 1279     	BANKSEL	_R_AIN3_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1280     	CLRR	_R_AIN3_DATA
     0004 02rr                      1- 1281     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1282     	.line	878, "main.c"; 	F_AIN3_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1283     	MOVIA	0x08
                                    1- 1284     	MCALL	_F_AIN3_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1285     	.line	879, "main.c"; 	R_AIN3_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1286     	BANKSEL	_R_AIN3_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1287     	SWAPR	(_R_AIN3_DATA + 1),W
     0009 22F0                      1- 1288     	ANDIA	0xf0
     000A 00rr                      1- 1289     	MOVAR	(_R_AIN3_DATA + 1)
     000B 15rr                      1- 1290     	SWAPR	_R_AIN3_DATA,W
     000C 00rr                      1- 1291     	MOVAR	_R_AIN3_DATA
     000D 220F                      1- 1292     	ANDIA	0x0f
     000E 11rr                      1- 1293     	IORAR	(_R_AIN3_DATA + 1),F
     000F 12rr                      1- 1294     	XORAR	_R_AIN3_DATA,F
                                    1- 1295     	.line	880, "main.c"; 	R_AIN3_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1296     	MOVIA	0xf0
                                    1- 1297     	BANKSEL	_R_AIN3_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1298     	ANDAR	_R_AIN3_DATA_LB,F
                                    1- 1299     	.line	881, "main.c"; 	R_AIN3_DATA += R_AIN3_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1300     	MOVR	_R_AIN3_DATA_LB,W
                                    1- 1301     	BANKSEL	r0x1045
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1302     	MOVAR	r0x1045
                                    1- 1303     ;;1	MOVAR	r0x1043
                                    1- 1304     ;;1	CLRR	r0x1044
                                    1- 1305     ;;100	MOVR	r0x1043,W
     0016 2100                      1- 1306     	MOVIA	0x00
                                    1- 1307     	BANKSEL	r0x1046
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1308     	MOVAR	r0x1046
                                    1- 1309     	BANKSEL	r0x1045
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1310     	MOVR	r0x1045,W
                                    1- 1311     	BANKSEL	_R_AIN3_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1312     	ADDAR	_R_AIN3_DATA,F
                                    1- 1313     	BANKSEL	r0x1046
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1314     	MOVR	r0x1046,W
     001F 0C03                      1- 1315     	BTRSC	STATUS,0
     0020 05rr                      1- 1316     	INCR	r0x1046,W
     0021 0D03                      1- 1317     	BTRSC	STATUS,2
                                    1- 1318     	MGOTO	_00004_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1319     	BANKSEL	_R_AIN3_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1320     	ADDAR	(_R_AIN3_DATA + 1),F
                                    1- 1321     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1322     _00004_DS_:
                                    1- 1323     	.line	882, "main.c"; 	R_AIN3_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1324     	BCR	STATUS,0
                                    1- 1325     	BANKSEL	_R_AIN3_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1326     	RRR	(_R_AIN3_DATA + 1),F
     0028 13rr                      1- 1327     	RRR	_R_AIN3_DATA,F
                                    1- 1328     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1329     	BCR	STATUS,0
     002A 13rr                      1- 1330     	RRR	(_R_AIN3_DATA + 1),F
     002B 13rr                      1- 1331     	RRR	_R_AIN3_DATA,F
                                    1- 1332     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1333     	BCR	STATUS,0
     002D 13rr                      1- 1334     	RRR	(_R_AIN3_DATA + 1),F
     002E 13rr                      1- 1335     	RRR	_R_AIN3_DATA,F
                                    1- 1336     	.line	883, "main.c"; 	if(debug)
                                    1- 1337     	BANKSEL	_debug
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1338     	MOVR	_debug,W
     0031 0D03                      1- 1339     	BTRSC	STATUS,2
                                    1- 1340     	MGOTO	_00822_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1341     	.line	884, "main.c"; 	R_AIN3_DATA = OUTA;
     0033 212D                      1- 1342     	MOVIA	0x2d
                                    1- 1343     	BANKSEL	_R_AIN3_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1344     	MOVAR	_R_AIN3_DATA
     0036 2101                      1- 1345     	MOVIA	0x01
     0037 00rr                      1- 1346     	MOVAR	(_R_AIN3_DATA + 1)
                                    1- 1347     ;;unsigned compare: left < lit (0x9=9), size=1
     0038                           1- 1348     _00822_DS_:
                                    1- 1349     	.line	885, "main.c"; 	if(workStep < 9 && R_AIN3_DATA > 200)
     0038 2109                      1- 1350     	MOVIA	0x09
                                    1- 1351     	BANKSEL	_workStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1352     	SUBAR	_workStep,W
     003B 0C03                      1- 1353     	BTRSC	STATUS,0
                                    1- 1354     	MGOTO	_00875_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1355     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1356     ;;unsigned compare: left >= lit (0xC9=201), size=2
     003D 2100                      1- 1357     	MOVIA	0x00
                                    1- 1358     	BANKSEL	_R_AIN3_DATA
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 04rr                      1- 1359     	SUBAR	(_R_AIN3_DATA + 1),W
     0040 0903                      1- 1360     	BTRSS	STATUS,2
                                    1- 1361     	MGOTO	_00950_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042 21C9                      1- 1362     	MOVIA	0xc9
     0043 04rr                      1- 1363     	SUBAR	_R_AIN3_DATA,W
     0044                           1- 1364     _00950_DS_:
     0044 0803                      1- 1365     	BTRSS	STATUS,0
                                    1- 1366     	MGOTO	_00875_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1367     	.line	887, "main.c"; 	if(++overCount > 5)
                                    1- 1368     	BANKSEL	_overCount
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 05rr                      1- 1369     	INCR	_overCount,F
                                    1- 1370     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1371     ;;unsigned compare: left >= lit (0x6=6), size=1
     0048 2106                      1- 1372     	MOVIA	0x06
     0049 04rr                      1- 1373     	SUBAR	_overCount,W
     004A 0803                      1- 1374     	BTRSS	STATUS,0
                                    1- 1375     	MGOTO	_00878_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1376     	.line	889, "main.c"; 	overCount = 5;
     004C 2105                      1- 1377     	MOVIA	0x05
     004D 00rr                      1- 1378     	MOVAR	_overCount
                                    1- 1379     	.line	890, "main.c"; 	tempLedStep = workStep;
                                    1- 1380     	BANKSEL	_workStep
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1- 1381     	MOVR	_workStep,W
                                    1- 1382     	BANKSEL	_tempLedStep
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 00rr                      1- 1383     	MOVAR	_tempLedStep
                                    1- 1384     	MGOTO	_00878_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1385     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1386     ;;unsigned compare: left >= lit (0x191=401), size=2
     0053                           1- 1387     _00875_DS_:
                                    1- 1388     	.line	894, "main.c"; 	else if(R_AIN3_DATA > 400)
     0053 2101                      1- 1389     	MOVIA	0x01
                                    1- 1390     	BANKSEL	_R_AIN3_DATA
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 04rr                      1- 1391     	SUBAR	(_R_AIN3_DATA + 1),W
     0056 0903                      1- 1392     	BTRSS	STATUS,2
                                    1- 1393     	MGOTO	_00952_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
     0058 2191                      1- 1394     	MOVIA	0x91
     0059 04rr                      1- 1395     	SUBAR	_R_AIN3_DATA,W
     005A                           1- 1396     _00952_DS_:
     005A 0803                      1- 1397     	BTRSS	STATUS,0
                                    1- 1398     	MGOTO	_00872_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1399     	.line	896, "main.c"; 	if(++overCount > 5)
                                    1- 1400     	BANKSEL	_overCount
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 05rr                      1- 1401     	INCR	_overCount,F
                                    1- 1402     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1403     ;;unsigned compare: left >= lit (0x6=6), size=1
     005E 2106                      1- 1404     	MOVIA	0x06
     005F 04rr                      1- 1405     	SUBAR	_overCount,W
     0060 0803                      1- 1406     	BTRSS	STATUS,0
                                    1- 1407     	MGOTO	_00878_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1408     	.line	898, "main.c"; 	overCount = 5;
     0062 2105                      1- 1409     	MOVIA	0x05
     0063 00rr                      1- 1410     	MOVAR	_overCount
                                    1- 1411     	.line	899, "main.c"; 	tempLedStep = workStep;
                                    1- 1412     	BANKSEL	_workStep
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1- 1413     	MOVR	_workStep,W
                                    1- 1414     	BANKSEL	_tempLedStep
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 00rr                      1- 1415     	MOVAR	_tempLedStep
                                    1- 1416     	MGOTO	_00878_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1417     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1418     ;;unsigned compare: left >= lit (0x4C=76), size=2
     0069                           1- 1419     _00872_DS_:
                                    1- 1420     	.line	907, "main.c"; 	else if(R_AIN3_DATA > 75)
     0069 2100                      1- 1421     	MOVIA	0x00
                                    1- 1422     	BANKSEL	_R_AIN3_DATA
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 04rr                      1- 1423     	SUBAR	(_R_AIN3_DATA + 1),W
     006C 0903                      1- 1424     	BTRSS	STATUS,2
                                    1- 1425     	MGOTO	_00954_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
     006E 214C                      1- 1426     	MOVIA	0x4c
     006F 04rr                      1- 1427     	SUBAR	_R_AIN3_DATA,W
     0070                           1- 1428     _00954_DS_:
     0070 0803                      1- 1429     	BTRSS	STATUS,0
                                    1- 1430     	MGOTO	_00869_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1431     	.line	909, "main.c"; 	if(overCount > 0)
                                    1- 1432     	BANKSEL	_overCount
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 01rr                      1- 1433     	MOVR	_overCount,W
     0074 0903                      1- 1434     	BTRSS	STATUS,2
                                    1- 1435     	.line	911, "main.c"; 	overCount--;
     0075 06rr                      1- 1436     	DECR	_overCount,F
                                    1- 1437     	.line	914, "main.c"; 	if(workStep == 1)
                                    1- 1438     	BANKSEL	_workStep
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 01rr                      1- 1439     	MOVR	_workStep,W
     0078 2401                      1- 1440     	XORIA	0x01
     0079 0903                      1- 1441     	BTRSS	STATUS,2
                                    1- 1442     	MGOTO	_00848_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1443     	.line	916, "main.c"; 	tempDuty = 79;
     007B 214F                      1- 1444     	MOVIA	0x4f
                                    1- 1445     	BANKSEL	_tempDuty
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 00rr                      1- 1446     	MOVAR	_tempDuty
                                    1- 1447     	MGOTO	_00849_DS_
     007E 3rrr                      3-   63 m1      LGOTO rom_address
     007F                           1- 1448     _00848_DS_:
                                    1- 1449     	.line	918, "main.c"; 	else if(workStep == 2)
                                    1- 1450     	BANKSEL	_workStep
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 01rr                      1- 1451     	MOVR	_workStep,W
     0081 2402                      1- 1452     	XORIA	0x02
     0082 0903                      1- 1453     	BTRSS	STATUS,2
                                    1- 1454     	MGOTO	_00845_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1455     	.line	920, "main.c"; 	tempDuty = 82;
     0084 2152                      1- 1456     	MOVIA	0x52
                                    1- 1457     	BANKSEL	_tempDuty
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 00rr                      1- 1458     	MOVAR	_tempDuty
                                    1- 1459     	MGOTO	_00849_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
     0088                           1- 1460     _00845_DS_:
                                    1- 1461     	.line	922, "main.c"; 	else if(workStep == 3)
                                    1- 1462     	BANKSEL	_workStep
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 01rr                      1- 1463     	MOVR	_workStep,W
     008A 2403                      1- 1464     	XORIA	0x03
     008B 0903                      1- 1465     	BTRSS	STATUS,2
                                    1- 1466     	MGOTO	_00842_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1467     	.line	924, "main.c"; 	tempDuty = 85;
     008D 2155                      1- 1468     	MOVIA	0x55
                                    1- 1469     	BANKSEL	_tempDuty
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 00rr                      1- 1470     	MOVAR	_tempDuty
                                    1- 1471     	MGOTO	_00849_DS_
     0090 3rrr                      3-   63 m1      LGOTO rom_address
     0091                           1- 1472     _00842_DS_:
                                    1- 1473     	.line	926, "main.c"; 	else if(workStep == 4)
                                    1- 1474     	BANKSEL	_workStep
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 01rr                      1- 1475     	MOVR	_workStep,W
     0093 2404                      1- 1476     	XORIA	0x04
     0094 0903                      1- 1477     	BTRSS	STATUS,2
                                    1- 1478     	MGOTO	_00839_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1479     	.line	928, "main.c"; 	tempDuty = 88;
     0096 2158                      1- 1480     	MOVIA	0x58
                                    1- 1481     	BANKSEL	_tempDuty
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 00rr                      1- 1482     	MOVAR	_tempDuty
                                    1- 1483     	MGOTO	_00849_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
     009A                           1- 1484     _00839_DS_:
                                    1- 1485     	.line	930, "main.c"; 	else if(workStep == 5)
                                    1- 1486     	BANKSEL	_workStep
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 01rr                      1- 1487     	MOVR	_workStep,W
     009C 2405                      1- 1488     	XORIA	0x05
     009D 0903                      1- 1489     	BTRSS	STATUS,2
                                    1- 1490     	MGOTO	_00836_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1491     	.line	932, "main.c"; 	tempDuty = 90;
     009F 215A                      1- 1492     	MOVIA	0x5a
                                    1- 1493     	BANKSEL	_tempDuty
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 00rr                      1- 1494     	MOVAR	_tempDuty
                                    1- 1495     	MGOTO	_00849_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
     00A3                           1- 1496     _00836_DS_:
                                    1- 1497     	.line	934, "main.c"; 	else if(workStep == 6)
                                    1- 1498     	BANKSEL	_workStep
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 01rr                      1- 1499     	MOVR	_workStep,W
     00A5 2406                      1- 1500     	XORIA	0x06
     00A6 0903                      1- 1501     	BTRSS	STATUS,2
                                    1- 1502     	MGOTO	_00833_DS_
     00A7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1503     	.line	936, "main.c"; 	tempDuty = 93;
     00A8 215D                      1- 1504     	MOVIA	0x5d
                                    1- 1505     	BANKSEL	_tempDuty
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 00rr                      1- 1506     	MOVAR	_tempDuty
                                    1- 1507     	MGOTO	_00849_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
     00AC                           1- 1508     _00833_DS_:
                                    1- 1509     	.line	938, "main.c"; 	else if(workStep == 7)
                                    1- 1510     	BANKSEL	_workStep
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 01rr                      1- 1511     	MOVR	_workStep,W
     00AE 2407                      1- 1512     	XORIA	0x07
     00AF 0903                      1- 1513     	BTRSS	STATUS,2
                                    1- 1514     	MGOTO	_00830_DS_
     00B0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1515     	.line	940, "main.c"; 	tempDuty = 96;
     00B1 2160                      1- 1516     	MOVIA	0x60
                                    1- 1517     	BANKSEL	_tempDuty
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 00rr                      1- 1518     	MOVAR	_tempDuty
                                    1- 1519     	MGOTO	_00849_DS_
     00B4 3rrr                      3-   63 m1      LGOTO rom_address
     00B5                           1- 1520     _00830_DS_:
                                    1- 1521     	.line	944, "main.c"; 	tempDuty = 99;
     00B5 2163                      1- 1522     	MOVIA	0x63
                                    1- 1523     	BANKSEL	_tempDuty
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 00rr                      1- 1524     	MOVAR	_tempDuty
     00B8                           1- 1525     _00849_DS_:
                                    1- 1526     	.line	947, "main.c"; 	PWM2DUTY = tempDuty;
                                    1- 1527     	BANKSEL	_tempDuty
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 01rr                      1- 1528     	MOVR	_tempDuty,W
     00BA 00rr                      1- 1529     	SFUN	_PWM2DUTY
                                    1- 1530     	MGOTO	_00878_DS_
     00BB 3rrr                      3-   63 m1      LGOTO rom_address
     00BC                           1- 1531     _00869_DS_:
                                    1- 1532     	.line	951, "main.c"; 	if(overCount > 0)
                                    1- 1533     	BANKSEL	_overCount
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 01rr                      1- 1534     	MOVR	_overCount,W
     00BE 0903                      1- 1535     	BTRSS	STATUS,2
                                    1- 1536     	.line	953, "main.c"; 	overCount--;
     00BF 06rr                      1- 1537     	DECR	_overCount,F
                                    1- 1538     	.line	955, "main.c"; 	if(R_AIN3_DATA > 65 && workStep < 4)
     00C0 2100                      1- 1539     	MOVIA	0x00
                                    1- 1540     	BANKSEL	_R_AIN3_DATA
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 04rr                      1- 1541     	SUBAR	(_R_AIN3_DATA + 1),W
     00C3 0903                      1- 1542     	BTRSS	STATUS,2
                                    1- 1543     	MGOTO	_00955_DS_
     00C4 3rrr                      3-   63 m1      LGOTO rom_address
     00C5 2142                      1- 1544     	MOVIA	0x42
     00C6 04rr                      1- 1545     	SUBAR	_R_AIN3_DATA,W
     00C7                           1- 1546     _00955_DS_:
     00C7 0803                      1- 1547     	BTRSS	STATUS,0
                                    1- 1548     	MGOTO	_00863_DS_
     00C8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1549     ;;unsigned compare: left < lit (0x4=4), size=1
     00C9 2104                      1- 1550     	MOVIA	0x04
                                    1- 1551     	BANKSEL	_workStep
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 04rr                      1- 1552     	SUBAR	_workStep,W
     00CC 0C03                      1- 1553     	BTRSC	STATUS,0
                                    1- 1554     	MGOTO	_00863_DS_
     00CD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1555     	.line	957, "main.c"; 	if(workStep == 1)
     00CE 01rr                      1- 1556     	MOVR	_workStep,W
     00CF 2401                      1- 1557     	XORIA	0x01
     00D0 0903                      1- 1558     	BTRSS	STATUS,2
                                    1- 1559     	MGOTO	_00858_DS_
     00D1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1560     	.line	959, "main.c"; 	tempDuty = 79;
     00D2 214F                      1- 1561     	MOVIA	0x4f
                                    1- 1562     	BANKSEL	_tempDuty
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 00rr                      1- 1563     	MOVAR	_tempDuty
                                    1- 1564     	MGOTO	_00859_DS_
     00D5 3rrr                      3-   63 m1      LGOTO rom_address
     00D6                           1- 1565     _00858_DS_:
                                    1- 1566     	.line	961, "main.c"; 	else if(workStep == 2)
                                    1- 1567     	BANKSEL	_workStep
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 01rr                      1- 1568     	MOVR	_workStep,W
     00D8 2402                      1- 1569     	XORIA	0x02
     00D9 0903                      1- 1570     	BTRSS	STATUS,2
                                    1- 1571     	MGOTO	_00855_DS_
     00DA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1572     	.line	963, "main.c"; 	tempDuty = 82;
     00DB 2152                      1- 1573     	MOVIA	0x52
                                    1- 1574     	BANKSEL	_tempDuty
     00DC rrrr                      3-  110 m1      .banksel ram_address
     00DD 00rr                      1- 1575     	MOVAR	_tempDuty
                                    1- 1576     	MGOTO	_00859_DS_
     00DE 3rrr                      3-   63 m1      LGOTO rom_address
     00DF                           1- 1577     _00855_DS_:
                                    1- 1578     	.line	965, "main.c"; 	else if(workStep == 3)
                                    1- 1579     	BANKSEL	_workStep
     00DF rrrr                      3-  110 m1      .banksel ram_address
     00E0 01rr                      1- 1580     	MOVR	_workStep,W
     00E1 2403                      1- 1581     	XORIA	0x03
     00E2 0903                      1- 1582     	BTRSS	STATUS,2
                                    1- 1583     	MGOTO	_00859_DS_
     00E3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1584     	.line	967, "main.c"; 	tempDuty = 85;
     00E4 2155                      1- 1585     	MOVIA	0x55
                                    1- 1586     	BANKSEL	_tempDuty
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 00rr                      1- 1587     	MOVAR	_tempDuty
     00E7                           1- 1588     _00859_DS_:
                                    1- 1589     	.line	969, "main.c"; 	PWM2DUTY = tempDuty;
                                    1- 1590     	BANKSEL	_tempDuty
     00E7 rrrr                      3-  110 m1      .banksel ram_address
     00E8 01rr                      1- 1591     	MOVR	_tempDuty,W
     00E9 00rr                      1- 1592     	SFUN	_PWM2DUTY
                                    1- 1593     	MGOTO	_00864_DS_
     00EA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1594     ;;unsigned compare: left < lit (0x2D=45), size=2
     00EB                           1- 1595     _00863_DS_:
                                    1- 1596     	.line	971, "main.c"; 	else if(R_AIN3_DATA < 45)
     00EB 2100                      1- 1597     	MOVIA	0x00
                                    1- 1598     	BANKSEL	_R_AIN3_DATA
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 04rr                      1- 1599     	SUBAR	(_R_AIN3_DATA + 1),W
     00EE 0903                      1- 1600     	BTRSS	STATUS,2
                                    1- 1601     	MGOTO	_00957_DS_
     00EF 3rrr                      3-   63 m1      LGOTO rom_address
     00F0 212D                      1- 1602     	MOVIA	0x2d
     00F1 04rr                      1- 1603     	SUBAR	_R_AIN3_DATA,W
     00F2                           1- 1604     _00957_DS_:
     00F2 0C03                      1- 1605     	BTRSC	STATUS,0
                                    1- 1606     	MGOTO	_00864_DS_
     00F3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1607     	.line	973, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 1608     	BANKSEL	_maxDuty
     00F4 rrrr                      3-  110 m1      .banksel ram_address
     00F5 01rr                      1- 1609     	MOVR	_maxDuty,W
     00F6 00rr                      1- 1610     	SFUN	_PWM2DUTY
     00F7                           1- 1611     _00864_DS_:
                                    1- 1612     	.line	975, "main.c"; 	if(workStep > 0)
                                    1- 1613     	BANKSEL	_workStep
     00F7 rrrr                      3-  110 m1      .banksel ram_address
     00F8 01rr                      1- 1614     	MOVR	_workStep,W
     00F9 0D03                      1- 1615     	BTRSC	STATUS,2
                                    1- 1616     	MGOTO	_00878_DS_
     00FA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1617     	.line	976, "main.c"; 	ledStep = workStep;
     00FB 01rr                      1- 1618     	MOVR	_workStep,W
                                    1- 1619     	BANKSEL	_ledStep
     00FC rrrr                      3-  110 m1      .banksel ram_address
     00FD 00rr                      1- 1620     	MOVAR	_ledStep
     00FE                           1- 1621     _00878_DS_:
                                    1- 1622     	.line	980, "main.c"; 	}
                                    1- 1623     	RETURN	
     00FE 0010                      3-   40 m1      ret
                                    1- 1624     ; exit point of _checkOutA
                                    1- 1626     ;***
                                    1- 1627     ;  pBlock Stats: dbName = C
                                    1- 1628     ;***
                                    1- 1629     ;has an exit
                                    1- 1630     ;functions called:
                                    1- 1631     ;   _F_AIN4_Convert
                                    1- 1632     ;   _F_AIN4_Convert
                                    1- 1633     ;4 compiler assigned registers:
                                    1- 1634     ;   r0x1047
                                    1- 1635     ;   r0x1048
                                    1- 1636     ;   r0x1049
                                    1- 1637     ;   r0x104A
                                    1- 1638     ;; Starting pCode block
                                    1- 1639     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1641     _checkBatAD:
                                    1- 1642     ; 2 exit points
                                    1- 1643     	.line	689, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1644     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1645     	CLRR	_R_AIN4_DATA_LB
                                    1- 1646     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1647     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1648     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1649     	.line	690, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1650     	MOVIA	0x08
                                    1- 1651     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1652     	.line	691, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1653     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1654     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1655     	ANDIA	0xf0
     000A 00rr                      1- 1656     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1657     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1658     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1659     	ANDIA	0x0f
     000E 11rr                      1- 1660     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1661     	XORAR	_R_AIN4_DATA,F
                                    1- 1662     	.line	692, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1663     	MOVIA	0xf0
                                    1- 1664     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1665     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1666     	.line	693, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1667     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1668     	BANKSEL	r0x1049
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1669     	MOVAR	r0x1049
                                    1- 1670     ;;1	MOVAR	r0x1047
                                    1- 1671     ;;1	CLRR	r0x1048
                                    1- 1672     ;;99	MOVR	r0x1047,W
     0016 2100                      1- 1673     	MOVIA	0x00
                                    1- 1674     	BANKSEL	r0x104A
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1675     	MOVAR	r0x104A
                                    1- 1676     	BANKSEL	r0x1049
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1677     	MOVR	r0x1049,W
                                    1- 1678     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1679     	ADDAR	_R_AIN4_DATA,F
                                    1- 1680     	BANKSEL	r0x104A
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1681     	MOVR	r0x104A,W
     001F 0C03                      1- 1682     	BTRSC	STATUS,0
     0020 05rr                      1- 1683     	INCR	r0x104A,W
     0021 0D03                      1- 1684     	BTRSC	STATUS,2
                                    1- 1685     	MGOTO	_00005_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1686     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1687     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1688     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1689     _00005_DS_:
                                    1- 1690     	.line	694, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1691     	BCR	STATUS,0
                                    1- 1692     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1693     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1694     	RRR	_R_AIN4_DATA,F
                                    1- 1695     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1696     	BCR	STATUS,0
     002A 13rr                      1- 1697     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1698     	RRR	_R_AIN4_DATA,F
                                    1- 1699     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1700     	BCR	STATUS,0
     002D 13rr                      1- 1701     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1702     	RRR	_R_AIN4_DATA,F
                                    1- 1703     	.line	695, "main.c"; 	if(debug)
                                    1- 1704     	BANKSEL	_debug
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1705     	MOVR	_debug,W
     0031 0D03                      1- 1706     	BTRSC	STATUS,2
                                    1- 1707     	MGOTO	_00508_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1708     	.line	696, "main.c"; 	R_AIN4_DATA = BATTLE;
     0033 210E                      1- 1709     	MOVIA	0x0e
                                    1- 1710     	BANKSEL	_R_AIN4_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1711     	MOVAR	_R_AIN4_DATA
     0036 2106                      1- 1712     	MOVIA	0x06
     0037 00rr                      1- 1713     	MOVAR	(_R_AIN4_DATA + 1)
                                    1- 1714     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1715     ;;unsigned compare: left >= lit (0x60F=1551), size=2
     0038                           1- 1716     _00508_DS_:
                                    1- 1717     	.line	698, "main.c"; 	if(R_AIN4_DATA > 1550)
     0038 2106                      1- 1718     	MOVIA	0x06
                                    1- 1719     	BANKSEL	_R_AIN4_DATA
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1720     	SUBAR	(_R_AIN4_DATA + 1),W
     003B 0903                      1- 1721     	BTRSS	STATUS,2
                                    1- 1722     	MGOTO	_00779_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 210F                      1- 1723     	MOVIA	0x0f
     003E 04rr                      1- 1724     	SUBAR	_R_AIN4_DATA,W
     003F                           1- 1725     _00779_DS_:
     003F 0803                      1- 1726     	BTRSS	STATUS,0
                                    1- 1727     	MGOTO	_00520_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1728     	.line	701, "main.c"; 	lowCount = 0;
                                    1- 1729     	BANKSEL	_lowCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 1730     	CLRR	_lowCount
                                    1- 1731     	MGOTO	_00521_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1732     ;;unsigned compare: left < lit (0x46F=1135), size=2
     0044                           1- 1733     _00520_DS_:
                                    1- 1734     	.line	703, "main.c"; 	else if(R_AIN4_DATA < 1135)
     0044 2104                      1- 1735     	MOVIA	0x04
                                    1- 1736     	BANKSEL	_R_AIN4_DATA
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 04rr                      1- 1737     	SUBAR	(_R_AIN4_DATA + 1),W
     0047 0903                      1- 1738     	BTRSS	STATUS,2
                                    1- 1739     	MGOTO	_00780_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 216F                      1- 1740     	MOVIA	0x6f
     004A 04rr                      1- 1741     	SUBAR	_R_AIN4_DATA,W
     004B                           1- 1742     _00780_DS_:
     004B 0C03                      1- 1743     	BTRSC	STATUS,0
                                    1- 1744     	MGOTO	_00517_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1745     	.line	705, "main.c"; 	if(++lowCount < 10)
                                    1- 1746     	BANKSEL	_lowCount
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 05rr                      1- 1747     	INCR	_lowCount,F
                                    1- 1748     ;;unsigned compare: left < lit (0xA=10), size=1
     004F 210A                      1- 1749     	MOVIA	0x0a
     0050 04rr                      1- 1750     	SUBAR	_lowCount,W
     0051 0803                      1- 1751     	BTRSS	STATUS,0
                                    1- 1752     	.line	706, "main.c"; 	return;
                                    1- 1753     	MGOTO	_00624_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1754     	.line	707, "main.c"; 	lowCount = 10;
     0053 210A                      1- 1755     	MOVIA	0x0a
     0054 00rr                      1- 1756     	MOVAR	_lowCount
                                    1- 1757     	.line	708, "main.c"; 	pwStep = 0;
                                    1- 1758     	BANKSEL	_pwStep
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 02rr                      1- 1759     	CLRR	_pwStep
                                    1- 1760     	.line	709, "main.c"; 	R_AIN4_DATA = 1105;
     0057 2151                      1- 1761     	MOVIA	0x51
                                    1- 1762     	BANKSEL	_R_AIN4_DATA
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 00rr                      1- 1763     	MOVAR	_R_AIN4_DATA
     005A 2104                      1- 1764     	MOVIA	0x04
     005B 00rr                      1- 1765     	MOVAR	(_R_AIN4_DATA + 1)
                                    1- 1766     	.line	711, "main.c"; 	if(workStep > 0 && ++firstTime == 10)
                                    1- 1767     	BANKSEL	_workStep
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 01rr                      1- 1768     	MOVR	_workStep,W
     005E 0D03                      1- 1769     	BTRSC	STATUS,2
                                    1- 1770     	MGOTO	_00512_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1771     	BANKSEL	_firstTime
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 05rr                      1- 1772     	INCR	_firstTime,F
     0062 01rr                      1- 1773     	MOVR	_firstTime,W
     0063 240A                      1- 1774     	XORIA	0x0a
     0064 0903                      1- 1775     	BTRSS	STATUS,2
                                    1- 1776     	MGOTO	_00512_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1777     	.line	713, "main.c"; 	shanshuoTime = 16;
     0066 2110                      1- 1778     	MOVIA	0x10
                                    1- 1779     	BANKSEL	_shanshuoTime
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 00rr                      1- 1780     	MOVAR	_shanshuoTime
                                    1- 1781     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1782     ;;unsigned compare: left >= lit (0xC=12), size=1
     0069                           1- 1783     _00512_DS_:
                                    1- 1784     	.line	716, "main.c"; 	if(firstTime > 11)
     0069 210C                      1- 1785     	MOVIA	0x0c
                                    1- 1786     	BANKSEL	_firstTime
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 04rr                      1- 1787     	SUBAR	_firstTime,W
     006C 0803                      1- 1788     	BTRSS	STATUS,0
                                    1- 1789     	MGOTO	_00521_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1790     	.line	717, "main.c"; 	firstTime = 11;
     006E 210B                      1- 1791     	MOVIA	0x0b
     006F 00rr                      1- 1792     	MOVAR	_firstTime
                                    1- 1793     	MGOTO	_00521_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
     0071                           1- 1794     _00517_DS_:
                                    1- 1795     	.line	721, "main.c"; 	lowCount = 0;
                                    1- 1796     	BANKSEL	_lowCount
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 02rr                      1- 1797     	CLRR	_lowCount
                                    1- 1798     	.line	722, "main.c"; 	firstTime = 0;
                                    1- 1799     	BANKSEL	_firstTime
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 02rr                      1- 1800     	CLRR	_firstTime
     0075                           1- 1801     _00521_DS_:
                                    1- 1802     	.line	724, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA - 1135;
     0075 2191                      1- 1803     	MOVIA	0x91
                                    1- 1804     	BANKSEL	_R_AIN4_DATA
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 03rr                      1- 1805     	ADDAR	_R_AIN4_DATA,F
     0078 21FB                      1- 1806     	MOVIA	0xfb
     0079 0C03                      1- 1807     	BTRSC	STATUS,0
     007A 21FC                      1- 1808     	MOVIA	0xfc
     007B 03rr                      1- 1809     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1810     ;;unsigned compare: left < lit (0x1A4=420), size=2
                                    1- 1811     	.line	725, "main.c"; 	if(R_AIN4_DATA >= 420)
     007C 2101                      1- 1812     	MOVIA	0x01
     007D 04rr                      1- 1813     	SUBAR	(_R_AIN4_DATA + 1),W
     007E 0903                      1- 1814     	BTRSS	STATUS,2
                                    1- 1815     	MGOTO	_00783_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
     0080 21A4                      1- 1816     	MOVIA	0xa4
     0081 04rr                      1- 1817     	SUBAR	_R_AIN4_DATA,W
     0082                           1- 1818     _00783_DS_:
     0082 0803                      1- 1819     	BTRSS	STATUS,0
                                    1- 1820     	MGOTO	_00620_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1821     	.line	727, "main.c"; 	pwStep = 10;
     0084 210A                      1- 1822     	MOVIA	0x0a
                                    1- 1823     	BANKSEL	_pwStep
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 00rr                      1- 1824     	MOVAR	_pwStep
                                    1- 1825     	MGOTO	_00621_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1826     ;;unsigned compare: left < lit (0x19A=410), size=2
     0088                           1- 1827     _00620_DS_:
                                    1- 1828     	.line	729, "main.c"; 	else if(R_AIN4_DATA >= 410)
     0088 2101                      1- 1829     	MOVIA	0x01
                                    1- 1830     	BANKSEL	_R_AIN4_DATA
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 04rr                      1- 1831     	SUBAR	(_R_AIN4_DATA + 1),W
     008B 0903                      1- 1832     	BTRSS	STATUS,2
                                    1- 1833     	MGOTO	_00784_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
     008D 219A                      1- 1834     	MOVIA	0x9a
     008E 04rr                      1- 1835     	SUBAR	_R_AIN4_DATA,W
     008F                           1- 1836     _00784_DS_:
     008F 0803                      1- 1837     	BTRSS	STATUS,0
                                    1- 1838     	MGOTO	_00617_DS_
     0090 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1839     	.line	731, "main.c"; 	pwStep = 9;
     0091 2109                      1- 1840     	MOVIA	0x09
                                    1- 1841     	BANKSEL	_pwStep
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 00rr                      1- 1842     	MOVAR	_pwStep
                                    1- 1843     	MGOTO	_00621_DS_
     0094 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1844     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1845     ;;unsigned compare: left >= lit (0x18C=396), size=2
     0095                           1- 1846     _00617_DS_:
                                    1- 1847     	.line	733, "main.c"; 	else if(R_AIN4_DATA > 395)
     0095 2101                      1- 1848     	MOVIA	0x01
                                    1- 1849     	BANKSEL	_R_AIN4_DATA
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 04rr                      1- 1850     	SUBAR	(_R_AIN4_DATA + 1),W
     0098 0903                      1- 1851     	BTRSS	STATUS,2
                                    1- 1852     	MGOTO	_00785_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
     009A 218C                      1- 1853     	MOVIA	0x8c
     009B 04rr                      1- 1854     	SUBAR	_R_AIN4_DATA,W
     009C                           1- 1855     _00785_DS_:
     009C 0803                      1- 1856     	BTRSS	STATUS,0
                                    1- 1857     	MGOTO	_00614_DS_
     009D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1858     	.line	735, "main.c"; 	fullCount = 0;
                                    1- 1859     	BANKSEL	_fullCount
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 02rr                      1- 1860     	CLRR	_fullCount
                                    1- 1861     ;;unsigned compare: left < lit (0x8=8), size=1
                                    1- 1862     	.line	736, "main.c"; 	if(pwStep < 8)
     00A0 2108                      1- 1863     	MOVIA	0x08
                                    1- 1864     	BANKSEL	_pwStep
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 04rr                      1- 1865     	SUBAR	_pwStep,W
     00A3 0C03                      1- 1866     	BTRSC	STATUS,0
                                    1- 1867     	MGOTO	_00528_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1868     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1869     ;;unsigned compare: left >= lit (0x191=401), size=2
                                    1- 1870     	.line	738, "main.c"; 	if(R_AIN4_DATA > 400)
     00A5 2101                      1- 1871     	MOVIA	0x01
                                    1- 1872     	BANKSEL	_R_AIN4_DATA
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 04rr                      1- 1873     	SUBAR	(_R_AIN4_DATA + 1),W
     00A8 0903                      1- 1874     	BTRSS	STATUS,2
                                    1- 1875     	MGOTO	_00787_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
     00AA 2191                      1- 1876     	MOVIA	0x91
     00AB 04rr                      1- 1877     	SUBAR	_R_AIN4_DATA,W
     00AC                           1- 1878     _00787_DS_:
     00AC 0803                      1- 1879     	BTRSS	STATUS,0
                                    1- 1880     	MGOTO	_00529_DS_
     00AD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1881     	.line	739, "main.c"; 	pwStep = 8;
     00AE 2108                      1- 1882     	MOVIA	0x08
                                    1- 1883     	BANKSEL	_pwStep
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 00rr                      1- 1884     	MOVAR	_pwStep
                                    1- 1885     	MGOTO	_00529_DS_
     00B1 3rrr                      3-   63 m1      LGOTO rom_address
     00B2                           1- 1886     _00528_DS_:
                                    1- 1887     	.line	741, "main.c"; 	else if(chrgTime == 0 && R_AIN4_DATA < 405)
                                    1- 1888     	BANKSEL	_chrgTime
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 01rr                      1- 1889     	MOVR	_chrgTime,W
     00B4 11rr                      1- 1890     	IORAR	(_chrgTime + 1),W
     00B5 0903                      1- 1891     	BTRSS	STATUS,2
                                    1- 1892     	MGOTO	_00529_DS_
     00B6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1893     ;;unsigned compare: left < lit (0x195=405), size=2
     00B7 2101                      1- 1894     	MOVIA	0x01
                                    1- 1895     	BANKSEL	_R_AIN4_DATA
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 04rr                      1- 1896     	SUBAR	(_R_AIN4_DATA + 1),W
     00BA 0903                      1- 1897     	BTRSS	STATUS,2
                                    1- 1898     	MGOTO	_00788_DS_
     00BB 3rrr                      3-   63 m1      LGOTO rom_address
     00BC 2195                      1- 1899     	MOVIA	0x95
     00BD 04rr                      1- 1900     	SUBAR	_R_AIN4_DATA,W
     00BE                           1- 1901     _00788_DS_:
     00BE 0C03                      1- 1902     	BTRSC	STATUS,0
                                    1- 1903     	MGOTO	_00529_DS_
     00BF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1904     	.line	743, "main.c"; 	pwStep = 8;
     00C0 2108                      1- 1905     	MOVIA	0x08
                                    1- 1906     	BANKSEL	_pwStep
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 00rr                      1- 1907     	MOVAR	_pwStep
     00C3                           1- 1908     _00529_DS_:
                                    1- 1909     	.line	747, "main.c"; 	if(chrgTime > 0 && R_AIN4_DATA > 406 && chrgTime > 600)
                                    1- 1910     	BANKSEL	_chrgTime
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 01rr                      1- 1911     	MOVR	_chrgTime,W
     00C5 11rr                      1- 1912     	IORAR	(_chrgTime + 1),W
     00C6 0D03                      1- 1913     	BTRSC	STATUS,2
                                    1- 1914     	MGOTO	_00621_DS_
     00C7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1915     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1916     ;;unsigned compare: left >= lit (0x197=407), size=2
     00C8 2101                      1- 1917     	MOVIA	0x01
                                    1- 1918     	BANKSEL	_R_AIN4_DATA
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 04rr                      1- 1919     	SUBAR	(_R_AIN4_DATA + 1),W
     00CB 0903                      1- 1920     	BTRSS	STATUS,2
                                    1- 1921     	MGOTO	_00789_DS_
     00CC 3rrr                      3-   63 m1      LGOTO rom_address
     00CD 2197                      1- 1922     	MOVIA	0x97
     00CE 04rr                      1- 1923     	SUBAR	_R_AIN4_DATA,W
     00CF                           1- 1924     _00789_DS_:
     00CF 0803                      1- 1925     	BTRSS	STATUS,0
                                    1- 1926     	MGOTO	_00621_DS_
     00D0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1927     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1928     ;;unsigned compare: left >= lit (0x259=601), size=2
     00D1 2102                      1- 1929     	MOVIA	0x02
                                    1- 1930     	BANKSEL	_chrgTime
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 04rr                      1- 1931     	SUBAR	(_chrgTime + 1),W
     00D4 0903                      1- 1932     	BTRSS	STATUS,2
                                    1- 1933     	MGOTO	_00790_DS_
     00D5 3rrr                      3-   63 m1      LGOTO rom_address
     00D6 2159                      1- 1934     	MOVIA	0x59
     00D7 04rr                      1- 1935     	SUBAR	_chrgTime,W
     00D8                           1- 1936     _00790_DS_:
     00D8 0803                      1- 1937     	BTRSS	STATUS,0
                                    1- 1938     	MGOTO	_00621_DS_
     00D9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1939     	.line	749, "main.c"; 	chrgTime = 600;
     00DA 2158                      1- 1940     	MOVIA	0x58
                                    1- 1941     	BANKSEL	_chrgTime
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 00rr                      1- 1942     	MOVAR	_chrgTime
     00DD 2102                      1- 1943     	MOVIA	0x02
     00DE 00rr                      1- 1944     	MOVAR	(_chrgTime + 1)
                                    1- 1945     	.line	750, "main.c"; 	pwStep = 9;
     00DF 2109                      1- 1946     	MOVIA	0x09
                                    1- 1947     	BANKSEL	_pwStep
     00E0 rrrr                      3-  110 m1      .banksel ram_address
     00E1 00rr                      1- 1948     	MOVAR	_pwStep
                                    1- 1949     	MGOTO	_00621_DS_
     00E2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1950     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1951     ;;unsigned compare: left >= lit (0x17D=381), size=2
     00E3                           1- 1952     _00614_DS_:
                                    1- 1953     	.line	753, "main.c"; 	else if(R_AIN4_DATA > 380)
     00E3 2101                      1- 1954     	MOVIA	0x01
                                    1- 1955     	BANKSEL	_R_AIN4_DATA
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 04rr                      1- 1956     	SUBAR	(_R_AIN4_DATA + 1),W
     00E6 0903                      1- 1957     	BTRSS	STATUS,2
                                    1- 1958     	MGOTO	_00791_DS_
     00E7 3rrr                      3-   63 m1      LGOTO rom_address
     00E8 217D                      1- 1959     	MOVIA	0x7d
     00E9 04rr                      1- 1960     	SUBAR	_R_AIN4_DATA,W
     00EA                           1- 1961     _00791_DS_:
     00EA 0803                      1- 1962     	BTRSS	STATUS,0
                                    1- 1963     	MGOTO	_00611_DS_
     00EB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1964     	.line	756, "main.c"; 	if(pwStep == 6)
                                    1- 1965     	BANKSEL	_pwStep
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 01rr                      1- 1966     	MOVR	_pwStep,W
     00EE 2406                      1- 1967     	XORIA	0x06
     00EF 0903                      1- 1968     	BTRSS	STATUS,2
                                    1- 1969     	MGOTO	_00537_DS_
     00F0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1970     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1971     ;;unsigned compare: left >= lit (0x182=386), size=2
                                    1- 1972     	.line	758, "main.c"; 	if(R_AIN4_DATA > 385)
     00F1 2101                      1- 1973     	MOVIA	0x01
                                    1- 1974     	BANKSEL	_R_AIN4_DATA
     00F2 rrrr                      3-  110 m1      .banksel ram_address
     00F3 04rr                      1- 1975     	SUBAR	(_R_AIN4_DATA + 1),W
     00F4 0903                      1- 1976     	BTRSS	STATUS,2
                                    1- 1977     	MGOTO	_00792_DS_
     00F5 3rrr                      3-   63 m1      LGOTO rom_address
     00F6 2182                      1- 1978     	MOVIA	0x82
     00F7 04rr                      1- 1979     	SUBAR	_R_AIN4_DATA,W
     00F8                           1- 1980     _00792_DS_:
     00F8 0803                      1- 1981     	BTRSS	STATUS,0
                                    1- 1982     	MGOTO	_00537_DS_
     00F9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1983     	.line	759, "main.c"; 	pwStep = 7;
     00FA 2107                      1- 1984     	MOVIA	0x07
                                    1- 1985     	BANKSEL	_pwStep
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 00rr                      1- 1986     	MOVAR	_pwStep
                                    1- 1987     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1988     ;;unsigned compare: left >= lit (0x8=8), size=1
     00FD                           1- 1989     _00537_DS_:
                                    1- 1990     	.line	761, "main.c"; 	if(pwStep > 7)
     00FD 2108                      1- 1991     	MOVIA	0x08
                                    1- 1992     	BANKSEL	_pwStep
     00FE rrrr                      3-  110 m1      .banksel ram_address
     00FF 04rr                      1- 1993     	SUBAR	_pwStep,W
     0100 0803                      1- 1994     	BTRSS	STATUS,0
                                    1- 1995     	MGOTO	_00541_DS_
     0101 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1996     ;;unsigned compare: left < lit (0x186=390), size=2
                                    1- 1997     	.line	763, "main.c"; 	if(R_AIN4_DATA < 390)
     0102 2101                      1- 1998     	MOVIA	0x01
                                    1- 1999     	BANKSEL	_R_AIN4_DATA
     0103 rrrr                      3-  110 m1      .banksel ram_address
     0104 04rr                      1- 2000     	SUBAR	(_R_AIN4_DATA + 1),W
     0105 0903                      1- 2001     	BTRSS	STATUS,2
                                    1- 2002     	MGOTO	_00794_DS_
     0106 3rrr                      3-   63 m1      LGOTO rom_address
     0107 2186                      1- 2003     	MOVIA	0x86
     0108 04rr                      1- 2004     	SUBAR	_R_AIN4_DATA,W
     0109                           1- 2005     _00794_DS_:
     0109 0C03                      1- 2006     	BTRSC	STATUS,0
                                    1- 2007     	MGOTO	_00542_DS_
     010A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2008     	.line	764, "main.c"; 	pwStep = 7;
     010B 2107                      1- 2009     	MOVIA	0x07
                                    1- 2010     	BANKSEL	_pwStep
     010C rrrr                      3-  110 m1      .banksel ram_address
     010D 00rr                      1- 2011     	MOVAR	_pwStep
                                    1- 2012     	MGOTO	_00542_DS_
     010E 3rrr                      3-   63 m1      LGOTO rom_address
     010F                           1- 2013     _00541_DS_:
                                    1- 2014     	.line	767, "main.c"; 	pwStep = 7;
     010F 2107                      1- 2015     	MOVIA	0x07
                                    1- 2016     	BANKSEL	_pwStep
     0110 rrrr                      3-  110 m1      .banksel ram_address
     0111 00rr                      1- 2017     	MOVAR	_pwStep
     0112                           1- 2018     _00542_DS_:
                                    1- 2019     	.line	768, "main.c"; 	chrgTime = 0;
                                    1- 2020     	BANKSEL	_chrgTime
     0112 rrrr                      3-  110 m1      .banksel ram_address
     0113 02rr                      1- 2021     	CLRR	_chrgTime
     0114 02rr                      1- 2022     	CLRR	(_chrgTime + 1)
                                    1- 2023     	MGOTO	_00621_DS_
     0115 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2024     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2025     ;;unsigned compare: left >= lit (0x15A=346), size=2
     0116                           1- 2026     _00611_DS_:
                                    1- 2027     	.line	770, "main.c"; 	else if(R_AIN4_DATA > 345)
     0116 2101                      1- 2028     	MOVIA	0x01
                                    1- 2029     	BANKSEL	_R_AIN4_DATA
     0117 rrrr                      3-  110 m1      .banksel ram_address
     0118 04rr                      1- 2030     	SUBAR	(_R_AIN4_DATA + 1),W
     0119 0903                      1- 2031     	BTRSS	STATUS,2
                                    1- 2032     	MGOTO	_00795_DS_
     011A 3rrr                      3-   63 m1      LGOTO rom_address
     011B 215A                      1- 2033     	MOVIA	0x5a
     011C 04rr                      1- 2034     	SUBAR	_R_AIN4_DATA,W
     011D                           1- 2035     _00795_DS_:
     011D 0803                      1- 2036     	BTRSS	STATUS,0
                                    1- 2037     	MGOTO	_00608_DS_
     011E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2038     	.line	773, "main.c"; 	if(pwStep == 5)
                                    1- 2039     	BANKSEL	_pwStep
     011F rrrr                      3-  110 m1      .banksel ram_address
     0120 01rr                      1- 2040     	MOVR	_pwStep,W
     0121 2405                      1- 2041     	XORIA	0x05
     0122 0903                      1- 2042     	BTRSS	STATUS,2
                                    1- 2043     	MGOTO	_00546_DS_
     0123 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2044     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2045     ;;unsigned compare: left >= lit (0x15F=351), size=2
                                    1- 2046     	.line	775, "main.c"; 	if(R_AIN4_DATA > 350)
     0124 2101                      1- 2047     	MOVIA	0x01
                                    1- 2048     	BANKSEL	_R_AIN4_DATA
     0125 rrrr                      3-  110 m1      .banksel ram_address
     0126 04rr                      1- 2049     	SUBAR	(_R_AIN4_DATA + 1),W
     0127 0903                      1- 2050     	BTRSS	STATUS,2
                                    1- 2051     	MGOTO	_00796_DS_
     0128 3rrr                      3-   63 m1      LGOTO rom_address
     0129 215F                      1- 2052     	MOVIA	0x5f
     012A 04rr                      1- 2053     	SUBAR	_R_AIN4_DATA,W
     012B                           1- 2054     _00796_DS_:
     012B 0803                      1- 2055     	BTRSS	STATUS,0
                                    1- 2056     	MGOTO	_00546_DS_
     012C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2057     	.line	776, "main.c"; 	pwStep = 6;
     012D 2106                      1- 2058     	MOVIA	0x06
                                    1- 2059     	BANKSEL	_pwStep
     012E rrrr                      3-  110 m1      .banksel ram_address
     012F 00rr                      1- 2060     	MOVAR	_pwStep
                                    1- 2061     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2062     ;;unsigned compare: left >= lit (0x7=7), size=1
     0130                           1- 2063     _00546_DS_:
                                    1- 2064     	.line	778, "main.c"; 	if(pwStep > 6)
     0130 2107                      1- 2065     	MOVIA	0x07
                                    1- 2066     	BANKSEL	_pwStep
     0131 rrrr                      3-  110 m1      .banksel ram_address
     0132 04rr                      1- 2067     	SUBAR	_pwStep,W
     0133 0803                      1- 2068     	BTRSS	STATUS,0
                                    1- 2069     	MGOTO	_00550_DS_
     0134 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2070     ;;unsigned compare: left < lit (0x177=375), size=2
                                    1- 2071     	.line	780, "main.c"; 	if(R_AIN4_DATA < 375)
     0135 2101                      1- 2072     	MOVIA	0x01
                                    1- 2073     	BANKSEL	_R_AIN4_DATA
     0136 rrrr                      3-  110 m1      .banksel ram_address
     0137 04rr                      1- 2074     	SUBAR	(_R_AIN4_DATA + 1),W
     0138 0903                      1- 2075     	BTRSS	STATUS,2
                                    1- 2076     	MGOTO	_00798_DS_
     0139 3rrr                      3-   63 m1      LGOTO rom_address
     013A 2177                      1- 2077     	MOVIA	0x77
     013B 04rr                      1- 2078     	SUBAR	_R_AIN4_DATA,W
     013C                           1- 2079     _00798_DS_:
     013C 0C03                      1- 2080     	BTRSC	STATUS,0
                                    1- 2081     	MGOTO	_00551_DS_
     013D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2082     	.line	781, "main.c"; 	pwStep = 6;
     013E 2106                      1- 2083     	MOVIA	0x06
                                    1- 2084     	BANKSEL	_pwStep
     013F rrrr                      3-  110 m1      .banksel ram_address
     0140 00rr                      1- 2085     	MOVAR	_pwStep
                                    1- 2086     	MGOTO	_00551_DS_
     0141 3rrr                      3-   63 m1      LGOTO rom_address
     0142                           1- 2087     _00550_DS_:
                                    1- 2088     	.line	784, "main.c"; 	pwStep = 6;
     0142 2106                      1- 2089     	MOVIA	0x06
                                    1- 2090     	BANKSEL	_pwStep
     0143 rrrr                      3-  110 m1      .banksel ram_address
     0144 00rr                      1- 2091     	MOVAR	_pwStep
     0145                           1- 2092     _00551_DS_:
                                    1- 2093     	.line	785, "main.c"; 	chrgTime = 0;
                                    1- 2094     	BANKSEL	_chrgTime
     0145 rrrr                      3-  110 m1      .banksel ram_address
     0146 02rr                      1- 2095     	CLRR	_chrgTime
     0147 02rr                      1- 2096     	CLRR	(_chrgTime + 1)
                                    1- 2097     	MGOTO	_00621_DS_
     0148 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2098     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2099     ;;unsigned compare: left >= lit (0x132=306), size=2
     0149                           1- 2100     _00608_DS_:
                                    1- 2101     	.line	787, "main.c"; 	else if(R_AIN4_DATA > 305)
     0149 2101                      1- 2102     	MOVIA	0x01
                                    1- 2103     	BANKSEL	_R_AIN4_DATA
     014A rrrr                      3-  110 m1      .banksel ram_address
     014B 04rr                      1- 2104     	SUBAR	(_R_AIN4_DATA + 1),W
     014C 0903                      1- 2105     	BTRSS	STATUS,2
                                    1- 2106     	MGOTO	_00799_DS_
     014D 3rrr                      3-   63 m1      LGOTO rom_address
     014E 2132                      1- 2107     	MOVIA	0x32
     014F 04rr                      1- 2108     	SUBAR	_R_AIN4_DATA,W
     0150                           1- 2109     _00799_DS_:
     0150 0803                      1- 2110     	BTRSS	STATUS,0
                                    1- 2111     	MGOTO	_00605_DS_
     0151 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2112     	.line	790, "main.c"; 	if(pwStep == 4)
                                    1- 2113     	BANKSEL	_pwStep
     0152 rrrr                      3-  110 m1      .banksel ram_address
     0153 01rr                      1- 2114     	MOVR	_pwStep,W
     0154 2404                      1- 2115     	XORIA	0x04
     0155 0903                      1- 2116     	BTRSS	STATUS,2
                                    1- 2117     	MGOTO	_00555_DS_
     0156 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2118     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2119     ;;unsigned compare: left >= lit (0x137=311), size=2
                                    1- 2120     	.line	792, "main.c"; 	if(R_AIN4_DATA > 310)
     0157 2101                      1- 2121     	MOVIA	0x01
                                    1- 2122     	BANKSEL	_R_AIN4_DATA
     0158 rrrr                      3-  110 m1      .banksel ram_address
     0159 04rr                      1- 2123     	SUBAR	(_R_AIN4_DATA + 1),W
     015A 0903                      1- 2124     	BTRSS	STATUS,2
                                    1- 2125     	MGOTO	_00800_DS_
     015B 3rrr                      3-   63 m1      LGOTO rom_address
     015C 2137                      1- 2126     	MOVIA	0x37
     015D 04rr                      1- 2127     	SUBAR	_R_AIN4_DATA,W
     015E                           1- 2128     _00800_DS_:
     015E 0803                      1- 2129     	BTRSS	STATUS,0
                                    1- 2130     	MGOTO	_00555_DS_
     015F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2131     	.line	793, "main.c"; 	pwStep = 5;
     0160 2105                      1- 2132     	MOVIA	0x05
                                    1- 2133     	BANKSEL	_pwStep
     0161 rrrr                      3-  110 m1      .banksel ram_address
     0162 00rr                      1- 2134     	MOVAR	_pwStep
                                    1- 2135     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2136     ;;unsigned compare: left >= lit (0x6=6), size=1
     0163                           1- 2137     _00555_DS_:
                                    1- 2138     	.line	795, "main.c"; 	if(pwStep > 5)
     0163 2106                      1- 2139     	MOVIA	0x06
                                    1- 2140     	BANKSEL	_pwStep
     0164 rrrr                      3-  110 m1      .banksel ram_address
     0165 04rr                      1- 2141     	SUBAR	_pwStep,W
     0166 0803                      1- 2142     	BTRSS	STATUS,0
                                    1- 2143     	MGOTO	_00559_DS_
     0167 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2144     ;;unsigned compare: left < lit (0x154=340), size=2
                                    1- 2145     	.line	797, "main.c"; 	if(R_AIN4_DATA < 340)
     0168 2101                      1- 2146     	MOVIA	0x01
                                    1- 2147     	BANKSEL	_R_AIN4_DATA
     0169 rrrr                      3-  110 m1      .banksel ram_address
     016A 04rr                      1- 2148     	SUBAR	(_R_AIN4_DATA + 1),W
     016B 0903                      1- 2149     	BTRSS	STATUS,2
                                    1- 2150     	MGOTO	_00802_DS_
     016C 3rrr                      3-   63 m1      LGOTO rom_address
     016D 2154                      1- 2151     	MOVIA	0x54
     016E 04rr                      1- 2152     	SUBAR	_R_AIN4_DATA,W
     016F                           1- 2153     _00802_DS_:
     016F 0C03                      1- 2154     	BTRSC	STATUS,0
                                    1- 2155     	MGOTO	_00560_DS_
     0170 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2156     	.line	798, "main.c"; 	pwStep = 5;
     0171 2105                      1- 2157     	MOVIA	0x05
                                    1- 2158     	BANKSEL	_pwStep
     0172 rrrr                      3-  110 m1      .banksel ram_address
     0173 00rr                      1- 2159     	MOVAR	_pwStep
                                    1- 2160     	MGOTO	_00560_DS_
     0174 3rrr                      3-   63 m1      LGOTO rom_address
     0175                           1- 2161     _00559_DS_:
                                    1- 2162     	.line	801, "main.c"; 	pwStep = 5;
     0175 2105                      1- 2163     	MOVIA	0x05
                                    1- 2164     	BANKSEL	_pwStep
     0176 rrrr                      3-  110 m1      .banksel ram_address
     0177 00rr                      1- 2165     	MOVAR	_pwStep
     0178                           1- 2166     _00560_DS_:
                                    1- 2167     	.line	802, "main.c"; 	chrgTime = 0;
                                    1- 2168     	BANKSEL	_chrgTime
     0178 rrrr                      3-  110 m1      .banksel ram_address
     0179 02rr                      1- 2169     	CLRR	_chrgTime
     017A 02rr                      1- 2170     	CLRR	(_chrgTime + 1)
                                    1- 2171     	MGOTO	_00621_DS_
     017B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2172     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2173     ;;unsigned compare: left >= lit (0xF1=241), size=2
     017C                           1- 2174     _00605_DS_:
                                    1- 2175     	.line	804, "main.c"; 	else if(R_AIN4_DATA > 240)
     017C 2100                      1- 2176     	MOVIA	0x00
                                    1- 2177     	BANKSEL	_R_AIN4_DATA
     017D rrrr                      3-  110 m1      .banksel ram_address
     017E 04rr                      1- 2178     	SUBAR	(_R_AIN4_DATA + 1),W
     017F 0903                      1- 2179     	BTRSS	STATUS,2
                                    1- 2180     	MGOTO	_00803_DS_
     0180 3rrr                      3-   63 m1      LGOTO rom_address
     0181 21F1                      1- 2181     	MOVIA	0xf1
     0182 04rr                      1- 2182     	SUBAR	_R_AIN4_DATA,W
     0183                           1- 2183     _00803_DS_:
     0183 0803                      1- 2184     	BTRSS	STATUS,0
                                    1- 2185     	MGOTO	_00602_DS_
     0184 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2186     	.line	806, "main.c"; 	if(pwStep == 3)
                                    1- 2187     	BANKSEL	_pwStep
     0185 rrrr                      3-  110 m1      .banksel ram_address
     0186 01rr                      1- 2188     	MOVR	_pwStep,W
     0187 2403                      1- 2189     	XORIA	0x03
     0188 0903                      1- 2190     	BTRSS	STATUS,2
                                    1- 2191     	MGOTO	_00564_DS_
     0189 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2192     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2193     ;;unsigned compare: left >= lit (0xF6=246), size=2
                                    1- 2194     	.line	808, "main.c"; 	if(R_AIN4_DATA > 245)
     018A 2100                      1- 2195     	MOVIA	0x00
                                    1- 2196     	BANKSEL	_R_AIN4_DATA
     018B rrrr                      3-  110 m1      .banksel ram_address
     018C 04rr                      1- 2197     	SUBAR	(_R_AIN4_DATA + 1),W
     018D 0903                      1- 2198     	BTRSS	STATUS,2
                                    1- 2199     	MGOTO	_00804_DS_
     018E 3rrr                      3-   63 m1      LGOTO rom_address
     018F 21F6                      1- 2200     	MOVIA	0xf6
     0190 04rr                      1- 2201     	SUBAR	_R_AIN4_DATA,W
     0191                           1- 2202     _00804_DS_:
     0191 0803                      1- 2203     	BTRSS	STATUS,0
                                    1- 2204     	MGOTO	_00564_DS_
     0192 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2205     	.line	809, "main.c"; 	pwStep = 4;
     0193 2104                      1- 2206     	MOVIA	0x04
                                    1- 2207     	BANKSEL	_pwStep
     0194 rrrr                      3-  110 m1      .banksel ram_address
     0195 00rr                      1- 2208     	MOVAR	_pwStep
                                    1- 2209     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2210     ;;unsigned compare: left >= lit (0x5=5), size=1
     0196                           1- 2211     _00564_DS_:
                                    1- 2212     	.line	811, "main.c"; 	if(pwStep > 4)
     0196 2105                      1- 2213     	MOVIA	0x05
                                    1- 2214     	BANKSEL	_pwStep
     0197 rrrr                      3-  110 m1      .banksel ram_address
     0198 04rr                      1- 2215     	SUBAR	_pwStep,W
     0199 0803                      1- 2216     	BTRSS	STATUS,0
                                    1- 2217     	MGOTO	_00568_DS_
     019A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2218     ;;unsigned compare: left < lit (0x12C=300), size=2
                                    1- 2219     	.line	813, "main.c"; 	if(R_AIN4_DATA < 300)
     019B 2101                      1- 2220     	MOVIA	0x01
                                    1- 2221     	BANKSEL	_R_AIN4_DATA
     019C rrrr                      3-  110 m1      .banksel ram_address
     019D 04rr                      1- 2222     	SUBAR	(_R_AIN4_DATA + 1),W
     019E 0903                      1- 2223     	BTRSS	STATUS,2
                                    1- 2224     	MGOTO	_00806_DS_
     019F 3rrr                      3-   63 m1      LGOTO rom_address
     01A0 212C                      1- 2225     	MOVIA	0x2c
     01A1 04rr                      1- 2226     	SUBAR	_R_AIN4_DATA,W
     01A2                           1- 2227     _00806_DS_:
     01A2 0C03                      1- 2228     	BTRSC	STATUS,0
                                    1- 2229     	MGOTO	_00569_DS_
     01A3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2230     	.line	814, "main.c"; 	pwStep = 4;
     01A4 2104                      1- 2231     	MOVIA	0x04
                                    1- 2232     	BANKSEL	_pwStep
     01A5 rrrr                      3-  110 m1      .banksel ram_address
     01A6 00rr                      1- 2233     	MOVAR	_pwStep
                                    1- 2234     	MGOTO	_00569_DS_
     01A7 3rrr                      3-   63 m1      LGOTO rom_address
     01A8                           1- 2235     _00568_DS_:
                                    1- 2236     	.line	817, "main.c"; 	pwStep = 4;
     01A8 2104                      1- 2237     	MOVIA	0x04
                                    1- 2238     	BANKSEL	_pwStep
     01A9 rrrr                      3-  110 m1      .banksel ram_address
     01AA 00rr                      1- 2239     	MOVAR	_pwStep
     01AB                           1- 2240     _00569_DS_:
                                    1- 2241     	.line	818, "main.c"; 	chrgTime = 0;
                                    1- 2242     	BANKSEL	_chrgTime
     01AB rrrr                      3-  110 m1      .banksel ram_address
     01AC 02rr                      1- 2243     	CLRR	_chrgTime
     01AD 02rr                      1- 2244     	CLRR	(_chrgTime + 1)
                                    1- 2245     	MGOTO	_00621_DS_
     01AE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2246     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2247     ;;unsigned compare: left >= lit (0xC9=201), size=2
     01AF                           1- 2248     _00602_DS_:
                                    1- 2249     	.line	820, "main.c"; 	else if(R_AIN4_DATA > 200)
     01AF 2100                      1- 2250     	MOVIA	0x00
                                    1- 2251     	BANKSEL	_R_AIN4_DATA
     01B0 rrrr                      3-  110 m1      .banksel ram_address
     01B1 04rr                      1- 2252     	SUBAR	(_R_AIN4_DATA + 1),W
     01B2 0903                      1- 2253     	BTRSS	STATUS,2
                                    1- 2254     	MGOTO	_00807_DS_
     01B3 3rrr                      3-   63 m1      LGOTO rom_address
     01B4 21C9                      1- 2255     	MOVIA	0xc9
     01B5 04rr                      1- 2256     	SUBAR	_R_AIN4_DATA,W
     01B6                           1- 2257     _00807_DS_:
     01B6 0803                      1- 2258     	BTRSS	STATUS,0
                                    1- 2259     	MGOTO	_00599_DS_
     01B7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2260     	.line	822, "main.c"; 	if(pwStep == 2)
                                    1- 2261     	BANKSEL	_pwStep
     01B8 rrrr                      3-  110 m1      .banksel ram_address
     01B9 01rr                      1- 2262     	MOVR	_pwStep,W
     01BA 2402                      1- 2263     	XORIA	0x02
     01BB 0903                      1- 2264     	BTRSS	STATUS,2
                                    1- 2265     	MGOTO	_00573_DS_
     01BC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2266     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2267     ;;unsigned compare: left >= lit (0xD3=211), size=2
                                    1- 2268     	.line	824, "main.c"; 	if(R_AIN4_DATA > 210)
     01BD 2100                      1- 2269     	MOVIA	0x00
                                    1- 2270     	BANKSEL	_R_AIN4_DATA
     01BE rrrr                      3-  110 m1      .banksel ram_address
     01BF 04rr                      1- 2271     	SUBAR	(_R_AIN4_DATA + 1),W
     01C0 0903                      1- 2272     	BTRSS	STATUS,2
                                    1- 2273     	MGOTO	_00808_DS_
     01C1 3rrr                      3-   63 m1      LGOTO rom_address
     01C2 21D3                      1- 2274     	MOVIA	0xd3
     01C3 04rr                      1- 2275     	SUBAR	_R_AIN4_DATA,W
     01C4                           1- 2276     _00808_DS_:
     01C4 0803                      1- 2277     	BTRSS	STATUS,0
                                    1- 2278     	MGOTO	_00573_DS_
     01C5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2279     	.line	825, "main.c"; 	pwStep = 3;
     01C6 2103                      1- 2280     	MOVIA	0x03
                                    1- 2281     	BANKSEL	_pwStep
     01C7 rrrr                      3-  110 m1      .banksel ram_address
     01C8 00rr                      1- 2282     	MOVAR	_pwStep
                                    1- 2283     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2284     ;;unsigned compare: left >= lit (0x4=4), size=1
     01C9                           1- 2285     _00573_DS_:
                                    1- 2286     	.line	827, "main.c"; 	if(pwStep > 3)
     01C9 2104                      1- 2287     	MOVIA	0x04
                                    1- 2288     	BANKSEL	_pwStep
     01CA rrrr                      3-  110 m1      .banksel ram_address
     01CB 04rr                      1- 2289     	SUBAR	_pwStep,W
     01CC 0803                      1- 2290     	BTRSS	STATUS,0
                                    1- 2291     	MGOTO	_00577_DS_
     01CD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2292     ;;unsigned compare: left < lit (0xEB=235), size=2
                                    1- 2293     	.line	829, "main.c"; 	if(R_AIN4_DATA < 235)
     01CE 2100                      1- 2294     	MOVIA	0x00
                                    1- 2295     	BANKSEL	_R_AIN4_DATA
     01CF rrrr                      3-  110 m1      .banksel ram_address
     01D0 04rr                      1- 2296     	SUBAR	(_R_AIN4_DATA + 1),W
     01D1 0903                      1- 2297     	BTRSS	STATUS,2
                                    1- 2298     	MGOTO	_00810_DS_
     01D2 3rrr                      3-   63 m1      LGOTO rom_address
     01D3 21EB                      1- 2299     	MOVIA	0xeb
     01D4 04rr                      1- 2300     	SUBAR	_R_AIN4_DATA,W
     01D5                           1- 2301     _00810_DS_:
     01D5 0C03                      1- 2302     	BTRSC	STATUS,0
                                    1- 2303     	MGOTO	_00578_DS_
     01D6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2304     	.line	830, "main.c"; 	pwStep = 3;
     01D7 2103                      1- 2305     	MOVIA	0x03
                                    1- 2306     	BANKSEL	_pwStep
     01D8 rrrr                      3-  110 m1      .banksel ram_address
     01D9 00rr                      1- 2307     	MOVAR	_pwStep
                                    1- 2308     	MGOTO	_00578_DS_
     01DA 3rrr                      3-   63 m1      LGOTO rom_address
     01DB                           1- 2309     _00577_DS_:
                                    1- 2310     	.line	833, "main.c"; 	pwStep = 3;
     01DB 2103                      1- 2311     	MOVIA	0x03
                                    1- 2312     	BANKSEL	_pwStep
     01DC rrrr                      3-  110 m1      .banksel ram_address
     01DD 00rr                      1- 2313     	MOVAR	_pwStep
     01DE                           1- 2314     _00578_DS_:
                                    1- 2315     	.line	834, "main.c"; 	chrgTime = 0;
                                    1- 2316     	BANKSEL	_chrgTime
     01DE rrrr                      3-  110 m1      .banksel ram_address
     01DF 02rr                      1- 2317     	CLRR	_chrgTime
     01E0 02rr                      1- 2318     	CLRR	(_chrgTime + 1)
                                    1- 2319     	MGOTO	_00621_DS_
     01E1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2320     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2321     ;;unsigned compare: left >= lit (0x65=101), size=2
     01E2                           1- 2322     _00599_DS_:
                                    1- 2323     	.line	836, "main.c"; 	else if(R_AIN4_DATA > 100)
     01E2 2100                      1- 2324     	MOVIA	0x00
                                    1- 2325     	BANKSEL	_R_AIN4_DATA
     01E3 rrrr                      3-  110 m1      .banksel ram_address
     01E4 04rr                      1- 2326     	SUBAR	(_R_AIN4_DATA + 1),W
     01E5 0903                      1- 2327     	BTRSS	STATUS,2
                                    1- 2328     	MGOTO	_00811_DS_
     01E6 3rrr                      3-   63 m1      LGOTO rom_address
     01E7 2165                      1- 2329     	MOVIA	0x65
     01E8 04rr                      1- 2330     	SUBAR	_R_AIN4_DATA,W
     01E9                           1- 2331     _00811_DS_:
     01E9 0803                      1- 2332     	BTRSS	STATUS,0
                                    1- 2333     	MGOTO	_00596_DS_
     01EA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2334     	.line	839, "main.c"; 	if(pwStep == 1)
                                    1- 2335     	BANKSEL	_pwStep
     01EB rrrr                      3-  110 m1      .banksel ram_address
     01EC 01rr                      1- 2336     	MOVR	_pwStep,W
     01ED 2401                      1- 2337     	XORIA	0x01
     01EE 0903                      1- 2338     	BTRSS	STATUS,2
                                    1- 2339     	MGOTO	_00582_DS_
     01EF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2340     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2341     ;;unsigned compare: left >= lit (0x6F=111), size=2
                                    1- 2342     	.line	841, "main.c"; 	if(R_AIN4_DATA > 110)
     01F0 2100                      1- 2343     	MOVIA	0x00
                                    1- 2344     	BANKSEL	_R_AIN4_DATA
     01F1 rrrr                      3-  110 m1      .banksel ram_address
     01F2 04rr                      1- 2345     	SUBAR	(_R_AIN4_DATA + 1),W
     01F3 0903                      1- 2346     	BTRSS	STATUS,2
                                    1- 2347     	MGOTO	_00812_DS_
     01F4 3rrr                      3-   63 m1      LGOTO rom_address
     01F5 216F                      1- 2348     	MOVIA	0x6f
     01F6 04rr                      1- 2349     	SUBAR	_R_AIN4_DATA,W
     01F7                           1- 2350     _00812_DS_:
     01F7 0803                      1- 2351     	BTRSS	STATUS,0
                                    1- 2352     	MGOTO	_00582_DS_
     01F8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2353     	.line	842, "main.c"; 	pwStep = 2;
     01F9 2102                      1- 2354     	MOVIA	0x02
                                    1- 2355     	BANKSEL	_pwStep
     01FA rrrr                      3-  110 m1      .banksel ram_address
     01FB 00rr                      1- 2356     	MOVAR	_pwStep
                                    1- 2357     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2358     ;;unsigned compare: left >= lit (0x3=3), size=1
     01FC                           1- 2359     _00582_DS_:
                                    1- 2360     	.line	844, "main.c"; 	if(pwStep > 2)
     01FC 2103                      1- 2361     	MOVIA	0x03
                                    1- 2362     	BANKSEL	_pwStep
     01FD rrrr                      3-  110 m1      .banksel ram_address
     01FE 04rr                      1- 2363     	SUBAR	_pwStep,W
     01FF 0803                      1- 2364     	BTRSS	STATUS,0
                                    1- 2365     	MGOTO	_00586_DS_
     0200 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2366     ;;unsigned compare: left < lit (0xBE=190), size=2
                                    1- 2367     	.line	846, "main.c"; 	if(R_AIN4_DATA < 190)
     0201 2100                      1- 2368     	MOVIA	0x00
                                    1- 2369     	BANKSEL	_R_AIN4_DATA
     0202 rrrr                      3-  110 m1      .banksel ram_address
     0203 04rr                      1- 2370     	SUBAR	(_R_AIN4_DATA + 1),W
     0204 0903                      1- 2371     	BTRSS	STATUS,2
                                    1- 2372     	MGOTO	_00814_DS_
     0205 3rrr                      3-   63 m1      LGOTO rom_address
     0206 21BE                      1- 2373     	MOVIA	0xbe
     0207 04rr                      1- 2374     	SUBAR	_R_AIN4_DATA,W
     0208                           1- 2375     _00814_DS_:
     0208 0C03                      1- 2376     	BTRSC	STATUS,0
                                    1- 2377     	MGOTO	_00587_DS_
     0209 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2378     	.line	847, "main.c"; 	pwStep = 2;
     020A 2102                      1- 2379     	MOVIA	0x02
                                    1- 2380     	BANKSEL	_pwStep
     020B rrrr                      3-  110 m1      .banksel ram_address
     020C 00rr                      1- 2381     	MOVAR	_pwStep
                                    1- 2382     	MGOTO	_00587_DS_
     020D 3rrr                      3-   63 m1      LGOTO rom_address
     020E                           1- 2383     _00586_DS_:
                                    1- 2384     	.line	850, "main.c"; 	pwStep = 2;
     020E 2102                      1- 2385     	MOVIA	0x02
                                    1- 2386     	BANKSEL	_pwStep
     020F rrrr                      3-  110 m1      .banksel ram_address
     0210 00rr                      1- 2387     	MOVAR	_pwStep
     0211                           1- 2388     _00587_DS_:
                                    1- 2389     	.line	851, "main.c"; 	chrgTime = 0;
                                    1- 2390     	BANKSEL	_chrgTime
     0211 rrrr                      3-  110 m1      .banksel ram_address
     0212 02rr                      1- 2391     	CLRR	_chrgTime
     0213 02rr                      1- 2392     	CLRR	(_chrgTime + 1)
                                    1- 2393     	MGOTO	_00621_DS_
     0214 3rrr                      3-   63 m1      LGOTO rom_address
     0215                           1- 2394     _00596_DS_:
                                    1- 2395     	.line	853, "main.c"; 	else  if(R_AIN4_DATA > 0)
                                    1- 2396     	BANKSEL	_R_AIN4_DATA
     0215 rrrr                      3-  110 m1      .banksel ram_address
     0216 01rr                      1- 2397     	MOVR	_R_AIN4_DATA,W
     0217 11rr                      1- 2398     	IORAR	(_R_AIN4_DATA + 1),W
     0218 0D03                      1- 2399     	BTRSC	STATUS,2
                                    1- 2400     	MGOTO	_00621_DS_
     0219 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2401     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2402     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 2403     	.line	856, "main.c"; 	if(pwStep > 1)
     021A 2102                      1- 2404     	MOVIA	0x02
                                    1- 2405     	BANKSEL	_pwStep
     021B rrrr                      3-  110 m1      .banksel ram_address
     021C 04rr                      1- 2406     	SUBAR	_pwStep,W
     021D 0803                      1- 2407     	BTRSS	STATUS,0
                                    1- 2408     	MGOTO	_00591_DS_
     021E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2409     ;;unsigned compare: left < lit (0x5A=90), size=2
                                    1- 2410     	.line	858, "main.c"; 	if(R_AIN4_DATA < 90)
     021F 2100                      1- 2411     	MOVIA	0x00
                                    1- 2412     	BANKSEL	_R_AIN4_DATA
     0220 rrrr                      3-  110 m1      .banksel ram_address
     0221 04rr                      1- 2413     	SUBAR	(_R_AIN4_DATA + 1),W
     0222 0903                      1- 2414     	BTRSS	STATUS,2
                                    1- 2415     	MGOTO	_00816_DS_
     0223 3rrr                      3-   63 m1      LGOTO rom_address
     0224 215A                      1- 2416     	MOVIA	0x5a
     0225 04rr                      1- 2417     	SUBAR	_R_AIN4_DATA,W
     0226                           1- 2418     _00816_DS_:
     0226 0C03                      1- 2419     	BTRSC	STATUS,0
                                    1- 2420     	MGOTO	_00592_DS_
     0227 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2421     	.line	859, "main.c"; 	pwStep = 1;
     0228 2101                      1- 2422     	MOVIA	0x01
                                    1- 2423     	BANKSEL	_pwStep
     0229 rrrr                      3-  110 m1      .banksel ram_address
     022A 00rr                      1- 2424     	MOVAR	_pwStep
                                    1- 2425     	MGOTO	_00592_DS_
     022B 3rrr                      3-   63 m1      LGOTO rom_address
     022C                           1- 2426     _00591_DS_:
                                    1- 2427     	.line	862, "main.c"; 	pwStep = 1;
     022C 2101                      1- 2428     	MOVIA	0x01
                                    1- 2429     	BANKSEL	_pwStep
     022D rrrr                      3-  110 m1      .banksel ram_address
     022E 00rr                      1- 2430     	MOVAR	_pwStep
     022F                           1- 2431     _00592_DS_:
                                    1- 2432     	.line	863, "main.c"; 	chrgTime = 0;
                                    1- 2433     	BANKSEL	_chrgTime
     022F rrrr                      3-  110 m1      .banksel ram_address
     0230 02rr                      1- 2434     	CLRR	_chrgTime
     0231 02rr                      1- 2435     	CLRR	(_chrgTime + 1)
     0232                           1- 2436     _00621_DS_:
                                    1- 2437     	.line	865, "main.c"; 	if(workStep > 0)
                                    1- 2438     	BANKSEL	_workStep
     0232 rrrr                      3-  110 m1      .banksel ram_address
     0233 01rr                      1- 2439     	MOVR	_workStep,W
     0234 0D03                      1- 2440     	BTRSC	STATUS,2
                                    1- 2441     	MGOTO	_00624_DS_
     0235 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2442     	.line	866, "main.c"; 	ledStep = workStep;
     0236 01rr                      1- 2443     	MOVR	_workStep,W
                                    1- 2444     	BANKSEL	_ledStep
     0237 rrrr                      3-  110 m1      .banksel ram_address
     0238 00rr                      1- 2445     	MOVAR	_ledStep
     0239                           1- 2446     _00624_DS_:
                                    1- 2447     	.line	868, "main.c"; 	}
                                    1- 2448     	RETURN	
     0239 0010                      3-   40 m1      ret
                                    1- 2449     ; exit point of _checkBatAD
                                    1- 2451     ;***
                                    1- 2452     ;  pBlock Stats: dbName = C
                                    1- 2453     ;***
                                    1- 2454     ;has an exit
                                    1- 2455     ;functions called:
                                    1- 2456     ;   _delay
                                    1- 2457     ;   _delay
                                    1- 2458     ;; Starting pCode block
                                    1- 2459     .segment "code"; module=main, function=_initAD
     0000                           1- 2461     _initAD:
                                    1- 2462     ; 2 exit points
                                    1- 2463     	.line	665, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 2464     	MOVIA	0x84
     0001 00rr                      1- 2465     	MOVAR	_ADMD
                                    1- 2466     	.line	670, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 2467     	CLRR	_ADVREFH
                                    1- 2468     	.line	675, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 2469     	MOVIA	0x10
     0004 00rr                      1- 2470     	MOVAR	_ADR
                                    1- 2471     	.line	677, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 2472     	MOVIA	0x03
     0006 00rr                      1- 2473     	MOVAR	_ADCR
                                    1- 2474     	.line	680, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 2475     	BSR	_ADMDbits,4
                                    1- 2476     	.line	681, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 2477     	MOVIA	0x64
                                    1- 2478     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2479     	.line	684, "main.c"; 	}
                                    1- 2480     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 2481     ; exit point of _initAD
                                    1- 2483     ;***
                                    1- 2484     ;  pBlock Stats: dbName = C
                                    1- 2485     ;***
                                    1- 2486     ;has an exit
                                    1- 2487     ;2 compiler assigned registers:
                                    1- 2488     ;   r0x102F
                                    1- 2489     ;   r0x1030
                                    1- 2490     ;; Starting pCode block
                                    1- 2491     .segment "code"; module=main, function=_delay
                                    1- 2493     ;local variable name mapping:
     0000                           1- 2496     _delay:
                                    1- 2497     ; 2 exit points
                                    1- 2498     	.line	655, "main.c"; 	void delay(u8t time)
                                    1- 2499     	BANKSEL	r0x102F
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2500     	MOVAR	r0x102F
                                    1- 2501     	.line	657, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2502     	BANKSEL	r0x1030
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2503     	CLRR	r0x1030
     0004                           1- 2504     _00496_DS_:
                                    1- 2505     	BANKSEL	r0x102F
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 2506     	MOVR	r0x102F,W
                                    1- 2507     	BANKSEL	r0x1030
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1- 2508     	SUBAR	r0x1030,W
     0008 0C03                      1- 2509     	BTRSC	STATUS,0
                                    1- 2510     	MGOTO	_00498_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2511     	.line	658, "main.c"; 	NOP();
     000A 0000                      1- 2512     	nop
                                    1- 2513     	.line	657, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2514     	BANKSEL	r0x1030
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 2515     	INCR	r0x1030,F
                                    1- 2516     	MGOTO	_00496_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 2517     _00498_DS_:
                                    1- 2518     	.line	659, "main.c"; 	}
                                    1- 2519     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2520     ; exit point of _delay
                                    1- 2522     ;***
                                    1- 2523     ;  pBlock Stats: dbName = C
                                    1- 2524     ;***
                                    1- 2525     ;has an exit
                                    1- 2526     ;functions called:
                                    1- 2527     ;   _pwmStop
                                    1- 2528     ;   _pwmStop
                                    1- 2529     ;5 compiler assigned registers:
                                    1- 2530     ;   r0x104B
                                    1- 2531     ;   r0x104C
                                    1- 2532     ;   r0x104D
                                    1- 2533     ;   r0x104E
                                    1- 2534     ;   r0x104F
                                    1- 2535     ;; Starting pCode block
                                    1- 2536     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2538     _chrgCtr:
                                    1- 2539     ; 2 exit points
                                    1- 2540     	.line	595, "main.c"; 	if(PORTA & 0x20)
                                    1- 2541     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Arr                      1- 2542     	BTRSS	_PORTA,5
                                    1- 2543     	MGOTO	_00455_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2544     	.line	598, "main.c"; 	chrgFlag = 1;
     0003 2101                      1- 2545     	MOVIA	0x01
                                    1- 2546     	BANKSEL	_chrgFlag
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 00rr                      1- 2547     	MOVAR	_chrgFlag
                                    1- 2548     	.line	599, "main.c"; 	workStep = 0;
                                    1- 2549     	BANKSEL	_workStep
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2550     	CLRR	_workStep
                                    1- 2551     	.line	600, "main.c"; 	ledLightTime = 0;
                                    1- 2552     	BANKSEL	_ledLightTime
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 2553     	CLRR	_ledLightTime
                                    1- 2554     	.line	601, "main.c"; 	pwmStop();
                                    1- 2555     	MCALL	_pwmStop
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2556     ;;unsigned compare: left < lit (0x9=9), size=1
                                    1- 2557     	.line	603, "main.c"; 	if(pwStep >= 9)
     000B 2109                      1- 2558     	MOVIA	0x09
                                    1- 2559     	BANKSEL	_pwStep
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 04rr                      1- 2560     	SUBAR	_pwStep,W
     000E 0803                      1- 2561     	BTRSS	STATUS,0
                                    1- 2562     	MGOTO	_00450_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2563     	.line	606, "main.c"; 	ledStep = 8;
     0010 2108                      1- 2564     	MOVIA	0x08
                                    1- 2565     	BANKSEL	_ledStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1- 2566     	MOVAR	_ledStep
                                    1- 2567     	.line	607, "main.c"; 	if(pwStep == 10 && ++fullCount > 100)
                                    1- 2568     	BANKSEL	_pwStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2569     	MOVR	_pwStep,W
     0015 240A                      1- 2570     	XORIA	0x0a
     0016 0903                      1- 2571     	BTRSS	STATUS,2
                                    1- 2572     	MGOTO	_00439_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2573     	BANKSEL	_fullCount
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 05rr                      1- 2574     	INCR	_fullCount,F
                                    1- 2575     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2576     ;;unsigned compare: left >= lit (0x65=101), size=1
     001A 2165                      1- 2577     	MOVIA	0x65
     001B 04rr                      1- 2578     	SUBAR	_fullCount,W
     001C 0803                      1- 2579     	BTRSS	STATUS,0
                                    1- 2580     	MGOTO	_00439_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2581     	.line	608, "main.c"; 	IOSTA |= 0x01;
     001E 001r                      1- 2582     	IOSTR	_IOSTA
                                    1- 2583     	BANKSEL	r0x104B
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 00rr                      1- 2584     	MOVAR	r0x104B
     0021 18rr                      1- 2585     	BSR	r0x104B,0
     0022 01rr                      1- 2586     	MOVR	r0x104B,W
     0023 000r                      1- 2587     	IOST	_IOSTA
     0024                           1- 2588     _00439_DS_:
                                    1- 2589     	.line	610, "main.c"; 	PORTA |= 0x04;		//打开充满提示灯
                                    1- 2590     	BANKSEL	_PORTA
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 19rr                      1- 2591     	BSR	_PORTA,2
                                    1- 2592     	MGOTO	_00457_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 2593     _00450_DS_:
                                    1- 2594     	.line	615, "main.c"; 	PORTA &= 0xFB;		//关闭充满提示灯
                                    1- 2595     	BANKSEL	_PORTA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 1Drr                      1- 2596     	BCR	_PORTA,2
                                    1- 2597     	.line	617, "main.c"; 	if(count500ms == 0 && pwStep < 9)
                                    1- 2598     	BANKSEL	_count500ms
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 01rr                      1- 2599     	MOVR	_count500ms,W
     002B 0903                      1- 2600     	BTRSS	STATUS,2
                                    1- 2601     	MGOTO	_00444_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2602     ;;unsigned compare: left < lit (0x9=9), size=1
     002D 2109                      1- 2603     	MOVIA	0x09
                                    1- 2604     	BANKSEL	_pwStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 04rr                      1- 2605     	SUBAR	_pwStep,W
     0030 0C03                      1- 2606     	BTRSC	STATUS,0
                                    1- 2607     	MGOTO	_00444_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2608     	.line	619, "main.c"; 	if(lockLedStep < pwStep - 1)
     0032 01rr                      1- 2609     	MOVR	_pwStep,W
                                    1- 2610     	BANKSEL	r0x104B
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 00rr                      1- 2611     	MOVAR	r0x104B
                                    1- 2612     	BANKSEL	r0x104C
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 02rr                      1- 2613     	CLRR	r0x104C
     0037 21FF                      1- 2614     	MOVIA	0xff
                                    1- 2615     	BANKSEL	r0x104B
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 03rr                      1- 2616     	ADDAR	r0x104B,F
     003A 0C03                      1- 2617     	BTRSC	STATUS,0
                                    1- 2618     	MGOTO	_00006_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2619     	BANKSEL	r0x104C
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 06rr                      1- 2620     	DECR	r0x104C,F
     003E                           1- 2621     _00006_DS_:
                                    1- 2622     	BANKSEL	_lockLedStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 01rr                      1- 2623     	MOVR	_lockLedStep,W
                                    1- 2624     	BANKSEL	r0x104D
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 00rr                      1- 2625     	MOVAR	r0x104D
                                    1- 2626     ;;1	CLRR	r0x104E
     0042 2100                      1- 2627     	MOVIA	0x00
     0043 2580                      1- 2628     	ADDIA	0x80
                                    1- 2629     	BANKSEL	r0x104F
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 2630     	MOVAR	r0x104F
                                    1- 2631     	BANKSEL	r0x104C
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 01rr                      1- 2632     	MOVR	r0x104C,W
     0048 2580                      1- 2633     	ADDIA	0x80
                                    1- 2634     	BANKSEL	r0x104F
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 04rr                      1- 2635     	SUBAR	r0x104F,W
     004B 0903                      1- 2636     	BTRSS	STATUS,2
                                    1- 2637     	MGOTO	_00489_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2638     	BANKSEL	r0x104B
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 01rr                      1- 2639     	MOVR	r0x104B,W
                                    1- 2640     	BANKSEL	r0x104D
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 04rr                      1- 2641     	SUBAR	r0x104D,W
     0051                           1- 2642     _00489_DS_:
     0051 0C03                      1- 2643     	BTRSC	STATUS,0
                                    1- 2644     	MGOTO	_00442_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2645     	.line	620, "main.c"; 	lockLedStep = pwStep - 1;
                                    1- 2646     	BANKSEL	_pwStep
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 06rr                      1- 2647     	DECR	_pwStep,W
                                    1- 2648     	BANKSEL	_lockLedStep
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 00rr                      1- 2649     	MOVAR	_lockLedStep
     0057                           1- 2650     _00442_DS_:
                                    1- 2651     	.line	622, "main.c"; 	ledStep = lockLedStep;
                                    1- 2652     	BANKSEL	_lockLedStep
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 01rr                      1- 2653     	MOVR	_lockLedStep,W
                                    1- 2654     	BANKSEL	_ledStep
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 00rr                      1- 2655     	MOVAR	_ledStep
                                    1- 2656     ;;unsigned compare: left < lit (0x1E=30), size=1
     005B                           1- 2657     _00444_DS_:
                                    1- 2658     	.line	624, "main.c"; 	if(count500ms < 30)
     005B 211E                      1- 2659     	MOVIA	0x1e
                                    1- 2660     	BANKSEL	_count500ms
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 04rr                      1- 2661     	SUBAR	_count500ms,W
     005E 0C03                      1- 2662     	BTRSC	STATUS,0
                                    1- 2663     	MGOTO	_00447_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2664     	.line	626, "main.c"; 	PORTA |= 0x02;		//打开充电灯
                                    1- 2665     	BANKSEL	_PORTA
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 18rr                      1- 2666     	BSR	_PORTA,1
                                    1- 2667     	MGOTO	_00448_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
     0063                           1- 2668     _00447_DS_:
                                    1- 2669     	.line	630, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
                                    1- 2670     	BANKSEL	_PORTA
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 1Crr                      1- 2671     	BCR	_PORTA,1
     0065                           1- 2672     _00448_DS_:
                                    1- 2673     	.line	633, "main.c"; 	IOSTA &= 0xFE;
     0065 001r                      1- 2674     	IOSTR	_IOSTA
                                    1- 2675     	BANKSEL	r0x104B
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 00rr                      1- 2676     	MOVAR	r0x104B
     0068 1Crr                      1- 2677     	BCR	r0x104B,0
     0069 01rr                      1- 2678     	MOVR	r0x104B,W
     006A 000r                      1- 2679     	IOST	_IOSTA
                                    1- 2680     	.line	634, "main.c"; 	PORTA |= 0x01;			//打开充电
                                    1- 2681     	BANKSEL	_PORTA
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 18rr                      1- 2682     	BSR	_PORTA,0
                                    1- 2683     	MGOTO	_00457_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
     006E                           1- 2684     _00455_DS_:
                                    1- 2685     	.line	640, "main.c"; 	lockLedStep = 0;
                                    1- 2686     	BANKSEL	_lockLedStep
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 02rr                      1- 2687     	CLRR	_lockLedStep
                                    1- 2688     	.line	641, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
                                    1- 2689     	BANKSEL	_PORTA
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 1Crr                      1- 2690     	BCR	_PORTA,1
                                    1- 2691     	.line	642, "main.c"; 	PORTA &= 0xFB;		//关闭充满提示灯
     0072 1Drr                      1- 2692     	BCR	_PORTA,2
                                    1- 2693     	.line	643, "main.c"; 	IOSTA |= 0x01;
     0073 001r                      1- 2694     	IOSTR	_IOSTA
                                    1- 2695     	BANKSEL	r0x104B
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 00rr                      1- 2696     	MOVAR	r0x104B
     0076 18rr                      1- 2697     	BSR	r0x104B,0
     0077 01rr                      1- 2698     	MOVR	r0x104B,W
     0078 000r                      1- 2699     	IOST	_IOSTA
                                    1- 2700     	.line	644, "main.c"; 	chrgTime = 0;
                                    1- 2701     	BANKSEL	_chrgTime
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 02rr                      1- 2702     	CLRR	_chrgTime
     007B 02rr                      1- 2703     	CLRR	(_chrgTime + 1)
                                    1- 2704     	.line	646, "main.c"; 	if(workStep == 0)
                                    1- 2705     	BANKSEL	_workStep
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 01rr                      1- 2706     	MOVR	_workStep,W
     007E 0903                      1- 2707     	BTRSS	STATUS,2
                                    1- 2708     	MGOTO	_00007_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2709     	.line	647, "main.c"; 	ledStep = 0;
                                    1- 2710     	BANKSEL	_ledStep
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 02rr                      1- 2711     	CLRR	_ledStep
     0082                           1- 2712     _00007_DS_:
                                    1- 2713     	.line	648, "main.c"; 	chrgFlag = 0;
                                    1- 2714     	BANKSEL	_chrgFlag
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 02rr                      1- 2715     	CLRR	_chrgFlag
                                    1- 2716     	.line	649, "main.c"; 	chrgTime = 0;	//重置充电计数
                                    1- 2717     	BANKSEL	_chrgTime
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 02rr                      1- 2718     	CLRR	_chrgTime
     0086 02rr                      1- 2719     	CLRR	(_chrgTime + 1)
     0087                           1- 2720     _00457_DS_:
                                    1- 2721     	.line	652, "main.c"; 	}
                                    1- 2722     	RETURN	
     0087 0010                      3-   40 m1      ret
                                    1- 2723     ; exit point of _chrgCtr
                                    1- 2725     ;***
                                    1- 2726     ;  pBlock Stats: dbName = C
                                    1- 2727     ;***
                                    1- 2728     ;has an exit
                                    1- 2729     ;1 compiler assigned register :
                                    1- 2730     ;   r0x1050
                                    1- 2731     ;; Starting pCode block
                                    1- 2732     .segment "code"; module=main, function=_keyRead
                                    1- 2734     ;local variable name mapping:
     0000                           1- 2736     _keyRead:
                                    1- 2737     ; 2 exit points
                                    1- 2738     	.line	558, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2739     	BANKSEL	r0x1050
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2740     	MOVAR	r0x1050
                                    1- 2741     	.line	560, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2742     	MOVR	r0x1050,W
     0003 0D03                      1- 2743     	BTRSC	STATUS,2
                                    1- 2744     	MGOTO	_00431_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2745     	.line	562, "main.c"; 	keyCount++;
                                    1- 2746     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2747     	INCR	_keyCount,F
                                    1- 2748     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 2749     	.line	563, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 2750     	MOVIA	0x64
     0008 04rr                      1- 2751     	SUBAR	_keyCount,W
     0009 0803                      1- 2752     	BTRSS	STATUS,0
                                    1- 2753     	MGOTO	_00432_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2754     	.line	565, "main.c"; 	keyCount = 100;
     000B 2164                      1- 2755     	MOVIA	0x64
     000C 00rr                      1- 2756     	MOVAR	_keyCount
                                    1- 2757     	.line	566, "main.c"; 	if(!longPressFlag)
                                    1- 2758     	BANKSEL	_longPressFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2759     	MOVR	_longPressFlag,W
     000F 0903                      1- 2760     	BTRSS	STATUS,2
                                    1- 2761     	MGOTO	_00432_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2762     	.line	568, "main.c"; 	longPressFlag = 1;
     0011 2101                      1- 2763     	MOVIA	0x01
     0012 00rr                      1- 2764     	MOVAR	_longPressFlag
                                    1- 2765     	.line	569, "main.c"; 	return 2;
     0013 2102                      1- 2766     	MOVIA	0x02
                                    1- 2767     	MGOTO	_00433_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2768     ;;unsigned compare: left < lit (0x64=100), size=1
     0015                           1- 2769     _00431_DS_:
                                    1- 2770     	.line	575, "main.c"; 	if(keyCount >= 100)
     0015 2164                      1- 2771     	MOVIA	0x64
                                    1- 2772     	BANKSEL	_keyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1- 2773     	SUBAR	_keyCount,W
     0018 0803                      1- 2774     	BTRSS	STATUS,0
                                    1- 2775     	MGOTO	_00428_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2776     	.line	577, "main.c"; 	keyCount = 0;
     001A 02rr                      1- 2777     	CLRR	_keyCount
                                    1- 2778     	.line	578, "main.c"; 	longPressFlag = 0;
                                    1- 2779     	BANKSEL	_longPressFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 2780     	CLRR	_longPressFlag
                                    1- 2781     	.line	579, "main.c"; 	return	0;
     001D 2100                      1- 2782     	MOVIA	0x00
                                    1- 2783     	MGOTO	_00433_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2784     ;;unsigned compare: left < lit (0x4=4), size=1
     001F                           1- 2785     _00428_DS_:
                                    1- 2786     	.line	581, "main.c"; 	else if(keyCount >= 4)
     001F 2104                      1- 2787     	MOVIA	0x04
                                    1- 2788     	BANKSEL	_keyCount
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 2789     	SUBAR	_keyCount,W
     0022 0803                      1- 2790     	BTRSS	STATUS,0
                                    1- 2791     	MGOTO	_00429_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2792     	.line	583, "main.c"; 	keyCount = 0;
     0024 02rr                      1- 2793     	CLRR	_keyCount
                                    1- 2794     	.line	584, "main.c"; 	return	1;
     0025 2101                      1- 2795     	MOVIA	0x01
                                    1- 2796     	MGOTO	_00433_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 2797     _00429_DS_:
                                    1- 2798     	.line	586, "main.c"; 	keyCount = 0;
                                    1- 2799     	BANKSEL	_keyCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 2800     	CLRR	_keyCount
     0029                           1- 2801     _00432_DS_:
                                    1- 2802     	.line	588, "main.c"; 	return 0;
     0029 2100                      1- 2803     	MOVIA	0x00
     002A                           1- 2804     _00433_DS_:
                                    1- 2805     	.line	589, "main.c"; 	}
                                    1- 2806     	RETURN	
     002A 0010                      3-   40 m1      ret
                                    1- 2807     ; exit point of _keyRead
                                    1- 2809     ;***
                                    1- 2810     ;  pBlock Stats: dbName = C
                                    1- 2811     ;***
                                    1- 2812     ;has an exit
                                    1- 2813     ;functions called:
                                    1- 2814     ;   _LedInput
                                    1- 2815     ;   _pwmStop
                                    1- 2816     ;   _LedInput
                                    1- 2817     ;   _pwmStop
                                    1- 2818     ;; Starting pCode block
                                    1- 2819     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2821     _gotoSleep:
                                    1- 2822     ; 2 exit points
                                    1- 2823     	.line	528, "main.c"; 	LedInput();
                                    1- 2824     	MCALL	_LedInput
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2825     	.line	529, "main.c"; 	pwmStop();
                                    1- 2826     	MCALL	_pwmStop
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2827     	.line	530, "main.c"; 	IOSTA = 0x60;
     0002 2160                      1- 2828     	MOVIA	0x60
     0003 000r                      1- 2829     	IOST	_IOSTA
                                    1- 2830     	.line	531, "main.c"; 	IOSTB = 0x00;
     0004 0200                      1- 2831     	CLRA	
     0005 000r                      1- 2832     	IOST	_IOSTB
                                    1- 2833     	.line	532, "main.c"; 	APHCON = 0x9F;
     0006 219F                      1- 2834     	MOVIA	0x9f
     0007 000r                      1- 2835     	IOST	_APHCON
                                    1- 2836     	.line	533, "main.c"; 	PORTB = 0x00;
     0008 02rr                      1- 2837     	CLRR	_PORTB
                                    1- 2838     	.line	534, "main.c"; 	PORTA = 0x00;
                                    1- 2839     	BANKSEL	_PORTA
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 02rr                      1- 2840     	CLRR	_PORTA
                                    1- 2841     	.line	535, "main.c"; 	sleepTime = 0;
                                    1- 2842     	BANKSEL	_sleepTime
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 02rr                      1- 2843     	CLRR	_sleepTime
     000D 02rr                      1- 2844     	CLRR	(_sleepTime + 1)
                                    1- 2845     	.line	537, "main.c"; 	workStep = 0;
                                    1- 2846     	BANKSEL	_workStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1- 2847     	CLRR	_workStep
                                    1- 2848     	.line	538, "main.c"; 	AWUCON = 0x60;
     0010 2160                      1- 2849     	MOVIA	0x60
     0011 00rr                      1- 2850     	MOVAR	_AWUCON
                                    1- 2851     	.line	539, "main.c"; 	INTE =  C_INT_PABKey;
     0012 2102                      1- 2852     	MOVIA	0x02
     0013 00rr                      1- 2853     	MOVAR	_INTE
                                    1- 2854     	.line	540, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0014 2118                      1- 2855     	MOVIA	0x18
     0015 00rr                      1- 2856     	MOVAR	_PCON
                                    1- 2857     	.line	541, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0016 02rr                      1- 2858     	CLRR	_INTF
                                    1- 2859     	.line	542, "main.c"; 	CLRWDT();
     0017 0002                      1- 2860     	clrwdt
                                    1- 2861     	.line	543, "main.c"; 	ENI();
     0018 0004                      1- 2862     	ENI
                                    1- 2863     	.line	544, "main.c"; 	SLEEP();
     0019 0001                      1- 2864     	sleep
                                    1- 2865     	.line	545, "main.c"; 	AWUCON = 0x00;
     001A 02rr                      1- 2866     	CLRR	_AWUCON
                                    1- 2867     	.line	546, "main.c"; 	APHCON = 0xBF;
     001B 21BF                      1- 2868     	MOVIA	0xbf
     001C 000r                      1- 2869     	IOST	_APHCON
                                    1- 2870     	.line	547, "main.c"; 	PORTB = 0x00;
     001D 02rr                      1- 2871     	CLRR	_PORTB
                                    1- 2872     	.line	548, "main.c"; 	PORTA = 0x40;
     001E 2140                      1- 2873     	MOVIA	0x40
                                    1- 2874     	BANKSEL	_PORTA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 00rr                      1- 2875     	MOVAR	_PORTA
                                    1- 2876     	.line	549, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input ;
     0021 2178                      1- 2877     	MOVIA	0x78
     0022 000r                      1- 2878     	IOST	_IOSTA
                                    1- 2879     	.line	550, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0023 2101                      1- 2880     	MOVIA	0x01
     0024 00rr                      1- 2881     	MOVAR	_INTE
                                    1- 2882     	.line	551, "main.c"; 	INTF = 0;
     0025 02rr                      1- 2883     	CLRR	_INTF
                                    1- 2884     	.line	553, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0026 21B8                      1- 2885     	MOVIA	0xb8
     0027 00rr                      1- 2886     	MOVAR	_PCON
                                    1- 2887     	.line	555, "main.c"; 	}
                                    1- 2888     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 2889     ; exit point of _gotoSleep
                                    1- 2891     ;***
                                    1- 2892     ;  pBlock Stats: dbName = C
                                    1- 2893     ;***
                                    1- 2894     ;has an exit
                                    1- 2895     ;; Starting pCode block
                                    1- 2896     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2898     _pwmStop:
                                    1- 2899     ; 2 exit points
                                    1- 2900     	.line	522, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2901     	CLRA	
     0001 00rr                      1- 2902     	SFUN	_T2CR1
                                    1- 2903     	.line	523, "main.c"; 	}
                                    1- 2904     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2905     ; exit point of _pwmStop
                                    1- 2907     ;***
                                    1- 2908     ;  pBlock Stats: dbName = C
                                    1- 2909     ;***
                                    1- 2910     ;has an exit
                                    1- 2911     ;1 compiler assigned register :
                                    1- 2912     ;   r0x1052
                                    1- 2913     ;; Starting pCode block
                                    1- 2914     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2916     _pwmInit:
                                    1- 2917     ; 2 exit points
                                    1- 2918     	.line	510, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2919     	SFUNR	_T2CR1
                                    1- 2920     	BANKSEL	r0x1052
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2921     	MOVAR	r0x1052
     0003 0Frr                      1- 2922     	BTRSC	r0x1052,7
                                    1- 2923     	.line	511, "main.c"; 	return;
                                    1- 2924     	MGOTO	_00408_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2925     	.line	512, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2926     	CLRR	_TMRH
                                    1- 2927     	.line	513, "main.c"; 	TMR2 = 99;							//频率为110K
     0006 2163                      1- 2928     	MOVIA	0x63
     0007 00rr                      1- 2929     	SFUN	_TMR2
                                    1- 2930     	.line	516, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2931     	CLRA	
     0009 00rr                      1- 2932     	SFUN	_T2CR2
                                    1- 2933     	.line	517, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2934     	MOVIA	0x83
     000B 00rr                      1- 2935     	SFUN	_T2CR1
     000C                           1- 2936     _00408_DS_:
                                    1- 2937     	.line	518, "main.c"; 	}
                                    1- 2938     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2939     ; exit point of _pwmInit
                                    1- 2941     ;***
                                    1- 2942     ;  pBlock Stats: dbName = C
                                    1- 2943     ;***
                                    1- 2944     ;has an exit
                                    1- 2945     ;; Starting pCode block
                                    1- 2946     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2948     _pwm1Stop:
                                    1- 2949     ; 2 exit points
                                    1- 2950     	.line	503, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2951     	CLRA	
     0001 00rr                      1- 2952     	SFUN	_T1CR1
                                    1- 2953     	.line	504, "main.c"; 	}
                                    1- 2954     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2955     ; exit point of _pwm1Stop
                                    1- 2957     ;***
                                    1- 2958     ;  pBlock Stats: dbName = C
                                    1- 2959     ;***
                                    1- 2960     ;has an exit
                                    1- 2961     ;1 compiler assigned register :
                                    1- 2962     ;   r0x1053
                                    1- 2963     ;; Starting pCode block
                                    1- 2964     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2966     _pwm1Init:
                                    1- 2967     ; 2 exit points
                                    1- 2968     	.line	491, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2969     	SFUNR	_T1CR1
                                    1- 2970     	BANKSEL	r0x1053
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2971     	MOVAR	r0x1053
     0003 0Frr                      1- 2972     	BTRSC	r0x1053,7
                                    1- 2973     	.line	492, "main.c"; 	return;
                                    1- 2974     	MGOTO	_00397_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2975     	.line	493, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2976     	CLRR	_TMRH
                                    1- 2977     	.line	494, "main.c"; 	TMR1 = 12;							//频率为110K
     0006 210C                      1- 2978     	MOVIA	0x0c
     0007 00rr                      1- 2979     	SFUN	_TMR1
                                    1- 2980     	.line	497, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2981     	CLRA	
     0009 00rr                      1- 2982     	SFUN	_T1CR2
                                    1- 2983     	.line	498, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2984     	MOVIA	0x83
     000B 00rr                      1- 2985     	SFUN	_T1CR1
     000C                           1- 2986     _00397_DS_:
                                    1- 2987     	.line	499, "main.c"; 	}
                                    1- 2988     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2989     ; exit point of _pwm1Init
                                    1- 2991     ;***
                                    1- 2992     ;  pBlock Stats: dbName = C
                                    1- 2993     ;***
                                    1- 2994     ;has an exit
                                    1- 2995     ;functions called:
                                    1- 2996     ;   _delay
                                    1- 2997     ;   _LedInput
                                    1- 2998     ;   _delay
                                    1- 2999     ;   _LedInput
                                    1- 3000     ;1 compiler assigned register :
                                    1- 3001     ;   r0x1054
                                    1- 3002     ;; Starting pCode block
                                    1- 3003     .segment "code"; module=main, function=_LED8ON
     0000                           1- 3005     _LED8ON:
                                    1- 3006     ; 2 exit points
                                    1- 3007     	.line	481, "main.c"; 	L4OUT;
     0000 001r                      1- 3008     	IOSTR	_IOSTB
                                    1- 3009     	BANKSEL	r0x1054
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3010     	MOVAR	r0x1054
     0003 1Crr                      1- 3011     	BCR	r0x1054,0
     0004 01rr                      1- 3012     	MOVR	r0x1054,W
     0005 000r                      1- 3013     	IOST	_IOSTB
                                    1- 3014     	.line	482, "main.c"; 	L2OUT;
     0006 001r                      1- 3015     	IOSTR	_IOSTB
     0007 00rr                      1- 3016     	MOVAR	r0x1054
     0008 1Drr                      1- 3017     	BCR	r0x1054,3
     0009 01rr                      1- 3018     	MOVR	r0x1054,W
     000A 000r                      1- 3019     	IOST	_IOSTB
                                    1- 3020     	.line	483, "main.c"; 	L4H;
     000B 18rr                      1- 3021     	BSR	_PORTB,0
                                    1- 3022     	.line	484, "main.c"; 	L2L;
     000C 1Drr                      1- 3023     	BCR	_PORTB,3
                                    1- 3024     	.line	485, "main.c"; 	delay(80);
     000D 2150                      1- 3025     	MOVIA	0x50
                                    1- 3026     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3027     	.line	486, "main.c"; 	LedInput();
                                    1- 3028     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3029     	.line	487, "main.c"; 	}
                                    1- 3030     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3031     ; exit point of _LED8ON
                                    1- 3033     ;***
                                    1- 3034     ;  pBlock Stats: dbName = C
                                    1- 3035     ;***
                                    1- 3036     ;has an exit
                                    1- 3037     ;functions called:
                                    1- 3038     ;   _delay
                                    1- 3039     ;   _LedInput
                                    1- 3040     ;   _delay
                                    1- 3041     ;   _LedInput
                                    1- 3042     ;1 compiler assigned register :
                                    1- 3043     ;   r0x1055
                                    1- 3044     ;; Starting pCode block
                                    1- 3045     .segment "code"; module=main, function=_LED7ON
     0000                           1- 3047     _LED7ON:
                                    1- 3048     ; 2 exit points
                                    1- 3049     	.line	471, "main.c"; 	L4OUT;
     0000 001r                      1- 3050     	IOSTR	_IOSTB
                                    1- 3051     	BANKSEL	r0x1055
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3052     	MOVAR	r0x1055
     0003 1Crr                      1- 3053     	BCR	r0x1055,0
     0004 01rr                      1- 3054     	MOVR	r0x1055,W
     0005 000r                      1- 3055     	IOST	_IOSTB
                                    1- 3056     	.line	472, "main.c"; 	L2OUT;
     0006 001r                      1- 3057     	IOSTR	_IOSTB
     0007 00rr                      1- 3058     	MOVAR	r0x1055
     0008 1Drr                      1- 3059     	BCR	r0x1055,3
     0009 01rr                      1- 3060     	MOVR	r0x1055,W
     000A 000r                      1- 3061     	IOST	_IOSTB
                                    1- 3062     	.line	473, "main.c"; 	L2H;
     000B 19rr                      1- 3063     	BSR	_PORTB,3
                                    1- 3064     	.line	474, "main.c"; 	L4L;
     000C 1Crr                      1- 3065     	BCR	_PORTB,0
                                    1- 3066     	.line	475, "main.c"; 	delay(80);
     000D 2150                      1- 3067     	MOVIA	0x50
                                    1- 3068     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3069     	.line	476, "main.c"; 	LedInput();
                                    1- 3070     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3071     	.line	477, "main.c"; 	}
                                    1- 3072     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3073     ; exit point of _LED7ON
                                    1- 3075     ;***
                                    1- 3076     ;  pBlock Stats: dbName = C
                                    1- 3077     ;***
                                    1- 3078     ;has an exit
                                    1- 3079     ;functions called:
                                    1- 3080     ;   _delay
                                    1- 3081     ;   _LedInput
                                    1- 3082     ;   _delay
                                    1- 3083     ;   _LedInput
                                    1- 3084     ;1 compiler assigned register :
                                    1- 3085     ;   r0x1056
                                    1- 3086     ;; Starting pCode block
                                    1- 3087     .segment "code"; module=main, function=_LED6ON
     0000                           1- 3089     _LED6ON:
                                    1- 3090     ; 2 exit points
                                    1- 3091     	.line	461, "main.c"; 	L4OUT;
     0000 001r                      1- 3092     	IOSTR	_IOSTB
                                    1- 3093     	BANKSEL	r0x1056
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3094     	MOVAR	r0x1056
     0003 1Crr                      1- 3095     	BCR	r0x1056,0
     0004 01rr                      1- 3096     	MOVR	r0x1056,W
     0005 000r                      1- 3097     	IOST	_IOSTB
                                    1- 3098     	.line	462, "main.c"; 	L1OUT;
     0006 001r                      1- 3099     	IOSTR	_IOSTA
     0007 00rr                      1- 3100     	MOVAR	r0x1056
     0008 1Frr                      1- 3101     	BCR	r0x1056,7
     0009 01rr                      1- 3102     	MOVR	r0x1056,W
     000A 000r                      1- 3103     	IOST	_IOSTA
                                    1- 3104     	.line	463, "main.c"; 	L1H;
                                    1- 3105     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 1Brr                      1- 3106     	BSR	_PORTA,7
                                    1- 3107     	.line	464, "main.c"; 	L4L;
     000D 1Crr                      1- 3108     	BCR	_PORTB,0
                                    1- 3109     	.line	465, "main.c"; 	delay(80);
     000E 2150                      1- 3110     	MOVIA	0x50
                                    1- 3111     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3112     	.line	466, "main.c"; 	LedInput();
                                    1- 3113     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3114     	.line	467, "main.c"; 	}
                                    1- 3115     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3116     ; exit point of _LED6ON
                                    1- 3118     ;***
                                    1- 3119     ;  pBlock Stats: dbName = C
                                    1- 3120     ;***
                                    1- 3121     ;has an exit
                                    1- 3122     ;functions called:
                                    1- 3123     ;   _delay
                                    1- 3124     ;   _LedInput
                                    1- 3125     ;   _delay
                                    1- 3126     ;   _LedInput
                                    1- 3127     ;1 compiler assigned register :
                                    1- 3128     ;   r0x1057
                                    1- 3129     ;; Starting pCode block
                                    1- 3130     .segment "code"; module=main, function=_LED5ON
     0000                           1- 3132     _LED5ON:
                                    1- 3133     ; 2 exit points
                                    1- 3134     	.line	450, "main.c"; 	L4OUT;
     0000 001r                      1- 3135     	IOSTR	_IOSTB
                                    1- 3136     	BANKSEL	r0x1057
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3137     	MOVAR	r0x1057
     0003 1Crr                      1- 3138     	BCR	r0x1057,0
     0004 01rr                      1- 3139     	MOVR	r0x1057,W
     0005 000r                      1- 3140     	IOST	_IOSTB
                                    1- 3141     	.line	451, "main.c"; 	L1OUT;
     0006 001r                      1- 3142     	IOSTR	_IOSTA
     0007 00rr                      1- 3143     	MOVAR	r0x1057
     0008 1Frr                      1- 3144     	BCR	r0x1057,7
     0009 01rr                      1- 3145     	MOVR	r0x1057,W
     000A 000r                      1- 3146     	IOST	_IOSTA
                                    1- 3147     	.line	452, "main.c"; 	L4H;
     000B 18rr                      1- 3148     	BSR	_PORTB,0
                                    1- 3149     	.line	453, "main.c"; 	L1L;
                                    1- 3150     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Frr                      1- 3151     	BCR	_PORTA,7
                                    1- 3152     	.line	454, "main.c"; 	delay(80);
     000E 2150                      1- 3153     	MOVIA	0x50
                                    1- 3154     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3155     	.line	455, "main.c"; 	LedInput();
                                    1- 3156     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3157     	.line	456, "main.c"; 	}
                                    1- 3158     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3159     ; exit point of _LED5ON
                                    1- 3161     ;***
                                    1- 3162     ;  pBlock Stats: dbName = C
                                    1- 3163     ;***
                                    1- 3164     ;has an exit
                                    1- 3165     ;functions called:
                                    1- 3166     ;   _delay
                                    1- 3167     ;   _LedInput
                                    1- 3168     ;   _delay
                                    1- 3169     ;   _LedInput
                                    1- 3170     ;1 compiler assigned register :
                                    1- 3171     ;   r0x1058
                                    1- 3172     ;; Starting pCode block
                                    1- 3173     .segment "code"; module=main, function=_LED4ON
     0000                           1- 3175     _LED4ON:
                                    1- 3176     ; 2 exit points
                                    1- 3177     	.line	440, "main.c"; 	L3OUT;
     0000 001r                      1- 3178     	IOSTR	_IOSTB
                                    1- 3179     	BANKSEL	r0x1058
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3180     	MOVAR	r0x1058
     0003 1Crr                      1- 3181     	BCR	r0x1058,1
     0004 01rr                      1- 3182     	MOVR	r0x1058,W
     0005 000r                      1- 3183     	IOST	_IOSTB
                                    1- 3184     	.line	441, "main.c"; 	L2OUT;
     0006 001r                      1- 3185     	IOSTR	_IOSTB
     0007 00rr                      1- 3186     	MOVAR	r0x1058
     0008 1Drr                      1- 3187     	BCR	r0x1058,3
     0009 01rr                      1- 3188     	MOVR	r0x1058,W
     000A 000r                      1- 3189     	IOST	_IOSTB
                                    1- 3190     	.line	442, "main.c"; 	L3H;
     000B 18rr                      1- 3191     	BSR	_PORTB,1
                                    1- 3192     	.line	443, "main.c"; 	L2L;
     000C 1Drr                      1- 3193     	BCR	_PORTB,3
                                    1- 3194     	.line	444, "main.c"; 	delay(80);
     000D 2150                      1- 3195     	MOVIA	0x50
                                    1- 3196     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3197     	.line	445, "main.c"; 	LedInput();
                                    1- 3198     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3199     	.line	446, "main.c"; 	}
                                    1- 3200     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3201     ; exit point of _LED4ON
                                    1- 3203     ;***
                                    1- 3204     ;  pBlock Stats: dbName = C
                                    1- 3205     ;***
                                    1- 3206     ;has an exit
                                    1- 3207     ;functions called:
                                    1- 3208     ;   _delay
                                    1- 3209     ;   _LedInput
                                    1- 3210     ;   _delay
                                    1- 3211     ;   _LedInput
                                    1- 3212     ;1 compiler assigned register :
                                    1- 3213     ;   r0x1059
                                    1- 3214     ;; Starting pCode block
                                    1- 3215     .segment "code"; module=main, function=_LED3ON
     0000                           1- 3217     _LED3ON:
                                    1- 3218     ; 2 exit points
                                    1- 3219     	.line	430, "main.c"; 	L3OUT;
     0000 001r                      1- 3220     	IOSTR	_IOSTB
                                    1- 3221     	BANKSEL	r0x1059
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3222     	MOVAR	r0x1059
     0003 1Crr                      1- 3223     	BCR	r0x1059,1
     0004 01rr                      1- 3224     	MOVR	r0x1059,W
     0005 000r                      1- 3225     	IOST	_IOSTB
                                    1- 3226     	.line	431, "main.c"; 	L2OUT;
     0006 001r                      1- 3227     	IOSTR	_IOSTB
     0007 00rr                      1- 3228     	MOVAR	r0x1059
     0008 1Drr                      1- 3229     	BCR	r0x1059,3
     0009 01rr                      1- 3230     	MOVR	r0x1059,W
     000A 000r                      1- 3231     	IOST	_IOSTB
                                    1- 3232     	.line	432, "main.c"; 	L2H;
     000B 19rr                      1- 3233     	BSR	_PORTB,3
                                    1- 3234     	.line	433, "main.c"; 	L3L;
     000C 1Crr                      1- 3235     	BCR	_PORTB,1
                                    1- 3236     	.line	434, "main.c"; 	delay(80);
     000D 2150                      1- 3237     	MOVIA	0x50
                                    1- 3238     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3239     	.line	435, "main.c"; 	LedInput();
                                    1- 3240     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3241     	.line	436, "main.c"; 	}
                                    1- 3242     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3243     ; exit point of _LED3ON
                                    1- 3245     ;***
                                    1- 3246     ;  pBlock Stats: dbName = C
                                    1- 3247     ;***
                                    1- 3248     ;has an exit
                                    1- 3249     ;functions called:
                                    1- 3250     ;   _delay
                                    1- 3251     ;   _LedInput
                                    1- 3252     ;   _delay
                                    1- 3253     ;   _LedInput
                                    1- 3254     ;1 compiler assigned register :
                                    1- 3255     ;   r0x105A
                                    1- 3256     ;; Starting pCode block
                                    1- 3257     .segment "code"; module=main, function=_LED2ON
     0000                           1- 3259     _LED2ON:
                                    1- 3260     ; 2 exit points
                                    1- 3261     	.line	420, "main.c"; 	L1OUT;
     0000 001r                      1- 3262     	IOSTR	_IOSTA
                                    1- 3263     	BANKSEL	r0x105A
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3264     	MOVAR	r0x105A
     0003 1Frr                      1- 3265     	BCR	r0x105A,7
     0004 01rr                      1- 3266     	MOVR	r0x105A,W
     0005 000r                      1- 3267     	IOST	_IOSTA
                                    1- 3268     	.line	421, "main.c"; 	L3OUT;
     0006 001r                      1- 3269     	IOSTR	_IOSTB
     0007 00rr                      1- 3270     	MOVAR	r0x105A
     0008 1Crr                      1- 3271     	BCR	r0x105A,1
     0009 01rr                      1- 3272     	MOVR	r0x105A,W
     000A 000r                      1- 3273     	IOST	_IOSTB
                                    1- 3274     	.line	422, "main.c"; 	L3H;
     000B 18rr                      1- 3275     	BSR	_PORTB,1
                                    1- 3276     	.line	423, "main.c"; 	L1L;
                                    1- 3277     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Frr                      1- 3278     	BCR	_PORTA,7
                                    1- 3279     	.line	424, "main.c"; 	delay(80);
     000E 2150                      1- 3280     	MOVIA	0x50
                                    1- 3281     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3282     	.line	425, "main.c"; 	LedInput();
                                    1- 3283     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3284     	.line	426, "main.c"; 	}
                                    1- 3285     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3286     ; exit point of _LED2ON
                                    1- 3288     ;***
                                    1- 3289     ;  pBlock Stats: dbName = C
                                    1- 3290     ;***
                                    1- 3291     ;has an exit
                                    1- 3292     ;functions called:
                                    1- 3293     ;   _delay
                                    1- 3294     ;   _LedInput
                                    1- 3295     ;   _delay
                                    1- 3296     ;   _LedInput
                                    1- 3297     ;1 compiler assigned register :
                                    1- 3298     ;   r0x105B
                                    1- 3299     ;; Starting pCode block
                                    1- 3300     .segment "code"; module=main, function=_LED1ON
     0000                           1- 3302     _LED1ON:
                                    1- 3303     ; 2 exit points
                                    1- 3304     	.line	410, "main.c"; 	L3OUT;
     0000 001r                      1- 3305     	IOSTR	_IOSTB
                                    1- 3306     	BANKSEL	r0x105B
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3307     	MOVAR	r0x105B
     0003 1Crr                      1- 3308     	BCR	r0x105B,1
     0004 01rr                      1- 3309     	MOVR	r0x105B,W
     0005 000r                      1- 3310     	IOST	_IOSTB
                                    1- 3311     	.line	411, "main.c"; 	L1OUT;
     0006 001r                      1- 3312     	IOSTR	_IOSTA
     0007 00rr                      1- 3313     	MOVAR	r0x105B
     0008 1Frr                      1- 3314     	BCR	r0x105B,7
     0009 01rr                      1- 3315     	MOVR	r0x105B,W
     000A 000r                      1- 3316     	IOST	_IOSTA
                                    1- 3317     	.line	412, "main.c"; 	L1H;
                                    1- 3318     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 1Brr                      1- 3319     	BSR	_PORTA,7
                                    1- 3320     	.line	413, "main.c"; 	L3L;
     000D 1Crr                      1- 3321     	BCR	_PORTB,1
                                    1- 3322     	.line	414, "main.c"; 	delay(80);
     000E 2150                      1- 3323     	MOVIA	0x50
                                    1- 3324     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3325     	.line	415, "main.c"; 	LedInput();
                                    1- 3326     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3327     	.line	416, "main.c"; 	}
                                    1- 3328     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3329     ; exit point of _LED1ON
                                    1- 3331     ;***
                                    1- 3332     ;  pBlock Stats: dbName = C
                                    1- 3333     ;***
                                    1- 3334     ;has an exit
                                    1- 3335     ;1 compiler assigned register :
                                    1- 3336     ;   r0x1051
                                    1- 3337     ;; Starting pCode block
                                    1- 3338     .segment "code"; module=main, function=_LedInput
     0000                           1- 3340     _LedInput:
                                    1- 3341     ; 2 exit points
                                    1- 3342     	.line	402, "main.c"; 	IOSTA |= 0x80;
     0000 001r                      1- 3343     	IOSTR	_IOSTA
                                    1- 3344     	BANKSEL	r0x1051
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3345     	MOVAR	r0x1051
     0003 1Brr                      1- 3346     	BSR	r0x1051,7
     0004 01rr                      1- 3347     	MOVR	r0x1051,W
     0005 000r                      1- 3348     	IOST	_IOSTA
                                    1- 3349     	.line	403, "main.c"; 	IOSTB |= 0x0B;
     0006 001r                      1- 3350     	IOSTR	_IOSTB
     0007 00rr                      1- 3351     	MOVAR	r0x1051
     0008 210B                      1- 3352     	MOVIA	0x0b
     0009 11rr                      1- 3353     	IORAR	r0x1051,F
     000A 01rr                      1- 3354     	MOVR	r0x1051,W
     000B 000r                      1- 3355     	IOST	_IOSTB
                                    1- 3356     	.line	404, "main.c"; 	PORTA &= 0x7F;
                                    1- 3357     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Frr                      1- 3358     	BCR	_PORTA,7
                                    1- 3359     	.line	405, "main.c"; 	PORTB &= 0xF4;
     000E 21F4                      1- 3360     	MOVIA	0xf4
     000F 10rr                      1- 3361     	ANDAR	_PORTB,F
                                    1- 3362     	.line	406, "main.c"; 	}
                                    1- 3363     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3364     ; exit point of _LedInput
                                    1- 3366     ;***
                                    1- 3367     ;  pBlock Stats: dbName = C
                                    1- 3368     ;***
                                    1- 3369     ;has an exit
                                    1- 3370     ;functions called:
                                    1- 3371     ;   _pwmStop
                                    1- 3372     ;   _LedInput
                                    1- 3373     ;   _LedInput
                                    1- 3374     ;   _LED8ON
                                    1- 3375     ;   _LED7ON
                                    1- 3376     ;   _LED6ON
                                    1- 3377     ;   _LED5ON
                                    1- 3378     ;   _LED4ON
                                    1- 3379     ;   _LED3ON
                                    1- 3380     ;   _LED2ON
                                    1- 3381     ;   _LED1ON
                                    1- 3382     ;   _pwmStop
                                    1- 3383     ;   _LedInput
                                    1- 3384     ;   _LedInput
                                    1- 3385     ;   _LED8ON
                                    1- 3386     ;   _LED7ON
                                    1- 3387     ;   _LED6ON
                                    1- 3388     ;   _LED5ON
                                    1- 3389     ;   _LED4ON
                                    1- 3390     ;   _LED3ON
                                    1- 3391     ;   _LED2ON
                                    1- 3392     ;   _LED1ON
                                    1- 3393     ;; Starting pCode block
                                    1- 3394     .segment "code"; module=main, function=_ledShow
     0000                           1- 3396     _ledShow:
                                    1- 3397     ; 2 exit points
                                    1- 3398     	.line	342, "main.c"; 	if(ledDeadTime > 0 && workStep == 0)
                                    1- 3399     	BANKSEL	_ledDeadTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 3400     	MOVR	_ledDeadTime,W
     0002 0D03                      1- 3401     	BTRSC	STATUS,2
                                    1- 3402     	MGOTO	_00289_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3403     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 3404     	MOVR	_workStep,W
     0006 0903                      1- 3405     	BTRSS	STATUS,2
                                    1- 3406     	MGOTO	_00289_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3407     	.line	344, "main.c"; 	if(ledDeadTime % 2 == 0)
                                    1- 3408     	BANKSEL	_ledDeadTime
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 0Crr                      1- 3409     	BTRSC	_ledDeadTime,0
                                    1- 3410     	MGOTO	_00286_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3411     	.line	346, "main.c"; 	ledStep = 0;
                                    1- 3412     	BANKSEL	_ledStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 02rr                      1- 3413     	CLRR	_ledStep
                                    1- 3414     	MGOTO	_00289_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 3415     _00286_DS_:
                                    1- 3416     	.line	350, "main.c"; 	ledStep = tempLedStep;
                                    1- 3417     	BANKSEL	_tempLedStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 3418     	MOVR	_tempLedStep,W
                                    1- 3419     	BANKSEL	_ledStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 3420     	MOVAR	_ledStep
     0012                           1- 3421     _00289_DS_:
                                    1- 3422     	.line	354, "main.c"; 	if(ledLightTime > 0 && pwStep > 0)
                                    1- 3423     	BANKSEL	_ledLightTime
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 3424     	MOVR	_ledLightTime,W
     0014 0D03                      1- 3425     	BTRSC	STATUS,2
                                    1- 3426     	MGOTO	_00292_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3427     	BANKSEL	_pwStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 3428     	MOVR	_pwStep,W
     0018 0D03                      1- 3429     	BTRSC	STATUS,2
                                    1- 3430     	MGOTO	_00292_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3431     	.line	357, "main.c"; 	ledStep = tempLedStep;
                                    1- 3432     	BANKSEL	_tempLedStep
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 01rr                      1- 3433     	MOVR	_tempLedStep,W
                                    1- 3434     	BANKSEL	_ledStep
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 00rr                      1- 3435     	MOVAR	_ledStep
     001E                           1- 3436     _00292_DS_:
                                    1- 3437     	.line	359, "main.c"; 	if(shanshuoTime > 0 && workStep > 0 && pwStep == 0)
                                    1- 3438     	BANKSEL	_shanshuoTime
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 01rr                      1- 3439     	MOVR	_shanshuoTime,W
     0020 0D03                      1- 3440     	BTRSC	STATUS,2
                                    1- 3441     	MGOTO	_00298_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3442     	BANKSEL	_workStep
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 3443     	MOVR	_workStep,W
     0024 0D03                      1- 3444     	BTRSC	STATUS,2
                                    1- 3445     	MGOTO	_00298_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3446     	BANKSEL	_pwStep
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 3447     	MOVR	_pwStep,W
     0028 0903                      1- 3448     	BTRSS	STATUS,2
                                    1- 3449     	MGOTO	_00298_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3450     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 3451     	.line	361, "main.c"; 	if(count1s < 50)
     002A 2132                      1- 3452     	MOVIA	0x32
                                    1- 3453     	BANKSEL	_count1s
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 04rr                      1- 3454     	SUBAR	_count1s,W
     002D 0C03                      1- 3455     	BTRSC	STATUS,0
                                    1- 3456     	MGOTO	_00295_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3457     	.line	362, "main.c"; 	ledStep = workStep;
                                    1- 3458     	BANKSEL	_workStep
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 3459     	MOVR	_workStep,W
                                    1- 3460     	BANKSEL	_ledStep
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 00rr                      1- 3461     	MOVAR	_ledStep
                                    1- 3462     	MGOTO	_00298_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
     0034                           1- 3463     _00295_DS_:
                                    1- 3464     	.line	364, "main.c"; 	ledStep = 0;
                                    1- 3465     	BANKSEL	_ledStep
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 02rr                      1- 3466     	CLRR	_ledStep
     0036                           1- 3467     _00298_DS_:
                                    1- 3468     	.line	366, "main.c"; 	if(shanshuoTime == 0 && pwStep == 0)
                                    1- 3469     	BANKSEL	_shanshuoTime
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 01rr                      1- 3470     	MOVR	_shanshuoTime,W
     0038 0903                      1- 3471     	BTRSS	STATUS,2
                                    1- 3472     	MGOTO	_00302_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3473     	BANKSEL	_pwStep
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1- 3474     	MOVR	_pwStep,W
     003C 0903                      1- 3475     	BTRSS	STATUS,2
                                    1- 3476     	MGOTO	_00302_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3477     	.line	368, "main.c"; 	workStep = 0;
                                    1- 3478     	BANKSEL	_workStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 02rr                      1- 3479     	CLRR	_workStep
                                    1- 3480     	.line	369, "main.c"; 	ledStep = 0;
                                    1- 3481     	BANKSEL	_ledStep
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 02rr                      1- 3482     	CLRR	_ledStep
                                    1- 3483     	.line	370, "main.c"; 	pwmStop();
                                    1- 3484     	MCALL	_pwmStop
     0042 2rrr                      3-   66 m1      LCALL rom_address
     0043                           1- 3485     _00302_DS_:
                                    1- 3486     	.line	372, "main.c"; 	LedInput();
                                    1- 3487     	MCALL	_LedInput
     0043 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3488     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3489     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 3490     	.line	373, "main.c"; 	switch(ledStep)
     0044 2109                      1- 3491     	MOVIA	0x09
                                    1- 3492     	BANKSEL	_ledStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 04rr                      1- 3493     	SUBAR	_ledStep,W
     0047 0C03                      1- 3494     	BTRSC	STATUS,0
                                    1- 3495     	MGOTO	_00314_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 21rr                      1- 3496     	MOVIA	((_00354_DS_ >> 8) & 0xff)
     004A 008A                      1- 3497     	MOVAR	PCHBUF
     004B 01rr                      1- 3498     	MOVR	_ledStep,W
     004C 25rr                      1- 3499     	ADDIA	_00354_DS_
     004D 0C03                      1- 3500     	BTRSC	STATUS,0
     004E 058A                      1- 3501     	INCR	PCHBUF,F
     004F 0082                      1- 3502     	MOVAR	PCL
     0050                           1- 3503     _00354_DS_:
                                    1- 3504     	MGOTO	_00304_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3505     	MGOTO	_00312_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3506     	MGOTO	_00311_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3507     	MGOTO	_00310_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3508     	MGOTO	_00309_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3509     	MGOTO	_00308_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3510     	MGOTO	_00307_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3511     	MGOTO	_00306_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3512     	MGOTO	_00305_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
     0059                           1- 3513     _00304_DS_:
                                    1- 3514     	.line	376, "main.c"; 	LedInput();
                                    1- 3515     	MCALL	_LedInput
     0059 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3516     	.line	377, "main.c"; 	break;
                                    1- 3517     	MGOTO	_00314_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B                           1- 3518     _00305_DS_:
                                    1- 3519     	.line	379, "main.c"; 	LED8ON();
                                    1- 3520     	MCALL	_LED8ON
     005B 2rrr                      3-   66 m1      LCALL rom_address
     005C                           1- 3521     _00306_DS_:
                                    1- 3522     	.line	381, "main.c"; 	LED7ON();
                                    1- 3523     	MCALL	_LED7ON
     005C 2rrr                      3-   66 m1      LCALL rom_address
     005D                           1- 3524     _00307_DS_:
                                    1- 3525     	.line	383, "main.c"; 	LED6ON();
                                    1- 3526     	MCALL	_LED6ON
     005D 2rrr                      3-   66 m1      LCALL rom_address
     005E                           1- 3527     _00308_DS_:
                                    1- 3528     	.line	385, "main.c"; 	LED5ON();
                                    1- 3529     	MCALL	_LED5ON
     005E 2rrr                      3-   66 m1      LCALL rom_address
     005F                           1- 3530     _00309_DS_:
                                    1- 3531     	.line	387, "main.c"; 	LED4ON();
                                    1- 3532     	MCALL	_LED4ON
     005F 2rrr                      3-   66 m1      LCALL rom_address
     0060                           1- 3533     _00310_DS_:
                                    1- 3534     	.line	389, "main.c"; 	LED3ON();
                                    1- 3535     	MCALL	_LED3ON
     0060 2rrr                      3-   66 m1      LCALL rom_address
     0061                           1- 3536     _00311_DS_:
                                    1- 3537     	.line	391, "main.c"; 	LED2ON();
                                    1- 3538     	MCALL	_LED2ON
     0061 2rrr                      3-   66 m1      LCALL rom_address
     0062                           1- 3539     _00312_DS_:
                                    1- 3540     	.line	393, "main.c"; 	LED1ON();
                                    1- 3541     	MCALL	_LED1ON
     0062 2rrr                      3-   66 m1      LCALL rom_address
     0063                           1- 3542     _00314_DS_:
                                    1- 3543     	.line	396, "main.c"; 	}
                                    1- 3544     	RETURN	
     0063 0010                      3-   40 m1      ret
                                    1- 3545     ; exit point of _ledShow
                                    1- 3547     ;***
                                    1- 3548     ;  pBlock Stats: dbName = C
                                    1- 3549     ;***
                                    1- 3550     ;has an exit
                                    1- 3551     ;functions called:
                                    1- 3552     ;   _LedInput
                                    1- 3553     ;   _LedInput
                                    1- 3554     ;; Starting pCode block
                                    1- 3555     .segment "code"; module=main, function=_initSys
     0000                           1- 3557     _initSys:
                                    1- 3558     ; 2 exit points
                                    1- 3559     	.line	310, "main.c"; 	DISI();
     0000 0013                      1- 3560     	DISI
                                    1- 3561     	.line	311, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input ;
     0001 2178                      1- 3562     	MOVIA	0x78
     0002 000r                      1- 3563     	IOST	_IOSTA
                                    1- 3564     	.line	312, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 3565     	CLRA	
     0004 000r                      1- 3566     	IOST	_IOSTB
                                    1- 3567     	.line	313, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 3568     	CLRR	_PORTB
                                    1- 3569     	.line	314, "main.c"; 	PORTA = 0x00;
                                    1- 3570     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 3571     	CLRR	_PORTA
                                    1- 3572     	.line	315, "main.c"; 	LedInput();
                                    1- 3573     	MCALL	_LedInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3574     	.line	316, "main.c"; 	APHCON = 0xBF;
     0009 21BF                      1- 3575     	MOVIA	0xbf
     000A 000r                      1- 3576     	IOST	_APHCON
                                    1- 3577     	.line	317, "main.c"; 	BPHCON = 0xFF;
     000B 21FF                      1- 3578     	MOVIA	0xff
     000C 00rr                      1- 3579     	MOVAR	_BPHCON
                                    1- 3580     	.line	318, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 3581     	MOVAR	_ABPLCON
                                    1- 3582     	.line	320, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1- 3583     	MOVIA	0x01
     000F 00rr                      1- 3584     	MOVAR	_INTE
                                    1- 3585     	.line	322, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 3586     	CLRA	
     0011 000r                      1- 3587     	IOST	_PCON1
                                    1- 3588     	.line	324, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 3589     	MOVIA	0x37
     0013 00rr                      1- 3590     	MOVAR	_TMR0
                                    1- 3591     	.line	325, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0014 0200                      1- 3592     	CLRA	
     0015 0003                      1- 3593     	T0MD	
                                    1- 3594     	.line	327, "main.c"; 	PCON1 = C_TMR0_En;
     0016 2101                      1- 3595     	MOVIA	0x01
     0017 000r                      1- 3596     	IOST	_PCON1
                                    1- 3597     	.line	330, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0018 2198                      1- 3598     	MOVIA	0x98
     0019 00rr                      1- 3599     	MOVAR	_PCON
                                    1- 3600     	.line	333, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001A 2101                      1- 3601     	MOVIA	0x01
     001B 000r                      1- 3602     	IOST	_PCON1
                                    1- 3603     	.line	334, "main.c"; 	ENI();
     001C 0004                      1- 3604     	ENI
                                    1- 3605     	.line	335, "main.c"; 	}
                                    1- 3606     	RETURN	
     001D 0010                      3-   40 m1      ret
                                    1- 3607     ; exit point of _initSys
                                    1- 3609     ;***
                                    1- 3610     ;  pBlock Stats: dbName = C
                                    1- 3611     ;***
                                    1- 3612     ;has an exit
                                    1- 3613     ;functions called:
                                    1- 3614     ;   _pwmStop
                                    1- 3615     ;   _pwmStop
                                    1- 3616     ;; Starting pCode block
                                    1- 3617     .segment "code"; module=main, function=_powerOff
     0000                           1- 3619     _powerOff:
                                    1- 3620     ; 2 exit points
                                    1- 3621     	.line	301, "main.c"; 	workStep = 0;
                                    1- 3622     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 3623     	CLRR	_workStep
                                    1- 3624     	.line	302, "main.c"; 	pwmStop();
                                    1- 3625     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3626     	.line	303, "main.c"; 	ledStep = 0;
                                    1- 3627     	BANKSEL	_ledStep
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 3628     	CLRR	_ledStep
                                    1- 3629     	.line	304, "main.c"; 	}
                                    1- 3630     	RETURN	
     0005 0010                      3-   40 m1      ret
                                    1- 3631     ; exit point of _powerOff
                                    1- 3633     ;***
                                    1- 3634     ;  pBlock Stats: dbName = C
                                    1- 3635     ;***
                                    1- 3636     ;has an exit
                                    1- 3637     ;functions called:
                                    1- 3638     ;   _keyRead
                                    1- 3639     ;   _pwmInit
                                    1- 3640     ;   _powerOff
                                    1- 3641     ;   _pwmInit
                                    1- 3642     ;   _keyRead
                                    1- 3643     ;   _pwmInit
                                    1- 3644     ;   _powerOff
                                    1- 3645     ;   _pwmInit
                                    1- 3646     ;1 compiler assigned register :
                                    1- 3647     ;   r0x105C
                                    1- 3648     ;; Starting pCode block
                                    1- 3649     .segment "code"; module=main, function=_keyCtr
                                    1- 3651     ;local variable name mapping:
     0000                           1- 3653     _keyCtr:
                                    1- 3654     ; 2 exit points
                                    1- 3655     	.line	235, "main.c"; 	char kclick = keyRead(0x40 & (~PORTA));
                                    1- 3656     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 3657     	COMR	_PORTA,W
                                    1- 3658     	BANKSEL	r0x105C
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 3659     	MOVAR	r0x105C
     0004 2140                      1- 3660     	MOVIA	0x40
     0005 10rr                      1- 3661     	ANDAR	r0x105C,F
     0006 01rr                      1- 3662     	MOVR	r0x105C,W
                                    1- 3663     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3664     	BANKSEL	r0x105C
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 3665     	MOVAR	r0x105C
                                    1- 3666     	.line	236, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 3667     	XORIA	0x01
     000B 0903                      1- 3668     	BTRSS	STATUS,2
                                    1- 3669     	MGOTO	_00270_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3670     	.line	238, "main.c"; 	count500ms = 0;
                                    1- 3671     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 3672     	CLRR	_count500ms
                                    1- 3673     	.line	239, "main.c"; 	ledLightTime = 0;
                                    1- 3674     	BANKSEL	_ledLightTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 3675     	CLRR	_ledLightTime
                                    1- 3676     	.line	240, "main.c"; 	if(workStep == 0)
                                    1- 3677     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 3678     	MOVR	_workStep,W
     0013 0903                      1- 3679     	BTRSS	STATUS,2
                                    1- 3680     	MGOTO	_00236_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3681     	.line	242, "main.c"; 	count1s = 0;
                                    1- 3682     	BANKSEL	_count1s
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 3683     	CLRR	_count1s
                                    1- 3684     	.line	248, "main.c"; 	return;
                                    1- 3685     	MGOTO	_00272_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
     0018                           1- 3686     _00236_DS_:
                                    1- 3687     	.line	250, "main.c"; 	ledTime = 0;
                                    1- 3688     	BANKSEL	_ledTime
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 3689     	CLRR	_ledTime
                                    1- 3690     	.line	251, "main.c"; 	if(++workStep > 8)
                                    1- 3691     	BANKSEL	_workStep
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 05rr                      1- 3692     	INCR	_workStep,F
                                    1- 3693     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3694     ;;unsigned compare: left >= lit (0x9=9), size=1
     001C 2109                      1- 3695     	MOVIA	0x09
     001D 04rr                      1- 3696     	SUBAR	_workStep,W
     001E 0803                      1- 3697     	BTRSS	STATUS,0
                                    1- 3698     	MGOTO	_00238_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3699     	.line	252, "main.c"; 	workStep = 1;
     0020 2101                      1- 3700     	MOVIA	0x01
     0021 00rr                      1- 3701     	MOVAR	_workStep
     0022                           1- 3702     _00238_DS_:
                                    1- 3703     	.line	253, "main.c"; 	shanshuoTime = 6;
     0022 2106                      1- 3704     	MOVIA	0x06
                                    1- 3705     	BANKSEL	_shanshuoTime
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 3706     	MOVAR	_shanshuoTime
                                    1- 3707     	.line	254, "main.c"; 	if(workStep == 1)
                                    1- 3708     	BANKSEL	_workStep
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1- 3709     	MOVR	_workStep,W
     0027 2401                      1- 3710     	XORIA	0x01
     0028 0903                      1- 3711     	BTRSS	STATUS,2
                                    1- 3712     	MGOTO	_00260_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3713     	.line	255, "main.c"; 	maxDuty = 40;
     002A 2128                      1- 3714     	MOVIA	0x28
                                    1- 3715     	BANKSEL	_maxDuty
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 00rr                      1- 3716     	MOVAR	_maxDuty
                                    1- 3717     	MGOTO	_00261_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
     002E                           1- 3718     _00260_DS_:
                                    1- 3719     	.line	256, "main.c"; 	else if(workStep == 2)
                                    1- 3720     	BANKSEL	_workStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 3721     	MOVR	_workStep,W
     0030 2402                      1- 3722     	XORIA	0x02
     0031 0903                      1- 3723     	BTRSS	STATUS,2
                                    1- 3724     	MGOTO	_00257_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3725     	.line	257, "main.c"; 	maxDuty = 44;
     0033 212C                      1- 3726     	MOVIA	0x2c
                                    1- 3727     	BANKSEL	_maxDuty
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 3728     	MOVAR	_maxDuty
                                    1- 3729     	MGOTO	_00261_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037                           1- 3730     _00257_DS_:
                                    1- 3731     	.line	258, "main.c"; 	else if(workStep == 3)
                                    1- 3732     	BANKSEL	_workStep
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 01rr                      1- 3733     	MOVR	_workStep,W
     0039 2403                      1- 3734     	XORIA	0x03
     003A 0903                      1- 3735     	BTRSS	STATUS,2
                                    1- 3736     	MGOTO	_00254_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3737     	.line	259, "main.c"; 	maxDuty = 48;
     003C 2130                      1- 3738     	MOVIA	0x30
                                    1- 3739     	BANKSEL	_maxDuty
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 00rr                      1- 3740     	MOVAR	_maxDuty
                                    1- 3741     	MGOTO	_00261_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
     0040                           1- 3742     _00254_DS_:
                                    1- 3743     	.line	260, "main.c"; 	else if(workStep == 4)
                                    1- 3744     	BANKSEL	_workStep
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 01rr                      1- 3745     	MOVR	_workStep,W
     0042 2404                      1- 3746     	XORIA	0x04
     0043 0903                      1- 3747     	BTRSS	STATUS,2
                                    1- 3748     	MGOTO	_00251_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3749     	.line	261, "main.c"; 	maxDuty = 52;
     0045 2134                      1- 3750     	MOVIA	0x34
                                    1- 3751     	BANKSEL	_maxDuty
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1- 3752     	MOVAR	_maxDuty
                                    1- 3753     	MGOTO	_00261_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049                           1- 3754     _00251_DS_:
                                    1- 3755     	.line	262, "main.c"; 	else if(workStep == 5)
                                    1- 3756     	BANKSEL	_workStep
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 01rr                      1- 3757     	MOVR	_workStep,W
     004B 2405                      1- 3758     	XORIA	0x05
     004C 0903                      1- 3759     	BTRSS	STATUS,2
                                    1- 3760     	MGOTO	_00248_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3761     	.line	263, "main.c"; 	maxDuty = 55;
     004E 2137                      1- 3762     	MOVIA	0x37
                                    1- 3763     	BANKSEL	_maxDuty
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 00rr                      1- 3764     	MOVAR	_maxDuty
                                    1- 3765     	MGOTO	_00261_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
     0052                           1- 3766     _00248_DS_:
                                    1- 3767     	.line	264, "main.c"; 	else if(workStep == 6)
                                    1- 3768     	BANKSEL	_workStep
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1- 3769     	MOVR	_workStep,W
     0054 2406                      1- 3770     	XORIA	0x06
     0055 0903                      1- 3771     	BTRSS	STATUS,2
                                    1- 3772     	MGOTO	_00245_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3773     	.line	265, "main.c"; 	maxDuty = 58;
     0057 213A                      1- 3774     	MOVIA	0x3a
                                    1- 3775     	BANKSEL	_maxDuty
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 00rr                      1- 3776     	MOVAR	_maxDuty
                                    1- 3777     	MGOTO	_00261_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B                           1- 3778     _00245_DS_:
                                    1- 3779     	.line	266, "main.c"; 	else if(workStep == 7)
                                    1- 3780     	BANKSEL	_workStep
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 01rr                      1- 3781     	MOVR	_workStep,W
     005D 2407                      1- 3782     	XORIA	0x07
     005E 0903                      1- 3783     	BTRSS	STATUS,2
                                    1- 3784     	MGOTO	_00242_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3785     	.line	267, "main.c"; 	maxDuty = 61;
     0060 213D                      1- 3786     	MOVIA	0x3d
                                    1- 3787     	BANKSEL	_maxDuty
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 00rr                      1- 3788     	MOVAR	_maxDuty
                                    1- 3789     	MGOTO	_00261_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
     0064                           1- 3790     _00242_DS_:
                                    1- 3791     	.line	268, "main.c"; 	else if(workStep == 8)
                                    1- 3792     	BANKSEL	_workStep
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1- 3793     	MOVR	_workStep,W
     0066 2408                      1- 3794     	XORIA	0x08
     0067 0903                      1- 3795     	BTRSS	STATUS,2
                                    1- 3796     	MGOTO	_00261_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3797     	.line	269, "main.c"; 	maxDuty = 64;
     0069 2140                      1- 3798     	MOVIA	0x40
                                    1- 3799     	BANKSEL	_maxDuty
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 00rr                      1- 3800     	MOVAR	_maxDuty
     006C                           1- 3801     _00261_DS_:
                                    1- 3802     	.line	270, "main.c"; 	if(workStep > 0)
                                    1- 3803     	BANKSEL	_workStep
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 01rr                      1- 3804     	MOVR	_workStep,W
     006E 0D03                      1- 3805     	BTRSC	STATUS,2
                                    1- 3806     	MGOTO	_00263_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3807     	.line	272, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 3808     	BANKSEL	_maxDuty
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 01rr                      1- 3809     	MOVR	_maxDuty,W
     0072 00rr                      1- 3810     	SFUN	_PWM2DUTY
                                    1- 3811     	.line	273, "main.c"; 	pwmInit();
                                    1- 3812     	MCALL	_pwmInit
     0073 2rrr                      3-   66 m1      LCALL rom_address
     0074                           1- 3813     _00263_DS_:
                                    1- 3814     	.line	275, "main.c"; 	ledStep = workStep;
                                    1- 3815     	BANKSEL	_workStep
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 01rr                      1- 3816     	MOVR	_workStep,W
                                    1- 3817     	BANKSEL	_ledStep
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 00rr                      1- 3818     	MOVAR	_ledStep
                                    1- 3819     	MGOTO	_00272_DS_
     0078 3rrr                      3-   63 m1      LGOTO rom_address
     0079                           1- 3820     _00270_DS_:
                                    1- 3821     	.line	277, "main.c"; 	else if(kclick == 2)
                                    1- 3822     	BANKSEL	r0x105C
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 01rr                      1- 3823     	MOVR	r0x105C,W
     007B 2402                      1- 3824     	XORIA	0x02
     007C 0903                      1- 3825     	BTRSS	STATUS,2
                                    1- 3826     	MGOTO	_00272_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3827     	.line	279, "main.c"; 	if(workStep > 0)
                                    1- 3828     	BANKSEL	_workStep
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 01rr                      1- 3829     	MOVR	_workStep,W
     0080 0D03                      1- 3830     	BTRSC	STATUS,2
                                    1- 3831     	MGOTO	_00265_DS_
     0081 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3832     	.line	281, "main.c"; 	powerOff();
                                    1- 3833     	MCALL	_powerOff
     0082 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3834     	MGOTO	_00266_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
     0084                           1- 3835     _00265_DS_:
                                    1- 3836     	.line	285, "main.c"; 	ledLightTime = 0;
                                    1- 3837     	BANKSEL	_ledLightTime
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 02rr                      1- 3838     	CLRR	_ledLightTime
                                    1- 3839     	.line	286, "main.c"; 	workStep = 1;
     0086 2101                      1- 3840     	MOVIA	0x01
                                    1- 3841     	BANKSEL	_workStep
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 00rr                      1- 3842     	MOVAR	_workStep
                                    1- 3843     	.line	287, "main.c"; 	PWM2DUTY = 80;
     0089 2150                      1- 3844     	MOVIA	0x50
     008A 00rr                      1- 3845     	SFUN	_PWM2DUTY
                                    1- 3846     	.line	288, "main.c"; 	currentDuty = 80;
                                    1- 3847     	BANKSEL	_currentDuty
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 00rr                      1- 3848     	MOVAR	_currentDuty
                                    1- 3849     	.line	289, "main.c"; 	maxDuty = 40;
     008D 2128                      1- 3850     	MOVIA	0x28
                                    1- 3851     	BANKSEL	_maxDuty
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 00rr                      1- 3852     	MOVAR	_maxDuty
                                    1- 3853     	.line	290, "main.c"; 	pwmInit();
                                    1- 3854     	MCALL	_pwmInit
     0090 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3855     	.line	291, "main.c"; 	shanshuoTime = 16;
     0091 2110                      1- 3856     	MOVIA	0x10
                                    1- 3857     	BANKSEL	_shanshuoTime
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 00rr                      1- 3858     	MOVAR	_shanshuoTime
     0094                           1- 3859     _00266_DS_:
                                    1- 3860     	.line	294, "main.c"; 	ledStep = workStep;
                                    1- 3861     	BANKSEL	_workStep
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 01rr                      1- 3862     	MOVR	_workStep,W
                                    1- 3863     	BANKSEL	_ledStep
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 00rr                      1- 3864     	MOVAR	_ledStep
     0098                           1- 3865     _00272_DS_:
                                    1- 3866     	.line	296, "main.c"; 	}
                                    1- 3867     	RETURN	
     0098 0010                      3-   40 m1      ret
                                    1- 3868     ; exit point of _keyCtr
                                    1- 3871     ;	code size estimation:
                                    1- 3872     ;	 1550+  381 =  1931 instructions ( 4624 byte)
                                    1- 3874     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
