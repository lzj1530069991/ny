
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_fgCtr
                                    1-   18     	extern	_LedCtr2
                                    1-   19     	extern	_checkInAD
                                    1-   20     	extern	_PORTAbits
                                    1-   21     	extern	_PORTBbits
                                    1-   22     	extern	_PCONbits
                                    1-   23     	extern	_BWUCONbits
                                    1-   24     	extern	_ABPLCONbits
                                    1-   25     	extern	_BPHCONbits
                                    1-   26     	extern	_INTEbits
                                    1-   27     	extern	_INTFbits
                                    1-   28     	extern	_ADMDbits
                                    1-   29     	extern	_ADRbits
                                    1-   30     	extern	_ADVREFHbits
                                    1-   31     	extern	_ADCRbits
                                    1-   32     	extern	_AWUCONbits
                                    1-   33     	extern	_PACONbits
                                    1-   34     	extern	_INTEDGbits
                                    1-   35     	extern	_ANAENbits
                                    1-   36     	extern	_RFCbits
                                    1-   37     	extern	_INTE2bits
                                    1-   38     	extern	_INDF
                                    1-   39     	extern	_TMR0
                                    1-   40     	extern	_PCL
                                    1-   41     	extern	_STATUS
                                    1-   42     	extern	_FSR
                                    1-   43     	extern	_PORTA
                                    1-   44     	extern	_PORTB
                                    1-   45     	extern	_PCON
                                    1-   46     	extern	_BWUCON
                                    1-   47     	extern	_PCHBUF
                                    1-   48     	extern	_ABPLCON
                                    1-   49     	extern	_BPHCON
                                    1-   50     	extern	_INTE
                                    1-   51     	extern	_INTF
                                    1-   52     	extern	_ADMD
                                    1-   53     	extern	_ADR
                                    1-   54     	extern	_ADD
                                    1-   55     	extern	_ADVREFH
                                    1-   56     	extern	_ADCR
                                    1-   57     	extern	_AWUCON
                                    1-   58     	extern	_PACON
                                    1-   59     	extern	_INTEDG
                                    1-   60     	extern	_TMRH
                                    1-   61     	extern	_ANAEN
                                    1-   62     	extern	_RFC
                                    1-   63     	extern	_TM3RH
                                    1-   64     	extern	_INTE2
                                    1-   65     	extern	_TMR1
                                    1-   66     	extern	_T1CR1
                                    1-   67     	extern	_T1CR2
                                    1-   68     	extern	_PWM1DUTY
                                    1-   69     	extern	_PS1CV
                                    1-   70     	extern	_BZ1CR
                                    1-   71     	extern	_IRCR
                                    1-   72     	extern	_TBHP
                                    1-   73     	extern	_TBHD
                                    1-   74     	extern	_TMR2
                                    1-   75     	extern	_T2CR1
                                    1-   76     	extern	_T2CR2
                                    1-   77     	extern	_PWM2DUTY
                                    1-   78     	extern	_PS2CV
                                    1-   79     	extern	_BZ2CR
                                    1-   80     	extern	_OSCCR
                                    1-   81     	extern	_TMR3
                                    1-   82     	extern	_T3CR1
                                    1-   83     	extern	_T3CR2
                                    1-   84     	extern	_PWM3DUTY
                                    1-   85     	extern	_PS3CV
                                    1-   86     	extern	_BZ3CR
                                    1-   87     	extern	_IOSTA
                                    1-   88     	extern	_IOSTB
                                    1-   89     	extern	_APHCON
                                    1-   90     	extern	_PS0CV
                                    1-   91     	extern	_BODCON
                                    1-   92     	extern	_CMPCR
                                    1-   93     	extern	_PCON1
                                    1-   94     	extern	_T0MD
                                    1-   95     	extern	___sdcc_saved_fsr
                                    1-   96     	extern	___sdcc_saved_stk00
                                    1-   97     	extern	___sdcc_saved_stk01
                                    1-   98     	extern	__nyc_ny8_startup
                                    1-   99     ;--------------------------------------------------------
                                    1-  100     ; global declarations
                                    1-  101     ;--------------------------------------------------------
                                    1-  102     	extern	_F_wait_eoc
                                    1-  103     	extern	_F_AIN2_Convert
                                    1-  104     	extern	_F_AIN3_Convert
                                    1-  105     	extern	_F_AIN4_Convert
                                    1-  106     	extern	_checkOutA
                                    1-  107     	extern	_checkBatAD
                                    1-  108     	extern	_initAD
                                    1-  109     	extern	_delay
                                    1-  110     	extern	_chrgCtr
                                    1-  111     	extern	_keyRead
                                    1-  112     	extern	_gotoSleep
                                    1-  113     	extern	_pwmStop
                                    1-  114     	extern	_pwmInit
                                    1-  115     	extern	_pwm1Stop
                                    1-  116     	extern	_pwm1Init
                                    1-  117     	extern	_LED8ON
                                    1-  118     	extern	_LED7ON
                                    1-  119     	extern	_LED6ON
                                    1-  120     	extern	_LED5ON
                                    1-  121     	extern	_LED4ON
                                    1-  122     	extern	_LED3ON
                                    1-  123     	extern	_LED2ON
                                    1-  124     	extern	_LED1ON
                                    1-  125     	extern	_LedInput
                                    1-  126     	extern	_ledShow
                                    1-  127     	extern	_initSys
                                    1-  128     	extern	_powerOff
                                    1-  129     	extern	_keyCtr
                                    1-  130     	extern	_isr
                                    1-  131     	extern	_main
                                    1-  132     	extern	_Status
                                    1-  133     	extern	_duty
                                    1-  134     	extern	_intCount
                                    1-  135     	extern	_count500ms
                                    1-  136     	extern	_keyCount
                                    1-  137     	extern	_workStep
                                    1-  138     	extern	_ledStep
                                    1-  139     	extern	_fgCount
                                    1-  140     	extern	_fgPRD
                                    1-  141     	extern	_preFG
                                    1-  142     	extern	_maxDuty
                                    1-  143     	extern	_pwStep
                                    1-  144     	extern	_R_AIN4_DATA
                                    1-  145     	extern	_R_AIN4_DATA_LB
                                    1-  146     	extern	_R_AIN3_DATA
                                    1-  147     	extern	_R_AIN3_DATA_LB
                                    1-  148     	extern	_R_AIN2_DATA
                                    1-  149     	extern	_R_AIN2_DATA_LB
                                    1-  150     	extern	_chrgTime
                                    1-  151     	extern	_startStep
                                    1-  152     	extern	_sleepTime
                                    1-  153     	extern	_count200ms
                                    1-  154     	extern	_count1s
                                    1-  155     	extern	_count900s
                                    1-  156     	extern	_lowBatTime
                                    1-  157     	extern	_ledTime
                                    1-  158     	extern	_overCount
                                    1-  159     	extern	_chrgCount
                                    1-  160     	extern	_ledLightTime
                                    1-  161     	extern	_currentDuty
                                    1-  162     	extern	_fullCount
                                    1-  163     	extern	_shanshuoTime
                                    1-  164     	extern	_firstTime
                                    1-  165     	extern	_tempDuty
                                    1-  166     	extern	_lowCount
                                    1-  167     	extern	_longPressFlag
                                    1-  168     	extern	_IntFlag
                                    1-  169     	extern	_chrgFlag
                                    1-  170     	extern	_redLedFlag
                                    1-  171     	extern	_tempLedStep
                                    1-  172     	extern	_count5S
                                    1-  173     	extern	_ledDeadTime
                                    1-  174     	extern	_lockLedStep
                                    1-  175     	extern	_shandengTime
                                    1-  176     	extern	_lowBat
                                    1-  177     	extern	_debug
                                    1-  179     	extern PSAVE
                                    1-  180     	extern SSAVE
                                    1-  181     	extern WSAVE
                                    1-  182     	extern STK02
                                    1-  183     	extern STK01
                                    1-  184     	extern STK00
                                    1-  186     .segment "uninit", 0x20000040
 20000040                           1-  187     PSAVE:
                                    1-  188     	.res 1
 20000041                           1-  189     SSAVE:
                                    1-  190     	.res 1
 20000042                           1-  191     WSAVE:
                                    1-  192     	.res 1
 20000043                           1-  193     STK02:
                                    1-  194     	.res 1
 20000044                           1-  195     STK01:
                                    1-  196     	.res 1
 20000045                           1-  197     STK00:
                                    1-  198     	.res 1
                                    1-  200     ;--------------------------------------------------------
                                    1-  201     ; global definitions
                                    1-  202     ;--------------------------------------------------------
                                    1-  203     .segment "uninit"
     0000                           1-  204     _R_AIN4_DATA:
                                    1-  205     	.res	2
                                    1-  208     .segment "uninit"
     0000                           1-  209     _R_AIN4_DATA_LB:
                                    1-  210     	.res	1
                                    1-  213     .segment "uninit"
     0000                           1-  214     _R_AIN3_DATA:
                                    1-  215     	.res	2
                                    1-  218     .segment "uninit"
     0000                           1-  219     _R_AIN3_DATA_LB:
                                    1-  220     	.res	1
                                    1-  223     .segment "uninit"
     0000                           1-  224     _R_AIN2_DATA:
                                    1-  225     	.res	2
                                    1-  228     .segment "uninit"
     0000                           1-  229     _R_AIN2_DATA_LB:
                                    1-  230     	.res	1
                                    1-  233     ;--------------------------------------------------------
                                    1-  234     ; absolute symbol definitions
                                    1-  235     ;--------------------------------------------------------
                                    1-  236     ;--------------------------------------------------------
                                    1-  237     ; compiler-defined variables
                                    1-  238     ;--------------------------------------------------------
                                    1-  239     .segment "uninit"
     0000                           1-  240     r0x1060:
                                    1-  241     	.res	1
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x1055:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x105F:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x105E:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x105D:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x105C:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x105B:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x105A:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x1059:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x1058:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1057:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1056:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1054:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x104F:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x1050:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x1051:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x1053:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x1033:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x1034:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x104D:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x104E:
                                    1-  301     	.res	1
                                    1-  302     .segment "uninit"
     0000                           1-  303     r0x1049:
                                    1-  304     	.res	1
                                    1-  305     .segment "uninit"
     0000                           1-  306     r0x104A:
                                    1-  307     	.res	1
                                    1-  308     .segment "uninit"
     0000                           1-  309     r0x1041:
                                    1-  310     	.res	1
                                    1-  311     .segment "uninit"
     0000                           1-  312     r0x1042:
                                    1-  313     	.res	1
                                    1-  314     .segment "uninit"
     0000                           1-  315     r0x1043:
                                    1-  316     	.res	1
                                    1-  317     .segment "uninit"
     0000                           1-  318     r0x1046:
                                    1-  319     	.res	1
                                    1-  320     .segment "uninit"
     0000                           1-  321     r0x103B:
                                    1-  322     	.res	1
                                    1-  323     .segment "uninit"
     0000                           1-  324     r0x103C:
                                    1-  325     	.res	1
                                    1-  326     .segment "uninit"
     0000                           1-  327     r0x103D:
                                    1-  328     	.res	1
                                    1-  329     .segment "uninit"
     0000                           1-  330     r0x1040:
                                    1-  331     	.res	1
                                    1-  332     .segment "uninit"
     0000                           1-  333     r0x1035:
                                    1-  334     	.res	1
                                    1-  335     .segment "uninit"
     0000                           1-  336     r0x1036:
                                    1-  337     	.res	1
                                    1-  338     .segment "uninit"
     0000                           1-  339     r0x1037:
                                    1-  340     	.res	1
                                    1-  341     .segment "uninit"
     0000                           1-  342     r0x103A:
                                    1-  343     	.res	1
                                    1-  344     ;--------------------------------------------------------
                                    1-  345     ; initialized data
                                    1-  346     ;--------------------------------------------------------
                                    1-  348     .segment "idata"
     0000                           1-  349     _Status:
     0000 0000                      1-  350     	dw	0x00
                                    1-  354     .segment "idata"
     0000                           1-  355     _duty:
     0000 0000 0000                 1-  356     	dw	0x00, 0x00
                                    1-  360     .segment "idata"
     0000                           1-  361     _intCount:
     0000 0000                      1-  362     	dw	0x00
                                    1-  366     .segment "idata"
     0000                           1-  367     _count500ms:
     0000 0000                      1-  368     	dw	0x00
                                    1-  372     .segment "idata"
     0000                           1-  373     _keyCount:
     0000 0000                      1-  374     	dw	0x00
                                    1-  378     .segment "idata"
     0000                           1-  379     _workStep:
     0000 0000                      1-  380     	dw	0x00
                                    1-  384     .segment "idata"
     0000                           1-  385     _ledStep:
     0000 0000                      1-  386     	dw	0x00
                                    1-  390     .segment "idata"
     0000                           1-  391     _fgCount:
     0000 0000 0000                 1-  392     	dw	0x00, 0x00
                                    1-  396     .segment "idata"
     0000                           1-  397     _fgPRD:
     0000 0000 0000                 1-  398     	dw	0x00, 0x00
                                    1-  402     .segment "idata"
     0000                           1-  403     _preFG:
     0000 0000                      1-  404     	dw	0x00
                                    1-  408     .segment "idata"
     0000                           1-  409     _maxDuty:
     0000 0000                      1-  410     	dw	0x00
                                    1-  414     .segment "idata"
     0000                           1-  415     _pwStep:
     0000 0000                      1-  416     	dw	0x00
                                    1-  420     .segment "idata"
     0000                           1-  421     _chrgTime:
     0000 0000 0000                 1-  422     	dw	0x00, 0x00
                                    1-  426     .segment "idata"
     0000                           1-  427     _startStep:
     0000 0000                      1-  428     	dw	0x00
                                    1-  432     .segment "idata"
     0000                           1-  433     _sleepTime:
     0000 0000 0000                 1-  434     	dw	0x00, 0x00
                                    1-  438     .segment "idata"
     0000                           1-  439     _count200ms:
     0000 0000                      1-  440     	dw	0x00
                                    1-  444     .segment "idata"
     0000                           1-  445     _count1s:
     0000 0000                      1-  446     	dw	0x00
                                    1-  450     .segment "idata"
     0000                           1-  451     _count900s:
     0000 0000 0000                 1-  452     	dw	0x00, 0x00
                                    1-  456     .segment "idata"
     0000                           1-  457     _lowBatTime:
     0000 0000                      1-  458     	dw	0x00
                                    1-  462     .segment "idata"
     0000                           1-  463     _ledTime:
     0000 0000                      1-  464     	dw	0x00
                                    1-  468     .segment "idata"
     0000                           1-  469     _overCount:
     0000 0000                      1-  470     	dw	0x00
                                    1-  474     .segment "idata"
     0000                           1-  475     _chrgCount:
     0000 0000                      1-  476     	dw	0x00
                                    1-  480     .segment "idata"
     0000                           1-  481     _ledLightTime:
     0000 0000                      1-  482     	dw	0x00
                                    1-  486     .segment "idata"
     0000                           1-  487     _currentDuty:
     0000 0000                      1-  488     	dw	0x00
                                    1-  492     .segment "idata"
     0000                           1-  493     _fullCount:
     0000 0000                      1-  494     	dw	0x00
                                    1-  498     .segment "idata"
     0000                           1-  499     _shanshuoTime:
     0000 0000                      1-  500     	dw	0x00
                                    1-  504     .segment "idata"
     0000                           1-  505     _firstTime:
     0000 0000                      1-  506     	dw	0x00
                                    1-  510     .segment "idata"
     0000                           1-  511     _tempDuty:
     0000 0000                      1-  512     	dw	0x00
                                    1-  516     .segment "idata"
     0000                           1-  517     _lowCount:
     0000 0000                      1-  518     	dw	0x00
                                    1-  522     .segment "idata"
     0000                           1-  523     _longPressFlag:
     0000 0000                      1-  524     	dw	0x00
                                    1-  528     .segment "idata"
     0000                           1-  529     _IntFlag:
     0000 0000                      1-  530     	dw	0x00
                                    1-  534     .segment "idata"
     0000                           1-  535     _chrgFlag:
     0000 0000                      1-  536     	dw	0x00
                                    1-  540     .segment "idata"
     0000                           1-  541     _redLedFlag:
     0000 0000                      1-  542     	dw	0x00
                                    1-  546     .segment "idata"
     0000                           1-  547     _tempLedStep:
     0000 0000                      1-  548     	dw	0x00
                                    1-  552     .segment "idata"
     0000                           1-  553     _count5S:
     0000 0000 0000                 1-  554     	dw	0x00, 0x00
                                    1-  558     .segment "idata"
     0000                           1-  559     _ledDeadTime:
     0000 0000                      1-  560     	dw	0x00
                                    1-  564     .segment "idata"
     0000                           1-  565     _lockLedStep:
     0000 0000                      1-  566     	dw	0x00
                                    1-  570     .segment "idata"
     0000                           1-  571     _shandengTime:
     0000 0000 0000                 1-  572     	dw	0x00, 0x00
                                    1-  576     .segment "idata"
     0000                           1-  577     _lowBat:
     0000 0000 0000                 1-  578     	dw	0x00, 0x00
                                    1-  582     .segment "idata"
     0000                           1-  583     _debug:
     0000 0000                      1-  584     	dw	0x00
                                    1-  587     ;--------------------------------------------------------
                                    1-  588     ; overlayable items in internal ram 
                                    1-  589     ;--------------------------------------------------------
                                    1-  590     ;	udata_ovr
                                    1-  591     ;--------------------------------------------------------
                                    1-  592     ; reset vector 
                                    1-  593     ;--------------------------------------------------------
                                    1-  594     ORG	0x0000
     0000 3rrr                      1-  595     	LGOTO	__nyc_ny8_startup
                                    1-  596     ;--------------------------------------------------------
                                    1-  597     ; interrupt and initialization code
                                    1-  598     ;--------------------------------------------------------
                                    1-  599     ORG 0x0008
                                    1-  600     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  602     .segment "code"
     0000                           1-  603     __sdcc_interrupt:
                                    1-  604     ;***
                                    1-  605     ;  pBlock Stats: dbName = I
                                    1-  606     ;***
                                    1-  607     ;2 compiler assigned registers:
                                    1-  608     ;   STK00
                                    1-  609     ;   STK01
                                    1-  610     ;; Starting pCode block
     0000                           1-  611     _isr:
                                    1-  612     ; 0 exit points
                                    1-  613     	.line	120, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  614     	MOVAR	WSAVE
     0001 1503                      1-  615     	SWAPR	STATUS,W
     0002 0283                      1-  616     	CLRR	STATUS
     0003 00rr                      1-  617     	MOVAR	SSAVE
     0004 010A                      1-  618     	MOVR	PCHBUF,W
     0005 028A                      1-  619     	CLRR	PCHBUF
     0006 00rr                      1-  620     	MOVAR	PSAVE
     0007 0104                      1-  621     	MOVR	FSR,W
                                    1-  622     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  623     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  624     	MOVR	STK00,W
                                    1-  625     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  626     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  627     	MOVR	STK01,W
                                    1-  628     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  629     	MOVAR	___sdcc_saved_stk01
                                    1-  630     	.line	122, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  631     	BTRSS	_INTFbits,0
                                    1-  632     	MGOTO	_00128_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  633     	.line	124, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  634     	MOVIA	0x37
     0013 03rr                      1-  635     	ADDAR	_TMR0,F
                                    1-  636     	.line	126, "main.c"; 	if(++intCount >= 100)
                                    1-  637     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  638     	INCR	_intCount,F
                                    1-  639     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  640     	MOVIA	0x64
     0017 04rr                      1-  641     	SUBAR	_intCount,W
     0018 0803                      1-  642     	BTRSS	STATUS,0
                                    1-  643     	MGOTO	_00128_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  644     	.line	128, "main.c"; 	IntFlag = 1;
     001A 2101                      1-  645     	MOVIA	0x01
                                    1-  646     	BANKSEL	_IntFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  647     	MOVAR	_IntFlag
                                    1-  648     	.line	129, "main.c"; 	intCount = 0;
                                    1-  649     	BANKSEL	_intCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  650     	CLRR	_intCount
                                    1-  651     	.line	130, "main.c"; 	if(workStep)
                                    1-  652     	BANKSEL	_workStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 01rr                      1-  653     	MOVR	_workStep,W
     0021 0D03                      1-  654     	BTRSC	STATUS,2
                                    1-  655     	MGOTO	_00106_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  656     	.line	131, "main.c"; 	++fgCount;
                                    1-  657     	BANKSEL	_fgCount
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 05rr                      1-  658     	INCR	_fgCount,F
     0025 0D03                      1-  659     	BTRSC	STATUS,2
     0026 05rr                      1-  660     	INCR	(_fgCount + 1),F
     0027                           1-  661     _00106_DS_:
                                    1-  662     	.line	132, "main.c"; 	if(++count500ms >= 60)
                                    1-  663     	BANKSEL	_count500ms
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 05rr                      1-  664     	INCR	_count500ms,F
                                    1-  665     ;;unsigned compare: left < lit (0x3C=60), size=1
     0029 213C                      1-  666     	MOVIA	0x3c
     002A 04rr                      1-  667     	SUBAR	_count500ms,W
     002B 0C03                      1-  668     	BTRSC	STATUS,0
                                    1-  669     	.line	133, "main.c"; 	count500ms = 0;
     002C 02rr                      1-  670     	CLRR	_count500ms
                                    1-  671     	.line	134, "main.c"; 	if(++count200ms >= 20)
                                    1-  672     	BANKSEL	_count200ms
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 05rr                      1-  673     	INCR	_count200ms,F
     002F 2114                      1-  674     	MOVIA	0x14
     0030 04rr                      1-  675     	SUBAR	_count200ms,W
     0031 0803                      1-  676     	BTRSS	STATUS,0
                                    1-  677     	MGOTO	_00112_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  678     	.line	136, "main.c"; 	count200ms = 0;
     0033 02rr                      1-  679     	CLRR	_count200ms
                                    1-  680     	.line	137, "main.c"; 	if(ledDeadTime > 0)
                                    1-  681     	BANKSEL	_ledDeadTime
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 01rr                      1-  682     	MOVR	_ledDeadTime,W
     0036 0903                      1-  683     	BTRSS	STATUS,2
                                    1-  684     	.line	138, "main.c"; 	--ledDeadTime;
     0037 06rr                      1-  685     	DECR	_ledDeadTime,F
     0038                           1-  686     _00112_DS_:
                                    1-  687     	.line	140, "main.c"; 	if(++count1s >= 100)
                                    1-  688     	BANKSEL	_count1s
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 05rr                      1-  689     	INCR	_count1s,F
     003A 2164                      1-  690     	MOVIA	0x64
     003B 04rr                      1-  691     	SUBAR	_count1s,W
     003C 0803                      1-  692     	BTRSS	STATUS,0
                                    1-  693     	MGOTO	_00128_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  694     	.line	142, "main.c"; 	count1s = 0;
     003E 02rr                      1-  695     	CLRR	_count1s
                                    1-  696     	.line	143, "main.c"; 	if(chrgFlag == 1 && pwStep == 8)
                                    1-  697     	BANKSEL	_chrgFlag
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 01rr                      1-  698     	MOVR	_chrgFlag,W
     0041 2401                      1-  699     	XORIA	0x01
     0042 0903                      1-  700     	BTRSS	STATUS,2
                                    1-  701     	MGOTO	_00114_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  702     	BANKSEL	_pwStep
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 01rr                      1-  703     	MOVR	_pwStep,W
     0046 2408                      1-  704     	XORIA	0x08
     0047 0903                      1-  705     	BTRSS	STATUS,2
                                    1-  706     	MGOTO	_00114_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  707     	.line	145, "main.c"; 	++chrgTime;
                                    1-  708     	BANKSEL	_chrgTime
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 05rr                      1-  709     	INCR	_chrgTime,F
     004B 0D03                      1-  710     	BTRSC	STATUS,2
     004C 05rr                      1-  711     	INCR	(_chrgTime + 1),F
     004D                           1-  712     _00114_DS_:
                                    1-  713     	.line	147, "main.c"; 	if(ledLightTime > 0)
                                    1-  714     	BANKSEL	_ledLightTime
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 01rr                      1-  715     	MOVR	_ledLightTime,W
     004F 0903                      1-  716     	BTRSS	STATUS,2
                                    1-  717     	.line	148, "main.c"; 	--ledLightTime;
     0050 06rr                      1-  718     	DECR	_ledLightTime,F
                                    1-  719     	.line	149, "main.c"; 	if(shanshuoTime > 0)
                                    1-  720     	BANKSEL	_shanshuoTime
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 01rr                      1-  721     	MOVR	_shanshuoTime,W
     0053 0903                      1-  722     	BTRSS	STATUS,2
                                    1-  723     	.line	150, "main.c"; 	--shanshuoTime;
     0054 06rr                      1-  724     	DECR	_shanshuoTime,F
                                    1-  725     	.line	151, "main.c"; 	if(workStep)
                                    1-  726     	BANKSEL	_workStep
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 01rr                      1-  727     	MOVR	_workStep,W
     0057 0D03                      1-  728     	BTRSC	STATUS,2
                                    1-  729     	MGOTO	_00121_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  730     	.line	153, "main.c"; 	++count900s;
                                    1-  731     	BANKSEL	_count900s
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 05rr                      1-  732     	INCR	_count900s,F
     005B 0D03                      1-  733     	BTRSC	STATUS,2
     005C 05rr                      1-  734     	INCR	(_count900s + 1),F
                                    1-  735     	MGOTO	_00128_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
     005E                           1-  736     _00121_DS_:
                                    1-  737     	.line	157, "main.c"; 	count900s = 0;
                                    1-  738     	BANKSEL	_count900s
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 02rr                      1-  739     	CLRR	_count900s
     0060 02rr                      1-  740     	CLRR	(_count900s + 1)
     0061                           1-  741     _00128_DS_:
                                    1-  742     	.line	166, "main.c"; 	if(INTFbits.PABIF)
     0061 08rr                      1-  743     	BTRSS	_INTFbits,1
                                    1-  744     	MGOTO	_00130_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  745     	.line	168, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0063 21FD                      1-  746     	MOVIA	0xfd
     0064 00rr                      1-  747     	MOVAR	_INTF
     0065                           1-  748     _00130_DS_:
                                    1-  749     	.line	171, "main.c"; 	INTF = 0;
     0065 02rr                      1-  750     	CLRR	_INTF
                                    1-  751     	.line	173, "main.c"; 	}
                                    1-  752     	BANKSEL	___sdcc_saved_stk01
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 01rr                      1-  753     	MOVR	___sdcc_saved_stk01,W
     0068 00rr                      1-  754     	MOVAR	STK01
                                    1-  755     	BANKSEL	___sdcc_saved_stk00
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 01rr                      1-  756     	MOVR	___sdcc_saved_stk00,W
     006B 00rr                      1-  757     	MOVAR	STK00
                                    1-  758     	BANKSEL	___sdcc_saved_fsr
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 01rr                      1-  759     	MOVR	___sdcc_saved_fsr,W
     006E 0084                      1-  760     	MOVAR	FSR
     006F 01rr                      1-  761     	MOVR	PSAVE,W
     0070 008A                      1-  762     	MOVAR	PCHBUF
     0071 0283                      1-  763     	CLRR	STATUS
     0072 15rr                      1-  764     	SWAPR	SSAVE,W
     0073 0083                      1-  765     	MOVAR	STATUS
     0074 15rr                      1-  766     	SWAPR	WSAVE,F
     0075 15rr                      1-  767     	SWAPR	WSAVE,W
     0076                           1-  768     END_OF_INTERRUPT:
     0076 0011                      1-  769     	RETIE	
                                    1-  771     ;--------------------------------------------------------
                                    1-  772     ; code
                                    1-  773     ;--------------------------------------------------------
                                    1-  774     ;***
                                    1-  775     ;  pBlock Stats: dbName = M
                                    1-  776     ;***
                                    1-  777     ;has an exit
                                    1-  778     ;functions called:
                                    1-  779     ;   _initSys
                                    1-  780     ;   _initAD
                                    1-  781     ;   _ledShow
                                    1-  782     ;   _keyCtr
                                    1-  783     ;   _checkBatAD
                                    1-  784     ;   _checkOutA
                                    1-  785     ;   _chrgCtr
                                    1-  786     ;   _powerOff
                                    1-  787     ;   _gotoSleep
                                    1-  788     ;   _powerOff
                                    1-  789     ;   _initSys
                                    1-  790     ;   _initAD
                                    1-  791     ;   _ledShow
                                    1-  792     ;   _keyCtr
                                    1-  793     ;   _checkBatAD
                                    1-  794     ;   _checkOutA
                                    1-  795     ;   _chrgCtr
                                    1-  796     ;   _powerOff
                                    1-  797     ;   _gotoSleep
                                    1-  798     ;   _powerOff
                                    1-  799     ;; Starting pCode block
                                    1-  800     .segment "code"; module=main, function=_main
     0000                           1-  802     _main:
                                    1-  803     ; 2 exit points
                                    1-  804     	.line	177, "main.c"; 	initSys();
                                    1-  805     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  806     	.line	178, "main.c"; 	initAD();
                                    1-  807     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  808     _00166_DS_:
                                    1-  809     	.line	181, "main.c"; 	CLRWDT();
     0002 0002                      1-  810     	clrwdt
                                    1-  811     	.line	182, "main.c"; 	ledShow();
                                    1-  812     	MCALL	_ledShow
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  813     	.line	183, "main.c"; 	if(!IntFlag)
                                    1-  814     	BANKSEL	_IntFlag
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  815     	MOVR	_IntFlag,W
     0006 0D03                      1-  816     	BTRSC	STATUS,2
                                    1-  817     	MGOTO	_00166_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  818     	.line	185, "main.c"; 	IntFlag = 0;
     0008 02rr                      1-  819     	CLRR	_IntFlag
                                    1-  820     	.line	186, "main.c"; 	if(chrgFlag == 0)
                                    1-  821     	BANKSEL	_chrgFlag
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 01rr                      1-  822     	MOVR	_chrgFlag,W
     000B 0D03                      1-  823     	BTRSC	STATUS,2
                                    1-  824     	.line	187, "main.c"; 	keyCtr();
                                    1-  825     	MCALL	_keyCtr
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  826     	.line	188, "main.c"; 	if(count200ms < 5)
     000D 2105                      1-  827     	MOVIA	0x05
                                    1-  828     	BANKSEL	_count200ms
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 04rr                      1-  829     	SUBAR	_count200ms,W
     0010 0C03                      1-  830     	BTRSC	STATUS,0
                                    1-  831     	MGOTO	_00143_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  832     	.line	190, "main.c"; 	checkBatAD();
                                    1-  833     	MCALL	_checkBatAD
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  834     	MGOTO	_00144_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  835     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  836     ;;unsigned compare: left >= lit (0x9=9), size=1
     0014                           1-  837     _00143_DS_:
                                    1-  838     	.line	192, "main.c"; 	else if(count200ms > 8 && count200ms < 11)
     0014 2109                      1-  839     	MOVIA	0x09
                                    1-  840     	BANKSEL	_count200ms
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 04rr                      1-  841     	SUBAR	_count200ms,W
     0017 0803                      1-  842     	BTRSS	STATUS,0
                                    1-  843     	MGOTO	_00144_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  844     ;;unsigned compare: left < lit (0xB=11), size=1
     0019 210B                      1-  845     	MOVIA	0x0b
     001A 04rr                      1-  846     	SUBAR	_count200ms,W
     001B 0803                      1-  847     	BTRSS	STATUS,0
                                    1-  848     	.line	194, "main.c"; 	checkOutA();
                                    1-  849     	MCALL	_checkOutA
     001C 2rrr                      3-   66 m1      LCALL rom_address
     001D                           1-  850     _00144_DS_:
                                    1-  851     	.line	196, "main.c"; 	chrgCtr();
                                    1-  852     	MCALL	_chrgCtr
     001D 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  853     	.line	198, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  854     	BANKSEL	_workStep
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 01rr                      1-  855     	MOVR	_workStep,W
     0020 0D03                      1-  856     	BTRSC	STATUS,2
                                    1-  857     	MGOTO	_00146_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  858     	BANKSEL	_currentDuty
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1-  859     	MOVR	_currentDuty,W
                                    1-  860     	BANKSEL	_maxDuty
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 04rr                      1-  861     	SUBAR	_maxDuty,W
     0026 0C03                      1-  862     	BTRSC	STATUS,0
                                    1-  863     	MGOTO	_00146_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  864     	.line	200, "main.c"; 	currentDuty = currentDuty - 10;
     0028 21F6                      1-  865     	MOVIA	0xf6
                                    1-  866     	BANKSEL	_currentDuty
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 03rr                      1-  867     	ADDAR	_currentDuty,F
                                    1-  868     	.line	201, "main.c"; 	PWM2DUTY = currentDuty;
     002B 01rr                      1-  869     	MOVR	_currentDuty,W
     002C 00rr                      1-  870     	SFUN	_PWM2DUTY
                                    1-  871     ;;unsigned compare: left < lit (0x5=5), size=1
     002D                           1-  872     _00146_DS_:
                                    1-  873     	.line	204, "main.c"; 	if(overCount >= 5 && workStep > 0)
     002D 2105                      1-  874     	MOVIA	0x05
                                    1-  875     	BANKSEL	_overCount
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 04rr                      1-  876     	SUBAR	_overCount,W
     0030 0803                      1-  877     	BTRSS	STATUS,0
                                    1-  878     	MGOTO	_00151_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  879     	BANKSEL	_workStep
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 01rr                      1-  880     	MOVR	_workStep,W
     0034 0D03                      1-  881     	BTRSC	STATUS,2
                                    1-  882     	MGOTO	_00151_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  883     	.line	206, "main.c"; 	if(++count5S > 500)
                                    1-  884     	BANKSEL	_count5S
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 05rr                      1-  885     	INCR	_count5S,F
     0038 0D03                      1-  886     	BTRSC	STATUS,2
     0039 05rr                      1-  887     	INCR	(_count5S + 1),F
                                    1-  888     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  889     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     003A 2101                      1-  890     	MOVIA	0x01
     003B 04rr                      1-  891     	SUBAR	(_count5S + 1),W
     003C 0903                      1-  892     	BTRSS	STATUS,2
                                    1-  893     	MGOTO	_00232_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
     003E 21F5                      1-  894     	MOVIA	0xf5
     003F 04rr                      1-  895     	SUBAR	_count5S,W
     0040                           1-  896     _00232_DS_:
     0040 0803                      1-  897     	BTRSS	STATUS,0
                                    1-  898     	MGOTO	_00152_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  899     	.line	208, "main.c"; 	overCount = 0;
                                    1-  900     	BANKSEL	_overCount
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 02rr                      1-  901     	CLRR	_overCount
                                    1-  902     	.line	209, "main.c"; 	count5S = 0;
                                    1-  903     	BANKSEL	_count5S
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 02rr                      1-  904     	CLRR	_count5S
     0046 02rr                      1-  905     	CLRR	(_count5S + 1)
                                    1-  906     	.line	210, "main.c"; 	ledDeadTime = 25;
     0047 2119                      1-  907     	MOVIA	0x19
                                    1-  908     	BANKSEL	_ledDeadTime
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1-  909     	MOVAR	_ledDeadTime
                                    1-  910     	.line	211, "main.c"; 	powerOff();
                                    1-  911     	MCALL	_powerOff
     004A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  912     	MGOTO	_00152_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C                           1-  913     _00151_DS_:
                                    1-  914     	.line	216, "main.c"; 	count5S = 0;
                                    1-  915     	BANKSEL	_count5S
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 02rr                      1-  916     	CLRR	_count5S
     004E 02rr                      1-  917     	CLRR	(_count5S + 1)
     004F                           1-  918     _00152_DS_:
                                    1-  919     	.line	218, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x20) == 0 && ledLightTime == 0 && ledDeadTime == 0 && shandengTime == 0)
                                    1-  920     	BANKSEL	_workStep
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 01rr                      1-  921     	MOVR	_workStep,W
     0051 0903                      1-  922     	BTRSS	STATUS,2
                                    1-  923     	MGOTO	_00157_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  924     	BANKSEL	_keyCount
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 01rr                      1-  925     	MOVR	_keyCount,W
     0055 0903                      1-  926     	BTRSS	STATUS,2
                                    1-  927     	MGOTO	_00157_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  928     	BANKSEL	_PORTA
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 0Err                      1-  929     	BTRSC	_PORTA,5
                                    1-  930     	MGOTO	_00157_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  931     	BANKSEL	_ledLightTime
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 01rr                      1-  932     	MOVR	_ledLightTime,W
     005C 0903                      1-  933     	BTRSS	STATUS,2
                                    1-  934     	MGOTO	_00157_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  935     	BANKSEL	_ledDeadTime
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 01rr                      1-  936     	MOVR	_ledDeadTime,W
     0060 0903                      1-  937     	BTRSS	STATUS,2
                                    1-  938     	MGOTO	_00157_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  939     	BANKSEL	_shandengTime
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 01rr                      1-  940     	MOVR	_shandengTime,W
     0064 11rr                      1-  941     	IORAR	(_shandengTime + 1),W
     0065 0903                      1-  942     	BTRSS	STATUS,2
                                    1-  943     	MGOTO	_00157_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  944     	.line	220, "main.c"; 	if(++sleepTime > 30)
                                    1-  945     	BANKSEL	_sleepTime
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 05rr                      1-  946     	INCR	_sleepTime,F
     0069 0D03                      1-  947     	BTRSC	STATUS,2
     006A 05rr                      1-  948     	INCR	(_sleepTime + 1),F
                                    1-  949     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  950     ;;unsigned compare: left >= lit (0x1F=31), size=2
     006B 2100                      1-  951     	MOVIA	0x00
     006C 04rr                      1-  952     	SUBAR	(_sleepTime + 1),W
     006D 0903                      1-  953     	BTRSS	STATUS,2
                                    1-  954     	MGOTO	_00233_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
     006F 211F                      1-  955     	MOVIA	0x1f
     0070 04rr                      1-  956     	SUBAR	_sleepTime,W
     0071                           1-  957     _00233_DS_:
     0071 0803                      1-  958     	BTRSS	STATUS,0
                                    1-  959     	MGOTO	_00157_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  960     	.line	222, "main.c"; 	gotoSleep();
                                    1-  961     	MCALL	_gotoSleep
     0073 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  962     ;;unsigned compare: left < lit (0x384=900), size=2
     0074                           1-  963     _00157_DS_:
                                    1-  964     	.line	226, "main.c"; 	if(count900s >= 900)
     0074 2103                      1-  965     	MOVIA	0x03
                                    1-  966     	BANKSEL	_count900s
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 04rr                      1-  967     	SUBAR	(_count900s + 1),W
     0077 0903                      1-  968     	BTRSS	STATUS,2
                                    1-  969     	MGOTO	_00234_DS_
     0078 3rrr                      3-   63 m1      LGOTO rom_address
     0079 2184                      1-  970     	MOVIA	0x84
     007A 04rr                      1-  971     	SUBAR	_count900s,W
     007B                           1-  972     _00234_DS_:
     007B 0803                      1-  973     	BTRSS	STATUS,0
                                    1-  974     	MGOTO	_00166_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  975     	.line	228, "main.c"; 	powerOff();
                                    1-  976     	MCALL	_powerOff
     007D 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  977     	MGOTO	_00166_DS_
     007E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  978     	.line	232, "main.c"; 	}
                                    1-  979     	RETURN	
     007F 0010                      3-   40 m1      ret
                                    1-  980     ; exit point of _main
                                    1-  982     ;***
                                    1-  983     ;  pBlock Stats: dbName = C
                                    1-  984     ;***
                                    1-  985     ;has an exit
                                    1-  986     ;; Starting pCode block
                                    1-  987     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  989     _F_wait_eoc:
                                    1-  990     ; 2 exit points
     0000                           1-  991     _01029_DS_:
                                    1-  992     	.line	1073, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  993     	BTRSS	_ADMDbits,5
                                    1-  994     	MGOTO	_01029_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  995     	.line	1075, "main.c"; 	}
                                    1-  996     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1-  997     ; exit point of _F_wait_eoc
                                    1-  999     ;***
                                    1- 1000     ;  pBlock Stats: dbName = C
                                    1- 1001     ;***
                                    1- 1002     ;has an exit
                                    1- 1003     ;functions called:
                                    1- 1004     ;   _delay
                                    1- 1005     ;   _F_wait_eoc
                                    1- 1006     ;   _delay
                                    1- 1007     ;   _F_wait_eoc
                                    1- 1008     ;6 compiler assigned registers:
                                    1- 1009     ;   r0x1035
                                    1- 1010     ;   r0x1036
                                    1- 1011     ;   r0x1037
                                    1- 1012     ;   r0x1038
                                    1- 1013     ;   r0x1039
                                    1- 1014     ;   r0x103A
                                    1- 1015     ;; Starting pCode block
                                    1- 1016     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1018     ;local variable name mapping:
     0000                           1- 1021     _F_AIN2_Convert:
                                    1- 1022     ; 2 exit points
                                    1- 1023     	.line	1056, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1024     	BANKSEL	r0x1035
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1025     	MOVAR	r0x1035
                                    1- 1026     	.line	1058, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1027     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1028     	CLRR	_R_AIN2_DATA_LB
                                    1- 1029     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1030     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1031     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1032     	.line	1060, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1033     	MOVIA	0x92
     0008 00rr                      1- 1034     	MOVAR	_ADMD
                                    1- 1035     	.line	1061, "main.c"; 	delay(200);	
     0009 21C8                      1- 1036     	MOVIA	0xc8
                                    1- 1037     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1038     	.line	1062, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1039     	MOVIA	0x01
                                    1- 1040     	BANKSEL	r0x1036
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1041     	MOVAR	r0x1036
     000E                           1- 1042     _01022_DS_:
                                    1- 1043     	BANKSEL	r0x1036
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1044     	MOVR	r0x1036,W
                                    1- 1045     	BANKSEL	r0x1035
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1046     	SUBAR	r0x1035,W
     0012 0803                      1- 1047     	BTRSS	STATUS,0
                                    1- 1048     	MGOTO	_01024_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1049     	.line	1064, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1050     	BSR	_ADMDbits,6
                                    1- 1051     	.line	1065, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1052     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1053     	.line	1066, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1054     	MOVIA	0x0f
     0017 10rr                      1- 1055     	ANDAR	_ADR,W
                                    1- 1056     ;;3	MOVAR	r0x1037
                                    1- 1057     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1058     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1059     	.line	1067, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1- 1060     	MOVR	_ADD,W
                                    1- 1061     	BANKSEL	r0x1037
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1062     	MOVAR	r0x1037
                                    1- 1063     ;;1	CLRR	r0x1038
                                    1- 1064     ;;109	MOVR	r0x1037,W
                                    1- 1065     ;;107	MOVAR	r0x1039
     001D 2100                      1- 1066     	MOVIA	0x00
                                    1- 1067     	BANKSEL	r0x103A
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1068     	MOVAR	r0x103A
                                    1- 1069     ;;108	MOVR	r0x1039,W
                                    1- 1070     	BANKSEL	r0x1037
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1071     	MOVR	r0x1037,W
                                    1- 1072     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1073     	ADDAR	_R_AIN2_DATA,F
                                    1- 1074     	BANKSEL	r0x103A
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1075     	MOVR	r0x103A,W
     0026 0C03                      1- 1076     	BTRSC	STATUS,0
     0027 05rr                      1- 1077     	INCR	r0x103A,W
     0028 0D03                      1- 1078     	BTRSC	STATUS,2
                                    1- 1079     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1080     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1081     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1- 1082     _00001_DS_:
                                    1- 1083     	.line	1062, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1084     	BANKSEL	r0x1036
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1085     	INCR	r0x1036,F
                                    1- 1086     	MGOTO	_01022_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1087     _01024_DS_:
                                    1- 1088     	.line	1069, "main.c"; 	}
                                    1- 1089     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1090     ; exit point of _F_AIN2_Convert
                                    1- 1092     ;***
                                    1- 1093     ;  pBlock Stats: dbName = C
                                    1- 1094     ;***
                                    1- 1095     ;has an exit
                                    1- 1096     ;functions called:
                                    1- 1097     ;   _delay
                                    1- 1098     ;   _F_wait_eoc
                                    1- 1099     ;   _delay
                                    1- 1100     ;   _F_wait_eoc
                                    1- 1101     ;6 compiler assigned registers:
                                    1- 1102     ;   r0x103B
                                    1- 1103     ;   r0x103C
                                    1- 1104     ;   r0x103D
                                    1- 1105     ;   r0x103E
                                    1- 1106     ;   r0x103F
                                    1- 1107     ;   r0x1040
                                    1- 1108     ;; Starting pCode block
                                    1- 1109     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1- 1111     ;local variable name mapping:
     0000                           1- 1114     _F_AIN3_Convert:
                                    1- 1115     ; 2 exit points
                                    1- 1116     	.line	1041, "main.c"; 	void F_AIN3_Convert(char count)
                                    1- 1117     	BANKSEL	r0x103B
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1118     	MOVAR	r0x103B
                                    1- 1119     	.line	1043, "main.c"; 	R_AIN3_DATA=R_AIN3_DATA_LB=0x00;   
                                    1- 1120     	BANKSEL	_R_AIN3_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1121     	CLRR	_R_AIN3_DATA_LB
                                    1- 1122     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1123     	CLRR	_R_AIN3_DATA
     0006 02rr                      1- 1124     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1125     	.line	1045, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0007 2193                      1- 1126     	MOVIA	0x93
     0008 00rr                      1- 1127     	MOVAR	_ADMD
                                    1- 1128     	.line	1046, "main.c"; 	delay(200);	
     0009 21C8                      1- 1129     	MOVIA	0xc8
                                    1- 1130     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1131     	.line	1047, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1132     	MOVIA	0x01
                                    1- 1133     	BANKSEL	r0x103C
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1134     	MOVAR	r0x103C
     000E                           1- 1135     _01013_DS_:
                                    1- 1136     	BANKSEL	r0x103C
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1137     	MOVR	r0x103C,W
                                    1- 1138     	BANKSEL	r0x103B
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1139     	SUBAR	r0x103B,W
     0012 0803                      1- 1140     	BTRSS	STATUS,0
                                    1- 1141     	MGOTO	_01015_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1142     	.line	1049, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1143     	BSR	_ADMDbits,6
                                    1- 1144     	.line	1050, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1145     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1146     	.line	1051, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1147     	MOVIA	0x0f
     0017 10rr                      1- 1148     	ANDAR	_ADR,W
                                    1- 1149     ;;3	MOVAR	r0x103D
                                    1- 1150     	BANKSEL	_R_AIN3_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1151     	ADDAR	_R_AIN3_DATA_LB,F
                                    1- 1152     	.line	1052, "main.c"; 	R_AIN3_DATA    += ADD; 
     001A 01rr                      1- 1153     	MOVR	_ADD,W
                                    1- 1154     	BANKSEL	r0x103D
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1155     	MOVAR	r0x103D
                                    1- 1156     ;;1	CLRR	r0x103E
                                    1- 1157     ;;106	MOVR	r0x103D,W
                                    1- 1158     ;;104	MOVAR	r0x103F
     001D 2100                      1- 1159     	MOVIA	0x00
                                    1- 1160     	BANKSEL	r0x1040
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1161     	MOVAR	r0x1040
                                    1- 1162     ;;105	MOVR	r0x103F,W
                                    1- 1163     	BANKSEL	r0x103D
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1164     	MOVR	r0x103D,W
                                    1- 1165     	BANKSEL	_R_AIN3_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1166     	ADDAR	_R_AIN3_DATA,F
                                    1- 1167     	BANKSEL	r0x1040
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1168     	MOVR	r0x1040,W
     0026 0C03                      1- 1169     	BTRSC	STATUS,0
     0027 05rr                      1- 1170     	INCR	r0x1040,W
     0028 0D03                      1- 1171     	BTRSC	STATUS,2
                                    1- 1172     	MGOTO	_00002_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1173     	BANKSEL	_R_AIN3_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1174     	ADDAR	(_R_AIN3_DATA + 1),F
     002C                           1- 1175     _00002_DS_:
                                    1- 1176     	.line	1047, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1177     	BANKSEL	r0x103C
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1178     	INCR	r0x103C,F
                                    1- 1179     	MGOTO	_01013_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1180     _01015_DS_:
                                    1- 1181     	.line	1054, "main.c"; 	}
                                    1- 1182     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1183     ; exit point of _F_AIN3_Convert
                                    1- 1185     ;***
                                    1- 1186     ;  pBlock Stats: dbName = C
                                    1- 1187     ;***
                                    1- 1188     ;has an exit
                                    1- 1189     ;functions called:
                                    1- 1190     ;   _delay
                                    1- 1191     ;   _F_wait_eoc
                                    1- 1192     ;   _delay
                                    1- 1193     ;   _F_wait_eoc
                                    1- 1194     ;6 compiler assigned registers:
                                    1- 1195     ;   r0x1041
                                    1- 1196     ;   r0x1042
                                    1- 1197     ;   r0x1043
                                    1- 1198     ;   r0x1044
                                    1- 1199     ;   r0x1045
                                    1- 1200     ;   r0x1046
                                    1- 1201     ;; Starting pCode block
                                    1- 1202     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1204     ;local variable name mapping:
     0000                           1- 1207     _F_AIN4_Convert:
                                    1- 1208     ; 2 exit points
                                    1- 1209     	.line	1026, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1210     	BANKSEL	r0x1041
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1211     	MOVAR	r0x1041
                                    1- 1212     	.line	1028, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1213     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1214     	CLRR	_R_AIN4_DATA_LB
                                    1- 1215     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1216     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1217     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1218     	.line	1030, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1219     	MOVIA	0x94
     0008 00rr                      1- 1220     	MOVAR	_ADMD
                                    1- 1221     	.line	1031, "main.c"; 	delay(200);	
     0009 21C8                      1- 1222     	MOVIA	0xc8
                                    1- 1223     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1224     	.line	1032, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1225     	MOVIA	0x01
                                    1- 1226     	BANKSEL	r0x1042
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1227     	MOVAR	r0x1042
     000E                           1- 1228     _01004_DS_:
                                    1- 1229     	BANKSEL	r0x1042
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1230     	MOVR	r0x1042,W
                                    1- 1231     	BANKSEL	r0x1041
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1232     	SUBAR	r0x1041,W
     0012 0803                      1- 1233     	BTRSS	STATUS,0
                                    1- 1234     	MGOTO	_01006_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1235     	.line	1034, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1236     	BSR	_ADMDbits,6
                                    1- 1237     	.line	1035, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1238     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1239     	.line	1036, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1240     	MOVIA	0x0f
     0017 10rr                      1- 1241     	ANDAR	_ADR,W
                                    1- 1242     ;;3	MOVAR	r0x1043
                                    1- 1243     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1244     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1245     	.line	1037, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1246     	MOVR	_ADD,W
                                    1- 1247     	BANKSEL	r0x1043
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1248     	MOVAR	r0x1043
                                    1- 1249     ;;1	CLRR	r0x1044
                                    1- 1250     ;;103	MOVR	r0x1043,W
                                    1- 1251     ;;101	MOVAR	r0x1045
     001D 2100                      1- 1252     	MOVIA	0x00
                                    1- 1253     	BANKSEL	r0x1046
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1254     	MOVAR	r0x1046
                                    1- 1255     ;;102	MOVR	r0x1045,W
                                    1- 1256     	BANKSEL	r0x1043
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1257     	MOVR	r0x1043,W
                                    1- 1258     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1259     	ADDAR	_R_AIN4_DATA,F
                                    1- 1260     	BANKSEL	r0x1046
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1261     	MOVR	r0x1046,W
     0026 0C03                      1- 1262     	BTRSC	STATUS,0
     0027 05rr                      1- 1263     	INCR	r0x1046,W
     0028 0D03                      1- 1264     	BTRSC	STATUS,2
                                    1- 1265     	MGOTO	_00003_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1266     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1267     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1268     _00003_DS_:
                                    1- 1269     	.line	1032, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1270     	BANKSEL	r0x1042
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1271     	INCR	r0x1042,F
                                    1- 1272     	MGOTO	_01004_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1273     _01006_DS_:
                                    1- 1274     	.line	1039, "main.c"; 	}
                                    1- 1275     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1276     ; exit point of _F_AIN4_Convert
                                    1- 1278     ;***
                                    1- 1279     ;  pBlock Stats: dbName = C
                                    1- 1280     ;***
                                    1- 1281     ;has an exit
                                    1- 1282     ;functions called:
                                    1- 1283     ;   _F_AIN3_Convert
                                    1- 1284     ;   _F_AIN3_Convert
                                    1- 1285     ;4 compiler assigned registers:
                                    1- 1286     ;   r0x1047
                                    1- 1287     ;   r0x1048
                                    1- 1288     ;   r0x1049
                                    1- 1289     ;   r0x104A
                                    1- 1290     ;; Starting pCode block
                                    1- 1291     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1293     _checkOutA:
                                    1- 1294     ; 2 exit points
                                    1- 1295     	.line	911, "main.c"; 	R_AIN3_DATA = R_AIN3_DATA_LB = 0x00;
                                    1- 1296     	BANKSEL	_R_AIN3_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1297     	CLRR	_R_AIN3_DATA_LB
                                    1- 1298     	BANKSEL	_R_AIN3_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1299     	CLRR	_R_AIN3_DATA
     0004 02rr                      1- 1300     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1301     	.line	912, "main.c"; 	F_AIN3_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1302     	MOVIA	0x08
                                    1- 1303     	MCALL	_F_AIN3_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1304     	.line	913, "main.c"; 	R_AIN3_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1305     	BANKSEL	_R_AIN3_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1306     	SWAPR	(_R_AIN3_DATA + 1),W
     0009 22F0                      1- 1307     	ANDIA	0xf0
     000A 00rr                      1- 1308     	MOVAR	(_R_AIN3_DATA + 1)
     000B 15rr                      1- 1309     	SWAPR	_R_AIN3_DATA,W
     000C 00rr                      1- 1310     	MOVAR	_R_AIN3_DATA
     000D 220F                      1- 1311     	ANDIA	0x0f
     000E 11rr                      1- 1312     	IORAR	(_R_AIN3_DATA + 1),F
     000F 12rr                      1- 1313     	XORAR	_R_AIN3_DATA,F
                                    1- 1314     	.line	914, "main.c"; 	R_AIN3_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1315     	MOVIA	0xf0
                                    1- 1316     	BANKSEL	_R_AIN3_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1317     	ANDAR	_R_AIN3_DATA_LB,F
                                    1- 1318     	.line	915, "main.c"; 	R_AIN3_DATA += R_AIN3_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1319     	MOVR	_R_AIN3_DATA_LB,W
                                    1- 1320     	BANKSEL	r0x1049
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1321     	MOVAR	r0x1049
                                    1- 1322     ;;1	MOVAR	r0x1047
                                    1- 1323     ;;1	CLRR	r0x1048
                                    1- 1324     ;;100	MOVR	r0x1047,W
     0016 2100                      1- 1325     	MOVIA	0x00
                                    1- 1326     	BANKSEL	r0x104A
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1327     	MOVAR	r0x104A
                                    1- 1328     	BANKSEL	r0x1049
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1329     	MOVR	r0x1049,W
                                    1- 1330     	BANKSEL	_R_AIN3_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1331     	ADDAR	_R_AIN3_DATA,F
                                    1- 1332     	BANKSEL	r0x104A
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1333     	MOVR	r0x104A,W
     001F 0C03                      1- 1334     	BTRSC	STATUS,0
     0020 05rr                      1- 1335     	INCR	r0x104A,W
     0021 0D03                      1- 1336     	BTRSC	STATUS,2
                                    1- 1337     	MGOTO	_00004_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1338     	BANKSEL	_R_AIN3_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1339     	ADDAR	(_R_AIN3_DATA + 1),F
                                    1- 1340     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1341     _00004_DS_:
                                    1- 1342     	.line	916, "main.c"; 	R_AIN3_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1343     	BCR	STATUS,0
                                    1- 1344     	BANKSEL	_R_AIN3_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1345     	RRR	(_R_AIN3_DATA + 1),F
     0028 13rr                      1- 1346     	RRR	_R_AIN3_DATA,F
                                    1- 1347     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1348     	BCR	STATUS,0
     002A 13rr                      1- 1349     	RRR	(_R_AIN3_DATA + 1),F
     002B 13rr                      1- 1350     	RRR	_R_AIN3_DATA,F
                                    1- 1351     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1352     	BCR	STATUS,0
     002D 13rr                      1- 1353     	RRR	(_R_AIN3_DATA + 1),F
     002E 13rr                      1- 1354     	RRR	_R_AIN3_DATA,F
                                    1- 1355     	.line	917, "main.c"; 	if(debug)
                                    1- 1356     	BANKSEL	_debug
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1357     	MOVR	_debug,W
     0031 0D03                      1- 1358     	BTRSC	STATUS,2
                                    1- 1359     	MGOTO	_00828_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1360     	.line	918, "main.c"; 	R_AIN3_DATA = OUTA;
     0033 212D                      1- 1361     	MOVIA	0x2d
                                    1- 1362     	BANKSEL	_R_AIN3_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1363     	MOVAR	_R_AIN3_DATA
     0036 2101                      1- 1364     	MOVIA	0x01
     0037 00rr                      1- 1365     	MOVAR	(_R_AIN3_DATA + 1)
                                    1- 1366     ;;unsigned compare: left < lit (0x9=9), size=1
     0038                           1- 1367     _00828_DS_:
                                    1- 1368     	.line	919, "main.c"; 	if(workStep < 9 && R_AIN3_DATA > 200)
     0038 2109                      1- 1369     	MOVIA	0x09
                                    1- 1370     	BANKSEL	_workStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1371     	SUBAR	_workStep,W
     003B 0C03                      1- 1372     	BTRSC	STATUS,0
                                    1- 1373     	MGOTO	_00891_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1374     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1375     ;;unsigned compare: left >= lit (0xC9=201), size=2
     003D 2100                      1- 1376     	MOVIA	0x00
                                    1- 1377     	BANKSEL	_R_AIN3_DATA
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 04rr                      1- 1378     	SUBAR	(_R_AIN3_DATA + 1),W
     0040 0903                      1- 1379     	BTRSS	STATUS,2
                                    1- 1380     	MGOTO	_00984_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042 21C9                      1- 1381     	MOVIA	0xc9
     0043 04rr                      1- 1382     	SUBAR	_R_AIN3_DATA,W
     0044                           1- 1383     _00984_DS_:
     0044 0803                      1- 1384     	BTRSS	STATUS,0
                                    1- 1385     	MGOTO	_00891_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1386     	.line	921, "main.c"; 	if(++overCount > 5)
                                    1- 1387     	BANKSEL	_overCount
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 05rr                      1- 1388     	INCR	_overCount,F
                                    1- 1389     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1390     ;;unsigned compare: left >= lit (0x6=6), size=1
     0048 2106                      1- 1391     	MOVIA	0x06
     0049 04rr                      1- 1392     	SUBAR	_overCount,W
     004A 0803                      1- 1393     	BTRSS	STATUS,0
                                    1- 1394     	MGOTO	_00894_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1395     	.line	923, "main.c"; 	overCount = 5;
     004C 2105                      1- 1396     	MOVIA	0x05
     004D 00rr                      1- 1397     	MOVAR	_overCount
                                    1- 1398     	.line	924, "main.c"; 	tempLedStep = workStep;
                                    1- 1399     	BANKSEL	_workStep
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1- 1400     	MOVR	_workStep,W
                                    1- 1401     	BANKSEL	_tempLedStep
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 00rr                      1- 1402     	MOVAR	_tempLedStep
                                    1- 1403     	MGOTO	_00894_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1404     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1405     ;;unsigned compare: left >= lit (0x191=401), size=2
     0053                           1- 1406     _00891_DS_:
                                    1- 1407     	.line	928, "main.c"; 	else if(R_AIN3_DATA > 400)
     0053 2101                      1- 1408     	MOVIA	0x01
                                    1- 1409     	BANKSEL	_R_AIN3_DATA
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 04rr                      1- 1410     	SUBAR	(_R_AIN3_DATA + 1),W
     0056 0903                      1- 1411     	BTRSS	STATUS,2
                                    1- 1412     	MGOTO	_00986_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
     0058 2191                      1- 1413     	MOVIA	0x91
     0059 04rr                      1- 1414     	SUBAR	_R_AIN3_DATA,W
     005A                           1- 1415     _00986_DS_:
     005A 0803                      1- 1416     	BTRSS	STATUS,0
                                    1- 1417     	MGOTO	_00888_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1418     	.line	930, "main.c"; 	if(++overCount > 5)
                                    1- 1419     	BANKSEL	_overCount
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 05rr                      1- 1420     	INCR	_overCount,F
                                    1- 1421     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1422     ;;unsigned compare: left >= lit (0x6=6), size=1
     005E 2106                      1- 1423     	MOVIA	0x06
     005F 04rr                      1- 1424     	SUBAR	_overCount,W
     0060 0803                      1- 1425     	BTRSS	STATUS,0
                                    1- 1426     	MGOTO	_00894_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1427     	.line	932, "main.c"; 	overCount = 5;
     0062 2105                      1- 1428     	MOVIA	0x05
     0063 00rr                      1- 1429     	MOVAR	_overCount
                                    1- 1430     	.line	933, "main.c"; 	tempLedStep = workStep;
                                    1- 1431     	BANKSEL	_workStep
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1- 1432     	MOVR	_workStep,W
                                    1- 1433     	BANKSEL	_tempLedStep
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 00rr                      1- 1434     	MOVAR	_tempLedStep
                                    1- 1435     	MGOTO	_00894_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1436     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1437     ;;unsigned compare: left >= lit (0x4C=76), size=2
     0069                           1- 1438     _00888_DS_:
                                    1- 1439     	.line	941, "main.c"; 	else if(R_AIN3_DATA > 75)
     0069 2100                      1- 1440     	MOVIA	0x00
                                    1- 1441     	BANKSEL	_R_AIN3_DATA
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 04rr                      1- 1442     	SUBAR	(_R_AIN3_DATA + 1),W
     006C 0903                      1- 1443     	BTRSS	STATUS,2
                                    1- 1444     	MGOTO	_00988_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
     006E 214C                      1- 1445     	MOVIA	0x4c
     006F 04rr                      1- 1446     	SUBAR	_R_AIN3_DATA,W
     0070                           1- 1447     _00988_DS_:
     0070 0803                      1- 1448     	BTRSS	STATUS,0
                                    1- 1449     	MGOTO	_00885_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1450     	.line	943, "main.c"; 	if(overCount > 0)
                                    1- 1451     	BANKSEL	_overCount
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 01rr                      1- 1452     	MOVR	_overCount,W
     0074 0903                      1- 1453     	BTRSS	STATUS,2
                                    1- 1454     	.line	945, "main.c"; 	overCount--;
     0075 06rr                      1- 1455     	DECR	_overCount,F
                                    1- 1456     	.line	948, "main.c"; 	if(workStep == 1)
                                    1- 1457     	BANKSEL	_workStep
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 01rr                      1- 1458     	MOVR	_workStep,W
     0078 2401                      1- 1459     	XORIA	0x01
     0079 0903                      1- 1460     	BTRSS	STATUS,2
                                    1- 1461     	MGOTO	_00858_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1462     	.line	950, "main.c"; 	tempDuty = 79;
     007B 214F                      1- 1463     	MOVIA	0x4f
                                    1- 1464     	BANKSEL	_tempDuty
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 00rr                      1- 1465     	MOVAR	_tempDuty
                                    1- 1466     	MGOTO	_00859_DS_
     007E 3rrr                      3-   63 m1      LGOTO rom_address
     007F                           1- 1467     _00858_DS_:
                                    1- 1468     	.line	952, "main.c"; 	else if(workStep == 2)
                                    1- 1469     	BANKSEL	_workStep
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 01rr                      1- 1470     	MOVR	_workStep,W
     0081 2402                      1- 1471     	XORIA	0x02
     0082 0903                      1- 1472     	BTRSS	STATUS,2
                                    1- 1473     	MGOTO	_00855_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1474     	.line	954, "main.c"; 	tempDuty = 82;
     0084 2152                      1- 1475     	MOVIA	0x52
                                    1- 1476     	BANKSEL	_tempDuty
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 00rr                      1- 1477     	MOVAR	_tempDuty
                                    1- 1478     	MGOTO	_00859_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
     0088                           1- 1479     _00855_DS_:
                                    1- 1480     	.line	956, "main.c"; 	else if(workStep == 3)
                                    1- 1481     	BANKSEL	_workStep
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 01rr                      1- 1482     	MOVR	_workStep,W
     008A 2403                      1- 1483     	XORIA	0x03
     008B 0903                      1- 1484     	BTRSS	STATUS,2
                                    1- 1485     	MGOTO	_00852_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1486     	.line	958, "main.c"; 	tempDuty = 85;
     008D 2155                      1- 1487     	MOVIA	0x55
                                    1- 1488     	BANKSEL	_tempDuty
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 00rr                      1- 1489     	MOVAR	_tempDuty
                                    1- 1490     	MGOTO	_00859_DS_
     0090 3rrr                      3-   63 m1      LGOTO rom_address
     0091                           1- 1491     _00852_DS_:
                                    1- 1492     	.line	960, "main.c"; 	else if(workStep == 4)
                                    1- 1493     	BANKSEL	_workStep
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 01rr                      1- 1494     	MOVR	_workStep,W
     0093 2404                      1- 1495     	XORIA	0x04
     0094 0903                      1- 1496     	BTRSS	STATUS,2
                                    1- 1497     	MGOTO	_00849_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1498     	.line	962, "main.c"; 	tempDuty = 88;
     0096 2158                      1- 1499     	MOVIA	0x58
                                    1- 1500     	BANKSEL	_tempDuty
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 00rr                      1- 1501     	MOVAR	_tempDuty
                                    1- 1502     	MGOTO	_00859_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
     009A                           1- 1503     _00849_DS_:
                                    1- 1504     	.line	964, "main.c"; 	else if(workStep == 5)
                                    1- 1505     	BANKSEL	_workStep
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 01rr                      1- 1506     	MOVR	_workStep,W
     009C 2405                      1- 1507     	XORIA	0x05
     009D 0903                      1- 1508     	BTRSS	STATUS,2
                                    1- 1509     	MGOTO	_00846_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1510     	.line	966, "main.c"; 	tempDuty = 90;
     009F 215A                      1- 1511     	MOVIA	0x5a
                                    1- 1512     	BANKSEL	_tempDuty
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 00rr                      1- 1513     	MOVAR	_tempDuty
                                    1- 1514     	MGOTO	_00859_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
     00A3                           1- 1515     _00846_DS_:
                                    1- 1516     	.line	968, "main.c"; 	else if(workStep == 6)
                                    1- 1517     	BANKSEL	_workStep
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 01rr                      1- 1518     	MOVR	_workStep,W
     00A5 2406                      1- 1519     	XORIA	0x06
     00A6 0903                      1- 1520     	BTRSS	STATUS,2
                                    1- 1521     	MGOTO	_00843_DS_
     00A7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1522     	.line	970, "main.c"; 	tempDuty = 93;
     00A8 215D                      1- 1523     	MOVIA	0x5d
                                    1- 1524     	BANKSEL	_tempDuty
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 00rr                      1- 1525     	MOVAR	_tempDuty
                                    1- 1526     	MGOTO	_00859_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
     00AC                           1- 1527     _00843_DS_:
                                    1- 1528     	.line	972, "main.c"; 	else if(workStep == 7)
                                    1- 1529     	BANKSEL	_workStep
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 01rr                      1- 1530     	MOVR	_workStep,W
     00AE 2407                      1- 1531     	XORIA	0x07
     00AF 0903                      1- 1532     	BTRSS	STATUS,2
                                    1- 1533     	MGOTO	_00840_DS_
     00B0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1534     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1535     ;;unsigned compare: left >= lit (0x56=86), size=2
                                    1- 1536     	.line	974, "main.c"; 	if(R_AIN3_DATA > 85)
     00B1 2100                      1- 1537     	MOVIA	0x00
                                    1- 1538     	BANKSEL	_R_AIN3_DATA
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 04rr                      1- 1539     	SUBAR	(_R_AIN3_DATA + 1),W
     00B4 0903                      1- 1540     	BTRSS	STATUS,2
                                    1- 1541     	MGOTO	_00989_DS_
     00B5 3rrr                      3-   63 m1      LGOTO rom_address
     00B6 2156                      1- 1542     	MOVIA	0x56
     00B7 04rr                      1- 1543     	SUBAR	_R_AIN3_DATA,W
     00B8                           1- 1544     _00989_DS_:
     00B8 0803                      1- 1545     	BTRSS	STATUS,0
                                    1- 1546     	MGOTO	_00859_DS_
     00B9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1547     	.line	975, "main.c"; 	tempDuty = 96;
     00BA 2160                      1- 1548     	MOVIA	0x60
                                    1- 1549     	BANKSEL	_tempDuty
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 00rr                      1- 1550     	MOVAR	_tempDuty
                                    1- 1551     	MGOTO	_00859_DS_
     00BD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1552     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1553     ;;unsigned compare: left >= lit (0x5B=91), size=2
     00BE                           1- 1554     _00840_DS_:
                                    1- 1555     	.line	979, "main.c"; 	if(R_AIN3_DATA > 90)
     00BE 2100                      1- 1556     	MOVIA	0x00
                                    1- 1557     	BANKSEL	_R_AIN3_DATA
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 04rr                      1- 1558     	SUBAR	(_R_AIN3_DATA + 1),W
     00C1 0903                      1- 1559     	BTRSS	STATUS,2
                                    1- 1560     	MGOTO	_00990_DS_
     00C2 3rrr                      3-   63 m1      LGOTO rom_address
     00C3 215B                      1- 1561     	MOVIA	0x5b
     00C4 04rr                      1- 1562     	SUBAR	_R_AIN3_DATA,W
     00C5                           1- 1563     _00990_DS_:
     00C5 0803                      1- 1564     	BTRSS	STATUS,0
                                    1- 1565     	MGOTO	_00859_DS_
     00C6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1566     	.line	980, "main.c"; 	tempDuty = 99;
     00C7 2163                      1- 1567     	MOVIA	0x63
                                    1- 1568     	BANKSEL	_tempDuty
     00C8 rrrr                      3-  110 m1      .banksel ram_address
     00C9 00rr                      1- 1569     	MOVAR	_tempDuty
     00CA                           1- 1570     _00859_DS_:
                                    1- 1571     	.line	983, "main.c"; 	PWM2DUTY = tempDuty;
                                    1- 1572     	BANKSEL	_tempDuty
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 01rr                      1- 1573     	MOVR	_tempDuty,W
     00CC 00rr                      1- 1574     	SFUN	_PWM2DUTY
                                    1- 1575     	MGOTO	_00894_DS_
     00CD 3rrr                      3-   63 m1      LGOTO rom_address
     00CE                           1- 1576     _00885_DS_:
                                    1- 1577     	.line	987, "main.c"; 	if(overCount > 0)
                                    1- 1578     	BANKSEL	_overCount
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 01rr                      1- 1579     	MOVR	_overCount,W
     00D0 0903                      1- 1580     	BTRSS	STATUS,2
                                    1- 1581     	.line	989, "main.c"; 	overCount--;
     00D1 06rr                      1- 1582     	DECR	_overCount,F
                                    1- 1583     	.line	991, "main.c"; 	if(R_AIN3_DATA > 64 && workStep < 3)
     00D2 2100                      1- 1584     	MOVIA	0x00
                                    1- 1585     	BANKSEL	_R_AIN3_DATA
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 04rr                      1- 1586     	SUBAR	(_R_AIN3_DATA + 1),W
     00D5 0903                      1- 1587     	BTRSS	STATUS,2
                                    1- 1588     	MGOTO	_00991_DS_
     00D6 3rrr                      3-   63 m1      LGOTO rom_address
     00D7 2141                      1- 1589     	MOVIA	0x41
     00D8 04rr                      1- 1590     	SUBAR	_R_AIN3_DATA,W
     00D9                           1- 1591     _00991_DS_:
     00D9 0803                      1- 1592     	BTRSS	STATUS,0
                                    1- 1593     	MGOTO	_00879_DS_
     00DA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1594     ;;unsigned compare: left < lit (0x3=3), size=1
     00DB 2103                      1- 1595     	MOVIA	0x03
                                    1- 1596     	BANKSEL	_workStep
     00DC rrrr                      3-  110 m1      .banksel ram_address
     00DD 04rr                      1- 1597     	SUBAR	_workStep,W
     00DE 0C03                      1- 1598     	BTRSC	STATUS,0
                                    1- 1599     	MGOTO	_00879_DS_
     00DF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1600     	.line	993, "main.c"; 	if(workStep == 1)
     00E0 01rr                      1- 1601     	MOVR	_workStep,W
     00E1 2401                      1- 1602     	XORIA	0x01
     00E2 0903                      1- 1603     	BTRSS	STATUS,2
                                    1- 1604     	MGOTO	_00870_DS_
     00E3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1605     	.line	995, "main.c"; 	tempDuty = 79;
     00E4 214F                      1- 1606     	MOVIA	0x4f
                                    1- 1607     	BANKSEL	_tempDuty
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 00rr                      1- 1608     	MOVAR	_tempDuty
                                    1- 1609     	MGOTO	_00871_DS_
     00E7 3rrr                      3-   63 m1      LGOTO rom_address
     00E8                           1- 1610     _00870_DS_:
                                    1- 1611     	.line	997, "main.c"; 	else if(workStep == 2 && R_AIN3_DATA > 68)
                                    1- 1612     	BANKSEL	_workStep
     00E8 rrrr                      3-  110 m1      .banksel ram_address
     00E9 01rr                      1- 1613     	MOVR	_workStep,W
     00EA 2402                      1- 1614     	XORIA	0x02
     00EB 0903                      1- 1615     	BTRSS	STATUS,2
                                    1- 1616     	MGOTO	_00866_DS_
     00EC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1617     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1618     ;;unsigned compare: left >= lit (0x45=69), size=2
     00ED 2100                      1- 1619     	MOVIA	0x00
                                    1- 1620     	BANKSEL	_R_AIN3_DATA
     00EE rrrr                      3-  110 m1      .banksel ram_address
     00EF 04rr                      1- 1621     	SUBAR	(_R_AIN3_DATA + 1),W
     00F0 0903                      1- 1622     	BTRSS	STATUS,2
                                    1- 1623     	MGOTO	_00993_DS_
     00F1 3rrr                      3-   63 m1      LGOTO rom_address
     00F2 2145                      1- 1624     	MOVIA	0x45
     00F3 04rr                      1- 1625     	SUBAR	_R_AIN3_DATA,W
     00F4                           1- 1626     _00993_DS_:
     00F4 0803                      1- 1627     	BTRSS	STATUS,0
                                    1- 1628     	MGOTO	_00866_DS_
     00F5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1629     	.line	999, "main.c"; 	tempDuty = 82;
     00F6 2152                      1- 1630     	MOVIA	0x52
                                    1- 1631     	BANKSEL	_tempDuty
     00F7 rrrr                      3-  110 m1      .banksel ram_address
     00F8 00rr                      1- 1632     	MOVAR	_tempDuty
                                    1- 1633     	MGOTO	_00871_DS_
     00F9 3rrr                      3-   63 m1      LGOTO rom_address
     00FA                           1- 1634     _00866_DS_:
                                    1- 1635     	.line	1001, "main.c"; 	else if(workStep == 3 && R_AIN3_DATA > 70)
                                    1- 1636     	BANKSEL	_workStep
     00FA rrrr                      3-  110 m1      .banksel ram_address
     00FB 01rr                      1- 1637     	MOVR	_workStep,W
     00FC 2403                      1- 1638     	XORIA	0x03
     00FD 0903                      1- 1639     	BTRSS	STATUS,2
                                    1- 1640     	MGOTO	_00871_DS_
     00FE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1641     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1642     ;;unsigned compare: left >= lit (0x47=71), size=2
     00FF 2100                      1- 1643     	MOVIA	0x00
                                    1- 1644     	BANKSEL	_R_AIN3_DATA
     0100 rrrr                      3-  110 m1      .banksel ram_address
     0101 04rr                      1- 1645     	SUBAR	(_R_AIN3_DATA + 1),W
     0102 0903                      1- 1646     	BTRSS	STATUS,2
                                    1- 1647     	MGOTO	_00994_DS_
     0103 3rrr                      3-   63 m1      LGOTO rom_address
     0104 2147                      1- 1648     	MOVIA	0x47
     0105 04rr                      1- 1649     	SUBAR	_R_AIN3_DATA,W
     0106                           1- 1650     _00994_DS_:
     0106 0803                      1- 1651     	BTRSS	STATUS,0
                                    1- 1652     	MGOTO	_00871_DS_
     0107 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1653     	.line	1003, "main.c"; 	tempDuty = 85;
     0108 2155                      1- 1654     	MOVIA	0x55
                                    1- 1655     	BANKSEL	_tempDuty
     0109 rrrr                      3-  110 m1      .banksel ram_address
     010A 00rr                      1- 1656     	MOVAR	_tempDuty
     010B                           1- 1657     _00871_DS_:
                                    1- 1658     	.line	1005, "main.c"; 	PWM2DUTY = tempDuty;
                                    1- 1659     	BANKSEL	_tempDuty
     010B rrrr                      3-  110 m1      .banksel ram_address
     010C 01rr                      1- 1660     	MOVR	_tempDuty,W
     010D 00rr                      1- 1661     	SFUN	_PWM2DUTY
                                    1- 1662     	MGOTO	_00880_DS_
     010E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1663     ;;unsigned compare: left < lit (0x32=50), size=2
     010F                           1- 1664     _00879_DS_:
                                    1- 1665     	.line	1007, "main.c"; 	else if(R_AIN3_DATA < 50)
     010F 2100                      1- 1666     	MOVIA	0x00
                                    1- 1667     	BANKSEL	_R_AIN3_DATA
     0110 rrrr                      3-  110 m1      .banksel ram_address
     0111 04rr                      1- 1668     	SUBAR	(_R_AIN3_DATA + 1),W
     0112 0903                      1- 1669     	BTRSS	STATUS,2
                                    1- 1670     	MGOTO	_00995_DS_
     0113 3rrr                      3-   63 m1      LGOTO rom_address
     0114 2132                      1- 1671     	MOVIA	0x32
     0115 04rr                      1- 1672     	SUBAR	_R_AIN3_DATA,W
     0116                           1- 1673     _00995_DS_:
     0116 0C03                      1- 1674     	BTRSC	STATUS,0
                                    1- 1675     	MGOTO	_00876_DS_
     0117 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1676     	.line	1009, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 1677     	BANKSEL	_maxDuty
     0118 rrrr                      3-  110 m1      .banksel ram_address
     0119 01rr                      1- 1678     	MOVR	_maxDuty,W
     011A 00rr                      1- 1679     	SFUN	_PWM2DUTY
                                    1- 1680     	MGOTO	_00880_DS_
     011B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1681     ;;unsigned compare: left < lit (0x7=7), size=1
     011C                           1- 1682     _00876_DS_:
                                    1- 1683     	.line	1011, "main.c"; 	else if(workStep >= 7 && R_AIN3_DATA < 68)
     011C 2107                      1- 1684     	MOVIA	0x07
                                    1- 1685     	BANKSEL	_workStep
     011D rrrr                      3-  110 m1      .banksel ram_address
     011E 04rr                      1- 1686     	SUBAR	_workStep,W
     011F 0803                      1- 1687     	BTRSS	STATUS,0
                                    1- 1688     	MGOTO	_00880_DS_
     0120 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1689     ;;unsigned compare: left < lit (0x44=68), size=2
     0121 2100                      1- 1690     	MOVIA	0x00
                                    1- 1691     	BANKSEL	_R_AIN3_DATA
     0122 rrrr                      3-  110 m1      .banksel ram_address
     0123 04rr                      1- 1692     	SUBAR	(_R_AIN3_DATA + 1),W
     0124 0903                      1- 1693     	BTRSS	STATUS,2
                                    1- 1694     	MGOTO	_00997_DS_
     0125 3rrr                      3-   63 m1      LGOTO rom_address
     0126 2144                      1- 1695     	MOVIA	0x44
     0127 04rr                      1- 1696     	SUBAR	_R_AIN3_DATA,W
     0128                           1- 1697     _00997_DS_:
     0128 0C03                      1- 1698     	BTRSC	STATUS,0
                                    1- 1699     	MGOTO	_00880_DS_
     0129 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1700     	.line	1013, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 1701     	BANKSEL	_maxDuty
     012A rrrr                      3-  110 m1      .banksel ram_address
     012B 01rr                      1- 1702     	MOVR	_maxDuty,W
     012C 00rr                      1- 1703     	SFUN	_PWM2DUTY
     012D                           1- 1704     _00880_DS_:
                                    1- 1705     	.line	1015, "main.c"; 	if(workStep > 0)
                                    1- 1706     	BANKSEL	_workStep
     012D rrrr                      3-  110 m1      .banksel ram_address
     012E 01rr                      1- 1707     	MOVR	_workStep,W
     012F 0D03                      1- 1708     	BTRSC	STATUS,2
                                    1- 1709     	MGOTO	_00894_DS_
     0130 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1710     	.line	1016, "main.c"; 	ledStep = workStep;
     0131 01rr                      1- 1711     	MOVR	_workStep,W
                                    1- 1712     	BANKSEL	_ledStep
     0132 rrrr                      3-  110 m1      .banksel ram_address
     0133 00rr                      1- 1713     	MOVAR	_ledStep
     0134                           1- 1714     _00894_DS_:
                                    1- 1715     	.line	1020, "main.c"; 	}
                                    1- 1716     	RETURN	
     0134 0010                      3-   40 m1      ret
                                    1- 1717     ; exit point of _checkOutA
                                    1- 1719     ;***
                                    1- 1720     ;  pBlock Stats: dbName = C
                                    1- 1721     ;***
                                    1- 1722     ;has an exit
                                    1- 1723     ;functions called:
                                    1- 1724     ;   _F_AIN4_Convert
                                    1- 1725     ;   _F_AIN4_Convert
                                    1- 1726     ;4 compiler assigned registers:
                                    1- 1727     ;   r0x104B
                                    1- 1728     ;   r0x104C
                                    1- 1729     ;   r0x104D
                                    1- 1730     ;   r0x104E
                                    1- 1731     ;; Starting pCode block
                                    1- 1732     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1734     _checkBatAD:
                                    1- 1735     ; 2 exit points
                                    1- 1736     	.line	723, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1737     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1738     	CLRR	_R_AIN4_DATA_LB
                                    1- 1739     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1740     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1741     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1742     	.line	724, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1743     	MOVIA	0x08
                                    1- 1744     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1745     	.line	725, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1746     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1747     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1748     	ANDIA	0xf0
     000A 00rr                      1- 1749     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1750     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1751     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1752     	ANDIA	0x0f
     000E 11rr                      1- 1753     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1754     	XORAR	_R_AIN4_DATA,F
                                    1- 1755     	.line	726, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1756     	MOVIA	0xf0
                                    1- 1757     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1758     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1759     	.line	727, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1760     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1761     	BANKSEL	r0x104D
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1762     	MOVAR	r0x104D
                                    1- 1763     ;;1	MOVAR	r0x104B
                                    1- 1764     ;;1	CLRR	r0x104C
                                    1- 1765     ;;99	MOVR	r0x104B,W
     0016 2100                      1- 1766     	MOVIA	0x00
                                    1- 1767     	BANKSEL	r0x104E
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1768     	MOVAR	r0x104E
                                    1- 1769     	BANKSEL	r0x104D
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1770     	MOVR	r0x104D,W
                                    1- 1771     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1772     	ADDAR	_R_AIN4_DATA,F
                                    1- 1773     	BANKSEL	r0x104E
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1774     	MOVR	r0x104E,W
     001F 0C03                      1- 1775     	BTRSC	STATUS,0
     0020 05rr                      1- 1776     	INCR	r0x104E,W
     0021 0D03                      1- 1777     	BTRSC	STATUS,2
                                    1- 1778     	MGOTO	_00005_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1779     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1780     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1781     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1782     _00005_DS_:
                                    1- 1783     	.line	728, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1784     	BCR	STATUS,0
                                    1- 1785     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1786     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1787     	RRR	_R_AIN4_DATA,F
                                    1- 1788     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1789     	BCR	STATUS,0
     002A 13rr                      1- 1790     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1791     	RRR	_R_AIN4_DATA,F
                                    1- 1792     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1793     	BCR	STATUS,0
     002D 13rr                      1- 1794     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1795     	RRR	_R_AIN4_DATA,F
                                    1- 1796     	.line	729, "main.c"; 	if(debug)
                                    1- 1797     	BANKSEL	_debug
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1798     	MOVR	_debug,W
     0031 0D03                      1- 1799     	BTRSC	STATUS,2
                                    1- 1800     	MGOTO	_00514_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1801     	.line	730, "main.c"; 	R_AIN4_DATA = BATTLE;
     0033 210E                      1- 1802     	MOVIA	0x0e
                                    1- 1803     	BANKSEL	_R_AIN4_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1804     	MOVAR	_R_AIN4_DATA
     0036 2106                      1- 1805     	MOVIA	0x06
     0037 00rr                      1- 1806     	MOVAR	(_R_AIN4_DATA + 1)
                                    1- 1807     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1808     ;;unsigned compare: left >= lit (0x60F=1551), size=2
     0038                           1- 1809     _00514_DS_:
                                    1- 1810     	.line	732, "main.c"; 	if(R_AIN4_DATA > 1550)
     0038 2106                      1- 1811     	MOVIA	0x06
                                    1- 1812     	BANKSEL	_R_AIN4_DATA
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1813     	SUBAR	(_R_AIN4_DATA + 1),W
     003B 0903                      1- 1814     	BTRSS	STATUS,2
                                    1- 1815     	MGOTO	_00785_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 210F                      1- 1816     	MOVIA	0x0f
     003E 04rr                      1- 1817     	SUBAR	_R_AIN4_DATA,W
     003F                           1- 1818     _00785_DS_:
     003F 0803                      1- 1819     	BTRSS	STATUS,0
                                    1- 1820     	MGOTO	_00526_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1821     	.line	735, "main.c"; 	lowCount = 0;
                                    1- 1822     	BANKSEL	_lowCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 1823     	CLRR	_lowCount
                                    1- 1824     	MGOTO	_00527_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1825     ;;unsigned compare: left < lit (0x46F=1135), size=2
     0044                           1- 1826     _00526_DS_:
                                    1- 1827     	.line	737, "main.c"; 	else if(R_AIN4_DATA < 1135)
     0044 2104                      1- 1828     	MOVIA	0x04
                                    1- 1829     	BANKSEL	_R_AIN4_DATA
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 04rr                      1- 1830     	SUBAR	(_R_AIN4_DATA + 1),W
     0047 0903                      1- 1831     	BTRSS	STATUS,2
                                    1- 1832     	MGOTO	_00786_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 216F                      1- 1833     	MOVIA	0x6f
     004A 04rr                      1- 1834     	SUBAR	_R_AIN4_DATA,W
     004B                           1- 1835     _00786_DS_:
     004B 0C03                      1- 1836     	BTRSC	STATUS,0
                                    1- 1837     	MGOTO	_00523_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1838     	.line	739, "main.c"; 	if(++lowCount < 10)
                                    1- 1839     	BANKSEL	_lowCount
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 05rr                      1- 1840     	INCR	_lowCount,F
                                    1- 1841     ;;unsigned compare: left < lit (0xA=10), size=1
     004F 210A                      1- 1842     	MOVIA	0x0a
     0050 04rr                      1- 1843     	SUBAR	_lowCount,W
     0051 0803                      1- 1844     	BTRSS	STATUS,0
                                    1- 1845     	.line	740, "main.c"; 	return;
                                    1- 1846     	MGOTO	_00630_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1847     	.line	741, "main.c"; 	lowCount = 10;
     0053 210A                      1- 1848     	MOVIA	0x0a
     0054 00rr                      1- 1849     	MOVAR	_lowCount
                                    1- 1850     	.line	742, "main.c"; 	pwStep = 0;
                                    1- 1851     	BANKSEL	_pwStep
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 02rr                      1- 1852     	CLRR	_pwStep
                                    1- 1853     	.line	743, "main.c"; 	R_AIN4_DATA = 1135;
     0057 216F                      1- 1854     	MOVIA	0x6f
                                    1- 1855     	BANKSEL	_R_AIN4_DATA
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 00rr                      1- 1856     	MOVAR	_R_AIN4_DATA
     005A 2104                      1- 1857     	MOVIA	0x04
     005B 00rr                      1- 1858     	MOVAR	(_R_AIN4_DATA + 1)
                                    1- 1859     	.line	745, "main.c"; 	if(workStep > 0 && ++firstTime == 10)
                                    1- 1860     	BANKSEL	_workStep
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 01rr                      1- 1861     	MOVR	_workStep,W
     005E 0D03                      1- 1862     	BTRSC	STATUS,2
                                    1- 1863     	MGOTO	_00518_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1864     	BANKSEL	_firstTime
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 05rr                      1- 1865     	INCR	_firstTime,F
     0062 01rr                      1- 1866     	MOVR	_firstTime,W
     0063 240A                      1- 1867     	XORIA	0x0a
     0064 0903                      1- 1868     	BTRSS	STATUS,2
                                    1- 1869     	MGOTO	_00518_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1870     	.line	747, "main.c"; 	shanshuoTime = 16;
     0066 2110                      1- 1871     	MOVIA	0x10
                                    1- 1872     	BANKSEL	_shanshuoTime
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 00rr                      1- 1873     	MOVAR	_shanshuoTime
                                    1- 1874     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1875     ;;unsigned compare: left >= lit (0xC=12), size=1
     0069                           1- 1876     _00518_DS_:
                                    1- 1877     	.line	750, "main.c"; 	if(firstTime > 11)
     0069 210C                      1- 1878     	MOVIA	0x0c
                                    1- 1879     	BANKSEL	_firstTime
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 04rr                      1- 1880     	SUBAR	_firstTime,W
     006C 0803                      1- 1881     	BTRSS	STATUS,0
                                    1- 1882     	MGOTO	_00527_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1883     	.line	751, "main.c"; 	firstTime = 11;
     006E 210B                      1- 1884     	MOVIA	0x0b
     006F 00rr                      1- 1885     	MOVAR	_firstTime
                                    1- 1886     	MGOTO	_00527_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
     0071                           1- 1887     _00523_DS_:
                                    1- 1888     	.line	755, "main.c"; 	lowCount = 0;
                                    1- 1889     	BANKSEL	_lowCount
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 02rr                      1- 1890     	CLRR	_lowCount
                                    1- 1891     	.line	756, "main.c"; 	firstTime = 0;
                                    1- 1892     	BANKSEL	_firstTime
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 02rr                      1- 1893     	CLRR	_firstTime
     0075                           1- 1894     _00527_DS_:
                                    1- 1895     	.line	758, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA - 1135;
     0075 2191                      1- 1896     	MOVIA	0x91
                                    1- 1897     	BANKSEL	_R_AIN4_DATA
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 03rr                      1- 1898     	ADDAR	_R_AIN4_DATA,F
     0078 21FB                      1- 1899     	MOVIA	0xfb
     0079 0C03                      1- 1900     	BTRSC	STATUS,0
     007A 21FC                      1- 1901     	MOVIA	0xfc
     007B 03rr                      1- 1902     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1903     ;;unsigned compare: left < lit (0x1A4=420), size=2
                                    1- 1904     	.line	759, "main.c"; 	if(R_AIN4_DATA >= 420)
     007C 2101                      1- 1905     	MOVIA	0x01
     007D 04rr                      1- 1906     	SUBAR	(_R_AIN4_DATA + 1),W
     007E 0903                      1- 1907     	BTRSS	STATUS,2
                                    1- 1908     	MGOTO	_00789_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
     0080 21A4                      1- 1909     	MOVIA	0xa4
     0081 04rr                      1- 1910     	SUBAR	_R_AIN4_DATA,W
     0082                           1- 1911     _00789_DS_:
     0082 0803                      1- 1912     	BTRSS	STATUS,0
                                    1- 1913     	MGOTO	_00626_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1914     	.line	761, "main.c"; 	pwStep = 10;
     0084 210A                      1- 1915     	MOVIA	0x0a
                                    1- 1916     	BANKSEL	_pwStep
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 00rr                      1- 1917     	MOVAR	_pwStep
                                    1- 1918     	MGOTO	_00627_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1919     ;;unsigned compare: left < lit (0x19A=410), size=2
     0088                           1- 1920     _00626_DS_:
                                    1- 1921     	.line	763, "main.c"; 	else if(R_AIN4_DATA >= 410)
     0088 2101                      1- 1922     	MOVIA	0x01
                                    1- 1923     	BANKSEL	_R_AIN4_DATA
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 04rr                      1- 1924     	SUBAR	(_R_AIN4_DATA + 1),W
     008B 0903                      1- 1925     	BTRSS	STATUS,2
                                    1- 1926     	MGOTO	_00790_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
     008D 219A                      1- 1927     	MOVIA	0x9a
     008E 04rr                      1- 1928     	SUBAR	_R_AIN4_DATA,W
     008F                           1- 1929     _00790_DS_:
     008F 0803                      1- 1930     	BTRSS	STATUS,0
                                    1- 1931     	MGOTO	_00623_DS_
     0090 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1932     	.line	765, "main.c"; 	pwStep = 9;
     0091 2109                      1- 1933     	MOVIA	0x09
                                    1- 1934     	BANKSEL	_pwStep
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 00rr                      1- 1935     	MOVAR	_pwStep
                                    1- 1936     	MGOTO	_00627_DS_
     0094 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1937     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1938     ;;unsigned compare: left >= lit (0x18C=396), size=2
     0095                           1- 1939     _00623_DS_:
                                    1- 1940     	.line	767, "main.c"; 	else if(R_AIN4_DATA > 395)
     0095 2101                      1- 1941     	MOVIA	0x01
                                    1- 1942     	BANKSEL	_R_AIN4_DATA
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 04rr                      1- 1943     	SUBAR	(_R_AIN4_DATA + 1),W
     0098 0903                      1- 1944     	BTRSS	STATUS,2
                                    1- 1945     	MGOTO	_00791_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
     009A 218C                      1- 1946     	MOVIA	0x8c
     009B 04rr                      1- 1947     	SUBAR	_R_AIN4_DATA,W
     009C                           1- 1948     _00791_DS_:
     009C 0803                      1- 1949     	BTRSS	STATUS,0
                                    1- 1950     	MGOTO	_00620_DS_
     009D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1951     	.line	769, "main.c"; 	fullCount = 0;
                                    1- 1952     	BANKSEL	_fullCount
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 02rr                      1- 1953     	CLRR	_fullCount
                                    1- 1954     ;;unsigned compare: left < lit (0x8=8), size=1
                                    1- 1955     	.line	770, "main.c"; 	if(pwStep < 8)
     00A0 2108                      1- 1956     	MOVIA	0x08
                                    1- 1957     	BANKSEL	_pwStep
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 04rr                      1- 1958     	SUBAR	_pwStep,W
     00A3 0C03                      1- 1959     	BTRSC	STATUS,0
                                    1- 1960     	MGOTO	_00534_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1961     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1962     ;;unsigned compare: left >= lit (0x191=401), size=2
                                    1- 1963     	.line	772, "main.c"; 	if(R_AIN4_DATA > 400)
     00A5 2101                      1- 1964     	MOVIA	0x01
                                    1- 1965     	BANKSEL	_R_AIN4_DATA
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 04rr                      1- 1966     	SUBAR	(_R_AIN4_DATA + 1),W
     00A8 0903                      1- 1967     	BTRSS	STATUS,2
                                    1- 1968     	MGOTO	_00793_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
     00AA 2191                      1- 1969     	MOVIA	0x91
     00AB 04rr                      1- 1970     	SUBAR	_R_AIN4_DATA,W
     00AC                           1- 1971     _00793_DS_:
     00AC 0803                      1- 1972     	BTRSS	STATUS,0
                                    1- 1973     	MGOTO	_00535_DS_
     00AD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1974     	.line	773, "main.c"; 	pwStep = 8;
     00AE 2108                      1- 1975     	MOVIA	0x08
                                    1- 1976     	BANKSEL	_pwStep
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 00rr                      1- 1977     	MOVAR	_pwStep
                                    1- 1978     	MGOTO	_00535_DS_
     00B1 3rrr                      3-   63 m1      LGOTO rom_address
     00B2                           1- 1979     _00534_DS_:
                                    1- 1980     	.line	775, "main.c"; 	else if(chrgTime == 0 && R_AIN4_DATA < 405)
                                    1- 1981     	BANKSEL	_chrgTime
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 01rr                      1- 1982     	MOVR	_chrgTime,W
     00B4 11rr                      1- 1983     	IORAR	(_chrgTime + 1),W
     00B5 0903                      1- 1984     	BTRSS	STATUS,2
                                    1- 1985     	MGOTO	_00535_DS_
     00B6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1986     ;;unsigned compare: left < lit (0x195=405), size=2
     00B7 2101                      1- 1987     	MOVIA	0x01
                                    1- 1988     	BANKSEL	_R_AIN4_DATA
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 04rr                      1- 1989     	SUBAR	(_R_AIN4_DATA + 1),W
     00BA 0903                      1- 1990     	BTRSS	STATUS,2
                                    1- 1991     	MGOTO	_00794_DS_
     00BB 3rrr                      3-   63 m1      LGOTO rom_address
     00BC 2195                      1- 1992     	MOVIA	0x95
     00BD 04rr                      1- 1993     	SUBAR	_R_AIN4_DATA,W
     00BE                           1- 1994     _00794_DS_:
     00BE 0C03                      1- 1995     	BTRSC	STATUS,0
                                    1- 1996     	MGOTO	_00535_DS_
     00BF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1997     	.line	777, "main.c"; 	pwStep = 8;
     00C0 2108                      1- 1998     	MOVIA	0x08
                                    1- 1999     	BANKSEL	_pwStep
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 00rr                      1- 2000     	MOVAR	_pwStep
     00C3                           1- 2001     _00535_DS_:
                                    1- 2002     	.line	781, "main.c"; 	if(chrgTime > 0 && R_AIN4_DATA > 406 && chrgTime > 600)
                                    1- 2003     	BANKSEL	_chrgTime
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 01rr                      1- 2004     	MOVR	_chrgTime,W
     00C5 11rr                      1- 2005     	IORAR	(_chrgTime + 1),W
     00C6 0D03                      1- 2006     	BTRSC	STATUS,2
                                    1- 2007     	MGOTO	_00627_DS_
     00C7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2008     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2009     ;;unsigned compare: left >= lit (0x197=407), size=2
     00C8 2101                      1- 2010     	MOVIA	0x01
                                    1- 2011     	BANKSEL	_R_AIN4_DATA
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 04rr                      1- 2012     	SUBAR	(_R_AIN4_DATA + 1),W
     00CB 0903                      1- 2013     	BTRSS	STATUS,2
                                    1- 2014     	MGOTO	_00795_DS_
     00CC 3rrr                      3-   63 m1      LGOTO rom_address
     00CD 2197                      1- 2015     	MOVIA	0x97
     00CE 04rr                      1- 2016     	SUBAR	_R_AIN4_DATA,W
     00CF                           1- 2017     _00795_DS_:
     00CF 0803                      1- 2018     	BTRSS	STATUS,0
                                    1- 2019     	MGOTO	_00627_DS_
     00D0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2020     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2021     ;;unsigned compare: left >= lit (0x259=601), size=2
     00D1 2102                      1- 2022     	MOVIA	0x02
                                    1- 2023     	BANKSEL	_chrgTime
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 04rr                      1- 2024     	SUBAR	(_chrgTime + 1),W
     00D4 0903                      1- 2025     	BTRSS	STATUS,2
                                    1- 2026     	MGOTO	_00796_DS_
     00D5 3rrr                      3-   63 m1      LGOTO rom_address
     00D6 2159                      1- 2027     	MOVIA	0x59
     00D7 04rr                      1- 2028     	SUBAR	_chrgTime,W
     00D8                           1- 2029     _00796_DS_:
     00D8 0803                      1- 2030     	BTRSS	STATUS,0
                                    1- 2031     	MGOTO	_00627_DS_
     00D9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2032     	.line	783, "main.c"; 	chrgTime = 600;
     00DA 2158                      1- 2033     	MOVIA	0x58
                                    1- 2034     	BANKSEL	_chrgTime
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 00rr                      1- 2035     	MOVAR	_chrgTime
     00DD 2102                      1- 2036     	MOVIA	0x02
     00DE 00rr                      1- 2037     	MOVAR	(_chrgTime + 1)
                                    1- 2038     	.line	784, "main.c"; 	pwStep = 9;
     00DF 2109                      1- 2039     	MOVIA	0x09
                                    1- 2040     	BANKSEL	_pwStep
     00E0 rrrr                      3-  110 m1      .banksel ram_address
     00E1 00rr                      1- 2041     	MOVAR	_pwStep
                                    1- 2042     	MGOTO	_00627_DS_
     00E2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2043     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2044     ;;unsigned compare: left >= lit (0x17D=381), size=2
     00E3                           1- 2045     _00620_DS_:
                                    1- 2046     	.line	787, "main.c"; 	else if(R_AIN4_DATA > 380)
     00E3 2101                      1- 2047     	MOVIA	0x01
                                    1- 2048     	BANKSEL	_R_AIN4_DATA
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 04rr                      1- 2049     	SUBAR	(_R_AIN4_DATA + 1),W
     00E6 0903                      1- 2050     	BTRSS	STATUS,2
                                    1- 2051     	MGOTO	_00797_DS_
     00E7 3rrr                      3-   63 m1      LGOTO rom_address
     00E8 217D                      1- 2052     	MOVIA	0x7d
     00E9 04rr                      1- 2053     	SUBAR	_R_AIN4_DATA,W
     00EA                           1- 2054     _00797_DS_:
     00EA 0803                      1- 2055     	BTRSS	STATUS,0
                                    1- 2056     	MGOTO	_00617_DS_
     00EB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2057     	.line	790, "main.c"; 	if(pwStep == 6)
                                    1- 2058     	BANKSEL	_pwStep
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 01rr                      1- 2059     	MOVR	_pwStep,W
     00EE 2406                      1- 2060     	XORIA	0x06
     00EF 0903                      1- 2061     	BTRSS	STATUS,2
                                    1- 2062     	MGOTO	_00543_DS_
     00F0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2063     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2064     ;;unsigned compare: left >= lit (0x182=386), size=2
                                    1- 2065     	.line	792, "main.c"; 	if(R_AIN4_DATA > 385)
     00F1 2101                      1- 2066     	MOVIA	0x01
                                    1- 2067     	BANKSEL	_R_AIN4_DATA
     00F2 rrrr                      3-  110 m1      .banksel ram_address
     00F3 04rr                      1- 2068     	SUBAR	(_R_AIN4_DATA + 1),W
     00F4 0903                      1- 2069     	BTRSS	STATUS,2
                                    1- 2070     	MGOTO	_00798_DS_
     00F5 3rrr                      3-   63 m1      LGOTO rom_address
     00F6 2182                      1- 2071     	MOVIA	0x82
     00F7 04rr                      1- 2072     	SUBAR	_R_AIN4_DATA,W
     00F8                           1- 2073     _00798_DS_:
     00F8 0803                      1- 2074     	BTRSS	STATUS,0
                                    1- 2075     	MGOTO	_00543_DS_
     00F9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2076     	.line	793, "main.c"; 	pwStep = 7;
     00FA 2107                      1- 2077     	MOVIA	0x07
                                    1- 2078     	BANKSEL	_pwStep
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 00rr                      1- 2079     	MOVAR	_pwStep
                                    1- 2080     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2081     ;;unsigned compare: left >= lit (0x8=8), size=1
     00FD                           1- 2082     _00543_DS_:
                                    1- 2083     	.line	795, "main.c"; 	if(pwStep > 7)
     00FD 2108                      1- 2084     	MOVIA	0x08
                                    1- 2085     	BANKSEL	_pwStep
     00FE rrrr                      3-  110 m1      .banksel ram_address
     00FF 04rr                      1- 2086     	SUBAR	_pwStep,W
     0100 0803                      1- 2087     	BTRSS	STATUS,0
                                    1- 2088     	MGOTO	_00547_DS_
     0101 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2089     ;;unsigned compare: left < lit (0x186=390), size=2
                                    1- 2090     	.line	797, "main.c"; 	if(R_AIN4_DATA < 390)
     0102 2101                      1- 2091     	MOVIA	0x01
                                    1- 2092     	BANKSEL	_R_AIN4_DATA
     0103 rrrr                      3-  110 m1      .banksel ram_address
     0104 04rr                      1- 2093     	SUBAR	(_R_AIN4_DATA + 1),W
     0105 0903                      1- 2094     	BTRSS	STATUS,2
                                    1- 2095     	MGOTO	_00800_DS_
     0106 3rrr                      3-   63 m1      LGOTO rom_address
     0107 2186                      1- 2096     	MOVIA	0x86
     0108 04rr                      1- 2097     	SUBAR	_R_AIN4_DATA,W
     0109                           1- 2098     _00800_DS_:
     0109 0C03                      1- 2099     	BTRSC	STATUS,0
                                    1- 2100     	MGOTO	_00548_DS_
     010A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2101     	.line	798, "main.c"; 	pwStep = 7;
     010B 2107                      1- 2102     	MOVIA	0x07
                                    1- 2103     	BANKSEL	_pwStep
     010C rrrr                      3-  110 m1      .banksel ram_address
     010D 00rr                      1- 2104     	MOVAR	_pwStep
                                    1- 2105     	MGOTO	_00548_DS_
     010E 3rrr                      3-   63 m1      LGOTO rom_address
     010F                           1- 2106     _00547_DS_:
                                    1- 2107     	.line	801, "main.c"; 	pwStep = 7;
     010F 2107                      1- 2108     	MOVIA	0x07
                                    1- 2109     	BANKSEL	_pwStep
     0110 rrrr                      3-  110 m1      .banksel ram_address
     0111 00rr                      1- 2110     	MOVAR	_pwStep
     0112                           1- 2111     _00548_DS_:
                                    1- 2112     	.line	802, "main.c"; 	chrgTime = 0;
                                    1- 2113     	BANKSEL	_chrgTime
     0112 rrrr                      3-  110 m1      .banksel ram_address
     0113 02rr                      1- 2114     	CLRR	_chrgTime
     0114 02rr                      1- 2115     	CLRR	(_chrgTime + 1)
                                    1- 2116     	MGOTO	_00627_DS_
     0115 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2117     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2118     ;;unsigned compare: left >= lit (0x15A=346), size=2
     0116                           1- 2119     _00617_DS_:
                                    1- 2120     	.line	804, "main.c"; 	else if(R_AIN4_DATA > 345)
     0116 2101                      1- 2121     	MOVIA	0x01
                                    1- 2122     	BANKSEL	_R_AIN4_DATA
     0117 rrrr                      3-  110 m1      .banksel ram_address
     0118 04rr                      1- 2123     	SUBAR	(_R_AIN4_DATA + 1),W
     0119 0903                      1- 2124     	BTRSS	STATUS,2
                                    1- 2125     	MGOTO	_00801_DS_
     011A 3rrr                      3-   63 m1      LGOTO rom_address
     011B 215A                      1- 2126     	MOVIA	0x5a
     011C 04rr                      1- 2127     	SUBAR	_R_AIN4_DATA,W
     011D                           1- 2128     _00801_DS_:
     011D 0803                      1- 2129     	BTRSS	STATUS,0
                                    1- 2130     	MGOTO	_00614_DS_
     011E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2131     	.line	807, "main.c"; 	if(pwStep == 5)
                                    1- 2132     	BANKSEL	_pwStep
     011F rrrr                      3-  110 m1      .banksel ram_address
     0120 01rr                      1- 2133     	MOVR	_pwStep,W
     0121 2405                      1- 2134     	XORIA	0x05
     0122 0903                      1- 2135     	BTRSS	STATUS,2
                                    1- 2136     	MGOTO	_00552_DS_
     0123 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2137     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2138     ;;unsigned compare: left >= lit (0x15F=351), size=2
                                    1- 2139     	.line	809, "main.c"; 	if(R_AIN4_DATA > 350)
     0124 2101                      1- 2140     	MOVIA	0x01
                                    1- 2141     	BANKSEL	_R_AIN4_DATA
     0125 rrrr                      3-  110 m1      .banksel ram_address
     0126 04rr                      1- 2142     	SUBAR	(_R_AIN4_DATA + 1),W
     0127 0903                      1- 2143     	BTRSS	STATUS,2
                                    1- 2144     	MGOTO	_00802_DS_
     0128 3rrr                      3-   63 m1      LGOTO rom_address
     0129 215F                      1- 2145     	MOVIA	0x5f
     012A 04rr                      1- 2146     	SUBAR	_R_AIN4_DATA,W
     012B                           1- 2147     _00802_DS_:
     012B 0803                      1- 2148     	BTRSS	STATUS,0
                                    1- 2149     	MGOTO	_00552_DS_
     012C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2150     	.line	810, "main.c"; 	pwStep = 6;
     012D 2106                      1- 2151     	MOVIA	0x06
                                    1- 2152     	BANKSEL	_pwStep
     012E rrrr                      3-  110 m1      .banksel ram_address
     012F 00rr                      1- 2153     	MOVAR	_pwStep
                                    1- 2154     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2155     ;;unsigned compare: left >= lit (0x7=7), size=1
     0130                           1- 2156     _00552_DS_:
                                    1- 2157     	.line	812, "main.c"; 	if(pwStep > 6)
     0130 2107                      1- 2158     	MOVIA	0x07
                                    1- 2159     	BANKSEL	_pwStep
     0131 rrrr                      3-  110 m1      .banksel ram_address
     0132 04rr                      1- 2160     	SUBAR	_pwStep,W
     0133 0803                      1- 2161     	BTRSS	STATUS,0
                                    1- 2162     	MGOTO	_00556_DS_
     0134 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2163     ;;unsigned compare: left < lit (0x177=375), size=2
                                    1- 2164     	.line	814, "main.c"; 	if(R_AIN4_DATA < 375)
     0135 2101                      1- 2165     	MOVIA	0x01
                                    1- 2166     	BANKSEL	_R_AIN4_DATA
     0136 rrrr                      3-  110 m1      .banksel ram_address
     0137 04rr                      1- 2167     	SUBAR	(_R_AIN4_DATA + 1),W
     0138 0903                      1- 2168     	BTRSS	STATUS,2
                                    1- 2169     	MGOTO	_00804_DS_
     0139 3rrr                      3-   63 m1      LGOTO rom_address
     013A 2177                      1- 2170     	MOVIA	0x77
     013B 04rr                      1- 2171     	SUBAR	_R_AIN4_DATA,W
     013C                           1- 2172     _00804_DS_:
     013C 0C03                      1- 2173     	BTRSC	STATUS,0
                                    1- 2174     	MGOTO	_00557_DS_
     013D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2175     	.line	815, "main.c"; 	pwStep = 6;
     013E 2106                      1- 2176     	MOVIA	0x06
                                    1- 2177     	BANKSEL	_pwStep
     013F rrrr                      3-  110 m1      .banksel ram_address
     0140 00rr                      1- 2178     	MOVAR	_pwStep
                                    1- 2179     	MGOTO	_00557_DS_
     0141 3rrr                      3-   63 m1      LGOTO rom_address
     0142                           1- 2180     _00556_DS_:
                                    1- 2181     	.line	818, "main.c"; 	pwStep = 6;
     0142 2106                      1- 2182     	MOVIA	0x06
                                    1- 2183     	BANKSEL	_pwStep
     0143 rrrr                      3-  110 m1      .banksel ram_address
     0144 00rr                      1- 2184     	MOVAR	_pwStep
     0145                           1- 2185     _00557_DS_:
                                    1- 2186     	.line	819, "main.c"; 	chrgTime = 0;
                                    1- 2187     	BANKSEL	_chrgTime
     0145 rrrr                      3-  110 m1      .banksel ram_address
     0146 02rr                      1- 2188     	CLRR	_chrgTime
     0147 02rr                      1- 2189     	CLRR	(_chrgTime + 1)
                                    1- 2190     	MGOTO	_00627_DS_
     0148 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2191     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2192     ;;unsigned compare: left >= lit (0x132=306), size=2
     0149                           1- 2193     _00614_DS_:
                                    1- 2194     	.line	821, "main.c"; 	else if(R_AIN4_DATA > 305)
     0149 2101                      1- 2195     	MOVIA	0x01
                                    1- 2196     	BANKSEL	_R_AIN4_DATA
     014A rrrr                      3-  110 m1      .banksel ram_address
     014B 04rr                      1- 2197     	SUBAR	(_R_AIN4_DATA + 1),W
     014C 0903                      1- 2198     	BTRSS	STATUS,2
                                    1- 2199     	MGOTO	_00805_DS_
     014D 3rrr                      3-   63 m1      LGOTO rom_address
     014E 2132                      1- 2200     	MOVIA	0x32
     014F 04rr                      1- 2201     	SUBAR	_R_AIN4_DATA,W
     0150                           1- 2202     _00805_DS_:
     0150 0803                      1- 2203     	BTRSS	STATUS,0
                                    1- 2204     	MGOTO	_00611_DS_
     0151 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2205     	.line	824, "main.c"; 	if(pwStep == 4)
                                    1- 2206     	BANKSEL	_pwStep
     0152 rrrr                      3-  110 m1      .banksel ram_address
     0153 01rr                      1- 2207     	MOVR	_pwStep,W
     0154 2404                      1- 2208     	XORIA	0x04
     0155 0903                      1- 2209     	BTRSS	STATUS,2
                                    1- 2210     	MGOTO	_00561_DS_
     0156 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2211     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2212     ;;unsigned compare: left >= lit (0x137=311), size=2
                                    1- 2213     	.line	826, "main.c"; 	if(R_AIN4_DATA > 310)
     0157 2101                      1- 2214     	MOVIA	0x01
                                    1- 2215     	BANKSEL	_R_AIN4_DATA
     0158 rrrr                      3-  110 m1      .banksel ram_address
     0159 04rr                      1- 2216     	SUBAR	(_R_AIN4_DATA + 1),W
     015A 0903                      1- 2217     	BTRSS	STATUS,2
                                    1- 2218     	MGOTO	_00806_DS_
     015B 3rrr                      3-   63 m1      LGOTO rom_address
     015C 2137                      1- 2219     	MOVIA	0x37
     015D 04rr                      1- 2220     	SUBAR	_R_AIN4_DATA,W
     015E                           1- 2221     _00806_DS_:
     015E 0803                      1- 2222     	BTRSS	STATUS,0
                                    1- 2223     	MGOTO	_00561_DS_
     015F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2224     	.line	827, "main.c"; 	pwStep = 5;
     0160 2105                      1- 2225     	MOVIA	0x05
                                    1- 2226     	BANKSEL	_pwStep
     0161 rrrr                      3-  110 m1      .banksel ram_address
     0162 00rr                      1- 2227     	MOVAR	_pwStep
                                    1- 2228     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2229     ;;unsigned compare: left >= lit (0x6=6), size=1
     0163                           1- 2230     _00561_DS_:
                                    1- 2231     	.line	829, "main.c"; 	if(pwStep > 5)
     0163 2106                      1- 2232     	MOVIA	0x06
                                    1- 2233     	BANKSEL	_pwStep
     0164 rrrr                      3-  110 m1      .banksel ram_address
     0165 04rr                      1- 2234     	SUBAR	_pwStep,W
     0166 0803                      1- 2235     	BTRSS	STATUS,0
                                    1- 2236     	MGOTO	_00565_DS_
     0167 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2237     ;;unsigned compare: left < lit (0x154=340), size=2
                                    1- 2238     	.line	831, "main.c"; 	if(R_AIN4_DATA < 340)
     0168 2101                      1- 2239     	MOVIA	0x01
                                    1- 2240     	BANKSEL	_R_AIN4_DATA
     0169 rrrr                      3-  110 m1      .banksel ram_address
     016A 04rr                      1- 2241     	SUBAR	(_R_AIN4_DATA + 1),W
     016B 0903                      1- 2242     	BTRSS	STATUS,2
                                    1- 2243     	MGOTO	_00808_DS_
     016C 3rrr                      3-   63 m1      LGOTO rom_address
     016D 2154                      1- 2244     	MOVIA	0x54
     016E 04rr                      1- 2245     	SUBAR	_R_AIN4_DATA,W
     016F                           1- 2246     _00808_DS_:
     016F 0C03                      1- 2247     	BTRSC	STATUS,0
                                    1- 2248     	MGOTO	_00566_DS_
     0170 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2249     	.line	832, "main.c"; 	pwStep = 5;
     0171 2105                      1- 2250     	MOVIA	0x05
                                    1- 2251     	BANKSEL	_pwStep
     0172 rrrr                      3-  110 m1      .banksel ram_address
     0173 00rr                      1- 2252     	MOVAR	_pwStep
                                    1- 2253     	MGOTO	_00566_DS_
     0174 3rrr                      3-   63 m1      LGOTO rom_address
     0175                           1- 2254     _00565_DS_:
                                    1- 2255     	.line	835, "main.c"; 	pwStep = 5;
     0175 2105                      1- 2256     	MOVIA	0x05
                                    1- 2257     	BANKSEL	_pwStep
     0176 rrrr                      3-  110 m1      .banksel ram_address
     0177 00rr                      1- 2258     	MOVAR	_pwStep
     0178                           1- 2259     _00566_DS_:
                                    1- 2260     	.line	836, "main.c"; 	chrgTime = 0;
                                    1- 2261     	BANKSEL	_chrgTime
     0178 rrrr                      3-  110 m1      .banksel ram_address
     0179 02rr                      1- 2262     	CLRR	_chrgTime
     017A 02rr                      1- 2263     	CLRR	(_chrgTime + 1)
                                    1- 2264     	MGOTO	_00627_DS_
     017B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2265     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2266     ;;unsigned compare: left >= lit (0xF1=241), size=2
     017C                           1- 2267     _00611_DS_:
                                    1- 2268     	.line	838, "main.c"; 	else if(R_AIN4_DATA > 240)
     017C 2100                      1- 2269     	MOVIA	0x00
                                    1- 2270     	BANKSEL	_R_AIN4_DATA
     017D rrrr                      3-  110 m1      .banksel ram_address
     017E 04rr                      1- 2271     	SUBAR	(_R_AIN4_DATA + 1),W
     017F 0903                      1- 2272     	BTRSS	STATUS,2
                                    1- 2273     	MGOTO	_00809_DS_
     0180 3rrr                      3-   63 m1      LGOTO rom_address
     0181 21F1                      1- 2274     	MOVIA	0xf1
     0182 04rr                      1- 2275     	SUBAR	_R_AIN4_DATA,W
     0183                           1- 2276     _00809_DS_:
     0183 0803                      1- 2277     	BTRSS	STATUS,0
                                    1- 2278     	MGOTO	_00608_DS_
     0184 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2279     	.line	840, "main.c"; 	if(pwStep == 3)
                                    1- 2280     	BANKSEL	_pwStep
     0185 rrrr                      3-  110 m1      .banksel ram_address
     0186 01rr                      1- 2281     	MOVR	_pwStep,W
     0187 2403                      1- 2282     	XORIA	0x03
     0188 0903                      1- 2283     	BTRSS	STATUS,2
                                    1- 2284     	MGOTO	_00570_DS_
     0189 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2285     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2286     ;;unsigned compare: left >= lit (0xF6=246), size=2
                                    1- 2287     	.line	842, "main.c"; 	if(R_AIN4_DATA > 245)
     018A 2100                      1- 2288     	MOVIA	0x00
                                    1- 2289     	BANKSEL	_R_AIN4_DATA
     018B rrrr                      3-  110 m1      .banksel ram_address
     018C 04rr                      1- 2290     	SUBAR	(_R_AIN4_DATA + 1),W
     018D 0903                      1- 2291     	BTRSS	STATUS,2
                                    1- 2292     	MGOTO	_00810_DS_
     018E 3rrr                      3-   63 m1      LGOTO rom_address
     018F 21F6                      1- 2293     	MOVIA	0xf6
     0190 04rr                      1- 2294     	SUBAR	_R_AIN4_DATA,W
     0191                           1- 2295     _00810_DS_:
     0191 0803                      1- 2296     	BTRSS	STATUS,0
                                    1- 2297     	MGOTO	_00570_DS_
     0192 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2298     	.line	843, "main.c"; 	pwStep = 4;
     0193 2104                      1- 2299     	MOVIA	0x04
                                    1- 2300     	BANKSEL	_pwStep
     0194 rrrr                      3-  110 m1      .banksel ram_address
     0195 00rr                      1- 2301     	MOVAR	_pwStep
                                    1- 2302     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2303     ;;unsigned compare: left >= lit (0x5=5), size=1
     0196                           1- 2304     _00570_DS_:
                                    1- 2305     	.line	845, "main.c"; 	if(pwStep > 4)
     0196 2105                      1- 2306     	MOVIA	0x05
                                    1- 2307     	BANKSEL	_pwStep
     0197 rrrr                      3-  110 m1      .banksel ram_address
     0198 04rr                      1- 2308     	SUBAR	_pwStep,W
     0199 0803                      1- 2309     	BTRSS	STATUS,0
                                    1- 2310     	MGOTO	_00574_DS_
     019A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2311     ;;unsigned compare: left < lit (0x12C=300), size=2
                                    1- 2312     	.line	847, "main.c"; 	if(R_AIN4_DATA < 300)
     019B 2101                      1- 2313     	MOVIA	0x01
                                    1- 2314     	BANKSEL	_R_AIN4_DATA
     019C rrrr                      3-  110 m1      .banksel ram_address
     019D 04rr                      1- 2315     	SUBAR	(_R_AIN4_DATA + 1),W
     019E 0903                      1- 2316     	BTRSS	STATUS,2
                                    1- 2317     	MGOTO	_00812_DS_
     019F 3rrr                      3-   63 m1      LGOTO rom_address
     01A0 212C                      1- 2318     	MOVIA	0x2c
     01A1 04rr                      1- 2319     	SUBAR	_R_AIN4_DATA,W
     01A2                           1- 2320     _00812_DS_:
     01A2 0C03                      1- 2321     	BTRSC	STATUS,0
                                    1- 2322     	MGOTO	_00575_DS_
     01A3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2323     	.line	848, "main.c"; 	pwStep = 4;
     01A4 2104                      1- 2324     	MOVIA	0x04
                                    1- 2325     	BANKSEL	_pwStep
     01A5 rrrr                      3-  110 m1      .banksel ram_address
     01A6 00rr                      1- 2326     	MOVAR	_pwStep
                                    1- 2327     	MGOTO	_00575_DS_
     01A7 3rrr                      3-   63 m1      LGOTO rom_address
     01A8                           1- 2328     _00574_DS_:
                                    1- 2329     	.line	851, "main.c"; 	pwStep = 4;
     01A8 2104                      1- 2330     	MOVIA	0x04
                                    1- 2331     	BANKSEL	_pwStep
     01A9 rrrr                      3-  110 m1      .banksel ram_address
     01AA 00rr                      1- 2332     	MOVAR	_pwStep
     01AB                           1- 2333     _00575_DS_:
                                    1- 2334     	.line	852, "main.c"; 	chrgTime = 0;
                                    1- 2335     	BANKSEL	_chrgTime
     01AB rrrr                      3-  110 m1      .banksel ram_address
     01AC 02rr                      1- 2336     	CLRR	_chrgTime
     01AD 02rr                      1- 2337     	CLRR	(_chrgTime + 1)
                                    1- 2338     	MGOTO	_00627_DS_
     01AE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2339     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2340     ;;unsigned compare: left >= lit (0xC9=201), size=2
     01AF                           1- 2341     _00608_DS_:
                                    1- 2342     	.line	854, "main.c"; 	else if(R_AIN4_DATA > 200)
     01AF 2100                      1- 2343     	MOVIA	0x00
                                    1- 2344     	BANKSEL	_R_AIN4_DATA
     01B0 rrrr                      3-  110 m1      .banksel ram_address
     01B1 04rr                      1- 2345     	SUBAR	(_R_AIN4_DATA + 1),W
     01B2 0903                      1- 2346     	BTRSS	STATUS,2
                                    1- 2347     	MGOTO	_00813_DS_
     01B3 3rrr                      3-   63 m1      LGOTO rom_address
     01B4 21C9                      1- 2348     	MOVIA	0xc9
     01B5 04rr                      1- 2349     	SUBAR	_R_AIN4_DATA,W
     01B6                           1- 2350     _00813_DS_:
     01B6 0803                      1- 2351     	BTRSS	STATUS,0
                                    1- 2352     	MGOTO	_00605_DS_
     01B7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2353     	.line	856, "main.c"; 	if(pwStep == 2)
                                    1- 2354     	BANKSEL	_pwStep
     01B8 rrrr                      3-  110 m1      .banksel ram_address
     01B9 01rr                      1- 2355     	MOVR	_pwStep,W
     01BA 2402                      1- 2356     	XORIA	0x02
     01BB 0903                      1- 2357     	BTRSS	STATUS,2
                                    1- 2358     	MGOTO	_00579_DS_
     01BC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2359     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2360     ;;unsigned compare: left >= lit (0xD3=211), size=2
                                    1- 2361     	.line	858, "main.c"; 	if(R_AIN4_DATA > 210)
     01BD 2100                      1- 2362     	MOVIA	0x00
                                    1- 2363     	BANKSEL	_R_AIN4_DATA
     01BE rrrr                      3-  110 m1      .banksel ram_address
     01BF 04rr                      1- 2364     	SUBAR	(_R_AIN4_DATA + 1),W
     01C0 0903                      1- 2365     	BTRSS	STATUS,2
                                    1- 2366     	MGOTO	_00814_DS_
     01C1 3rrr                      3-   63 m1      LGOTO rom_address
     01C2 21D3                      1- 2367     	MOVIA	0xd3
     01C3 04rr                      1- 2368     	SUBAR	_R_AIN4_DATA,W
     01C4                           1- 2369     _00814_DS_:
     01C4 0803                      1- 2370     	BTRSS	STATUS,0
                                    1- 2371     	MGOTO	_00579_DS_
     01C5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2372     	.line	859, "main.c"; 	pwStep = 3;
     01C6 2103                      1- 2373     	MOVIA	0x03
                                    1- 2374     	BANKSEL	_pwStep
     01C7 rrrr                      3-  110 m1      .banksel ram_address
     01C8 00rr                      1- 2375     	MOVAR	_pwStep
                                    1- 2376     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2377     ;;unsigned compare: left >= lit (0x4=4), size=1
     01C9                           1- 2378     _00579_DS_:
                                    1- 2379     	.line	861, "main.c"; 	if(pwStep > 3)
     01C9 2104                      1- 2380     	MOVIA	0x04
                                    1- 2381     	BANKSEL	_pwStep
     01CA rrrr                      3-  110 m1      .banksel ram_address
     01CB 04rr                      1- 2382     	SUBAR	_pwStep,W
     01CC 0803                      1- 2383     	BTRSS	STATUS,0
                                    1- 2384     	MGOTO	_00583_DS_
     01CD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2385     ;;unsigned compare: left < lit (0xEB=235), size=2
                                    1- 2386     	.line	863, "main.c"; 	if(R_AIN4_DATA < 235)
     01CE 2100                      1- 2387     	MOVIA	0x00
                                    1- 2388     	BANKSEL	_R_AIN4_DATA
     01CF rrrr                      3-  110 m1      .banksel ram_address
     01D0 04rr                      1- 2389     	SUBAR	(_R_AIN4_DATA + 1),W
     01D1 0903                      1- 2390     	BTRSS	STATUS,2
                                    1- 2391     	MGOTO	_00816_DS_
     01D2 3rrr                      3-   63 m1      LGOTO rom_address
     01D3 21EB                      1- 2392     	MOVIA	0xeb
     01D4 04rr                      1- 2393     	SUBAR	_R_AIN4_DATA,W
     01D5                           1- 2394     _00816_DS_:
     01D5 0C03                      1- 2395     	BTRSC	STATUS,0
                                    1- 2396     	MGOTO	_00584_DS_
     01D6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2397     	.line	864, "main.c"; 	pwStep = 3;
     01D7 2103                      1- 2398     	MOVIA	0x03
                                    1- 2399     	BANKSEL	_pwStep
     01D8 rrrr                      3-  110 m1      .banksel ram_address
     01D9 00rr                      1- 2400     	MOVAR	_pwStep
                                    1- 2401     	MGOTO	_00584_DS_
     01DA 3rrr                      3-   63 m1      LGOTO rom_address
     01DB                           1- 2402     _00583_DS_:
                                    1- 2403     	.line	867, "main.c"; 	pwStep = 3;
     01DB 2103                      1- 2404     	MOVIA	0x03
                                    1- 2405     	BANKSEL	_pwStep
     01DC rrrr                      3-  110 m1      .banksel ram_address
     01DD 00rr                      1- 2406     	MOVAR	_pwStep
     01DE                           1- 2407     _00584_DS_:
                                    1- 2408     	.line	868, "main.c"; 	chrgTime = 0;
                                    1- 2409     	BANKSEL	_chrgTime
     01DE rrrr                      3-  110 m1      .banksel ram_address
     01DF 02rr                      1- 2410     	CLRR	_chrgTime
     01E0 02rr                      1- 2411     	CLRR	(_chrgTime + 1)
                                    1- 2412     	MGOTO	_00627_DS_
     01E1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2413     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2414     ;;unsigned compare: left >= lit (0x65=101), size=2
     01E2                           1- 2415     _00605_DS_:
                                    1- 2416     	.line	870, "main.c"; 	else if(R_AIN4_DATA > 100)
     01E2 2100                      1- 2417     	MOVIA	0x00
                                    1- 2418     	BANKSEL	_R_AIN4_DATA
     01E3 rrrr                      3-  110 m1      .banksel ram_address
     01E4 04rr                      1- 2419     	SUBAR	(_R_AIN4_DATA + 1),W
     01E5 0903                      1- 2420     	BTRSS	STATUS,2
                                    1- 2421     	MGOTO	_00817_DS_
     01E6 3rrr                      3-   63 m1      LGOTO rom_address
     01E7 2165                      1- 2422     	MOVIA	0x65
     01E8 04rr                      1- 2423     	SUBAR	_R_AIN4_DATA,W
     01E9                           1- 2424     _00817_DS_:
     01E9 0803                      1- 2425     	BTRSS	STATUS,0
                                    1- 2426     	MGOTO	_00602_DS_
     01EA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2427     	.line	873, "main.c"; 	if(pwStep == 1)
                                    1- 2428     	BANKSEL	_pwStep
     01EB rrrr                      3-  110 m1      .banksel ram_address
     01EC 01rr                      1- 2429     	MOVR	_pwStep,W
     01ED 2401                      1- 2430     	XORIA	0x01
     01EE 0903                      1- 2431     	BTRSS	STATUS,2
                                    1- 2432     	MGOTO	_00588_DS_
     01EF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2433     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2434     ;;unsigned compare: left >= lit (0x6F=111), size=2
                                    1- 2435     	.line	875, "main.c"; 	if(R_AIN4_DATA > 110)
     01F0 2100                      1- 2436     	MOVIA	0x00
                                    1- 2437     	BANKSEL	_R_AIN4_DATA
     01F1 rrrr                      3-  110 m1      .banksel ram_address
     01F2 04rr                      1- 2438     	SUBAR	(_R_AIN4_DATA + 1),W
     01F3 0903                      1- 2439     	BTRSS	STATUS,2
                                    1- 2440     	MGOTO	_00818_DS_
     01F4 3rrr                      3-   63 m1      LGOTO rom_address
     01F5 216F                      1- 2441     	MOVIA	0x6f
     01F6 04rr                      1- 2442     	SUBAR	_R_AIN4_DATA,W
     01F7                           1- 2443     _00818_DS_:
     01F7 0803                      1- 2444     	BTRSS	STATUS,0
                                    1- 2445     	MGOTO	_00588_DS_
     01F8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2446     	.line	876, "main.c"; 	pwStep = 2;
     01F9 2102                      1- 2447     	MOVIA	0x02
                                    1- 2448     	BANKSEL	_pwStep
     01FA rrrr                      3-  110 m1      .banksel ram_address
     01FB 00rr                      1- 2449     	MOVAR	_pwStep
                                    1- 2450     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2451     ;;unsigned compare: left >= lit (0x3=3), size=1
     01FC                           1- 2452     _00588_DS_:
                                    1- 2453     	.line	878, "main.c"; 	if(pwStep > 2)
     01FC 2103                      1- 2454     	MOVIA	0x03
                                    1- 2455     	BANKSEL	_pwStep
     01FD rrrr                      3-  110 m1      .banksel ram_address
     01FE 04rr                      1- 2456     	SUBAR	_pwStep,W
     01FF 0803                      1- 2457     	BTRSS	STATUS,0
                                    1- 2458     	MGOTO	_00592_DS_
     0200 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2459     ;;unsigned compare: left < lit (0x96=150), size=2
                                    1- 2460     	.line	880, "main.c"; 	if(R_AIN4_DATA < 150)
     0201 2100                      1- 2461     	MOVIA	0x00
                                    1- 2462     	BANKSEL	_R_AIN4_DATA
     0202 rrrr                      3-  110 m1      .banksel ram_address
     0203 04rr                      1- 2463     	SUBAR	(_R_AIN4_DATA + 1),W
     0204 0903                      1- 2464     	BTRSS	STATUS,2
                                    1- 2465     	MGOTO	_00820_DS_
     0205 3rrr                      3-   63 m1      LGOTO rom_address
     0206 2196                      1- 2466     	MOVIA	0x96
     0207 04rr                      1- 2467     	SUBAR	_R_AIN4_DATA,W
     0208                           1- 2468     _00820_DS_:
     0208 0C03                      1- 2469     	BTRSC	STATUS,0
                                    1- 2470     	MGOTO	_00593_DS_
     0209 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2471     	.line	881, "main.c"; 	pwStep = 2;
     020A 2102                      1- 2472     	MOVIA	0x02
                                    1- 2473     	BANKSEL	_pwStep
     020B rrrr                      3-  110 m1      .banksel ram_address
     020C 00rr                      1- 2474     	MOVAR	_pwStep
                                    1- 2475     	MGOTO	_00593_DS_
     020D 3rrr                      3-   63 m1      LGOTO rom_address
     020E                           1- 2476     _00592_DS_:
                                    1- 2477     	.line	884, "main.c"; 	pwStep = 2;
     020E 2102                      1- 2478     	MOVIA	0x02
                                    1- 2479     	BANKSEL	_pwStep
     020F rrrr                      3-  110 m1      .banksel ram_address
     0210 00rr                      1- 2480     	MOVAR	_pwStep
     0211                           1- 2481     _00593_DS_:
                                    1- 2482     	.line	885, "main.c"; 	chrgTime = 0;
                                    1- 2483     	BANKSEL	_chrgTime
     0211 rrrr                      3-  110 m1      .banksel ram_address
     0212 02rr                      1- 2484     	CLRR	_chrgTime
     0213 02rr                      1- 2485     	CLRR	(_chrgTime + 1)
                                    1- 2486     	MGOTO	_00627_DS_
     0214 3rrr                      3-   63 m1      LGOTO rom_address
     0215                           1- 2487     _00602_DS_:
                                    1- 2488     	.line	887, "main.c"; 	else  if(R_AIN4_DATA > 0)
                                    1- 2489     	BANKSEL	_R_AIN4_DATA
     0215 rrrr                      3-  110 m1      .banksel ram_address
     0216 01rr                      1- 2490     	MOVR	_R_AIN4_DATA,W
     0217 11rr                      1- 2491     	IORAR	(_R_AIN4_DATA + 1),W
     0218 0D03                      1- 2492     	BTRSC	STATUS,2
                                    1- 2493     	MGOTO	_00627_DS_
     0219 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2494     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2495     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 2496     	.line	890, "main.c"; 	if(pwStep > 1)
     021A 2102                      1- 2497     	MOVIA	0x02
                                    1- 2498     	BANKSEL	_pwStep
     021B rrrr                      3-  110 m1      .banksel ram_address
     021C 04rr                      1- 2499     	SUBAR	_pwStep,W
     021D 0803                      1- 2500     	BTRSS	STATUS,0
                                    1- 2501     	MGOTO	_00597_DS_
     021E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2502     ;;unsigned compare: left < lit (0x32=50), size=2
                                    1- 2503     	.line	892, "main.c"; 	if(R_AIN4_DATA < 50)
     021F 2100                      1- 2504     	MOVIA	0x00
                                    1- 2505     	BANKSEL	_R_AIN4_DATA
     0220 rrrr                      3-  110 m1      .banksel ram_address
     0221 04rr                      1- 2506     	SUBAR	(_R_AIN4_DATA + 1),W
     0222 0903                      1- 2507     	BTRSS	STATUS,2
                                    1- 2508     	MGOTO	_00822_DS_
     0223 3rrr                      3-   63 m1      LGOTO rom_address
     0224 2132                      1- 2509     	MOVIA	0x32
     0225 04rr                      1- 2510     	SUBAR	_R_AIN4_DATA,W
     0226                           1- 2511     _00822_DS_:
     0226 0C03                      1- 2512     	BTRSC	STATUS,0
                                    1- 2513     	MGOTO	_00598_DS_
     0227 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2514     	.line	893, "main.c"; 	pwStep = 1;
     0228 2101                      1- 2515     	MOVIA	0x01
                                    1- 2516     	BANKSEL	_pwStep
     0229 rrrr                      3-  110 m1      .banksel ram_address
     022A 00rr                      1- 2517     	MOVAR	_pwStep
                                    1- 2518     	MGOTO	_00598_DS_
     022B 3rrr                      3-   63 m1      LGOTO rom_address
     022C                           1- 2519     _00597_DS_:
                                    1- 2520     	.line	896, "main.c"; 	pwStep = 1;
     022C 2101                      1- 2521     	MOVIA	0x01
                                    1- 2522     	BANKSEL	_pwStep
     022D rrrr                      3-  110 m1      .banksel ram_address
     022E 00rr                      1- 2523     	MOVAR	_pwStep
     022F                           1- 2524     _00598_DS_:
                                    1- 2525     	.line	897, "main.c"; 	chrgTime = 0;
                                    1- 2526     	BANKSEL	_chrgTime
     022F rrrr                      3-  110 m1      .banksel ram_address
     0230 02rr                      1- 2527     	CLRR	_chrgTime
     0231 02rr                      1- 2528     	CLRR	(_chrgTime + 1)
     0232                           1- 2529     _00627_DS_:
                                    1- 2530     	.line	899, "main.c"; 	if(workStep > 0)
                                    1- 2531     	BANKSEL	_workStep
     0232 rrrr                      3-  110 m1      .banksel ram_address
     0233 01rr                      1- 2532     	MOVR	_workStep,W
     0234 0D03                      1- 2533     	BTRSC	STATUS,2
                                    1- 2534     	MGOTO	_00630_DS_
     0235 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2535     	.line	900, "main.c"; 	ledStep = workStep;
     0236 01rr                      1- 2536     	MOVR	_workStep,W
                                    1- 2537     	BANKSEL	_ledStep
     0237 rrrr                      3-  110 m1      .banksel ram_address
     0238 00rr                      1- 2538     	MOVAR	_ledStep
     0239                           1- 2539     _00630_DS_:
                                    1- 2540     	.line	902, "main.c"; 	}
                                    1- 2541     	RETURN	
     0239 0010                      3-   40 m1      ret
                                    1- 2542     ; exit point of _checkBatAD
                                    1- 2544     ;***
                                    1- 2545     ;  pBlock Stats: dbName = C
                                    1- 2546     ;***
                                    1- 2547     ;has an exit
                                    1- 2548     ;functions called:
                                    1- 2549     ;   _delay
                                    1- 2550     ;   _delay
                                    1- 2551     ;; Starting pCode block
                                    1- 2552     .segment "code"; module=main, function=_initAD
     0000                           1- 2554     _initAD:
                                    1- 2555     ; 2 exit points
                                    1- 2556     	.line	699, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 2557     	MOVIA	0x84
     0001 00rr                      1- 2558     	MOVAR	_ADMD
                                    1- 2559     	.line	704, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 2560     	CLRR	_ADVREFH
                                    1- 2561     	.line	709, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 2562     	MOVIA	0x10
     0004 00rr                      1- 2563     	MOVAR	_ADR
                                    1- 2564     	.line	711, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 2565     	MOVIA	0x03
     0006 00rr                      1- 2566     	MOVAR	_ADCR
                                    1- 2567     	.line	714, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 2568     	BSR	_ADMDbits,4
                                    1- 2569     	.line	715, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 2570     	MOVIA	0x64
                                    1- 2571     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2572     	.line	718, "main.c"; 	}
                                    1- 2573     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 2574     ; exit point of _initAD
                                    1- 2576     ;***
                                    1- 2577     ;  pBlock Stats: dbName = C
                                    1- 2578     ;***
                                    1- 2579     ;has an exit
                                    1- 2580     ;2 compiler assigned registers:
                                    1- 2581     ;   r0x1033
                                    1- 2582     ;   r0x1034
                                    1- 2583     ;; Starting pCode block
                                    1- 2584     .segment "code"; module=main, function=_delay
                                    1- 2586     ;local variable name mapping:
     0000                           1- 2589     _delay:
                                    1- 2590     ; 2 exit points
                                    1- 2591     	.line	689, "main.c"; 	void delay(u8t time)
                                    1- 2592     	BANKSEL	r0x1033
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2593     	MOVAR	r0x1033
                                    1- 2594     	.line	691, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2595     	BANKSEL	r0x1034
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2596     	CLRR	r0x1034
     0004                           1- 2597     _00502_DS_:
                                    1- 2598     	BANKSEL	r0x1033
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 2599     	MOVR	r0x1033,W
                                    1- 2600     	BANKSEL	r0x1034
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1- 2601     	SUBAR	r0x1034,W
     0008 0C03                      1- 2602     	BTRSC	STATUS,0
                                    1- 2603     	MGOTO	_00504_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2604     	.line	692, "main.c"; 	NOP();
     000A 0000                      1- 2605     	nop
                                    1- 2606     	.line	691, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2607     	BANKSEL	r0x1034
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 2608     	INCR	r0x1034,F
                                    1- 2609     	MGOTO	_00502_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 2610     _00504_DS_:
                                    1- 2611     	.line	693, "main.c"; 	}
                                    1- 2612     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2613     ; exit point of _delay
                                    1- 2615     ;***
                                    1- 2616     ;  pBlock Stats: dbName = C
                                    1- 2617     ;***
                                    1- 2618     ;has an exit
                                    1- 2619     ;functions called:
                                    1- 2620     ;   _pwmStop
                                    1- 2621     ;   _powerOff
                                    1- 2622     ;   _pwmStop
                                    1- 2623     ;   _powerOff
                                    1- 2624     ;5 compiler assigned registers:
                                    1- 2625     ;   r0x104F
                                    1- 2626     ;   r0x1050
                                    1- 2627     ;   r0x1051
                                    1- 2628     ;   r0x1052
                                    1- 2629     ;   r0x1053
                                    1- 2630     ;; Starting pCode block
                                    1- 2631     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2633     _chrgCtr:
                                    1- 2634     ; 2 exit points
                                    1- 2635     	.line	603, "main.c"; 	if(PORTA & 0x20)
                                    1- 2636     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Arr                      1- 2637     	BTRSS	_PORTA,5
                                    1- 2638     	MGOTO	_00444_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2639     	.line	606, "main.c"; 	chrgFlag = 1;
     0003 2101                      1- 2640     	MOVIA	0x01
                                    1- 2641     	BANKSEL	_chrgFlag
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 00rr                      1- 2642     	MOVAR	_chrgFlag
                                    1- 2643     	.line	607, "main.c"; 	workStep = 0;
                                    1- 2644     	BANKSEL	_workStep
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2645     	CLRR	_workStep
                                    1- 2646     	.line	608, "main.c"; 	ledLightTime = 0;
                                    1- 2647     	BANKSEL	_ledLightTime
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 2648     	CLRR	_ledLightTime
                                    1- 2649     	.line	609, "main.c"; 	pwmStop();
                                    1- 2650     	MCALL	_pwmStop
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2651     ;;unsigned compare: left < lit (0x9=9), size=1
                                    1- 2652     	.line	611, "main.c"; 	if(pwStep >= 9)
     000B 2109                      1- 2653     	MOVIA	0x09
                                    1- 2654     	BANKSEL	_pwStep
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 04rr                      1- 2655     	SUBAR	_pwStep,W
     000E 0803                      1- 2656     	BTRSS	STATUS,0
                                    1- 2657     	MGOTO	_00427_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2658     	.line	614, "main.c"; 	ledStep = 8;
     0010 2108                      1- 2659     	MOVIA	0x08
                                    1- 2660     	BANKSEL	_ledStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1- 2661     	MOVAR	_ledStep
                                    1- 2662     	.line	615, "main.c"; 	if(pwStep == 10 && ++fullCount > 100)
                                    1- 2663     	BANKSEL	_pwStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2664     	MOVR	_pwStep,W
     0015 240A                      1- 2665     	XORIA	0x0a
     0016 0903                      1- 2666     	BTRSS	STATUS,2
                                    1- 2667     	MGOTO	_00416_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2668     	BANKSEL	_fullCount
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 05rr                      1- 2669     	INCR	_fullCount,F
                                    1- 2670     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2671     ;;unsigned compare: left >= lit (0x65=101), size=1
     001A 2165                      1- 2672     	MOVIA	0x65
     001B 04rr                      1- 2673     	SUBAR	_fullCount,W
     001C 0803                      1- 2674     	BTRSS	STATUS,0
                                    1- 2675     	MGOTO	_00416_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2676     	.line	616, "main.c"; 	IOSTA |= 0x01;
     001E 001r                      1- 2677     	IOSTR	_IOSTA
                                    1- 2678     	BANKSEL	r0x104F
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 00rr                      1- 2679     	MOVAR	r0x104F
     0021 18rr                      1- 2680     	BSR	r0x104F,0
     0022 01rr                      1- 2681     	MOVR	r0x104F,W
     0023 000r                      1- 2682     	IOST	_IOSTA
     0024                           1- 2683     _00416_DS_:
                                    1- 2684     	.line	618, "main.c"; 	PORTA |= 0x04;		//打开充满提示灯
                                    1- 2685     	BANKSEL	_PORTA
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 19rr                      1- 2686     	BSR	_PORTA,2
                                    1- 2687     	MGOTO	_00446_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 2688     _00427_DS_:
                                    1- 2689     	.line	623, "main.c"; 	PORTA &= 0xFB;		//关闭充满提示灯
                                    1- 2690     	BANKSEL	_PORTA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 1Drr                      1- 2691     	BCR	_PORTA,2
                                    1- 2692     	.line	625, "main.c"; 	if(count500ms == 0 && pwStep < 9)
                                    1- 2693     	BANKSEL	_count500ms
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 01rr                      1- 2694     	MOVR	_count500ms,W
     002B 0903                      1- 2695     	BTRSS	STATUS,2
                                    1- 2696     	MGOTO	_00421_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2697     ;;unsigned compare: left < lit (0x9=9), size=1
     002D 2109                      1- 2698     	MOVIA	0x09
                                    1- 2699     	BANKSEL	_pwStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 04rr                      1- 2700     	SUBAR	_pwStep,W
     0030 0C03                      1- 2701     	BTRSC	STATUS,0
                                    1- 2702     	MGOTO	_00421_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2703     	.line	627, "main.c"; 	if(lockLedStep < pwStep - 1)
     0032 01rr                      1- 2704     	MOVR	_pwStep,W
                                    1- 2705     	BANKSEL	r0x104F
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 00rr                      1- 2706     	MOVAR	r0x104F
                                    1- 2707     	BANKSEL	r0x1050
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 02rr                      1- 2708     	CLRR	r0x1050
     0037 21FF                      1- 2709     	MOVIA	0xff
                                    1- 2710     	BANKSEL	r0x104F
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 03rr                      1- 2711     	ADDAR	r0x104F,F
     003A 0C03                      1- 2712     	BTRSC	STATUS,0
                                    1- 2713     	MGOTO	_00006_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2714     	BANKSEL	r0x1050
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 06rr                      1- 2715     	DECR	r0x1050,F
     003E                           1- 2716     _00006_DS_:
                                    1- 2717     	BANKSEL	_lockLedStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 01rr                      1- 2718     	MOVR	_lockLedStep,W
                                    1- 2719     	BANKSEL	r0x1051
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 00rr                      1- 2720     	MOVAR	r0x1051
                                    1- 2721     ;;1	CLRR	r0x1052
     0042 2100                      1- 2722     	MOVIA	0x00
     0043 2580                      1- 2723     	ADDIA	0x80
                                    1- 2724     	BANKSEL	r0x1053
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 2725     	MOVAR	r0x1053
                                    1- 2726     	BANKSEL	r0x1050
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 01rr                      1- 2727     	MOVR	r0x1050,W
     0048 2580                      1- 2728     	ADDIA	0x80
                                    1- 2729     	BANKSEL	r0x1053
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 04rr                      1- 2730     	SUBAR	r0x1053,W
     004B 0903                      1- 2731     	BTRSS	STATUS,2
                                    1- 2732     	MGOTO	_00493_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2733     	BANKSEL	r0x104F
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 01rr                      1- 2734     	MOVR	r0x104F,W
                                    1- 2735     	BANKSEL	r0x1051
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 04rr                      1- 2736     	SUBAR	r0x1051,W
     0051                           1- 2737     _00493_DS_:
     0051 0C03                      1- 2738     	BTRSC	STATUS,0
                                    1- 2739     	MGOTO	_00419_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2740     	.line	628, "main.c"; 	lockLedStep = pwStep - 1;
                                    1- 2741     	BANKSEL	_pwStep
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 06rr                      1- 2742     	DECR	_pwStep,W
                                    1- 2743     	BANKSEL	_lockLedStep
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 00rr                      1- 2744     	MOVAR	_lockLedStep
     0057                           1- 2745     _00419_DS_:
                                    1- 2746     	.line	630, "main.c"; 	ledStep = lockLedStep;
                                    1- 2747     	BANKSEL	_lockLedStep
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 01rr                      1- 2748     	MOVR	_lockLedStep,W
                                    1- 2749     	BANKSEL	_ledStep
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 00rr                      1- 2750     	MOVAR	_ledStep
                                    1- 2751     ;;unsigned compare: left < lit (0x1E=30), size=1
     005B                           1- 2752     _00421_DS_:
                                    1- 2753     	.line	632, "main.c"; 	if(count500ms < 30)
     005B 211E                      1- 2754     	MOVIA	0x1e
                                    1- 2755     	BANKSEL	_count500ms
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 04rr                      1- 2756     	SUBAR	_count500ms,W
     005E 0C03                      1- 2757     	BTRSC	STATUS,0
                                    1- 2758     	MGOTO	_00424_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2759     	.line	634, "main.c"; 	PORTA |= 0x02;		//打开充电灯
                                    1- 2760     	BANKSEL	_PORTA
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 18rr                      1- 2761     	BSR	_PORTA,1
                                    1- 2762     	MGOTO	_00425_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
     0063                           1- 2763     _00424_DS_:
                                    1- 2764     	.line	638, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
                                    1- 2765     	BANKSEL	_PORTA
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 1Crr                      1- 2766     	BCR	_PORTA,1
     0065                           1- 2767     _00425_DS_:
                                    1- 2768     	.line	641, "main.c"; 	IOSTA &= 0xFE;
     0065 001r                      1- 2769     	IOSTR	_IOSTA
                                    1- 2770     	BANKSEL	r0x104F
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 00rr                      1- 2771     	MOVAR	r0x104F
     0068 1Crr                      1- 2772     	BCR	r0x104F,0
     0069 01rr                      1- 2773     	MOVR	r0x104F,W
     006A 000r                      1- 2774     	IOST	_IOSTA
                                    1- 2775     	.line	642, "main.c"; 	PORTA |= 0x01;			//打开充电
                                    1- 2776     	BANKSEL	_PORTA
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 18rr                      1- 2777     	BSR	_PORTA,0
                                    1- 2778     	MGOTO	_00446_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
     006E                           1- 2779     _00444_DS_:
                                    1- 2780     	.line	648, "main.c"; 	lockLedStep = 0;
                                    1- 2781     	BANKSEL	_lockLedStep
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 02rr                      1- 2782     	CLRR	_lockLedStep
                                    1- 2783     	.line	649, "main.c"; 	if(workStep > 0 && pwStep == 0)
                                    1- 2784     	BANKSEL	_workStep
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 01rr                      1- 2785     	MOVR	_workStep,W
     0072 0D03                      1- 2786     	BTRSC	STATUS,2
                                    1- 2787     	MGOTO	_00432_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2788     	BANKSEL	_pwStep
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 01rr                      1- 2789     	MOVR	_pwStep,W
     0076 0903                      1- 2790     	BTRSS	STATUS,2
                                    1- 2791     	MGOTO	_00432_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2792     	.line	651, "main.c"; 	if(++lowBat > 1000)
                                    1- 2793     	BANKSEL	_lowBat
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 05rr                      1- 2794     	INCR	_lowBat,F
     007A 0D03                      1- 2795     	BTRSC	STATUS,2
     007B 05rr                      1- 2796     	INCR	(_lowBat + 1),F
                                    1- 2797     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2798     ;;unsigned compare: left >= lit (0x3E9=1001), size=2
     007C 2103                      1- 2799     	MOVIA	0x03
     007D 04rr                      1- 2800     	SUBAR	(_lowBat + 1),W
     007E 0903                      1- 2801     	BTRSS	STATUS,2
                                    1- 2802     	MGOTO	_00495_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
     0080 21E9                      1- 2803     	MOVIA	0xe9
     0081 04rr                      1- 2804     	SUBAR	_lowBat,W
     0082                           1- 2805     _00495_DS_:
     0082 0803                      1- 2806     	BTRSS	STATUS,0
                                    1- 2807     	MGOTO	_00433_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2808     	.line	653, "main.c"; 	shandengTime = 500;
     0084 21F4                      1- 2809     	MOVIA	0xf4
                                    1- 2810     	BANKSEL	_shandengTime
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 00rr                      1- 2811     	MOVAR	_shandengTime
     0087 2101                      1- 2812     	MOVIA	0x01
     0088 00rr                      1- 2813     	MOVAR	(_shandengTime + 1)
                                    1- 2814     	.line	654, "main.c"; 	lowBat = 0;
                                    1- 2815     	BANKSEL	_lowBat
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 02rr                      1- 2816     	CLRR	_lowBat
     008B 02rr                      1- 2817     	CLRR	(_lowBat + 1)
                                    1- 2818     	.line	655, "main.c"; 	powerOff();
                                    1- 2819     	MCALL	_powerOff
     008C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2820     	MGOTO	_00433_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
     008E                           1- 2821     _00432_DS_:
                                    1- 2822     	.line	660, "main.c"; 	lowBat = 0;
                                    1- 2823     	BANKSEL	_lowBat
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 02rr                      1- 2824     	CLRR	_lowBat
     0090 02rr                      1- 2825     	CLRR	(_lowBat + 1)
     0091                           1- 2826     _00433_DS_:
                                    1- 2827     	.line	662, "main.c"; 	if(shandengTime > 0)
                                    1- 2828     	BANKSEL	_shandengTime
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 01rr                      1- 2829     	MOVR	_shandengTime,W
     0093 11rr                      1- 2830     	IORAR	(_shandengTime + 1),W
     0094 0D03                      1- 2831     	BTRSC	STATUS,2
                                    1- 2832     	MGOTO	_00439_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2833     	.line	664, "main.c"; 	shandengTime--;
     0096 21FF                      1- 2834     	MOVIA	0xff
     0097 03rr                      1- 2835     	ADDAR	_shandengTime,F
     0098 0803                      1- 2836     	BTRSS	STATUS,0
     0099 06rr                      1- 2837     	DECR	(_shandengTime + 1),F
                                    1- 2838     ;;unsigned compare: left < lit (0x1E=30), size=1
                                    1- 2839     	.line	665, "main.c"; 	if(count500ms < 30)
     009A 211E                      1- 2840     	MOVIA	0x1e
                                    1- 2841     	BANKSEL	_count500ms
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 04rr                      1- 2842     	SUBAR	_count500ms,W
     009D 0C03                      1- 2843     	BTRSC	STATUS,0
                                    1- 2844     	MGOTO	_00436_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2845     	.line	667, "main.c"; 	PORTA |= 0x02;		//打开充电灯
                                    1- 2846     	BANKSEL	_PORTA
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 18rr                      1- 2847     	BSR	_PORTA,1
                                    1- 2848     	MGOTO	_00440_DS_
     00A1 3rrr                      3-   63 m1      LGOTO rom_address
     00A2                           1- 2849     _00436_DS_:
                                    1- 2850     	.line	671, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
                                    1- 2851     	BANKSEL	_PORTA
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 1Crr                      1- 2852     	BCR	_PORTA,1
                                    1- 2853     	MGOTO	_00440_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
     00A5                           1- 2854     _00439_DS_:
                                    1- 2855     	.line	675, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
                                    1- 2856     	BANKSEL	_PORTA
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 1Crr                      1- 2857     	BCR	_PORTA,1
     00A7                           1- 2858     _00440_DS_:
                                    1- 2859     	.line	676, "main.c"; 	PORTA &= 0xFB;		//关闭充满提示灯
                                    1- 2860     	BANKSEL	_PORTA
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 1Drr                      1- 2861     	BCR	_PORTA,2
                                    1- 2862     	.line	677, "main.c"; 	IOSTA |= 0x01;
     00A9 001r                      1- 2863     	IOSTR	_IOSTA
                                    1- 2864     	BANKSEL	r0x104F
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 00rr                      1- 2865     	MOVAR	r0x104F
     00AC 18rr                      1- 2866     	BSR	r0x104F,0
     00AD 01rr                      1- 2867     	MOVR	r0x104F,W
     00AE 000r                      1- 2868     	IOST	_IOSTA
                                    1- 2869     	.line	678, "main.c"; 	chrgTime = 0;
                                    1- 2870     	BANKSEL	_chrgTime
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 02rr                      1- 2871     	CLRR	_chrgTime
     00B1 02rr                      1- 2872     	CLRR	(_chrgTime + 1)
                                    1- 2873     	.line	680, "main.c"; 	if(workStep == 0)
                                    1- 2874     	BANKSEL	_workStep
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 01rr                      1- 2875     	MOVR	_workStep,W
     00B4 0903                      1- 2876     	BTRSS	STATUS,2
                                    1- 2877     	MGOTO	_00007_DS_
     00B5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2878     	.line	681, "main.c"; 	ledStep = 0;
                                    1- 2879     	BANKSEL	_ledStep
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 02rr                      1- 2880     	CLRR	_ledStep
     00B8                           1- 2881     _00007_DS_:
                                    1- 2882     	.line	682, "main.c"; 	chrgFlag = 0;
                                    1- 2883     	BANKSEL	_chrgFlag
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 02rr                      1- 2884     	CLRR	_chrgFlag
                                    1- 2885     	.line	683, "main.c"; 	chrgTime = 0;	//重置充电计数
                                    1- 2886     	BANKSEL	_chrgTime
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 02rr                      1- 2887     	CLRR	_chrgTime
     00BC 02rr                      1- 2888     	CLRR	(_chrgTime + 1)
     00BD                           1- 2889     _00446_DS_:
                                    1- 2890     	.line	686, "main.c"; 	}
                                    1- 2891     	RETURN	
     00BD 0010                      3-   40 m1      ret
                                    1- 2892     ; exit point of _chrgCtr
                                    1- 2894     ;***
                                    1- 2895     ;  pBlock Stats: dbName = C
                                    1- 2896     ;***
                                    1- 2897     ;has an exit
                                    1- 2898     ;1 compiler assigned register :
                                    1- 2899     ;   r0x1054
                                    1- 2900     ;; Starting pCode block
                                    1- 2901     .segment "code"; module=main, function=_keyRead
                                    1- 2903     ;local variable name mapping:
     0000                           1- 2905     _keyRead:
                                    1- 2906     ; 2 exit points
                                    1- 2907     	.line	566, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2908     	BANKSEL	r0x1054
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2909     	MOVAR	r0x1054
                                    1- 2910     	.line	568, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2911     	MOVR	r0x1054,W
     0003 0D03                      1- 2912     	BTRSC	STATUS,2
                                    1- 2913     	MGOTO	_00408_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2914     	.line	570, "main.c"; 	keyCount++;
                                    1- 2915     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2916     	INCR	_keyCount,F
                                    1- 2917     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 2918     	.line	571, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 2919     	MOVIA	0x64
     0008 04rr                      1- 2920     	SUBAR	_keyCount,W
     0009 0803                      1- 2921     	BTRSS	STATUS,0
                                    1- 2922     	MGOTO	_00409_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2923     	.line	573, "main.c"; 	keyCount = 100;
     000B 2164                      1- 2924     	MOVIA	0x64
     000C 00rr                      1- 2925     	MOVAR	_keyCount
                                    1- 2926     	.line	574, "main.c"; 	if(!longPressFlag)
                                    1- 2927     	BANKSEL	_longPressFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2928     	MOVR	_longPressFlag,W
     000F 0903                      1- 2929     	BTRSS	STATUS,2
                                    1- 2930     	MGOTO	_00409_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2931     	.line	576, "main.c"; 	longPressFlag = 1;
     0011 2101                      1- 2932     	MOVIA	0x01
     0012 00rr                      1- 2933     	MOVAR	_longPressFlag
                                    1- 2934     	.line	577, "main.c"; 	return 2;
     0013 2102                      1- 2935     	MOVIA	0x02
                                    1- 2936     	MGOTO	_00410_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2937     ;;unsigned compare: left < lit (0x64=100), size=1
     0015                           1- 2938     _00408_DS_:
                                    1- 2939     	.line	583, "main.c"; 	if(keyCount >= 100)
     0015 2164                      1- 2940     	MOVIA	0x64
                                    1- 2941     	BANKSEL	_keyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1- 2942     	SUBAR	_keyCount,W
     0018 0803                      1- 2943     	BTRSS	STATUS,0
                                    1- 2944     	MGOTO	_00405_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2945     	.line	585, "main.c"; 	keyCount = 0;
     001A 02rr                      1- 2946     	CLRR	_keyCount
                                    1- 2947     	.line	586, "main.c"; 	longPressFlag = 0;
                                    1- 2948     	BANKSEL	_longPressFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 2949     	CLRR	_longPressFlag
                                    1- 2950     	.line	587, "main.c"; 	return	0;
     001D 2100                      1- 2951     	MOVIA	0x00
                                    1- 2952     	MGOTO	_00410_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2953     ;;unsigned compare: left < lit (0x4=4), size=1
     001F                           1- 2954     _00405_DS_:
                                    1- 2955     	.line	589, "main.c"; 	else if(keyCount >= 4)
     001F 2104                      1- 2956     	MOVIA	0x04
                                    1- 2957     	BANKSEL	_keyCount
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 2958     	SUBAR	_keyCount,W
     0022 0803                      1- 2959     	BTRSS	STATUS,0
                                    1- 2960     	MGOTO	_00406_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2961     	.line	591, "main.c"; 	keyCount = 0;
     0024 02rr                      1- 2962     	CLRR	_keyCount
                                    1- 2963     	.line	592, "main.c"; 	return	1;
     0025 2101                      1- 2964     	MOVIA	0x01
                                    1- 2965     	MGOTO	_00410_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 2966     _00406_DS_:
                                    1- 2967     	.line	594, "main.c"; 	keyCount = 0;
                                    1- 2968     	BANKSEL	_keyCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 2969     	CLRR	_keyCount
     0029                           1- 2970     _00409_DS_:
                                    1- 2971     	.line	596, "main.c"; 	return 0;
     0029 2100                      1- 2972     	MOVIA	0x00
     002A                           1- 2973     _00410_DS_:
                                    1- 2974     	.line	597, "main.c"; 	}
                                    1- 2975     	RETURN	
     002A 0010                      3-   40 m1      ret
                                    1- 2976     ; exit point of _keyRead
                                    1- 2978     ;***
                                    1- 2979     ;  pBlock Stats: dbName = C
                                    1- 2980     ;***
                                    1- 2981     ;has an exit
                                    1- 2982     ;functions called:
                                    1- 2983     ;   _LedInput
                                    1- 2984     ;   _pwmStop
                                    1- 2985     ;   _LedInput
                                    1- 2986     ;   _pwmStop
                                    1- 2987     ;; Starting pCode block
                                    1- 2988     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2990     _gotoSleep:
                                    1- 2991     ; 2 exit points
                                    1- 2992     	.line	536, "main.c"; 	LedInput();
                                    1- 2993     	MCALL	_LedInput
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2994     	.line	537, "main.c"; 	pwmStop();
                                    1- 2995     	MCALL	_pwmStop
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2996     	.line	538, "main.c"; 	IOSTA = 0x60;
     0002 2160                      1- 2997     	MOVIA	0x60
     0003 000r                      1- 2998     	IOST	_IOSTA
                                    1- 2999     	.line	539, "main.c"; 	IOSTB = 0x00;
     0004 0200                      1- 3000     	CLRA	
     0005 000r                      1- 3001     	IOST	_IOSTB
                                    1- 3002     	.line	540, "main.c"; 	APHCON = 0x9F;
     0006 219F                      1- 3003     	MOVIA	0x9f
     0007 000r                      1- 3004     	IOST	_APHCON
                                    1- 3005     	.line	541, "main.c"; 	PORTB = 0x00;
     0008 02rr                      1- 3006     	CLRR	_PORTB
                                    1- 3007     	.line	542, "main.c"; 	PORTA = 0x00;
                                    1- 3008     	BANKSEL	_PORTA
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 02rr                      1- 3009     	CLRR	_PORTA
                                    1- 3010     	.line	543, "main.c"; 	sleepTime = 0;
                                    1- 3011     	BANKSEL	_sleepTime
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 02rr                      1- 3012     	CLRR	_sleepTime
     000D 02rr                      1- 3013     	CLRR	(_sleepTime + 1)
                                    1- 3014     	.line	545, "main.c"; 	workStep = 0;
                                    1- 3015     	BANKSEL	_workStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1- 3016     	CLRR	_workStep
                                    1- 3017     	.line	546, "main.c"; 	AWUCON = 0x60;
     0010 2160                      1- 3018     	MOVIA	0x60
     0011 00rr                      1- 3019     	MOVAR	_AWUCON
                                    1- 3020     	.line	547, "main.c"; 	INTE =  C_INT_PABKey;
     0012 2102                      1- 3021     	MOVIA	0x02
     0013 00rr                      1- 3022     	MOVAR	_INTE
                                    1- 3023     	.line	548, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0014 2118                      1- 3024     	MOVIA	0x18
     0015 00rr                      1- 3025     	MOVAR	_PCON
                                    1- 3026     	.line	549, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0016 02rr                      1- 3027     	CLRR	_INTF
                                    1- 3028     	.line	550, "main.c"; 	CLRWDT();
     0017 0002                      1- 3029     	clrwdt
                                    1- 3030     	.line	551, "main.c"; 	ENI();
     0018 0004                      1- 3031     	ENI
                                    1- 3032     	.line	552, "main.c"; 	SLEEP();
     0019 0001                      1- 3033     	sleep
                                    1- 3034     	.line	553, "main.c"; 	AWUCON = 0x00;
     001A 02rr                      1- 3035     	CLRR	_AWUCON
                                    1- 3036     	.line	554, "main.c"; 	APHCON = 0xBF;
     001B 21BF                      1- 3037     	MOVIA	0xbf
     001C 000r                      1- 3038     	IOST	_APHCON
                                    1- 3039     	.line	555, "main.c"; 	PORTB = 0x00;
     001D 02rr                      1- 3040     	CLRR	_PORTB
                                    1- 3041     	.line	556, "main.c"; 	PORTA = 0x40;
     001E 2140                      1- 3042     	MOVIA	0x40
                                    1- 3043     	BANKSEL	_PORTA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 00rr                      1- 3044     	MOVAR	_PORTA
                                    1- 3045     	.line	557, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input ;
     0021 2178                      1- 3046     	MOVIA	0x78
     0022 000r                      1- 3047     	IOST	_IOSTA
                                    1- 3048     	.line	558, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0023 2101                      1- 3049     	MOVIA	0x01
     0024 00rr                      1- 3050     	MOVAR	_INTE
                                    1- 3051     	.line	559, "main.c"; 	INTF = 0;
     0025 02rr                      1- 3052     	CLRR	_INTF
                                    1- 3053     	.line	561, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0026 21B8                      1- 3054     	MOVIA	0xb8
     0027 00rr                      1- 3055     	MOVAR	_PCON
                                    1- 3056     	.line	563, "main.c"; 	}
                                    1- 3057     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 3058     ; exit point of _gotoSleep
                                    1- 3060     ;***
                                    1- 3061     ;  pBlock Stats: dbName = C
                                    1- 3062     ;***
                                    1- 3063     ;has an exit
                                    1- 3064     ;; Starting pCode block
                                    1- 3065     .segment "code"; module=main, function=_pwmStop
     0000                           1- 3067     _pwmStop:
                                    1- 3068     ; 2 exit points
                                    1- 3069     	.line	530, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 3070     	CLRA	
     0001 00rr                      1- 3071     	SFUN	_T2CR1
                                    1- 3072     	.line	531, "main.c"; 	}
                                    1- 3073     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 3074     ; exit point of _pwmStop
                                    1- 3076     ;***
                                    1- 3077     ;  pBlock Stats: dbName = C
                                    1- 3078     ;***
                                    1- 3079     ;has an exit
                                    1- 3080     ;1 compiler assigned register :
                                    1- 3081     ;   r0x1056
                                    1- 3082     ;; Starting pCode block
                                    1- 3083     .segment "code"; module=main, function=_pwmInit
     0000                           1- 3085     _pwmInit:
                                    1- 3086     ; 2 exit points
                                    1- 3087     	.line	518, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 3088     	SFUNR	_T2CR1
                                    1- 3089     	BANKSEL	r0x1056
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3090     	MOVAR	r0x1056
     0003 0Frr                      1- 3091     	BTRSC	r0x1056,7
                                    1- 3092     	.line	519, "main.c"; 	return;
                                    1- 3093     	MGOTO	_00385_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3094     	.line	520, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 3095     	CLRR	_TMRH
                                    1- 3096     	.line	521, "main.c"; 	TMR2 = 99;							//频率为110K
     0006 2163                      1- 3097     	MOVIA	0x63
     0007 00rr                      1- 3098     	SFUN	_TMR2
                                    1- 3099     	.line	524, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 3100     	CLRA	
     0009 00rr                      1- 3101     	SFUN	_T2CR2
                                    1- 3102     	.line	525, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 3103     	MOVIA	0x83
     000B 00rr                      1- 3104     	SFUN	_T2CR1
     000C                           1- 3105     _00385_DS_:
                                    1- 3106     	.line	526, "main.c"; 	}
                                    1- 3107     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 3108     ; exit point of _pwmInit
                                    1- 3110     ;***
                                    1- 3111     ;  pBlock Stats: dbName = C
                                    1- 3112     ;***
                                    1- 3113     ;has an exit
                                    1- 3114     ;; Starting pCode block
                                    1- 3115     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 3117     _pwm1Stop:
                                    1- 3118     ; 2 exit points
                                    1- 3119     	.line	511, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 3120     	CLRA	
     0001 00rr                      1- 3121     	SFUN	_T1CR1
                                    1- 3122     	.line	512, "main.c"; 	}
                                    1- 3123     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 3124     ; exit point of _pwm1Stop
                                    1- 3126     ;***
                                    1- 3127     ;  pBlock Stats: dbName = C
                                    1- 3128     ;***
                                    1- 3129     ;has an exit
                                    1- 3130     ;1 compiler assigned register :
                                    1- 3131     ;   r0x1057
                                    1- 3132     ;; Starting pCode block
                                    1- 3133     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 3135     _pwm1Init:
                                    1- 3136     ; 2 exit points
                                    1- 3137     	.line	499, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 3138     	SFUNR	_T1CR1
                                    1- 3139     	BANKSEL	r0x1057
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3140     	MOVAR	r0x1057
     0003 0Frr                      1- 3141     	BTRSC	r0x1057,7
                                    1- 3142     	.line	500, "main.c"; 	return;
                                    1- 3143     	MGOTO	_00374_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3144     	.line	501, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 3145     	CLRR	_TMRH
                                    1- 3146     	.line	502, "main.c"; 	TMR1 = 12;							//频率为110K
     0006 210C                      1- 3147     	MOVIA	0x0c
     0007 00rr                      1- 3148     	SFUN	_TMR1
                                    1- 3149     	.line	505, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 3150     	CLRA	
     0009 00rr                      1- 3151     	SFUN	_T1CR2
                                    1- 3152     	.line	506, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 3153     	MOVIA	0x83
     000B 00rr                      1- 3154     	SFUN	_T1CR1
     000C                           1- 3155     _00374_DS_:
                                    1- 3156     	.line	507, "main.c"; 	}
                                    1- 3157     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 3158     ; exit point of _pwm1Init
                                    1- 3160     ;***
                                    1- 3161     ;  pBlock Stats: dbName = C
                                    1- 3162     ;***
                                    1- 3163     ;has an exit
                                    1- 3164     ;functions called:
                                    1- 3165     ;   _delay
                                    1- 3166     ;   _LedInput
                                    1- 3167     ;   _delay
                                    1- 3168     ;   _LedInput
                                    1- 3169     ;1 compiler assigned register :
                                    1- 3170     ;   r0x1058
                                    1- 3171     ;; Starting pCode block
                                    1- 3172     .segment "code"; module=main, function=_LED8ON
     0000                           1- 3174     _LED8ON:
                                    1- 3175     ; 2 exit points
                                    1- 3176     	.line	489, "main.c"; 	L4OUT;
     0000 001r                      1- 3177     	IOSTR	_IOSTB
                                    1- 3178     	BANKSEL	r0x1058
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3179     	MOVAR	r0x1058
     0003 1Crr                      1- 3180     	BCR	r0x1058,0
     0004 01rr                      1- 3181     	MOVR	r0x1058,W
     0005 000r                      1- 3182     	IOST	_IOSTB
                                    1- 3183     	.line	490, "main.c"; 	L2OUT;
     0006 001r                      1- 3184     	IOSTR	_IOSTB
     0007 00rr                      1- 3185     	MOVAR	r0x1058
     0008 1Drr                      1- 3186     	BCR	r0x1058,3
     0009 01rr                      1- 3187     	MOVR	r0x1058,W
     000A 000r                      1- 3188     	IOST	_IOSTB
                                    1- 3189     	.line	491, "main.c"; 	L4H;
     000B 18rr                      1- 3190     	BSR	_PORTB,0
                                    1- 3191     	.line	492, "main.c"; 	L2L;
     000C 1Drr                      1- 3192     	BCR	_PORTB,3
                                    1- 3193     	.line	493, "main.c"; 	delay(80);
     000D 2150                      1- 3194     	MOVIA	0x50
                                    1- 3195     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3196     	.line	494, "main.c"; 	LedInput();
                                    1- 3197     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3198     	.line	495, "main.c"; 	}
                                    1- 3199     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3200     ; exit point of _LED8ON
                                    1- 3202     ;***
                                    1- 3203     ;  pBlock Stats: dbName = C
                                    1- 3204     ;***
                                    1- 3205     ;has an exit
                                    1- 3206     ;functions called:
                                    1- 3207     ;   _delay
                                    1- 3208     ;   _LedInput
                                    1- 3209     ;   _delay
                                    1- 3210     ;   _LedInput
                                    1- 3211     ;1 compiler assigned register :
                                    1- 3212     ;   r0x1059
                                    1- 3213     ;; Starting pCode block
                                    1- 3214     .segment "code"; module=main, function=_LED7ON
     0000                           1- 3216     _LED7ON:
                                    1- 3217     ; 2 exit points
                                    1- 3218     	.line	479, "main.c"; 	L4OUT;
     0000 001r                      1- 3219     	IOSTR	_IOSTB
                                    1- 3220     	BANKSEL	r0x1059
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3221     	MOVAR	r0x1059
     0003 1Crr                      1- 3222     	BCR	r0x1059,0
     0004 01rr                      1- 3223     	MOVR	r0x1059,W
     0005 000r                      1- 3224     	IOST	_IOSTB
                                    1- 3225     	.line	480, "main.c"; 	L2OUT;
     0006 001r                      1- 3226     	IOSTR	_IOSTB
     0007 00rr                      1- 3227     	MOVAR	r0x1059
     0008 1Drr                      1- 3228     	BCR	r0x1059,3
     0009 01rr                      1- 3229     	MOVR	r0x1059,W
     000A 000r                      1- 3230     	IOST	_IOSTB
                                    1- 3231     	.line	481, "main.c"; 	L2H;
     000B 19rr                      1- 3232     	BSR	_PORTB,3
                                    1- 3233     	.line	482, "main.c"; 	L4L;
     000C 1Crr                      1- 3234     	BCR	_PORTB,0
                                    1- 3235     	.line	483, "main.c"; 	delay(80);
     000D 2150                      1- 3236     	MOVIA	0x50
                                    1- 3237     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3238     	.line	484, "main.c"; 	LedInput();
                                    1- 3239     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3240     	.line	485, "main.c"; 	}
                                    1- 3241     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3242     ; exit point of _LED7ON
                                    1- 3244     ;***
                                    1- 3245     ;  pBlock Stats: dbName = C
                                    1- 3246     ;***
                                    1- 3247     ;has an exit
                                    1- 3248     ;functions called:
                                    1- 3249     ;   _delay
                                    1- 3250     ;   _LedInput
                                    1- 3251     ;   _delay
                                    1- 3252     ;   _LedInput
                                    1- 3253     ;1 compiler assigned register :
                                    1- 3254     ;   r0x105A
                                    1- 3255     ;; Starting pCode block
                                    1- 3256     .segment "code"; module=main, function=_LED6ON
     0000                           1- 3258     _LED6ON:
                                    1- 3259     ; 2 exit points
                                    1- 3260     	.line	469, "main.c"; 	L4OUT;
     0000 001r                      1- 3261     	IOSTR	_IOSTB
                                    1- 3262     	BANKSEL	r0x105A
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3263     	MOVAR	r0x105A
     0003 1Crr                      1- 3264     	BCR	r0x105A,0
     0004 01rr                      1- 3265     	MOVR	r0x105A,W
     0005 000r                      1- 3266     	IOST	_IOSTB
                                    1- 3267     	.line	470, "main.c"; 	L1OUT;
     0006 001r                      1- 3268     	IOSTR	_IOSTA
     0007 00rr                      1- 3269     	MOVAR	r0x105A
     0008 1Frr                      1- 3270     	BCR	r0x105A,7
     0009 01rr                      1- 3271     	MOVR	r0x105A,W
     000A 000r                      1- 3272     	IOST	_IOSTA
                                    1- 3273     	.line	471, "main.c"; 	L1H;
                                    1- 3274     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 1Brr                      1- 3275     	BSR	_PORTA,7
                                    1- 3276     	.line	472, "main.c"; 	L4L;
     000D 1Crr                      1- 3277     	BCR	_PORTB,0
                                    1- 3278     	.line	473, "main.c"; 	delay(80);
     000E 2150                      1- 3279     	MOVIA	0x50
                                    1- 3280     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3281     	.line	474, "main.c"; 	LedInput();
                                    1- 3282     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3283     	.line	475, "main.c"; 	}
                                    1- 3284     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3285     ; exit point of _LED6ON
                                    1- 3287     ;***
                                    1- 3288     ;  pBlock Stats: dbName = C
                                    1- 3289     ;***
                                    1- 3290     ;has an exit
                                    1- 3291     ;functions called:
                                    1- 3292     ;   _delay
                                    1- 3293     ;   _LedInput
                                    1- 3294     ;   _delay
                                    1- 3295     ;   _LedInput
                                    1- 3296     ;1 compiler assigned register :
                                    1- 3297     ;   r0x105B
                                    1- 3298     ;; Starting pCode block
                                    1- 3299     .segment "code"; module=main, function=_LED5ON
     0000                           1- 3301     _LED5ON:
                                    1- 3302     ; 2 exit points
                                    1- 3303     	.line	458, "main.c"; 	L4OUT;
     0000 001r                      1- 3304     	IOSTR	_IOSTB
                                    1- 3305     	BANKSEL	r0x105B
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3306     	MOVAR	r0x105B
     0003 1Crr                      1- 3307     	BCR	r0x105B,0
     0004 01rr                      1- 3308     	MOVR	r0x105B,W
     0005 000r                      1- 3309     	IOST	_IOSTB
                                    1- 3310     	.line	459, "main.c"; 	L1OUT;
     0006 001r                      1- 3311     	IOSTR	_IOSTA
     0007 00rr                      1- 3312     	MOVAR	r0x105B
     0008 1Frr                      1- 3313     	BCR	r0x105B,7
     0009 01rr                      1- 3314     	MOVR	r0x105B,W
     000A 000r                      1- 3315     	IOST	_IOSTA
                                    1- 3316     	.line	460, "main.c"; 	L4H;
     000B 18rr                      1- 3317     	BSR	_PORTB,0
                                    1- 3318     	.line	461, "main.c"; 	L1L;
                                    1- 3319     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Frr                      1- 3320     	BCR	_PORTA,7
                                    1- 3321     	.line	462, "main.c"; 	delay(80);
     000E 2150                      1- 3322     	MOVIA	0x50
                                    1- 3323     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3324     	.line	463, "main.c"; 	LedInput();
                                    1- 3325     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3326     	.line	464, "main.c"; 	}
                                    1- 3327     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3328     ; exit point of _LED5ON
                                    1- 3330     ;***
                                    1- 3331     ;  pBlock Stats: dbName = C
                                    1- 3332     ;***
                                    1- 3333     ;has an exit
                                    1- 3334     ;functions called:
                                    1- 3335     ;   _delay
                                    1- 3336     ;   _LedInput
                                    1- 3337     ;   _delay
                                    1- 3338     ;   _LedInput
                                    1- 3339     ;1 compiler assigned register :
                                    1- 3340     ;   r0x105C
                                    1- 3341     ;; Starting pCode block
                                    1- 3342     .segment "code"; module=main, function=_LED4ON
     0000                           1- 3344     _LED4ON:
                                    1- 3345     ; 2 exit points
                                    1- 3346     	.line	448, "main.c"; 	L3OUT;
     0000 001r                      1- 3347     	IOSTR	_IOSTB
                                    1- 3348     	BANKSEL	r0x105C
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3349     	MOVAR	r0x105C
     0003 1Crr                      1- 3350     	BCR	r0x105C,1
     0004 01rr                      1- 3351     	MOVR	r0x105C,W
     0005 000r                      1- 3352     	IOST	_IOSTB
                                    1- 3353     	.line	449, "main.c"; 	L2OUT;
     0006 001r                      1- 3354     	IOSTR	_IOSTB
     0007 00rr                      1- 3355     	MOVAR	r0x105C
     0008 1Drr                      1- 3356     	BCR	r0x105C,3
     0009 01rr                      1- 3357     	MOVR	r0x105C,W
     000A 000r                      1- 3358     	IOST	_IOSTB
                                    1- 3359     	.line	450, "main.c"; 	L3H;
     000B 18rr                      1- 3360     	BSR	_PORTB,1
                                    1- 3361     	.line	451, "main.c"; 	L2L;
     000C 1Drr                      1- 3362     	BCR	_PORTB,3
                                    1- 3363     	.line	452, "main.c"; 	delay(80);
     000D 2150                      1- 3364     	MOVIA	0x50
                                    1- 3365     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3366     	.line	453, "main.c"; 	LedInput();
                                    1- 3367     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3368     	.line	454, "main.c"; 	}
                                    1- 3369     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3370     ; exit point of _LED4ON
                                    1- 3372     ;***
                                    1- 3373     ;  pBlock Stats: dbName = C
                                    1- 3374     ;***
                                    1- 3375     ;has an exit
                                    1- 3376     ;functions called:
                                    1- 3377     ;   _delay
                                    1- 3378     ;   _LedInput
                                    1- 3379     ;   _delay
                                    1- 3380     ;   _LedInput
                                    1- 3381     ;1 compiler assigned register :
                                    1- 3382     ;   r0x105D
                                    1- 3383     ;; Starting pCode block
                                    1- 3384     .segment "code"; module=main, function=_LED3ON
     0000                           1- 3386     _LED3ON:
                                    1- 3387     ; 2 exit points
                                    1- 3388     	.line	438, "main.c"; 	L3OUT;
     0000 001r                      1- 3389     	IOSTR	_IOSTB
                                    1- 3390     	BANKSEL	r0x105D
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3391     	MOVAR	r0x105D
     0003 1Crr                      1- 3392     	BCR	r0x105D,1
     0004 01rr                      1- 3393     	MOVR	r0x105D,W
     0005 000r                      1- 3394     	IOST	_IOSTB
                                    1- 3395     	.line	439, "main.c"; 	L2OUT;
     0006 001r                      1- 3396     	IOSTR	_IOSTB
     0007 00rr                      1- 3397     	MOVAR	r0x105D
     0008 1Drr                      1- 3398     	BCR	r0x105D,3
     0009 01rr                      1- 3399     	MOVR	r0x105D,W
     000A 000r                      1- 3400     	IOST	_IOSTB
                                    1- 3401     	.line	440, "main.c"; 	L2H;
     000B 19rr                      1- 3402     	BSR	_PORTB,3
                                    1- 3403     	.line	441, "main.c"; 	L3L;
     000C 1Crr                      1- 3404     	BCR	_PORTB,1
                                    1- 3405     	.line	442, "main.c"; 	delay(80);
     000D 2150                      1- 3406     	MOVIA	0x50
                                    1- 3407     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3408     	.line	443, "main.c"; 	LedInput();
                                    1- 3409     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3410     	.line	444, "main.c"; 	}
                                    1- 3411     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3412     ; exit point of _LED3ON
                                    1- 3414     ;***
                                    1- 3415     ;  pBlock Stats: dbName = C
                                    1- 3416     ;***
                                    1- 3417     ;has an exit
                                    1- 3418     ;functions called:
                                    1- 3419     ;   _delay
                                    1- 3420     ;   _LedInput
                                    1- 3421     ;   _delay
                                    1- 3422     ;   _LedInput
                                    1- 3423     ;1 compiler assigned register :
                                    1- 3424     ;   r0x105E
                                    1- 3425     ;; Starting pCode block
                                    1- 3426     .segment "code"; module=main, function=_LED2ON
     0000                           1- 3428     _LED2ON:
                                    1- 3429     ; 2 exit points
                                    1- 3430     	.line	428, "main.c"; 	L1OUT;
     0000 001r                      1- 3431     	IOSTR	_IOSTA
                                    1- 3432     	BANKSEL	r0x105E
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3433     	MOVAR	r0x105E
     0003 1Frr                      1- 3434     	BCR	r0x105E,7
     0004 01rr                      1- 3435     	MOVR	r0x105E,W
     0005 000r                      1- 3436     	IOST	_IOSTA
                                    1- 3437     	.line	429, "main.c"; 	L3OUT;
     0006 001r                      1- 3438     	IOSTR	_IOSTB
     0007 00rr                      1- 3439     	MOVAR	r0x105E
     0008 1Crr                      1- 3440     	BCR	r0x105E,1
     0009 01rr                      1- 3441     	MOVR	r0x105E,W
     000A 000r                      1- 3442     	IOST	_IOSTB
                                    1- 3443     	.line	430, "main.c"; 	L3H;
     000B 18rr                      1- 3444     	BSR	_PORTB,1
                                    1- 3445     	.line	431, "main.c"; 	L1L;
                                    1- 3446     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Frr                      1- 3447     	BCR	_PORTA,7
                                    1- 3448     	.line	432, "main.c"; 	delay(80);
     000E 2150                      1- 3449     	MOVIA	0x50
                                    1- 3450     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3451     	.line	433, "main.c"; 	LedInput();
                                    1- 3452     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3453     	.line	434, "main.c"; 	}
                                    1- 3454     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3455     ; exit point of _LED2ON
                                    1- 3457     ;***
                                    1- 3458     ;  pBlock Stats: dbName = C
                                    1- 3459     ;***
                                    1- 3460     ;has an exit
                                    1- 3461     ;functions called:
                                    1- 3462     ;   _delay
                                    1- 3463     ;   _LedInput
                                    1- 3464     ;   _delay
                                    1- 3465     ;   _LedInput
                                    1- 3466     ;1 compiler assigned register :
                                    1- 3467     ;   r0x105F
                                    1- 3468     ;; Starting pCode block
                                    1- 3469     .segment "code"; module=main, function=_LED1ON
     0000                           1- 3471     _LED1ON:
                                    1- 3472     ; 2 exit points
                                    1- 3473     	.line	418, "main.c"; 	L3OUT;
     0000 001r                      1- 3474     	IOSTR	_IOSTB
                                    1- 3475     	BANKSEL	r0x105F
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3476     	MOVAR	r0x105F
     0003 1Crr                      1- 3477     	BCR	r0x105F,1
     0004 01rr                      1- 3478     	MOVR	r0x105F,W
     0005 000r                      1- 3479     	IOST	_IOSTB
                                    1- 3480     	.line	419, "main.c"; 	L1OUT;
     0006 001r                      1- 3481     	IOSTR	_IOSTA
     0007 00rr                      1- 3482     	MOVAR	r0x105F
     0008 1Frr                      1- 3483     	BCR	r0x105F,7
     0009 01rr                      1- 3484     	MOVR	r0x105F,W
     000A 000r                      1- 3485     	IOST	_IOSTA
                                    1- 3486     	.line	420, "main.c"; 	L1H;
                                    1- 3487     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 1Brr                      1- 3488     	BSR	_PORTA,7
                                    1- 3489     	.line	421, "main.c"; 	L3L;
     000D 1Crr                      1- 3490     	BCR	_PORTB,1
                                    1- 3491     	.line	422, "main.c"; 	delay(80);
     000E 2150                      1- 3492     	MOVIA	0x50
                                    1- 3493     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3494     	.line	423, "main.c"; 	LedInput();
                                    1- 3495     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3496     	.line	424, "main.c"; 	}
                                    1- 3497     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3498     ; exit point of _LED1ON
                                    1- 3500     ;***
                                    1- 3501     ;  pBlock Stats: dbName = C
                                    1- 3502     ;***
                                    1- 3503     ;has an exit
                                    1- 3504     ;1 compiler assigned register :
                                    1- 3505     ;   r0x1055
                                    1- 3506     ;; Starting pCode block
                                    1- 3507     .segment "code"; module=main, function=_LedInput
     0000                           1- 3509     _LedInput:
                                    1- 3510     ; 2 exit points
                                    1- 3511     	.line	410, "main.c"; 	IOSTA |= 0x80;
     0000 001r                      1- 3512     	IOSTR	_IOSTA
                                    1- 3513     	BANKSEL	r0x1055
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3514     	MOVAR	r0x1055
     0003 1Brr                      1- 3515     	BSR	r0x1055,7
     0004 01rr                      1- 3516     	MOVR	r0x1055,W
     0005 000r                      1- 3517     	IOST	_IOSTA
                                    1- 3518     	.line	411, "main.c"; 	IOSTB |= 0x0B;
     0006 001r                      1- 3519     	IOSTR	_IOSTB
     0007 00rr                      1- 3520     	MOVAR	r0x1055
     0008 210B                      1- 3521     	MOVIA	0x0b
     0009 11rr                      1- 3522     	IORAR	r0x1055,F
     000A 01rr                      1- 3523     	MOVR	r0x1055,W
     000B 000r                      1- 3524     	IOST	_IOSTB
                                    1- 3525     	.line	412, "main.c"; 	PORTA &= 0x7F;
                                    1- 3526     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Frr                      1- 3527     	BCR	_PORTA,7
                                    1- 3528     	.line	413, "main.c"; 	PORTB &= 0xF4;
     000E 21F4                      1- 3529     	MOVIA	0xf4
     000F 10rr                      1- 3530     	ANDAR	_PORTB,F
                                    1- 3531     	.line	414, "main.c"; 	}
                                    1- 3532     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3533     ; exit point of _LedInput
                                    1- 3535     ;***
                                    1- 3536     ;  pBlock Stats: dbName = C
                                    1- 3537     ;***
                                    1- 3538     ;has an exit
                                    1- 3539     ;functions called:
                                    1- 3540     ;   _LedInput
                                    1- 3541     ;   _LedInput
                                    1- 3542     ;   _LED8ON
                                    1- 3543     ;   _LED7ON
                                    1- 3544     ;   _LED6ON
                                    1- 3545     ;   _LED5ON
                                    1- 3546     ;   _LED4ON
                                    1- 3547     ;   _LED3ON
                                    1- 3548     ;   _LED2ON
                                    1- 3549     ;   _LED1ON
                                    1- 3550     ;   _LedInput
                                    1- 3551     ;   _LedInput
                                    1- 3552     ;   _LED8ON
                                    1- 3553     ;   _LED7ON
                                    1- 3554     ;   _LED6ON
                                    1- 3555     ;   _LED5ON
                                    1- 3556     ;   _LED4ON
                                    1- 3557     ;   _LED3ON
                                    1- 3558     ;   _LED2ON
                                    1- 3559     ;   _LED1ON
                                    1- 3560     ;; Starting pCode block
                                    1- 3561     .segment "code"; module=main, function=_ledShow
     0000                           1- 3563     _ledShow:
                                    1- 3564     ; 2 exit points
                                    1- 3565     	.line	350, "main.c"; 	if(ledDeadTime > 0 && workStep == 0)
                                    1- 3566     	BANKSEL	_ledDeadTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 3567     	MOVR	_ledDeadTime,W
     0002 0D03                      1- 3568     	BTRSC	STATUS,2
                                    1- 3569     	MGOTO	_00295_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3570     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 3571     	MOVR	_workStep,W
     0006 0903                      1- 3572     	BTRSS	STATUS,2
                                    1- 3573     	MGOTO	_00295_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3574     	.line	352, "main.c"; 	if(ledDeadTime % 2 == 0)
                                    1- 3575     	BANKSEL	_ledDeadTime
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 0Crr                      1- 3576     	BTRSC	_ledDeadTime,0
                                    1- 3577     	MGOTO	_00292_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3578     	.line	354, "main.c"; 	ledStep = 0;
                                    1- 3579     	BANKSEL	_ledStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 02rr                      1- 3580     	CLRR	_ledStep
                                    1- 3581     	MGOTO	_00295_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 3582     _00292_DS_:
                                    1- 3583     	.line	358, "main.c"; 	ledStep = tempLedStep;
                                    1- 3584     	BANKSEL	_tempLedStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 3585     	MOVR	_tempLedStep,W
                                    1- 3586     	BANKSEL	_ledStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 3587     	MOVAR	_ledStep
     0012                           1- 3588     _00295_DS_:
                                    1- 3589     	.line	362, "main.c"; 	if(ledLightTime > 0 && pwStep > 0)
                                    1- 3590     	BANKSEL	_ledLightTime
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 3591     	MOVR	_ledLightTime,W
     0014 0D03                      1- 3592     	BTRSC	STATUS,2
                                    1- 3593     	MGOTO	_00298_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3594     	BANKSEL	_pwStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 3595     	MOVR	_pwStep,W
     0018 0D03                      1- 3596     	BTRSC	STATUS,2
                                    1- 3597     	MGOTO	_00298_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3598     	.line	365, "main.c"; 	ledStep = tempLedStep;
                                    1- 3599     	BANKSEL	_tempLedStep
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 01rr                      1- 3600     	MOVR	_tempLedStep,W
                                    1- 3601     	BANKSEL	_ledStep
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 00rr                      1- 3602     	MOVAR	_ledStep
     001E                           1- 3603     _00298_DS_:
                                    1- 3604     	.line	380, "main.c"; 	LedInput();
                                    1- 3605     	MCALL	_LedInput
     001E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3606     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3607     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 3608     	.line	381, "main.c"; 	switch(ledStep)
     001F 2109                      1- 3609     	MOVIA	0x09
                                    1- 3610     	BANKSEL	_ledStep
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 3611     	SUBAR	_ledStep,W
     0022 0C03                      1- 3612     	BTRSC	STATUS,0
                                    1- 3613     	MGOTO	_00310_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
     0024 21rr                      1- 3614     	MOVIA	((_00331_DS_ >> 8) & 0xff)
     0025 008A                      1- 3615     	MOVAR	PCHBUF
     0026 01rr                      1- 3616     	MOVR	_ledStep,W
     0027 25rr                      1- 3617     	ADDIA	_00331_DS_
     0028 0C03                      1- 3618     	BTRSC	STATUS,0
     0029 058A                      1- 3619     	INCR	PCHBUF,F
     002A 0082                      1- 3620     	MOVAR	PCL
     002B                           1- 3621     _00331_DS_:
                                    1- 3622     	MGOTO	_00300_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3623     	MGOTO	_00308_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3624     	MGOTO	_00307_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3625     	MGOTO	_00306_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3626     	MGOTO	_00305_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3627     	MGOTO	_00304_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3628     	MGOTO	_00303_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3629     	MGOTO	_00302_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3630     	MGOTO	_00301_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
     0034                           1- 3631     _00300_DS_:
                                    1- 3632     	.line	384, "main.c"; 	LedInput();
                                    1- 3633     	MCALL	_LedInput
     0034 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3634     	.line	385, "main.c"; 	break;
                                    1- 3635     	MGOTO	_00310_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
     0036                           1- 3636     _00301_DS_:
                                    1- 3637     	.line	387, "main.c"; 	LED8ON();
                                    1- 3638     	MCALL	_LED8ON
     0036 2rrr                      3-   66 m1      LCALL rom_address
     0037                           1- 3639     _00302_DS_:
                                    1- 3640     	.line	389, "main.c"; 	LED7ON();
                                    1- 3641     	MCALL	_LED7ON
     0037 2rrr                      3-   66 m1      LCALL rom_address
     0038                           1- 3642     _00303_DS_:
                                    1- 3643     	.line	391, "main.c"; 	LED6ON();
                                    1- 3644     	MCALL	_LED6ON
     0038 2rrr                      3-   66 m1      LCALL rom_address
     0039                           1- 3645     _00304_DS_:
                                    1- 3646     	.line	393, "main.c"; 	LED5ON();
                                    1- 3647     	MCALL	_LED5ON
     0039 2rrr                      3-   66 m1      LCALL rom_address
     003A                           1- 3648     _00305_DS_:
                                    1- 3649     	.line	395, "main.c"; 	LED4ON();
                                    1- 3650     	MCALL	_LED4ON
     003A 2rrr                      3-   66 m1      LCALL rom_address
     003B                           1- 3651     _00306_DS_:
                                    1- 3652     	.line	397, "main.c"; 	LED3ON();
                                    1- 3653     	MCALL	_LED3ON
     003B 2rrr                      3-   66 m1      LCALL rom_address
     003C                           1- 3654     _00307_DS_:
                                    1- 3655     	.line	399, "main.c"; 	LED2ON();
                                    1- 3656     	MCALL	_LED2ON
     003C 2rrr                      3-   66 m1      LCALL rom_address
     003D                           1- 3657     _00308_DS_:
                                    1- 3658     	.line	401, "main.c"; 	LED1ON();
                                    1- 3659     	MCALL	_LED1ON
     003D 2rrr                      3-   66 m1      LCALL rom_address
     003E                           1- 3660     _00310_DS_:
                                    1- 3661     	.line	404, "main.c"; 	}
                                    1- 3662     	RETURN	
     003E 0010                      3-   40 m1      ret
                                    1- 3663     ; exit point of _ledShow
                                    1- 3665     ;***
                                    1- 3666     ;  pBlock Stats: dbName = C
                                    1- 3667     ;***
                                    1- 3668     ;has an exit
                                    1- 3669     ;functions called:
                                    1- 3670     ;   _LedInput
                                    1- 3671     ;   _LedInput
                                    1- 3672     ;; Starting pCode block
                                    1- 3673     .segment "code"; module=main, function=_initSys
     0000                           1- 3675     _initSys:
                                    1- 3676     ; 2 exit points
                                    1- 3677     	.line	318, "main.c"; 	DISI();
     0000 0013                      1- 3678     	DISI
                                    1- 3679     	.line	319, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input ;
     0001 2178                      1- 3680     	MOVIA	0x78
     0002 000r                      1- 3681     	IOST	_IOSTA
                                    1- 3682     	.line	320, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 3683     	CLRA	
     0004 000r                      1- 3684     	IOST	_IOSTB
                                    1- 3685     	.line	321, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 3686     	CLRR	_PORTB
                                    1- 3687     	.line	322, "main.c"; 	PORTA = 0x00;
                                    1- 3688     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 3689     	CLRR	_PORTA
                                    1- 3690     	.line	323, "main.c"; 	LedInput();
                                    1- 3691     	MCALL	_LedInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3692     	.line	324, "main.c"; 	APHCON = 0xBF;
     0009 21BF                      1- 3693     	MOVIA	0xbf
     000A 000r                      1- 3694     	IOST	_APHCON
                                    1- 3695     	.line	325, "main.c"; 	BPHCON = 0xFF;
     000B 21FF                      1- 3696     	MOVIA	0xff
     000C 00rr                      1- 3697     	MOVAR	_BPHCON
                                    1- 3698     	.line	326, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 3699     	MOVAR	_ABPLCON
                                    1- 3700     	.line	328, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1- 3701     	MOVIA	0x01
     000F 00rr                      1- 3702     	MOVAR	_INTE
                                    1- 3703     	.line	330, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 3704     	CLRA	
     0011 000r                      1- 3705     	IOST	_PCON1
                                    1- 3706     	.line	332, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 3707     	MOVIA	0x37
     0013 00rr                      1- 3708     	MOVAR	_TMR0
                                    1- 3709     	.line	333, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0014 0200                      1- 3710     	CLRA	
     0015 0003                      1- 3711     	T0MD	
                                    1- 3712     	.line	335, "main.c"; 	PCON1 = C_TMR0_En;
     0016 2101                      1- 3713     	MOVIA	0x01
     0017 000r                      1- 3714     	IOST	_PCON1
                                    1- 3715     	.line	338, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0018 2198                      1- 3716     	MOVIA	0x98
     0019 00rr                      1- 3717     	MOVAR	_PCON
                                    1- 3718     	.line	341, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001A 2101                      1- 3719     	MOVIA	0x01
     001B 000r                      1- 3720     	IOST	_PCON1
                                    1- 3721     	.line	342, "main.c"; 	ENI();
     001C 0004                      1- 3722     	ENI
                                    1- 3723     	.line	343, "main.c"; 	}
                                    1- 3724     	RETURN	
     001D 0010                      3-   40 m1      ret
                                    1- 3725     ; exit point of _initSys
                                    1- 3727     ;***
                                    1- 3728     ;  pBlock Stats: dbName = C
                                    1- 3729     ;***
                                    1- 3730     ;has an exit
                                    1- 3731     ;functions called:
                                    1- 3732     ;   _pwmStop
                                    1- 3733     ;   _pwmStop
                                    1- 3734     ;; Starting pCode block
                                    1- 3735     .segment "code"; module=main, function=_powerOff
     0000                           1- 3737     _powerOff:
                                    1- 3738     ; 2 exit points
                                    1- 3739     	.line	309, "main.c"; 	workStep = 0;
                                    1- 3740     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 3741     	CLRR	_workStep
                                    1- 3742     	.line	310, "main.c"; 	pwmStop();
                                    1- 3743     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3744     	.line	311, "main.c"; 	ledStep = 0;
                                    1- 3745     	BANKSEL	_ledStep
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 3746     	CLRR	_ledStep
                                    1- 3747     	.line	312, "main.c"; 	}
                                    1- 3748     	RETURN	
     0005 0010                      3-   40 m1      ret
                                    1- 3749     ; exit point of _powerOff
                                    1- 3751     ;***
                                    1- 3752     ;  pBlock Stats: dbName = C
                                    1- 3753     ;***
                                    1- 3754     ;has an exit
                                    1- 3755     ;functions called:
                                    1- 3756     ;   _keyRead
                                    1- 3757     ;   _pwmInit
                                    1- 3758     ;   _powerOff
                                    1- 3759     ;   _pwmInit
                                    1- 3760     ;   _keyRead
                                    1- 3761     ;   _pwmInit
                                    1- 3762     ;   _powerOff
                                    1- 3763     ;   _pwmInit
                                    1- 3764     ;1 compiler assigned register :
                                    1- 3765     ;   r0x1060
                                    1- 3766     ;; Starting pCode block
                                    1- 3767     .segment "code"; module=main, function=_keyCtr
                                    1- 3769     ;local variable name mapping:
     0000                           1- 3771     _keyCtr:
                                    1- 3772     ; 2 exit points
                                    1- 3773     	.line	237, "main.c"; 	char kclick = keyRead(0x40 & (~PORTA));
                                    1- 3774     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 3775     	COMR	_PORTA,W
                                    1- 3776     	BANKSEL	r0x1060
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 3777     	MOVAR	r0x1060
     0004 2140                      1- 3778     	MOVIA	0x40
     0005 10rr                      1- 3779     	ANDAR	r0x1060,F
     0006 01rr                      1- 3780     	MOVR	r0x1060,W
                                    1- 3781     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3782     	BANKSEL	r0x1060
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 3783     	MOVAR	r0x1060
                                    1- 3784     	.line	238, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 3785     	XORIA	0x01
     000B 0903                      1- 3786     	BTRSS	STATUS,2
                                    1- 3787     	MGOTO	_00276_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3788     	.line	240, "main.c"; 	count500ms = 0;
                                    1- 3789     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 3790     	CLRR	_count500ms
                                    1- 3791     	.line	241, "main.c"; 	ledLightTime = 0;
                                    1- 3792     	BANKSEL	_ledLightTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 3793     	CLRR	_ledLightTime
                                    1- 3794     	.line	242, "main.c"; 	if(workStep == 0)
                                    1- 3795     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 3796     	MOVR	_workStep,W
     0013 0903                      1- 3797     	BTRSS	STATUS,2
                                    1- 3798     	MGOTO	_00240_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3799     	.line	244, "main.c"; 	count1s = 0;
                                    1- 3800     	BANKSEL	_count1s
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 3801     	CLRR	_count1s
                                    1- 3802     	.line	250, "main.c"; 	return;
                                    1- 3803     	MGOTO	_00278_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
     0018                           1- 3804     _00240_DS_:
                                    1- 3805     	.line	252, "main.c"; 	ledTime = 0;
                                    1- 3806     	BANKSEL	_ledTime
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 3807     	CLRR	_ledTime
                                    1- 3808     	.line	253, "main.c"; 	if(++workStep > 8)
                                    1- 3809     	BANKSEL	_workStep
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 05rr                      1- 3810     	INCR	_workStep,F
                                    1- 3811     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3812     ;;unsigned compare: left >= lit (0x9=9), size=1
     001C 2109                      1- 3813     	MOVIA	0x09
     001D 04rr                      1- 3814     	SUBAR	_workStep,W
     001E 0803                      1- 3815     	BTRSS	STATUS,0
                                    1- 3816     	MGOTO	_00242_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3817     	.line	254, "main.c"; 	workStep = 1;
     0020 2101                      1- 3818     	MOVIA	0x01
     0021 00rr                      1- 3819     	MOVAR	_workStep
     0022                           1- 3820     _00242_DS_:
                                    1- 3821     	.line	255, "main.c"; 	shanshuoTime = 6;
     0022 2106                      1- 3822     	MOVIA	0x06
                                    1- 3823     	BANKSEL	_shanshuoTime
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 3824     	MOVAR	_shanshuoTime
                                    1- 3825     	.line	256, "main.c"; 	if(workStep == 1)
                                    1- 3826     	BANKSEL	_workStep
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1- 3827     	MOVR	_workStep,W
     0027 2401                      1- 3828     	XORIA	0x01
     0028 0903                      1- 3829     	BTRSS	STATUS,2
                                    1- 3830     	MGOTO	_00264_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3831     	.line	257, "main.c"; 	maxDuty = 40;
     002A 2128                      1- 3832     	MOVIA	0x28
                                    1- 3833     	BANKSEL	_maxDuty
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 00rr                      1- 3834     	MOVAR	_maxDuty
                                    1- 3835     	MGOTO	_00265_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
     002E                           1- 3836     _00264_DS_:
                                    1- 3837     	.line	258, "main.c"; 	else if(workStep == 2)
                                    1- 3838     	BANKSEL	_workStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 3839     	MOVR	_workStep,W
     0030 2402                      1- 3840     	XORIA	0x02
     0031 0903                      1- 3841     	BTRSS	STATUS,2
                                    1- 3842     	MGOTO	_00261_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3843     	.line	259, "main.c"; 	maxDuty = 44;
     0033 212C                      1- 3844     	MOVIA	0x2c
                                    1- 3845     	BANKSEL	_maxDuty
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 3846     	MOVAR	_maxDuty
                                    1- 3847     	MGOTO	_00265_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037                           1- 3848     _00261_DS_:
                                    1- 3849     	.line	260, "main.c"; 	else if(workStep == 3)
                                    1- 3850     	BANKSEL	_workStep
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 01rr                      1- 3851     	MOVR	_workStep,W
     0039 2403                      1- 3852     	XORIA	0x03
     003A 0903                      1- 3853     	BTRSS	STATUS,2
                                    1- 3854     	MGOTO	_00258_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3855     	.line	261, "main.c"; 	maxDuty = 48;
     003C 2130                      1- 3856     	MOVIA	0x30
                                    1- 3857     	BANKSEL	_maxDuty
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 00rr                      1- 3858     	MOVAR	_maxDuty
                                    1- 3859     	MGOTO	_00265_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
     0040                           1- 3860     _00258_DS_:
                                    1- 3861     	.line	262, "main.c"; 	else if(workStep == 4)
                                    1- 3862     	BANKSEL	_workStep
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 01rr                      1- 3863     	MOVR	_workStep,W
     0042 2404                      1- 3864     	XORIA	0x04
     0043 0903                      1- 3865     	BTRSS	STATUS,2
                                    1- 3866     	MGOTO	_00255_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3867     	.line	263, "main.c"; 	maxDuty = 52;
     0045 2134                      1- 3868     	MOVIA	0x34
                                    1- 3869     	BANKSEL	_maxDuty
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1- 3870     	MOVAR	_maxDuty
                                    1- 3871     	MGOTO	_00265_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049                           1- 3872     _00255_DS_:
                                    1- 3873     	.line	264, "main.c"; 	else if(workStep == 5)
                                    1- 3874     	BANKSEL	_workStep
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 01rr                      1- 3875     	MOVR	_workStep,W
     004B 2405                      1- 3876     	XORIA	0x05
     004C 0903                      1- 3877     	BTRSS	STATUS,2
                                    1- 3878     	MGOTO	_00252_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3879     	.line	265, "main.c"; 	maxDuty = 55;
     004E 2137                      1- 3880     	MOVIA	0x37
                                    1- 3881     	BANKSEL	_maxDuty
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 00rr                      1- 3882     	MOVAR	_maxDuty
                                    1- 3883     	MGOTO	_00265_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
     0052                           1- 3884     _00252_DS_:
                                    1- 3885     	.line	266, "main.c"; 	else if(workStep == 6)
                                    1- 3886     	BANKSEL	_workStep
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1- 3887     	MOVR	_workStep,W
     0054 2406                      1- 3888     	XORIA	0x06
     0055 0903                      1- 3889     	BTRSS	STATUS,2
                                    1- 3890     	MGOTO	_00249_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3891     	.line	267, "main.c"; 	maxDuty = 58;
     0057 213A                      1- 3892     	MOVIA	0x3a
                                    1- 3893     	BANKSEL	_maxDuty
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 00rr                      1- 3894     	MOVAR	_maxDuty
                                    1- 3895     	MGOTO	_00265_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B                           1- 3896     _00249_DS_:
                                    1- 3897     	.line	268, "main.c"; 	else if(workStep == 7)
                                    1- 3898     	BANKSEL	_workStep
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 01rr                      1- 3899     	MOVR	_workStep,W
     005D 2407                      1- 3900     	XORIA	0x07
     005E 0903                      1- 3901     	BTRSS	STATUS,2
                                    1- 3902     	MGOTO	_00246_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3903     	.line	269, "main.c"; 	maxDuty = 61;
     0060 213D                      1- 3904     	MOVIA	0x3d
                                    1- 3905     	BANKSEL	_maxDuty
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 00rr                      1- 3906     	MOVAR	_maxDuty
                                    1- 3907     	MGOTO	_00265_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
     0064                           1- 3908     _00246_DS_:
                                    1- 3909     	.line	270, "main.c"; 	else if(workStep == 8)
                                    1- 3910     	BANKSEL	_workStep
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1- 3911     	MOVR	_workStep,W
     0066 2408                      1- 3912     	XORIA	0x08
     0067 0903                      1- 3913     	BTRSS	STATUS,2
                                    1- 3914     	MGOTO	_00265_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3915     	.line	271, "main.c"; 	maxDuty = 64;
     0069 2140                      1- 3916     	MOVIA	0x40
                                    1- 3917     	BANKSEL	_maxDuty
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 00rr                      1- 3918     	MOVAR	_maxDuty
     006C                           1- 3919     _00265_DS_:
                                    1- 3920     	.line	272, "main.c"; 	if(workStep > 0)
                                    1- 3921     	BANKSEL	_workStep
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 01rr                      1- 3922     	MOVR	_workStep,W
     006E 0D03                      1- 3923     	BTRSC	STATUS,2
                                    1- 3924     	MGOTO	_00267_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3925     	.line	274, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 3926     	BANKSEL	_maxDuty
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 01rr                      1- 3927     	MOVR	_maxDuty,W
     0072 00rr                      1- 3928     	SFUN	_PWM2DUTY
                                    1- 3929     	.line	275, "main.c"; 	pwmInit();
                                    1- 3930     	MCALL	_pwmInit
     0073 2rrr                      3-   66 m1      LCALL rom_address
     0074                           1- 3931     _00267_DS_:
                                    1- 3932     	.line	277, "main.c"; 	ledStep = workStep;
                                    1- 3933     	BANKSEL	_workStep
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 01rr                      1- 3934     	MOVR	_workStep,W
                                    1- 3935     	BANKSEL	_ledStep
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 00rr                      1- 3936     	MOVAR	_ledStep
                                    1- 3937     	MGOTO	_00278_DS_
     0078 3rrr                      3-   63 m1      LGOTO rom_address
     0079                           1- 3938     _00276_DS_:
                                    1- 3939     	.line	279, "main.c"; 	else if(kclick == 2)
                                    1- 3940     	BANKSEL	r0x1060
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 01rr                      1- 3941     	MOVR	r0x1060,W
     007B 2402                      1- 3942     	XORIA	0x02
     007C 0903                      1- 3943     	BTRSS	STATUS,2
                                    1- 3944     	MGOTO	_00278_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3945     	.line	281, "main.c"; 	if(workStep > 0)
                                    1- 3946     	BANKSEL	_workStep
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 01rr                      1- 3947     	MOVR	_workStep,W
     0080 0D03                      1- 3948     	BTRSC	STATUS,2
                                    1- 3949     	MGOTO	_00271_DS_
     0081 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3950     	.line	283, "main.c"; 	powerOff();
                                    1- 3951     	MCALL	_powerOff
     0082 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3952     	MGOTO	_00272_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3953     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3954     ;;unsigned compare: left >= lit (0x2=2), size=1
     0084                           1- 3955     _00271_DS_:
                                    1- 3956     	.line	287, "main.c"; 	if(pwStep <= 1)
     0084 2102                      1- 3957     	MOVIA	0x02
                                    1- 3958     	BANKSEL	_pwStep
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 04rr                      1- 3959     	SUBAR	_pwStep,W
     0087 0C03                      1- 3960     	BTRSC	STATUS,0
                                    1- 3961     	MGOTO	_00269_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3962     	.line	290, "main.c"; 	shandengTime = 500;
     0089 21F4                      1- 3963     	MOVIA	0xf4
                                    1- 3964     	BANKSEL	_shandengTime
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 00rr                      1- 3965     	MOVAR	_shandengTime
     008C 2101                      1- 3966     	MOVIA	0x01
     008D 00rr                      1- 3967     	MOVAR	(_shandengTime + 1)
                                    1- 3968     	.line	291, "main.c"; 	return;	
                                    1- 3969     	MGOTO	_00278_DS_
     008E 3rrr                      3-   63 m1      LGOTO rom_address
     008F                           1- 3970     _00269_DS_:
                                    1- 3971     	.line	293, "main.c"; 	ledLightTime = 0;
                                    1- 3972     	BANKSEL	_ledLightTime
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 02rr                      1- 3973     	CLRR	_ledLightTime
                                    1- 3974     	.line	294, "main.c"; 	workStep = 1;
     0091 2101                      1- 3975     	MOVIA	0x01
                                    1- 3976     	BANKSEL	_workStep
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 00rr                      1- 3977     	MOVAR	_workStep
                                    1- 3978     	.line	295, "main.c"; 	PWM2DUTY = 80;
     0094 2150                      1- 3979     	MOVIA	0x50
     0095 00rr                      1- 3980     	SFUN	_PWM2DUTY
                                    1- 3981     	.line	296, "main.c"; 	currentDuty = 80;
                                    1- 3982     	BANKSEL	_currentDuty
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 00rr                      1- 3983     	MOVAR	_currentDuty
                                    1- 3984     	.line	297, "main.c"; 	maxDuty = 40;
     0098 2128                      1- 3985     	MOVIA	0x28
                                    1- 3986     	BANKSEL	_maxDuty
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 00rr                      1- 3987     	MOVAR	_maxDuty
                                    1- 3988     	.line	298, "main.c"; 	pwmInit();
                                    1- 3989     	MCALL	_pwmInit
     009B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3990     	.line	299, "main.c"; 	shanshuoTime = 16;
     009C 2110                      1- 3991     	MOVIA	0x10
                                    1- 3992     	BANKSEL	_shanshuoTime
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 00rr                      1- 3993     	MOVAR	_shanshuoTime
     009F                           1- 3994     _00272_DS_:
                                    1- 3995     	.line	302, "main.c"; 	ledStep = workStep;
                                    1- 3996     	BANKSEL	_workStep
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 01rr                      1- 3997     	MOVR	_workStep,W
                                    1- 3998     	BANKSEL	_ledStep
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 00rr                      1- 3999     	MOVAR	_ledStep
     00A3                           1- 4000     _00278_DS_:
                                    1- 4001     	.line	304, "main.c"; 	}
                                    1- 4002     	RETURN	
     00A3 0010                      3-   40 m1      ret
                                    1- 4003     ; exit point of _keyCtr
                                    1- 4006     ;	code size estimation:
                                    1- 4007     ;	 1627+  391 =  2018 instructions ( 4818 byte)
                                    1- 4009     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
