
                    Nyquest Technology Co., Ltd.

NYASM 2.30

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062E,c=on
                                    1-    9     	#include "ny8b062e.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_fgCtr
                                    1-   18     	extern	_LedCtr2
                                    1-   19     	extern	_checkInAD
                                    1-   20     	extern	_PORTAbits
                                    1-   21     	extern	_PORTBbits
                                    1-   22     	extern	_PCONbits
                                    1-   23     	extern	_BWUCONbits
                                    1-   24     	extern	_ABPLCONbits
                                    1-   25     	extern	_BPHCONbits
                                    1-   26     	extern	_INTEbits
                                    1-   27     	extern	_INTFbits
                                    1-   28     	extern	_ADMDbits
                                    1-   29     	extern	_ADRbits
                                    1-   30     	extern	_ADVREFHbits
                                    1-   31     	extern	_ADCRbits
                                    1-   32     	extern	_AWUCONbits
                                    1-   33     	extern	_PACONbits
                                    1-   34     	extern	_ADJMDbits
                                    1-   35     	extern	_INTEDGbits
                                    1-   36     	extern	_ANAENbits
                                    1-   37     	extern	_RFCbits
                                    1-   38     	extern	_INTE2bits
                                    1-   39     	extern	_INDF
                                    1-   40     	extern	_TMR0
                                    1-   41     	extern	_PCL
                                    1-   42     	extern	_STATUS
                                    1-   43     	extern	_FSR
                                    1-   44     	extern	_PORTA
                                    1-   45     	extern	_PORTB
                                    1-   46     	extern	_PCON
                                    1-   47     	extern	_BWUCON
                                    1-   48     	extern	_PCHBUF
                                    1-   49     	extern	_ABPLCON
                                    1-   50     	extern	_BPHCON
                                    1-   51     	extern	_INTE
                                    1-   52     	extern	_INTF
                                    1-   53     	extern	_ADMD
                                    1-   54     	extern	_ADR
                                    1-   55     	extern	_ADD
                                    1-   56     	extern	_ADVREFH
                                    1-   57     	extern	_ADCR
                                    1-   58     	extern	_AWUCON
                                    1-   59     	extern	_PACON
                                    1-   60     	extern	_ADJMD
                                    1-   61     	extern	_INTEDG
                                    1-   62     	extern	_TMRH
                                    1-   63     	extern	_ANAEN
                                    1-   64     	extern	_RFC
                                    1-   65     	extern	_TM3RH
                                    1-   66     	extern	_INTE2
                                    1-   67     	extern	_TMR1
                                    1-   68     	extern	_T1CR1
                                    1-   69     	extern	_T1CR2
                                    1-   70     	extern	_PWM1DUTY
                                    1-   71     	extern	_PS1CV
                                    1-   72     	extern	_BZ1CR
                                    1-   73     	extern	_IRCR
                                    1-   74     	extern	_TBHP
                                    1-   75     	extern	_TBHD
                                    1-   76     	extern	_TMR2
                                    1-   77     	extern	_T2CR1
                                    1-   78     	extern	_T2CR2
                                    1-   79     	extern	_PWM2DUTY
                                    1-   80     	extern	_PS2CV
                                    1-   81     	extern	_BZ2CR
                                    1-   82     	extern	_OSCCR
                                    1-   83     	extern	_TMR3
                                    1-   84     	extern	_T3CR1
                                    1-   85     	extern	_T3CR2
                                    1-   86     	extern	_PWM3DUTY
                                    1-   87     	extern	_PS3CV
                                    1-   88     	extern	_BZ3CR
                                    1-   89     	extern	_P4CR1
                                    1-   90     	extern	_PWM4DUTY
                                    1-   91     	extern	_IOSTA
                                    1-   92     	extern	_IOSTB
                                    1-   93     	extern	_APHCON
                                    1-   94     	extern	_PS0CV
                                    1-   95     	extern	_BODCON
                                    1-   96     	extern	_CMPCR
                                    1-   97     	extern	_PCON1
                                    1-   98     	extern	_T0MD
                                    1-   99     	extern	___sdcc_saved_fsr
                                    1-  100     	extern	___sdcc_saved_stk00
                                    1-  101     	extern	___sdcc_saved_stk01
                                    1-  102     	extern	___sdcc_saved_stk02
                                    1-  103     	extern	___sdcc_saved_stk03
                                    1-  104     	extern	__nyc_ny8_startup
                                    1-  105     ;--------------------------------------------------------
                                    1-  106     ; global declarations
                                    1-  107     ;--------------------------------------------------------
                                    1-  108     	extern	_F_wait_eoc
                                    1-  109     	extern	_F_AIN2_Convert
                                    1-  110     	extern	_F_AIN3_Convert
                                    1-  111     	extern	_F_AIN4_Convert
                                    1-  112     	extern	_checkOutA
                                    1-  113     	extern	_checkBatAD
                                    1-  114     	extern	_initAD
                                    1-  115     	extern	_delay
                                    1-  116     	extern	_chrgCtr
                                    1-  117     	extern	_keyRead
                                    1-  118     	extern	_gotoSleep
                                    1-  119     	extern	_pwmStop
                                    1-  120     	extern	_pwmInit
                                    1-  121     	extern	_pwm1Stop
                                    1-  122     	extern	_pwm1Init
                                    1-  123     	extern	_LED8ON
                                    1-  124     	extern	_LED7ON
                                    1-  125     	extern	_LED6ON
                                    1-  126     	extern	_LED5ON
                                    1-  127     	extern	_LED4ON
                                    1-  128     	extern	_LED3ON
                                    1-  129     	extern	_LED2ON
                                    1-  130     	extern	_LED1ON
                                    1-  131     	extern	_LedInput
                                    1-  132     	extern	_ledShow
                                    1-  133     	extern	_initSys
                                    1-  134     	extern	_powerOff
                                    1-  135     	extern	_keyCtr
                                    1-  136     	extern	_isr
                                    1-  137     	extern	_main
                                    1-  138     	extern	_Status
                                    1-  139     	extern	_duty
                                    1-  140     	extern	_intCount
                                    1-  141     	extern	_count500ms
                                    1-  142     	extern	_keyCount
                                    1-  143     	extern	_workStep
                                    1-  144     	extern	_ledStep
                                    1-  145     	extern	_fgCount
                                    1-  146     	extern	_fgPRD
                                    1-  147     	extern	_preFG
                                    1-  148     	extern	_maxDuty
                                    1-  149     	extern	_pwStep
                                    1-  150     	extern	_R_AIN4_DATA
                                    1-  151     	extern	_R_AIN4_DATA_LB
                                    1-  152     	extern	_R_AIN3_DATA
                                    1-  153     	extern	_R_AIN3_DATA_LB
                                    1-  154     	extern	_R_AIN2_DATA
                                    1-  155     	extern	_R_AIN2_DATA_LB
                                    1-  156     	extern	_startStep
                                    1-  157     	extern	_sleepTime
                                    1-  158     	extern	_count200ms
                                    1-  159     	extern	_count1s
                                    1-  160     	extern	_count900s
                                    1-  161     	extern	_lowBatTime
                                    1-  162     	extern	_ledTime
                                    1-  163     	extern	_overCount
                                    1-  164     	extern	_chrgCount
                                    1-  165     	extern	_ledLightTime
                                    1-  166     	extern	_currentDuty
                                    1-  167     	extern	_fullCount
                                    1-  168     	extern	_shanshuoTime
                                    1-  169     	extern	_firstTime
                                    1-  170     	extern	_tempDuty
                                    1-  171     	extern	_lowCount
                                    1-  172     	extern	_longPressFlag
                                    1-  173     	extern	_IntFlag
                                    1-  174     	extern	_chrgFlag
                                    1-  175     	extern	_redLedFlag
                                    1-  176     	extern	_tempLedStep
                                    1-  177     	extern	_count5S
                                    1-  178     	extern	_ledDeadTime
                                    1-  179     	extern	_lockLedStep
                                    1-  180     	extern	_shandengTime
                                    1-  181     	extern	_lowBat
                                    1-  182     	extern	_lockStart
                                    1-  183     	extern	_fullLock
                                    1-  184     	extern	_fullLockCount
                                    1-  185     	extern	_ledCount
                                    1-  186     	extern	_maxOut
                                    1-  187     	extern	_subMin
                                    1-  188     	extern	_subTime
                                    1-  189     	extern	_addFlag
                                    1-  190     	extern	_addTime
                                    1-  191     	extern	_chrgWaitTime
                                    1-  192     	extern	_maxduty
                                    1-  193     	extern	_batValue
                                    1-  194     	extern	_subBatTime
                                    1-  195     	extern	_batTime
                                    1-  196     	extern	_batFullTime
                                    1-  197     	extern	_batZeorTime
                                    1-  198     	extern	_count99
                                    1-  199     	extern	_preBatValue
                                    1-  200     	extern	_ledLock
                                    1-  201     	extern	_countLedLock
                                    1-  202     	extern	_debug
                                    1-  204     	extern PSAVE
                                    1-  205     	extern SSAVE
                                    1-  206     	extern WSAVE
                                    1-  207     	extern STK12
                                    1-  208     	extern STK11
                                    1-  209     	extern STK10
                                    1-  210     	extern STK09
                                    1-  211     	extern STK08
                                    1-  212     	extern STK07
                                    1-  213     	extern STK06
                                    1-  214     	extern STK05
                                    1-  215     	extern STK04
                                    1-  216     	extern STK03
                                    1-  217     	extern STK02
                                    1-  218     	extern STK01
                                    1-  219     	extern STK00
                                    1-  221     .segment "uninit", 0x20000040
 20000040                           1-  222     PSAVE:
                                    1-  223     	.res 1
 20000041                           1-  224     SSAVE:
                                    1-  225     	.res 1
 20000042                           1-  226     WSAVE:
                                    1-  227     	.res 1
 20000043                           1-  228     STK12:
                                    1-  229     	.res 1
 20000044                           1-  230     STK11:
                                    1-  231     	.res 1
 20000045                           1-  232     STK10:
                                    1-  233     	.res 1
 20000046                           1-  234     STK09:
                                    1-  235     	.res 1
 20000047                           1-  236     STK08:
                                    1-  237     	.res 1
 20000048                           1-  238     STK07:
                                    1-  239     	.res 1
 20000049                           1-  240     STK06:
                                    1-  241     	.res 1
 2000004A                           1-  242     STK05:
                                    1-  243     	.res 1
 2000004B                           1-  244     STK04:
                                    1-  245     	.res 1
 2000004C                           1-  246     STK03:
                                    1-  247     	.res 1
 2000004D                           1-  248     STK02:
                                    1-  249     	.res 1
 2000004E                           1-  250     STK01:
                                    1-  251     	.res 1
 2000004F                           1-  252     STK00:
                                    1-  253     	.res 1
                                    1-  255     ;--------------------------------------------------------
                                    1-  256     ; global definitions
                                    1-  257     ;--------------------------------------------------------
                                    1-  258     .segment "uninit"
     0000                           1-  259     _R_AIN4_DATA:
                                    1-  260     	.res	2
                                    1-  263     .segment "uninit"
     0000                           1-  264     _R_AIN4_DATA_LB:
                                    1-  265     	.res	1
                                    1-  268     .segment "uninit"
     0000                           1-  269     _R_AIN3_DATA:
                                    1-  270     	.res	2
                                    1-  273     .segment "uninit"
     0000                           1-  274     _R_AIN3_DATA_LB:
                                    1-  275     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     _R_AIN2_DATA:
                                    1-  280     	.res	2
                                    1-  283     .segment "uninit"
     0000                           1-  284     _R_AIN2_DATA_LB:
                                    1-  285     	.res	1
                                    1-  288     ;--------------------------------------------------------
                                    1-  289     ; absolute symbol definitions
                                    1-  290     ;--------------------------------------------------------
                                    1-  291     ;--------------------------------------------------------
                                    1-  292     ; compiler-defined variables
                                    1-  293     ;--------------------------------------------------------
                                    1-  294     .segment "uninit"
     0000                           1-  295     r0x106C:
                                    1-  296     	.res	1
                                    1-  297     .segment "uninit"
     0000                           1-  298     r0x1062:
                                    1-  299     	.res	1
                                    1-  300     .segment "uninit"
     0000                           1-  301     r0x106B:
                                    1-  302     	.res	1
                                    1-  303     .segment "uninit"
     0000                           1-  304     r0x106A:
                                    1-  305     	.res	1
                                    1-  306     .segment "uninit"
     0000                           1-  307     r0x1069:
                                    1-  308     	.res	1
                                    1-  309     .segment "uninit"
     0000                           1-  310     r0x1068:
                                    1-  311     	.res	1
                                    1-  312     .segment "uninit"
     0000                           1-  313     r0x1067:
                                    1-  314     	.res	1
                                    1-  315     .segment "uninit"
     0000                           1-  316     r0x1066:
                                    1-  317     	.res	1
                                    1-  318     .segment "uninit"
     0000                           1-  319     r0x1065:
                                    1-  320     	.res	1
                                    1-  321     .segment "uninit"
     0000                           1-  322     r0x1064:
                                    1-  323     	.res	1
                                    1-  324     .segment "uninit"
     0000                           1-  325     r0x105E:
                                    1-  326     	.res	1
                                    1-  327     .segment "uninit"
     0000                           1-  328     r0x1063:
                                    1-  329     	.res	1
                                    1-  330     .segment "uninit"
     0000                           1-  331     r0x1061:
                                    1-  332     	.res	1
                                    1-  333     .segment "uninit"
     0000                           1-  334     r0x105F:
                                    1-  335     	.res	1
                                    1-  336     .segment "uninit"
     0000                           1-  337     r0x1042:
                                    1-  338     	.res	1
                                    1-  339     .segment "uninit"
     0000                           1-  340     r0x1043:
                                    1-  341     	.res	1
                                    1-  342     .segment "uninit"
     0000                           1-  343     r0x105C:
                                    1-  344     	.res	1
                                    1-  345     .segment "uninit"
     0000                           1-  346     r0x105D:
                                    1-  347     	.res	1
                                    1-  348     .segment "uninit"
     0000                           1-  349     r0x1056:
                                    1-  350     	.res	1
                                    1-  351     .segment "uninit"
     0000                           1-  352     r0x1057:
                                    1-  353     	.res	1
                                    1-  354     .segment "uninit"
     0000                           1-  355     r0x1059:
                                    1-  356     	.res	1
                                    1-  357     .segment "uninit"
     0000                           1-  358     r0x1050:
                                    1-  359     	.res	1
                                    1-  360     .segment "uninit"
     0000                           1-  361     r0x1051:
                                    1-  362     	.res	1
                                    1-  363     .segment "uninit"
     0000                           1-  364     r0x1052:
                                    1-  365     	.res	1
                                    1-  366     .segment "uninit"
     0000                           1-  367     r0x1055:
                                    1-  368     	.res	1
                                    1-  369     .segment "uninit"
     0000                           1-  370     r0x104A:
                                    1-  371     	.res	1
                                    1-  372     .segment "uninit"
     0000                           1-  373     r0x104B:
                                    1-  374     	.res	1
                                    1-  375     .segment "uninit"
     0000                           1-  376     r0x104C:
                                    1-  377     	.res	1
                                    1-  378     .segment "uninit"
     0000                           1-  379     r0x104F:
                                    1-  380     	.res	1
                                    1-  381     .segment "uninit"
     0000                           1-  382     r0x1044:
                                    1-  383     	.res	1
                                    1-  384     .segment "uninit"
     0000                           1-  385     r0x1045:
                                    1-  386     	.res	1
                                    1-  387     .segment "uninit"
     0000                           1-  388     r0x1046:
                                    1-  389     	.res	1
                                    1-  390     .segment "uninit"
     0000                           1-  391     r0x1049:
                                    1-  392     	.res	1
                                    1-  393     ;--------------------------------------------------------
                                    1-  394     ; initialized data
                                    1-  395     ;--------------------------------------------------------
                                    1-  397     .segment "idata"
     0000                           1-  398     _Status:
     0000 0000                      1-  399     	dw	0x00
                                    1-  403     .segment "idata"
     0000                           1-  404     _duty:
     0000 0000 0000                 1-  405     	dw	0x00, 0x00
                                    1-  409     .segment "idata"
     0000                           1-  410     _intCount:
     0000 0000                      1-  411     	dw	0x00
                                    1-  415     .segment "idata"
     0000                           1-  416     _count500ms:
     0000 0000                      1-  417     	dw	0x00
                                    1-  421     .segment "idata"
     0000                           1-  422     _keyCount:
     0000 0000                      1-  423     	dw	0x00
                                    1-  427     .segment "idata"
     0000                           1-  428     _workStep:
     0000 0000                      1-  429     	dw	0x00
                                    1-  433     .segment "idata"
     0000                           1-  434     _ledStep:
     0000 0000                      1-  435     	dw	0x00
                                    1-  439     .segment "idata"
     0000                           1-  440     _fgCount:
     0000 0000 0000                 1-  441     	dw	0x00, 0x00
                                    1-  445     .segment "idata"
     0000                           1-  446     _fgPRD:
     0000 0000 0000                 1-  447     	dw	0x00, 0x00
                                    1-  451     .segment "idata"
     0000                           1-  452     _preFG:
     0000 0000                      1-  453     	dw	0x00
                                    1-  457     .segment "idata"
     0000                           1-  458     _maxDuty:
     0000 0000                      1-  459     	dw	0x00
                                    1-  463     .segment "idata"
     0000                           1-  464     _pwStep:
     0000 0000                      1-  465     	dw	0x00
                                    1-  469     .segment "idata"
     0000                           1-  470     _startStep:
     0000 0000                      1-  471     	dw	0x00
                                    1-  475     .segment "idata"
     0000                           1-  476     _sleepTime:
     0000 0000 0000                 1-  477     	dw	0x00, 0x00
                                    1-  481     .segment "idata"
     0000                           1-  482     _count200ms:
     0000 0000                      1-  483     	dw	0x00
                                    1-  487     .segment "idata"
     0000                           1-  488     _count1s:
     0000 0000                      1-  489     	dw	0x00
                                    1-  493     .segment "idata"
     0000                           1-  494     _count900s:
     0000 0000 0000                 1-  495     	dw	0x00, 0x00
                                    1-  499     .segment "idata"
     0000                           1-  500     _lowBatTime:
     0000 0000                      1-  501     	dw	0x00
                                    1-  505     .segment "idata"
     0000                           1-  506     _ledTime:
     0000 0000                      1-  507     	dw	0x00
                                    1-  511     .segment "idata"
     0000                           1-  512     _overCount:
     0000 0000                      1-  513     	dw	0x00
                                    1-  517     .segment "idata"
     0000                           1-  518     _chrgCount:
     0000 0000                      1-  519     	dw	0x00
                                    1-  523     .segment "idata"
     0000                           1-  524     _ledLightTime:
     0000 0000                      1-  525     	dw	0x00
                                    1-  529     .segment "idata"
     0000                           1-  530     _currentDuty:
     0000 0000                      1-  531     	dw	0x00
                                    1-  535     .segment "idata"
     0000                           1-  536     _fullCount:
     0000 0000                      1-  537     	dw	0x00
                                    1-  541     .segment "idata"
     0000                           1-  542     _shanshuoTime:
     0000 0000                      1-  543     	dw	0x00
                                    1-  547     .segment "idata"
     0000                           1-  548     _firstTime:
     0000 0000                      1-  549     	dw	0x00
                                    1-  553     .segment "idata"
     0000                           1-  554     _tempDuty:
     0000 0000                      1-  555     	dw	0x00
                                    1-  559     .segment "idata"
     0000                           1-  560     _lowCount:
     0000 0000                      1-  561     	dw	0x00
                                    1-  565     .segment "idata"
     0000                           1-  566     _longPressFlag:
     0000 0000                      1-  567     	dw	0x00
                                    1-  571     .segment "idata"
     0000                           1-  572     _IntFlag:
     0000 0000                      1-  573     	dw	0x00
                                    1-  577     .segment "idata"
     0000                           1-  578     _chrgFlag:
     0000 0000                      1-  579     	dw	0x00
                                    1-  583     .segment "idata"
     0000                           1-  584     _redLedFlag:
     0000 0000                      1-  585     	dw	0x00
                                    1-  589     .segment "idata"
     0000                           1-  590     _tempLedStep:
     0000 0000                      1-  591     	dw	0x00
                                    1-  595     .segment "idata"
     0000                           1-  596     _count5S:
     0000 0000 0000                 1-  597     	dw	0x00, 0x00
                                    1-  601     .segment "idata"
     0000                           1-  602     _ledDeadTime:
     0000 0000                      1-  603     	dw	0x00
                                    1-  607     .segment "idata"
     0000                           1-  608     _lockLedStep:
     0000 0000                      1-  609     	dw	0x00
                                    1-  613     .segment "idata"
     0000                           1-  614     _shandengTime:
     0000 0000 0000                 1-  615     	dw	0x00, 0x00
                                    1-  619     .segment "idata"
     0000                           1-  620     _lowBat:
     0000 0000 0000                 1-  621     	dw	0x00, 0x00
                                    1-  625     .segment "idata"
     0000                           1-  626     _lockStart:
     0000 0000                      1-  627     	dw	0x00
                                    1-  631     .segment "idata"
     0000                           1-  632     _fullLock:
     0000 0000                      1-  633     	dw	0x00
                                    1-  637     .segment "idata"
     0000                           1-  638     _fullLockCount:
     0000 0000                      1-  639     	dw	0x00
                                    1-  643     .segment "idata"
     0000                           1-  644     _ledCount:
     0000 0000                      1-  645     	dw	0x00
                                    1-  649     .segment "idata"
     0000                           1-  650     _maxOut:
     0000 0000                      1-  651     	dw	0x00
                                    1-  655     .segment "idata"
     0000                           1-  656     _subMin:
     0000 0000                      1-  657     	dw	0x00
                                    1-  661     .segment "idata"
     0000                           1-  662     _subTime:
     0000 0000                      1-  663     	dw	0x00
                                    1-  667     .segment "idata"
     0000                           1-  668     _addFlag:
     0000 0000                      1-  669     	dw	0x00
                                    1-  673     .segment "idata"
     0000                           1-  674     _addTime:
     0000 0000                      1-  675     	dw	0x00
                                    1-  679     .segment "idata"
     0000                           1-  680     _chrgWaitTime:
     0000 0000                      1-  681     	dw	0x00
                                    1-  685     .segment "idata"
     0000                           1-  686     _maxduty:
     0000 0000                      1-  687     	dw	0x00
                                    1-  691     .segment "idata"
     0000                           1-  692     _batValue:
     0000 0000                      1-  693     	dw	0x00
                                    1-  697     .segment "idata"
     0000                           1-  698     _subBatTime:
     0000 0000 0000                 1-  699     	dw	0x00, 0x00
                                    1-  703     .segment "idata"
     0000                           1-  704     _batTime:
     0000 0000 0000                 1-  705     	dw	0x00, 0x00
                                    1-  709     .segment "idata"
     0000                           1-  710     _batFullTime:
     0000 0000 0000                 1-  711     	dw	0x00, 0x00
                                    1-  715     .segment "idata"
     0000                           1-  716     _batZeorTime:
     0000 0000                      1-  717     	dw	0x00
                                    1-  721     .segment "idata"
     0000                           1-  722     _count99:
     0000 0000 0000                 1-  723     	dw	0x00, 0x00
                                    1-  727     .segment "idata"
     0000                           1-  728     _preBatValue:
     0000 0000 0000                 1-  729     	dw	0x00, 0x00
                                    1-  733     .segment "idata"
     0000                           1-  734     _ledLock:
     0000 0000                      1-  735     	dw	0x00
                                    1-  739     .segment "idata"
     0000                           1-  740     _countLedLock:
     0000 0000 0000                 1-  741     	dw	0x00, 0x00
                                    1-  745     .segment "idata"
     0000                           1-  746     _debug:
     0000 0000                      1-  747     	dw	0x00
                                    1-  750     ;--------------------------------------------------------
                                    1-  751     ; overlayable items in internal ram 
                                    1-  752     ;--------------------------------------------------------
                                    1-  753     ;	udata_ovr
                                    1-  754     ;--------------------------------------------------------
                                    1-  755     ; reset vector 
                                    1-  756     ;--------------------------------------------------------
                                    1-  757     ORG	0x0000
     0000 3rrr                      1-  758     	LGOTO	__nyc_ny8_startup
                                    1-  759     ;--------------------------------------------------------
                                    1-  760     ; interrupt and initialization code
                                    1-  761     ;--------------------------------------------------------
                                    1-  762     ORG 0x0008
                                    1-  763     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  765     .segment "code"
     0000                           1-  766     __sdcc_interrupt:
                                    1-  767     ;***
                                    1-  768     ;  pBlock Stats: dbName = I
                                    1-  769     ;***
                                    1-  770     ;4 compiler assigned registers:
                                    1-  771     ;   STK00
                                    1-  772     ;   STK01
                                    1-  773     ;   STK02
                                    1-  774     ;   STK03
                                    1-  775     ;; Starting pCode block
     0000                           1-  776     _isr:
                                    1-  777     ; 0 exit points
                                    1-  778     	.line	140, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  779     	MOVAR	WSAVE
     0001 1503                      1-  780     	SWAPR	STATUS,W
     0002 0283                      1-  781     	CLRR	STATUS
     0003 00rr                      1-  782     	MOVAR	SSAVE
     0004 010A                      1-  783     	MOVR	PCHBUF,W
     0005 028A                      1-  784     	CLRR	PCHBUF
     0006 00rr                      1-  785     	MOVAR	PSAVE
     0007 0104                      1-  786     	MOVR	FSR,W
                                    1-  787     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  788     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  789     	MOVR	STK00,W
                                    1-  790     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  791     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  792     	MOVR	STK01,W
                                    1-  793     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  794     	MOVAR	___sdcc_saved_stk01
     0010 01rr                      1-  795     	MOVR	STK02,W
                                    1-  796     	BANKSEL	___sdcc_saved_stk02
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1-  797     	MOVAR	___sdcc_saved_stk02
     0013 01rr                      1-  798     	MOVR	STK03,W
                                    1-  799     	BANKSEL	___sdcc_saved_stk03
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1-  800     	MOVAR	___sdcc_saved_stk03
                                    1-  801     	.line	142, "main.c"; 	if(INTFbits.T0IF)
     0016 08rr                      1-  802     	BTRSS	_INTFbits,0
                                    1-  803     	MGOTO	_00125_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  804     	.line	144, "main.c"; 	TMR0 += 55;
     0018 2137                      1-  805     	MOVIA	0x37
     0019 03rr                      1-  806     	ADDAR	_TMR0,F
                                    1-  807     	.line	146, "main.c"; 	if(++intCount >= 100)
                                    1-  808     	BANKSEL	_intCount
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 05rr                      1-  809     	INCR	_intCount,F
                                    1-  810     ;;unsigned compare: left < lit (0x64=100), size=1
     001C 2164                      1-  811     	MOVIA	0x64
     001D 04rr                      1-  812     	SUBAR	_intCount,W
     001E 0803                      1-  813     	BTRSS	STATUS,0
                                    1-  814     	MGOTO	_00125_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  815     	.line	148, "main.c"; 	IntFlag = 1;
     0020 2101                      1-  816     	MOVIA	0x01
                                    1-  817     	BANKSEL	_IntFlag
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 00rr                      1-  818     	MOVAR	_IntFlag
                                    1-  819     	.line	149, "main.c"; 	intCount = 0;
                                    1-  820     	BANKSEL	_intCount
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 02rr                      1-  821     	CLRR	_intCount
                                    1-  822     	.line	150, "main.c"; 	if(workStep)
                                    1-  823     	BANKSEL	_workStep
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1-  824     	MOVR	_workStep,W
     0027 0D03                      1-  825     	BTRSC	STATUS,2
                                    1-  826     	MGOTO	_00106_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  827     	.line	151, "main.c"; 	++fgCount;
                                    1-  828     	BANKSEL	_fgCount
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 05rr                      1-  829     	INCR	_fgCount,F
     002B 0D03                      1-  830     	BTRSC	STATUS,2
     002C 05rr                      1-  831     	INCR	(_fgCount + 1),F
     002D                           1-  832     _00106_DS_:
                                    1-  833     	.line	152, "main.c"; 	if(++count500ms >= 72)
                                    1-  834     	BANKSEL	_count500ms
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 05rr                      1-  835     	INCR	_count500ms,F
                                    1-  836     ;;unsigned compare: left < lit (0x48=72), size=1
     002F 2148                      1-  837     	MOVIA	0x48
     0030 04rr                      1-  838     	SUBAR	_count500ms,W
     0031 0C03                      1-  839     	BTRSC	STATUS,0
                                    1-  840     	.line	153, "main.c"; 	count500ms = 0;
     0032 02rr                      1-  841     	CLRR	_count500ms
                                    1-  842     	.line	154, "main.c"; 	if(++count200ms >= 20)
                                    1-  843     	BANKSEL	_count200ms
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 05rr                      1-  844     	INCR	_count200ms,F
     0035 2114                      1-  845     	MOVIA	0x14
     0036 04rr                      1-  846     	SUBAR	_count200ms,W
     0037 0803                      1-  847     	BTRSS	STATUS,0
                                    1-  848     	MGOTO	_00112_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  849     	.line	156, "main.c"; 	count200ms = 0;
     0039 02rr                      1-  850     	CLRR	_count200ms
                                    1-  851     	.line	157, "main.c"; 	if(ledDeadTime > 0)
                                    1-  852     	BANKSEL	_ledDeadTime
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1-  853     	MOVR	_ledDeadTime,W
     003C 0903                      1-  854     	BTRSS	STATUS,2
                                    1-  855     	.line	158, "main.c"; 	--ledDeadTime;
     003D 06rr                      1-  856     	DECR	_ledDeadTime,F
     003E                           1-  857     _00112_DS_:
                                    1-  858     	.line	160, "main.c"; 	if(++count1s >= 125)
                                    1-  859     	BANKSEL	_count1s
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 05rr                      1-  860     	INCR	_count1s,F
     0040 217D                      1-  861     	MOVIA	0x7d
     0041 04rr                      1-  862     	SUBAR	_count1s,W
     0042 0803                      1-  863     	BTRSS	STATUS,0
                                    1-  864     	MGOTO	_00125_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  865     	.line	162, "main.c"; 	count1s = 0;
     0044 02rr                      1-  866     	CLRR	_count1s
                                    1-  867     	.line	163, "main.c"; 	if(ledLightTime > 0)
                                    1-  868     	BANKSEL	_ledLightTime
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1-  869     	MOVR	_ledLightTime,W
     0047 0903                      1-  870     	BTRSS	STATUS,2
                                    1-  871     	.line	164, "main.c"; 	--ledLightTime;
     0048 06rr                      1-  872     	DECR	_ledLightTime,F
                                    1-  873     	.line	165, "main.c"; 	if(shanshuoTime > 0)
                                    1-  874     	BANKSEL	_shanshuoTime
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 01rr                      1-  875     	MOVR	_shanshuoTime,W
     004B 0903                      1-  876     	BTRSS	STATUS,2
                                    1-  877     	.line	166, "main.c"; 	--shanshuoTime;
     004C 06rr                      1-  878     	DECR	_shanshuoTime,F
                                    1-  879     	.line	167, "main.c"; 	if(workStep)
                                    1-  880     	BANKSEL	_workStep
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 01rr                      1-  881     	MOVR	_workStep,W
     004F 0D03                      1-  882     	BTRSC	STATUS,2
                                    1-  883     	MGOTO	_00118_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  884     	.line	169, "main.c"; 	++count900s;
                                    1-  885     	BANKSEL	_count900s
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 05rr                      1-  886     	INCR	_count900s,F
     0053 0D03                      1-  887     	BTRSC	STATUS,2
     0054 05rr                      1-  888     	INCR	(_count900s + 1),F
                                    1-  889     	MGOTO	_00125_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
     0056                           1-  890     _00118_DS_:
                                    1-  891     	.line	173, "main.c"; 	count900s = 0;
                                    1-  892     	BANKSEL	_count900s
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 02rr                      1-  893     	CLRR	_count900s
     0058 02rr                      1-  894     	CLRR	(_count900s + 1)
     0059                           1-  895     _00125_DS_:
                                    1-  896     	.line	182, "main.c"; 	if(INTFbits.PABIF)
     0059 08rr                      1-  897     	BTRSS	_INTFbits,1
                                    1-  898     	MGOTO	_00127_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  899     	.line	184, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     005B 21FD                      1-  900     	MOVIA	0xfd
     005C 00rr                      1-  901     	MOVAR	_INTF
     005D                           1-  902     _00127_DS_:
                                    1-  903     	.line	187, "main.c"; 	INTF = 0;
     005D 02rr                      1-  904     	CLRR	_INTF
                                    1-  905     	.line	189, "main.c"; 	}
                                    1-  906     	BANKSEL	___sdcc_saved_stk03
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 01rr                      1-  907     	MOVR	___sdcc_saved_stk03,W
     0060 00rr                      1-  908     	MOVAR	STK03
                                    1-  909     	BANKSEL	___sdcc_saved_stk02
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1-  910     	MOVR	___sdcc_saved_stk02,W
     0063 00rr                      1-  911     	MOVAR	STK02
                                    1-  912     	BANKSEL	___sdcc_saved_stk01
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1-  913     	MOVR	___sdcc_saved_stk01,W
     0066 00rr                      1-  914     	MOVAR	STK01
                                    1-  915     	BANKSEL	___sdcc_saved_stk00
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 01rr                      1-  916     	MOVR	___sdcc_saved_stk00,W
     0069 00rr                      1-  917     	MOVAR	STK00
                                    1-  918     	BANKSEL	___sdcc_saved_fsr
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 01rr                      1-  919     	MOVR	___sdcc_saved_fsr,W
     006C 0084                      1-  920     	MOVAR	FSR
     006D 01rr                      1-  921     	MOVR	PSAVE,W
     006E 008A                      1-  922     	MOVAR	PCHBUF
     006F 0283                      1-  923     	CLRR	STATUS
     0070 15rr                      1-  924     	SWAPR	SSAVE,W
     0071 0083                      1-  925     	MOVAR	STATUS
     0072 15rr                      1-  926     	SWAPR	WSAVE,F
     0073 15rr                      1-  927     	SWAPR	WSAVE,W
     0074                           1-  928     END_OF_INTERRUPT:
     0074 0011                      1-  929     	RETIE	
                                    1-  931     ;--------------------------------------------------------
                                    1-  932     ; code
                                    1-  933     ;--------------------------------------------------------
                                    1-  934     ;***
                                    1-  935     ;  pBlock Stats: dbName = M
                                    1-  936     ;***
                                    1-  937     ;has an exit
                                    1-  938     ;functions called:
                                    1-  939     ;   _initSys
                                    1-  940     ;   _initAD
                                    1-  941     ;   _ledShow
                                    1-  942     ;   _keyCtr
                                    1-  943     ;   _checkBatAD
                                    1-  944     ;   _checkOutA
                                    1-  945     ;   _chrgCtr
                                    1-  946     ;   _ledShow
                                    1-  947     ;   _powerOff
                                    1-  948     ;   _gotoSleep
                                    1-  949     ;   _powerOff
                                    1-  950     ;   _initSys
                                    1-  951     ;   _initAD
                                    1-  952     ;   _ledShow
                                    1-  953     ;   _keyCtr
                                    1-  954     ;   _checkBatAD
                                    1-  955     ;   _checkOutA
                                    1-  956     ;   _chrgCtr
                                    1-  957     ;   _ledShow
                                    1-  958     ;   _powerOff
                                    1-  959     ;   _gotoSleep
                                    1-  960     ;   _powerOff
                                    1-  961     ;; Starting pCode block
                                    1-  962     .segment "code"; module=main, function=_main
     0000                           1-  964     _main:
                                    1-  965     ; 2 exit points
                                    1-  966     	.line	193, "main.c"; 	initSys();
                                    1-  967     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  968     	.line	194, "main.c"; 	initAD();
                                    1-  969     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  970     _00163_DS_:
                                    1-  971     	.line	197, "main.c"; 	CLRWDT();
     0002 0002                      1-  972     	clrwdt
                                    1-  973     	.line	198, "main.c"; 	ledShow();
                                    1-  974     	MCALL	_ledShow
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  975     	.line	199, "main.c"; 	if(!IntFlag)
                                    1-  976     	BANKSEL	_IntFlag
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  977     	MOVR	_IntFlag,W
     0006 0D03                      1-  978     	BTRSC	STATUS,2
                                    1-  979     	MGOTO	_00163_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  980     	.line	201, "main.c"; 	IntFlag = 0;
     0008 02rr                      1-  981     	CLRR	_IntFlag
                                    1-  982     	.line	202, "main.c"; 	if(chrgFlag == 0)
                                    1-  983     	BANKSEL	_chrgFlag
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 01rr                      1-  984     	MOVR	_chrgFlag,W
     000B 0D03                      1-  985     	BTRSC	STATUS,2
                                    1-  986     	.line	203, "main.c"; 	keyCtr();
                                    1-  987     	MCALL	_keyCtr
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  988     	.line	204, "main.c"; 	if(count200ms < 5)
     000D 2105                      1-  989     	MOVIA	0x05
                                    1-  990     	BANKSEL	_count200ms
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 04rr                      1-  991     	SUBAR	_count200ms,W
     0010 0C03                      1-  992     	BTRSC	STATUS,0
                                    1-  993     	MGOTO	_00140_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  994     	.line	206, "main.c"; 	checkBatAD();
                                    1-  995     	MCALL	_checkBatAD
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  996     	MGOTO	_00141_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  997     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  998     ;;unsigned compare: left >= lit (0x9=9), size=1
     0014                           1-  999     _00140_DS_:
                                    1- 1000     	.line	208, "main.c"; 	else if(count200ms > 8 && count200ms < 11)
     0014 2109                      1- 1001     	MOVIA	0x09
                                    1- 1002     	BANKSEL	_count200ms
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 04rr                      1- 1003     	SUBAR	_count200ms,W
     0017 0803                      1- 1004     	BTRSS	STATUS,0
                                    1- 1005     	MGOTO	_00141_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1006     ;;unsigned compare: left < lit (0xB=11), size=1
     0019 210B                      1- 1007     	MOVIA	0x0b
     001A 04rr                      1- 1008     	SUBAR	_count200ms,W
     001B 0803                      1- 1009     	BTRSS	STATUS,0
                                    1- 1010     	.line	210, "main.c"; 	checkOutA();
                                    1- 1011     	MCALL	_checkOutA
     001C 2rrr                      3-   66 m1      LCALL rom_address
     001D                           1- 1012     _00141_DS_:
                                    1- 1013     	.line	212, "main.c"; 	chrgCtr();
                                    1- 1014     	MCALL	_chrgCtr
     001D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1015     	.line	213, "main.c"; 	ledShow();
                                    1- 1016     	MCALL	_ledShow
     001E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1017     	.line	214, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1- 1018     	BANKSEL	_workStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 01rr                      1- 1019     	MOVR	_workStep,W
     0021 0D03                      1- 1020     	BTRSC	STATUS,2
                                    1- 1021     	MGOTO	_00143_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1022     	BANKSEL	_currentDuty
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 01rr                      1- 1023     	MOVR	_currentDuty,W
                                    1- 1024     	BANKSEL	_maxDuty
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 04rr                      1- 1025     	SUBAR	_maxDuty,W
     0027 0C03                      1- 1026     	BTRSC	STATUS,0
                                    1- 1027     	MGOTO	_00143_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1028     	.line	216, "main.c"; 	currentDuty = currentDuty - 10;
     0029 21F6                      1- 1029     	MOVIA	0xf6
                                    1- 1030     	BANKSEL	_currentDuty
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1031     	ADDAR	_currentDuty,F
                                    1- 1032     	.line	217, "main.c"; 	PWM2DUTY = currentDuty;
     002C 01rr                      1- 1033     	MOVR	_currentDuty,W
     002D 00rr                      1- 1034     	SFUN	_PWM2DUTY
                                    1- 1035     ;;unsigned compare: left < lit (0x5=5), size=1
     002E                           1- 1036     _00143_DS_:
                                    1- 1037     	.line	220, "main.c"; 	if(overCount >= 5 && workStep > 0)
     002E 2105                      1- 1038     	MOVIA	0x05
                                    1- 1039     	BANKSEL	_overCount
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 04rr                      1- 1040     	SUBAR	_overCount,W
     0031 0803                      1- 1041     	BTRSS	STATUS,0
                                    1- 1042     	MGOTO	_00148_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1043     	BANKSEL	_workStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 1044     	MOVR	_workStep,W
     0035 0D03                      1- 1045     	BTRSC	STATUS,2
                                    1- 1046     	MGOTO	_00148_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1047     	.line	222, "main.c"; 	if(++count5S > 500)
                                    1- 1048     	BANKSEL	_count5S
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 05rr                      1- 1049     	INCR	_count5S,F
     0039 0D03                      1- 1050     	BTRSC	STATUS,2
     003A 05rr                      1- 1051     	INCR	(_count5S + 1),F
                                    1- 1052     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1053     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     003B 2101                      1- 1054     	MOVIA	0x01
     003C 04rr                      1- 1055     	SUBAR	(_count5S + 1),W
     003D 0903                      1- 1056     	BTRSS	STATUS,2
                                    1- 1057     	MGOTO	_00229_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
     003F 21F5                      1- 1058     	MOVIA	0xf5
     0040 04rr                      1- 1059     	SUBAR	_count5S,W
     0041                           1- 1060     _00229_DS_:
     0041 0803                      1- 1061     	BTRSS	STATUS,0
                                    1- 1062     	MGOTO	_00149_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1063     	.line	224, "main.c"; 	overCount = 0;
                                    1- 1064     	BANKSEL	_overCount
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 02rr                      1- 1065     	CLRR	_overCount
                                    1- 1066     	.line	225, "main.c"; 	count5S = 0;
                                    1- 1067     	BANKSEL	_count5S
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 02rr                      1- 1068     	CLRR	_count5S
     0047 02rr                      1- 1069     	CLRR	(_count5S + 1)
                                    1- 1070     	.line	226, "main.c"; 	ledDeadTime = 25;
     0048 2119                      1- 1071     	MOVIA	0x19
                                    1- 1072     	BANKSEL	_ledDeadTime
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 1073     	MOVAR	_ledDeadTime
                                    1- 1074     	.line	227, "main.c"; 	powerOff();
                                    1- 1075     	MCALL	_powerOff
     004B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1076     	MGOTO	_00149_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
     004D                           1- 1077     _00148_DS_:
                                    1- 1078     	.line	232, "main.c"; 	count5S = 0;
                                    1- 1079     	BANKSEL	_count5S
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 02rr                      1- 1080     	CLRR	_count5S
     004F 02rr                      1- 1081     	CLRR	(_count5S + 1)
     0050                           1- 1082     _00149_DS_:
                                    1- 1083     	.line	234, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x20) == 0 && ledLightTime == 0 && ledDeadTime == 0 && shandengTime == 0)
                                    1- 1084     	BANKSEL	_workStep
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 01rr                      1- 1085     	MOVR	_workStep,W
     0052 0903                      1- 1086     	BTRSS	STATUS,2
                                    1- 1087     	MGOTO	_00154_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1088     	BANKSEL	_keyCount
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 01rr                      1- 1089     	MOVR	_keyCount,W
     0056 0903                      1- 1090     	BTRSS	STATUS,2
                                    1- 1091     	MGOTO	_00154_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1092     	BANKSEL	_PORTA
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 0Err                      1- 1093     	BTRSC	_PORTA,5
                                    1- 1094     	MGOTO	_00154_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1095     	BANKSEL	_ledLightTime
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 01rr                      1- 1096     	MOVR	_ledLightTime,W
     005D 0903                      1- 1097     	BTRSS	STATUS,2
                                    1- 1098     	MGOTO	_00154_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1099     	BANKSEL	_ledDeadTime
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 01rr                      1- 1100     	MOVR	_ledDeadTime,W
     0061 0903                      1- 1101     	BTRSS	STATUS,2
                                    1- 1102     	MGOTO	_00154_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1103     	BANKSEL	_shandengTime
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 01rr                      1- 1104     	MOVR	_shandengTime,W
     0065 11rr                      1- 1105     	IORAR	(_shandengTime + 1),W
     0066 0903                      1- 1106     	BTRSS	STATUS,2
                                    1- 1107     	MGOTO	_00154_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1108     	.line	236, "main.c"; 	if(++sleepTime > 30)
                                    1- 1109     	BANKSEL	_sleepTime
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 05rr                      1- 1110     	INCR	_sleepTime,F
     006A 0D03                      1- 1111     	BTRSC	STATUS,2
     006B 05rr                      1- 1112     	INCR	(_sleepTime + 1),F
                                    1- 1113     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1114     ;;unsigned compare: left >= lit (0x1F=31), size=2
     006C 2100                      1- 1115     	MOVIA	0x00
     006D 04rr                      1- 1116     	SUBAR	(_sleepTime + 1),W
     006E 0903                      1- 1117     	BTRSS	STATUS,2
                                    1- 1118     	MGOTO	_00230_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
     0070 211F                      1- 1119     	MOVIA	0x1f
     0071 04rr                      1- 1120     	SUBAR	_sleepTime,W
     0072                           1- 1121     _00230_DS_:
     0072 0803                      1- 1122     	BTRSS	STATUS,0
                                    1- 1123     	MGOTO	_00154_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1124     	.line	238, "main.c"; 	gotoSleep();
                                    1- 1125     	MCALL	_gotoSleep
     0074 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1126     ;;unsigned compare: left < lit (0x384=900), size=2
     0075                           1- 1127     _00154_DS_:
                                    1- 1128     	.line	242, "main.c"; 	if(count900s >= 900)
     0075 2103                      1- 1129     	MOVIA	0x03
                                    1- 1130     	BANKSEL	_count900s
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 04rr                      1- 1131     	SUBAR	(_count900s + 1),W
     0078 0903                      1- 1132     	BTRSS	STATUS,2
                                    1- 1133     	MGOTO	_00231_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
     007A 2184                      1- 1134     	MOVIA	0x84
     007B 04rr                      1- 1135     	SUBAR	_count900s,W
     007C                           1- 1136     _00231_DS_:
     007C 0803                      1- 1137     	BTRSS	STATUS,0
                                    1- 1138     	MGOTO	_00163_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1139     	.line	244, "main.c"; 	powerOff();
                                    1- 1140     	MCALL	_powerOff
     007E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1141     	MGOTO	_00163_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1142     	.line	248, "main.c"; 	}
                                    1- 1143     	RETURN	
     0080 0010                      3-   40 m1      ret
                                    1- 1144     ; exit point of _main
                                    1- 1146     ;***
                                    1- 1147     ;  pBlock Stats: dbName = C
                                    1- 1148     ;***
                                    1- 1149     ;has an exit
                                    1- 1150     ;; Starting pCode block
                                    1- 1151     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1153     _F_wait_eoc:
                                    1- 1154     ; 2 exit points
     0000                           1- 1155     _00846_DS_:
                                    1- 1156     	.line	1155, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1157     	BTRSS	_ADMDbits,5
                                    1- 1158     	MGOTO	_00846_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1159     	.line	1157, "main.c"; 	}
                                    1- 1160     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1161     ; exit point of _F_wait_eoc
                                    1- 1163     ;***
                                    1- 1164     ;  pBlock Stats: dbName = C
                                    1- 1165     ;***
                                    1- 1166     ;has an exit
                                    1- 1167     ;functions called:
                                    1- 1168     ;   _delay
                                    1- 1169     ;   _F_wait_eoc
                                    1- 1170     ;   _delay
                                    1- 1171     ;   _F_wait_eoc
                                    1- 1172     ;6 compiler assigned registers:
                                    1- 1173     ;   r0x1044
                                    1- 1174     ;   r0x1045
                                    1- 1175     ;   r0x1046
                                    1- 1176     ;   r0x1047
                                    1- 1177     ;   r0x1048
                                    1- 1178     ;   r0x1049
                                    1- 1179     ;; Starting pCode block
                                    1- 1180     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1182     ;local variable name mapping:
     0000                           1- 1185     _F_AIN2_Convert:
                                    1- 1186     ; 2 exit points
                                    1- 1187     	.line	1138, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1188     	BANKSEL	r0x1044
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1189     	MOVAR	r0x1044
                                    1- 1190     	.line	1140, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1191     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1192     	CLRR	_R_AIN2_DATA_LB
                                    1- 1193     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1194     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1195     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1196     	.line	1142, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1197     	MOVIA	0x92
     0008 00rr                      1- 1198     	MOVAR	_ADMD
                                    1- 1199     	.line	1143, "main.c"; 	delay(200);	
     0009 21C8                      1- 1200     	MOVIA	0xc8
                                    1- 1201     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1202     	.line	1144, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1203     	MOVIA	0x01
                                    1- 1204     	BANKSEL	r0x1045
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1205     	MOVAR	r0x1045
     000E                           1- 1206     _00839_DS_:
                                    1- 1207     	BANKSEL	r0x1045
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1208     	MOVR	r0x1045,W
                                    1- 1209     	BANKSEL	r0x1044
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1210     	SUBAR	r0x1044,W
     0012 0803                      1- 1211     	BTRSS	STATUS,0
                                    1- 1212     	MGOTO	_00841_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1213     	.line	1146, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1214     	BSR	_ADMDbits,6
                                    1- 1215     	.line	1147, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1216     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1217     	.line	1148, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1218     	MOVIA	0x0f
     0017 10rr                      1- 1219     	ANDAR	_ADR,W
                                    1- 1220     ;;3	MOVAR	r0x1046
                                    1- 1221     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1222     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1223     	.line	1149, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1- 1224     	MOVR	_ADD,W
                                    1- 1225     	BANKSEL	r0x1046
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1226     	MOVAR	r0x1046
                                    1- 1227     ;;1	CLRR	r0x1047
                                    1- 1228     ;;111	MOVR	r0x1046,W
                                    1- 1229     ;;109	MOVAR	r0x1048
     001D 2100                      1- 1230     	MOVIA	0x00
                                    1- 1231     	BANKSEL	r0x1049
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1232     	MOVAR	r0x1049
                                    1- 1233     ;;110	MOVR	r0x1048,W
                                    1- 1234     	BANKSEL	r0x1046
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1235     	MOVR	r0x1046,W
                                    1- 1236     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1237     	ADDAR	_R_AIN2_DATA,F
                                    1- 1238     	BANKSEL	r0x1049
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1239     	MOVR	r0x1049,W
     0026 0C03                      1- 1240     	BTRSC	STATUS,0
     0027 05rr                      1- 1241     	INCR	r0x1049,W
     0028 0D03                      1- 1242     	BTRSC	STATUS,2
                                    1- 1243     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1244     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1245     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1- 1246     _00001_DS_:
                                    1- 1247     	.line	1144, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1248     	BANKSEL	r0x1045
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1249     	INCR	r0x1045,F
                                    1- 1250     	MGOTO	_00839_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1251     _00841_DS_:
                                    1- 1252     	.line	1151, "main.c"; 	}
                                    1- 1253     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1254     ; exit point of _F_AIN2_Convert
                                    1- 1256     ;***
                                    1- 1257     ;  pBlock Stats: dbName = C
                                    1- 1258     ;***
                                    1- 1259     ;has an exit
                                    1- 1260     ;functions called:
                                    1- 1261     ;   _delay
                                    1- 1262     ;   _F_wait_eoc
                                    1- 1263     ;   _delay
                                    1- 1264     ;   _F_wait_eoc
                                    1- 1265     ;6 compiler assigned registers:
                                    1- 1266     ;   r0x104A
                                    1- 1267     ;   r0x104B
                                    1- 1268     ;   r0x104C
                                    1- 1269     ;   r0x104D
                                    1- 1270     ;   r0x104E
                                    1- 1271     ;   r0x104F
                                    1- 1272     ;; Starting pCode block
                                    1- 1273     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1- 1275     ;local variable name mapping:
     0000                           1- 1278     _F_AIN3_Convert:
                                    1- 1279     ; 2 exit points
                                    1- 1280     	.line	1123, "main.c"; 	void F_AIN3_Convert(char count)
                                    1- 1281     	BANKSEL	r0x104A
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1282     	MOVAR	r0x104A
                                    1- 1283     	.line	1125, "main.c"; 	R_AIN3_DATA=R_AIN3_DATA_LB=0x00;   
                                    1- 1284     	BANKSEL	_R_AIN3_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1285     	CLRR	_R_AIN3_DATA_LB
                                    1- 1286     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1287     	CLRR	_R_AIN3_DATA
     0006 02rr                      1- 1288     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1289     	.line	1127, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0007 2193                      1- 1290     	MOVIA	0x93
     0008 00rr                      1- 1291     	MOVAR	_ADMD
                                    1- 1292     	.line	1128, "main.c"; 	delay(200);	
     0009 21C8                      1- 1293     	MOVIA	0xc8
                                    1- 1294     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1295     	.line	1129, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1296     	MOVIA	0x01
                                    1- 1297     	BANKSEL	r0x104B
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1298     	MOVAR	r0x104B
     000E                           1- 1299     _00830_DS_:
                                    1- 1300     	BANKSEL	r0x104B
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1301     	MOVR	r0x104B,W
                                    1- 1302     	BANKSEL	r0x104A
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1303     	SUBAR	r0x104A,W
     0012 0803                      1- 1304     	BTRSS	STATUS,0
                                    1- 1305     	MGOTO	_00832_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1306     	.line	1131, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1307     	BSR	_ADMDbits,6
                                    1- 1308     	.line	1132, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1309     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1310     	.line	1133, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1311     	MOVIA	0x0f
     0017 10rr                      1- 1312     	ANDAR	_ADR,W
                                    1- 1313     ;;3	MOVAR	r0x104C
                                    1- 1314     	BANKSEL	_R_AIN3_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1315     	ADDAR	_R_AIN3_DATA_LB,F
                                    1- 1316     	.line	1134, "main.c"; 	R_AIN3_DATA    += ADD; 
     001A 01rr                      1- 1317     	MOVR	_ADD,W
                                    1- 1318     	BANKSEL	r0x104C
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1319     	MOVAR	r0x104C
                                    1- 1320     ;;1	CLRR	r0x104D
                                    1- 1321     ;;108	MOVR	r0x104C,W
                                    1- 1322     ;;106	MOVAR	r0x104E
     001D 2100                      1- 1323     	MOVIA	0x00
                                    1- 1324     	BANKSEL	r0x104F
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1325     	MOVAR	r0x104F
                                    1- 1326     ;;107	MOVR	r0x104E,W
                                    1- 1327     	BANKSEL	r0x104C
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1328     	MOVR	r0x104C,W
                                    1- 1329     	BANKSEL	_R_AIN3_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1330     	ADDAR	_R_AIN3_DATA,F
                                    1- 1331     	BANKSEL	r0x104F
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1332     	MOVR	r0x104F,W
     0026 0C03                      1- 1333     	BTRSC	STATUS,0
     0027 05rr                      1- 1334     	INCR	r0x104F,W
     0028 0D03                      1- 1335     	BTRSC	STATUS,2
                                    1- 1336     	MGOTO	_00002_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1337     	BANKSEL	_R_AIN3_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1338     	ADDAR	(_R_AIN3_DATA + 1),F
     002C                           1- 1339     _00002_DS_:
                                    1- 1340     	.line	1129, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1341     	BANKSEL	r0x104B
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1342     	INCR	r0x104B,F
                                    1- 1343     	MGOTO	_00830_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1344     _00832_DS_:
                                    1- 1345     	.line	1136, "main.c"; 	}
                                    1- 1346     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1347     ; exit point of _F_AIN3_Convert
                                    1- 1349     ;***
                                    1- 1350     ;  pBlock Stats: dbName = C
                                    1- 1351     ;***
                                    1- 1352     ;has an exit
                                    1- 1353     ;functions called:
                                    1- 1354     ;   _delay
                                    1- 1355     ;   _F_wait_eoc
                                    1- 1356     ;   _delay
                                    1- 1357     ;   _F_wait_eoc
                                    1- 1358     ;6 compiler assigned registers:
                                    1- 1359     ;   r0x1050
                                    1- 1360     ;   r0x1051
                                    1- 1361     ;   r0x1052
                                    1- 1362     ;   r0x1053
                                    1- 1363     ;   r0x1054
                                    1- 1364     ;   r0x1055
                                    1- 1365     ;; Starting pCode block
                                    1- 1366     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1368     ;local variable name mapping:
     0000                           1- 1371     _F_AIN4_Convert:
                                    1- 1372     ; 2 exit points
                                    1- 1373     	.line	1108, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1374     	BANKSEL	r0x1050
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1375     	MOVAR	r0x1050
                                    1- 1376     	.line	1110, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1377     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1378     	CLRR	_R_AIN4_DATA_LB
                                    1- 1379     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1380     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1381     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1382     	.line	1112, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1383     	MOVIA	0x94
     0008 00rr                      1- 1384     	MOVAR	_ADMD
                                    1- 1385     	.line	1113, "main.c"; 	delay(200);	
     0009 21C8                      1- 1386     	MOVIA	0xc8
                                    1- 1387     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1388     	.line	1114, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1389     	MOVIA	0x01
                                    1- 1390     	BANKSEL	r0x1051
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1391     	MOVAR	r0x1051
     000E                           1- 1392     _00821_DS_:
                                    1- 1393     	BANKSEL	r0x1051
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1394     	MOVR	r0x1051,W
                                    1- 1395     	BANKSEL	r0x1050
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1396     	SUBAR	r0x1050,W
     0012 0803                      1- 1397     	BTRSS	STATUS,0
                                    1- 1398     	MGOTO	_00823_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1399     	.line	1116, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1400     	BSR	_ADMDbits,6
                                    1- 1401     	.line	1117, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1402     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1403     	.line	1118, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1404     	MOVIA	0x0f
     0017 10rr                      1- 1405     	ANDAR	_ADR,W
                                    1- 1406     ;;3	MOVAR	r0x1052
                                    1- 1407     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1408     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1409     	.line	1119, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1410     	MOVR	_ADD,W
                                    1- 1411     	BANKSEL	r0x1052
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1412     	MOVAR	r0x1052
                                    1- 1413     ;;1	CLRR	r0x1053
                                    1- 1414     ;;105	MOVR	r0x1052,W
                                    1- 1415     ;;103	MOVAR	r0x1054
     001D 2100                      1- 1416     	MOVIA	0x00
                                    1- 1417     	BANKSEL	r0x1055
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1418     	MOVAR	r0x1055
                                    1- 1419     ;;104	MOVR	r0x1054,W
                                    1- 1420     	BANKSEL	r0x1052
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1421     	MOVR	r0x1052,W
                                    1- 1422     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1423     	ADDAR	_R_AIN4_DATA,F
                                    1- 1424     	BANKSEL	r0x1055
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1425     	MOVR	r0x1055,W
     0026 0C03                      1- 1426     	BTRSC	STATUS,0
     0027 05rr                      1- 1427     	INCR	r0x1055,W
     0028 0D03                      1- 1428     	BTRSC	STATUS,2
                                    1- 1429     	MGOTO	_00003_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1430     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1431     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1432     _00003_DS_:
                                    1- 1433     	.line	1114, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1434     	BANKSEL	r0x1051
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1435     	INCR	r0x1051,F
                                    1- 1436     	MGOTO	_00821_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1437     _00823_DS_:
                                    1- 1438     	.line	1121, "main.c"; 	}
                                    1- 1439     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1440     ; exit point of _F_AIN4_Convert
                                    1- 1442     ;***
                                    1- 1443     ;  pBlock Stats: dbName = C
                                    1- 1444     ;***
                                    1- 1445     ;has an exit
                                    1- 1446     ;functions called:
                                    1- 1447     ;   _F_AIN3_Convert
                                    1- 1448     ;   _F_AIN3_Convert
                                    1- 1449     ;4 compiler assigned registers:
                                    1- 1450     ;   r0x1056
                                    1- 1451     ;   r0x1057
                                    1- 1452     ;   r0x1058
                                    1- 1453     ;   r0x1059
                                    1- 1454     ;; Starting pCode block
                                    1- 1455     .segment "code"; module=main, function=_checkOutA
                                    1- 1457     ;local variable name mapping:
     0000                           1- 1460     _checkOutA:
                                    1- 1461     ; 2 exit points
                                    1- 1462     	.line	1006, "main.c"; 	R_AIN3_DATA = R_AIN3_DATA_LB = 0x00;
                                    1- 1463     	BANKSEL	_R_AIN3_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1464     	CLRR	_R_AIN3_DATA_LB
                                    1- 1465     	BANKSEL	_R_AIN3_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1466     	CLRR	_R_AIN3_DATA
     0004 02rr                      1- 1467     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1468     	.line	1007, "main.c"; 	F_AIN3_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1469     	MOVIA	0x08
                                    1- 1470     	MCALL	_F_AIN3_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1471     	.line	1008, "main.c"; 	R_AIN3_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1472     	BANKSEL	_R_AIN3_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1473     	SWAPR	(_R_AIN3_DATA + 1),W
     0009 22F0                      1- 1474     	ANDIA	0xf0
     000A 00rr                      1- 1475     	MOVAR	(_R_AIN3_DATA + 1)
     000B 15rr                      1- 1476     	SWAPR	_R_AIN3_DATA,W
     000C 00rr                      1- 1477     	MOVAR	_R_AIN3_DATA
     000D 220F                      1- 1478     	ANDIA	0x0f
     000E 11rr                      1- 1479     	IORAR	(_R_AIN3_DATA + 1),F
     000F 12rr                      1- 1480     	XORAR	_R_AIN3_DATA,F
                                    1- 1481     	.line	1009, "main.c"; 	R_AIN3_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1482     	MOVIA	0xf0
                                    1- 1483     	BANKSEL	_R_AIN3_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1484     	ANDAR	_R_AIN3_DATA_LB,F
                                    1- 1485     	.line	1010, "main.c"; 	R_AIN3_DATA += R_AIN3_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1486     	MOVR	_R_AIN3_DATA_LB,W
                                    1- 1487     	BANKSEL	r0x1056
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1488     	MOVAR	r0x1056
                                    1- 1489     	BANKSEL	r0x1057
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 02rr                      1- 1490     	CLRR	r0x1057
                                    1- 1491     ;;102	MOVR	r0x1056,W
                                    1- 1492     ;;100	MOVAR	r0x1058
     0018 2100                      1- 1493     	MOVIA	0x00
                                    1- 1494     	BANKSEL	r0x1059
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 00rr                      1- 1495     	MOVAR	r0x1059
                                    1- 1496     ;;101	MOVR	r0x1058,W
                                    1- 1497     	BANKSEL	r0x1056
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1- 1498     	MOVR	r0x1056,W
                                    1- 1499     	BANKSEL	_R_AIN3_DATA
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 03rr                      1- 1500     	ADDAR	_R_AIN3_DATA,F
                                    1- 1501     	BANKSEL	r0x1059
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 01rr                      1- 1502     	MOVR	r0x1059,W
     0021 0C03                      1- 1503     	BTRSC	STATUS,0
     0022 05rr                      1- 1504     	INCR	r0x1059,W
     0023 0D03                      1- 1505     	BTRSC	STATUS,2
                                    1- 1506     	MGOTO	_00004_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1507     	BANKSEL	_R_AIN3_DATA
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 03rr                      1- 1508     	ADDAR	(_R_AIN3_DATA + 1),F
                                    1- 1509     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0027                           1- 1510     _00004_DS_:
                                    1- 1511     	.line	1011, "main.c"; 	R_AIN3_DATA >>=3;					// R_AIN0_DATA divided 8
     0027 1C03                      1- 1512     	BCR	STATUS,0
                                    1- 1513     	BANKSEL	_R_AIN3_DATA
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 13rr                      1- 1514     	RRR	(_R_AIN3_DATA + 1),F
     002A 13rr                      1- 1515     	RRR	_R_AIN3_DATA,F
                                    1- 1516     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002B 1C03                      1- 1517     	BCR	STATUS,0
     002C 13rr                      1- 1518     	RRR	(_R_AIN3_DATA + 1),F
     002D 13rr                      1- 1519     	RRR	_R_AIN3_DATA,F
                                    1- 1520     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002E 1C03                      1- 1521     	BCR	STATUS,0
     002F 13rr                      1- 1522     	RRR	(_R_AIN3_DATA + 1),F
     0030 13rr                      1- 1523     	RRR	_R_AIN3_DATA,F
                                    1- 1524     	.line	1012, "main.c"; 	if(debug)
                                    1- 1525     	BANKSEL	_debug
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1- 1526     	MOVR	_debug,W
     0033 0D03                      1- 1527     	BTRSC	STATUS,2
                                    1- 1528     	MGOTO	_00707_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1529     	.line	1013, "main.c"; 	R_AIN3_DATA = OUTA;
     0035 212D                      1- 1530     	MOVIA	0x2d
                                    1- 1531     	BANKSEL	_R_AIN3_DATA
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 00rr                      1- 1532     	MOVAR	_R_AIN3_DATA
     0038 2101                      1- 1533     	MOVIA	0x01
     0039 00rr                      1- 1534     	MOVAR	(_R_AIN3_DATA + 1)
     003A                           1- 1535     _00707_DS_:
                                    1- 1536     	.line	1014, "main.c"; 	u16t tempData = 200;
     003A 21C8                      1- 1537     	MOVIA	0xc8
                                    1- 1538     	BANKSEL	r0x1056
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 00rr                      1- 1539     	MOVAR	r0x1056
                                    1- 1540     	BANKSEL	r0x1057
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 02rr                      1- 1541     	CLRR	r0x1057
                                    1- 1542     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1543     ;;unsigned compare: left >= lit (0x8=8), size=1
                                    1- 1544     	.line	1015, "main.c"; 	if(workStep > 7)
     003F 2108                      1- 1545     	MOVIA	0x08
                                    1- 1546     	BANKSEL	_workStep
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 04rr                      1- 1547     	SUBAR	_workStep,W
     0042 0803                      1- 1548     	BTRSS	STATUS,0
                                    1- 1549     	MGOTO	_00709_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1550     	.line	1017, "main.c"; 	tempData = 300;
     0044 212C                      1- 1551     	MOVIA	0x2c
                                    1- 1552     	BANKSEL	r0x1056
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 00rr                      1- 1553     	MOVAR	r0x1056
     0047 2101                      1- 1554     	MOVIA	0x01
                                    1- 1555     	BANKSEL	r0x1057
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1- 1556     	MOVAR	r0x1057
                                    1- 1557     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1558     ;;unsigned compare: left >= lit (0x5=5), size=1
     004A                           1- 1559     _00709_DS_:
                                    1- 1560     	.line	1020, "main.c"; 	if(pwStep > 4)
     004A 2105                      1- 1561     	MOVIA	0x05
                                    1- 1562     	BANKSEL	_pwStep
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 04rr                      1- 1563     	SUBAR	_pwStep,W
     004D 0803                      1- 1564     	BTRSS	STATUS,0
                                    1- 1565     	MGOTO	_00714_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1566     	.line	1022, "main.c"; 	maxOut = 60;
     004F 213C                      1- 1567     	MOVIA	0x3c
                                    1- 1568     	BANKSEL	_maxOut
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 00rr                      1- 1569     	MOVAR	_maxOut
                                    1- 1570     	MGOTO	_00715_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1571     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1572     ;;unsigned compare: left >= lit (0x3=3), size=1
     0053                           1- 1573     _00714_DS_:
                                    1- 1574     	.line	1024, "main.c"; 	else if(pwStep > 2)
     0053 2103                      1- 1575     	MOVIA	0x03
                                    1- 1576     	BANKSEL	_pwStep
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 04rr                      1- 1577     	SUBAR	_pwStep,W
     0056 0803                      1- 1578     	BTRSS	STATUS,0
                                    1- 1579     	MGOTO	_00711_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1580     	.line	1026, "main.c"; 	maxOut = 55;
     0058 2137                      1- 1581     	MOVIA	0x37
                                    1- 1582     	BANKSEL	_maxOut
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 00rr                      1- 1583     	MOVAR	_maxOut
                                    1- 1584     	MGOTO	_00715_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
     005C                           1- 1585     _00711_DS_:
                                    1- 1586     	.line	1030, "main.c"; 	maxOut = 50;
     005C 2132                      1- 1587     	MOVIA	0x32
                                    1- 1588     	BANKSEL	_maxOut
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 00rr                      1- 1589     	MOVAR	_maxOut
     005F                           1- 1590     _00715_DS_:
                                    1- 1591     	.line	1033, "main.c"; 	if(workStep == 1)
                                    1- 1592     	BANKSEL	_workStep
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 01rr                      1- 1593     	MOVR	_workStep,W
     0061 2401                      1- 1594     	XORIA	0x01
     0062 0903                      1- 1595     	BTRSS	STATUS,2
                                    1- 1596     	MGOTO	_00737_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1597     	.line	1035, "main.c"; 	tempDuty = 79;
     0064 214F                      1- 1598     	MOVIA	0x4f
                                    1- 1599     	BANKSEL	_tempDuty
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 00rr                      1- 1600     	MOVAR	_tempDuty
                                    1- 1601     	.line	1036, "main.c"; 	maxOut = maxOut - 25;
     0067 21E7                      1- 1602     	MOVIA	0xe7
                                    1- 1603     	BANKSEL	_maxOut
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 03rr                      1- 1604     	ADDAR	_maxOut,F
                                    1- 1605     	MGOTO	_00738_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
     006B                           1- 1606     _00737_DS_:
                                    1- 1607     	.line	1038, "main.c"; 	else if(workStep == 2)
                                    1- 1608     	BANKSEL	_workStep
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 01rr                      1- 1609     	MOVR	_workStep,W
     006D 2402                      1- 1610     	XORIA	0x02
     006E 0903                      1- 1611     	BTRSS	STATUS,2
                                    1- 1612     	MGOTO	_00734_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1613     	.line	1040, "main.c"; 	tempDuty = 82;
     0070 2152                      1- 1614     	MOVIA	0x52
                                    1- 1615     	BANKSEL	_tempDuty
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 00rr                      1- 1616     	MOVAR	_tempDuty
                                    1- 1617     	.line	1041, "main.c"; 	maxOut = maxOut - 20;
     0073 21EC                      1- 1618     	MOVIA	0xec
                                    1- 1619     	BANKSEL	_maxOut
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 03rr                      1- 1620     	ADDAR	_maxOut,F
                                    1- 1621     	MGOTO	_00738_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
     0077                           1- 1622     _00734_DS_:
                                    1- 1623     	.line	1043, "main.c"; 	else if(workStep == 3)
                                    1- 1624     	BANKSEL	_workStep
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 01rr                      1- 1625     	MOVR	_workStep,W
     0079 2403                      1- 1626     	XORIA	0x03
     007A 0903                      1- 1627     	BTRSS	STATUS,2
                                    1- 1628     	MGOTO	_00731_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1629     	.line	1045, "main.c"; 	tempDuty = 85;
     007C 2155                      1- 1630     	MOVIA	0x55
                                    1- 1631     	BANKSEL	_tempDuty
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 00rr                      1- 1632     	MOVAR	_tempDuty
                                    1- 1633     	.line	1046, "main.c"; 	maxOut = maxOut - 10;
     007F 21F6                      1- 1634     	MOVIA	0xf6
                                    1- 1635     	BANKSEL	_maxOut
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 03rr                      1- 1636     	ADDAR	_maxOut,F
                                    1- 1637     	MGOTO	_00738_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
     0083                           1- 1638     _00731_DS_:
                                    1- 1639     	.line	1048, "main.c"; 	else if(workStep == 4)
                                    1- 1640     	BANKSEL	_workStep
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 01rr                      1- 1641     	MOVR	_workStep,W
     0085 2404                      1- 1642     	XORIA	0x04
     0086 0903                      1- 1643     	BTRSS	STATUS,2
                                    1- 1644     	MGOTO	_00728_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1645     	.line	1050, "main.c"; 	tempDuty = 88;
     0088 2158                      1- 1646     	MOVIA	0x58
                                    1- 1647     	BANKSEL	_tempDuty
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 00rr                      1- 1648     	MOVAR	_tempDuty
                                    1- 1649     	.line	1051, "main.c"; 	maxOut = maxOut - 5;
     008B 21FB                      1- 1650     	MOVIA	0xfb
                                    1- 1651     	BANKSEL	_maxOut
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 03rr                      1- 1652     	ADDAR	_maxOut,F
                                    1- 1653     	MGOTO	_00738_DS_
     008E 3rrr                      3-   63 m1      LGOTO rom_address
     008F                           1- 1654     _00728_DS_:
                                    1- 1655     	.line	1053, "main.c"; 	else if(workStep == 5)
                                    1- 1656     	BANKSEL	_workStep
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 01rr                      1- 1657     	MOVR	_workStep,W
     0091 2405                      1- 1658     	XORIA	0x05
     0092 0903                      1- 1659     	BTRSS	STATUS,2
                                    1- 1660     	MGOTO	_00725_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1661     	.line	1055, "main.c"; 	tempDuty = 90;
     0094 215A                      1- 1662     	MOVIA	0x5a
                                    1- 1663     	BANKSEL	_tempDuty
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 00rr                      1- 1664     	MOVAR	_tempDuty
                                    1- 1665     	MGOTO	_00738_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
     0098                           1- 1666     _00725_DS_:
                                    1- 1667     	.line	1057, "main.c"; 	else if(workStep == 6)
                                    1- 1668     	BANKSEL	_workStep
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 01rr                      1- 1669     	MOVR	_workStep,W
     009A 2406                      1- 1670     	XORIA	0x06
     009B 0903                      1- 1671     	BTRSS	STATUS,2
                                    1- 1672     	MGOTO	_00722_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1673     	.line	1059, "main.c"; 	tempDuty = 93;
     009D 215D                      1- 1674     	MOVIA	0x5d
                                    1- 1675     	BANKSEL	_tempDuty
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 00rr                      1- 1676     	MOVAR	_tempDuty
                                    1- 1677     	.line	1060, "main.c"; 	maxOut = maxOut + 10;
     00A0 210A                      1- 1678     	MOVIA	0x0a
                                    1- 1679     	BANKSEL	_maxOut
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 03rr                      1- 1680     	ADDAR	_maxOut,F
                                    1- 1681     	MGOTO	_00738_DS_
     00A3 3rrr                      3-   63 m1      LGOTO rom_address
     00A4                           1- 1682     _00722_DS_:
                                    1- 1683     	.line	1062, "main.c"; 	else if(workStep == 7)
                                    1- 1684     	BANKSEL	_workStep
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 01rr                      1- 1685     	MOVR	_workStep,W
     00A6 2407                      1- 1686     	XORIA	0x07
     00A7 0903                      1- 1687     	BTRSS	STATUS,2
                                    1- 1688     	MGOTO	_00719_DS_
     00A8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1689     	.line	1064, "main.c"; 	tempDuty = 96;
     00A9 2160                      1- 1690     	MOVIA	0x60
                                    1- 1691     	BANKSEL	_tempDuty
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 00rr                      1- 1692     	MOVAR	_tempDuty
                                    1- 1693     	.line	1065, "main.c"; 	maxOut = maxOut + 18;
     00AC 2112                      1- 1694     	MOVIA	0x12
                                    1- 1695     	BANKSEL	_maxOut
     00AD rrrr                      3-  110 m1      .banksel ram_address
     00AE 03rr                      1- 1696     	ADDAR	_maxOut,F
                                    1- 1697     	MGOTO	_00738_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
     00B0                           1- 1698     _00719_DS_:
                                    1- 1699     	.line	1067, "main.c"; 	else if(workStep == 8)
                                    1- 1700     	BANKSEL	_workStep
     00B0 rrrr                      3-  110 m1      .banksel ram_address
     00B1 01rr                      1- 1701     	MOVR	_workStep,W
     00B2 2408                      1- 1702     	XORIA	0x08
     00B3 0903                      1- 1703     	BTRSS	STATUS,2
                                    1- 1704     	MGOTO	_00738_DS_
     00B4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1705     	.line	1069, "main.c"; 	tempDuty = 99;
     00B5 2163                      1- 1706     	MOVIA	0x63
                                    1- 1707     	BANKSEL	_tempDuty
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 00rr                      1- 1708     	MOVAR	_tempDuty
                                    1- 1709     	.line	1070, "main.c"; 	maxOut = maxOut + 22;
     00B8 2116                      1- 1710     	MOVIA	0x16
                                    1- 1711     	BANKSEL	_maxOut
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 03rr                      1- 1712     	ADDAR	_maxOut,F
     00BB                           1- 1713     _00738_DS_:
                                    1- 1714     	.line	1072, "main.c"; 	if(R_AIN3_DATA > tempData)
                                    1- 1715     	BANKSEL	_R_AIN3_DATA
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 01rr                      1- 1716     	MOVR	(_R_AIN3_DATA + 1),W
                                    1- 1717     	BANKSEL	r0x1057
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 04rr                      1- 1718     	SUBAR	r0x1057,W
     00BF 0903                      1- 1719     	BTRSS	STATUS,2
                                    1- 1720     	MGOTO	_00812_DS_
     00C0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1721     	BANKSEL	_R_AIN3_DATA
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 01rr                      1- 1722     	MOVR	_R_AIN3_DATA,W
                                    1- 1723     	BANKSEL	r0x1056
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 04rr                      1- 1724     	SUBAR	r0x1056,W
     00C5                           1- 1725     _00812_DS_:
     00C5 0C03                      1- 1726     	BTRSC	STATUS,0
                                    1- 1727     	MGOTO	_00749_DS_
     00C6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1728     	.line	1074, "main.c"; 	if(++overCount > 5)
                                    1- 1729     	BANKSEL	_overCount
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 05rr                      1- 1730     	INCR	_overCount,F
                                    1- 1731     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1732     ;;unsigned compare: left >= lit (0x6=6), size=1
     00C9 2106                      1- 1733     	MOVIA	0x06
     00CA 04rr                      1- 1734     	SUBAR	_overCount,W
     00CB 0803                      1- 1735     	BTRSS	STATUS,0
                                    1- 1736     	MGOTO	_00750_DS_
     00CC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1737     	.line	1076, "main.c"; 	overCount = 5;
     00CD 2105                      1- 1738     	MOVIA	0x05
     00CE 00rr                      1- 1739     	MOVAR	_overCount
                                    1- 1740     	MGOTO	_00750_DS_
     00CF 3rrr                      3-   63 m1      LGOTO rom_address
     00D0                           1- 1741     _00749_DS_:
                                    1- 1742     	.line	1079, "main.c"; 	else if(R_AIN3_DATA > maxOut)
                                    1- 1743     	BANKSEL	_maxOut
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 01rr                      1- 1744     	MOVR	_maxOut,W
                                    1- 1745     	BANKSEL	r0x1056
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 00rr                      1- 1746     	MOVAR	r0x1056
                                    1- 1747     	BANKSEL	r0x1057
     00D4 rrrr                      3-  110 m1      .banksel ram_address
     00D5 02rr                      1- 1748     	CLRR	r0x1057
                                    1- 1749     	BANKSEL	_R_AIN3_DATA
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 01rr                      1- 1750     	MOVR	(_R_AIN3_DATA + 1),W
                                    1- 1751     	BANKSEL	r0x1057
     00D8 rrrr                      3-  110 m1      .banksel ram_address
     00D9 04rr                      1- 1752     	SUBAR	r0x1057,W
     00DA 0903                      1- 1753     	BTRSS	STATUS,2
                                    1- 1754     	MGOTO	_00814_DS_
     00DB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1755     	BANKSEL	_R_AIN3_DATA
     00DC rrrr                      3-  110 m1      .banksel ram_address
     00DD 01rr                      1- 1756     	MOVR	_R_AIN3_DATA,W
                                    1- 1757     	BANKSEL	r0x1056
     00DE rrrr                      3-  110 m1      .banksel ram_address
     00DF 04rr                      1- 1758     	SUBAR	r0x1056,W
     00E0                           1- 1759     _00814_DS_:
     00E0 0C03                      1- 1760     	BTRSC	STATUS,0
                                    1- 1761     	MGOTO	_00746_DS_
     00E1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1762     	.line	1081, "main.c"; 	if(overCount > 0)
                                    1- 1763     	BANKSEL	_overCount
     00E2 rrrr                      3-  110 m1      .banksel ram_address
     00E3 01rr                      1- 1764     	MOVR	_overCount,W
     00E4 0903                      1- 1765     	BTRSS	STATUS,2
                                    1- 1766     	.line	1083, "main.c"; 	overCount--;
     00E5 06rr                      1- 1767     	DECR	_overCount,F
                                    1- 1768     	.line	1088, "main.c"; 	PWM2DUTY = tempDuty;
                                    1- 1769     	BANKSEL	_tempDuty
     00E6 rrrr                      3-  110 m1      .banksel ram_address
     00E7 01rr                      1- 1770     	MOVR	_tempDuty,W
     00E8 00rr                      1- 1771     	SFUN	_PWM2DUTY
                                    1- 1772     	MGOTO	_00750_DS_
     00E9 3rrr                      3-   63 m1      LGOTO rom_address
     00EA                           1- 1773     _00746_DS_:
                                    1- 1774     	.line	1092, "main.c"; 	if(overCount > 0)
                                    1- 1775     	BANKSEL	_overCount
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 01rr                      1- 1776     	MOVR	_overCount,W
     00EC 0903                      1- 1777     	BTRSS	STATUS,2
                                    1- 1778     	.line	1094, "main.c"; 	overCount--;
     00ED 06rr                      1- 1779     	DECR	_overCount,F
                                    1- 1780     	.line	1096, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 1781     	BANKSEL	_maxDuty
     00EE rrrr                      3-  110 m1      .banksel ram_address
     00EF 01rr                      1- 1782     	MOVR	_maxDuty,W
     00F0 00rr                      1- 1783     	SFUN	_PWM2DUTY
     00F1                           1- 1784     _00750_DS_:
                                    1- 1785     	.line	1100, "main.c"; 	if(workStep > 0)
                                    1- 1786     	BANKSEL	_workStep
     00F1 rrrr                      3-  110 m1      .banksel ram_address
     00F2 01rr                      1- 1787     	MOVR	_workStep,W
     00F3 0D03                      1- 1788     	BTRSC	STATUS,2
                                    1- 1789     	MGOTO	_00753_DS_
     00F4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1790     	.line	1101, "main.c"; 	tempLedStep = ledStep = workStep;
     00F5 01rr                      1- 1791     	MOVR	_workStep,W
                                    1- 1792     	BANKSEL	r0x1056
     00F6 rrrr                      3-  110 m1      .banksel ram_address
     00F7 00rr                      1- 1793     	MOVAR	r0x1056
                                    1- 1794     	BANKSEL	_ledStep
     00F8 rrrr                      3-  110 m1      .banksel ram_address
     00F9 00rr                      1- 1795     	MOVAR	_ledStep
                                    1- 1796     	BANKSEL	r0x1056
     00FA rrrr                      3-  110 m1      .banksel ram_address
     00FB 01rr                      1- 1797     	MOVR	r0x1056,W
                                    1- 1798     	BANKSEL	_tempLedStep
     00FC rrrr                      3-  110 m1      .banksel ram_address
     00FD 00rr                      1- 1799     	MOVAR	_tempLedStep
     00FE                           1- 1800     _00753_DS_:
                                    1- 1801     	.line	1102, "main.c"; 	}
                                    1- 1802     	RETURN	
     00FE 0010                      3-   40 m1      ret
                                    1- 1803     ; exit point of _checkOutA
                                    1- 1805     ;***
                                    1- 1806     ;  pBlock Stats: dbName = C
                                    1- 1807     ;***
                                    1- 1808     ;has an exit
                                    1- 1809     ;functions called:
                                    1- 1810     ;   _F_AIN4_Convert
                                    1- 1811     ;   _F_AIN4_Convert
                                    1- 1812     ;4 compiler assigned registers:
                                    1- 1813     ;   r0x105A
                                    1- 1814     ;   r0x105B
                                    1- 1815     ;   r0x105C
                                    1- 1816     ;   r0x105D
                                    1- 1817     ;; Starting pCode block
                                    1- 1818     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1820     _checkBatAD:
                                    1- 1821     ; 2 exit points
                                    1- 1822     	.line	846, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1823     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1824     	CLRR	_R_AIN4_DATA_LB
                                    1- 1825     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1826     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1827     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1828     	.line	847, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1829     	MOVIA	0x08
                                    1- 1830     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1831     	.line	848, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1832     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1833     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1834     	ANDIA	0xf0
     000A 00rr                      1- 1835     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1836     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1837     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1838     	ANDIA	0x0f
     000E 11rr                      1- 1839     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1840     	XORAR	_R_AIN4_DATA,F
                                    1- 1841     	.line	849, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1842     	MOVIA	0xf0
                                    1- 1843     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1844     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1845     	.line	850, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1846     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1847     	BANKSEL	r0x105C
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1848     	MOVAR	r0x105C
                                    1- 1849     ;;1	MOVAR	r0x105A
                                    1- 1850     ;;1	CLRR	r0x105B
                                    1- 1851     ;;99	MOVR	r0x105A,W
     0016 2100                      1- 1852     	MOVIA	0x00
                                    1- 1853     	BANKSEL	r0x105D
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1854     	MOVAR	r0x105D
                                    1- 1855     	BANKSEL	r0x105C
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1856     	MOVR	r0x105C,W
                                    1- 1857     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1858     	ADDAR	_R_AIN4_DATA,F
                                    1- 1859     	BANKSEL	r0x105D
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1860     	MOVR	r0x105D,W
     001F 0C03                      1- 1861     	BTRSC	STATUS,0
     0020 05rr                      1- 1862     	INCR	r0x105D,W
     0021 0D03                      1- 1863     	BTRSC	STATUS,2
                                    1- 1864     	MGOTO	_00005_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1865     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1866     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1867     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1868     _00005_DS_:
                                    1- 1869     	.line	851, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1870     	BCR	STATUS,0
                                    1- 1871     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1872     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1873     	RRR	_R_AIN4_DATA,F
                                    1- 1874     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1875     	BCR	STATUS,0
     002A 13rr                      1- 1876     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1877     	RRR	_R_AIN4_DATA,F
                                    1- 1878     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1879     	BCR	STATUS,0
     002D 13rr                      1- 1880     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1881     	RRR	_R_AIN4_DATA,F
                                    1- 1882     	.line	853, "main.c"; 	if(R_AIN4_DATA > preBatValue)
     002F 01rr                      1- 1883     	MOVR	(_R_AIN4_DATA + 1),W
                                    1- 1884     	BANKSEL	_preBatValue
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 04rr                      1- 1885     	SUBAR	(_preBatValue + 1),W
     0032 0903                      1- 1886     	BTRSS	STATUS,2
                                    1- 1887     	MGOTO	_00691_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1888     	BANKSEL	_R_AIN4_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 01rr                      1- 1889     	MOVR	_R_AIN4_DATA,W
                                    1- 1890     	BANKSEL	_preBatValue
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 04rr                      1- 1891     	SUBAR	_preBatValue,W
     0038                           1- 1892     _00691_DS_:
     0038 0C03                      1- 1893     	BTRSC	STATUS,0
                                    1- 1894     	MGOTO	_00620_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1895     	.line	854, "main.c"; 	preBatValue = R_AIN4_DATA;
                                    1- 1896     	BANKSEL	_R_AIN4_DATA
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1- 1897     	MOVR	_R_AIN4_DATA,W
                                    1- 1898     	BANKSEL	_preBatValue
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 00rr                      1- 1899     	MOVAR	_preBatValue
                                    1- 1900     	BANKSEL	_R_AIN4_DATA
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 01rr                      1- 1901     	MOVR	(_R_AIN4_DATA + 1),W
                                    1- 1902     	BANKSEL	_preBatValue
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 00rr                      1- 1903     	MOVAR	(_preBatValue + 1)
                                    1- 1904     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1905     ;;unsigned compare: left >= lit (0x614=1556), size=2
     0042                           1- 1906     _00620_DS_:
                                    1- 1907     	.line	855, "main.c"; 	if(R_AIN4_DATA > 1555)				//8.35
     0042 2106                      1- 1908     	MOVIA	0x06
                                    1- 1909     	BANKSEL	_R_AIN4_DATA
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 04rr                      1- 1910     	SUBAR	(_R_AIN4_DATA + 1),W
     0045 0903                      1- 1911     	BTRSS	STATUS,2
                                    1- 1912     	MGOTO	_00692_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
     0047 2114                      1- 1913     	MOVIA	0x14
     0048 04rr                      1- 1914     	SUBAR	_R_AIN4_DATA,W
     0049                           1- 1915     _00692_DS_:
     0049 0803                      1- 1916     	BTRSS	STATUS,0
                                    1- 1917     	MGOTO	_00625_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1918     	.line	857, "main.c"; 	if(++batFullTime > 2500)
                                    1- 1919     	BANKSEL	_batFullTime
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 05rr                      1- 1920     	INCR	_batFullTime,F
     004D 0D03                      1- 1921     	BTRSC	STATUS,2
     004E 05rr                      1- 1922     	INCR	(_batFullTime + 1),F
                                    1- 1923     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1924     ;;unsigned compare: left >= lit (0x9C5=2501), size=2
     004F 2109                      1- 1925     	MOVIA	0x09
     0050 04rr                      1- 1926     	SUBAR	(_batFullTime + 1),W
     0051 0903                      1- 1927     	BTRSS	STATUS,2
                                    1- 1928     	MGOTO	_00693_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
     0053 21C5                      1- 1929     	MOVIA	0xc5
     0054 04rr                      1- 1930     	SUBAR	_batFullTime,W
     0055                           1- 1931     _00693_DS_:
     0055 0803                      1- 1932     	BTRSS	STATUS,0
                                    1- 1933     	MGOTO	_00622_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1934     	.line	859, "main.c"; 	batFullTime = 2500;
     0057 21C4                      1- 1935     	MOVIA	0xc4
                                    1- 1936     	BANKSEL	_batFullTime
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 00rr                      1- 1937     	MOVAR	_batFullTime
     005A 2109                      1- 1938     	MOVIA	0x09
     005B 00rr                      1- 1939     	MOVAR	(_batFullTime + 1)
                                    1- 1940     	.line	860, "main.c"; 	pwStep = 9;
                                    1- 1941     	BANKSEL	_pwStep
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 00rr                      1- 1942     	MOVAR	_pwStep
                                    1- 1943     	.line	861, "main.c"; 	return;
                                    1- 1944     	MGOTO	_00653_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
     005F                           1- 1945     _00622_DS_:
                                    1- 1946     	.line	865, "main.c"; 	batValue = 99;
     005F 2163                      1- 1947     	MOVIA	0x63
                                    1- 1948     	BANKSEL	_batValue
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 00rr                      1- 1949     	MOVAR	_batValue
                                    1- 1950     	.line	866, "main.c"; 	pwStep = 8;
     0062 2108                      1- 1951     	MOVIA	0x08
                                    1- 1952     	BANKSEL	_pwStep
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 00rr                      1- 1953     	MOVAR	_pwStep
                                    1- 1954     	MGOTO	_00626_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
     0066                           1- 1955     _00625_DS_:
                                    1- 1956     	.line	872, "main.c"; 	batFullTime = 0;
                                    1- 1957     	BANKSEL	_batFullTime
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 02rr                      1- 1958     	CLRR	_batFullTime
     0068 02rr                      1- 1959     	CLRR	(_batFullTime + 1)
                                    1- 1960     ;;unsigned compare: left < lit (0x609=1545), size=2
     0069                           1- 1961     _00626_DS_:
                                    1- 1962     	.line	955, "main.c"; 	if(R_AIN4_DATA >= 1545)			//8.3
     0069 2106                      1- 1963     	MOVIA	0x06
                                    1- 1964     	BANKSEL	_R_AIN4_DATA
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 04rr                      1- 1965     	SUBAR	(_R_AIN4_DATA + 1),W
     006C 0903                      1- 1966     	BTRSS	STATUS,2
                                    1- 1967     	MGOTO	_00694_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
     006E 2109                      1- 1968     	MOVIA	0x09
     006F 04rr                      1- 1969     	SUBAR	_R_AIN4_DATA,W
     0070                           1- 1970     _00694_DS_:
     0070 0803                      1- 1971     	BTRSS	STATUS,0
                                    1- 1972     	MGOTO	_00649_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1973     	.line	957, "main.c"; 	pwStep = 8;
     0072 2108                      1- 1974     	MOVIA	0x08
                                    1- 1975     	BANKSEL	_pwStep
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 00rr                      1- 1976     	MOVAR	_pwStep
                                    1- 1977     	MGOTO	_00650_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1978     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1979     ;;unsigned compare: left >= lit (0x5FB=1531), size=2
     0076                           1- 1980     _00649_DS_:
                                    1- 1981     	.line	959, "main.c"; 	else if(R_AIN4_DATA > 1530)		//8.14
     0076 2105                      1- 1982     	MOVIA	0x05
                                    1- 1983     	BANKSEL	_R_AIN4_DATA
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 04rr                      1- 1984     	SUBAR	(_R_AIN4_DATA + 1),W
     0079 0903                      1- 1985     	BTRSS	STATUS,2
                                    1- 1986     	MGOTO	_00695_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
     007B 21FB                      1- 1987     	MOVIA	0xfb
     007C 04rr                      1- 1988     	SUBAR	_R_AIN4_DATA,W
     007D                           1- 1989     _00695_DS_:
     007D 0803                      1- 1990     	BTRSS	STATUS,0
                                    1- 1991     	MGOTO	_00646_DS_
     007E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1992     	.line	961, "main.c"; 	pwStep = 7;
     007F 2107                      1- 1993     	MOVIA	0x07
                                    1- 1994     	BANKSEL	_pwStep
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 00rr                      1- 1995     	MOVAR	_pwStep
                                    1- 1996     	.line	962, "main.c"; 	fullLock = 0;
                                    1- 1997     	BANKSEL	_fullLock
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 02rr                      1- 1998     	CLRR	_fullLock
                                    1- 1999     	MGOTO	_00650_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2000     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2001     ;;unsigned compare: left >= lit (0x5E2=1506), size=2
     0085                           1- 2002     _00646_DS_:
                                    1- 2003     	.line	964, "main.c"; 	else if(R_AIN4_DATA > 1505)		//8.0
     0085 2105                      1- 2004     	MOVIA	0x05
                                    1- 2005     	BANKSEL	_R_AIN4_DATA
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 04rr                      1- 2006     	SUBAR	(_R_AIN4_DATA + 1),W
     0088 0903                      1- 2007     	BTRSS	STATUS,2
                                    1- 2008     	MGOTO	_00696_DS_
     0089 3rrr                      3-   63 m1      LGOTO rom_address
     008A 21E2                      1- 2009     	MOVIA	0xe2
     008B 04rr                      1- 2010     	SUBAR	_R_AIN4_DATA,W
     008C                           1- 2011     _00696_DS_:
     008C 0803                      1- 2012     	BTRSS	STATUS,0
                                    1- 2013     	MGOTO	_00643_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2014     	.line	966, "main.c"; 	pwStep = 6;
     008E 2106                      1- 2015     	MOVIA	0x06
                                    1- 2016     	BANKSEL	_pwStep
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 00rr                      1- 2017     	MOVAR	_pwStep
                                    1- 2018     	.line	967, "main.c"; 	fullLock = 0;
                                    1- 2019     	BANKSEL	_fullLock
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 02rr                      1- 2020     	CLRR	_fullLock
                                    1- 2021     	MGOTO	_00650_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2022     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2023     ;;unsigned compare: left >= lit (0x5CE=1486), size=2
     0094                           1- 2024     _00643_DS_:
                                    1- 2025     	.line	969, "main.c"; 	else if(R_AIN4_DATA > 1485)		//8.0
     0094 2105                      1- 2026     	MOVIA	0x05
                                    1- 2027     	BANKSEL	_R_AIN4_DATA
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 04rr                      1- 2028     	SUBAR	(_R_AIN4_DATA + 1),W
     0097 0903                      1- 2029     	BTRSS	STATUS,2
                                    1- 2030     	MGOTO	_00697_DS_
     0098 3rrr                      3-   63 m1      LGOTO rom_address
     0099 21CE                      1- 2031     	MOVIA	0xce
     009A 04rr                      1- 2032     	SUBAR	_R_AIN4_DATA,W
     009B                           1- 2033     _00697_DS_:
     009B 0803                      1- 2034     	BTRSS	STATUS,0
                                    1- 2035     	MGOTO	_00640_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2036     	.line	971, "main.c"; 	pwStep = 5;
     009D 2105                      1- 2037     	MOVIA	0x05
                                    1- 2038     	BANKSEL	_pwStep
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 00rr                      1- 2039     	MOVAR	_pwStep
                                    1- 2040     	.line	972, "main.c"; 	fullLock = 0;
                                    1- 2041     	BANKSEL	_fullLock
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 02rr                      1- 2042     	CLRR	_fullLock
                                    1- 2043     	MGOTO	_00650_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2044     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2045     ;;unsigned compare: left >= lit (0x5B0=1456), size=2
     00A3                           1- 2046     _00640_DS_:
                                    1- 2047     	.line	974, "main.c"; 	else if(R_AIN4_DATA > 1455)		//7.89
     00A3 2105                      1- 2048     	MOVIA	0x05
                                    1- 2049     	BANKSEL	_R_AIN4_DATA
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 04rr                      1- 2050     	SUBAR	(_R_AIN4_DATA + 1),W
     00A6 0903                      1- 2051     	BTRSS	STATUS,2
                                    1- 2052     	MGOTO	_00698_DS_
     00A7 3rrr                      3-   63 m1      LGOTO rom_address
     00A8 21B0                      1- 2053     	MOVIA	0xb0
     00A9 04rr                      1- 2054     	SUBAR	_R_AIN4_DATA,W
     00AA                           1- 2055     _00698_DS_:
     00AA 0803                      1- 2056     	BTRSS	STATUS,0
                                    1- 2057     	MGOTO	_00637_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2058     	.line	976, "main.c"; 	pwStep = 4;
     00AC 2104                      1- 2059     	MOVIA	0x04
                                    1- 2060     	BANKSEL	_pwStep
     00AD rrrr                      3-  110 m1      .banksel ram_address
     00AE 00rr                      1- 2061     	MOVAR	_pwStep
                                    1- 2062     	.line	977, "main.c"; 	fullLock = 0;
                                    1- 2063     	BANKSEL	_fullLock
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 02rr                      1- 2064     	CLRR	_fullLock
                                    1- 2065     	MGOTO	_00650_DS_
     00B1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2066     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2067     ;;unsigned compare: left >= lit (0x583=1411), size=2
     00B2                           1- 2068     _00637_DS_:
                                    1- 2069     	.line	979, "main.c"; 	else if(R_AIN4_DATA > 1410)		//7.73
     00B2 2105                      1- 2070     	MOVIA	0x05
                                    1- 2071     	BANKSEL	_R_AIN4_DATA
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 04rr                      1- 2072     	SUBAR	(_R_AIN4_DATA + 1),W
     00B5 0903                      1- 2073     	BTRSS	STATUS,2
                                    1- 2074     	MGOTO	_00699_DS_
     00B6 3rrr                      3-   63 m1      LGOTO rom_address
     00B7 2183                      1- 2075     	MOVIA	0x83
     00B8 04rr                      1- 2076     	SUBAR	_R_AIN4_DATA,W
     00B9                           1- 2077     _00699_DS_:
     00B9 0803                      1- 2078     	BTRSS	STATUS,0
                                    1- 2079     	MGOTO	_00634_DS_
     00BA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2080     	.line	981, "main.c"; 	pwStep = 3;
     00BB 2103                      1- 2081     	MOVIA	0x03
                                    1- 2082     	BANKSEL	_pwStep
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 00rr                      1- 2083     	MOVAR	_pwStep
                                    1- 2084     	.line	982, "main.c"; 	fullLock = 0;
                                    1- 2085     	BANKSEL	_fullLock
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 02rr                      1- 2086     	CLRR	_fullLock
                                    1- 2087     	MGOTO	_00650_DS_
     00C0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2088     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2089     ;;unsigned compare: left >= lit (0x551=1361), size=2
     00C1                           1- 2090     _00634_DS_:
                                    1- 2091     	.line	984, "main.c"; 	else if(R_AIN4_DATA > 1360)		//7.41
     00C1 2105                      1- 2092     	MOVIA	0x05
                                    1- 2093     	BANKSEL	_R_AIN4_DATA
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 04rr                      1- 2094     	SUBAR	(_R_AIN4_DATA + 1),W
     00C4 0903                      1- 2095     	BTRSS	STATUS,2
                                    1- 2096     	MGOTO	_00700_DS_
     00C5 3rrr                      3-   63 m1      LGOTO rom_address
     00C6 2151                      1- 2097     	MOVIA	0x51
     00C7 04rr                      1- 2098     	SUBAR	_R_AIN4_DATA,W
     00C8                           1- 2099     _00700_DS_:
     00C8 0803                      1- 2100     	BTRSS	STATUS,0
                                    1- 2101     	MGOTO	_00631_DS_
     00C9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2102     	.line	986, "main.c"; 	pwStep = 2;
     00CA 2102                      1- 2103     	MOVIA	0x02
                                    1- 2104     	BANKSEL	_pwStep
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 00rr                      1- 2105     	MOVAR	_pwStep
                                    1- 2106     	.line	987, "main.c"; 	fullLock = 0;
                                    1- 2107     	BANKSEL	_fullLock
     00CD rrrr                      3-  110 m1      .banksel ram_address
     00CE 02rr                      1- 2108     	CLRR	_fullLock
                                    1- 2109     	MGOTO	_00650_DS_
     00CF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2110     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2111     ;;unsigned compare: left >= lit (0x4F9=1273), size=2
     00D0                           1- 2112     _00631_DS_:
                                    1- 2113     	.line	989, "main.c"; 	else if(R_AIN4_DATA > 1272)  //6.83
     00D0 2104                      1- 2114     	MOVIA	0x04
                                    1- 2115     	BANKSEL	_R_AIN4_DATA
     00D1 rrrr                      3-  110 m1      .banksel ram_address
     00D2 04rr                      1- 2116     	SUBAR	(_R_AIN4_DATA + 1),W
     00D3 0903                      1- 2117     	BTRSS	STATUS,2
                                    1- 2118     	MGOTO	_00701_DS_
     00D4 3rrr                      3-   63 m1      LGOTO rom_address
     00D5 21F9                      1- 2119     	MOVIA	0xf9
     00D6 04rr                      1- 2120     	SUBAR	_R_AIN4_DATA,W
     00D7                           1- 2121     _00701_DS_:
     00D7 0803                      1- 2122     	BTRSS	STATUS,0
                                    1- 2123     	MGOTO	_00628_DS_
     00D8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2124     	.line	990, "main.c"; 	pwStep = 1;
     00D9 2101                      1- 2125     	MOVIA	0x01
                                    1- 2126     	BANKSEL	_pwStep
     00DA rrrr                      3-  110 m1      .banksel ram_address
     00DB 00rr                      1- 2127     	MOVAR	_pwStep
                                    1- 2128     	MGOTO	_00650_DS_
     00DC 3rrr                      3-   63 m1      LGOTO rom_address
     00DD                           1- 2129     _00628_DS_:
                                    1- 2130     	.line	992, "main.c"; 	pwStep = 0;
                                    1- 2131     	BANKSEL	_pwStep
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 02rr                      1- 2132     	CLRR	_pwStep
     00DF                           1- 2133     _00650_DS_:
                                    1- 2134     	.line	994, "main.c"; 	if(workStep > 0)
                                    1- 2135     	BANKSEL	_workStep
     00DF rrrr                      3-  110 m1      .banksel ram_address
     00E0 01rr                      1- 2136     	MOVR	_workStep,W
     00E1 0D03                      1- 2137     	BTRSC	STATUS,2
                                    1- 2138     	MGOTO	_00653_DS_
     00E2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2139     	.line	995, "main.c"; 	ledStep = workStep;
     00E3 01rr                      1- 2140     	MOVR	_workStep,W
                                    1- 2141     	BANKSEL	_ledStep
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 00rr                      1- 2142     	MOVAR	_ledStep
     00E6                           1- 2143     _00653_DS_:
                                    1- 2144     	.line	997, "main.c"; 	}
                                    1- 2145     	RETURN	
     00E6 0010                      3-   40 m1      ret
                                    1- 2146     ; exit point of _checkBatAD
                                    1- 2148     ;***
                                    1- 2149     ;  pBlock Stats: dbName = C
                                    1- 2150     ;***
                                    1- 2151     ;has an exit
                                    1- 2152     ;functions called:
                                    1- 2153     ;   _delay
                                    1- 2154     ;   _delay
                                    1- 2155     ;; Starting pCode block
                                    1- 2156     .segment "code"; module=main, function=_initAD
     0000                           1- 2158     _initAD:
                                    1- 2159     ; 2 exit points
                                    1- 2160     	.line	821, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 2161     	MOVIA	0x84
     0001 00rr                      1- 2162     	MOVAR	_ADMD
                                    1- 2163     	.line	826, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 2164     	CLRR	_ADVREFH
                                    1- 2165     	.line	831, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 2166     	MOVIA	0x10
     0004 00rr                      1- 2167     	MOVAR	_ADR
                                    1- 2168     	.line	833, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 2169     	MOVIA	0x03
     0006 00rr                      1- 2170     	MOVAR	_ADCR
                                    1- 2171     	.line	836, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 2172     	BSR	_ADMDbits,4
                                    1- 2173     	.line	837, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 2174     	MOVIA	0x64
                                    1- 2175     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2176     	.line	840, "main.c"; 	}
                                    1- 2177     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 2178     ; exit point of _initAD
                                    1- 2180     ;***
                                    1- 2181     ;  pBlock Stats: dbName = C
                                    1- 2182     ;***
                                    1- 2183     ;has an exit
                                    1- 2184     ;2 compiler assigned registers:
                                    1- 2185     ;   r0x1042
                                    1- 2186     ;   r0x1043
                                    1- 2187     ;; Starting pCode block
                                    1- 2188     .segment "code"; module=main, function=_delay
                                    1- 2190     ;local variable name mapping:
     0000                           1- 2193     _delay:
                                    1- 2194     ; 2 exit points
                                    1- 2195     	.line	811, "main.c"; 	void delay(u8t time)
                                    1- 2196     	BANKSEL	r0x1042
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2197     	MOVAR	r0x1042
                                    1- 2198     	.line	813, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2199     	BANKSEL	r0x1043
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2200     	CLRR	r0x1043
     0004                           1- 2201     _00608_DS_:
                                    1- 2202     	BANKSEL	r0x1042
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 2203     	MOVR	r0x1042,W
                                    1- 2204     	BANKSEL	r0x1043
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1- 2205     	SUBAR	r0x1043,W
     0008 0C03                      1- 2206     	BTRSC	STATUS,0
                                    1- 2207     	MGOTO	_00610_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2208     	.line	814, "main.c"; 	NOP();
     000A 0000                      1- 2209     	nop
                                    1- 2210     	.line	813, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2211     	BANKSEL	r0x1043
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 2212     	INCR	r0x1043,F
                                    1- 2213     	MGOTO	_00608_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 2214     _00610_DS_:
                                    1- 2215     	.line	815, "main.c"; 	}
                                    1- 2216     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2217     ; exit point of _delay
                                    1- 2219     ;***
                                    1- 2220     ;  pBlock Stats: dbName = C
                                    1- 2221     ;***
                                    1- 2222     ;has an exit
                                    1- 2223     ;functions called:
                                    1- 2224     ;   _checkBatAD
                                    1- 2225     ;   _pwmStop
                                    1- 2226     ;   _pwm1Stop
                                    1- 2227     ;   _pwm1Init
                                    1- 2228     ;   _pwm1Stop
                                    1- 2229     ;   _powerOff
                                    1- 2230     ;   _checkBatAD
                                    1- 2231     ;   _pwmStop
                                    1- 2232     ;   _pwm1Stop
                                    1- 2233     ;   _pwm1Init
                                    1- 2234     ;   _pwm1Stop
                                    1- 2235     ;   _powerOff
                                    1- 2236     ;2 compiler assigned registers:
                                    1- 2237     ;   r0x105F
                                    1- 2238     ;   r0x1060
                                    1- 2239     ;; Starting pCode block
                                    1- 2240     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2242     _chrgCtr:
                                    1- 2243     ; 2 exit points
                                    1- 2244     	.line	637, "main.c"; 	if(PORTA & 0x20)
                                    1- 2245     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Arr                      1- 2246     	BTRSS	_PORTA,5
                                    1- 2247     	MGOTO	_00507_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2248     	.line	640, "main.c"; 	lockStart = 0;
                                    1- 2249     	BANKSEL	_lockStart
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 2250     	CLRR	_lockStart
                                    1- 2251     	.line	641, "main.c"; 	if(chrgFlag == 0)
                                    1- 2252     	BANKSEL	_chrgFlag
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 01rr                      1- 2253     	MOVR	_chrgFlag,W
     0007 0903                      1- 2254     	BTRSS	STATUS,2
                                    1- 2255     	MGOTO	_00451_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2256     	.line	643, "main.c"; 	batFullTime = 0;
                                    1- 2257     	BANKSEL	_batFullTime
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 02rr                      1- 2258     	CLRR	_batFullTime
     000B 02rr                      1- 2259     	CLRR	(_batFullTime + 1)
                                    1- 2260     	.line	644, "main.c"; 	preBatValue = 0;
                                    1- 2261     	BANKSEL	_preBatValue
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 02rr                      1- 2262     	CLRR	_preBatValue
     000E 02rr                      1- 2263     	CLRR	(_preBatValue + 1)
                                    1- 2264     	.line	645, "main.c"; 	pwStep = 0;
                                    1- 2265     	BANKSEL	_pwStep
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2266     	CLRR	_pwStep
                                    1- 2267     	.line	646, "main.c"; 	checkBatAD();
                                    1- 2268     	MCALL	_checkBatAD
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2269     	.line	647, "main.c"; 	ledLock = 0;
                                    1- 2270     	BANKSEL	_ledLock
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 02rr                      1- 2271     	CLRR	_ledLock
                                    1- 2272     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2273     ;;unsigned compare: left >= lit (0x60A=1546), size=2
                                    1- 2274     	.line	648, "main.c"; 	if(R_AIN4_DATA > 1545)
     0014 2106                      1- 2275     	MOVIA	0x06
                                    1- 2276     	BANKSEL	_R_AIN4_DATA
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 04rr                      1- 2277     	SUBAR	(_R_AIN4_DATA + 1),W
     0017 0903                      1- 2278     	BTRSS	STATUS,2
                                    1- 2279     	MGOTO	_00586_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
     0019 210A                      1- 2280     	MOVIA	0x0a
     001A 04rr                      1- 2281     	SUBAR	_R_AIN4_DATA,W
     001B                           1- 2282     _00586_DS_:
     001B 0803                      1- 2283     	BTRSS	STATUS,0
                                    1- 2284     	MGOTO	_00448_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2285     	.line	651, "main.c"; 	fullLock = 1;
     001D 2101                      1- 2286     	MOVIA	0x01
                                    1- 2287     	BANKSEL	_fullLock
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 2288     	MOVAR	_fullLock
                                    1- 2289     	MGOTO	_00449_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
     0021                           1- 2290     _00448_DS_:
                                    1- 2291     	.line	655, "main.c"; 	fullLock = 0;
                                    1- 2292     	BANKSEL	_fullLock
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 02rr                      1- 2293     	CLRR	_fullLock
     0023                           1- 2294     _00449_DS_:
                                    1- 2295     	.line	657, "main.c"; 	chrgFlag = 1;
     0023 2101                      1- 2296     	MOVIA	0x01
                                    1- 2297     	BANKSEL	_chrgFlag
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 00rr                      1- 2298     	MOVAR	_chrgFlag
     0026                           1- 2299     _00451_DS_:
                                    1- 2300     	.line	660, "main.c"; 	workStep = 0;
                                    1- 2301     	BANKSEL	_workStep
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 02rr                      1- 2302     	CLRR	_workStep
                                    1- 2303     	.line	661, "main.c"; 	ledLightTime = 0;
                                    1- 2304     	BANKSEL	_ledLightTime
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 02rr                      1- 2305     	CLRR	_ledLightTime
                                    1- 2306     	.line	662, "main.c"; 	pwmStop();
                                    1- 2307     	MCALL	_pwmStop
     002A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2308     	.line	663, "main.c"; 	if(fullLock || pwStep == 9)
                                    1- 2309     	BANKSEL	_fullLock
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1- 2310     	MOVR	_fullLock,W
     002D 0903                      1- 2311     	BTRSS	STATUS,2
                                    1- 2312     	MGOTO	_00488_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2313     	BANKSEL	_pwStep
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 2314     	MOVR	_pwStep,W
     0031 2409                      1- 2315     	XORIA	0x09
     0032 0903                      1- 2316     	BTRSS	STATUS,2
                                    1- 2317     	MGOTO	_00489_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
     0034                           1- 2318     _00488_DS_:
                                    1- 2319     	.line	666, "main.c"; 	ledStep = 8;
     0034 2108                      1- 2320     	MOVIA	0x08
                                    1- 2321     	BANKSEL	_ledStep
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 00rr                      1- 2322     	MOVAR	_ledStep
                                    1- 2323     	.line	667, "main.c"; 	PORTA |= 0x01;		//打开充满提示灯
                                    1- 2324     	BANKSEL	_PORTA
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 18rr                      1- 2325     	BSR	_PORTA,0
                                    1- 2326     	.line	668, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
     0039 1Crr                      1- 2327     	BCR	_PORTA,1
                                    1- 2328     	.line	669, "main.c"; 	pwm1Stop();
                                    1- 2329     	MCALL	_pwm1Stop
     003A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2330     	.line	670, "main.c"; 	fullLock = 1;
     003B 2101                      1- 2331     	MOVIA	0x01
                                    1- 2332     	BANKSEL	_fullLock
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 00rr                      1- 2333     	MOVAR	_fullLock
                                    1- 2334     	MGOTO	_00509_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
     003F                           1- 2335     _00489_DS_:
                                    1- 2336     	.line	675, "main.c"; 	fullLockCount = 0;
                                    1- 2337     	BANKSEL	_fullLockCount
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 02rr                      1- 2338     	CLRR	_fullLockCount
                                    1- 2339     	.line	677, "main.c"; 	if(ledLock < pwStep)
                                    1- 2340     	BANKSEL	_pwStep
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 01rr                      1- 2341     	MOVR	_pwStep,W
                                    1- 2342     	BANKSEL	_ledLock
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 04rr                      1- 2343     	SUBAR	_ledLock,W
     0045 0C03                      1- 2344     	BTRSC	STATUS,0
                                    1- 2345     	MGOTO	_00458_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2346     	.line	679, "main.c"; 	if(++countLedLock > 10000)
                                    1- 2347     	BANKSEL	_countLedLock
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 05rr                      1- 2348     	INCR	_countLedLock,F
     0049 0D03                      1- 2349     	BTRSC	STATUS,2
     004A 05rr                      1- 2350     	INCR	(_countLedLock + 1),F
                                    1- 2351     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2352     ;;unsigned compare: left >= lit (0x2711=10001), size=2
     004B 2127                      1- 2353     	MOVIA	0x27
     004C 04rr                      1- 2354     	SUBAR	(_countLedLock + 1),W
     004D 0903                      1- 2355     	BTRSS	STATUS,2
                                    1- 2356     	MGOTO	_00588_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
     004F 2111                      1- 2357     	MOVIA	0x11
     0050 04rr                      1- 2358     	SUBAR	_countLedLock,W
     0051                           1- 2359     _00588_DS_:
     0051 0803                      1- 2360     	BTRSS	STATUS,0
                                    1- 2361     	MGOTO	_00459_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2362     	.line	681, "main.c"; 	countLedLock = 0;
                                    1- 2363     	BANKSEL	_countLedLock
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 02rr                      1- 2364     	CLRR	_countLedLock
     0055 02rr                      1- 2365     	CLRR	(_countLedLock + 1)
                                    1- 2366     ;;unsigned compare: left < lit (0x8=8), size=1
                                    1- 2367     	.line	682, "main.c"; 	if(pwStep < 8)
     0056 2108                      1- 2368     	MOVIA	0x08
                                    1- 2369     	BANKSEL	_pwStep
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 04rr                      1- 2370     	SUBAR	_pwStep,W
     0059 0C03                      1- 2371     	BTRSC	STATUS,0
                                    1- 2372     	MGOTO	_00453_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2373     	.line	684, "main.c"; 	ledLock = pwStep;
     005B 01rr                      1- 2374     	MOVR	_pwStep,W
                                    1- 2375     	BANKSEL	_ledLock
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 00rr                      1- 2376     	MOVAR	_ledLock
                                    1- 2377     	MGOTO	_00459_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
     005F                           1- 2378     _00453_DS_:
                                    1- 2379     	.line	688, "main.c"; 	ledLock = 7;
     005F 2107                      1- 2380     	MOVIA	0x07
                                    1- 2381     	BANKSEL	_ledLock
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 00rr                      1- 2382     	MOVAR	_ledLock
                                    1- 2383     	MGOTO	_00459_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
     0063                           1- 2384     _00458_DS_:
                                    1- 2385     	.line	694, "main.c"; 	countLedLock = 0;
                                    1- 2386     	BANKSEL	_countLedLock
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 02rr                      1- 2387     	CLRR	_countLedLock
     0065 02rr                      1- 2388     	CLRR	(_countLedLock + 1)
     0066                           1- 2389     _00459_DS_:
                                    1- 2390     	.line	696, "main.c"; 	if(ledLock == 0)
                                    1- 2391     	BANKSEL	_ledLock
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 01rr                      1- 2392     	MOVR	_ledLock,W
     0068 0903                      1- 2393     	BTRSS	STATUS,2
                                    1- 2394     	MGOTO	_00464_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2395     	.line	698, "main.c"; 	ledStep = pwStep;
                                    1- 2396     	BANKSEL	_pwStep
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 01rr                      1- 2397     	MOVR	_pwStep,W
                                    1- 2398     	BANKSEL	_ledStep
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 00rr                      1- 2399     	MOVAR	_ledStep
                                    1- 2400     ;;unsigned compare: left < lit (0x6=6), size=1
                                    1- 2401     	.line	699, "main.c"; 	if(pwStep < 6)
     006E 2106                      1- 2402     	MOVIA	0x06
                                    1- 2403     	BANKSEL	_pwStep
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 04rr                      1- 2404     	SUBAR	_pwStep,W
     0071 0C03                      1- 2405     	BTRSC	STATUS,0
                                    1- 2406     	MGOTO	_00461_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2407     	.line	701, "main.c"; 	ledLock = ledStep + 1;
                                    1- 2408     	BANKSEL	_ledStep
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 05rr                      1- 2409     	INCR	_ledStep,W
                                    1- 2410     	BANKSEL	_ledLock
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 00rr                      1- 2411     	MOVAR	_ledLock
                                    1- 2412     	MGOTO	_00465_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
     0078                           1- 2413     _00461_DS_:
                                    1- 2414     	.line	705, "main.c"; 	ledLock = 7;
     0078 2107                      1- 2415     	MOVIA	0x07
                                    1- 2416     	BANKSEL	_ledLock
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 00rr                      1- 2417     	MOVAR	_ledLock
                                    1- 2418     	MGOTO	_00465_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
     007C                           1- 2419     _00464_DS_:
                                    1- 2420     	.line	709, "main.c"; 	ledStep = ledLock;
                                    1- 2421     	BANKSEL	_ledLock
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 01rr                      1- 2422     	MOVR	_ledLock,W
                                    1- 2423     	BANKSEL	_ledStep
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 00rr                      1- 2424     	MOVAR	_ledStep
     0080                           1- 2425     _00465_DS_:
                                    1- 2426     	.line	710, "main.c"; 	PORTA &= 0xFE;		//关闭充满提示灯
                                    1- 2427     	BANKSEL	_PORTA
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 1Crr                      1- 2428     	BCR	_PORTA,0
                                    1- 2429     ;;unsigned compare: left < lit (0x24=36), size=1
                                    1- 2430     	.line	712, "main.c"; 	if(count500ms < 36)
     0082 2124                      1- 2431     	MOVIA	0x24
                                    1- 2432     	BANKSEL	_count500ms
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 04rr                      1- 2433     	SUBAR	_count500ms,W
     0085 0C03                      1- 2434     	BTRSC	STATUS,0
                                    1- 2435     	MGOTO	_00467_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2436     	.line	714, "main.c"; 	PORTA |= 0x02;		//打开充电灯
                                    1- 2437     	BANKSEL	_PORTA
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 18rr                      1- 2438     	BSR	_PORTA,1
                                    1- 2439     	MGOTO	_00468_DS_
     0089 3rrr                      3-   63 m1      LGOTO rom_address
     008A                           1- 2440     _00467_DS_:
                                    1- 2441     	.line	718, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
                                    1- 2442     	BANKSEL	_PORTA
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 1Crr                      1- 2443     	BCR	_PORTA,1
                                    1- 2444     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2445     ;;unsigned compare: left >= lit (0x6=6), size=1
     008C                           1- 2446     _00468_DS_:
                                    1- 2447     	.line	722, "main.c"; 	if(count200ms > 5)
     008C 2106                      1- 2448     	MOVIA	0x06
                                    1- 2449     	BANKSEL	_count200ms
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 04rr                      1- 2450     	SUBAR	_count200ms,W
     008F 0803                      1- 2451     	BTRSS	STATUS,0
                                    1- 2452     	MGOTO	_00509_DS_
     0090 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2453     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2454     ;;unsigned compare: left >= lit (0x1A=26), size=2
                                    1- 2455     	.line	724, "main.c"; 	if(R_AIN3_DATA <= 25 && R_AIN3_DATA >=subMin)
     0091 2100                      1- 2456     	MOVIA	0x00
                                    1- 2457     	BANKSEL	_R_AIN3_DATA
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 04rr                      1- 2458     	SUBAR	(_R_AIN3_DATA + 1),W
     0094 0903                      1- 2459     	BTRSS	STATUS,2
                                    1- 2460     	MGOTO	_00593_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
     0096 211A                      1- 2461     	MOVIA	0x1a
     0097 04rr                      1- 2462     	SUBAR	_R_AIN3_DATA,W
     0098                           1- 2463     _00593_DS_:
     0098 0C03                      1- 2464     	BTRSC	STATUS,0
                                    1- 2465     	MGOTO	_00470_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2466     	BANKSEL	_subMin
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 01rr                      1- 2467     	MOVR	_subMin,W
                                    1- 2468     	BANKSEL	r0x105F
     009C rrrr                      3-  110 m1      .banksel ram_address
     009D 00rr                      1- 2469     	MOVAR	r0x105F
                                    1- 2470     ;;113	CLRR	r0x1060
     009E 2100                      1- 2471     	MOVIA	0x00
                                    1- 2472     	BANKSEL	_R_AIN3_DATA
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 04rr                      1- 2473     	SUBAR	(_R_AIN3_DATA + 1),W
     00A1 0903                      1- 2474     	BTRSS	STATUS,2
                                    1- 2475     	MGOTO	_00594_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2476     	BANKSEL	r0x105F
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 01rr                      1- 2477     	MOVR	r0x105F,W
                                    1- 2478     	BANKSEL	_R_AIN3_DATA
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 04rr                      1- 2479     	SUBAR	_R_AIN3_DATA,W
     00A7                           1- 2480     _00594_DS_:
     00A7 0803                      1- 2481     	BTRSS	STATUS,0
                                    1- 2482     	MGOTO	_00470_DS_
     00A8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2483     	.line	726, "main.c"; 	addTime = subTime = 0;
                                    1- 2484     	BANKSEL	_subTime
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 02rr                      1- 2485     	CLRR	_subTime
                                    1- 2486     	BANKSEL	_addTime
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 02rr                      1- 2487     	CLRR	_addTime
                                    1- 2488     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2489     ;;unsigned compare: left >= lit (0x1A=26), size=2
     00AD                           1- 2490     _00470_DS_:
                                    1- 2491     	.line	728, "main.c"; 	if(R_AIN3_DATA > 25)
     00AD 2100                      1- 2492     	MOVIA	0x00
                                    1- 2493     	BANKSEL	_R_AIN3_DATA
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 04rr                      1- 2494     	SUBAR	(_R_AIN3_DATA + 1),W
     00B0 0903                      1- 2495     	BTRSS	STATUS,2
                                    1- 2496     	MGOTO	_00595_DS_
     00B1 3rrr                      3-   63 m1      LGOTO rom_address
     00B2 211A                      1- 2497     	MOVIA	0x1a
     00B3 04rr                      1- 2498     	SUBAR	_R_AIN3_DATA,W
     00B4                           1- 2499     _00595_DS_:
     00B4 0803                      1- 2500     	BTRSS	STATUS,0
                                    1- 2501     	MGOTO	_00480_DS_
     00B5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2502     	.line	730, "main.c"; 	if(++subTime > chrgWaitTime)
                                    1- 2503     	BANKSEL	_subTime
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 05rr                      1- 2504     	INCR	_subTime,F
     00B8 01rr                      1- 2505     	MOVR	_subTime,W
                                    1- 2506     	BANKSEL	_chrgWaitTime
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 04rr                      1- 2507     	SUBAR	_chrgWaitTime,W
     00BB 0C03                      1- 2508     	BTRSC	STATUS,0
                                    1- 2509     	MGOTO	_00473_DS_
     00BC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2510     	.line	732, "main.c"; 	addFlag = 1;
     00BD 2101                      1- 2511     	MOVIA	0x01
                                    1- 2512     	BANKSEL	_addFlag
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 00rr                      1- 2513     	MOVAR	_addFlag
                                    1- 2514     	.line	733, "main.c"; 	maxduty = maxduty - 1;
                                    1- 2515     	BANKSEL	_maxduty
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 06rr                      1- 2516     	DECR	_maxduty,F
                                    1- 2517     	.line	734, "main.c"; 	subTime = 0;
                                    1- 2518     	BANKSEL	_subTime
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 02rr                      1- 2519     	CLRR	_subTime
                                    1- 2520     	.line	735, "main.c"; 	subMin = 24;
     00C4 2118                      1- 2521     	MOVIA	0x18
                                    1- 2522     	BANKSEL	_subMin
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 00rr                      1- 2523     	MOVAR	_subMin
                                    1- 2524     	.line	736, "main.c"; 	chrgWaitTime = 250;
     00C7 21FA                      1- 2525     	MOVIA	0xfa
                                    1- 2526     	BANKSEL	_chrgWaitTime
     00C8 rrrr                      3-  110 m1      .banksel ram_address
     00C9 00rr                      1- 2527     	MOVAR	_chrgWaitTime
     00CA                           1- 2528     _00473_DS_:
                                    1- 2529     	.line	738, "main.c"; 	addTime = 0;
                                    1- 2530     	BANKSEL	_addTime
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 02rr                      1- 2531     	CLRR	_addTime
                                    1- 2532     	MGOTO	_00481_DS_
     00CC 3rrr                      3-   63 m1      LGOTO rom_address
     00CD                           1- 2533     _00480_DS_:
                                    1- 2534     	.line	740, "main.c"; 	else if(R_AIN3_DATA < subMin || addFlag == 0)
                                    1- 2535     	BANKSEL	_subMin
     00CD rrrr                      3-  110 m1      .banksel ram_address
     00CE 01rr                      1- 2536     	MOVR	_subMin,W
                                    1- 2537     	BANKSEL	r0x105F
     00CF rrrr                      3-  110 m1      .banksel ram_address
     00D0 00rr                      1- 2538     	MOVAR	r0x105F
                                    1- 2539     ;;112	CLRR	r0x1060
     00D1 2100                      1- 2540     	MOVIA	0x00
                                    1- 2541     	BANKSEL	_R_AIN3_DATA
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 04rr                      1- 2542     	SUBAR	(_R_AIN3_DATA + 1),W
     00D4 0903                      1- 2543     	BTRSS	STATUS,2
                                    1- 2544     	MGOTO	_00597_DS_
     00D5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2545     	BANKSEL	r0x105F
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 01rr                      1- 2546     	MOVR	r0x105F,W
                                    1- 2547     	BANKSEL	_R_AIN3_DATA
     00D8 rrrr                      3-  110 m1      .banksel ram_address
     00D9 04rr                      1- 2548     	SUBAR	_R_AIN3_DATA,W
     00DA                           1- 2549     _00597_DS_:
     00DA 0803                      1- 2550     	BTRSS	STATUS,0
                                    1- 2551     	MGOTO	_00476_DS_
     00DB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2552     	BANKSEL	_addFlag
     00DC rrrr                      3-  110 m1      .banksel ram_address
     00DD 01rr                      1- 2553     	MOVR	_addFlag,W
     00DE 0903                      1- 2554     	BTRSS	STATUS,2
                                    1- 2555     	MGOTO	_00481_DS_
     00DF 3rrr                      3-   63 m1      LGOTO rom_address
     00E0                           1- 2556     _00476_DS_:
                                    1- 2557     	.line	742, "main.c"; 	if(++addTime > chrgWaitTime)
                                    1- 2558     	BANKSEL	_addTime
     00E0 rrrr                      3-  110 m1      .banksel ram_address
     00E1 05rr                      1- 2559     	INCR	_addTime,F
     00E2 01rr                      1- 2560     	MOVR	_addTime,W
                                    1- 2561     	BANKSEL	_chrgWaitTime
     00E3 rrrr                      3-  110 m1      .banksel ram_address
     00E4 04rr                      1- 2562     	SUBAR	_chrgWaitTime,W
     00E5 0C03                      1- 2563     	BTRSC	STATUS,0
                                    1- 2564     	MGOTO	_00475_DS_
     00E6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2565     	.line	744, "main.c"; 	maxduty = maxduty + 1;
                                    1- 2566     	BANKSEL	_maxduty
     00E7 rrrr                      3-  110 m1      .banksel ram_address
     00E8 05rr                      1- 2567     	INCR	_maxduty,F
                                    1- 2568     	.line	745, "main.c"; 	addTime = 0;
                                    1- 2569     	BANKSEL	_addTime
     00E9 rrrr                      3-  110 m1      .banksel ram_address
     00EA 02rr                      1- 2570     	CLRR	_addTime
     00EB                           1- 2571     _00475_DS_:
                                    1- 2572     	.line	747, "main.c"; 	subTime = 0;
                                    1- 2573     	BANKSEL	_subTime
     00EB rrrr                      3-  110 m1      .banksel ram_address
     00EC 02rr                      1- 2574     	CLRR	_subTime
                                    1- 2575     ;;unsigned compare: left < lit (0xA=10), size=1
     00ED                           1- 2576     _00481_DS_:
                                    1- 2577     	.line	749, "main.c"; 	if(maxduty < 10)
     00ED 210A                      1- 2578     	MOVIA	0x0a
                                    1- 2579     	BANKSEL	_maxduty
     00EE rrrr                      3-  110 m1      .banksel ram_address
     00EF 04rr                      1- 2580     	SUBAR	_maxduty,W
     00F0 0C03                      1- 2581     	BTRSC	STATUS,0
                                    1- 2582     	MGOTO	_00483_DS_
     00F1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2583     	.line	750, "main.c"; 	maxduty = 10;
     00F2 210A                      1- 2584     	MOVIA	0x0a
     00F3 00rr                      1- 2585     	MOVAR	_maxduty
                                    1- 2586     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2587     ;;unsigned compare: left >= lit (0x21=33), size=1
     00F4                           1- 2588     _00483_DS_:
                                    1- 2589     	.line	751, "main.c"; 	if(maxduty > 32)
     00F4 2121                      1- 2590     	MOVIA	0x21
                                    1- 2591     	BANKSEL	_maxduty
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 04rr                      1- 2592     	SUBAR	_maxduty,W
     00F7 0803                      1- 2593     	BTRSS	STATUS,0
                                    1- 2594     	MGOTO	_00485_DS_
     00F8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2595     	.line	752, "main.c"; 	maxduty = 32;
     00F9 2120                      1- 2596     	MOVIA	0x20
     00FA 00rr                      1- 2597     	MOVAR	_maxduty
     00FB                           1- 2598     _00485_DS_:
                                    1- 2599     	.line	753, "main.c"; 	PWM3DUTY = maxduty;
                                    1- 2600     	BANKSEL	_maxduty
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 01rr                      1- 2601     	MOVR	_maxduty,W
     00FD 00rr                      1- 2602     	SFUN	_PWM3DUTY
                                    1- 2603     	.line	754, "main.c"; 	pwm1Init();			
                                    1- 2604     	MCALL	_pwm1Init
     00FE 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2605     	MGOTO	_00509_DS_
     00FF 3rrr                      3-   63 m1      LGOTO rom_address
     0100                           1- 2606     _00507_DS_:
                                    1- 2607     	.line	763, "main.c"; 	addFlag = 0;
                                    1- 2608     	BANKSEL	_addFlag
     0100 rrrr                      3-  110 m1      .banksel ram_address
     0101 02rr                      1- 2609     	CLRR	_addFlag
                                    1- 2610     	.line	764, "main.c"; 	chrgWaitTime = 5;
     0102 2105                      1- 2611     	MOVIA	0x05
                                    1- 2612     	BANKSEL	_chrgWaitTime
     0103 rrrr                      3-  110 m1      .banksel ram_address
     0104 00rr                      1- 2613     	MOVAR	_chrgWaitTime
                                    1- 2614     	.line	765, "main.c"; 	subMin = 24;
     0105 2118                      1- 2615     	MOVIA	0x18
                                    1- 2616     	BANKSEL	_subMin
     0106 rrrr                      3-  110 m1      .banksel ram_address
     0107 00rr                      1- 2617     	MOVAR	_subMin
                                    1- 2618     	.line	766, "main.c"; 	maxduty = 0;
                                    1- 2619     	BANKSEL	_maxduty
     0108 rrrr                      3-  110 m1      .banksel ram_address
     0109 02rr                      1- 2620     	CLRR	_maxduty
                                    1- 2621     	.line	767, "main.c"; 	pwm1Stop();
                                    1- 2622     	MCALL	_pwm1Stop
     010A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2623     	.line	768, "main.c"; 	fullLock = 0;
                                    1- 2624     	BANKSEL	_fullLock
     010B rrrr                      3-  110 m1      .banksel ram_address
     010C 02rr                      1- 2625     	CLRR	_fullLock
                                    1- 2626     	.line	769, "main.c"; 	fullLockCount = 0;
                                    1- 2627     	BANKSEL	_fullLockCount
     010D rrrr                      3-  110 m1      .banksel ram_address
     010E 02rr                      1- 2628     	CLRR	_fullLockCount
                                    1- 2629     	.line	770, "main.c"; 	lockLedStep = 0;
                                    1- 2630     	BANKSEL	_lockLedStep
     010F rrrr                      3-  110 m1      .banksel ram_address
     0110 02rr                      1- 2631     	CLRR	_lockLedStep
                                    1- 2632     	.line	771, "main.c"; 	if(workStep > 0 && pwStep == 0)
                                    1- 2633     	BANKSEL	_workStep
     0111 rrrr                      3-  110 m1      .banksel ram_address
     0112 01rr                      1- 2634     	MOVR	_workStep,W
     0113 0D03                      1- 2635     	BTRSC	STATUS,2
                                    1- 2636     	MGOTO	_00495_DS_
     0114 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2637     	BANKSEL	_pwStep
     0115 rrrr                      3-  110 m1      .banksel ram_address
     0116 01rr                      1- 2638     	MOVR	_pwStep,W
     0117 0903                      1- 2639     	BTRSS	STATUS,2
                                    1- 2640     	MGOTO	_00495_DS_
     0118 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2641     	.line	773, "main.c"; 	if(++lowBat > 6000)
                                    1- 2642     	BANKSEL	_lowBat
     0119 rrrr                      3-  110 m1      .banksel ram_address
     011A 05rr                      1- 2643     	INCR	_lowBat,F
     011B 0D03                      1- 2644     	BTRSC	STATUS,2
     011C 05rr                      1- 2645     	INCR	(_lowBat + 1),F
                                    1- 2646     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2647     ;;unsigned compare: left >= lit (0x1771=6001), size=2
     011D 2117                      1- 2648     	MOVIA	0x17
     011E 04rr                      1- 2649     	SUBAR	(_lowBat + 1),W
     011F 0903                      1- 2650     	BTRSS	STATUS,2
                                    1- 2651     	MGOTO	_00601_DS_
     0120 3rrr                      3-   63 m1      LGOTO rom_address
     0121 2171                      1- 2652     	MOVIA	0x71
     0122 04rr                      1- 2653     	SUBAR	_lowBat,W
     0123                           1- 2654     _00601_DS_:
     0123 0803                      1- 2655     	BTRSS	STATUS,0
                                    1- 2656     	MGOTO	_00496_DS_
     0124 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2657     	.line	775, "main.c"; 	shandengTime = 500;
     0125 21F4                      1- 2658     	MOVIA	0xf4
                                    1- 2659     	BANKSEL	_shandengTime
     0126 rrrr                      3-  110 m1      .banksel ram_address
     0127 00rr                      1- 2660     	MOVAR	_shandengTime
     0128 2101                      1- 2661     	MOVIA	0x01
     0129 00rr                      1- 2662     	MOVAR	(_shandengTime + 1)
                                    1- 2663     	.line	776, "main.c"; 	lockStart = 1;
                                    1- 2664     	BANKSEL	_lockStart
     012A rrrr                      3-  110 m1      .banksel ram_address
     012B 00rr                      1- 2665     	MOVAR	_lockStart
                                    1- 2666     	.line	777, "main.c"; 	lowBat = 0;
                                    1- 2667     	BANKSEL	_lowBat
     012C rrrr                      3-  110 m1      .banksel ram_address
     012D 02rr                      1- 2668     	CLRR	_lowBat
     012E 02rr                      1- 2669     	CLRR	(_lowBat + 1)
                                    1- 2670     	.line	778, "main.c"; 	powerOff();
                                    1- 2671     	MCALL	_powerOff
     012F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2672     	MGOTO	_00496_DS_
     0130 3rrr                      3-   63 m1      LGOTO rom_address
     0131                           1- 2673     _00495_DS_:
                                    1- 2674     	.line	783, "main.c"; 	lowBat = 0;
                                    1- 2675     	BANKSEL	_lowBat
     0131 rrrr                      3-  110 m1      .banksel ram_address
     0132 02rr                      1- 2676     	CLRR	_lowBat
     0133 02rr                      1- 2677     	CLRR	(_lowBat + 1)
     0134                           1- 2678     _00496_DS_:
                                    1- 2679     	.line	785, "main.c"; 	if(shandengTime > 0)
                                    1- 2680     	BANKSEL	_shandengTime
     0134 rrrr                      3-  110 m1      .banksel ram_address
     0135 01rr                      1- 2681     	MOVR	_shandengTime,W
     0136 11rr                      1- 2682     	IORAR	(_shandengTime + 1),W
     0137 0D03                      1- 2683     	BTRSC	STATUS,2
                                    1- 2684     	MGOTO	_00502_DS_
     0138 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2685     	.line	787, "main.c"; 	shandengTime--;
     0139 21FF                      1- 2686     	MOVIA	0xff
     013A 03rr                      1- 2687     	ADDAR	_shandengTime,F
     013B 0803                      1- 2688     	BTRSS	STATUS,0
     013C 06rr                      1- 2689     	DECR	(_shandengTime + 1),F
                                    1- 2690     ;;unsigned compare: left < lit (0x1E=30), size=1
                                    1- 2691     	.line	788, "main.c"; 	if(count500ms < 30)
     013D 211E                      1- 2692     	MOVIA	0x1e
                                    1- 2693     	BANKSEL	_count500ms
     013E rrrr                      3-  110 m1      .banksel ram_address
     013F 04rr                      1- 2694     	SUBAR	_count500ms,W
     0140 0C03                      1- 2695     	BTRSC	STATUS,0
                                    1- 2696     	MGOTO	_00499_DS_
     0141 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2697     	.line	790, "main.c"; 	PORTA |= 0x02;		//打开充电灯
                                    1- 2698     	BANKSEL	_PORTA
     0142 rrrr                      3-  110 m1      .banksel ram_address
     0143 18rr                      1- 2699     	BSR	_PORTA,1
                                    1- 2700     	MGOTO	_00503_DS_
     0144 3rrr                      3-   63 m1      LGOTO rom_address
     0145                           1- 2701     _00499_DS_:
                                    1- 2702     	.line	794, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
                                    1- 2703     	BANKSEL	_PORTA
     0145 rrrr                      3-  110 m1      .banksel ram_address
     0146 1Crr                      1- 2704     	BCR	_PORTA,1
                                    1- 2705     	MGOTO	_00503_DS_
     0147 3rrr                      3-   63 m1      LGOTO rom_address
     0148                           1- 2706     _00502_DS_:
                                    1- 2707     	.line	798, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
                                    1- 2708     	BANKSEL	_PORTA
     0148 rrrr                      3-  110 m1      .banksel ram_address
     0149 1Crr                      1- 2709     	BCR	_PORTA,1
     014A                           1- 2710     _00503_DS_:
                                    1- 2711     	.line	799, "main.c"; 	PORTA &= 0xFE;		//关闭充满提示灯
                                    1- 2712     	BANKSEL	_PORTA
     014A rrrr                      3-  110 m1      .banksel ram_address
     014B 1Crr                      1- 2713     	BCR	_PORTA,0
                                    1- 2714     	.line	802, "main.c"; 	if(workStep == 0)
                                    1- 2715     	BANKSEL	_workStep
     014C rrrr                      3-  110 m1      .banksel ram_address
     014D 01rr                      1- 2716     	MOVR	_workStep,W
     014E 0903                      1- 2717     	BTRSS	STATUS,2
                                    1- 2718     	MGOTO	_00006_DS_
     014F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2719     	.line	803, "main.c"; 	ledStep = 0;
                                    1- 2720     	BANKSEL	_ledStep
     0150 rrrr                      3-  110 m1      .banksel ram_address
     0151 02rr                      1- 2721     	CLRR	_ledStep
     0152                           1- 2722     _00006_DS_:
                                    1- 2723     	.line	804, "main.c"; 	chrgFlag = 0;
                                    1- 2724     	BANKSEL	_chrgFlag
     0152 rrrr                      3-  110 m1      .banksel ram_address
     0153 02rr                      1- 2725     	CLRR	_chrgFlag
     0154                           1- 2726     _00509_DS_:
                                    1- 2727     	.line	808, "main.c"; 	}
                                    1- 2728     	RETURN	
     0154 0010                      3-   40 m1      ret
                                    1- 2729     ; exit point of _chrgCtr
                                    1- 2731     ;***
                                    1- 2732     ;  pBlock Stats: dbName = C
                                    1- 2733     ;***
                                    1- 2734     ;has an exit
                                    1- 2735     ;1 compiler assigned register :
                                    1- 2736     ;   r0x1061
                                    1- 2737     ;; Starting pCode block
                                    1- 2738     .segment "code"; module=main, function=_keyRead
                                    1- 2740     ;local variable name mapping:
     0000                           1- 2742     _keyRead:
                                    1- 2743     ; 2 exit points
                                    1- 2744     	.line	600, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2745     	BANKSEL	r0x1061
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2746     	MOVAR	r0x1061
                                    1- 2747     	.line	602, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2748     	MOVR	r0x1061,W
     0003 0D03                      1- 2749     	BTRSC	STATUS,2
                                    1- 2750     	MGOTO	_00440_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2751     	.line	604, "main.c"; 	keyCount++;
                                    1- 2752     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2753     	INCR	_keyCount,F
                                    1- 2754     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 2755     	.line	605, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 2756     	MOVIA	0x64
     0008 04rr                      1- 2757     	SUBAR	_keyCount,W
     0009 0803                      1- 2758     	BTRSS	STATUS,0
                                    1- 2759     	MGOTO	_00441_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2760     	.line	607, "main.c"; 	keyCount = 100;
     000B 2164                      1- 2761     	MOVIA	0x64
     000C 00rr                      1- 2762     	MOVAR	_keyCount
                                    1- 2763     	.line	608, "main.c"; 	if(!longPressFlag)
                                    1- 2764     	BANKSEL	_longPressFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2765     	MOVR	_longPressFlag,W
     000F 0903                      1- 2766     	BTRSS	STATUS,2
                                    1- 2767     	MGOTO	_00441_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2768     	.line	610, "main.c"; 	longPressFlag = 1;
     0011 2101                      1- 2769     	MOVIA	0x01
     0012 00rr                      1- 2770     	MOVAR	_longPressFlag
                                    1- 2771     	.line	611, "main.c"; 	return 2;
     0013 2102                      1- 2772     	MOVIA	0x02
                                    1- 2773     	MGOTO	_00442_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2774     ;;unsigned compare: left < lit (0x64=100), size=1
     0015                           1- 2775     _00440_DS_:
                                    1- 2776     	.line	617, "main.c"; 	if(keyCount >= 100)
     0015 2164                      1- 2777     	MOVIA	0x64
                                    1- 2778     	BANKSEL	_keyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1- 2779     	SUBAR	_keyCount,W
     0018 0803                      1- 2780     	BTRSS	STATUS,0
                                    1- 2781     	MGOTO	_00437_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2782     	.line	619, "main.c"; 	keyCount = 0;
     001A 02rr                      1- 2783     	CLRR	_keyCount
                                    1- 2784     	.line	620, "main.c"; 	longPressFlag = 0;
                                    1- 2785     	BANKSEL	_longPressFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 2786     	CLRR	_longPressFlag
                                    1- 2787     	.line	621, "main.c"; 	return	0;
     001D 2100                      1- 2788     	MOVIA	0x00
                                    1- 2789     	MGOTO	_00442_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2790     ;;unsigned compare: left < lit (0x4=4), size=1
     001F                           1- 2791     _00437_DS_:
                                    1- 2792     	.line	623, "main.c"; 	else if(keyCount >= 4)
     001F 2104                      1- 2793     	MOVIA	0x04
                                    1- 2794     	BANKSEL	_keyCount
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 2795     	SUBAR	_keyCount,W
     0022 0803                      1- 2796     	BTRSS	STATUS,0
                                    1- 2797     	MGOTO	_00438_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2798     	.line	625, "main.c"; 	keyCount = 0;
     0024 02rr                      1- 2799     	CLRR	_keyCount
                                    1- 2800     	.line	626, "main.c"; 	return	1;
     0025 2101                      1- 2801     	MOVIA	0x01
                                    1- 2802     	MGOTO	_00442_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 2803     _00438_DS_:
                                    1- 2804     	.line	628, "main.c"; 	keyCount = 0;
                                    1- 2805     	BANKSEL	_keyCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 2806     	CLRR	_keyCount
     0029                           1- 2807     _00441_DS_:
                                    1- 2808     	.line	630, "main.c"; 	return 0;
     0029 2100                      1- 2809     	MOVIA	0x00
     002A                           1- 2810     _00442_DS_:
                                    1- 2811     	.line	631, "main.c"; 	}
                                    1- 2812     	RETURN	
     002A 0010                      3-   40 m1      ret
                                    1- 2813     ; exit point of _keyRead
                                    1- 2815     ;***
                                    1- 2816     ;  pBlock Stats: dbName = C
                                    1- 2817     ;***
                                    1- 2818     ;has an exit
                                    1- 2819     ;functions called:
                                    1- 2820     ;   _LedInput
                                    1- 2821     ;   _pwmStop
                                    1- 2822     ;   _LedInput
                                    1- 2823     ;   _pwmStop
                                    1- 2824     ;; Starting pCode block
                                    1- 2825     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2827     _gotoSleep:
                                    1- 2828     ; 2 exit points
                                    1- 2829     	.line	571, "main.c"; 	count900s = 0;
                                    1- 2830     	BANKSEL	_count900s
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2831     	CLRR	_count900s
     0002 02rr                      1- 2832     	CLRR	(_count900s + 1)
                                    1- 2833     	.line	572, "main.c"; 	LedInput();
                                    1- 2834     	MCALL	_LedInput
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2835     	.line	573, "main.c"; 	pwmStop();
                                    1- 2836     	MCALL	_pwmStop
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2837     	.line	574, "main.c"; 	APHCON = 0x9F;
     0005 219F                      1- 2838     	MOVIA	0x9f
     0006 000r                      1- 2839     	IOST	_APHCON
                                    1- 2840     	.line	575, "main.c"; 	PORTB = 0x00;
     0007 02rr                      1- 2841     	CLRR	_PORTB
                                    1- 2842     	.line	576, "main.c"; 	PORTA = 0x00;
                                    1- 2843     	BANKSEL	_PORTA
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 2844     	CLRR	_PORTA
                                    1- 2845     	.line	577, "main.c"; 	sleepTime = 0;
                                    1- 2846     	BANKSEL	_sleepTime
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 02rr                      1- 2847     	CLRR	_sleepTime
     000C 02rr                      1- 2848     	CLRR	(_sleepTime + 1)
                                    1- 2849     	.line	579, "main.c"; 	workStep = 0;
                                    1- 2850     	BANKSEL	_workStep
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 2851     	CLRR	_workStep
                                    1- 2852     	.line	580, "main.c"; 	AWUCON = 0x60;
     000F 2160                      1- 2853     	MOVIA	0x60
     0010 00rr                      1- 2854     	MOVAR	_AWUCON
                                    1- 2855     	.line	581, "main.c"; 	INTE =  C_INT_PABKey;
     0011 2102                      1- 2856     	MOVIA	0x02
     0012 00rr                      1- 2857     	MOVAR	_INTE
                                    1- 2858     	.line	582, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0013 2118                      1- 2859     	MOVIA	0x18
     0014 00rr                      1- 2860     	MOVAR	_PCON
                                    1- 2861     	.line	583, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0015 02rr                      1- 2862     	CLRR	_INTF
                                    1- 2863     	.line	584, "main.c"; 	CLRWDT();
     0016 0002                      1- 2864     	clrwdt
                                    1- 2865     	.line	585, "main.c"; 	ENI();
     0017 0004                      1- 2866     	ENI
                                    1- 2867     	.line	586, "main.c"; 	SLEEP();
     0018 0001                      1- 2868     	sleep
                                    1- 2869     	.line	587, "main.c"; 	AWUCON = 0x00;
     0019 02rr                      1- 2870     	CLRR	_AWUCON
                                    1- 2871     	.line	588, "main.c"; 	APHCON = 0xBF;
     001A 21BF                      1- 2872     	MOVIA	0xbf
     001B 000r                      1- 2873     	IOST	_APHCON
                                    1- 2874     	.line	589, "main.c"; 	PORTB = 0x00;
     001C 02rr                      1- 2875     	CLRR	_PORTB
                                    1- 2876     	.line	590, "main.c"; 	PORTA = 0x40;
     001D 2140                      1- 2877     	MOVIA	0x40
                                    1- 2878     	BANKSEL	_PORTA
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 2879     	MOVAR	_PORTA
                                    1- 2880     	.line	591, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input ;
     0020 2178                      1- 2881     	MOVIA	0x78
     0021 000r                      1- 2882     	IOST	_IOSTA
                                    1- 2883     	.line	592, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0022 2101                      1- 2884     	MOVIA	0x01
     0023 00rr                      1- 2885     	MOVAR	_INTE
                                    1- 2886     	.line	593, "main.c"; 	INTF = 0;
     0024 02rr                      1- 2887     	CLRR	_INTF
                                    1- 2888     	.line	595, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0025 21B8                      1- 2889     	MOVIA	0xb8
     0026 00rr                      1- 2890     	MOVAR	_PCON
                                    1- 2891     	.line	597, "main.c"; 	}
                                    1- 2892     	RETURN	
     0027 0010                      3-   40 m1      ret
                                    1- 2893     ; exit point of _gotoSleep
                                    1- 2895     ;***
                                    1- 2896     ;  pBlock Stats: dbName = C
                                    1- 2897     ;***
                                    1- 2898     ;has an exit
                                    1- 2899     ;; Starting pCode block
                                    1- 2900     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2902     _pwmStop:
                                    1- 2903     ; 2 exit points
                                    1- 2904     	.line	565, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2905     	CLRA	
     0001 00rr                      1- 2906     	SFUN	_T2CR1
                                    1- 2907     	.line	566, "main.c"; 	}
                                    1- 2908     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2909     ; exit point of _pwmStop
                                    1- 2911     ;***
                                    1- 2912     ;  pBlock Stats: dbName = C
                                    1- 2913     ;***
                                    1- 2914     ;has an exit
                                    1- 2915     ;1 compiler assigned register :
                                    1- 2916     ;   r0x1063
                                    1- 2917     ;; Starting pCode block
                                    1- 2918     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2920     _pwmInit:
                                    1- 2921     ; 2 exit points
                                    1- 2922     	.line	553, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2923     	SFUNR	_T2CR1
                                    1- 2924     	BANKSEL	r0x1063
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2925     	MOVAR	r0x1063
     0003 0Frr                      1- 2926     	BTRSC	r0x1063,7
                                    1- 2927     	.line	554, "main.c"; 	return;
                                    1- 2928     	MGOTO	_00417_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2929     	.line	555, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2930     	CLRR	_TMRH
                                    1- 2931     	.line	556, "main.c"; 	TMR2 = 99;							//频率为110K
     0006 2163                      1- 2932     	MOVIA	0x63
     0007 00rr                      1- 2933     	SFUN	_TMR2
                                    1- 2934     	.line	559, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2101                      1- 2935     	MOVIA	0x01
     0009 00rr                      1- 2936     	SFUN	_T2CR2
                                    1- 2937     	.line	560, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2938     	MOVIA	0x83
     000B 00rr                      1- 2939     	SFUN	_T2CR1
     000C                           1- 2940     _00417_DS_:
                                    1- 2941     	.line	561, "main.c"; 	}
                                    1- 2942     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2943     ; exit point of _pwmInit
                                    1- 2945     ;***
                                    1- 2946     ;  pBlock Stats: dbName = C
                                    1- 2947     ;***
                                    1- 2948     ;has an exit
                                    1- 2949     ;; Starting pCode block
                                    1- 2950     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2952     _pwm1Stop:
                                    1- 2953     ; 2 exit points
                                    1- 2954     	.line	546, "main.c"; 	T3CR1 = C_TMR3_Dis;
     0000 0200                      1- 2955     	CLRA	
     0001 00rr                      1- 2956     	SFUN	_T3CR1
                                    1- 2957     	.line	547, "main.c"; 	}
                                    1- 2958     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2959     ; exit point of _pwm1Stop
                                    1- 2961     ;***
                                    1- 2962     ;  pBlock Stats: dbName = C
                                    1- 2963     ;***
                                    1- 2964     ;has an exit
                                    1- 2965     ;1 compiler assigned register :
                                    1- 2966     ;   r0x105E
                                    1- 2967     ;; Starting pCode block
                                    1- 2968     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2970     _pwm1Init:
                                    1- 2971     ; 2 exit points
                                    1- 2972     	.line	534, "main.c"; 	if(0x80&T3CR1)
     0000 00rr                      1- 2973     	SFUNR	_T3CR1
                                    1- 2974     	BANKSEL	r0x105E
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2975     	MOVAR	r0x105E
     0003 0Frr                      1- 2976     	BTRSC	r0x105E,7
                                    1- 2977     	.line	535, "main.c"; 	return;
                                    1- 2978     	MGOTO	_00406_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2979     	.line	536, "main.c"; 	TM3RH = 0x00;
     0005 02rr                      1- 2980     	CLRR	_TM3RH
                                    1- 2981     	.line	537, "main.c"; 	TMR3 = 60;							//频率为110K
     0006 213C                      1- 2982     	MOVIA	0x3c
     0007 00rr                      1- 2983     	SFUN	_TMR3
                                    1- 2984     	.line	540, "main.c"; 	T3CR2 = C_TMR3_ClkSrc_Inst | C_PS3_Dis;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2108                      1- 2985     	MOVIA	0x08
     0009 00rr                      1- 2986     	SFUN	_T3CR2
                                    1- 2987     	.line	541, "main.c"; 	T3CR1 = C_PWM3_En | C_TMR3_Reload | C_TMR3_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2988     	MOVIA	0x83
     000B 00rr                      1- 2989     	SFUN	_T3CR1
     000C                           1- 2990     _00406_DS_:
                                    1- 2991     	.line	542, "main.c"; 	}
                                    1- 2992     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2993     ; exit point of _pwm1Init
                                    1- 2995     ;***
                                    1- 2996     ;  pBlock Stats: dbName = C
                                    1- 2997     ;***
                                    1- 2998     ;has an exit
                                    1- 2999     ;functions called:
                                    1- 3000     ;   _delay
                                    1- 3001     ;   _LedInput
                                    1- 3002     ;   _delay
                                    1- 3003     ;   _LedInput
                                    1- 3004     ;1 compiler assigned register :
                                    1- 3005     ;   r0x1064
                                    1- 3006     ;; Starting pCode block
                                    1- 3007     .segment "code"; module=main, function=_LED8ON
     0000                           1- 3009     _LED8ON:
                                    1- 3010     ; 2 exit points
                                    1- 3011     	.line	524, "main.c"; 	L4OUT;
     0000 001r                      1- 3012     	IOSTR	_IOSTB
                                    1- 3013     	BANKSEL	r0x1064
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3014     	MOVAR	r0x1064
     0003 1Crr                      1- 3015     	BCR	r0x1064,0
     0004 01rr                      1- 3016     	MOVR	r0x1064,W
     0005 000r                      1- 3017     	IOST	_IOSTB
                                    1- 3018     	.line	525, "main.c"; 	L2OUT;
     0006 001r                      1- 3019     	IOSTR	_IOSTB
     0007 00rr                      1- 3020     	MOVAR	r0x1064
     0008 1Drr                      1- 3021     	BCR	r0x1064,3
     0009 01rr                      1- 3022     	MOVR	r0x1064,W
     000A 000r                      1- 3023     	IOST	_IOSTB
                                    1- 3024     	.line	526, "main.c"; 	L4H;
     000B 18rr                      1- 3025     	BSR	_PORTB,0
                                    1- 3026     	.line	527, "main.c"; 	L2L;
     000C 1Drr                      1- 3027     	BCR	_PORTB,3
                                    1- 3028     	.line	528, "main.c"; 	delay(80);
     000D 2150                      1- 3029     	MOVIA	0x50
                                    1- 3030     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3031     	.line	529, "main.c"; 	LedInput();
                                    1- 3032     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3033     	.line	530, "main.c"; 	}
                                    1- 3034     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3035     ; exit point of _LED8ON
                                    1- 3037     ;***
                                    1- 3038     ;  pBlock Stats: dbName = C
                                    1- 3039     ;***
                                    1- 3040     ;has an exit
                                    1- 3041     ;functions called:
                                    1- 3042     ;   _delay
                                    1- 3043     ;   _LedInput
                                    1- 3044     ;   _delay
                                    1- 3045     ;   _LedInput
                                    1- 3046     ;1 compiler assigned register :
                                    1- 3047     ;   r0x1065
                                    1- 3048     ;; Starting pCode block
                                    1- 3049     .segment "code"; module=main, function=_LED7ON
     0000                           1- 3051     _LED7ON:
                                    1- 3052     ; 2 exit points
                                    1- 3053     	.line	514, "main.c"; 	L4OUT;
     0000 001r                      1- 3054     	IOSTR	_IOSTB
                                    1- 3055     	BANKSEL	r0x1065
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3056     	MOVAR	r0x1065
     0003 1Crr                      1- 3057     	BCR	r0x1065,0
     0004 01rr                      1- 3058     	MOVR	r0x1065,W
     0005 000r                      1- 3059     	IOST	_IOSTB
                                    1- 3060     	.line	515, "main.c"; 	L2OUT;
     0006 001r                      1- 3061     	IOSTR	_IOSTB
     0007 00rr                      1- 3062     	MOVAR	r0x1065
     0008 1Drr                      1- 3063     	BCR	r0x1065,3
     0009 01rr                      1- 3064     	MOVR	r0x1065,W
     000A 000r                      1- 3065     	IOST	_IOSTB
                                    1- 3066     	.line	516, "main.c"; 	L2H;
     000B 19rr                      1- 3067     	BSR	_PORTB,3
                                    1- 3068     	.line	517, "main.c"; 	L4L;
     000C 1Crr                      1- 3069     	BCR	_PORTB,0
                                    1- 3070     	.line	518, "main.c"; 	delay(80);
     000D 2150                      1- 3071     	MOVIA	0x50
                                    1- 3072     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3073     	.line	519, "main.c"; 	LedInput();
                                    1- 3074     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3075     	.line	520, "main.c"; 	}
                                    1- 3076     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3077     ; exit point of _LED7ON
                                    1- 3079     ;***
                                    1- 3080     ;  pBlock Stats: dbName = C
                                    1- 3081     ;***
                                    1- 3082     ;has an exit
                                    1- 3083     ;functions called:
                                    1- 3084     ;   _delay
                                    1- 3085     ;   _LedInput
                                    1- 3086     ;   _delay
                                    1- 3087     ;   _LedInput
                                    1- 3088     ;1 compiler assigned register :
                                    1- 3089     ;   r0x1066
                                    1- 3090     ;; Starting pCode block
                                    1- 3091     .segment "code"; module=main, function=_LED6ON
     0000                           1- 3093     _LED6ON:
                                    1- 3094     ; 2 exit points
                                    1- 3095     	.line	504, "main.c"; 	L4OUT;
     0000 001r                      1- 3096     	IOSTR	_IOSTB
                                    1- 3097     	BANKSEL	r0x1066
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3098     	MOVAR	r0x1066
     0003 1Crr                      1- 3099     	BCR	r0x1066,0
     0004 01rr                      1- 3100     	MOVR	r0x1066,W
     0005 000r                      1- 3101     	IOST	_IOSTB
                                    1- 3102     	.line	505, "main.c"; 	L1OUT;
     0006 001r                      1- 3103     	IOSTR	_IOSTA
     0007 00rr                      1- 3104     	MOVAR	r0x1066
     0008 1Frr                      1- 3105     	BCR	r0x1066,7
     0009 01rr                      1- 3106     	MOVR	r0x1066,W
     000A 000r                      1- 3107     	IOST	_IOSTA
                                    1- 3108     	.line	506, "main.c"; 	L1H;
                                    1- 3109     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 1Brr                      1- 3110     	BSR	_PORTA,7
                                    1- 3111     	.line	507, "main.c"; 	L4L;
     000D 1Crr                      1- 3112     	BCR	_PORTB,0
                                    1- 3113     	.line	508, "main.c"; 	delay(80);
     000E 2150                      1- 3114     	MOVIA	0x50
                                    1- 3115     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3116     	.line	509, "main.c"; 	LedInput();
                                    1- 3117     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3118     	.line	510, "main.c"; 	}
                                    1- 3119     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3120     ; exit point of _LED6ON
                                    1- 3122     ;***
                                    1- 3123     ;  pBlock Stats: dbName = C
                                    1- 3124     ;***
                                    1- 3125     ;has an exit
                                    1- 3126     ;functions called:
                                    1- 3127     ;   _delay
                                    1- 3128     ;   _LedInput
                                    1- 3129     ;   _delay
                                    1- 3130     ;   _LedInput
                                    1- 3131     ;1 compiler assigned register :
                                    1- 3132     ;   r0x1067
                                    1- 3133     ;; Starting pCode block
                                    1- 3134     .segment "code"; module=main, function=_LED5ON
     0000                           1- 3136     _LED5ON:
                                    1- 3137     ; 2 exit points
                                    1- 3138     	.line	493, "main.c"; 	L4OUT;
     0000 001r                      1- 3139     	IOSTR	_IOSTB
                                    1- 3140     	BANKSEL	r0x1067
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3141     	MOVAR	r0x1067
     0003 1Crr                      1- 3142     	BCR	r0x1067,0
     0004 01rr                      1- 3143     	MOVR	r0x1067,W
     0005 000r                      1- 3144     	IOST	_IOSTB
                                    1- 3145     	.line	494, "main.c"; 	L1OUT;
     0006 001r                      1- 3146     	IOSTR	_IOSTA
     0007 00rr                      1- 3147     	MOVAR	r0x1067
     0008 1Frr                      1- 3148     	BCR	r0x1067,7
     0009 01rr                      1- 3149     	MOVR	r0x1067,W
     000A 000r                      1- 3150     	IOST	_IOSTA
                                    1- 3151     	.line	495, "main.c"; 	L4H;
     000B 18rr                      1- 3152     	BSR	_PORTB,0
                                    1- 3153     	.line	496, "main.c"; 	L1L;
                                    1- 3154     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Frr                      1- 3155     	BCR	_PORTA,7
                                    1- 3156     	.line	497, "main.c"; 	delay(80);
     000E 2150                      1- 3157     	MOVIA	0x50
                                    1- 3158     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3159     	.line	498, "main.c"; 	LedInput();
                                    1- 3160     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3161     	.line	499, "main.c"; 	}
                                    1- 3162     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3163     ; exit point of _LED5ON
                                    1- 3165     ;***
                                    1- 3166     ;  pBlock Stats: dbName = C
                                    1- 3167     ;***
                                    1- 3168     ;has an exit
                                    1- 3169     ;functions called:
                                    1- 3170     ;   _delay
                                    1- 3171     ;   _LedInput
                                    1- 3172     ;   _delay
                                    1- 3173     ;   _LedInput
                                    1- 3174     ;1 compiler assigned register :
                                    1- 3175     ;   r0x1068
                                    1- 3176     ;; Starting pCode block
                                    1- 3177     .segment "code"; module=main, function=_LED4ON
     0000                           1- 3179     _LED4ON:
                                    1- 3180     ; 2 exit points
                                    1- 3181     	.line	483, "main.c"; 	L3OUT;
     0000 001r                      1- 3182     	IOSTR	_IOSTB
                                    1- 3183     	BANKSEL	r0x1068
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3184     	MOVAR	r0x1068
     0003 1Crr                      1- 3185     	BCR	r0x1068,1
     0004 01rr                      1- 3186     	MOVR	r0x1068,W
     0005 000r                      1- 3187     	IOST	_IOSTB
                                    1- 3188     	.line	484, "main.c"; 	L2OUT;
     0006 001r                      1- 3189     	IOSTR	_IOSTB
     0007 00rr                      1- 3190     	MOVAR	r0x1068
     0008 1Drr                      1- 3191     	BCR	r0x1068,3
     0009 01rr                      1- 3192     	MOVR	r0x1068,W
     000A 000r                      1- 3193     	IOST	_IOSTB
                                    1- 3194     	.line	485, "main.c"; 	L3H;
     000B 18rr                      1- 3195     	BSR	_PORTB,1
                                    1- 3196     	.line	486, "main.c"; 	L2L;
     000C 1Drr                      1- 3197     	BCR	_PORTB,3
                                    1- 3198     	.line	487, "main.c"; 	delay(80);
     000D 2150                      1- 3199     	MOVIA	0x50
                                    1- 3200     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3201     	.line	488, "main.c"; 	LedInput();
                                    1- 3202     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3203     	.line	489, "main.c"; 	}
                                    1- 3204     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3205     ; exit point of _LED4ON
                                    1- 3207     ;***
                                    1- 3208     ;  pBlock Stats: dbName = C
                                    1- 3209     ;***
                                    1- 3210     ;has an exit
                                    1- 3211     ;functions called:
                                    1- 3212     ;   _delay
                                    1- 3213     ;   _LedInput
                                    1- 3214     ;   _delay
                                    1- 3215     ;   _LedInput
                                    1- 3216     ;1 compiler assigned register :
                                    1- 3217     ;   r0x1069
                                    1- 3218     ;; Starting pCode block
                                    1- 3219     .segment "code"; module=main, function=_LED3ON
     0000                           1- 3221     _LED3ON:
                                    1- 3222     ; 2 exit points
                                    1- 3223     	.line	473, "main.c"; 	L3OUT;
     0000 001r                      1- 3224     	IOSTR	_IOSTB
                                    1- 3225     	BANKSEL	r0x1069
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3226     	MOVAR	r0x1069
     0003 1Crr                      1- 3227     	BCR	r0x1069,1
     0004 01rr                      1- 3228     	MOVR	r0x1069,W
     0005 000r                      1- 3229     	IOST	_IOSTB
                                    1- 3230     	.line	474, "main.c"; 	L2OUT;
     0006 001r                      1- 3231     	IOSTR	_IOSTB
     0007 00rr                      1- 3232     	MOVAR	r0x1069
     0008 1Drr                      1- 3233     	BCR	r0x1069,3
     0009 01rr                      1- 3234     	MOVR	r0x1069,W
     000A 000r                      1- 3235     	IOST	_IOSTB
                                    1- 3236     	.line	475, "main.c"; 	L2H;
     000B 19rr                      1- 3237     	BSR	_PORTB,3
                                    1- 3238     	.line	476, "main.c"; 	L3L;
     000C 1Crr                      1- 3239     	BCR	_PORTB,1
                                    1- 3240     	.line	477, "main.c"; 	delay(80);
     000D 2150                      1- 3241     	MOVIA	0x50
                                    1- 3242     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3243     	.line	478, "main.c"; 	LedInput();
                                    1- 3244     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3245     	.line	479, "main.c"; 	}
                                    1- 3246     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3247     ; exit point of _LED3ON
                                    1- 3249     ;***
                                    1- 3250     ;  pBlock Stats: dbName = C
                                    1- 3251     ;***
                                    1- 3252     ;has an exit
                                    1- 3253     ;functions called:
                                    1- 3254     ;   _delay
                                    1- 3255     ;   _LedInput
                                    1- 3256     ;   _delay
                                    1- 3257     ;   _LedInput
                                    1- 3258     ;1 compiler assigned register :
                                    1- 3259     ;   r0x106A
                                    1- 3260     ;; Starting pCode block
                                    1- 3261     .segment "code"; module=main, function=_LED2ON
     0000                           1- 3263     _LED2ON:
                                    1- 3264     ; 2 exit points
                                    1- 3265     	.line	463, "main.c"; 	L1OUT;
     0000 001r                      1- 3266     	IOSTR	_IOSTA
                                    1- 3267     	BANKSEL	r0x106A
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3268     	MOVAR	r0x106A
     0003 1Frr                      1- 3269     	BCR	r0x106A,7
     0004 01rr                      1- 3270     	MOVR	r0x106A,W
     0005 000r                      1- 3271     	IOST	_IOSTA
                                    1- 3272     	.line	464, "main.c"; 	L3OUT;
     0006 001r                      1- 3273     	IOSTR	_IOSTB
     0007 00rr                      1- 3274     	MOVAR	r0x106A
     0008 1Crr                      1- 3275     	BCR	r0x106A,1
     0009 01rr                      1- 3276     	MOVR	r0x106A,W
     000A 000r                      1- 3277     	IOST	_IOSTB
                                    1- 3278     	.line	465, "main.c"; 	L3H;
     000B 18rr                      1- 3279     	BSR	_PORTB,1
                                    1- 3280     	.line	466, "main.c"; 	L1L;
                                    1- 3281     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Frr                      1- 3282     	BCR	_PORTA,7
                                    1- 3283     	.line	467, "main.c"; 	delay(80);
     000E 2150                      1- 3284     	MOVIA	0x50
                                    1- 3285     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3286     	.line	468, "main.c"; 	LedInput();
                                    1- 3287     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3288     	.line	469, "main.c"; 	}
                                    1- 3289     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3290     ; exit point of _LED2ON
                                    1- 3292     ;***
                                    1- 3293     ;  pBlock Stats: dbName = C
                                    1- 3294     ;***
                                    1- 3295     ;has an exit
                                    1- 3296     ;functions called:
                                    1- 3297     ;   _delay
                                    1- 3298     ;   _LedInput
                                    1- 3299     ;   _delay
                                    1- 3300     ;   _LedInput
                                    1- 3301     ;1 compiler assigned register :
                                    1- 3302     ;   r0x106B
                                    1- 3303     ;; Starting pCode block
                                    1- 3304     .segment "code"; module=main, function=_LED1ON
     0000                           1- 3306     _LED1ON:
                                    1- 3307     ; 2 exit points
                                    1- 3308     	.line	453, "main.c"; 	L3OUT;
     0000 001r                      1- 3309     	IOSTR	_IOSTB
                                    1- 3310     	BANKSEL	r0x106B
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3311     	MOVAR	r0x106B
     0003 1Crr                      1- 3312     	BCR	r0x106B,1
     0004 01rr                      1- 3313     	MOVR	r0x106B,W
     0005 000r                      1- 3314     	IOST	_IOSTB
                                    1- 3315     	.line	454, "main.c"; 	L1OUT;
     0006 001r                      1- 3316     	IOSTR	_IOSTA
     0007 00rr                      1- 3317     	MOVAR	r0x106B
     0008 1Frr                      1- 3318     	BCR	r0x106B,7
     0009 01rr                      1- 3319     	MOVR	r0x106B,W
     000A 000r                      1- 3320     	IOST	_IOSTA
                                    1- 3321     	.line	455, "main.c"; 	L1H;
                                    1- 3322     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 1Brr                      1- 3323     	BSR	_PORTA,7
                                    1- 3324     	.line	456, "main.c"; 	L3L;
     000D 1Crr                      1- 3325     	BCR	_PORTB,1
                                    1- 3326     	.line	457, "main.c"; 	delay(80);
     000E 2150                      1- 3327     	MOVIA	0x50
                                    1- 3328     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3329     	.line	458, "main.c"; 	LedInput();
                                    1- 3330     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3331     	.line	459, "main.c"; 	}
                                    1- 3332     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3333     ; exit point of _LED1ON
                                    1- 3335     ;***
                                    1- 3336     ;  pBlock Stats: dbName = C
                                    1- 3337     ;***
                                    1- 3338     ;has an exit
                                    1- 3339     ;1 compiler assigned register :
                                    1- 3340     ;   r0x1062
                                    1- 3341     ;; Starting pCode block
                                    1- 3342     .segment "code"; module=main, function=_LedInput
     0000                           1- 3344     _LedInput:
                                    1- 3345     ; 2 exit points
                                    1- 3346     	.line	445, "main.c"; 	IOSTA |= 0x80;
     0000 001r                      1- 3347     	IOSTR	_IOSTA
                                    1- 3348     	BANKSEL	r0x1062
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3349     	MOVAR	r0x1062
     0003 1Brr                      1- 3350     	BSR	r0x1062,7
     0004 01rr                      1- 3351     	MOVR	r0x1062,W
     0005 000r                      1- 3352     	IOST	_IOSTA
                                    1- 3353     	.line	446, "main.c"; 	IOSTB |= 0x0B;
     0006 001r                      1- 3354     	IOSTR	_IOSTB
     0007 00rr                      1- 3355     	MOVAR	r0x1062
     0008 210B                      1- 3356     	MOVIA	0x0b
     0009 11rr                      1- 3357     	IORAR	r0x1062,F
     000A 01rr                      1- 3358     	MOVR	r0x1062,W
     000B 000r                      1- 3359     	IOST	_IOSTB
                                    1- 3360     	.line	447, "main.c"; 	PORTA &= 0x7F;
                                    1- 3361     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Frr                      1- 3362     	BCR	_PORTA,7
                                    1- 3363     	.line	448, "main.c"; 	PORTB &= 0xF4;
     000E 21F4                      1- 3364     	MOVIA	0xf4
     000F 10rr                      1- 3365     	ANDAR	_PORTB,F
                                    1- 3366     	.line	449, "main.c"; 	}
                                    1- 3367     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3368     ; exit point of _LedInput
                                    1- 3370     ;***
                                    1- 3371     ;  pBlock Stats: dbName = C
                                    1- 3372     ;***
                                    1- 3373     ;has an exit
                                    1- 3374     ;functions called:
                                    1- 3375     ;   _LedInput
                                    1- 3376     ;   _LedInput
                                    1- 3377     ;   _LED8ON
                                    1- 3378     ;   _LED7ON
                                    1- 3379     ;   _LED6ON
                                    1- 3380     ;   _LED5ON
                                    1- 3381     ;   _LED4ON
                                    1- 3382     ;   _LED3ON
                                    1- 3383     ;   _LED2ON
                                    1- 3384     ;   _LED1ON
                                    1- 3385     ;   _LedInput
                                    1- 3386     ;   _LedInput
                                    1- 3387     ;   _LED8ON
                                    1- 3388     ;   _LED7ON
                                    1- 3389     ;   _LED6ON
                                    1- 3390     ;   _LED5ON
                                    1- 3391     ;   _LED4ON
                                    1- 3392     ;   _LED3ON
                                    1- 3393     ;   _LED2ON
                                    1- 3394     ;   _LED1ON
                                    1- 3395     ;; Starting pCode block
                                    1- 3396     .segment "code"; module=main, function=_ledShow
     0000                           1- 3398     _ledShow:
                                    1- 3399     ; 2 exit points
                                    1- 3400     	.line	393, "main.c"; 	if(ledDeadTime > 0 && workStep == 0)
                                    1- 3401     	BANKSEL	_ledDeadTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 3402     	MOVR	_ledDeadTime,W
     0002 0D03                      1- 3403     	BTRSC	STATUS,2
                                    1- 3404     	MGOTO	_00327_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3405     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 3406     	MOVR	_workStep,W
     0006 0903                      1- 3407     	BTRSS	STATUS,2
                                    1- 3408     	MGOTO	_00327_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3409     	.line	395, "main.c"; 	if(ledDeadTime % 2 == 0)
                                    1- 3410     	BANKSEL	_ledDeadTime
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 0Crr                      1- 3411     	BTRSC	_ledDeadTime,0
                                    1- 3412     	MGOTO	_00319_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3413     	.line	397, "main.c"; 	ledStep = 0;
                                    1- 3414     	BANKSEL	_ledStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 02rr                      1- 3415     	CLRR	_ledStep
                                    1- 3416     	MGOTO	_00007_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 3417     _00319_DS_:
                                    1- 3418     	.line	401, "main.c"; 	ledStep = tempLedStep;
                                    1- 3419     	BANKSEL	_tempLedStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 3420     	MOVR	_tempLedStep,W
                                    1- 3421     	BANKSEL	_ledStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 3422     	MOVAR	_ledStep
                                    1- 3423     	MGOTO	_00007_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
     0013                           1- 3424     _00327_DS_:
                                    1- 3425     	.line	404, "main.c"; 	else if(workStep > 0)
                                    1- 3426     	BANKSEL	_workStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 3427     	MOVR	_workStep,W
     0015 0D03                      1- 3428     	BTRSC	STATUS,2
                                    1- 3429     	MGOTO	_00324_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3430     	.line	406, "main.c"; 	ledStep = workStep;
     0017 01rr                      1- 3431     	MOVR	_workStep,W
                                    1- 3432     	BANKSEL	_ledStep
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 00rr                      1- 3433     	MOVAR	_ledStep
                                    1- 3434     	MGOTO	_00007_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
     001B                           1- 3435     _00324_DS_:
                                    1- 3436     	.line	408, "main.c"; 	else if(chrgFlag == 0)
                                    1- 3437     	BANKSEL	_chrgFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1- 3438     	MOVR	_chrgFlag,W
     001D 0903                      1- 3439     	BTRSS	STATUS,2
                                    1- 3440     	MGOTO	_00007_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3441     	.line	410, "main.c"; 	ledStep = 0;
                                    1- 3442     	BANKSEL	_ledStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 02rr                      1- 3443     	CLRR	_ledStep
     0021                           1- 3444     _00007_DS_:
                                    1- 3445     	.line	413, "main.c"; 	LedInput();
                                    1- 3446     	MCALL	_LedInput
     0021 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3447     	.line	414, "main.c"; 	switch(ledStep)
     0022 210B                      1- 3448     	MOVIA	0x0b
                                    1- 3449     	BANKSEL	_ledStep
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 04rr                      1- 3450     	SUBAR	_ledStep,W
     0025 0C03                      1- 3451     	BTRSC	STATUS,0
                                    1- 3452     	MGOTO	_00342_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027 21rr                      1- 3453     	MOVIA	((_00363_DS_ >> 8) & 0xff)
     0028 008A                      1- 3454     	MOVAR	PCHBUF
     0029 01rr                      1- 3455     	MOVR	_ledStep,W
     002A 25rr                      1- 3456     	ADDIA	_00363_DS_
     002B 0C03                      1- 3457     	BTRSC	STATUS,0
     002C 058A                      1- 3458     	INCR	PCHBUF,F
     002D 0082                      1- 3459     	MOVAR	PCL
     002E                           1- 3460     _00363_DS_:
                                    1- 3461     	MGOTO	_00330_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3462     	MGOTO	_00340_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3463     	MGOTO	_00339_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3464     	MGOTO	_00338_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3465     	MGOTO	_00337_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3466     	MGOTO	_00336_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3467     	MGOTO	_00335_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3468     	MGOTO	_00334_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3469     	MGOTO	_00333_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3470     	MGOTO	_00333_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3471     	MGOTO	_00333_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
     0039                           1- 3472     _00330_DS_:
                                    1- 3473     	.line	417, "main.c"; 	LedInput();
                                    1- 3474     	MCALL	_LedInput
     0039 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3475     	.line	418, "main.c"; 	break;
                                    1- 3476     	MGOTO	_00342_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
     003B                           1- 3477     _00333_DS_:
                                    1- 3478     	.line	422, "main.c"; 	LED8ON();
                                    1- 3479     	MCALL	_LED8ON
     003B 2rrr                      3-   66 m1      LCALL rom_address
     003C                           1- 3480     _00334_DS_:
                                    1- 3481     	.line	424, "main.c"; 	LED7ON();
                                    1- 3482     	MCALL	_LED7ON
     003C 2rrr                      3-   66 m1      LCALL rom_address
     003D                           1- 3483     _00335_DS_:
                                    1- 3484     	.line	426, "main.c"; 	LED6ON();
                                    1- 3485     	MCALL	_LED6ON
     003D 2rrr                      3-   66 m1      LCALL rom_address
     003E                           1- 3486     _00336_DS_:
                                    1- 3487     	.line	428, "main.c"; 	LED5ON();
                                    1- 3488     	MCALL	_LED5ON
     003E 2rrr                      3-   66 m1      LCALL rom_address
     003F                           1- 3489     _00337_DS_:
                                    1- 3490     	.line	430, "main.c"; 	LED4ON();
                                    1- 3491     	MCALL	_LED4ON
     003F 2rrr                      3-   66 m1      LCALL rom_address
     0040                           1- 3492     _00338_DS_:
                                    1- 3493     	.line	432, "main.c"; 	LED3ON();
                                    1- 3494     	MCALL	_LED3ON
     0040 2rrr                      3-   66 m1      LCALL rom_address
     0041                           1- 3495     _00339_DS_:
                                    1- 3496     	.line	434, "main.c"; 	LED2ON();
                                    1- 3497     	MCALL	_LED2ON
     0041 2rrr                      3-   66 m1      LCALL rom_address
     0042                           1- 3498     _00340_DS_:
                                    1- 3499     	.line	436, "main.c"; 	LED1ON();
                                    1- 3500     	MCALL	_LED1ON
     0042 2rrr                      3-   66 m1      LCALL rom_address
     0043                           1- 3501     _00342_DS_:
                                    1- 3502     	.line	439, "main.c"; 	}
                                    1- 3503     	RETURN	
     0043 0010                      3-   40 m1      ret
                                    1- 3504     ; exit point of _ledShow
                                    1- 3506     ;***
                                    1- 3507     ;  pBlock Stats: dbName = C
                                    1- 3508     ;***
                                    1- 3509     ;has an exit
                                    1- 3510     ;functions called:
                                    1- 3511     ;   _LedInput
                                    1- 3512     ;   _LedInput
                                    1- 3513     ;; Starting pCode block
                                    1- 3514     .segment "code"; module=main, function=_initSys
     0000                           1- 3516     _initSys:
                                    1- 3517     ; 2 exit points
                                    1- 3518     	.line	361, "main.c"; 	DISI();
     0000 0013                      1- 3519     	DISI
                                    1- 3520     	.line	362, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input ;
     0001 2178                      1- 3521     	MOVIA	0x78
     0002 000r                      1- 3522     	IOST	_IOSTA
                                    1- 3523     	.line	363, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 3524     	CLRA	
     0004 000r                      1- 3525     	IOST	_IOSTB
                                    1- 3526     	.line	364, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 3527     	CLRR	_PORTB
                                    1- 3528     	.line	365, "main.c"; 	PORTA = 0x00;
                                    1- 3529     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 3530     	CLRR	_PORTA
                                    1- 3531     	.line	366, "main.c"; 	LedInput();
                                    1- 3532     	MCALL	_LedInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3533     	.line	367, "main.c"; 	APHCON = 0xBF;
     0009 21BF                      1- 3534     	MOVIA	0xbf
     000A 000r                      1- 3535     	IOST	_APHCON
                                    1- 3536     	.line	368, "main.c"; 	BPHCON = 0xFF;
     000B 21FF                      1- 3537     	MOVIA	0xff
     000C 00rr                      1- 3538     	MOVAR	_BPHCON
                                    1- 3539     	.line	369, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 3540     	MOVAR	_ABPLCON
                                    1- 3541     	.line	371, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1- 3542     	MOVIA	0x01
     000F 00rr                      1- 3543     	MOVAR	_INTE
                                    1- 3544     	.line	373, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 3545     	CLRA	
     0011 000r                      1- 3546     	IOST	_PCON1
                                    1- 3547     	.line	375, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 3548     	MOVIA	0x37
     0013 00rr                      1- 3549     	MOVAR	_TMR0
                                    1- 3550     	.line	376, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0014 2101                      1- 3551     	MOVIA	0x01
     0015 0003                      1- 3552     	T0MD	
                                    1- 3553     	.line	378, "main.c"; 	PCON1 = C_TMR0_En;
     0016 000r                      1- 3554     	IOST	_PCON1
                                    1- 3555     	.line	381, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0017 2198                      1- 3556     	MOVIA	0x98
     0018 00rr                      1- 3557     	MOVAR	_PCON
                                    1- 3558     	.line	384, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0019 2101                      1- 3559     	MOVIA	0x01
     001A 000r                      1- 3560     	IOST	_PCON1
                                    1- 3561     	.line	385, "main.c"; 	ENI();
     001B 0004                      1- 3562     	ENI
                                    1- 3563     	.line	386, "main.c"; 	}
                                    1- 3564     	RETURN	
     001C 0010                      3-   40 m1      ret
                                    1- 3565     ; exit point of _initSys
                                    1- 3567     ;***
                                    1- 3568     ;  pBlock Stats: dbName = C
                                    1- 3569     ;***
                                    1- 3570     ;has an exit
                                    1- 3571     ;functions called:
                                    1- 3572     ;   _pwmStop
                                    1- 3573     ;   _pwmStop
                                    1- 3574     ;; Starting pCode block
                                    1- 3575     .segment "code"; module=main, function=_powerOff
     0000                           1- 3577     _powerOff:
                                    1- 3578     ; 2 exit points
                                    1- 3579     	.line	352, "main.c"; 	workStep = 0;
                                    1- 3580     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 3581     	CLRR	_workStep
                                    1- 3582     	.line	353, "main.c"; 	pwmStop();
                                    1- 3583     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3584     	.line	354, "main.c"; 	ledStep = 0;
                                    1- 3585     	BANKSEL	_ledStep
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 3586     	CLRR	_ledStep
                                    1- 3587     	.line	355, "main.c"; 	}
                                    1- 3588     	RETURN	
     0005 0010                      3-   40 m1      ret
                                    1- 3589     ; exit point of _powerOff
                                    1- 3591     ;***
                                    1- 3592     ;  pBlock Stats: dbName = C
                                    1- 3593     ;***
                                    1- 3594     ;has an exit
                                    1- 3595     ;functions called:
                                    1- 3596     ;   _keyRead
                                    1- 3597     ;   _pwmInit
                                    1- 3598     ;   _powerOff
                                    1- 3599     ;   _pwmInit
                                    1- 3600     ;   _keyRead
                                    1- 3601     ;   _pwmInit
                                    1- 3602     ;   _powerOff
                                    1- 3603     ;   _pwmInit
                                    1- 3604     ;1 compiler assigned register :
                                    1- 3605     ;   r0x106C
                                    1- 3606     ;; Starting pCode block
                                    1- 3607     .segment "code"; module=main, function=_keyCtr
                                    1- 3609     ;local variable name mapping:
     0000                           1- 3611     _keyCtr:
                                    1- 3612     ; 2 exit points
                                    1- 3613     	.line	253, "main.c"; 	char kclick = keyRead(0x40 & (~PORTA));
                                    1- 3614     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 3615     	COMR	_PORTA,W
                                    1- 3616     	BANKSEL	r0x106C
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 3617     	MOVAR	r0x106C
     0004 2140                      1- 3618     	MOVIA	0x40
     0005 10rr                      1- 3619     	ANDAR	r0x106C,F
     0006 01rr                      1- 3620     	MOVR	r0x106C,W
                                    1- 3621     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3622     	BANKSEL	r0x106C
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 3623     	MOVAR	r0x106C
                                    1- 3624     	.line	254, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 3625     	XORIA	0x01
     000B 0903                      1- 3626     	BTRSS	STATUS,2
                                    1- 3627     	MGOTO	_00303_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3628     	.line	256, "main.c"; 	count500ms = 0;
                                    1- 3629     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 3630     	CLRR	_count500ms
                                    1- 3631     	.line	257, "main.c"; 	ledLightTime = 0;
                                    1- 3632     	BANKSEL	_ledLightTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 3633     	CLRR	_ledLightTime
                                    1- 3634     	.line	258, "main.c"; 	if(workStep == 0)
                                    1- 3635     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 3636     	MOVR	_workStep,W
     0013 0903                      1- 3637     	BTRSS	STATUS,2
                                    1- 3638     	MGOTO	_00237_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3639     	.line	260, "main.c"; 	count1s = 0;
                                    1- 3640     	BANKSEL	_count1s
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 3641     	CLRR	_count1s
                                    1- 3642     	.line	266, "main.c"; 	return;
                                    1- 3643     	MGOTO	_00305_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
     0018                           1- 3644     _00237_DS_:
                                    1- 3645     	.line	268, "main.c"; 	ledTime = 0;
                                    1- 3646     	BANKSEL	_ledTime
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 3647     	CLRR	_ledTime
                                    1- 3648     	.line	269, "main.c"; 	if(++workStep > 8)
                                    1- 3649     	BANKSEL	_workStep
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 05rr                      1- 3650     	INCR	_workStep,F
                                    1- 3651     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3652     ;;unsigned compare: left >= lit (0x9=9), size=1
     001C 2109                      1- 3653     	MOVIA	0x09
     001D 04rr                      1- 3654     	SUBAR	_workStep,W
     001E 0803                      1- 3655     	BTRSS	STATUS,0
                                    1- 3656     	MGOTO	_00239_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3657     	.line	270, "main.c"; 	workStep = 1;
     0020 2101                      1- 3658     	MOVIA	0x01
     0021 00rr                      1- 3659     	MOVAR	_workStep
     0022                           1- 3660     _00239_DS_:
                                    1- 3661     	.line	271, "main.c"; 	shanshuoTime = 6;
     0022 2106                      1- 3662     	MOVIA	0x06
                                    1- 3663     	BANKSEL	_shanshuoTime
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 3664     	MOVAR	_shanshuoTime
                                    1- 3665     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3666     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 3667     	.line	273, "main.c"; 	if(pwStep <= 4)
     0025 2105                      1- 3668     	MOVIA	0x05
                                    1- 3669     	BANKSEL	_pwStep
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 04rr                      1- 3670     	SUBAR	_pwStep,W
     0028 0C03                      1- 3671     	BTRSC	STATUS,0
                                    1- 3672     	MGOTO	_00287_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3673     	.line	275, "main.c"; 	if(workStep == 1)
                                    1- 3674     	BANKSEL	_workStep
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1- 3675     	MOVR	_workStep,W
     002C 2401                      1- 3676     	XORIA	0x01
     002D 0903                      1- 3677     	BTRSS	STATUS,2
                                    1- 3678     	MGOTO	_00261_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3679     	.line	276, "main.c"; 	maxDuty = 50;
     002F 2132                      1- 3680     	MOVIA	0x32
                                    1- 3681     	BANKSEL	_maxDuty
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 00rr                      1- 3682     	MOVAR	_maxDuty
                                    1- 3683     	MGOTO	_00288_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033                           1- 3684     _00261_DS_:
                                    1- 3685     	.line	277, "main.c"; 	else if(workStep == 2)
                                    1- 3686     	BANKSEL	_workStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 3687     	MOVR	_workStep,W
     0035 2402                      1- 3688     	XORIA	0x02
     0036 0903                      1- 3689     	BTRSS	STATUS,2
                                    1- 3690     	MGOTO	_00258_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3691     	.line	278, "main.c"; 	maxDuty = 52;
     0038 2134                      1- 3692     	MOVIA	0x34
                                    1- 3693     	BANKSEL	_maxDuty
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 00rr                      1- 3694     	MOVAR	_maxDuty
                                    1- 3695     	MGOTO	_00288_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
     003C                           1- 3696     _00258_DS_:
                                    1- 3697     	.line	279, "main.c"; 	else if(workStep == 3)
                                    1- 3698     	BANKSEL	_workStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 3699     	MOVR	_workStep,W
     003E 2403                      1- 3700     	XORIA	0x03
     003F 0903                      1- 3701     	BTRSS	STATUS,2
                                    1- 3702     	MGOTO	_00255_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3703     	.line	280, "main.c"; 	maxDuty = 54;
     0041 2136                      1- 3704     	MOVIA	0x36
                                    1- 3705     	BANKSEL	_maxDuty
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1- 3706     	MOVAR	_maxDuty
                                    1- 3707     	MGOTO	_00288_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
     0045                           1- 3708     _00255_DS_:
                                    1- 3709     	.line	281, "main.c"; 	else if(workStep == 4)
                                    1- 3710     	BANKSEL	_workStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1- 3711     	MOVR	_workStep,W
     0047 2404                      1- 3712     	XORIA	0x04
     0048 0903                      1- 3713     	BTRSS	STATUS,2
                                    1- 3714     	MGOTO	_00252_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3715     	.line	282, "main.c"; 	maxDuty = 56;
     004A 2138                      1- 3716     	MOVIA	0x38
                                    1- 3717     	BANKSEL	_maxDuty
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 00rr                      1- 3718     	MOVAR	_maxDuty
                                    1- 3719     	MGOTO	_00288_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
     004E                           1- 3720     _00252_DS_:
                                    1- 3721     	.line	283, "main.c"; 	else if(workStep == 5)
                                    1- 3722     	BANKSEL	_workStep
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1- 3723     	MOVR	_workStep,W
     0050 2405                      1- 3724     	XORIA	0x05
     0051 0903                      1- 3725     	BTRSS	STATUS,2
                                    1- 3726     	MGOTO	_00249_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3727     	.line	284, "main.c"; 	maxDuty = 58;
     0053 213A                      1- 3728     	MOVIA	0x3a
                                    1- 3729     	BANKSEL	_maxDuty
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 00rr                      1- 3730     	MOVAR	_maxDuty
                                    1- 3731     	MGOTO	_00288_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
     0057                           1- 3732     _00249_DS_:
                                    1- 3733     	.line	285, "main.c"; 	else if(workStep == 6)
                                    1- 3734     	BANKSEL	_workStep
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 01rr                      1- 3735     	MOVR	_workStep,W
     0059 2406                      1- 3736     	XORIA	0x06
     005A 0903                      1- 3737     	BTRSS	STATUS,2
                                    1- 3738     	MGOTO	_00246_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3739     	.line	286, "main.c"; 	maxDuty = 60;
     005C 213C                      1- 3740     	MOVIA	0x3c
                                    1- 3741     	BANKSEL	_maxDuty
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 00rr                      1- 3742     	MOVAR	_maxDuty
                                    1- 3743     	MGOTO	_00288_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
     0060                           1- 3744     _00246_DS_:
                                    1- 3745     	.line	287, "main.c"; 	else if(workStep == 7)
                                    1- 3746     	BANKSEL	_workStep
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1- 3747     	MOVR	_workStep,W
     0062 2407                      1- 3748     	XORIA	0x07
     0063 0903                      1- 3749     	BTRSS	STATUS,2
                                    1- 3750     	MGOTO	_00243_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3751     	.line	288, "main.c"; 	maxDuty = 62;
     0065 213E                      1- 3752     	MOVIA	0x3e
                                    1- 3753     	BANKSEL	_maxDuty
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 00rr                      1- 3754     	MOVAR	_maxDuty
                                    1- 3755     	MGOTO	_00288_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
     0069                           1- 3756     _00243_DS_:
                                    1- 3757     	.line	289, "main.c"; 	else if(workStep == 8)
                                    1- 3758     	BANKSEL	_workStep
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 01rr                      1- 3759     	MOVR	_workStep,W
     006B 2408                      1- 3760     	XORIA	0x08
     006C 0903                      1- 3761     	BTRSS	STATUS,2
                                    1- 3762     	MGOTO	_00288_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3763     	.line	290, "main.c"; 	maxDuty = 64;
     006E 2140                      1- 3764     	MOVIA	0x40
                                    1- 3765     	BANKSEL	_maxDuty
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 00rr                      1- 3766     	MOVAR	_maxDuty
                                    1- 3767     	MGOTO	_00288_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
     0072                           1- 3768     _00287_DS_:
                                    1- 3769     	.line	294, "main.c"; 	if(workStep == 1)
                                    1- 3770     	BANKSEL	_workStep
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 01rr                      1- 3771     	MOVR	_workStep,W
     0074 2401                      1- 3772     	XORIA	0x01
     0075 0903                      1- 3773     	BTRSS	STATUS,2
                                    1- 3774     	MGOTO	_00284_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3775     	.line	295, "main.c"; 	maxDuty = 40;
     0077 2128                      1- 3776     	MOVIA	0x28
                                    1- 3777     	BANKSEL	_maxDuty
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 00rr                      1- 3778     	MOVAR	_maxDuty
                                    1- 3779     	MGOTO	_00288_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
     007B                           1- 3780     _00284_DS_:
                                    1- 3781     	.line	296, "main.c"; 	else if(workStep == 2)
                                    1- 3782     	BANKSEL	_workStep
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 01rr                      1- 3783     	MOVR	_workStep,W
     007D 2402                      1- 3784     	XORIA	0x02
     007E 0903                      1- 3785     	BTRSS	STATUS,2
                                    1- 3786     	MGOTO	_00281_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3787     	.line	297, "main.c"; 	maxDuty = 44;
     0080 212C                      1- 3788     	MOVIA	0x2c
                                    1- 3789     	BANKSEL	_maxDuty
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 00rr                      1- 3790     	MOVAR	_maxDuty
                                    1- 3791     	MGOTO	_00288_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
     0084                           1- 3792     _00281_DS_:
                                    1- 3793     	.line	298, "main.c"; 	else if(workStep == 3)
                                    1- 3794     	BANKSEL	_workStep
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 01rr                      1- 3795     	MOVR	_workStep,W
     0086 2403                      1- 3796     	XORIA	0x03
     0087 0903                      1- 3797     	BTRSS	STATUS,2
                                    1- 3798     	MGOTO	_00278_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3799     	.line	299, "main.c"; 	maxDuty = 48;
     0089 2130                      1- 3800     	MOVIA	0x30
                                    1- 3801     	BANKSEL	_maxDuty
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 00rr                      1- 3802     	MOVAR	_maxDuty
                                    1- 3803     	MGOTO	_00288_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
     008D                           1- 3804     _00278_DS_:
                                    1- 3805     	.line	300, "main.c"; 	else if(workStep == 4)
                                    1- 3806     	BANKSEL	_workStep
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 01rr                      1- 3807     	MOVR	_workStep,W
     008F 2404                      1- 3808     	XORIA	0x04
     0090 0903                      1- 3809     	BTRSS	STATUS,2
                                    1- 3810     	MGOTO	_00275_DS_
     0091 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3811     	.line	301, "main.c"; 	maxDuty = 52;
     0092 2134                      1- 3812     	MOVIA	0x34
                                    1- 3813     	BANKSEL	_maxDuty
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 00rr                      1- 3814     	MOVAR	_maxDuty
                                    1- 3815     	MGOTO	_00288_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
     0096                           1- 3816     _00275_DS_:
                                    1- 3817     	.line	302, "main.c"; 	else if(workStep == 5)
                                    1- 3818     	BANKSEL	_workStep
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 01rr                      1- 3819     	MOVR	_workStep,W
     0098 2405                      1- 3820     	XORIA	0x05
     0099 0903                      1- 3821     	BTRSS	STATUS,2
                                    1- 3822     	MGOTO	_00272_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3823     	.line	303, "main.c"; 	maxDuty = 55;
     009B 2137                      1- 3824     	MOVIA	0x37
                                    1- 3825     	BANKSEL	_maxDuty
     009C rrrr                      3-  110 m1      .banksel ram_address
     009D 00rr                      1- 3826     	MOVAR	_maxDuty
                                    1- 3827     	MGOTO	_00288_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
     009F                           1- 3828     _00272_DS_:
                                    1- 3829     	.line	304, "main.c"; 	else if(workStep == 6)
                                    1- 3830     	BANKSEL	_workStep
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 01rr                      1- 3831     	MOVR	_workStep,W
     00A1 2406                      1- 3832     	XORIA	0x06
     00A2 0903                      1- 3833     	BTRSS	STATUS,2
                                    1- 3834     	MGOTO	_00269_DS_
     00A3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3835     	.line	305, "main.c"; 	maxDuty = 58;
     00A4 213A                      1- 3836     	MOVIA	0x3a
                                    1- 3837     	BANKSEL	_maxDuty
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 00rr                      1- 3838     	MOVAR	_maxDuty
                                    1- 3839     	MGOTO	_00288_DS_
     00A7 3rrr                      3-   63 m1      LGOTO rom_address
     00A8                           1- 3840     _00269_DS_:
                                    1- 3841     	.line	306, "main.c"; 	else if(workStep == 7)
                                    1- 3842     	BANKSEL	_workStep
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 01rr                      1- 3843     	MOVR	_workStep,W
     00AA 2407                      1- 3844     	XORIA	0x07
     00AB 0903                      1- 3845     	BTRSS	STATUS,2
                                    1- 3846     	MGOTO	_00266_DS_
     00AC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3847     	.line	307, "main.c"; 	maxDuty = 61;
     00AD 213D                      1- 3848     	MOVIA	0x3d
                                    1- 3849     	BANKSEL	_maxDuty
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 00rr                      1- 3850     	MOVAR	_maxDuty
                                    1- 3851     	MGOTO	_00288_DS_
     00B0 3rrr                      3-   63 m1      LGOTO rom_address
     00B1                           1- 3852     _00266_DS_:
                                    1- 3853     	.line	308, "main.c"; 	else if(workStep == 8)
                                    1- 3854     	BANKSEL	_workStep
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 01rr                      1- 3855     	MOVR	_workStep,W
     00B3 2408                      1- 3856     	XORIA	0x08
     00B4 0903                      1- 3857     	BTRSS	STATUS,2
                                    1- 3858     	MGOTO	_00288_DS_
     00B5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3859     	.line	309, "main.c"; 	maxDuty = 64;
     00B6 2140                      1- 3860     	MOVIA	0x40
                                    1- 3861     	BANKSEL	_maxDuty
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 00rr                      1- 3862     	MOVAR	_maxDuty
     00B9                           1- 3863     _00288_DS_:
                                    1- 3864     	.line	311, "main.c"; 	if(workStep > 0)
                                    1- 3865     	BANKSEL	_workStep
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 01rr                      1- 3866     	MOVR	_workStep,W
     00BB 0D03                      1- 3867     	BTRSC	STATUS,2
                                    1- 3868     	MGOTO	_00290_DS_
     00BC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3869     	.line	313, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 3870     	BANKSEL	_maxDuty
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 01rr                      1- 3871     	MOVR	_maxDuty,W
     00BF 00rr                      1- 3872     	SFUN	_PWM2DUTY
                                    1- 3873     	.line	314, "main.c"; 	pwmInit();
                                    1- 3874     	MCALL	_pwmInit
     00C0 2rrr                      3-   66 m1      LCALL rom_address
     00C1                           1- 3875     _00290_DS_:
                                    1- 3876     	.line	316, "main.c"; 	ledStep = workStep;
                                    1- 3877     	BANKSEL	_workStep
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 01rr                      1- 3878     	MOVR	_workStep,W
                                    1- 3879     	BANKSEL	_ledStep
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 00rr                      1- 3880     	MOVAR	_ledStep
                                    1- 3881     	MGOTO	_00305_DS_
     00C5 3rrr                      3-   63 m1      LGOTO rom_address
     00C6                           1- 3882     _00303_DS_:
                                    1- 3883     	.line	318, "main.c"; 	else if(kclick == 2)
                                    1- 3884     	BANKSEL	r0x106C
     00C6 rrrr                      3-  110 m1      .banksel ram_address
     00C7 01rr                      1- 3885     	MOVR	r0x106C,W
     00C8 2402                      1- 3886     	XORIA	0x02
     00C9 0903                      1- 3887     	BTRSS	STATUS,2
                                    1- 3888     	MGOTO	_00305_DS_
     00CA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3889     	.line	320, "main.c"; 	if(workStep > 0)
                                    1- 3890     	BANKSEL	_workStep
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 01rr                      1- 3891     	MOVR	_workStep,W
     00CD 0D03                      1- 3892     	BTRSC	STATUS,2
                                    1- 3893     	MGOTO	_00298_DS_
     00CE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3894     	.line	322, "main.c"; 	powerOff();
                                    1- 3895     	MCALL	_powerOff
     00CF 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3896     	MGOTO	_00299_DS_
     00D0 3rrr                      3-   63 m1      LGOTO rom_address
     00D1                           1- 3897     _00298_DS_:
                                    1- 3898     	.line	326, "main.c"; 	if(pwStep == 0 || lockStart)
                                    1- 3899     	BANKSEL	_pwStep
     00D1 rrrr                      3-  110 m1      .banksel ram_address
     00D2 01rr                      1- 3900     	MOVR	_pwStep,W
     00D3 0D03                      1- 3901     	BTRSC	STATUS,2
                                    1- 3902     	MGOTO	_00291_DS_
     00D4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3903     	BANKSEL	_lockStart
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 01rr                      1- 3904     	MOVR	_lockStart,W
     00D7 0D03                      1- 3905     	BTRSC	STATUS,2
                                    1- 3906     	MGOTO	_00292_DS_
     00D8 3rrr                      3-   63 m1      LGOTO rom_address
     00D9                           1- 3907     _00291_DS_:
                                    1- 3908     	.line	329, "main.c"; 	lockStart = 1;
     00D9 2101                      1- 3909     	MOVIA	0x01
                                    1- 3910     	BANKSEL	_lockStart
     00DA rrrr                      3-  110 m1      .banksel ram_address
     00DB 00rr                      1- 3911     	MOVAR	_lockStart
                                    1- 3912     	.line	330, "main.c"; 	shandengTime = 500;
     00DC 21F4                      1- 3913     	MOVIA	0xf4
                                    1- 3914     	BANKSEL	_shandengTime
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 00rr                      1- 3915     	MOVAR	_shandengTime
     00DF 2101                      1- 3916     	MOVIA	0x01
     00E0 00rr                      1- 3917     	MOVAR	(_shandengTime + 1)
                                    1- 3918     	.line	331, "main.c"; 	return;	
                                    1- 3919     	MGOTO	_00305_DS_
     00E1 3rrr                      3-   63 m1      LGOTO rom_address
     00E2                           1- 3920     _00292_DS_:
                                    1- 3921     	.line	333, "main.c"; 	ledLightTime = 0;
                                    1- 3922     	BANKSEL	_ledLightTime
     00E2 rrrr                      3-  110 m1      .banksel ram_address
     00E3 02rr                      1- 3923     	CLRR	_ledLightTime
                                    1- 3924     	.line	334, "main.c"; 	workStep = 1;
     00E4 2101                      1- 3925     	MOVIA	0x01
                                    1- 3926     	BANKSEL	_workStep
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 00rr                      1- 3927     	MOVAR	_workStep
                                    1- 3928     	.line	335, "main.c"; 	PWM2DUTY = 80;
     00E7 2150                      1- 3929     	MOVIA	0x50
     00E8 00rr                      1- 3930     	SFUN	_PWM2DUTY
                                    1- 3931     	.line	336, "main.c"; 	currentDuty = 80;
                                    1- 3932     	BANKSEL	_currentDuty
     00E9 rrrr                      3-  110 m1      .banksel ram_address
     00EA 00rr                      1- 3933     	MOVAR	_currentDuty
                                    1- 3934     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3935     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 3936     	.line	337, "main.c"; 	if(pwStep <= 4)
     00EB 2105                      1- 3937     	MOVIA	0x05
                                    1- 3938     	BANKSEL	_pwStep
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 04rr                      1- 3939     	SUBAR	_pwStep,W
     00EE 0C03                      1- 3940     	BTRSC	STATUS,0
                                    1- 3941     	MGOTO	_00295_DS_
     00EF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3942     	.line	338, "main.c"; 	maxDuty = 50;
     00F0 2132                      1- 3943     	MOVIA	0x32
                                    1- 3944     	BANKSEL	_maxDuty
     00F1 rrrr                      3-  110 m1      .banksel ram_address
     00F2 00rr                      1- 3945     	MOVAR	_maxDuty
                                    1- 3946     	MGOTO	_00296_DS_
     00F3 3rrr                      3-   63 m1      LGOTO rom_address
     00F4                           1- 3947     _00295_DS_:
                                    1- 3948     	.line	340, "main.c"; 	maxDuty = 40;
     00F4 2128                      1- 3949     	MOVIA	0x28
                                    1- 3950     	BANKSEL	_maxDuty
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 00rr                      1- 3951     	MOVAR	_maxDuty
     00F7                           1- 3952     _00296_DS_:
                                    1- 3953     	.line	341, "main.c"; 	pwmInit();
                                    1- 3954     	MCALL	_pwmInit
     00F7 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3955     	.line	342, "main.c"; 	shanshuoTime = 16;
     00F8 2110                      1- 3956     	MOVIA	0x10
                                    1- 3957     	BANKSEL	_shanshuoTime
     00F9 rrrr                      3-  110 m1      .banksel ram_address
     00FA 00rr                      1- 3958     	MOVAR	_shanshuoTime
     00FB                           1- 3959     _00299_DS_:
                                    1- 3960     	.line	345, "main.c"; 	ledStep = workStep;
                                    1- 3961     	BANKSEL	_workStep
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 01rr                      1- 3962     	MOVR	_workStep,W
                                    1- 3963     	BANKSEL	_ledStep
     00FD rrrr                      3-  110 m1      .banksel ram_address
     00FE 00rr                      1- 3964     	MOVAR	_ledStep
     00FF                           1- 3965     _00305_DS_:
                                    1- 3966     	.line	347, "main.c"; 	}
                                    1- 3967     	RETURN	
     00FF 0010                      3-   40 m1      ret
                                    1- 3968     ; exit point of _keyCtr
                                    1- 3971     ;	code size estimation:
                                    1- 3972     ;	 1459+  411 =  1870 instructions ( 4562 byte)
                                    1- 3974     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810624
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062e.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
