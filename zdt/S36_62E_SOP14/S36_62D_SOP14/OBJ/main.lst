
                    Nyquest Technology Co., Ltd.

NYASM 2.30

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062E,c=on
                                    1-    9     	#include "ny8b062e.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_fgCtr
                                    1-   18     	extern	_LedCtr2
                                    1-   19     	extern	_checkInAD
                                    1-   20     	extern	_PORTAbits
                                    1-   21     	extern	_PORTBbits
                                    1-   22     	extern	_PCONbits
                                    1-   23     	extern	_BWUCONbits
                                    1-   24     	extern	_ABPLCONbits
                                    1-   25     	extern	_BPHCONbits
                                    1-   26     	extern	_INTEbits
                                    1-   27     	extern	_INTFbits
                                    1-   28     	extern	_ADMDbits
                                    1-   29     	extern	_ADRbits
                                    1-   30     	extern	_ADVREFHbits
                                    1-   31     	extern	_ADCRbits
                                    1-   32     	extern	_AWUCONbits
                                    1-   33     	extern	_PACONbits
                                    1-   34     	extern	_ADJMDbits
                                    1-   35     	extern	_INTEDGbits
                                    1-   36     	extern	_ANAENbits
                                    1-   37     	extern	_RFCbits
                                    1-   38     	extern	_INTE2bits
                                    1-   39     	extern	_INDF
                                    1-   40     	extern	_TMR0
                                    1-   41     	extern	_PCL
                                    1-   42     	extern	_STATUS
                                    1-   43     	extern	_FSR
                                    1-   44     	extern	_PORTA
                                    1-   45     	extern	_PORTB
                                    1-   46     	extern	_PCON
                                    1-   47     	extern	_BWUCON
                                    1-   48     	extern	_PCHBUF
                                    1-   49     	extern	_ABPLCON
                                    1-   50     	extern	_BPHCON
                                    1-   51     	extern	_INTE
                                    1-   52     	extern	_INTF
                                    1-   53     	extern	_ADMD
                                    1-   54     	extern	_ADR
                                    1-   55     	extern	_ADD
                                    1-   56     	extern	_ADVREFH
                                    1-   57     	extern	_ADCR
                                    1-   58     	extern	_AWUCON
                                    1-   59     	extern	_PACON
                                    1-   60     	extern	_ADJMD
                                    1-   61     	extern	_INTEDG
                                    1-   62     	extern	_TMRH
                                    1-   63     	extern	_ANAEN
                                    1-   64     	extern	_RFC
                                    1-   65     	extern	_TM3RH
                                    1-   66     	extern	_INTE2
                                    1-   67     	extern	_TMR1
                                    1-   68     	extern	_T1CR1
                                    1-   69     	extern	_T1CR2
                                    1-   70     	extern	_PWM1DUTY
                                    1-   71     	extern	_PS1CV
                                    1-   72     	extern	_BZ1CR
                                    1-   73     	extern	_IRCR
                                    1-   74     	extern	_TBHP
                                    1-   75     	extern	_TBHD
                                    1-   76     	extern	_TMR2
                                    1-   77     	extern	_T2CR1
                                    1-   78     	extern	_T2CR2
                                    1-   79     	extern	_PWM2DUTY
                                    1-   80     	extern	_PS2CV
                                    1-   81     	extern	_BZ2CR
                                    1-   82     	extern	_OSCCR
                                    1-   83     	extern	_TMR3
                                    1-   84     	extern	_T3CR1
                                    1-   85     	extern	_T3CR2
                                    1-   86     	extern	_PWM3DUTY
                                    1-   87     	extern	_PS3CV
                                    1-   88     	extern	_BZ3CR
                                    1-   89     	extern	_P4CR1
                                    1-   90     	extern	_PWM4DUTY
                                    1-   91     	extern	_IOSTA
                                    1-   92     	extern	_IOSTB
                                    1-   93     	extern	_APHCON
                                    1-   94     	extern	_PS0CV
                                    1-   95     	extern	_BODCON
                                    1-   96     	extern	_CMPCR
                                    1-   97     	extern	_PCON1
                                    1-   98     	extern	_T0MD
                                    1-   99     	extern	___sdcc_saved_fsr
                                    1-  100     	extern	___sdcc_saved_stk00
                                    1-  101     	extern	___sdcc_saved_stk01
                                    1-  102     	extern	__nyc_ny8_startup
                                    1-  103     ;--------------------------------------------------------
                                    1-  104     ; global declarations
                                    1-  105     ;--------------------------------------------------------
                                    1-  106     	extern	_F_wait_eoc
                                    1-  107     	extern	_F_AIN2_Convert
                                    1-  108     	extern	_F_AIN3_Convert
                                    1-  109     	extern	_F_AIN4_Convert
                                    1-  110     	extern	_checkOutA
                                    1-  111     	extern	_checkBatAD
                                    1-  112     	extern	_initAD
                                    1-  113     	extern	_delay
                                    1-  114     	extern	_chrgCtr
                                    1-  115     	extern	_keyRead
                                    1-  116     	extern	_gotoSleep
                                    1-  117     	extern	_pwmStop
                                    1-  118     	extern	_pwmInit
                                    1-  119     	extern	_pwm1Stop
                                    1-  120     	extern	_pwm1Init
                                    1-  121     	extern	_LED8ON
                                    1-  122     	extern	_LED7ON
                                    1-  123     	extern	_LED6ON
                                    1-  124     	extern	_LED5ON
                                    1-  125     	extern	_LED4ON
                                    1-  126     	extern	_LED3ON
                                    1-  127     	extern	_LED2ON
                                    1-  128     	extern	_LED1ON
                                    1-  129     	extern	_LedInput
                                    1-  130     	extern	_ledShow
                                    1-  131     	extern	_initSys
                                    1-  132     	extern	_powerOff
                                    1-  133     	extern	_keyCtr
                                    1-  134     	extern	_isr
                                    1-  135     	extern	_main
                                    1-  136     	extern	_Status
                                    1-  137     	extern	_duty
                                    1-  138     	extern	_intCount
                                    1-  139     	extern	_count500ms
                                    1-  140     	extern	_keyCount
                                    1-  141     	extern	_workStep
                                    1-  142     	extern	_ledStep
                                    1-  143     	extern	_fgCount
                                    1-  144     	extern	_fgPRD
                                    1-  145     	extern	_preFG
                                    1-  146     	extern	_maxDuty
                                    1-  147     	extern	_pwStep
                                    1-  148     	extern	_R_AIN4_DATA
                                    1-  149     	extern	_R_AIN4_DATA_LB
                                    1-  150     	extern	_R_AIN3_DATA
                                    1-  151     	extern	_R_AIN3_DATA_LB
                                    1-  152     	extern	_R_AIN2_DATA
                                    1-  153     	extern	_R_AIN2_DATA_LB
                                    1-  154     	extern	_chrgTime
                                    1-  155     	extern	_startStep
                                    1-  156     	extern	_sleepTime
                                    1-  157     	extern	_count200ms
                                    1-  158     	extern	_count1s
                                    1-  159     	extern	_count900s
                                    1-  160     	extern	_lowBatTime
                                    1-  161     	extern	_ledTime
                                    1-  162     	extern	_overCount
                                    1-  163     	extern	_chrgCount
                                    1-  164     	extern	_ledLightTime
                                    1-  165     	extern	_currentDuty
                                    1-  166     	extern	_fullCount
                                    1-  167     	extern	_shanshuoTime
                                    1-  168     	extern	_firstTime
                                    1-  169     	extern	_tempDuty
                                    1-  170     	extern	_lowCount
                                    1-  171     	extern	_longPressFlag
                                    1-  172     	extern	_IntFlag
                                    1-  173     	extern	_chrgFlag
                                    1-  174     	extern	_redLedFlag
                                    1-  175     	extern	_tempLedStep
                                    1-  176     	extern	_count5S
                                    1-  177     	extern	_ledDeadTime
                                    1-  178     	extern	_lockLedStep
                                    1-  179     	extern	_shandengTime
                                    1-  180     	extern	_lowBat
                                    1-  181     	extern	_lockStart
                                    1-  182     	extern	_fullLock
                                    1-  183     	extern	_fullLockCount
                                    1-  184     	extern	_ledCount
                                    1-  185     	extern	_maxOut
                                    1-  186     	extern	_batValue
                                    1-  187     	extern	_batTime
                                    1-  188     	extern	_preBatValue
                                    1-  189     	extern	_batFullTime
                                    1-  190     	extern	_debug
                                    1-  192     	extern PSAVE
                                    1-  193     	extern SSAVE
                                    1-  194     	extern WSAVE
                                    1-  195     	extern STK02
                                    1-  196     	extern STK01
                                    1-  197     	extern STK00
                                    1-  199     .segment "uninit", 0x20000040
 20000040                           1-  200     PSAVE:
                                    1-  201     	.res 1
 20000041                           1-  202     SSAVE:
                                    1-  203     	.res 1
 20000042                           1-  204     WSAVE:
                                    1-  205     	.res 1
 20000043                           1-  206     STK02:
                                    1-  207     	.res 1
 20000044                           1-  208     STK01:
                                    1-  209     	.res 1
 20000045                           1-  210     STK00:
                                    1-  211     	.res 1
                                    1-  213     ;--------------------------------------------------------
                                    1-  214     ; global definitions
                                    1-  215     ;--------------------------------------------------------
                                    1-  216     .segment "uninit"
     0000                           1-  217     _R_AIN4_DATA:
                                    1-  218     	.res	2
                                    1-  221     .segment "uninit"
     0000                           1-  222     _R_AIN4_DATA_LB:
                                    1-  223     	.res	1
                                    1-  226     .segment "uninit"
     0000                           1-  227     _R_AIN3_DATA:
                                    1-  228     	.res	2
                                    1-  231     .segment "uninit"
     0000                           1-  232     _R_AIN3_DATA_LB:
                                    1-  233     	.res	1
                                    1-  236     .segment "uninit"
     0000                           1-  237     _R_AIN2_DATA:
                                    1-  238     	.res	2
                                    1-  241     .segment "uninit"
     0000                           1-  242     _R_AIN2_DATA_LB:
                                    1-  243     	.res	1
                                    1-  246     ;--------------------------------------------------------
                                    1-  247     ; absolute symbol definitions
                                    1-  248     ;--------------------------------------------------------
                                    1-  249     ;--------------------------------------------------------
                                    1-  250     ; compiler-defined variables
                                    1-  251     ;--------------------------------------------------------
                                    1-  252     .segment "uninit"
     0000                           1-  253     r0x1068:
                                    1-  254     	.res	1
                                    1-  255     .segment "uninit"
     0000                           1-  256     r0x105D:
                                    1-  257     	.res	1
                                    1-  258     .segment "uninit"
     0000                           1-  259     r0x1067:
                                    1-  260     	.res	1
                                    1-  261     .segment "uninit"
     0000                           1-  262     r0x1066:
                                    1-  263     	.res	1
                                    1-  264     .segment "uninit"
     0000                           1-  265     r0x1065:
                                    1-  266     	.res	1
                                    1-  267     .segment "uninit"
     0000                           1-  268     r0x1064:
                                    1-  269     	.res	1
                                    1-  270     .segment "uninit"
     0000                           1-  271     r0x1063:
                                    1-  272     	.res	1
                                    1-  273     .segment "uninit"
     0000                           1-  274     r0x1062:
                                    1-  275     	.res	1
                                    1-  276     .segment "uninit"
     0000                           1-  277     r0x1061:
                                    1-  278     	.res	1
                                    1-  279     .segment "uninit"
     0000                           1-  280     r0x1060:
                                    1-  281     	.res	1
                                    1-  282     .segment "uninit"
     0000                           1-  283     r0x105F:
                                    1-  284     	.res	1
                                    1-  285     .segment "uninit"
     0000                           1-  286     r0x105E:
                                    1-  287     	.res	1
                                    1-  288     .segment "uninit"
     0000                           1-  289     r0x105C:
                                    1-  290     	.res	1
                                    1-  291     .segment "uninit"
     0000                           1-  292     r0x1057:
                                    1-  293     	.res	1
                                    1-  294     .segment "uninit"
     0000                           1-  295     r0x1058:
                                    1-  296     	.res	1
                                    1-  297     .segment "uninit"
     0000                           1-  298     r0x1059:
                                    1-  299     	.res	1
                                    1-  300     .segment "uninit"
     0000                           1-  301     r0x105B:
                                    1-  302     	.res	1
                                    1-  303     .segment "uninit"
     0000                           1-  304     r0x103B:
                                    1-  305     	.res	1
                                    1-  306     .segment "uninit"
     0000                           1-  307     r0x103C:
                                    1-  308     	.res	1
                                    1-  309     .segment "uninit"
     0000                           1-  310     r0x1055:
                                    1-  311     	.res	1
                                    1-  312     .segment "uninit"
     0000                           1-  313     r0x1056:
                                    1-  314     	.res	1
                                    1-  315     .segment "uninit"
     0000                           1-  316     r0x104F:
                                    1-  317     	.res	1
                                    1-  318     .segment "uninit"
     0000                           1-  319     r0x1050:
                                    1-  320     	.res	1
                                    1-  321     .segment "uninit"
     0000                           1-  322     r0x1052:
                                    1-  323     	.res	1
                                    1-  324     .segment "uninit"
     0000                           1-  325     r0x1049:
                                    1-  326     	.res	1
                                    1-  327     .segment "uninit"
     0000                           1-  328     r0x104A:
                                    1-  329     	.res	1
                                    1-  330     .segment "uninit"
     0000                           1-  331     r0x104B:
                                    1-  332     	.res	1
                                    1-  333     .segment "uninit"
     0000                           1-  334     r0x104E:
                                    1-  335     	.res	1
                                    1-  336     .segment "uninit"
     0000                           1-  337     r0x1043:
                                    1-  338     	.res	1
                                    1-  339     .segment "uninit"
     0000                           1-  340     r0x1044:
                                    1-  341     	.res	1
                                    1-  342     .segment "uninit"
     0000                           1-  343     r0x1045:
                                    1-  344     	.res	1
                                    1-  345     .segment "uninit"
     0000                           1-  346     r0x1048:
                                    1-  347     	.res	1
                                    1-  348     .segment "uninit"
     0000                           1-  349     r0x103D:
                                    1-  350     	.res	1
                                    1-  351     .segment "uninit"
     0000                           1-  352     r0x103E:
                                    1-  353     	.res	1
                                    1-  354     .segment "uninit"
     0000                           1-  355     r0x103F:
                                    1-  356     	.res	1
                                    1-  357     .segment "uninit"
     0000                           1-  358     r0x1042:
                                    1-  359     	.res	1
                                    1-  360     ;--------------------------------------------------------
                                    1-  361     ; initialized data
                                    1-  362     ;--------------------------------------------------------
                                    1-  364     .segment "idata"
     0000                           1-  365     _Status:
     0000 0000                      1-  366     	dw	0x00
                                    1-  370     .segment "idata"
     0000                           1-  371     _duty:
     0000 0000 0000                 1-  372     	dw	0x00, 0x00
                                    1-  376     .segment "idata"
     0000                           1-  377     _intCount:
     0000 0000                      1-  378     	dw	0x00
                                    1-  382     .segment "idata"
     0000                           1-  383     _count500ms:
     0000 0000                      1-  384     	dw	0x00
                                    1-  388     .segment "idata"
     0000                           1-  389     _keyCount:
     0000 0000                      1-  390     	dw	0x00
                                    1-  394     .segment "idata"
     0000                           1-  395     _workStep:
     0000 0000                      1-  396     	dw	0x00
                                    1-  400     .segment "idata"
     0000                           1-  401     _ledStep:
     0000 0000                      1-  402     	dw	0x00
                                    1-  406     .segment "idata"
     0000                           1-  407     _fgCount:
     0000 0000 0000                 1-  408     	dw	0x00, 0x00
                                    1-  412     .segment "idata"
     0000                           1-  413     _fgPRD:
     0000 0000 0000                 1-  414     	dw	0x00, 0x00
                                    1-  418     .segment "idata"
     0000                           1-  419     _preFG:
     0000 0000                      1-  420     	dw	0x00
                                    1-  424     .segment "idata"
     0000                           1-  425     _maxDuty:
     0000 0000                      1-  426     	dw	0x00
                                    1-  430     .segment "idata"
     0000                           1-  431     _pwStep:
     0000 0000                      1-  432     	dw	0x00
                                    1-  436     .segment "idata"
     0000                           1-  437     _chrgTime:
     0000 0000 0000                 1-  438     	dw	0x00, 0x00
                                    1-  442     .segment "idata"
     0000                           1-  443     _startStep:
     0000 0000                      1-  444     	dw	0x00
                                    1-  448     .segment "idata"
     0000                           1-  449     _sleepTime:
     0000 0000 0000                 1-  450     	dw	0x00, 0x00
                                    1-  454     .segment "idata"
     0000                           1-  455     _count200ms:
     0000 0000                      1-  456     	dw	0x00
                                    1-  460     .segment "idata"
     0000                           1-  461     _count1s:
     0000 0000                      1-  462     	dw	0x00
                                    1-  466     .segment "idata"
     0000                           1-  467     _count900s:
     0000 0000 0000                 1-  468     	dw	0x00, 0x00
                                    1-  472     .segment "idata"
     0000                           1-  473     _lowBatTime:
     0000 0000                      1-  474     	dw	0x00
                                    1-  478     .segment "idata"
     0000                           1-  479     _ledTime:
     0000 0000                      1-  480     	dw	0x00
                                    1-  484     .segment "idata"
     0000                           1-  485     _overCount:
     0000 0000                      1-  486     	dw	0x00
                                    1-  490     .segment "idata"
     0000                           1-  491     _chrgCount:
     0000 0000                      1-  492     	dw	0x00
                                    1-  496     .segment "idata"
     0000                           1-  497     _ledLightTime:
     0000 0000                      1-  498     	dw	0x00
                                    1-  502     .segment "idata"
     0000                           1-  503     _currentDuty:
     0000 0000                      1-  504     	dw	0x00
                                    1-  508     .segment "idata"
     0000                           1-  509     _fullCount:
     0000 0000                      1-  510     	dw	0x00
                                    1-  514     .segment "idata"
     0000                           1-  515     _shanshuoTime:
     0000 0000                      1-  516     	dw	0x00
                                    1-  520     .segment "idata"
     0000                           1-  521     _firstTime:
     0000 0000                      1-  522     	dw	0x00
                                    1-  526     .segment "idata"
     0000                           1-  527     _tempDuty:
     0000 0000                      1-  528     	dw	0x00
                                    1-  532     .segment "idata"
     0000                           1-  533     _lowCount:
     0000 0000                      1-  534     	dw	0x00
                                    1-  538     .segment "idata"
     0000                           1-  539     _longPressFlag:
     0000 0000                      1-  540     	dw	0x00
                                    1-  544     .segment "idata"
     0000                           1-  545     _IntFlag:
     0000 0000                      1-  546     	dw	0x00
                                    1-  550     .segment "idata"
     0000                           1-  551     _chrgFlag:
     0000 0000                      1-  552     	dw	0x00
                                    1-  556     .segment "idata"
     0000                           1-  557     _redLedFlag:
     0000 0000                      1-  558     	dw	0x00
                                    1-  562     .segment "idata"
     0000                           1-  563     _tempLedStep:
     0000 0000                      1-  564     	dw	0x00
                                    1-  568     .segment "idata"
     0000                           1-  569     _count5S:
     0000 0000 0000                 1-  570     	dw	0x00, 0x00
                                    1-  574     .segment "idata"
     0000                           1-  575     _ledDeadTime:
     0000 0000                      1-  576     	dw	0x00
                                    1-  580     .segment "idata"
     0000                           1-  581     _lockLedStep:
     0000 0000                      1-  582     	dw	0x00
                                    1-  586     .segment "idata"
     0000                           1-  587     _shandengTime:
     0000 0000 0000                 1-  588     	dw	0x00, 0x00
                                    1-  592     .segment "idata"
     0000                           1-  593     _lowBat:
     0000 0000 0000                 1-  594     	dw	0x00, 0x00
                                    1-  598     .segment "idata"
     0000                           1-  599     _lockStart:
     0000 0000                      1-  600     	dw	0x00
                                    1-  604     .segment "idata"
     0000                           1-  605     _fullLock:
     0000 0000                      1-  606     	dw	0x00
                                    1-  610     .segment "idata"
     0000                           1-  611     _fullLockCount:
     0000 0000                      1-  612     	dw	0x00
                                    1-  616     .segment "idata"
     0000                           1-  617     _ledCount:
     0000 0000                      1-  618     	dw	0x00
                                    1-  622     .segment "idata"
     0000                           1-  623     _maxOut:
     0000 0000                      1-  624     	dw	0x00
                                    1-  628     .segment "idata"
     0000                           1-  629     _batValue:
     0000 0000                      1-  630     	dw	0x00
                                    1-  634     .segment "idata"
     0000                           1-  635     _batTime:
     0000 0000 0000                 1-  636     	dw	0x00, 0x00
                                    1-  640     .segment "idata"
     0000                           1-  641     _preBatValue:
     0000 0000 0000                 1-  642     	dw	0x00, 0x00
                                    1-  646     .segment "idata"
     0000                           1-  647     _batFullTime:
     0000 0000 0000                 1-  648     	dw	0x00, 0x00
                                    1-  652     .segment "idata"
     0000                           1-  653     _debug:
     0000 0000                      1-  654     	dw	0x00
                                    1-  657     ;--------------------------------------------------------
                                    1-  658     ; overlayable items in internal ram 
                                    1-  659     ;--------------------------------------------------------
                                    1-  660     ;	udata_ovr
                                    1-  661     ;--------------------------------------------------------
                                    1-  662     ; reset vector 
                                    1-  663     ;--------------------------------------------------------
                                    1-  664     ORG	0x0000
     0000 3rrr                      1-  665     	LGOTO	__nyc_ny8_startup
                                    1-  666     ;--------------------------------------------------------
                                    1-  667     ; interrupt and initialization code
                                    1-  668     ;--------------------------------------------------------
                                    1-  669     ORG 0x0008
                                    1-  670     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  672     .segment "code"
     0000                           1-  673     __sdcc_interrupt:
                                    1-  674     ;***
                                    1-  675     ;  pBlock Stats: dbName = I
                                    1-  676     ;***
                                    1-  677     ;2 compiler assigned registers:
                                    1-  678     ;   STK00
                                    1-  679     ;   STK01
                                    1-  680     ;; Starting pCode block
     0000                           1-  681     _isr:
                                    1-  682     ; 0 exit points
                                    1-  683     	.line	129, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  684     	MOVAR	WSAVE
     0001 1503                      1-  685     	SWAPR	STATUS,W
     0002 0283                      1-  686     	CLRR	STATUS
     0003 00rr                      1-  687     	MOVAR	SSAVE
     0004 010A                      1-  688     	MOVR	PCHBUF,W
     0005 028A                      1-  689     	CLRR	PCHBUF
     0006 00rr                      1-  690     	MOVAR	PSAVE
     0007 0104                      1-  691     	MOVR	FSR,W
                                    1-  692     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  693     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  694     	MOVR	STK00,W
                                    1-  695     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  696     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  697     	MOVR	STK01,W
                                    1-  698     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  699     	MOVAR	___sdcc_saved_stk01
                                    1-  700     	.line	131, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  701     	BTRSS	_INTFbits,0
                                    1-  702     	MGOTO	_00128_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  703     	.line	133, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  704     	MOVIA	0x37
     0013 03rr                      1-  705     	ADDAR	_TMR0,F
                                    1-  706     	.line	135, "main.c"; 	if(++intCount >= 100)
                                    1-  707     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  708     	INCR	_intCount,F
                                    1-  709     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  710     	MOVIA	0x64
     0017 04rr                      1-  711     	SUBAR	_intCount,W
     0018 0803                      1-  712     	BTRSS	STATUS,0
                                    1-  713     	MGOTO	_00128_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  714     	.line	137, "main.c"; 	IntFlag = 1;
     001A 2101                      1-  715     	MOVIA	0x01
                                    1-  716     	BANKSEL	_IntFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  717     	MOVAR	_IntFlag
                                    1-  718     	.line	138, "main.c"; 	intCount = 0;
                                    1-  719     	BANKSEL	_intCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  720     	CLRR	_intCount
                                    1-  721     	.line	139, "main.c"; 	if(workStep)
                                    1-  722     	BANKSEL	_workStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 01rr                      1-  723     	MOVR	_workStep,W
     0021 0D03                      1-  724     	BTRSC	STATUS,2
                                    1-  725     	MGOTO	_00106_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  726     	.line	140, "main.c"; 	++fgCount;
                                    1-  727     	BANKSEL	_fgCount
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 05rr                      1-  728     	INCR	_fgCount,F
     0025 0D03                      1-  729     	BTRSC	STATUS,2
     0026 05rr                      1-  730     	INCR	(_fgCount + 1),F
     0027                           1-  731     _00106_DS_:
                                    1-  732     	.line	141, "main.c"; 	if(++count500ms >= 60)
                                    1-  733     	BANKSEL	_count500ms
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 05rr                      1-  734     	INCR	_count500ms,F
                                    1-  735     ;;unsigned compare: left < lit (0x3C=60), size=1
     0029 213C                      1-  736     	MOVIA	0x3c
     002A 04rr                      1-  737     	SUBAR	_count500ms,W
     002B 0C03                      1-  738     	BTRSC	STATUS,0
                                    1-  739     	.line	142, "main.c"; 	count500ms = 0;
     002C 02rr                      1-  740     	CLRR	_count500ms
                                    1-  741     	.line	143, "main.c"; 	if(++count200ms >= 20)
                                    1-  742     	BANKSEL	_count200ms
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 05rr                      1-  743     	INCR	_count200ms,F
     002F 2114                      1-  744     	MOVIA	0x14
     0030 04rr                      1-  745     	SUBAR	_count200ms,W
     0031 0803                      1-  746     	BTRSS	STATUS,0
                                    1-  747     	MGOTO	_00112_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  748     	.line	145, "main.c"; 	count200ms = 0;
     0033 02rr                      1-  749     	CLRR	_count200ms
                                    1-  750     	.line	146, "main.c"; 	if(ledDeadTime > 0)
                                    1-  751     	BANKSEL	_ledDeadTime
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 01rr                      1-  752     	MOVR	_ledDeadTime,W
     0036 0903                      1-  753     	BTRSS	STATUS,2
                                    1-  754     	.line	147, "main.c"; 	--ledDeadTime;
     0037 06rr                      1-  755     	DECR	_ledDeadTime,F
     0038                           1-  756     _00112_DS_:
                                    1-  757     	.line	149, "main.c"; 	if(++count1s >= 100)
                                    1-  758     	BANKSEL	_count1s
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 05rr                      1-  759     	INCR	_count1s,F
     003A 2164                      1-  760     	MOVIA	0x64
     003B 04rr                      1-  761     	SUBAR	_count1s,W
     003C 0803                      1-  762     	BTRSS	STATUS,0
                                    1-  763     	MGOTO	_00128_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  764     	.line	151, "main.c"; 	count1s = 0;
     003E 02rr                      1-  765     	CLRR	_count1s
                                    1-  766     	.line	152, "main.c"; 	if(chrgFlag == 1 && pwStep == 8)
                                    1-  767     	BANKSEL	_chrgFlag
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 01rr                      1-  768     	MOVR	_chrgFlag,W
     0041 2401                      1-  769     	XORIA	0x01
     0042 0903                      1-  770     	BTRSS	STATUS,2
                                    1-  771     	MGOTO	_00114_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  772     	BANKSEL	_pwStep
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 01rr                      1-  773     	MOVR	_pwStep,W
     0046 2408                      1-  774     	XORIA	0x08
     0047 0903                      1-  775     	BTRSS	STATUS,2
                                    1-  776     	MGOTO	_00114_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  777     	.line	154, "main.c"; 	++chrgTime;
                                    1-  778     	BANKSEL	_chrgTime
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 05rr                      1-  779     	INCR	_chrgTime,F
     004B 0D03                      1-  780     	BTRSC	STATUS,2
     004C 05rr                      1-  781     	INCR	(_chrgTime + 1),F
     004D                           1-  782     _00114_DS_:
                                    1-  783     	.line	156, "main.c"; 	if(ledLightTime > 0)
                                    1-  784     	BANKSEL	_ledLightTime
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 01rr                      1-  785     	MOVR	_ledLightTime,W
     004F 0903                      1-  786     	BTRSS	STATUS,2
                                    1-  787     	.line	157, "main.c"; 	--ledLightTime;
     0050 06rr                      1-  788     	DECR	_ledLightTime,F
                                    1-  789     	.line	158, "main.c"; 	if(shanshuoTime > 0)
                                    1-  790     	BANKSEL	_shanshuoTime
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 01rr                      1-  791     	MOVR	_shanshuoTime,W
     0053 0903                      1-  792     	BTRSS	STATUS,2
                                    1-  793     	.line	159, "main.c"; 	--shanshuoTime;
     0054 06rr                      1-  794     	DECR	_shanshuoTime,F
                                    1-  795     	.line	160, "main.c"; 	if(workStep)
                                    1-  796     	BANKSEL	_workStep
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 01rr                      1-  797     	MOVR	_workStep,W
     0057 0D03                      1-  798     	BTRSC	STATUS,2
                                    1-  799     	MGOTO	_00121_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  800     	.line	162, "main.c"; 	++count900s;
                                    1-  801     	BANKSEL	_count900s
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 05rr                      1-  802     	INCR	_count900s,F
     005B 0D03                      1-  803     	BTRSC	STATUS,2
     005C 05rr                      1-  804     	INCR	(_count900s + 1),F
                                    1-  805     	MGOTO	_00128_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
     005E                           1-  806     _00121_DS_:
                                    1-  807     	.line	166, "main.c"; 	count900s = 0;
                                    1-  808     	BANKSEL	_count900s
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 02rr                      1-  809     	CLRR	_count900s
     0060 02rr                      1-  810     	CLRR	(_count900s + 1)
     0061                           1-  811     _00128_DS_:
                                    1-  812     	.line	175, "main.c"; 	if(INTFbits.PABIF)
     0061 08rr                      1-  813     	BTRSS	_INTFbits,1
                                    1-  814     	MGOTO	_00130_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  815     	.line	177, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0063 21FD                      1-  816     	MOVIA	0xfd
     0064 00rr                      1-  817     	MOVAR	_INTF
     0065                           1-  818     _00130_DS_:
                                    1-  819     	.line	180, "main.c"; 	INTF = 0;
     0065 02rr                      1-  820     	CLRR	_INTF
                                    1-  821     	.line	182, "main.c"; 	}
                                    1-  822     	BANKSEL	___sdcc_saved_stk01
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 01rr                      1-  823     	MOVR	___sdcc_saved_stk01,W
     0068 00rr                      1-  824     	MOVAR	STK01
                                    1-  825     	BANKSEL	___sdcc_saved_stk00
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 01rr                      1-  826     	MOVR	___sdcc_saved_stk00,W
     006B 00rr                      1-  827     	MOVAR	STK00
                                    1-  828     	BANKSEL	___sdcc_saved_fsr
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 01rr                      1-  829     	MOVR	___sdcc_saved_fsr,W
     006E 0084                      1-  830     	MOVAR	FSR
     006F 01rr                      1-  831     	MOVR	PSAVE,W
     0070 008A                      1-  832     	MOVAR	PCHBUF
     0071 0283                      1-  833     	CLRR	STATUS
     0072 15rr                      1-  834     	SWAPR	SSAVE,W
     0073 0083                      1-  835     	MOVAR	STATUS
     0074 15rr                      1-  836     	SWAPR	WSAVE,F
     0075 15rr                      1-  837     	SWAPR	WSAVE,W
     0076                           1-  838     END_OF_INTERRUPT:
     0076 0011                      1-  839     	RETIE	
                                    1-  841     ;--------------------------------------------------------
                                    1-  842     ; code
                                    1-  843     ;--------------------------------------------------------
                                    1-  844     ;***
                                    1-  845     ;  pBlock Stats: dbName = M
                                    1-  846     ;***
                                    1-  847     ;has an exit
                                    1-  848     ;functions called:
                                    1-  849     ;   _initSys
                                    1-  850     ;   _initAD
                                    1-  851     ;   _ledShow
                                    1-  852     ;   _keyCtr
                                    1-  853     ;   _checkBatAD
                                    1-  854     ;   _checkOutA
                                    1-  855     ;   _chrgCtr
                                    1-  856     ;   _ledShow
                                    1-  857     ;   _powerOff
                                    1-  858     ;   _gotoSleep
                                    1-  859     ;   _powerOff
                                    1-  860     ;   _initSys
                                    1-  861     ;   _initAD
                                    1-  862     ;   _ledShow
                                    1-  863     ;   _keyCtr
                                    1-  864     ;   _checkBatAD
                                    1-  865     ;   _checkOutA
                                    1-  866     ;   _chrgCtr
                                    1-  867     ;   _ledShow
                                    1-  868     ;   _powerOff
                                    1-  869     ;   _gotoSleep
                                    1-  870     ;   _powerOff
                                    1-  871     ;; Starting pCode block
                                    1-  872     .segment "code"; module=main, function=_main
     0000                           1-  874     _main:
                                    1-  875     ; 2 exit points
                                    1-  876     	.line	186, "main.c"; 	initSys();
                                    1-  877     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  878     	.line	187, "main.c"; 	initAD();
                                    1-  879     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  880     _00166_DS_:
                                    1-  881     	.line	190, "main.c"; 	CLRWDT();
     0002 0002                      1-  882     	clrwdt
                                    1-  883     	.line	191, "main.c"; 	ledShow();
                                    1-  884     	MCALL	_ledShow
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  885     	.line	192, "main.c"; 	if(!IntFlag)
                                    1-  886     	BANKSEL	_IntFlag
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  887     	MOVR	_IntFlag,W
     0006 0D03                      1-  888     	BTRSC	STATUS,2
                                    1-  889     	MGOTO	_00166_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  890     	.line	194, "main.c"; 	IntFlag = 0;
     0008 02rr                      1-  891     	CLRR	_IntFlag
                                    1-  892     	.line	195, "main.c"; 	if(chrgFlag == 0)
                                    1-  893     	BANKSEL	_chrgFlag
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 01rr                      1-  894     	MOVR	_chrgFlag,W
     000B 0D03                      1-  895     	BTRSC	STATUS,2
                                    1-  896     	.line	196, "main.c"; 	keyCtr();
                                    1-  897     	MCALL	_keyCtr
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  898     	.line	197, "main.c"; 	if(count200ms < 5)
     000D 2105                      1-  899     	MOVIA	0x05
                                    1-  900     	BANKSEL	_count200ms
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 04rr                      1-  901     	SUBAR	_count200ms,W
     0010 0C03                      1-  902     	BTRSC	STATUS,0
                                    1-  903     	MGOTO	_00143_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  904     	.line	199, "main.c"; 	checkBatAD();
                                    1-  905     	MCALL	_checkBatAD
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  906     	MGOTO	_00144_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  907     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  908     ;;unsigned compare: left >= lit (0x9=9), size=1
     0014                           1-  909     _00143_DS_:
                                    1-  910     	.line	201, "main.c"; 	else if(count200ms > 8 && count200ms < 11)
     0014 2109                      1-  911     	MOVIA	0x09
                                    1-  912     	BANKSEL	_count200ms
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 04rr                      1-  913     	SUBAR	_count200ms,W
     0017 0803                      1-  914     	BTRSS	STATUS,0
                                    1-  915     	MGOTO	_00144_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  916     ;;unsigned compare: left < lit (0xB=11), size=1
     0019 210B                      1-  917     	MOVIA	0x0b
     001A 04rr                      1-  918     	SUBAR	_count200ms,W
     001B 0803                      1-  919     	BTRSS	STATUS,0
                                    1-  920     	.line	203, "main.c"; 	checkOutA();
                                    1-  921     	MCALL	_checkOutA
     001C 2rrr                      3-   66 m1      LCALL rom_address
     001D                           1-  922     _00144_DS_:
                                    1-  923     	.line	205, "main.c"; 	chrgCtr();
                                    1-  924     	MCALL	_chrgCtr
     001D 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  925     	.line	206, "main.c"; 	ledShow();
                                    1-  926     	MCALL	_ledShow
     001E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  927     	.line	207, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  928     	BANKSEL	_workStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 01rr                      1-  929     	MOVR	_workStep,W
     0021 0D03                      1-  930     	BTRSC	STATUS,2
                                    1-  931     	MGOTO	_00146_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  932     	BANKSEL	_currentDuty
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 01rr                      1-  933     	MOVR	_currentDuty,W
                                    1-  934     	BANKSEL	_maxDuty
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 04rr                      1-  935     	SUBAR	_maxDuty,W
     0027 0C03                      1-  936     	BTRSC	STATUS,0
                                    1-  937     	MGOTO	_00146_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  938     	.line	209, "main.c"; 	currentDuty = currentDuty - 10;
     0029 21F6                      1-  939     	MOVIA	0xf6
                                    1-  940     	BANKSEL	_currentDuty
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1-  941     	ADDAR	_currentDuty,F
                                    1-  942     	.line	210, "main.c"; 	PWM2DUTY = currentDuty;
     002C 01rr                      1-  943     	MOVR	_currentDuty,W
     002D 00rr                      1-  944     	SFUN	_PWM2DUTY
                                    1-  945     ;;unsigned compare: left < lit (0x5=5), size=1
     002E                           1-  946     _00146_DS_:
                                    1-  947     	.line	213, "main.c"; 	if(overCount >= 5 && workStep > 0)
     002E 2105                      1-  948     	MOVIA	0x05
                                    1-  949     	BANKSEL	_overCount
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 04rr                      1-  950     	SUBAR	_overCount,W
     0031 0803                      1-  951     	BTRSS	STATUS,0
                                    1-  952     	MGOTO	_00151_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  953     	BANKSEL	_workStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1-  954     	MOVR	_workStep,W
     0035 0D03                      1-  955     	BTRSC	STATUS,2
                                    1-  956     	MGOTO	_00151_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  957     	.line	215, "main.c"; 	if(++count5S > 500)
                                    1-  958     	BANKSEL	_count5S
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 05rr                      1-  959     	INCR	_count5S,F
     0039 0D03                      1-  960     	BTRSC	STATUS,2
     003A 05rr                      1-  961     	INCR	(_count5S + 1),F
                                    1-  962     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  963     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     003B 2101                      1-  964     	MOVIA	0x01
     003C 04rr                      1-  965     	SUBAR	(_count5S + 1),W
     003D 0903                      1-  966     	BTRSS	STATUS,2
                                    1-  967     	MGOTO	_00232_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
     003F 21F5                      1-  968     	MOVIA	0xf5
     0040 04rr                      1-  969     	SUBAR	_count5S,W
     0041                           1-  970     _00232_DS_:
     0041 0803                      1-  971     	BTRSS	STATUS,0
                                    1-  972     	MGOTO	_00152_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  973     	.line	217, "main.c"; 	overCount = 0;
                                    1-  974     	BANKSEL	_overCount
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 02rr                      1-  975     	CLRR	_overCount
                                    1-  976     	.line	218, "main.c"; 	count5S = 0;
                                    1-  977     	BANKSEL	_count5S
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 02rr                      1-  978     	CLRR	_count5S
     0047 02rr                      1-  979     	CLRR	(_count5S + 1)
                                    1-  980     	.line	219, "main.c"; 	ledDeadTime = 25;
     0048 2119                      1-  981     	MOVIA	0x19
                                    1-  982     	BANKSEL	_ledDeadTime
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1-  983     	MOVAR	_ledDeadTime
                                    1-  984     	.line	220, "main.c"; 	powerOff();
                                    1-  985     	MCALL	_powerOff
     004B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  986     	MGOTO	_00152_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
     004D                           1-  987     _00151_DS_:
                                    1-  988     	.line	225, "main.c"; 	count5S = 0;
                                    1-  989     	BANKSEL	_count5S
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 02rr                      1-  990     	CLRR	_count5S
     004F 02rr                      1-  991     	CLRR	(_count5S + 1)
     0050                           1-  992     _00152_DS_:
                                    1-  993     	.line	227, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x20) == 0 && ledLightTime == 0 && ledDeadTime == 0 && shandengTime == 0)
                                    1-  994     	BANKSEL	_workStep
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 01rr                      1-  995     	MOVR	_workStep,W
     0052 0903                      1-  996     	BTRSS	STATUS,2
                                    1-  997     	MGOTO	_00157_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  998     	BANKSEL	_keyCount
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 01rr                      1-  999     	MOVR	_keyCount,W
     0056 0903                      1- 1000     	BTRSS	STATUS,2
                                    1- 1001     	MGOTO	_00157_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1002     	BANKSEL	_PORTA
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 0Err                      1- 1003     	BTRSC	_PORTA,5
                                    1- 1004     	MGOTO	_00157_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1005     	BANKSEL	_ledLightTime
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 01rr                      1- 1006     	MOVR	_ledLightTime,W
     005D 0903                      1- 1007     	BTRSS	STATUS,2
                                    1- 1008     	MGOTO	_00157_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1009     	BANKSEL	_ledDeadTime
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 01rr                      1- 1010     	MOVR	_ledDeadTime,W
     0061 0903                      1- 1011     	BTRSS	STATUS,2
                                    1- 1012     	MGOTO	_00157_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1013     	BANKSEL	_shandengTime
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 01rr                      1- 1014     	MOVR	_shandengTime,W
     0065 11rr                      1- 1015     	IORAR	(_shandengTime + 1),W
     0066 0903                      1- 1016     	BTRSS	STATUS,2
                                    1- 1017     	MGOTO	_00157_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1018     	.line	229, "main.c"; 	if(++sleepTime > 30)
                                    1- 1019     	BANKSEL	_sleepTime
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 05rr                      1- 1020     	INCR	_sleepTime,F
     006A 0D03                      1- 1021     	BTRSC	STATUS,2
     006B 05rr                      1- 1022     	INCR	(_sleepTime + 1),F
                                    1- 1023     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1024     ;;unsigned compare: left >= lit (0x1F=31), size=2
     006C 2100                      1- 1025     	MOVIA	0x00
     006D 04rr                      1- 1026     	SUBAR	(_sleepTime + 1),W
     006E 0903                      1- 1027     	BTRSS	STATUS,2
                                    1- 1028     	MGOTO	_00233_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
     0070 211F                      1- 1029     	MOVIA	0x1f
     0071 04rr                      1- 1030     	SUBAR	_sleepTime,W
     0072                           1- 1031     _00233_DS_:
     0072 0803                      1- 1032     	BTRSS	STATUS,0
                                    1- 1033     	MGOTO	_00157_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1034     	.line	231, "main.c"; 	gotoSleep();
                                    1- 1035     	MCALL	_gotoSleep
     0074 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1036     ;;unsigned compare: left < lit (0x384=900), size=2
     0075                           1- 1037     _00157_DS_:
                                    1- 1038     	.line	235, "main.c"; 	if(count900s >= 900)
     0075 2103                      1- 1039     	MOVIA	0x03
                                    1- 1040     	BANKSEL	_count900s
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 04rr                      1- 1041     	SUBAR	(_count900s + 1),W
     0078 0903                      1- 1042     	BTRSS	STATUS,2
                                    1- 1043     	MGOTO	_00234_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
     007A 2184                      1- 1044     	MOVIA	0x84
     007B 04rr                      1- 1045     	SUBAR	_count900s,W
     007C                           1- 1046     _00234_DS_:
     007C 0803                      1- 1047     	BTRSS	STATUS,0
                                    1- 1048     	MGOTO	_00166_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1049     	.line	237, "main.c"; 	powerOff();
                                    1- 1050     	MCALL	_powerOff
     007E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1051     	MGOTO	_00166_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1052     	.line	241, "main.c"; 	}
                                    1- 1053     	RETURN	
     0080 0010                      3-   40 m1      ret
                                    1- 1054     ; exit point of _main
                                    1- 1056     ;***
                                    1- 1057     ;  pBlock Stats: dbName = C
                                    1- 1058     ;***
                                    1- 1059     ;has an exit
                                    1- 1060     ;; Starting pCode block
                                    1- 1061     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1063     _F_wait_eoc:
                                    1- 1064     ; 2 exit points
     0000                           1- 1065     _00789_DS_:
                                    1- 1066     	.line	1099, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1067     	BTRSS	_ADMDbits,5
                                    1- 1068     	MGOTO	_00789_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1069     	.line	1101, "main.c"; 	}
                                    1- 1070     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1071     ; exit point of _F_wait_eoc
                                    1- 1073     ;***
                                    1- 1074     ;  pBlock Stats: dbName = C
                                    1- 1075     ;***
                                    1- 1076     ;has an exit
                                    1- 1077     ;functions called:
                                    1- 1078     ;   _delay
                                    1- 1079     ;   _F_wait_eoc
                                    1- 1080     ;   _delay
                                    1- 1081     ;   _F_wait_eoc
                                    1- 1082     ;6 compiler assigned registers:
                                    1- 1083     ;   r0x103D
                                    1- 1084     ;   r0x103E
                                    1- 1085     ;   r0x103F
                                    1- 1086     ;   r0x1040
                                    1- 1087     ;   r0x1041
                                    1- 1088     ;   r0x1042
                                    1- 1089     ;; Starting pCode block
                                    1- 1090     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1092     ;local variable name mapping:
     0000                           1- 1095     _F_AIN2_Convert:
                                    1- 1096     ; 2 exit points
                                    1- 1097     	.line	1082, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1098     	BANKSEL	r0x103D
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1099     	MOVAR	r0x103D
                                    1- 1100     	.line	1084, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1101     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1102     	CLRR	_R_AIN2_DATA_LB
                                    1- 1103     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1104     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1105     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1106     	.line	1086, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1107     	MOVIA	0x92
     0008 00rr                      1- 1108     	MOVAR	_ADMD
                                    1- 1109     	.line	1087, "main.c"; 	delay(200);	
     0009 21C8                      1- 1110     	MOVIA	0xc8
                                    1- 1111     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1112     	.line	1088, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1113     	MOVIA	0x01
                                    1- 1114     	BANKSEL	r0x103E
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1115     	MOVAR	r0x103E
     000E                           1- 1116     _00782_DS_:
                                    1- 1117     	BANKSEL	r0x103E
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1118     	MOVR	r0x103E,W
                                    1- 1119     	BANKSEL	r0x103D
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1120     	SUBAR	r0x103D,W
     0012 0803                      1- 1121     	BTRSS	STATUS,0
                                    1- 1122     	MGOTO	_00784_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1123     	.line	1090, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1124     	BSR	_ADMDbits,6
                                    1- 1125     	.line	1091, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1126     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1127     	.line	1092, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1128     	MOVIA	0x0f
     0017 10rr                      1- 1129     	ANDAR	_ADR,W
                                    1- 1130     ;;3	MOVAR	r0x103F
                                    1- 1131     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1132     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1133     	.line	1093, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1- 1134     	MOVR	_ADD,W
                                    1- 1135     	BANKSEL	r0x103F
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1136     	MOVAR	r0x103F
                                    1- 1137     ;;1	CLRR	r0x1040
                                    1- 1138     ;;111	MOVR	r0x103F,W
                                    1- 1139     ;;109	MOVAR	r0x1041
     001D 2100                      1- 1140     	MOVIA	0x00
                                    1- 1141     	BANKSEL	r0x1042
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1142     	MOVAR	r0x1042
                                    1- 1143     ;;110	MOVR	r0x1041,W
                                    1- 1144     	BANKSEL	r0x103F
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1145     	MOVR	r0x103F,W
                                    1- 1146     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1147     	ADDAR	_R_AIN2_DATA,F
                                    1- 1148     	BANKSEL	r0x1042
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1149     	MOVR	r0x1042,W
     0026 0C03                      1- 1150     	BTRSC	STATUS,0
     0027 05rr                      1- 1151     	INCR	r0x1042,W
     0028 0D03                      1- 1152     	BTRSC	STATUS,2
                                    1- 1153     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1154     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1155     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1- 1156     _00001_DS_:
                                    1- 1157     	.line	1088, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1158     	BANKSEL	r0x103E
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1159     	INCR	r0x103E,F
                                    1- 1160     	MGOTO	_00782_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1161     _00784_DS_:
                                    1- 1162     	.line	1095, "main.c"; 	}
                                    1- 1163     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1164     ; exit point of _F_AIN2_Convert
                                    1- 1166     ;***
                                    1- 1167     ;  pBlock Stats: dbName = C
                                    1- 1168     ;***
                                    1- 1169     ;has an exit
                                    1- 1170     ;functions called:
                                    1- 1171     ;   _delay
                                    1- 1172     ;   _F_wait_eoc
                                    1- 1173     ;   _delay
                                    1- 1174     ;   _F_wait_eoc
                                    1- 1175     ;6 compiler assigned registers:
                                    1- 1176     ;   r0x1043
                                    1- 1177     ;   r0x1044
                                    1- 1178     ;   r0x1045
                                    1- 1179     ;   r0x1046
                                    1- 1180     ;   r0x1047
                                    1- 1181     ;   r0x1048
                                    1- 1182     ;; Starting pCode block
                                    1- 1183     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1- 1185     ;local variable name mapping:
     0000                           1- 1188     _F_AIN3_Convert:
                                    1- 1189     ; 2 exit points
                                    1- 1190     	.line	1067, "main.c"; 	void F_AIN3_Convert(char count)
                                    1- 1191     	BANKSEL	r0x1043
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1192     	MOVAR	r0x1043
                                    1- 1193     	.line	1069, "main.c"; 	R_AIN3_DATA=R_AIN3_DATA_LB=0x00;   
                                    1- 1194     	BANKSEL	_R_AIN3_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1195     	CLRR	_R_AIN3_DATA_LB
                                    1- 1196     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1197     	CLRR	_R_AIN3_DATA
     0006 02rr                      1- 1198     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1199     	.line	1071, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0007 2193                      1- 1200     	MOVIA	0x93
     0008 00rr                      1- 1201     	MOVAR	_ADMD
                                    1- 1202     	.line	1072, "main.c"; 	delay(200);	
     0009 21C8                      1- 1203     	MOVIA	0xc8
                                    1- 1204     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1205     	.line	1073, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1206     	MOVIA	0x01
                                    1- 1207     	BANKSEL	r0x1044
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1208     	MOVAR	r0x1044
     000E                           1- 1209     _00773_DS_:
                                    1- 1210     	BANKSEL	r0x1044
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1211     	MOVR	r0x1044,W
                                    1- 1212     	BANKSEL	r0x1043
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1213     	SUBAR	r0x1043,W
     0012 0803                      1- 1214     	BTRSS	STATUS,0
                                    1- 1215     	MGOTO	_00775_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1216     	.line	1075, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1217     	BSR	_ADMDbits,6
                                    1- 1218     	.line	1076, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1219     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1220     	.line	1077, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1221     	MOVIA	0x0f
     0017 10rr                      1- 1222     	ANDAR	_ADR,W
                                    1- 1223     ;;3	MOVAR	r0x1045
                                    1- 1224     	BANKSEL	_R_AIN3_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1225     	ADDAR	_R_AIN3_DATA_LB,F
                                    1- 1226     	.line	1078, "main.c"; 	R_AIN3_DATA    += ADD; 
     001A 01rr                      1- 1227     	MOVR	_ADD,W
                                    1- 1228     	BANKSEL	r0x1045
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1229     	MOVAR	r0x1045
                                    1- 1230     ;;1	CLRR	r0x1046
                                    1- 1231     ;;108	MOVR	r0x1045,W
                                    1- 1232     ;;106	MOVAR	r0x1047
     001D 2100                      1- 1233     	MOVIA	0x00
                                    1- 1234     	BANKSEL	r0x1048
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1235     	MOVAR	r0x1048
                                    1- 1236     ;;107	MOVR	r0x1047,W
                                    1- 1237     	BANKSEL	r0x1045
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1238     	MOVR	r0x1045,W
                                    1- 1239     	BANKSEL	_R_AIN3_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1240     	ADDAR	_R_AIN3_DATA,F
                                    1- 1241     	BANKSEL	r0x1048
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1242     	MOVR	r0x1048,W
     0026 0C03                      1- 1243     	BTRSC	STATUS,0
     0027 05rr                      1- 1244     	INCR	r0x1048,W
     0028 0D03                      1- 1245     	BTRSC	STATUS,2
                                    1- 1246     	MGOTO	_00002_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1247     	BANKSEL	_R_AIN3_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1248     	ADDAR	(_R_AIN3_DATA + 1),F
     002C                           1- 1249     _00002_DS_:
                                    1- 1250     	.line	1073, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1251     	BANKSEL	r0x1044
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1252     	INCR	r0x1044,F
                                    1- 1253     	MGOTO	_00773_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1254     _00775_DS_:
                                    1- 1255     	.line	1080, "main.c"; 	}
                                    1- 1256     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1257     ; exit point of _F_AIN3_Convert
                                    1- 1259     ;***
                                    1- 1260     ;  pBlock Stats: dbName = C
                                    1- 1261     ;***
                                    1- 1262     ;has an exit
                                    1- 1263     ;functions called:
                                    1- 1264     ;   _delay
                                    1- 1265     ;   _F_wait_eoc
                                    1- 1266     ;   _delay
                                    1- 1267     ;   _F_wait_eoc
                                    1- 1268     ;6 compiler assigned registers:
                                    1- 1269     ;   r0x1049
                                    1- 1270     ;   r0x104A
                                    1- 1271     ;   r0x104B
                                    1- 1272     ;   r0x104C
                                    1- 1273     ;   r0x104D
                                    1- 1274     ;   r0x104E
                                    1- 1275     ;; Starting pCode block
                                    1- 1276     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1278     ;local variable name mapping:
     0000                           1- 1281     _F_AIN4_Convert:
                                    1- 1282     ; 2 exit points
                                    1- 1283     	.line	1052, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1284     	BANKSEL	r0x1049
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1285     	MOVAR	r0x1049
                                    1- 1286     	.line	1054, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1287     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1288     	CLRR	_R_AIN4_DATA_LB
                                    1- 1289     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1290     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1291     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1292     	.line	1056, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1293     	MOVIA	0x94
     0008 00rr                      1- 1294     	MOVAR	_ADMD
                                    1- 1295     	.line	1057, "main.c"; 	delay(200);	
     0009 21C8                      1- 1296     	MOVIA	0xc8
                                    1- 1297     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1298     	.line	1058, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1299     	MOVIA	0x01
                                    1- 1300     	BANKSEL	r0x104A
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1301     	MOVAR	r0x104A
     000E                           1- 1302     _00764_DS_:
                                    1- 1303     	BANKSEL	r0x104A
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1304     	MOVR	r0x104A,W
                                    1- 1305     	BANKSEL	r0x1049
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1306     	SUBAR	r0x1049,W
     0012 0803                      1- 1307     	BTRSS	STATUS,0
                                    1- 1308     	MGOTO	_00766_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1309     	.line	1060, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1310     	BSR	_ADMDbits,6
                                    1- 1311     	.line	1061, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1312     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1313     	.line	1062, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1314     	MOVIA	0x0f
     0017 10rr                      1- 1315     	ANDAR	_ADR,W
                                    1- 1316     ;;3	MOVAR	r0x104B
                                    1- 1317     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1318     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1319     	.line	1063, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1320     	MOVR	_ADD,W
                                    1- 1321     	BANKSEL	r0x104B
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1322     	MOVAR	r0x104B
                                    1- 1323     ;;1	CLRR	r0x104C
                                    1- 1324     ;;105	MOVR	r0x104B,W
                                    1- 1325     ;;103	MOVAR	r0x104D
     001D 2100                      1- 1326     	MOVIA	0x00
                                    1- 1327     	BANKSEL	r0x104E
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1328     	MOVAR	r0x104E
                                    1- 1329     ;;104	MOVR	r0x104D,W
                                    1- 1330     	BANKSEL	r0x104B
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1331     	MOVR	r0x104B,W
                                    1- 1332     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1333     	ADDAR	_R_AIN4_DATA,F
                                    1- 1334     	BANKSEL	r0x104E
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1335     	MOVR	r0x104E,W
     0026 0C03                      1- 1336     	BTRSC	STATUS,0
     0027 05rr                      1- 1337     	INCR	r0x104E,W
     0028 0D03                      1- 1338     	BTRSC	STATUS,2
                                    1- 1339     	MGOTO	_00003_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1340     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1341     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1342     _00003_DS_:
                                    1- 1343     	.line	1058, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1344     	BANKSEL	r0x104A
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1345     	INCR	r0x104A,F
                                    1- 1346     	MGOTO	_00764_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1347     _00766_DS_:
                                    1- 1348     	.line	1065, "main.c"; 	}
                                    1- 1349     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1350     ; exit point of _F_AIN4_Convert
                                    1- 1352     ;***
                                    1- 1353     ;  pBlock Stats: dbName = C
                                    1- 1354     ;***
                                    1- 1355     ;has an exit
                                    1- 1356     ;functions called:
                                    1- 1357     ;   _F_AIN3_Convert
                                    1- 1358     ;   _F_AIN3_Convert
                                    1- 1359     ;4 compiler assigned registers:
                                    1- 1360     ;   r0x104F
                                    1- 1361     ;   r0x1050
                                    1- 1362     ;   r0x1051
                                    1- 1363     ;   r0x1052
                                    1- 1364     ;; Starting pCode block
                                    1- 1365     .segment "code"; module=main, function=_checkOutA
                                    1- 1367     ;local variable name mapping:
     0000                           1- 1370     _checkOutA:
                                    1- 1371     ; 2 exit points
                                    1- 1372     	.line	948, "main.c"; 	R_AIN3_DATA = R_AIN3_DATA_LB = 0x00;
                                    1- 1373     	BANKSEL	_R_AIN3_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1374     	CLRR	_R_AIN3_DATA_LB
                                    1- 1375     	BANKSEL	_R_AIN3_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1376     	CLRR	_R_AIN3_DATA
     0004 02rr                      1- 1377     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1378     	.line	949, "main.c"; 	F_AIN3_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1379     	MOVIA	0x08
                                    1- 1380     	MCALL	_F_AIN3_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1381     	.line	950, "main.c"; 	R_AIN3_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1382     	BANKSEL	_R_AIN3_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1383     	SWAPR	(_R_AIN3_DATA + 1),W
     0009 22F0                      1- 1384     	ANDIA	0xf0
     000A 00rr                      1- 1385     	MOVAR	(_R_AIN3_DATA + 1)
     000B 15rr                      1- 1386     	SWAPR	_R_AIN3_DATA,W
     000C 00rr                      1- 1387     	MOVAR	_R_AIN3_DATA
     000D 220F                      1- 1388     	ANDIA	0x0f
     000E 11rr                      1- 1389     	IORAR	(_R_AIN3_DATA + 1),F
     000F 12rr                      1- 1390     	XORAR	_R_AIN3_DATA,F
                                    1- 1391     	.line	951, "main.c"; 	R_AIN3_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1392     	MOVIA	0xf0
                                    1- 1393     	BANKSEL	_R_AIN3_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1394     	ANDAR	_R_AIN3_DATA_LB,F
                                    1- 1395     	.line	952, "main.c"; 	R_AIN3_DATA += R_AIN3_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1396     	MOVR	_R_AIN3_DATA_LB,W
                                    1- 1397     	BANKSEL	r0x104F
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1398     	MOVAR	r0x104F
                                    1- 1399     	BANKSEL	r0x1050
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 02rr                      1- 1400     	CLRR	r0x1050
                                    1- 1401     ;;102	MOVR	r0x104F,W
                                    1- 1402     ;;100	MOVAR	r0x1051
     0018 2100                      1- 1403     	MOVIA	0x00
                                    1- 1404     	BANKSEL	r0x1052
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 00rr                      1- 1405     	MOVAR	r0x1052
                                    1- 1406     ;;101	MOVR	r0x1051,W
                                    1- 1407     	BANKSEL	r0x104F
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1- 1408     	MOVR	r0x104F,W
                                    1- 1409     	BANKSEL	_R_AIN3_DATA
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 03rr                      1- 1410     	ADDAR	_R_AIN3_DATA,F
                                    1- 1411     	BANKSEL	r0x1052
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 01rr                      1- 1412     	MOVR	r0x1052,W
     0021 0C03                      1- 1413     	BTRSC	STATUS,0
     0022 05rr                      1- 1414     	INCR	r0x1052,W
     0023 0D03                      1- 1415     	BTRSC	STATUS,2
                                    1- 1416     	MGOTO	_00004_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1417     	BANKSEL	_R_AIN3_DATA
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 03rr                      1- 1418     	ADDAR	(_R_AIN3_DATA + 1),F
                                    1- 1419     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0027                           1- 1420     _00004_DS_:
                                    1- 1421     	.line	953, "main.c"; 	R_AIN3_DATA >>=3;					// R_AIN0_DATA divided 8
     0027 1C03                      1- 1422     	BCR	STATUS,0
                                    1- 1423     	BANKSEL	_R_AIN3_DATA
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 13rr                      1- 1424     	RRR	(_R_AIN3_DATA + 1),F
     002A 13rr                      1- 1425     	RRR	_R_AIN3_DATA,F
                                    1- 1426     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002B 1C03                      1- 1427     	BCR	STATUS,0
     002C 13rr                      1- 1428     	RRR	(_R_AIN3_DATA + 1),F
     002D 13rr                      1- 1429     	RRR	_R_AIN3_DATA,F
                                    1- 1430     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002E 1C03                      1- 1431     	BCR	STATUS,0
     002F 13rr                      1- 1432     	RRR	(_R_AIN3_DATA + 1),F
     0030 13rr                      1- 1433     	RRR	_R_AIN3_DATA,F
                                    1- 1434     	.line	954, "main.c"; 	if(debug)
                                    1- 1435     	BANKSEL	_debug
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1- 1436     	MOVR	_debug,W
     0033 0D03                      1- 1437     	BTRSC	STATUS,2
                                    1- 1438     	MGOTO	_00650_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1439     	.line	955, "main.c"; 	R_AIN3_DATA = OUTA;
     0035 212D                      1- 1440     	MOVIA	0x2d
                                    1- 1441     	BANKSEL	_R_AIN3_DATA
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 00rr                      1- 1442     	MOVAR	_R_AIN3_DATA
     0038 2101                      1- 1443     	MOVIA	0x01
     0039 00rr                      1- 1444     	MOVAR	(_R_AIN3_DATA + 1)
     003A                           1- 1445     _00650_DS_:
                                    1- 1446     	.line	956, "main.c"; 	u16t tempData = 200;
     003A 21C8                      1- 1447     	MOVIA	0xc8
                                    1- 1448     	BANKSEL	r0x104F
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 00rr                      1- 1449     	MOVAR	r0x104F
                                    1- 1450     	BANKSEL	r0x1050
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 02rr                      1- 1451     	CLRR	r0x1050
                                    1- 1452     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1453     ;;unsigned compare: left >= lit (0x8=8), size=1
                                    1- 1454     	.line	957, "main.c"; 	if(workStep > 7)
     003F 2108                      1- 1455     	MOVIA	0x08
                                    1- 1456     	BANKSEL	_workStep
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 04rr                      1- 1457     	SUBAR	_workStep,W
     0042 0803                      1- 1458     	BTRSS	STATUS,0
                                    1- 1459     	MGOTO	_00652_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1460     	.line	959, "main.c"; 	tempData = 300;
     0044 212C                      1- 1461     	MOVIA	0x2c
                                    1- 1462     	BANKSEL	r0x104F
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 00rr                      1- 1463     	MOVAR	r0x104F
     0047 2101                      1- 1464     	MOVIA	0x01
                                    1- 1465     	BANKSEL	r0x1050
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1- 1466     	MOVAR	r0x1050
                                    1- 1467     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1468     ;;unsigned compare: left >= lit (0x5=5), size=1
     004A                           1- 1469     _00652_DS_:
                                    1- 1470     	.line	962, "main.c"; 	if(pwStep > 4)
     004A 2105                      1- 1471     	MOVIA	0x05
                                    1- 1472     	BANKSEL	_pwStep
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 04rr                      1- 1473     	SUBAR	_pwStep,W
     004D 0803                      1- 1474     	BTRSS	STATUS,0
                                    1- 1475     	MGOTO	_00657_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1476     	.line	964, "main.c"; 	maxOut = 60;
     004F 213C                      1- 1477     	MOVIA	0x3c
                                    1- 1478     	BANKSEL	_maxOut
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 00rr                      1- 1479     	MOVAR	_maxOut
                                    1- 1480     	MGOTO	_00658_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1481     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1482     ;;unsigned compare: left >= lit (0x3=3), size=1
     0053                           1- 1483     _00657_DS_:
                                    1- 1484     	.line	966, "main.c"; 	else if(pwStep > 2)
     0053 2103                      1- 1485     	MOVIA	0x03
                                    1- 1486     	BANKSEL	_pwStep
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 04rr                      1- 1487     	SUBAR	_pwStep,W
     0056 0803                      1- 1488     	BTRSS	STATUS,0
                                    1- 1489     	MGOTO	_00654_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1490     	.line	968, "main.c"; 	maxOut = 55;
     0058 2137                      1- 1491     	MOVIA	0x37
                                    1- 1492     	BANKSEL	_maxOut
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 00rr                      1- 1493     	MOVAR	_maxOut
                                    1- 1494     	MGOTO	_00658_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
     005C                           1- 1495     _00654_DS_:
                                    1- 1496     	.line	972, "main.c"; 	maxOut = 50;
     005C 2132                      1- 1497     	MOVIA	0x32
                                    1- 1498     	BANKSEL	_maxOut
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 00rr                      1- 1499     	MOVAR	_maxOut
     005F                           1- 1500     _00658_DS_:
                                    1- 1501     	.line	975, "main.c"; 	if(workStep == 1)
                                    1- 1502     	BANKSEL	_workStep
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 01rr                      1- 1503     	MOVR	_workStep,W
     0061 2401                      1- 1504     	XORIA	0x01
     0062 0903                      1- 1505     	BTRSS	STATUS,2
                                    1- 1506     	MGOTO	_00680_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1507     	.line	977, "main.c"; 	tempDuty = 79;
     0064 214F                      1- 1508     	MOVIA	0x4f
                                    1- 1509     	BANKSEL	_tempDuty
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 00rr                      1- 1510     	MOVAR	_tempDuty
                                    1- 1511     	.line	978, "main.c"; 	maxOut = maxOut - 25;
     0067 21E7                      1- 1512     	MOVIA	0xe7
                                    1- 1513     	BANKSEL	_maxOut
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 03rr                      1- 1514     	ADDAR	_maxOut,F
                                    1- 1515     	MGOTO	_00681_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
     006B                           1- 1516     _00680_DS_:
                                    1- 1517     	.line	980, "main.c"; 	else if(workStep == 2)
                                    1- 1518     	BANKSEL	_workStep
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 01rr                      1- 1519     	MOVR	_workStep,W
     006D 2402                      1- 1520     	XORIA	0x02
     006E 0903                      1- 1521     	BTRSS	STATUS,2
                                    1- 1522     	MGOTO	_00677_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1523     	.line	982, "main.c"; 	tempDuty = 82;
     0070 2152                      1- 1524     	MOVIA	0x52
                                    1- 1525     	BANKSEL	_tempDuty
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 00rr                      1- 1526     	MOVAR	_tempDuty
                                    1- 1527     	.line	983, "main.c"; 	maxOut = maxOut - 20;
     0073 21EC                      1- 1528     	MOVIA	0xec
                                    1- 1529     	BANKSEL	_maxOut
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 03rr                      1- 1530     	ADDAR	_maxOut,F
                                    1- 1531     	MGOTO	_00681_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
     0077                           1- 1532     _00677_DS_:
                                    1- 1533     	.line	985, "main.c"; 	else if(workStep == 3)
                                    1- 1534     	BANKSEL	_workStep
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 01rr                      1- 1535     	MOVR	_workStep,W
     0079 2403                      1- 1536     	XORIA	0x03
     007A 0903                      1- 1537     	BTRSS	STATUS,2
                                    1- 1538     	MGOTO	_00674_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1539     	.line	987, "main.c"; 	tempDuty = 85;
     007C 2155                      1- 1540     	MOVIA	0x55
                                    1- 1541     	BANKSEL	_tempDuty
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 00rr                      1- 1542     	MOVAR	_tempDuty
                                    1- 1543     	.line	988, "main.c"; 	maxOut = maxOut - 10;
     007F 21F6                      1- 1544     	MOVIA	0xf6
                                    1- 1545     	BANKSEL	_maxOut
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 03rr                      1- 1546     	ADDAR	_maxOut,F
                                    1- 1547     	MGOTO	_00681_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
     0083                           1- 1548     _00674_DS_:
                                    1- 1549     	.line	990, "main.c"; 	else if(workStep == 4)
                                    1- 1550     	BANKSEL	_workStep
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 01rr                      1- 1551     	MOVR	_workStep,W
     0085 2404                      1- 1552     	XORIA	0x04
     0086 0903                      1- 1553     	BTRSS	STATUS,2
                                    1- 1554     	MGOTO	_00671_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1555     	.line	992, "main.c"; 	tempDuty = 88;
     0088 2158                      1- 1556     	MOVIA	0x58
                                    1- 1557     	BANKSEL	_tempDuty
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 00rr                      1- 1558     	MOVAR	_tempDuty
                                    1- 1559     	.line	993, "main.c"; 	maxOut = maxOut - 5;
     008B 21FB                      1- 1560     	MOVIA	0xfb
                                    1- 1561     	BANKSEL	_maxOut
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 03rr                      1- 1562     	ADDAR	_maxOut,F
                                    1- 1563     	MGOTO	_00681_DS_
     008E 3rrr                      3-   63 m1      LGOTO rom_address
     008F                           1- 1564     _00671_DS_:
                                    1- 1565     	.line	995, "main.c"; 	else if(workStep == 5)
                                    1- 1566     	BANKSEL	_workStep
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 01rr                      1- 1567     	MOVR	_workStep,W
     0091 2405                      1- 1568     	XORIA	0x05
     0092 0903                      1- 1569     	BTRSS	STATUS,2
                                    1- 1570     	MGOTO	_00668_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1571     	.line	997, "main.c"; 	tempDuty = 90;
     0094 215A                      1- 1572     	MOVIA	0x5a
                                    1- 1573     	BANKSEL	_tempDuty
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 00rr                      1- 1574     	MOVAR	_tempDuty
                                    1- 1575     	MGOTO	_00681_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
     0098                           1- 1576     _00668_DS_:
                                    1- 1577     	.line	999, "main.c"; 	else if(workStep == 6)
                                    1- 1578     	BANKSEL	_workStep
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 01rr                      1- 1579     	MOVR	_workStep,W
     009A 2406                      1- 1580     	XORIA	0x06
     009B 0903                      1- 1581     	BTRSS	STATUS,2
                                    1- 1582     	MGOTO	_00665_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1583     	.line	1001, "main.c"; 	tempDuty = 93;
     009D 215D                      1- 1584     	MOVIA	0x5d
                                    1- 1585     	BANKSEL	_tempDuty
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 00rr                      1- 1586     	MOVAR	_tempDuty
                                    1- 1587     	.line	1002, "main.c"; 	maxOut = maxOut + 10;
     00A0 210A                      1- 1588     	MOVIA	0x0a
                                    1- 1589     	BANKSEL	_maxOut
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 03rr                      1- 1590     	ADDAR	_maxOut,F
                                    1- 1591     	MGOTO	_00681_DS_
     00A3 3rrr                      3-   63 m1      LGOTO rom_address
     00A4                           1- 1592     _00665_DS_:
                                    1- 1593     	.line	1004, "main.c"; 	else if(workStep == 7)
                                    1- 1594     	BANKSEL	_workStep
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 01rr                      1- 1595     	MOVR	_workStep,W
     00A6 2407                      1- 1596     	XORIA	0x07
     00A7 0903                      1- 1597     	BTRSS	STATUS,2
                                    1- 1598     	MGOTO	_00662_DS_
     00A8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1599     	.line	1006, "main.c"; 	tempDuty = 96;
     00A9 2160                      1- 1600     	MOVIA	0x60
                                    1- 1601     	BANKSEL	_tempDuty
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 00rr                      1- 1602     	MOVAR	_tempDuty
                                    1- 1603     	.line	1007, "main.c"; 	maxOut = maxOut + 18;
     00AC 2112                      1- 1604     	MOVIA	0x12
                                    1- 1605     	BANKSEL	_maxOut
     00AD rrrr                      3-  110 m1      .banksel ram_address
     00AE 03rr                      1- 1606     	ADDAR	_maxOut,F
                                    1- 1607     	MGOTO	_00681_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
     00B0                           1- 1608     _00662_DS_:
                                    1- 1609     	.line	1009, "main.c"; 	else if(workStep == 8)
                                    1- 1610     	BANKSEL	_workStep
     00B0 rrrr                      3-  110 m1      .banksel ram_address
     00B1 01rr                      1- 1611     	MOVR	_workStep,W
     00B2 2408                      1- 1612     	XORIA	0x08
     00B3 0903                      1- 1613     	BTRSS	STATUS,2
                                    1- 1614     	MGOTO	_00681_DS_
     00B4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1615     	.line	1011, "main.c"; 	tempDuty = 99;
     00B5 2163                      1- 1616     	MOVIA	0x63
                                    1- 1617     	BANKSEL	_tempDuty
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 00rr                      1- 1618     	MOVAR	_tempDuty
                                    1- 1619     	.line	1012, "main.c"; 	maxOut = maxOut + 22;
     00B8 2116                      1- 1620     	MOVIA	0x16
                                    1- 1621     	BANKSEL	_maxOut
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 03rr                      1- 1622     	ADDAR	_maxOut,F
     00BB                           1- 1623     _00681_DS_:
                                    1- 1624     	.line	1014, "main.c"; 	if(R_AIN3_DATA > tempData)
                                    1- 1625     	BANKSEL	_R_AIN3_DATA
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 01rr                      1- 1626     	MOVR	(_R_AIN3_DATA + 1),W
                                    1- 1627     	BANKSEL	r0x1050
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 04rr                      1- 1628     	SUBAR	r0x1050,W
     00BF 0903                      1- 1629     	BTRSS	STATUS,2
                                    1- 1630     	MGOTO	_00755_DS_
     00C0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1631     	BANKSEL	_R_AIN3_DATA
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 01rr                      1- 1632     	MOVR	_R_AIN3_DATA,W
                                    1- 1633     	BANKSEL	r0x104F
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 04rr                      1- 1634     	SUBAR	r0x104F,W
     00C5                           1- 1635     _00755_DS_:
     00C5 0C03                      1- 1636     	BTRSC	STATUS,0
                                    1- 1637     	MGOTO	_00692_DS_
     00C6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1638     	.line	1016, "main.c"; 	if(++overCount > 5)
                                    1- 1639     	BANKSEL	_overCount
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 05rr                      1- 1640     	INCR	_overCount,F
                                    1- 1641     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1642     ;;unsigned compare: left >= lit (0x6=6), size=1
     00C9 2106                      1- 1643     	MOVIA	0x06
     00CA 04rr                      1- 1644     	SUBAR	_overCount,W
     00CB 0803                      1- 1645     	BTRSS	STATUS,0
                                    1- 1646     	MGOTO	_00693_DS_
     00CC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1647     	.line	1018, "main.c"; 	overCount = 5;
     00CD 2105                      1- 1648     	MOVIA	0x05
     00CE 00rr                      1- 1649     	MOVAR	_overCount
                                    1- 1650     	MGOTO	_00693_DS_
     00CF 3rrr                      3-   63 m1      LGOTO rom_address
     00D0                           1- 1651     _00692_DS_:
                                    1- 1652     	.line	1021, "main.c"; 	else if(R_AIN3_DATA > maxOut)
                                    1- 1653     	BANKSEL	_maxOut
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 01rr                      1- 1654     	MOVR	_maxOut,W
                                    1- 1655     	BANKSEL	r0x104F
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 00rr                      1- 1656     	MOVAR	r0x104F
                                    1- 1657     	BANKSEL	r0x1050
     00D4 rrrr                      3-  110 m1      .banksel ram_address
     00D5 02rr                      1- 1658     	CLRR	r0x1050
                                    1- 1659     	BANKSEL	_R_AIN3_DATA
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 01rr                      1- 1660     	MOVR	(_R_AIN3_DATA + 1),W
                                    1- 1661     	BANKSEL	r0x1050
     00D8 rrrr                      3-  110 m1      .banksel ram_address
     00D9 04rr                      1- 1662     	SUBAR	r0x1050,W
     00DA 0903                      1- 1663     	BTRSS	STATUS,2
                                    1- 1664     	MGOTO	_00757_DS_
     00DB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1665     	BANKSEL	_R_AIN3_DATA
     00DC rrrr                      3-  110 m1      .banksel ram_address
     00DD 01rr                      1- 1666     	MOVR	_R_AIN3_DATA,W
                                    1- 1667     	BANKSEL	r0x104F
     00DE rrrr                      3-  110 m1      .banksel ram_address
     00DF 04rr                      1- 1668     	SUBAR	r0x104F,W
     00E0                           1- 1669     _00757_DS_:
     00E0 0C03                      1- 1670     	BTRSC	STATUS,0
                                    1- 1671     	MGOTO	_00689_DS_
     00E1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1672     	.line	1023, "main.c"; 	if(overCount > 0)
                                    1- 1673     	BANKSEL	_overCount
     00E2 rrrr                      3-  110 m1      .banksel ram_address
     00E3 01rr                      1- 1674     	MOVR	_overCount,W
     00E4 0903                      1- 1675     	BTRSS	STATUS,2
                                    1- 1676     	.line	1025, "main.c"; 	overCount--;
     00E5 06rr                      1- 1677     	DECR	_overCount,F
                                    1- 1678     	.line	1030, "main.c"; 	PWM2DUTY = tempDuty;
                                    1- 1679     	BANKSEL	_tempDuty
     00E6 rrrr                      3-  110 m1      .banksel ram_address
     00E7 01rr                      1- 1680     	MOVR	_tempDuty,W
     00E8 00rr                      1- 1681     	SFUN	_PWM2DUTY
                                    1- 1682     	MGOTO	_00693_DS_
     00E9 3rrr                      3-   63 m1      LGOTO rom_address
     00EA                           1- 1683     _00689_DS_:
                                    1- 1684     	.line	1034, "main.c"; 	if(overCount > 0)
                                    1- 1685     	BANKSEL	_overCount
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 01rr                      1- 1686     	MOVR	_overCount,W
     00EC 0903                      1- 1687     	BTRSS	STATUS,2
                                    1- 1688     	.line	1036, "main.c"; 	overCount--;
     00ED 06rr                      1- 1689     	DECR	_overCount,F
                                    1- 1690     	.line	1038, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 1691     	BANKSEL	_maxDuty
     00EE rrrr                      3-  110 m1      .banksel ram_address
     00EF 01rr                      1- 1692     	MOVR	_maxDuty,W
     00F0 00rr                      1- 1693     	SFUN	_PWM2DUTY
     00F1                           1- 1694     _00693_DS_:
                                    1- 1695     	.line	1042, "main.c"; 	if(workStep > 0)
                                    1- 1696     	BANKSEL	_workStep
     00F1 rrrr                      3-  110 m1      .banksel ram_address
     00F2 01rr                      1- 1697     	MOVR	_workStep,W
     00F3 0D03                      1- 1698     	BTRSC	STATUS,2
                                    1- 1699     	MGOTO	_00696_DS_
     00F4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1700     	.line	1043, "main.c"; 	tempLedStep = ledStep = workStep;
     00F5 01rr                      1- 1701     	MOVR	_workStep,W
                                    1- 1702     	BANKSEL	r0x104F
     00F6 rrrr                      3-  110 m1      .banksel ram_address
     00F7 00rr                      1- 1703     	MOVAR	r0x104F
                                    1- 1704     	BANKSEL	_ledStep
     00F8 rrrr                      3-  110 m1      .banksel ram_address
     00F9 00rr                      1- 1705     	MOVAR	_ledStep
                                    1- 1706     	BANKSEL	r0x104F
     00FA rrrr                      3-  110 m1      .banksel ram_address
     00FB 01rr                      1- 1707     	MOVR	r0x104F,W
                                    1- 1708     	BANKSEL	_tempLedStep
     00FC rrrr                      3-  110 m1      .banksel ram_address
     00FD 00rr                      1- 1709     	MOVAR	_tempLedStep
     00FE                           1- 1710     _00696_DS_:
                                    1- 1711     	.line	1046, "main.c"; 	}
                                    1- 1712     	RETURN	
     00FE 0010                      3-   40 m1      ret
                                    1- 1713     ; exit point of _checkOutA
                                    1- 1715     ;***
                                    1- 1716     ;  pBlock Stats: dbName = C
                                    1- 1717     ;***
                                    1- 1718     ;has an exit
                                    1- 1719     ;functions called:
                                    1- 1720     ;   _F_AIN4_Convert
                                    1- 1721     ;   _F_AIN4_Convert
                                    1- 1722     ;4 compiler assigned registers:
                                    1- 1723     ;   r0x1053
                                    1- 1724     ;   r0x1054
                                    1- 1725     ;   r0x1055
                                    1- 1726     ;   r0x1056
                                    1- 1727     ;; Starting pCode block
                                    1- 1728     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1730     _checkBatAD:
                                    1- 1731     ; 2 exit points
                                    1- 1732     	.line	787, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1733     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1734     	CLRR	_R_AIN4_DATA_LB
                                    1- 1735     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1736     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1737     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1738     	.line	788, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1739     	MOVIA	0x08
                                    1- 1740     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1741     	.line	789, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1742     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1743     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1744     	ANDIA	0xf0
     000A 00rr                      1- 1745     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1746     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1747     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1748     	ANDIA	0x0f
     000E 11rr                      1- 1749     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1750     	XORAR	_R_AIN4_DATA,F
                                    1- 1751     	.line	790, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1752     	MOVIA	0xf0
                                    1- 1753     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1754     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1755     	.line	791, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1756     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1757     	BANKSEL	r0x1055
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1758     	MOVAR	r0x1055
                                    1- 1759     ;;1	MOVAR	r0x1053
                                    1- 1760     ;;1	CLRR	r0x1054
                                    1- 1761     ;;99	MOVR	r0x1053,W
     0016 2100                      1- 1762     	MOVIA	0x00
                                    1- 1763     	BANKSEL	r0x1056
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1764     	MOVAR	r0x1056
                                    1- 1765     	BANKSEL	r0x1055
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1766     	MOVR	r0x1055,W
                                    1- 1767     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1768     	ADDAR	_R_AIN4_DATA,F
                                    1- 1769     	BANKSEL	r0x1056
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1770     	MOVR	r0x1056,W
     001F 0C03                      1- 1771     	BTRSC	STATUS,0
     0020 05rr                      1- 1772     	INCR	r0x1056,W
     0021 0D03                      1- 1773     	BTRSC	STATUS,2
                                    1- 1774     	MGOTO	_00005_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1775     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1776     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1777     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1778     _00005_DS_:
                                    1- 1779     	.line	792, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1780     	BCR	STATUS,0
                                    1- 1781     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1782     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1783     	RRR	_R_AIN4_DATA,F
                                    1- 1784     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1785     	BCR	STATUS,0
     002A 13rr                      1- 1786     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1787     	RRR	_R_AIN4_DATA,F
                                    1- 1788     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1789     	BCR	STATUS,0
     002D 13rr                      1- 1790     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1791     	RRR	_R_AIN4_DATA,F
                                    1- 1792     	.line	793, "main.c"; 	if(R_AIN4_DATA > preBatValue)
     002F 01rr                      1- 1793     	MOVR	(_R_AIN4_DATA + 1),W
                                    1- 1794     	BANKSEL	_preBatValue
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 04rr                      1- 1795     	SUBAR	(_preBatValue + 1),W
     0032 0903                      1- 1796     	BTRSS	STATUS,2
                                    1- 1797     	MGOTO	_00634_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1798     	BANKSEL	_R_AIN4_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 01rr                      1- 1799     	MOVR	_R_AIN4_DATA,W
                                    1- 1800     	BANKSEL	_preBatValue
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 04rr                      1- 1801     	SUBAR	_preBatValue,W
     0038                           1- 1802     _00634_DS_:
     0038 0C03                      1- 1803     	BTRSC	STATUS,0
                                    1- 1804     	MGOTO	_00563_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1805     	.line	794, "main.c"; 	preBatValue = R_AIN4_DATA;
                                    1- 1806     	BANKSEL	_R_AIN4_DATA
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1- 1807     	MOVR	_R_AIN4_DATA,W
                                    1- 1808     	BANKSEL	_preBatValue
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 00rr                      1- 1809     	MOVAR	_preBatValue
                                    1- 1810     	BANKSEL	_R_AIN4_DATA
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 01rr                      1- 1811     	MOVR	(_R_AIN4_DATA + 1),W
                                    1- 1812     	BANKSEL	_preBatValue
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 00rr                      1- 1813     	MOVAR	(_preBatValue + 1)
                                    1- 1814     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1815     ;;unsigned compare: left >= lit (0x614=1556), size=2
     0042                           1- 1816     _00563_DS_:
                                    1- 1817     	.line	795, "main.c"; 	if(R_AIN4_DATA > 1555)				//8.35
     0042 2106                      1- 1818     	MOVIA	0x06
                                    1- 1819     	BANKSEL	_R_AIN4_DATA
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 04rr                      1- 1820     	SUBAR	(_R_AIN4_DATA + 1),W
     0045 0903                      1- 1821     	BTRSS	STATUS,2
                                    1- 1822     	MGOTO	_00635_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
     0047 2114                      1- 1823     	MOVIA	0x14
     0048 04rr                      1- 1824     	SUBAR	_R_AIN4_DATA,W
     0049                           1- 1825     _00635_DS_:
     0049 0803                      1- 1826     	BTRSS	STATUS,0
                                    1- 1827     	MGOTO	_00568_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1828     	.line	797, "main.c"; 	if(++batFullTime > 2500)
                                    1- 1829     	BANKSEL	_batFullTime
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 05rr                      1- 1830     	INCR	_batFullTime,F
     004D 0D03                      1- 1831     	BTRSC	STATUS,2
     004E 05rr                      1- 1832     	INCR	(_batFullTime + 1),F
                                    1- 1833     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1834     ;;unsigned compare: left >= lit (0x9C5=2501), size=2
     004F 2109                      1- 1835     	MOVIA	0x09
     0050 04rr                      1- 1836     	SUBAR	(_batFullTime + 1),W
     0051 0903                      1- 1837     	BTRSS	STATUS,2
                                    1- 1838     	MGOTO	_00636_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
     0053 21C5                      1- 1839     	MOVIA	0xc5
     0054 04rr                      1- 1840     	SUBAR	_batFullTime,W
     0055                           1- 1841     _00636_DS_:
     0055 0803                      1- 1842     	BTRSS	STATUS,0
                                    1- 1843     	MGOTO	_00565_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1844     	.line	799, "main.c"; 	batFullTime = 2500;
     0057 21C4                      1- 1845     	MOVIA	0xc4
                                    1- 1846     	BANKSEL	_batFullTime
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 00rr                      1- 1847     	MOVAR	_batFullTime
     005A 2109                      1- 1848     	MOVIA	0x09
     005B 00rr                      1- 1849     	MOVAR	(_batFullTime + 1)
                                    1- 1850     	.line	800, "main.c"; 	pwStep = 9;
                                    1- 1851     	BANKSEL	_pwStep
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 00rr                      1- 1852     	MOVAR	_pwStep
                                    1- 1853     	.line	801, "main.c"; 	return;
                                    1- 1854     	MGOTO	_00596_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
     005F                           1- 1855     _00565_DS_:
                                    1- 1856     	.line	805, "main.c"; 	batValue = 99;
     005F 2163                      1- 1857     	MOVIA	0x63
                                    1- 1858     	BANKSEL	_batValue
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 00rr                      1- 1859     	MOVAR	_batValue
                                    1- 1860     	.line	806, "main.c"; 	pwStep = 8;
     0062 2108                      1- 1861     	MOVIA	0x08
                                    1- 1862     	BANKSEL	_pwStep
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 00rr                      1- 1863     	MOVAR	_pwStep
                                    1- 1864     	MGOTO	_00569_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
     0066                           1- 1865     _00568_DS_:
                                    1- 1866     	.line	812, "main.c"; 	batFullTime = 0;
                                    1- 1867     	BANKSEL	_batFullTime
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 02rr                      1- 1868     	CLRR	_batFullTime
     0068 02rr                      1- 1869     	CLRR	(_batFullTime + 1)
                                    1- 1870     ;;unsigned compare: left < lit (0x609=1545), size=2
     0069                           1- 1871     _00569_DS_:
                                    1- 1872     	.line	895, "main.c"; 	if(R_AIN4_DATA >= 1545)			//8.3
     0069 2106                      1- 1873     	MOVIA	0x06
                                    1- 1874     	BANKSEL	_R_AIN4_DATA
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 04rr                      1- 1875     	SUBAR	(_R_AIN4_DATA + 1),W
     006C 0903                      1- 1876     	BTRSS	STATUS,2
                                    1- 1877     	MGOTO	_00637_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
     006E 2109                      1- 1878     	MOVIA	0x09
     006F 04rr                      1- 1879     	SUBAR	_R_AIN4_DATA,W
     0070                           1- 1880     _00637_DS_:
     0070 0803                      1- 1881     	BTRSS	STATUS,0
                                    1- 1882     	MGOTO	_00592_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1883     	.line	897, "main.c"; 	pwStep = 8;
     0072 2108                      1- 1884     	MOVIA	0x08
                                    1- 1885     	BANKSEL	_pwStep
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 00rr                      1- 1886     	MOVAR	_pwStep
                                    1- 1887     	MGOTO	_00593_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1888     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1889     ;;unsigned compare: left >= lit (0x5FB=1531), size=2
     0076                           1- 1890     _00592_DS_:
                                    1- 1891     	.line	899, "main.c"; 	else if(R_AIN4_DATA > 1530)		//8.14
     0076 2105                      1- 1892     	MOVIA	0x05
                                    1- 1893     	BANKSEL	_R_AIN4_DATA
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 04rr                      1- 1894     	SUBAR	(_R_AIN4_DATA + 1),W
     0079 0903                      1- 1895     	BTRSS	STATUS,2
                                    1- 1896     	MGOTO	_00638_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
     007B 21FB                      1- 1897     	MOVIA	0xfb
     007C 04rr                      1- 1898     	SUBAR	_R_AIN4_DATA,W
     007D                           1- 1899     _00638_DS_:
     007D 0803                      1- 1900     	BTRSS	STATUS,0
                                    1- 1901     	MGOTO	_00589_DS_
     007E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1902     	.line	901, "main.c"; 	pwStep = 7;
     007F 2107                      1- 1903     	MOVIA	0x07
                                    1- 1904     	BANKSEL	_pwStep
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 00rr                      1- 1905     	MOVAR	_pwStep
                                    1- 1906     	.line	902, "main.c"; 	fullLock = 0;
                                    1- 1907     	BANKSEL	_fullLock
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 02rr                      1- 1908     	CLRR	_fullLock
                                    1- 1909     	MGOTO	_00593_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1910     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1911     ;;unsigned compare: left >= lit (0x5E2=1506), size=2
     0085                           1- 1912     _00589_DS_:
                                    1- 1913     	.line	904, "main.c"; 	else if(R_AIN4_DATA > 1505)		//8.0
     0085 2105                      1- 1914     	MOVIA	0x05
                                    1- 1915     	BANKSEL	_R_AIN4_DATA
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 04rr                      1- 1916     	SUBAR	(_R_AIN4_DATA + 1),W
     0088 0903                      1- 1917     	BTRSS	STATUS,2
                                    1- 1918     	MGOTO	_00639_DS_
     0089 3rrr                      3-   63 m1      LGOTO rom_address
     008A 21E2                      1- 1919     	MOVIA	0xe2
     008B 04rr                      1- 1920     	SUBAR	_R_AIN4_DATA,W
     008C                           1- 1921     _00639_DS_:
     008C 0803                      1- 1922     	BTRSS	STATUS,0
                                    1- 1923     	MGOTO	_00586_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1924     	.line	906, "main.c"; 	pwStep = 6;
     008E 2106                      1- 1925     	MOVIA	0x06
                                    1- 1926     	BANKSEL	_pwStep
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 00rr                      1- 1927     	MOVAR	_pwStep
                                    1- 1928     	.line	907, "main.c"; 	fullLock = 0;
                                    1- 1929     	BANKSEL	_fullLock
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 02rr                      1- 1930     	CLRR	_fullLock
                                    1- 1931     	MGOTO	_00593_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1932     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1933     ;;unsigned compare: left >= lit (0x5CE=1486), size=2
     0094                           1- 1934     _00586_DS_:
                                    1- 1935     	.line	909, "main.c"; 	else if(R_AIN4_DATA > 1485)		//8.0
     0094 2105                      1- 1936     	MOVIA	0x05
                                    1- 1937     	BANKSEL	_R_AIN4_DATA
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 04rr                      1- 1938     	SUBAR	(_R_AIN4_DATA + 1),W
     0097 0903                      1- 1939     	BTRSS	STATUS,2
                                    1- 1940     	MGOTO	_00640_DS_
     0098 3rrr                      3-   63 m1      LGOTO rom_address
     0099 21CE                      1- 1941     	MOVIA	0xce
     009A 04rr                      1- 1942     	SUBAR	_R_AIN4_DATA,W
     009B                           1- 1943     _00640_DS_:
     009B 0803                      1- 1944     	BTRSS	STATUS,0
                                    1- 1945     	MGOTO	_00583_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1946     	.line	911, "main.c"; 	pwStep = 5;
     009D 2105                      1- 1947     	MOVIA	0x05
                                    1- 1948     	BANKSEL	_pwStep
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 00rr                      1- 1949     	MOVAR	_pwStep
                                    1- 1950     	.line	912, "main.c"; 	fullLock = 0;
                                    1- 1951     	BANKSEL	_fullLock
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 02rr                      1- 1952     	CLRR	_fullLock
                                    1- 1953     	MGOTO	_00593_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1954     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1955     ;;unsigned compare: left >= lit (0x5B0=1456), size=2
     00A3                           1- 1956     _00583_DS_:
                                    1- 1957     	.line	914, "main.c"; 	else if(R_AIN4_DATA > 1455)		//7.89
     00A3 2105                      1- 1958     	MOVIA	0x05
                                    1- 1959     	BANKSEL	_R_AIN4_DATA
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 04rr                      1- 1960     	SUBAR	(_R_AIN4_DATA + 1),W
     00A6 0903                      1- 1961     	BTRSS	STATUS,2
                                    1- 1962     	MGOTO	_00641_DS_
     00A7 3rrr                      3-   63 m1      LGOTO rom_address
     00A8 21B0                      1- 1963     	MOVIA	0xb0
     00A9 04rr                      1- 1964     	SUBAR	_R_AIN4_DATA,W
     00AA                           1- 1965     _00641_DS_:
     00AA 0803                      1- 1966     	BTRSS	STATUS,0
                                    1- 1967     	MGOTO	_00580_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1968     	.line	916, "main.c"; 	pwStep = 4;
     00AC 2104                      1- 1969     	MOVIA	0x04
                                    1- 1970     	BANKSEL	_pwStep
     00AD rrrr                      3-  110 m1      .banksel ram_address
     00AE 00rr                      1- 1971     	MOVAR	_pwStep
                                    1- 1972     	.line	917, "main.c"; 	fullLock = 0;
                                    1- 1973     	BANKSEL	_fullLock
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 02rr                      1- 1974     	CLRR	_fullLock
                                    1- 1975     	MGOTO	_00593_DS_
     00B1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1976     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1977     ;;unsigned compare: left >= lit (0x583=1411), size=2
     00B2                           1- 1978     _00580_DS_:
                                    1- 1979     	.line	919, "main.c"; 	else if(R_AIN4_DATA > 1410)		//7.73
     00B2 2105                      1- 1980     	MOVIA	0x05
                                    1- 1981     	BANKSEL	_R_AIN4_DATA
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 04rr                      1- 1982     	SUBAR	(_R_AIN4_DATA + 1),W
     00B5 0903                      1- 1983     	BTRSS	STATUS,2
                                    1- 1984     	MGOTO	_00642_DS_
     00B6 3rrr                      3-   63 m1      LGOTO rom_address
     00B7 2183                      1- 1985     	MOVIA	0x83
     00B8 04rr                      1- 1986     	SUBAR	_R_AIN4_DATA,W
     00B9                           1- 1987     _00642_DS_:
     00B9 0803                      1- 1988     	BTRSS	STATUS,0
                                    1- 1989     	MGOTO	_00577_DS_
     00BA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1990     	.line	921, "main.c"; 	pwStep = 3;
     00BB 2103                      1- 1991     	MOVIA	0x03
                                    1- 1992     	BANKSEL	_pwStep
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 00rr                      1- 1993     	MOVAR	_pwStep
                                    1- 1994     	.line	922, "main.c"; 	fullLock = 0;
                                    1- 1995     	BANKSEL	_fullLock
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 02rr                      1- 1996     	CLRR	_fullLock
                                    1- 1997     	MGOTO	_00593_DS_
     00C0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1998     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1999     ;;unsigned compare: left >= lit (0x551=1361), size=2
     00C1                           1- 2000     _00577_DS_:
                                    1- 2001     	.line	924, "main.c"; 	else if(R_AIN4_DATA > 1360)		//7.41
     00C1 2105                      1- 2002     	MOVIA	0x05
                                    1- 2003     	BANKSEL	_R_AIN4_DATA
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 04rr                      1- 2004     	SUBAR	(_R_AIN4_DATA + 1),W
     00C4 0903                      1- 2005     	BTRSS	STATUS,2
                                    1- 2006     	MGOTO	_00643_DS_
     00C5 3rrr                      3-   63 m1      LGOTO rom_address
     00C6 2151                      1- 2007     	MOVIA	0x51
     00C7 04rr                      1- 2008     	SUBAR	_R_AIN4_DATA,W
     00C8                           1- 2009     _00643_DS_:
     00C8 0803                      1- 2010     	BTRSS	STATUS,0
                                    1- 2011     	MGOTO	_00574_DS_
     00C9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2012     	.line	926, "main.c"; 	pwStep = 2;
     00CA 2102                      1- 2013     	MOVIA	0x02
                                    1- 2014     	BANKSEL	_pwStep
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 00rr                      1- 2015     	MOVAR	_pwStep
                                    1- 2016     	.line	927, "main.c"; 	fullLock = 0;
                                    1- 2017     	BANKSEL	_fullLock
     00CD rrrr                      3-  110 m1      .banksel ram_address
     00CE 02rr                      1- 2018     	CLRR	_fullLock
                                    1- 2019     	MGOTO	_00593_DS_
     00CF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2020     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2021     ;;unsigned compare: left >= lit (0x4F9=1273), size=2
     00D0                           1- 2022     _00574_DS_:
                                    1- 2023     	.line	929, "main.c"; 	else if(R_AIN4_DATA > 1272)  //6.83
     00D0 2104                      1- 2024     	MOVIA	0x04
                                    1- 2025     	BANKSEL	_R_AIN4_DATA
     00D1 rrrr                      3-  110 m1      .banksel ram_address
     00D2 04rr                      1- 2026     	SUBAR	(_R_AIN4_DATA + 1),W
     00D3 0903                      1- 2027     	BTRSS	STATUS,2
                                    1- 2028     	MGOTO	_00644_DS_
     00D4 3rrr                      3-   63 m1      LGOTO rom_address
     00D5 21F9                      1- 2029     	MOVIA	0xf9
     00D6 04rr                      1- 2030     	SUBAR	_R_AIN4_DATA,W
     00D7                           1- 2031     _00644_DS_:
     00D7 0803                      1- 2032     	BTRSS	STATUS,0
                                    1- 2033     	MGOTO	_00571_DS_
     00D8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2034     	.line	930, "main.c"; 	pwStep = 1;
     00D9 2101                      1- 2035     	MOVIA	0x01
                                    1- 2036     	BANKSEL	_pwStep
     00DA rrrr                      3-  110 m1      .banksel ram_address
     00DB 00rr                      1- 2037     	MOVAR	_pwStep
                                    1- 2038     	MGOTO	_00593_DS_
     00DC 3rrr                      3-   63 m1      LGOTO rom_address
     00DD                           1- 2039     _00571_DS_:
                                    1- 2040     	.line	932, "main.c"; 	pwStep = 0;
                                    1- 2041     	BANKSEL	_pwStep
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 02rr                      1- 2042     	CLRR	_pwStep
     00DF                           1- 2043     _00593_DS_:
                                    1- 2044     	.line	934, "main.c"; 	if(workStep > 0)
                                    1- 2045     	BANKSEL	_workStep
     00DF rrrr                      3-  110 m1      .banksel ram_address
     00E0 01rr                      1- 2046     	MOVR	_workStep,W
     00E1 0D03                      1- 2047     	BTRSC	STATUS,2
                                    1- 2048     	MGOTO	_00596_DS_
     00E2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2049     	.line	935, "main.c"; 	ledStep = workStep;
     00E3 01rr                      1- 2050     	MOVR	_workStep,W
                                    1- 2051     	BANKSEL	_ledStep
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 00rr                      1- 2052     	MOVAR	_ledStep
     00E6                           1- 2053     _00596_DS_:
                                    1- 2054     	.line	939, "main.c"; 	}
                                    1- 2055     	RETURN	
     00E6 0010                      3-   40 m1      ret
                                    1- 2056     ; exit point of _checkBatAD
                                    1- 2058     ;***
                                    1- 2059     ;  pBlock Stats: dbName = C
                                    1- 2060     ;***
                                    1- 2061     ;has an exit
                                    1- 2062     ;functions called:
                                    1- 2063     ;   _delay
                                    1- 2064     ;   _delay
                                    1- 2065     ;; Starting pCode block
                                    1- 2066     .segment "code"; module=main, function=_initAD
     0000                           1- 2068     _initAD:
                                    1- 2069     ; 2 exit points
                                    1- 2070     	.line	763, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 2071     	MOVIA	0x84
     0001 00rr                      1- 2072     	MOVAR	_ADMD
                                    1- 2073     	.line	768, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 2074     	CLRR	_ADVREFH
                                    1- 2075     	.line	773, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 2076     	MOVIA	0x10
     0004 00rr                      1- 2077     	MOVAR	_ADR
                                    1- 2078     	.line	775, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 2079     	MOVIA	0x03
     0006 00rr                      1- 2080     	MOVAR	_ADCR
                                    1- 2081     	.line	778, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 2082     	BSR	_ADMDbits,4
                                    1- 2083     	.line	779, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 2084     	MOVIA	0x64
                                    1- 2085     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2086     	.line	782, "main.c"; 	}
                                    1- 2087     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 2088     ; exit point of _initAD
                                    1- 2090     ;***
                                    1- 2091     ;  pBlock Stats: dbName = C
                                    1- 2092     ;***
                                    1- 2093     ;has an exit
                                    1- 2094     ;2 compiler assigned registers:
                                    1- 2095     ;   r0x103B
                                    1- 2096     ;   r0x103C
                                    1- 2097     ;; Starting pCode block
                                    1- 2098     .segment "code"; module=main, function=_delay
                                    1- 2100     ;local variable name mapping:
     0000                           1- 2103     _delay:
                                    1- 2104     ; 2 exit points
                                    1- 2105     	.line	753, "main.c"; 	void delay(u8t time)
                                    1- 2106     	BANKSEL	r0x103B
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2107     	MOVAR	r0x103B
                                    1- 2108     	.line	755, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2109     	BANKSEL	r0x103C
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2110     	CLRR	r0x103C
     0004                           1- 2111     _00551_DS_:
                                    1- 2112     	BANKSEL	r0x103B
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 2113     	MOVR	r0x103B,W
                                    1- 2114     	BANKSEL	r0x103C
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1- 2115     	SUBAR	r0x103C,W
     0008 0C03                      1- 2116     	BTRSC	STATUS,0
                                    1- 2117     	MGOTO	_00553_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2118     	.line	756, "main.c"; 	NOP();
     000A 0000                      1- 2119     	nop
                                    1- 2120     	.line	755, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2121     	BANKSEL	r0x103C
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 2122     	INCR	r0x103C,F
                                    1- 2123     	MGOTO	_00551_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 2124     _00553_DS_:
                                    1- 2125     	.line	757, "main.c"; 	}
                                    1- 2126     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2127     ; exit point of _delay
                                    1- 2129     ;***
                                    1- 2130     ;  pBlock Stats: dbName = C
                                    1- 2131     ;***
                                    1- 2132     ;has an exit
                                    1- 2133     ;functions called:
                                    1- 2134     ;   _pwmStop
                                    1- 2135     ;   _powerOff
                                    1- 2136     ;   _pwmStop
                                    1- 2137     ;   _powerOff
                                    1- 2138     ;5 compiler assigned registers:
                                    1- 2139     ;   r0x1057
                                    1- 2140     ;   r0x1058
                                    1- 2141     ;   r0x1059
                                    1- 2142     ;   r0x105A
                                    1- 2143     ;   r0x105B
                                    1- 2144     ;; Starting pCode block
                                    1- 2145     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2147     _chrgCtr:
                                    1- 2148     ; 2 exit points
                                    1- 2149     	.line	640, "main.c"; 	if(PORTA & 0x20)
                                    1- 2150     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Arr                      1- 2151     	BTRSS	_PORTA,5
                                    1- 2152     	MGOTO	_00482_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2153     	.line	643, "main.c"; 	lockStart = 0;
                                    1- 2154     	BANKSEL	_lockStart
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 2155     	CLRR	_lockStart
                                    1- 2156     	.line	644, "main.c"; 	chrgFlag = 1;
     0005 2101                      1- 2157     	MOVIA	0x01
                                    1- 2158     	BANKSEL	_chrgFlag
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 2159     	MOVAR	_chrgFlag
                                    1- 2160     	.line	645, "main.c"; 	workStep = 0;
                                    1- 2161     	BANKSEL	_workStep
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 2162     	CLRR	_workStep
                                    1- 2163     	.line	646, "main.c"; 	ledLightTime = 0;
                                    1- 2164     	BANKSEL	_ledLightTime
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 02rr                      1- 2165     	CLRR	_ledLightTime
                                    1- 2166     	.line	647, "main.c"; 	pwmStop();
                                    1- 2167     	MCALL	_pwmStop
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2168     	.line	649, "main.c"; 	if(fullLock || pwStep >= 9)
                                    1- 2169     	BANKSEL	_fullLock
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2170     	MOVR	_fullLock,W
     000F 0903                      1- 2171     	BTRSS	STATUS,2
                                    1- 2172     	MGOTO	_00463_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2173     ;;unsigned compare: left < lit (0x9=9), size=1
     0011 2109                      1- 2174     	MOVIA	0x09
                                    1- 2175     	BANKSEL	_pwStep
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 2176     	SUBAR	_pwStep,W
     0014 0803                      1- 2177     	BTRSS	STATUS,0
                                    1- 2178     	MGOTO	_00464_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
     0016                           1- 2179     _00463_DS_:
                                    1- 2180     	.line	653, "main.c"; 	ledStep = 8;
     0016 2108                      1- 2181     	MOVIA	0x08
                                    1- 2182     	BANKSEL	_ledStep
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 2183     	MOVAR	_ledStep
                                    1- 2184     	.line	654, "main.c"; 	if(++fullLockCount > 200)
                                    1- 2185     	BANKSEL	_fullLockCount
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 05rr                      1- 2186     	INCR	_fullLockCount,F
                                    1- 2187     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2188     ;;unsigned compare: left >= lit (0xC9=201), size=1
     001B 21C9                      1- 2189     	MOVIA	0xc9
     001C 04rr                      1- 2190     	SUBAR	_fullLockCount,W
     001D 0803                      1- 2191     	BTRSS	STATUS,0
                                    1- 2192     	MGOTO	_00446_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2193     	.line	656, "main.c"; 	fullLock = 1;
     001F 2101                      1- 2194     	MOVIA	0x01
                                    1- 2195     	BANKSEL	_fullLock
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 2196     	MOVAR	_fullLock
                                    1- 2197     	.line	657, "main.c"; 	fullLockCount = 200;
     0022 21C8                      1- 2198     	MOVIA	0xc8
                                    1- 2199     	BANKSEL	_fullLockCount
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 2200     	MOVAR	_fullLockCount
                                    1- 2201     	.line	658, "main.c"; 	PORTA |= 0x04;		//打开充满提示灯
                                    1- 2202     	BANKSEL	_PORTA
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 19rr                      1- 2203     	BSR	_PORTA,2
                                    1- 2204     	.line	659, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
     0027 1Crr                      1- 2205     	BCR	_PORTA,1
     0028                           1- 2206     _00446_DS_:
                                    1- 2207     	.line	661, "main.c"; 	if(pwStep == 10 && ++fullCount > 100)
                                    1- 2208     	BANKSEL	_pwStep
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 01rr                      1- 2209     	MOVR	_pwStep,W
     002A 240A                      1- 2210     	XORIA	0x0a
     002B 0903                      1- 2211     	BTRSS	STATUS,2
                                    1- 2212     	MGOTO	_00484_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2213     	BANKSEL	_fullCount
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 05rr                      1- 2214     	INCR	_fullCount,F
                                    1- 2215     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2216     ;;unsigned compare: left >= lit (0x65=101), size=1
     002F 2165                      1- 2217     	MOVIA	0x65
     0030 04rr                      1- 2218     	SUBAR	_fullCount,W
     0031 0803                      1- 2219     	BTRSS	STATUS,0
                                    1- 2220     	MGOTO	_00484_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2221     	.line	663, "main.c"; 	IOSTA |= 0x01;
     0033 001r                      1- 2222     	IOSTR	_IOSTA
                                    1- 2223     	BANKSEL	r0x1057
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 2224     	MOVAR	r0x1057
     0036 18rr                      1- 2225     	BSR	r0x1057,0
     0037 01rr                      1- 2226     	MOVR	r0x1057,W
     0038 000r                      1- 2227     	IOST	_IOSTA
                                    1- 2228     	.line	664, "main.c"; 	PORTA |= 0x04;		//打开充满提示灯
                                    1- 2229     	BANKSEL	_PORTA
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 19rr                      1- 2230     	BSR	_PORTA,2
                                    1- 2231     	.line	665, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
     003B 1Crr                      1- 2232     	BCR	_PORTA,1
                                    1- 2233     	MGOTO	_00484_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D                           1- 2234     _00464_DS_:
                                    1- 2235     	.line	672, "main.c"; 	fullLockCount = 0;
                                    1- 2236     	BANKSEL	_fullLockCount
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 02rr                      1- 2237     	CLRR	_fullLockCount
                                    1- 2238     	.line	674, "main.c"; 	PORTA &= 0xFB;		//关闭充满提示灯
                                    1- 2239     	BANKSEL	_PORTA
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 1Drr                      1- 2240     	BCR	_PORTA,2
                                    1- 2241     	.line	675, "main.c"; 	fullCount = 0;
                                    1- 2242     	BANKSEL	_fullCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 2243     	CLRR	_fullCount
                                    1- 2244     	.line	676, "main.c"; 	if(count500ms == 0 && pwStep < 9)
                                    1- 2245     	BANKSEL	_count500ms
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1- 2246     	MOVR	_count500ms,W
     0045 0903                      1- 2247     	BTRSS	STATUS,2
                                    1- 2248     	MGOTO	_00458_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2249     ;;unsigned compare: left < lit (0x9=9), size=1
     0047 2109                      1- 2250     	MOVIA	0x09
                                    1- 2251     	BANKSEL	_pwStep
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 04rr                      1- 2252     	SUBAR	_pwStep,W
     004A 0C03                      1- 2253     	BTRSC	STATUS,0
                                    1- 2254     	MGOTO	_00458_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2255     	.line	678, "main.c"; 	if(lockLedStep < pwStep - 1)
     004C 01rr                      1- 2256     	MOVR	_pwStep,W
                                    1- 2257     	BANKSEL	r0x1057
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 00rr                      1- 2258     	MOVAR	r0x1057
                                    1- 2259     	BANKSEL	r0x1058
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 02rr                      1- 2260     	CLRR	r0x1058
     0051 21FF                      1- 2261     	MOVIA	0xff
                                    1- 2262     	BANKSEL	r0x1057
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 03rr                      1- 2263     	ADDAR	r0x1057,F
     0054 0C03                      1- 2264     	BTRSC	STATUS,0
                                    1- 2265     	MGOTO	_00006_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2266     	BANKSEL	r0x1058
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 06rr                      1- 2267     	DECR	r0x1058,F
     0058                           1- 2268     _00006_DS_:
                                    1- 2269     	BANKSEL	_lockLedStep
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 01rr                      1- 2270     	MOVR	_lockLedStep,W
                                    1- 2271     	BANKSEL	r0x1059
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 00rr                      1- 2272     	MOVAR	r0x1059
                                    1- 2273     ;;1	CLRR	r0x105A
     005C 2100                      1- 2274     	MOVIA	0x00
     005D 2580                      1- 2275     	ADDIA	0x80
                                    1- 2276     	BANKSEL	r0x105B
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 00rr                      1- 2277     	MOVAR	r0x105B
                                    1- 2278     	BANKSEL	r0x1058
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1- 2279     	MOVR	r0x1058,W
     0062 2580                      1- 2280     	ADDIA	0x80
                                    1- 2281     	BANKSEL	r0x105B
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 04rr                      1- 2282     	SUBAR	r0x105B,W
     0065 0903                      1- 2283     	BTRSS	STATUS,2
                                    1- 2284     	MGOTO	_00541_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2285     	BANKSEL	r0x1057
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 01rr                      1- 2286     	MOVR	r0x1057,W
                                    1- 2287     	BANKSEL	r0x1059
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 04rr                      1- 2288     	SUBAR	r0x1059,W
     006B                           1- 2289     _00541_DS_:
     006B 0C03                      1- 2290     	BTRSC	STATUS,0
                                    1- 2291     	MGOTO	_00455_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2292     	.line	680, "main.c"; 	if(lockLedStep == 0)
                                    1- 2293     	BANKSEL	_lockLedStep
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 01rr                      1- 2294     	MOVR	_lockLedStep,W
     006F 0903                      1- 2295     	BTRSS	STATUS,2
                                    1- 2296     	MGOTO	_00451_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2297     	.line	681, "main.c"; 	lockLedStep = pwStep - 1;
                                    1- 2298     	BANKSEL	_pwStep
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 06rr                      1- 2299     	DECR	_pwStep,W
                                    1- 2300     	BANKSEL	_lockLedStep
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 00rr                      1- 2301     	MOVAR	_lockLedStep
     0075                           1- 2302     _00451_DS_:
                                    1- 2303     	.line	682, "main.c"; 	if(++ledCount > 100)
                                    1- 2304     	BANKSEL	_ledCount
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 05rr                      1- 2305     	INCR	_ledCount,F
                                    1- 2306     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2307     ;;unsigned compare: left >= lit (0x65=101), size=1
     0077 2165                      1- 2308     	MOVIA	0x65
     0078 04rr                      1- 2309     	SUBAR	_ledCount,W
     0079 0803                      1- 2310     	BTRSS	STATUS,0
                                    1- 2311     	MGOTO	_00456_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2312     	.line	683, "main.c"; 	lockLedStep = pwStep - 1;
                                    1- 2313     	BANKSEL	_pwStep
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 06rr                      1- 2314     	DECR	_pwStep,W
                                    1- 2315     	BANKSEL	_lockLedStep
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 00rr                      1- 2316     	MOVAR	_lockLedStep
                                    1- 2317     	MGOTO	_00456_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
     0080                           1- 2318     _00455_DS_:
                                    1- 2319     	.line	688, "main.c"; 	ledCount = 0;
                                    1- 2320     	BANKSEL	_ledCount
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 02rr                      1- 2321     	CLRR	_ledCount
     0082                           1- 2322     _00456_DS_:
                                    1- 2323     	.line	691, "main.c"; 	ledStep = lockLedStep;
                                    1- 2324     	BANKSEL	_lockLedStep
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 01rr                      1- 2325     	MOVR	_lockLedStep,W
                                    1- 2326     	BANKSEL	_ledStep
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 00rr                      1- 2327     	MOVAR	_ledStep
                                    1- 2328     ;;unsigned compare: left < lit (0x1E=30), size=1
     0086                           1- 2329     _00458_DS_:
                                    1- 2330     	.line	693, "main.c"; 	if(count500ms < 30)
     0086 211E                      1- 2331     	MOVIA	0x1e
                                    1- 2332     	BANKSEL	_count500ms
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 04rr                      1- 2333     	SUBAR	_count500ms,W
     0089 0C03                      1- 2334     	BTRSC	STATUS,0
                                    1- 2335     	MGOTO	_00461_DS_
     008A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2336     	.line	695, "main.c"; 	PORTA |= 0x02;		//打开充电灯
                                    1- 2337     	BANKSEL	_PORTA
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 18rr                      1- 2338     	BSR	_PORTA,1
                                    1- 2339     	MGOTO	_00462_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
     008E                           1- 2340     _00461_DS_:
                                    1- 2341     	.line	699, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
                                    1- 2342     	BANKSEL	_PORTA
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 1Crr                      1- 2343     	BCR	_PORTA,1
     0090                           1- 2344     _00462_DS_:
                                    1- 2345     	.line	702, "main.c"; 	IOSTA &= 0xFE;
     0090 001r                      1- 2346     	IOSTR	_IOSTA
                                    1- 2347     	BANKSEL	r0x1057
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 00rr                      1- 2348     	MOVAR	r0x1057
     0093 1Crr                      1- 2349     	BCR	r0x1057,0
     0094 01rr                      1- 2350     	MOVR	r0x1057,W
     0095 000r                      1- 2351     	IOST	_IOSTA
                                    1- 2352     	.line	703, "main.c"; 	PORTA |= 0x01;			//打开充电
                                    1- 2353     	BANKSEL	_PORTA
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 18rr                      1- 2354     	BSR	_PORTA,0
                                    1- 2355     	MGOTO	_00484_DS_
     0098 3rrr                      3-   63 m1      LGOTO rom_address
     0099                           1- 2356     _00482_DS_:
                                    1- 2357     	.line	709, "main.c"; 	fullLock = 0;
                                    1- 2358     	BANKSEL	_fullLock
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 02rr                      1- 2359     	CLRR	_fullLock
                                    1- 2360     	.line	710, "main.c"; 	fullLockCount = 0;
                                    1- 2361     	BANKSEL	_fullLockCount
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 02rr                      1- 2362     	CLRR	_fullLockCount
                                    1- 2363     	.line	711, "main.c"; 	lockLedStep = 0;
                                    1- 2364     	BANKSEL	_lockLedStep
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 02rr                      1- 2365     	CLRR	_lockLedStep
                                    1- 2366     	.line	712, "main.c"; 	if(workStep > 0 && pwStep == 0)
                                    1- 2367     	BANKSEL	_workStep
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 01rr                      1- 2368     	MOVR	_workStep,W
     00A1 0D03                      1- 2369     	BTRSC	STATUS,2
                                    1- 2370     	MGOTO	_00470_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2371     	BANKSEL	_pwStep
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 01rr                      1- 2372     	MOVR	_pwStep,W
     00A5 0903                      1- 2373     	BTRSS	STATUS,2
                                    1- 2374     	MGOTO	_00470_DS_
     00A6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2375     	.line	714, "main.c"; 	if(++lowBat > 6000)
                                    1- 2376     	BANKSEL	_lowBat
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 05rr                      1- 2377     	INCR	_lowBat,F
     00A9 0D03                      1- 2378     	BTRSC	STATUS,2
     00AA 05rr                      1- 2379     	INCR	(_lowBat + 1),F
                                    1- 2380     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2381     ;;unsigned compare: left >= lit (0x1771=6001), size=2
     00AB 2117                      1- 2382     	MOVIA	0x17
     00AC 04rr                      1- 2383     	SUBAR	(_lowBat + 1),W
     00AD 0903                      1- 2384     	BTRSS	STATUS,2
                                    1- 2385     	MGOTO	_00544_DS_
     00AE 3rrr                      3-   63 m1      LGOTO rom_address
     00AF 2171                      1- 2386     	MOVIA	0x71
     00B0 04rr                      1- 2387     	SUBAR	_lowBat,W
     00B1                           1- 2388     _00544_DS_:
     00B1 0803                      1- 2389     	BTRSS	STATUS,0
                                    1- 2390     	MGOTO	_00471_DS_
     00B2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2391     	.line	716, "main.c"; 	shandengTime = 500;
     00B3 21F4                      1- 2392     	MOVIA	0xf4
                                    1- 2393     	BANKSEL	_shandengTime
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 00rr                      1- 2394     	MOVAR	_shandengTime
     00B6 2101                      1- 2395     	MOVIA	0x01
     00B7 00rr                      1- 2396     	MOVAR	(_shandengTime + 1)
                                    1- 2397     	.line	717, "main.c"; 	lockStart = 1;
                                    1- 2398     	BANKSEL	_lockStart
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 00rr                      1- 2399     	MOVAR	_lockStart
                                    1- 2400     	.line	718, "main.c"; 	lowBat = 0;
                                    1- 2401     	BANKSEL	_lowBat
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 02rr                      1- 2402     	CLRR	_lowBat
     00BC 02rr                      1- 2403     	CLRR	(_lowBat + 1)
                                    1- 2404     	.line	719, "main.c"; 	powerOff();
                                    1- 2405     	MCALL	_powerOff
     00BD 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2406     	MGOTO	_00471_DS_
     00BE 3rrr                      3-   63 m1      LGOTO rom_address
     00BF                           1- 2407     _00470_DS_:
                                    1- 2408     	.line	724, "main.c"; 	lowBat = 0;
                                    1- 2409     	BANKSEL	_lowBat
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 02rr                      1- 2410     	CLRR	_lowBat
     00C1 02rr                      1- 2411     	CLRR	(_lowBat + 1)
     00C2                           1- 2412     _00471_DS_:
                                    1- 2413     	.line	726, "main.c"; 	if(shandengTime > 0)
                                    1- 2414     	BANKSEL	_shandengTime
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 01rr                      1- 2415     	MOVR	_shandengTime,W
     00C4 11rr                      1- 2416     	IORAR	(_shandengTime + 1),W
     00C5 0D03                      1- 2417     	BTRSC	STATUS,2
                                    1- 2418     	MGOTO	_00477_DS_
     00C6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2419     	.line	728, "main.c"; 	shandengTime--;
     00C7 21FF                      1- 2420     	MOVIA	0xff
     00C8 03rr                      1- 2421     	ADDAR	_shandengTime,F
     00C9 0803                      1- 2422     	BTRSS	STATUS,0
     00CA 06rr                      1- 2423     	DECR	(_shandengTime + 1),F
                                    1- 2424     ;;unsigned compare: left < lit (0x1E=30), size=1
                                    1- 2425     	.line	729, "main.c"; 	if(count500ms < 30)
     00CB 211E                      1- 2426     	MOVIA	0x1e
                                    1- 2427     	BANKSEL	_count500ms
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 04rr                      1- 2428     	SUBAR	_count500ms,W
     00CE 0C03                      1- 2429     	BTRSC	STATUS,0
                                    1- 2430     	MGOTO	_00474_DS_
     00CF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2431     	.line	731, "main.c"; 	PORTA |= 0x02;		//打开充电灯
                                    1- 2432     	BANKSEL	_PORTA
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 18rr                      1- 2433     	BSR	_PORTA,1
                                    1- 2434     	MGOTO	_00478_DS_
     00D2 3rrr                      3-   63 m1      LGOTO rom_address
     00D3                           1- 2435     _00474_DS_:
                                    1- 2436     	.line	735, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
                                    1- 2437     	BANKSEL	_PORTA
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 1Crr                      1- 2438     	BCR	_PORTA,1
                                    1- 2439     	MGOTO	_00478_DS_
     00D5 3rrr                      3-   63 m1      LGOTO rom_address
     00D6                           1- 2440     _00477_DS_:
                                    1- 2441     	.line	739, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
                                    1- 2442     	BANKSEL	_PORTA
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 1Crr                      1- 2443     	BCR	_PORTA,1
     00D8                           1- 2444     _00478_DS_:
                                    1- 2445     	.line	740, "main.c"; 	PORTA &= 0xFB;		//关闭充满提示灯
                                    1- 2446     	BANKSEL	_PORTA
     00D8 rrrr                      3-  110 m1      .banksel ram_address
     00D9 1Drr                      1- 2447     	BCR	_PORTA,2
                                    1- 2448     	.line	741, "main.c"; 	IOSTA |= 0x01;
     00DA 001r                      1- 2449     	IOSTR	_IOSTA
                                    1- 2450     	BANKSEL	r0x1057
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 00rr                      1- 2451     	MOVAR	r0x1057
     00DD 18rr                      1- 2452     	BSR	r0x1057,0
     00DE 01rr                      1- 2453     	MOVR	r0x1057,W
     00DF 000r                      1- 2454     	IOST	_IOSTA
                                    1- 2455     	.line	742, "main.c"; 	chrgTime = 0;
                                    1- 2456     	BANKSEL	_chrgTime
     00E0 rrrr                      3-  110 m1      .banksel ram_address
     00E1 02rr                      1- 2457     	CLRR	_chrgTime
     00E2 02rr                      1- 2458     	CLRR	(_chrgTime + 1)
                                    1- 2459     	.line	744, "main.c"; 	if(workStep == 0)
                                    1- 2460     	BANKSEL	_workStep
     00E3 rrrr                      3-  110 m1      .banksel ram_address
     00E4 01rr                      1- 2461     	MOVR	_workStep,W
     00E5 0903                      1- 2462     	BTRSS	STATUS,2
                                    1- 2463     	MGOTO	_00007_DS_
     00E6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2464     	.line	745, "main.c"; 	ledStep = 0;
                                    1- 2465     	BANKSEL	_ledStep
     00E7 rrrr                      3-  110 m1      .banksel ram_address
     00E8 02rr                      1- 2466     	CLRR	_ledStep
     00E9                           1- 2467     _00007_DS_:
                                    1- 2468     	.line	746, "main.c"; 	chrgFlag = 0;
                                    1- 2469     	BANKSEL	_chrgFlag
     00E9 rrrr                      3-  110 m1      .banksel ram_address
     00EA 02rr                      1- 2470     	CLRR	_chrgFlag
                                    1- 2471     	.line	747, "main.c"; 	chrgTime = 0;	//重置充电计数
                                    1- 2472     	BANKSEL	_chrgTime
     00EB rrrr                      3-  110 m1      .banksel ram_address
     00EC 02rr                      1- 2473     	CLRR	_chrgTime
     00ED 02rr                      1- 2474     	CLRR	(_chrgTime + 1)
     00EE                           1- 2475     _00484_DS_:
                                    1- 2476     	.line	750, "main.c"; 	}
                                    1- 2477     	RETURN	
     00EE 0010                      3-   40 m1      ret
                                    1- 2478     ; exit point of _chrgCtr
                                    1- 2480     ;***
                                    1- 2481     ;  pBlock Stats: dbName = C
                                    1- 2482     ;***
                                    1- 2483     ;has an exit
                                    1- 2484     ;1 compiler assigned register :
                                    1- 2485     ;   r0x105C
                                    1- 2486     ;; Starting pCode block
                                    1- 2487     .segment "code"; module=main, function=_keyRead
                                    1- 2489     ;local variable name mapping:
     0000                           1- 2491     _keyRead:
                                    1- 2492     ; 2 exit points
                                    1- 2493     	.line	603, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2494     	BANKSEL	r0x105C
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2495     	MOVAR	r0x105C
                                    1- 2496     	.line	605, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2497     	MOVR	r0x105C,W
     0003 0D03                      1- 2498     	BTRSC	STATUS,2
                                    1- 2499     	MGOTO	_00438_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2500     	.line	607, "main.c"; 	keyCount++;
                                    1- 2501     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2502     	INCR	_keyCount,F
                                    1- 2503     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 2504     	.line	608, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 2505     	MOVIA	0x64
     0008 04rr                      1- 2506     	SUBAR	_keyCount,W
     0009 0803                      1- 2507     	BTRSS	STATUS,0
                                    1- 2508     	MGOTO	_00439_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2509     	.line	610, "main.c"; 	keyCount = 100;
     000B 2164                      1- 2510     	MOVIA	0x64
     000C 00rr                      1- 2511     	MOVAR	_keyCount
                                    1- 2512     	.line	611, "main.c"; 	if(!longPressFlag)
                                    1- 2513     	BANKSEL	_longPressFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2514     	MOVR	_longPressFlag,W
     000F 0903                      1- 2515     	BTRSS	STATUS,2
                                    1- 2516     	MGOTO	_00439_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2517     	.line	613, "main.c"; 	longPressFlag = 1;
     0011 2101                      1- 2518     	MOVIA	0x01
     0012 00rr                      1- 2519     	MOVAR	_longPressFlag
                                    1- 2520     	.line	614, "main.c"; 	return 2;
     0013 2102                      1- 2521     	MOVIA	0x02
                                    1- 2522     	MGOTO	_00440_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2523     ;;unsigned compare: left < lit (0x64=100), size=1
     0015                           1- 2524     _00438_DS_:
                                    1- 2525     	.line	620, "main.c"; 	if(keyCount >= 100)
     0015 2164                      1- 2526     	MOVIA	0x64
                                    1- 2527     	BANKSEL	_keyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 04rr                      1- 2528     	SUBAR	_keyCount,W
     0018 0803                      1- 2529     	BTRSS	STATUS,0
                                    1- 2530     	MGOTO	_00435_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2531     	.line	622, "main.c"; 	keyCount = 0;
     001A 02rr                      1- 2532     	CLRR	_keyCount
                                    1- 2533     	.line	623, "main.c"; 	longPressFlag = 0;
                                    1- 2534     	BANKSEL	_longPressFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 2535     	CLRR	_longPressFlag
                                    1- 2536     	.line	624, "main.c"; 	return	0;
     001D 2100                      1- 2537     	MOVIA	0x00
                                    1- 2538     	MGOTO	_00440_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2539     ;;unsigned compare: left < lit (0x4=4), size=1
     001F                           1- 2540     _00435_DS_:
                                    1- 2541     	.line	626, "main.c"; 	else if(keyCount >= 4)
     001F 2104                      1- 2542     	MOVIA	0x04
                                    1- 2543     	BANKSEL	_keyCount
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 2544     	SUBAR	_keyCount,W
     0022 0803                      1- 2545     	BTRSS	STATUS,0
                                    1- 2546     	MGOTO	_00436_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2547     	.line	628, "main.c"; 	keyCount = 0;
     0024 02rr                      1- 2548     	CLRR	_keyCount
                                    1- 2549     	.line	629, "main.c"; 	return	1;
     0025 2101                      1- 2550     	MOVIA	0x01
                                    1- 2551     	MGOTO	_00440_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 2552     _00436_DS_:
                                    1- 2553     	.line	631, "main.c"; 	keyCount = 0;
                                    1- 2554     	BANKSEL	_keyCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 2555     	CLRR	_keyCount
     0029                           1- 2556     _00439_DS_:
                                    1- 2557     	.line	633, "main.c"; 	return 0;
     0029 2100                      1- 2558     	MOVIA	0x00
     002A                           1- 2559     _00440_DS_:
                                    1- 2560     	.line	634, "main.c"; 	}
                                    1- 2561     	RETURN	
     002A 0010                      3-   40 m1      ret
                                    1- 2562     ; exit point of _keyRead
                                    1- 2564     ;***
                                    1- 2565     ;  pBlock Stats: dbName = C
                                    1- 2566     ;***
                                    1- 2567     ;has an exit
                                    1- 2568     ;functions called:
                                    1- 2569     ;   _LedInput
                                    1- 2570     ;   _pwmStop
                                    1- 2571     ;   _LedInput
                                    1- 2572     ;   _pwmStop
                                    1- 2573     ;; Starting pCode block
                                    1- 2574     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2576     _gotoSleep:
                                    1- 2577     ; 2 exit points
                                    1- 2578     	.line	572, "main.c"; 	count900s = 0;
                                    1- 2579     	BANKSEL	_count900s
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2580     	CLRR	_count900s
     0002 02rr                      1- 2581     	CLRR	(_count900s + 1)
                                    1- 2582     	.line	573, "main.c"; 	LedInput();
                                    1- 2583     	MCALL	_LedInput
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2584     	.line	574, "main.c"; 	pwmStop();
                                    1- 2585     	MCALL	_pwmStop
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2586     	.line	575, "main.c"; 	IOSTA = 0x60;
     0005 2160                      1- 2587     	MOVIA	0x60
     0006 000r                      1- 2588     	IOST	_IOSTA
                                    1- 2589     	.line	576, "main.c"; 	IOSTB = 0x00;
     0007 0200                      1- 2590     	CLRA	
     0008 000r                      1- 2591     	IOST	_IOSTB
                                    1- 2592     	.line	577, "main.c"; 	APHCON = 0x9F;
     0009 219F                      1- 2593     	MOVIA	0x9f
     000A 000r                      1- 2594     	IOST	_APHCON
                                    1- 2595     	.line	578, "main.c"; 	PORTB = 0x00;
     000B 02rr                      1- 2596     	CLRR	_PORTB
                                    1- 2597     	.line	579, "main.c"; 	PORTA = 0x00;
                                    1- 2598     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 02rr                      1- 2599     	CLRR	_PORTA
                                    1- 2600     	.line	580, "main.c"; 	sleepTime = 0;
                                    1- 2601     	BANKSEL	_sleepTime
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1- 2602     	CLRR	_sleepTime
     0010 02rr                      1- 2603     	CLRR	(_sleepTime + 1)
                                    1- 2604     	.line	582, "main.c"; 	workStep = 0;
                                    1- 2605     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 02rr                      1- 2606     	CLRR	_workStep
                                    1- 2607     	.line	583, "main.c"; 	AWUCON = 0x60;
     0013 2160                      1- 2608     	MOVIA	0x60
     0014 00rr                      1- 2609     	MOVAR	_AWUCON
                                    1- 2610     	.line	584, "main.c"; 	INTE =  C_INT_PABKey;
     0015 2102                      1- 2611     	MOVIA	0x02
     0016 00rr                      1- 2612     	MOVAR	_INTE
                                    1- 2613     	.line	585, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0017 2118                      1- 2614     	MOVIA	0x18
     0018 00rr                      1- 2615     	MOVAR	_PCON
                                    1- 2616     	.line	586, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0019 02rr                      1- 2617     	CLRR	_INTF
                                    1- 2618     	.line	587, "main.c"; 	CLRWDT();
     001A 0002                      1- 2619     	clrwdt
                                    1- 2620     	.line	588, "main.c"; 	ENI();
     001B 0004                      1- 2621     	ENI
                                    1- 2622     	.line	589, "main.c"; 	SLEEP();
     001C 0001                      1- 2623     	sleep
                                    1- 2624     	.line	590, "main.c"; 	AWUCON = 0x00;
     001D 02rr                      1- 2625     	CLRR	_AWUCON
                                    1- 2626     	.line	591, "main.c"; 	APHCON = 0xBF;
     001E 21BF                      1- 2627     	MOVIA	0xbf
     001F 000r                      1- 2628     	IOST	_APHCON
                                    1- 2629     	.line	592, "main.c"; 	PORTB = 0x00;
     0020 02rr                      1- 2630     	CLRR	_PORTB
                                    1- 2631     	.line	593, "main.c"; 	PORTA = 0x40;
     0021 2140                      1- 2632     	MOVIA	0x40
                                    1- 2633     	BANKSEL	_PORTA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 00rr                      1- 2634     	MOVAR	_PORTA
                                    1- 2635     	.line	594, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input ;
     0024 2178                      1- 2636     	MOVIA	0x78
     0025 000r                      1- 2637     	IOST	_IOSTA
                                    1- 2638     	.line	595, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0026 2101                      1- 2639     	MOVIA	0x01
     0027 00rr                      1- 2640     	MOVAR	_INTE
                                    1- 2641     	.line	596, "main.c"; 	INTF = 0;
     0028 02rr                      1- 2642     	CLRR	_INTF
                                    1- 2643     	.line	598, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0029 21B8                      1- 2644     	MOVIA	0xb8
     002A 00rr                      1- 2645     	MOVAR	_PCON
                                    1- 2646     	.line	600, "main.c"; 	}
                                    1- 2647     	RETURN	
     002B 0010                      3-   40 m1      ret
                                    1- 2648     ; exit point of _gotoSleep
                                    1- 2650     ;***
                                    1- 2651     ;  pBlock Stats: dbName = C
                                    1- 2652     ;***
                                    1- 2653     ;has an exit
                                    1- 2654     ;; Starting pCode block
                                    1- 2655     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2657     _pwmStop:
                                    1- 2658     ; 2 exit points
                                    1- 2659     	.line	566, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2660     	CLRA	
     0001 00rr                      1- 2661     	SFUN	_T2CR1
                                    1- 2662     	.line	567, "main.c"; 	}
                                    1- 2663     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2664     ; exit point of _pwmStop
                                    1- 2666     ;***
                                    1- 2667     ;  pBlock Stats: dbName = C
                                    1- 2668     ;***
                                    1- 2669     ;has an exit
                                    1- 2670     ;1 compiler assigned register :
                                    1- 2671     ;   r0x105E
                                    1- 2672     ;; Starting pCode block
                                    1- 2673     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2675     _pwmInit:
                                    1- 2676     ; 2 exit points
                                    1- 2677     	.line	554, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2678     	SFUNR	_T2CR1
                                    1- 2679     	BANKSEL	r0x105E
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2680     	MOVAR	r0x105E
     0003 0Frr                      1- 2681     	BTRSC	r0x105E,7
                                    1- 2682     	.line	555, "main.c"; 	return;
                                    1- 2683     	MGOTO	_00415_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2684     	.line	556, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2685     	CLRR	_TMRH
                                    1- 2686     	.line	557, "main.c"; 	TMR2 = 99;							//频率为110K
     0006 2163                      1- 2687     	MOVIA	0x63
     0007 00rr                      1- 2688     	SFUN	_TMR2
                                    1- 2689     	.line	560, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2690     	CLRA	
     0009 00rr                      1- 2691     	SFUN	_T2CR2
                                    1- 2692     	.line	561, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2693     	MOVIA	0x83
     000B 00rr                      1- 2694     	SFUN	_T2CR1
     000C                           1- 2695     _00415_DS_:
                                    1- 2696     	.line	562, "main.c"; 	}
                                    1- 2697     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2698     ; exit point of _pwmInit
                                    1- 2700     ;***
                                    1- 2701     ;  pBlock Stats: dbName = C
                                    1- 2702     ;***
                                    1- 2703     ;has an exit
                                    1- 2704     ;; Starting pCode block
                                    1- 2705     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2707     _pwm1Stop:
                                    1- 2708     ; 2 exit points
                                    1- 2709     	.line	547, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2710     	CLRA	
     0001 00rr                      1- 2711     	SFUN	_T1CR1
                                    1- 2712     	.line	548, "main.c"; 	}
                                    1- 2713     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2714     ; exit point of _pwm1Stop
                                    1- 2716     ;***
                                    1- 2717     ;  pBlock Stats: dbName = C
                                    1- 2718     ;***
                                    1- 2719     ;has an exit
                                    1- 2720     ;1 compiler assigned register :
                                    1- 2721     ;   r0x105F
                                    1- 2722     ;; Starting pCode block
                                    1- 2723     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2725     _pwm1Init:
                                    1- 2726     ; 2 exit points
                                    1- 2727     	.line	535, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2728     	SFUNR	_T1CR1
                                    1- 2729     	BANKSEL	r0x105F
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2730     	MOVAR	r0x105F
     0003 0Frr                      1- 2731     	BTRSC	r0x105F,7
                                    1- 2732     	.line	536, "main.c"; 	return;
                                    1- 2733     	MGOTO	_00404_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2734     	.line	537, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2735     	CLRR	_TMRH
                                    1- 2736     	.line	538, "main.c"; 	TMR1 = 12;							//频率为110K
     0006 210C                      1- 2737     	MOVIA	0x0c
     0007 00rr                      1- 2738     	SFUN	_TMR1
                                    1- 2739     	.line	541, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2740     	CLRA	
     0009 00rr                      1- 2741     	SFUN	_T1CR2
                                    1- 2742     	.line	542, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2743     	MOVIA	0x83
     000B 00rr                      1- 2744     	SFUN	_T1CR1
     000C                           1- 2745     _00404_DS_:
                                    1- 2746     	.line	543, "main.c"; 	}
                                    1- 2747     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2748     ; exit point of _pwm1Init
                                    1- 2750     ;***
                                    1- 2751     ;  pBlock Stats: dbName = C
                                    1- 2752     ;***
                                    1- 2753     ;has an exit
                                    1- 2754     ;functions called:
                                    1- 2755     ;   _delay
                                    1- 2756     ;   _LedInput
                                    1- 2757     ;   _delay
                                    1- 2758     ;   _LedInput
                                    1- 2759     ;1 compiler assigned register :
                                    1- 2760     ;   r0x1060
                                    1- 2761     ;; Starting pCode block
                                    1- 2762     .segment "code"; module=main, function=_LED8ON
     0000                           1- 2764     _LED8ON:
                                    1- 2765     ; 2 exit points
                                    1- 2766     	.line	525, "main.c"; 	L4OUT;
     0000 001r                      1- 2767     	IOSTR	_IOSTB
                                    1- 2768     	BANKSEL	r0x1060
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2769     	MOVAR	r0x1060
     0003 1Crr                      1- 2770     	BCR	r0x1060,0
     0004 01rr                      1- 2771     	MOVR	r0x1060,W
     0005 000r                      1- 2772     	IOST	_IOSTB
                                    1- 2773     	.line	526, "main.c"; 	L2OUT;
     0006 001r                      1- 2774     	IOSTR	_IOSTB
     0007 00rr                      1- 2775     	MOVAR	r0x1060
     0008 1Drr                      1- 2776     	BCR	r0x1060,3
     0009 01rr                      1- 2777     	MOVR	r0x1060,W
     000A 000r                      1- 2778     	IOST	_IOSTB
                                    1- 2779     	.line	527, "main.c"; 	L4H;
     000B 18rr                      1- 2780     	BSR	_PORTB,0
                                    1- 2781     	.line	528, "main.c"; 	L2L;
     000C 1Drr                      1- 2782     	BCR	_PORTB,3
                                    1- 2783     	.line	529, "main.c"; 	delay(80);
     000D 2150                      1- 2784     	MOVIA	0x50
                                    1- 2785     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2786     	.line	530, "main.c"; 	LedInput();
                                    1- 2787     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2788     	.line	531, "main.c"; 	}
                                    1- 2789     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2790     ; exit point of _LED8ON
                                    1- 2792     ;***
                                    1- 2793     ;  pBlock Stats: dbName = C
                                    1- 2794     ;***
                                    1- 2795     ;has an exit
                                    1- 2796     ;functions called:
                                    1- 2797     ;   _delay
                                    1- 2798     ;   _LedInput
                                    1- 2799     ;   _delay
                                    1- 2800     ;   _LedInput
                                    1- 2801     ;1 compiler assigned register :
                                    1- 2802     ;   r0x1061
                                    1- 2803     ;; Starting pCode block
                                    1- 2804     .segment "code"; module=main, function=_LED7ON
     0000                           1- 2806     _LED7ON:
                                    1- 2807     ; 2 exit points
                                    1- 2808     	.line	515, "main.c"; 	L4OUT;
     0000 001r                      1- 2809     	IOSTR	_IOSTB
                                    1- 2810     	BANKSEL	r0x1061
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2811     	MOVAR	r0x1061
     0003 1Crr                      1- 2812     	BCR	r0x1061,0
     0004 01rr                      1- 2813     	MOVR	r0x1061,W
     0005 000r                      1- 2814     	IOST	_IOSTB
                                    1- 2815     	.line	516, "main.c"; 	L2OUT;
     0006 001r                      1- 2816     	IOSTR	_IOSTB
     0007 00rr                      1- 2817     	MOVAR	r0x1061
     0008 1Drr                      1- 2818     	BCR	r0x1061,3
     0009 01rr                      1- 2819     	MOVR	r0x1061,W
     000A 000r                      1- 2820     	IOST	_IOSTB
                                    1- 2821     	.line	517, "main.c"; 	L2H;
     000B 19rr                      1- 2822     	BSR	_PORTB,3
                                    1- 2823     	.line	518, "main.c"; 	L4L;
     000C 1Crr                      1- 2824     	BCR	_PORTB,0
                                    1- 2825     	.line	519, "main.c"; 	delay(80);
     000D 2150                      1- 2826     	MOVIA	0x50
                                    1- 2827     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2828     	.line	520, "main.c"; 	LedInput();
                                    1- 2829     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2830     	.line	521, "main.c"; 	}
                                    1- 2831     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2832     ; exit point of _LED7ON
                                    1- 2834     ;***
                                    1- 2835     ;  pBlock Stats: dbName = C
                                    1- 2836     ;***
                                    1- 2837     ;has an exit
                                    1- 2838     ;functions called:
                                    1- 2839     ;   _delay
                                    1- 2840     ;   _LedInput
                                    1- 2841     ;   _delay
                                    1- 2842     ;   _LedInput
                                    1- 2843     ;1 compiler assigned register :
                                    1- 2844     ;   r0x1062
                                    1- 2845     ;; Starting pCode block
                                    1- 2846     .segment "code"; module=main, function=_LED6ON
     0000                           1- 2848     _LED6ON:
                                    1- 2849     ; 2 exit points
                                    1- 2850     	.line	505, "main.c"; 	L4OUT;
     0000 001r                      1- 2851     	IOSTR	_IOSTB
                                    1- 2852     	BANKSEL	r0x1062
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2853     	MOVAR	r0x1062
     0003 1Crr                      1- 2854     	BCR	r0x1062,0
     0004 01rr                      1- 2855     	MOVR	r0x1062,W
     0005 000r                      1- 2856     	IOST	_IOSTB
                                    1- 2857     	.line	506, "main.c"; 	L1OUT;
     0006 001r                      1- 2858     	IOSTR	_IOSTA
     0007 00rr                      1- 2859     	MOVAR	r0x1062
     0008 1Frr                      1- 2860     	BCR	r0x1062,7
     0009 01rr                      1- 2861     	MOVR	r0x1062,W
     000A 000r                      1- 2862     	IOST	_IOSTA
                                    1- 2863     	.line	507, "main.c"; 	L1H;
                                    1- 2864     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 1Brr                      1- 2865     	BSR	_PORTA,7
                                    1- 2866     	.line	508, "main.c"; 	L4L;
     000D 1Crr                      1- 2867     	BCR	_PORTB,0
                                    1- 2868     	.line	509, "main.c"; 	delay(80);
     000E 2150                      1- 2869     	MOVIA	0x50
                                    1- 2870     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2871     	.line	510, "main.c"; 	LedInput();
                                    1- 2872     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2873     	.line	511, "main.c"; 	}
                                    1- 2874     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2875     ; exit point of _LED6ON
                                    1- 2877     ;***
                                    1- 2878     ;  pBlock Stats: dbName = C
                                    1- 2879     ;***
                                    1- 2880     ;has an exit
                                    1- 2881     ;functions called:
                                    1- 2882     ;   _delay
                                    1- 2883     ;   _LedInput
                                    1- 2884     ;   _delay
                                    1- 2885     ;   _LedInput
                                    1- 2886     ;1 compiler assigned register :
                                    1- 2887     ;   r0x1063
                                    1- 2888     ;; Starting pCode block
                                    1- 2889     .segment "code"; module=main, function=_LED5ON
     0000                           1- 2891     _LED5ON:
                                    1- 2892     ; 2 exit points
                                    1- 2893     	.line	494, "main.c"; 	L4OUT;
     0000 001r                      1- 2894     	IOSTR	_IOSTB
                                    1- 2895     	BANKSEL	r0x1063
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2896     	MOVAR	r0x1063
     0003 1Crr                      1- 2897     	BCR	r0x1063,0
     0004 01rr                      1- 2898     	MOVR	r0x1063,W
     0005 000r                      1- 2899     	IOST	_IOSTB
                                    1- 2900     	.line	495, "main.c"; 	L1OUT;
     0006 001r                      1- 2901     	IOSTR	_IOSTA
     0007 00rr                      1- 2902     	MOVAR	r0x1063
     0008 1Frr                      1- 2903     	BCR	r0x1063,7
     0009 01rr                      1- 2904     	MOVR	r0x1063,W
     000A 000r                      1- 2905     	IOST	_IOSTA
                                    1- 2906     	.line	496, "main.c"; 	L4H;
     000B 18rr                      1- 2907     	BSR	_PORTB,0
                                    1- 2908     	.line	497, "main.c"; 	L1L;
                                    1- 2909     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Frr                      1- 2910     	BCR	_PORTA,7
                                    1- 2911     	.line	498, "main.c"; 	delay(80);
     000E 2150                      1- 2912     	MOVIA	0x50
                                    1- 2913     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2914     	.line	499, "main.c"; 	LedInput();
                                    1- 2915     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2916     	.line	500, "main.c"; 	}
                                    1- 2917     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2918     ; exit point of _LED5ON
                                    1- 2920     ;***
                                    1- 2921     ;  pBlock Stats: dbName = C
                                    1- 2922     ;***
                                    1- 2923     ;has an exit
                                    1- 2924     ;functions called:
                                    1- 2925     ;   _delay
                                    1- 2926     ;   _LedInput
                                    1- 2927     ;   _delay
                                    1- 2928     ;   _LedInput
                                    1- 2929     ;1 compiler assigned register :
                                    1- 2930     ;   r0x1064
                                    1- 2931     ;; Starting pCode block
                                    1- 2932     .segment "code"; module=main, function=_LED4ON
     0000                           1- 2934     _LED4ON:
                                    1- 2935     ; 2 exit points
                                    1- 2936     	.line	484, "main.c"; 	L3OUT;
     0000 001r                      1- 2937     	IOSTR	_IOSTB
                                    1- 2938     	BANKSEL	r0x1064
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2939     	MOVAR	r0x1064
     0003 1Crr                      1- 2940     	BCR	r0x1064,1
     0004 01rr                      1- 2941     	MOVR	r0x1064,W
     0005 000r                      1- 2942     	IOST	_IOSTB
                                    1- 2943     	.line	485, "main.c"; 	L2OUT;
     0006 001r                      1- 2944     	IOSTR	_IOSTB
     0007 00rr                      1- 2945     	MOVAR	r0x1064
     0008 1Drr                      1- 2946     	BCR	r0x1064,3
     0009 01rr                      1- 2947     	MOVR	r0x1064,W
     000A 000r                      1- 2948     	IOST	_IOSTB
                                    1- 2949     	.line	486, "main.c"; 	L3H;
     000B 18rr                      1- 2950     	BSR	_PORTB,1
                                    1- 2951     	.line	487, "main.c"; 	L2L;
     000C 1Drr                      1- 2952     	BCR	_PORTB,3
                                    1- 2953     	.line	488, "main.c"; 	delay(80);
     000D 2150                      1- 2954     	MOVIA	0x50
                                    1- 2955     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2956     	.line	489, "main.c"; 	LedInput();
                                    1- 2957     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2958     	.line	490, "main.c"; 	}
                                    1- 2959     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2960     ; exit point of _LED4ON
                                    1- 2962     ;***
                                    1- 2963     ;  pBlock Stats: dbName = C
                                    1- 2964     ;***
                                    1- 2965     ;has an exit
                                    1- 2966     ;functions called:
                                    1- 2967     ;   _delay
                                    1- 2968     ;   _LedInput
                                    1- 2969     ;   _delay
                                    1- 2970     ;   _LedInput
                                    1- 2971     ;1 compiler assigned register :
                                    1- 2972     ;   r0x1065
                                    1- 2973     ;; Starting pCode block
                                    1- 2974     .segment "code"; module=main, function=_LED3ON
     0000                           1- 2976     _LED3ON:
                                    1- 2977     ; 2 exit points
                                    1- 2978     	.line	474, "main.c"; 	L3OUT;
     0000 001r                      1- 2979     	IOSTR	_IOSTB
                                    1- 2980     	BANKSEL	r0x1065
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2981     	MOVAR	r0x1065
     0003 1Crr                      1- 2982     	BCR	r0x1065,1
     0004 01rr                      1- 2983     	MOVR	r0x1065,W
     0005 000r                      1- 2984     	IOST	_IOSTB
                                    1- 2985     	.line	475, "main.c"; 	L2OUT;
     0006 001r                      1- 2986     	IOSTR	_IOSTB
     0007 00rr                      1- 2987     	MOVAR	r0x1065
     0008 1Drr                      1- 2988     	BCR	r0x1065,3
     0009 01rr                      1- 2989     	MOVR	r0x1065,W
     000A 000r                      1- 2990     	IOST	_IOSTB
                                    1- 2991     	.line	476, "main.c"; 	L2H;
     000B 19rr                      1- 2992     	BSR	_PORTB,3
                                    1- 2993     	.line	477, "main.c"; 	L3L;
     000C 1Crr                      1- 2994     	BCR	_PORTB,1
                                    1- 2995     	.line	478, "main.c"; 	delay(80);
     000D 2150                      1- 2996     	MOVIA	0x50
                                    1- 2997     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2998     	.line	479, "main.c"; 	LedInput();
                                    1- 2999     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3000     	.line	480, "main.c"; 	}
                                    1- 3001     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3002     ; exit point of _LED3ON
                                    1- 3004     ;***
                                    1- 3005     ;  pBlock Stats: dbName = C
                                    1- 3006     ;***
                                    1- 3007     ;has an exit
                                    1- 3008     ;functions called:
                                    1- 3009     ;   _delay
                                    1- 3010     ;   _LedInput
                                    1- 3011     ;   _delay
                                    1- 3012     ;   _LedInput
                                    1- 3013     ;1 compiler assigned register :
                                    1- 3014     ;   r0x1066
                                    1- 3015     ;; Starting pCode block
                                    1- 3016     .segment "code"; module=main, function=_LED2ON
     0000                           1- 3018     _LED2ON:
                                    1- 3019     ; 2 exit points
                                    1- 3020     	.line	464, "main.c"; 	L1OUT;
     0000 001r                      1- 3021     	IOSTR	_IOSTA
                                    1- 3022     	BANKSEL	r0x1066
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3023     	MOVAR	r0x1066
     0003 1Frr                      1- 3024     	BCR	r0x1066,7
     0004 01rr                      1- 3025     	MOVR	r0x1066,W
     0005 000r                      1- 3026     	IOST	_IOSTA
                                    1- 3027     	.line	465, "main.c"; 	L3OUT;
     0006 001r                      1- 3028     	IOSTR	_IOSTB
     0007 00rr                      1- 3029     	MOVAR	r0x1066
     0008 1Crr                      1- 3030     	BCR	r0x1066,1
     0009 01rr                      1- 3031     	MOVR	r0x1066,W
     000A 000r                      1- 3032     	IOST	_IOSTB
                                    1- 3033     	.line	466, "main.c"; 	L3H;
     000B 18rr                      1- 3034     	BSR	_PORTB,1
                                    1- 3035     	.line	467, "main.c"; 	L1L;
                                    1- 3036     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Frr                      1- 3037     	BCR	_PORTA,7
                                    1- 3038     	.line	468, "main.c"; 	delay(80);
     000E 2150                      1- 3039     	MOVIA	0x50
                                    1- 3040     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3041     	.line	469, "main.c"; 	LedInput();
                                    1- 3042     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3043     	.line	470, "main.c"; 	}
                                    1- 3044     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3045     ; exit point of _LED2ON
                                    1- 3047     ;***
                                    1- 3048     ;  pBlock Stats: dbName = C
                                    1- 3049     ;***
                                    1- 3050     ;has an exit
                                    1- 3051     ;functions called:
                                    1- 3052     ;   _delay
                                    1- 3053     ;   _LedInput
                                    1- 3054     ;   _delay
                                    1- 3055     ;   _LedInput
                                    1- 3056     ;1 compiler assigned register :
                                    1- 3057     ;   r0x1067
                                    1- 3058     ;; Starting pCode block
                                    1- 3059     .segment "code"; module=main, function=_LED1ON
     0000                           1- 3061     _LED1ON:
                                    1- 3062     ; 2 exit points
                                    1- 3063     	.line	454, "main.c"; 	L3OUT;
     0000 001r                      1- 3064     	IOSTR	_IOSTB
                                    1- 3065     	BANKSEL	r0x1067
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3066     	MOVAR	r0x1067
     0003 1Crr                      1- 3067     	BCR	r0x1067,1
     0004 01rr                      1- 3068     	MOVR	r0x1067,W
     0005 000r                      1- 3069     	IOST	_IOSTB
                                    1- 3070     	.line	455, "main.c"; 	L1OUT;
     0006 001r                      1- 3071     	IOSTR	_IOSTA
     0007 00rr                      1- 3072     	MOVAR	r0x1067
     0008 1Frr                      1- 3073     	BCR	r0x1067,7
     0009 01rr                      1- 3074     	MOVR	r0x1067,W
     000A 000r                      1- 3075     	IOST	_IOSTA
                                    1- 3076     	.line	456, "main.c"; 	L1H;
                                    1- 3077     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 1Brr                      1- 3078     	BSR	_PORTA,7
                                    1- 3079     	.line	457, "main.c"; 	L3L;
     000D 1Crr                      1- 3080     	BCR	_PORTB,1
                                    1- 3081     	.line	458, "main.c"; 	delay(80);
     000E 2150                      1- 3082     	MOVIA	0x50
                                    1- 3083     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3084     	.line	459, "main.c"; 	LedInput();
                                    1- 3085     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3086     	.line	460, "main.c"; 	}
                                    1- 3087     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3088     ; exit point of _LED1ON
                                    1- 3090     ;***
                                    1- 3091     ;  pBlock Stats: dbName = C
                                    1- 3092     ;***
                                    1- 3093     ;has an exit
                                    1- 3094     ;1 compiler assigned register :
                                    1- 3095     ;   r0x105D
                                    1- 3096     ;; Starting pCode block
                                    1- 3097     .segment "code"; module=main, function=_LedInput
     0000                           1- 3099     _LedInput:
                                    1- 3100     ; 2 exit points
                                    1- 3101     	.line	446, "main.c"; 	IOSTA |= 0x80;
     0000 001r                      1- 3102     	IOSTR	_IOSTA
                                    1- 3103     	BANKSEL	r0x105D
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3104     	MOVAR	r0x105D
     0003 1Brr                      1- 3105     	BSR	r0x105D,7
     0004 01rr                      1- 3106     	MOVR	r0x105D,W
     0005 000r                      1- 3107     	IOST	_IOSTA
                                    1- 3108     	.line	447, "main.c"; 	IOSTB |= 0x0B;
     0006 001r                      1- 3109     	IOSTR	_IOSTB
     0007 00rr                      1- 3110     	MOVAR	r0x105D
     0008 210B                      1- 3111     	MOVIA	0x0b
     0009 11rr                      1- 3112     	IORAR	r0x105D,F
     000A 01rr                      1- 3113     	MOVR	r0x105D,W
     000B 000r                      1- 3114     	IOST	_IOSTB
                                    1- 3115     	.line	448, "main.c"; 	PORTA &= 0x7F;
                                    1- 3116     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Frr                      1- 3117     	BCR	_PORTA,7
                                    1- 3118     	.line	449, "main.c"; 	PORTB &= 0xF4;
     000E 21F4                      1- 3119     	MOVIA	0xf4
     000F 10rr                      1- 3120     	ANDAR	_PORTB,F
                                    1- 3121     	.line	450, "main.c"; 	}
                                    1- 3122     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3123     ; exit point of _LedInput
                                    1- 3125     ;***
                                    1- 3126     ;  pBlock Stats: dbName = C
                                    1- 3127     ;***
                                    1- 3128     ;has an exit
                                    1- 3129     ;functions called:
                                    1- 3130     ;   _LedInput
                                    1- 3131     ;   _LedInput
                                    1- 3132     ;   _LED8ON
                                    1- 3133     ;   _LED7ON
                                    1- 3134     ;   _LED6ON
                                    1- 3135     ;   _LED5ON
                                    1- 3136     ;   _LED4ON
                                    1- 3137     ;   _LED3ON
                                    1- 3138     ;   _LED2ON
                                    1- 3139     ;   _LED1ON
                                    1- 3140     ;   _LedInput
                                    1- 3141     ;   _LedInput
                                    1- 3142     ;   _LED8ON
                                    1- 3143     ;   _LED7ON
                                    1- 3144     ;   _LED6ON
                                    1- 3145     ;   _LED5ON
                                    1- 3146     ;   _LED4ON
                                    1- 3147     ;   _LED3ON
                                    1- 3148     ;   _LED2ON
                                    1- 3149     ;   _LED1ON
                                    1- 3150     ;; Starting pCode block
                                    1- 3151     .segment "code"; module=main, function=_ledShow
     0000                           1- 3153     _ledShow:
                                    1- 3154     ; 2 exit points
                                    1- 3155     	.line	386, "main.c"; 	if(ledDeadTime > 0 && workStep == 0)
                                    1- 3156     	BANKSEL	_ledDeadTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 3157     	MOVR	_ledDeadTime,W
     0002 0D03                      1- 3158     	BTRSC	STATUS,2
                                    1- 3159     	MGOTO	_00325_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3160     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 3161     	MOVR	_workStep,W
     0006 0903                      1- 3162     	BTRSS	STATUS,2
                                    1- 3163     	MGOTO	_00325_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3164     	.line	388, "main.c"; 	if(ledDeadTime % 2 == 0)
                                    1- 3165     	BANKSEL	_ledDeadTime
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 0Crr                      1- 3166     	BTRSC	_ledDeadTime,0
                                    1- 3167     	MGOTO	_00322_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3168     	.line	390, "main.c"; 	ledStep = 0;
                                    1- 3169     	BANKSEL	_ledStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 02rr                      1- 3170     	CLRR	_ledStep
                                    1- 3171     	MGOTO	_00325_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 3172     _00322_DS_:
                                    1- 3173     	.line	394, "main.c"; 	ledStep = tempLedStep;
                                    1- 3174     	BANKSEL	_tempLedStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 3175     	MOVR	_tempLedStep,W
                                    1- 3176     	BANKSEL	_ledStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 3177     	MOVAR	_ledStep
     0012                           1- 3178     _00325_DS_:
                                    1- 3179     	.line	398, "main.c"; 	if(ledLightTime > 0 && pwStep > 0)
                                    1- 3180     	BANKSEL	_ledLightTime
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 3181     	MOVR	_ledLightTime,W
     0014 0D03                      1- 3182     	BTRSC	STATUS,2
                                    1- 3183     	MGOTO	_00328_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3184     	BANKSEL	_pwStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 3185     	MOVR	_pwStep,W
     0018 0D03                      1- 3186     	BTRSC	STATUS,2
                                    1- 3187     	MGOTO	_00328_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3188     	.line	401, "main.c"; 	ledStep = tempLedStep;
                                    1- 3189     	BANKSEL	_tempLedStep
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 01rr                      1- 3190     	MOVR	_tempLedStep,W
                                    1- 3191     	BANKSEL	_ledStep
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 00rr                      1- 3192     	MOVAR	_ledStep
     001E                           1- 3193     _00328_DS_:
                                    1- 3194     	.line	416, "main.c"; 	LedInput();
                                    1- 3195     	MCALL	_LedInput
     001E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3196     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3197     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 3198     	.line	417, "main.c"; 	switch(ledStep)
     001F 2109                      1- 3199     	MOVIA	0x09
                                    1- 3200     	BANKSEL	_ledStep
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 04rr                      1- 3201     	SUBAR	_ledStep,W
     0022 0C03                      1- 3202     	BTRSC	STATUS,0
                                    1- 3203     	MGOTO	_00340_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
     0024 21rr                      1- 3204     	MOVIA	((_00361_DS_ >> 8) & 0xff)
     0025 008A                      1- 3205     	MOVAR	PCHBUF
     0026 01rr                      1- 3206     	MOVR	_ledStep,W
     0027 25rr                      1- 3207     	ADDIA	_00361_DS_
     0028 0C03                      1- 3208     	BTRSC	STATUS,0
     0029 058A                      1- 3209     	INCR	PCHBUF,F
     002A 0082                      1- 3210     	MOVAR	PCL
     002B                           1- 3211     _00361_DS_:
                                    1- 3212     	MGOTO	_00330_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3213     	MGOTO	_00338_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3214     	MGOTO	_00337_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3215     	MGOTO	_00336_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3216     	MGOTO	_00335_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3217     	MGOTO	_00334_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3218     	MGOTO	_00333_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3219     	MGOTO	_00332_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3220     	MGOTO	_00331_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
     0034                           1- 3221     _00330_DS_:
                                    1- 3222     	.line	420, "main.c"; 	LedInput();
                                    1- 3223     	MCALL	_LedInput
     0034 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3224     	.line	421, "main.c"; 	break;
                                    1- 3225     	MGOTO	_00340_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
     0036                           1- 3226     _00331_DS_:
                                    1- 3227     	.line	423, "main.c"; 	LED8ON();
                                    1- 3228     	MCALL	_LED8ON
     0036 2rrr                      3-   66 m1      LCALL rom_address
     0037                           1- 3229     _00332_DS_:
                                    1- 3230     	.line	425, "main.c"; 	LED7ON();
                                    1- 3231     	MCALL	_LED7ON
     0037 2rrr                      3-   66 m1      LCALL rom_address
     0038                           1- 3232     _00333_DS_:
                                    1- 3233     	.line	427, "main.c"; 	LED6ON();
                                    1- 3234     	MCALL	_LED6ON
     0038 2rrr                      3-   66 m1      LCALL rom_address
     0039                           1- 3235     _00334_DS_:
                                    1- 3236     	.line	429, "main.c"; 	LED5ON();
                                    1- 3237     	MCALL	_LED5ON
     0039 2rrr                      3-   66 m1      LCALL rom_address
     003A                           1- 3238     _00335_DS_:
                                    1- 3239     	.line	431, "main.c"; 	LED4ON();
                                    1- 3240     	MCALL	_LED4ON
     003A 2rrr                      3-   66 m1      LCALL rom_address
     003B                           1- 3241     _00336_DS_:
                                    1- 3242     	.line	433, "main.c"; 	LED3ON();
                                    1- 3243     	MCALL	_LED3ON
     003B 2rrr                      3-   66 m1      LCALL rom_address
     003C                           1- 3244     _00337_DS_:
                                    1- 3245     	.line	435, "main.c"; 	LED2ON();
                                    1- 3246     	MCALL	_LED2ON
     003C 2rrr                      3-   66 m1      LCALL rom_address
     003D                           1- 3247     _00338_DS_:
                                    1- 3248     	.line	437, "main.c"; 	LED1ON();
                                    1- 3249     	MCALL	_LED1ON
     003D 2rrr                      3-   66 m1      LCALL rom_address
     003E                           1- 3250     _00340_DS_:
                                    1- 3251     	.line	440, "main.c"; 	}
                                    1- 3252     	RETURN	
     003E 0010                      3-   40 m1      ret
                                    1- 3253     ; exit point of _ledShow
                                    1- 3255     ;***
                                    1- 3256     ;  pBlock Stats: dbName = C
                                    1- 3257     ;***
                                    1- 3258     ;has an exit
                                    1- 3259     ;functions called:
                                    1- 3260     ;   _LedInput
                                    1- 3261     ;   _LedInput
                                    1- 3262     ;; Starting pCode block
                                    1- 3263     .segment "code"; module=main, function=_initSys
     0000                           1- 3265     _initSys:
                                    1- 3266     ; 2 exit points
                                    1- 3267     	.line	354, "main.c"; 	DISI();
     0000 0013                      1- 3268     	DISI
                                    1- 3269     	.line	355, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input ;
     0001 2178                      1- 3270     	MOVIA	0x78
     0002 000r                      1- 3271     	IOST	_IOSTA
                                    1- 3272     	.line	356, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 3273     	CLRA	
     0004 000r                      1- 3274     	IOST	_IOSTB
                                    1- 3275     	.line	357, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 3276     	CLRR	_PORTB
                                    1- 3277     	.line	358, "main.c"; 	PORTA = 0x00;
                                    1- 3278     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 3279     	CLRR	_PORTA
                                    1- 3280     	.line	359, "main.c"; 	LedInput();
                                    1- 3281     	MCALL	_LedInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3282     	.line	360, "main.c"; 	APHCON = 0xBF;
     0009 21BF                      1- 3283     	MOVIA	0xbf
     000A 000r                      1- 3284     	IOST	_APHCON
                                    1- 3285     	.line	361, "main.c"; 	BPHCON = 0xFF;
     000B 21FF                      1- 3286     	MOVIA	0xff
     000C 00rr                      1- 3287     	MOVAR	_BPHCON
                                    1- 3288     	.line	362, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 3289     	MOVAR	_ABPLCON
                                    1- 3290     	.line	364, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1- 3291     	MOVIA	0x01
     000F 00rr                      1- 3292     	MOVAR	_INTE
                                    1- 3293     	.line	366, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 3294     	CLRA	
     0011 000r                      1- 3295     	IOST	_PCON1
                                    1- 3296     	.line	368, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 3297     	MOVIA	0x37
     0013 00rr                      1- 3298     	MOVAR	_TMR0
                                    1- 3299     	.line	369, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0014 0200                      1- 3300     	CLRA	
     0015 0003                      1- 3301     	T0MD	
                                    1- 3302     	.line	371, "main.c"; 	PCON1 = C_TMR0_En;
     0016 2101                      1- 3303     	MOVIA	0x01
     0017 000r                      1- 3304     	IOST	_PCON1
                                    1- 3305     	.line	374, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0018 2198                      1- 3306     	MOVIA	0x98
     0019 00rr                      1- 3307     	MOVAR	_PCON
                                    1- 3308     	.line	377, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001A 2101                      1- 3309     	MOVIA	0x01
     001B 000r                      1- 3310     	IOST	_PCON1
                                    1- 3311     	.line	378, "main.c"; 	ENI();
     001C 0004                      1- 3312     	ENI
                                    1- 3313     	.line	379, "main.c"; 	}
                                    1- 3314     	RETURN	
     001D 0010                      3-   40 m1      ret
                                    1- 3315     ; exit point of _initSys
                                    1- 3317     ;***
                                    1- 3318     ;  pBlock Stats: dbName = C
                                    1- 3319     ;***
                                    1- 3320     ;has an exit
                                    1- 3321     ;functions called:
                                    1- 3322     ;   _pwmStop
                                    1- 3323     ;   _pwmStop
                                    1- 3324     ;; Starting pCode block
                                    1- 3325     .segment "code"; module=main, function=_powerOff
     0000                           1- 3327     _powerOff:
                                    1- 3328     ; 2 exit points
                                    1- 3329     	.line	345, "main.c"; 	workStep = 0;
                                    1- 3330     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 3331     	CLRR	_workStep
                                    1- 3332     	.line	346, "main.c"; 	pwmStop();
                                    1- 3333     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3334     	.line	347, "main.c"; 	ledStep = 0;
                                    1- 3335     	BANKSEL	_ledStep
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 3336     	CLRR	_ledStep
                                    1- 3337     	.line	348, "main.c"; 	}
                                    1- 3338     	RETURN	
     0005 0010                      3-   40 m1      ret
                                    1- 3339     ; exit point of _powerOff
                                    1- 3341     ;***
                                    1- 3342     ;  pBlock Stats: dbName = C
                                    1- 3343     ;***
                                    1- 3344     ;has an exit
                                    1- 3345     ;functions called:
                                    1- 3346     ;   _keyRead
                                    1- 3347     ;   _pwmInit
                                    1- 3348     ;   _powerOff
                                    1- 3349     ;   _pwmInit
                                    1- 3350     ;   _keyRead
                                    1- 3351     ;   _pwmInit
                                    1- 3352     ;   _powerOff
                                    1- 3353     ;   _pwmInit
                                    1- 3354     ;1 compiler assigned register :
                                    1- 3355     ;   r0x1068
                                    1- 3356     ;; Starting pCode block
                                    1- 3357     .segment "code"; module=main, function=_keyCtr
                                    1- 3359     ;local variable name mapping:
     0000                           1- 3361     _keyCtr:
                                    1- 3362     ; 2 exit points
                                    1- 3363     	.line	246, "main.c"; 	char kclick = keyRead(0x40 & (~PORTA));
                                    1- 3364     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 3365     	COMR	_PORTA,W
                                    1- 3366     	BANKSEL	r0x1068
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 3367     	MOVAR	r0x1068
     0004 2140                      1- 3368     	MOVIA	0x40
     0005 10rr                      1- 3369     	ANDAR	r0x1068,F
     0006 01rr                      1- 3370     	MOVR	r0x1068,W
                                    1- 3371     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3372     	BANKSEL	r0x1068
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 3373     	MOVAR	r0x1068
                                    1- 3374     	.line	247, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 3375     	XORIA	0x01
     000B 0903                      1- 3376     	BTRSS	STATUS,2
                                    1- 3377     	MGOTO	_00306_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3378     	.line	249, "main.c"; 	count500ms = 0;
                                    1- 3379     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 3380     	CLRR	_count500ms
                                    1- 3381     	.line	250, "main.c"; 	ledLightTime = 0;
                                    1- 3382     	BANKSEL	_ledLightTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 3383     	CLRR	_ledLightTime
                                    1- 3384     	.line	251, "main.c"; 	if(workStep == 0)
                                    1- 3385     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 3386     	MOVR	_workStep,W
     0013 0903                      1- 3387     	BTRSS	STATUS,2
                                    1- 3388     	MGOTO	_00240_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3389     	.line	253, "main.c"; 	count1s = 0;
                                    1- 3390     	BANKSEL	_count1s
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 3391     	CLRR	_count1s
                                    1- 3392     	.line	259, "main.c"; 	return;
                                    1- 3393     	MGOTO	_00308_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
     0018                           1- 3394     _00240_DS_:
                                    1- 3395     	.line	261, "main.c"; 	ledTime = 0;
                                    1- 3396     	BANKSEL	_ledTime
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 3397     	CLRR	_ledTime
                                    1- 3398     	.line	262, "main.c"; 	if(++workStep > 8)
                                    1- 3399     	BANKSEL	_workStep
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 05rr                      1- 3400     	INCR	_workStep,F
                                    1- 3401     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3402     ;;unsigned compare: left >= lit (0x9=9), size=1
     001C 2109                      1- 3403     	MOVIA	0x09
     001D 04rr                      1- 3404     	SUBAR	_workStep,W
     001E 0803                      1- 3405     	BTRSS	STATUS,0
                                    1- 3406     	MGOTO	_00242_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3407     	.line	263, "main.c"; 	workStep = 1;
     0020 2101                      1- 3408     	MOVIA	0x01
     0021 00rr                      1- 3409     	MOVAR	_workStep
     0022                           1- 3410     _00242_DS_:
                                    1- 3411     	.line	264, "main.c"; 	shanshuoTime = 6;
     0022 2106                      1- 3412     	MOVIA	0x06
                                    1- 3413     	BANKSEL	_shanshuoTime
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 3414     	MOVAR	_shanshuoTime
                                    1- 3415     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3416     ;;unsigned compare: left >= lit (0x3=3), size=1
                                    1- 3417     	.line	266, "main.c"; 	if(pwStep <= 2)
     0025 2103                      1- 3418     	MOVIA	0x03
                                    1- 3419     	BANKSEL	_pwStep
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 04rr                      1- 3420     	SUBAR	_pwStep,W
     0028 0C03                      1- 3421     	BTRSC	STATUS,0
                                    1- 3422     	MGOTO	_00290_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3423     	.line	268, "main.c"; 	if(workStep == 1)
                                    1- 3424     	BANKSEL	_workStep
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1- 3425     	MOVR	_workStep,W
     002C 2401                      1- 3426     	XORIA	0x01
     002D 0903                      1- 3427     	BTRSS	STATUS,2
                                    1- 3428     	MGOTO	_00264_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3429     	.line	269, "main.c"; 	maxDuty = 50;
     002F 2132                      1- 3430     	MOVIA	0x32
                                    1- 3431     	BANKSEL	_maxDuty
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 00rr                      1- 3432     	MOVAR	_maxDuty
                                    1- 3433     	MGOTO	_00291_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033                           1- 3434     _00264_DS_:
                                    1- 3435     	.line	270, "main.c"; 	else if(workStep == 2)
                                    1- 3436     	BANKSEL	_workStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 3437     	MOVR	_workStep,W
     0035 2402                      1- 3438     	XORIA	0x02
     0036 0903                      1- 3439     	BTRSS	STATUS,2
                                    1- 3440     	MGOTO	_00261_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3441     	.line	271, "main.c"; 	maxDuty = 52;
     0038 2134                      1- 3442     	MOVIA	0x34
                                    1- 3443     	BANKSEL	_maxDuty
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 00rr                      1- 3444     	MOVAR	_maxDuty
                                    1- 3445     	MGOTO	_00291_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
     003C                           1- 3446     _00261_DS_:
                                    1- 3447     	.line	272, "main.c"; 	else if(workStep == 3)
                                    1- 3448     	BANKSEL	_workStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 3449     	MOVR	_workStep,W
     003E 2403                      1- 3450     	XORIA	0x03
     003F 0903                      1- 3451     	BTRSS	STATUS,2
                                    1- 3452     	MGOTO	_00258_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3453     	.line	273, "main.c"; 	maxDuty = 54;
     0041 2136                      1- 3454     	MOVIA	0x36
                                    1- 3455     	BANKSEL	_maxDuty
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1- 3456     	MOVAR	_maxDuty
                                    1- 3457     	MGOTO	_00291_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
     0045                           1- 3458     _00258_DS_:
                                    1- 3459     	.line	274, "main.c"; 	else if(workStep == 4)
                                    1- 3460     	BANKSEL	_workStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1- 3461     	MOVR	_workStep,W
     0047 2404                      1- 3462     	XORIA	0x04
     0048 0903                      1- 3463     	BTRSS	STATUS,2
                                    1- 3464     	MGOTO	_00255_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3465     	.line	275, "main.c"; 	maxDuty = 56;
     004A 2138                      1- 3466     	MOVIA	0x38
                                    1- 3467     	BANKSEL	_maxDuty
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 00rr                      1- 3468     	MOVAR	_maxDuty
                                    1- 3469     	MGOTO	_00291_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
     004E                           1- 3470     _00255_DS_:
                                    1- 3471     	.line	276, "main.c"; 	else if(workStep == 5)
                                    1- 3472     	BANKSEL	_workStep
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1- 3473     	MOVR	_workStep,W
     0050 2405                      1- 3474     	XORIA	0x05
     0051 0903                      1- 3475     	BTRSS	STATUS,2
                                    1- 3476     	MGOTO	_00252_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3477     	.line	277, "main.c"; 	maxDuty = 58;
     0053 213A                      1- 3478     	MOVIA	0x3a
                                    1- 3479     	BANKSEL	_maxDuty
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 00rr                      1- 3480     	MOVAR	_maxDuty
                                    1- 3481     	MGOTO	_00291_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
     0057                           1- 3482     _00252_DS_:
                                    1- 3483     	.line	278, "main.c"; 	else if(workStep == 6)
                                    1- 3484     	BANKSEL	_workStep
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 01rr                      1- 3485     	MOVR	_workStep,W
     0059 2406                      1- 3486     	XORIA	0x06
     005A 0903                      1- 3487     	BTRSS	STATUS,2
                                    1- 3488     	MGOTO	_00249_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3489     	.line	279, "main.c"; 	maxDuty = 60;
     005C 213C                      1- 3490     	MOVIA	0x3c
                                    1- 3491     	BANKSEL	_maxDuty
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 00rr                      1- 3492     	MOVAR	_maxDuty
                                    1- 3493     	MGOTO	_00291_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
     0060                           1- 3494     _00249_DS_:
                                    1- 3495     	.line	280, "main.c"; 	else if(workStep == 7)
                                    1- 3496     	BANKSEL	_workStep
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1- 3497     	MOVR	_workStep,W
     0062 2407                      1- 3498     	XORIA	0x07
     0063 0903                      1- 3499     	BTRSS	STATUS,2
                                    1- 3500     	MGOTO	_00246_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3501     	.line	281, "main.c"; 	maxDuty = 62;
     0065 213E                      1- 3502     	MOVIA	0x3e
                                    1- 3503     	BANKSEL	_maxDuty
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 00rr                      1- 3504     	MOVAR	_maxDuty
                                    1- 3505     	MGOTO	_00291_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
     0069                           1- 3506     _00246_DS_:
                                    1- 3507     	.line	282, "main.c"; 	else if(workStep == 8)
                                    1- 3508     	BANKSEL	_workStep
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 01rr                      1- 3509     	MOVR	_workStep,W
     006B 2408                      1- 3510     	XORIA	0x08
     006C 0903                      1- 3511     	BTRSS	STATUS,2
                                    1- 3512     	MGOTO	_00291_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3513     	.line	283, "main.c"; 	maxDuty = 64;
     006E 2140                      1- 3514     	MOVIA	0x40
                                    1- 3515     	BANKSEL	_maxDuty
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 00rr                      1- 3516     	MOVAR	_maxDuty
                                    1- 3517     	MGOTO	_00291_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
     0072                           1- 3518     _00290_DS_:
                                    1- 3519     	.line	287, "main.c"; 	if(workStep == 1)
                                    1- 3520     	BANKSEL	_workStep
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 01rr                      1- 3521     	MOVR	_workStep,W
     0074 2401                      1- 3522     	XORIA	0x01
     0075 0903                      1- 3523     	BTRSS	STATUS,2
                                    1- 3524     	MGOTO	_00287_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3525     	.line	288, "main.c"; 	maxDuty = 40;
     0077 2128                      1- 3526     	MOVIA	0x28
                                    1- 3527     	BANKSEL	_maxDuty
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 00rr                      1- 3528     	MOVAR	_maxDuty
                                    1- 3529     	MGOTO	_00291_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
     007B                           1- 3530     _00287_DS_:
                                    1- 3531     	.line	289, "main.c"; 	else if(workStep == 2)
                                    1- 3532     	BANKSEL	_workStep
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 01rr                      1- 3533     	MOVR	_workStep,W
     007D 2402                      1- 3534     	XORIA	0x02
     007E 0903                      1- 3535     	BTRSS	STATUS,2
                                    1- 3536     	MGOTO	_00284_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3537     	.line	290, "main.c"; 	maxDuty = 44;
     0080 212C                      1- 3538     	MOVIA	0x2c
                                    1- 3539     	BANKSEL	_maxDuty
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 00rr                      1- 3540     	MOVAR	_maxDuty
                                    1- 3541     	MGOTO	_00291_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
     0084                           1- 3542     _00284_DS_:
                                    1- 3543     	.line	291, "main.c"; 	else if(workStep == 3)
                                    1- 3544     	BANKSEL	_workStep
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 01rr                      1- 3545     	MOVR	_workStep,W
     0086 2403                      1- 3546     	XORIA	0x03
     0087 0903                      1- 3547     	BTRSS	STATUS,2
                                    1- 3548     	MGOTO	_00281_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3549     	.line	292, "main.c"; 	maxDuty = 48;
     0089 2130                      1- 3550     	MOVIA	0x30
                                    1- 3551     	BANKSEL	_maxDuty
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 00rr                      1- 3552     	MOVAR	_maxDuty
                                    1- 3553     	MGOTO	_00291_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
     008D                           1- 3554     _00281_DS_:
                                    1- 3555     	.line	293, "main.c"; 	else if(workStep == 4)
                                    1- 3556     	BANKSEL	_workStep
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 01rr                      1- 3557     	MOVR	_workStep,W
     008F 2404                      1- 3558     	XORIA	0x04
     0090 0903                      1- 3559     	BTRSS	STATUS,2
                                    1- 3560     	MGOTO	_00278_DS_
     0091 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3561     	.line	294, "main.c"; 	maxDuty = 52;
     0092 2134                      1- 3562     	MOVIA	0x34
                                    1- 3563     	BANKSEL	_maxDuty
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 00rr                      1- 3564     	MOVAR	_maxDuty
                                    1- 3565     	MGOTO	_00291_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
     0096                           1- 3566     _00278_DS_:
                                    1- 3567     	.line	295, "main.c"; 	else if(workStep == 5)
                                    1- 3568     	BANKSEL	_workStep
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 01rr                      1- 3569     	MOVR	_workStep,W
     0098 2405                      1- 3570     	XORIA	0x05
     0099 0903                      1- 3571     	BTRSS	STATUS,2
                                    1- 3572     	MGOTO	_00275_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3573     	.line	296, "main.c"; 	maxDuty = 55;
     009B 2137                      1- 3574     	MOVIA	0x37
                                    1- 3575     	BANKSEL	_maxDuty
     009C rrrr                      3-  110 m1      .banksel ram_address
     009D 00rr                      1- 3576     	MOVAR	_maxDuty
                                    1- 3577     	MGOTO	_00291_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
     009F                           1- 3578     _00275_DS_:
                                    1- 3579     	.line	297, "main.c"; 	else if(workStep == 6)
                                    1- 3580     	BANKSEL	_workStep
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 01rr                      1- 3581     	MOVR	_workStep,W
     00A1 2406                      1- 3582     	XORIA	0x06
     00A2 0903                      1- 3583     	BTRSS	STATUS,2
                                    1- 3584     	MGOTO	_00272_DS_
     00A3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3585     	.line	298, "main.c"; 	maxDuty = 58;
     00A4 213A                      1- 3586     	MOVIA	0x3a
                                    1- 3587     	BANKSEL	_maxDuty
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 00rr                      1- 3588     	MOVAR	_maxDuty
                                    1- 3589     	MGOTO	_00291_DS_
     00A7 3rrr                      3-   63 m1      LGOTO rom_address
     00A8                           1- 3590     _00272_DS_:
                                    1- 3591     	.line	299, "main.c"; 	else if(workStep == 7)
                                    1- 3592     	BANKSEL	_workStep
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 01rr                      1- 3593     	MOVR	_workStep,W
     00AA 2407                      1- 3594     	XORIA	0x07
     00AB 0903                      1- 3595     	BTRSS	STATUS,2
                                    1- 3596     	MGOTO	_00269_DS_
     00AC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3597     	.line	300, "main.c"; 	maxDuty = 61;
     00AD 213D                      1- 3598     	MOVIA	0x3d
                                    1- 3599     	BANKSEL	_maxDuty
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 00rr                      1- 3600     	MOVAR	_maxDuty
                                    1- 3601     	MGOTO	_00291_DS_
     00B0 3rrr                      3-   63 m1      LGOTO rom_address
     00B1                           1- 3602     _00269_DS_:
                                    1- 3603     	.line	301, "main.c"; 	else if(workStep == 8)
                                    1- 3604     	BANKSEL	_workStep
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 01rr                      1- 3605     	MOVR	_workStep,W
     00B3 2408                      1- 3606     	XORIA	0x08
     00B4 0903                      1- 3607     	BTRSS	STATUS,2
                                    1- 3608     	MGOTO	_00291_DS_
     00B5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3609     	.line	302, "main.c"; 	maxDuty = 64;
     00B6 2140                      1- 3610     	MOVIA	0x40
                                    1- 3611     	BANKSEL	_maxDuty
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 00rr                      1- 3612     	MOVAR	_maxDuty
     00B9                           1- 3613     _00291_DS_:
                                    1- 3614     	.line	304, "main.c"; 	if(workStep > 0)
                                    1- 3615     	BANKSEL	_workStep
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 01rr                      1- 3616     	MOVR	_workStep,W
     00BB 0D03                      1- 3617     	BTRSC	STATUS,2
                                    1- 3618     	MGOTO	_00293_DS_
     00BC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3619     	.line	306, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 3620     	BANKSEL	_maxDuty
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 01rr                      1- 3621     	MOVR	_maxDuty,W
     00BF 00rr                      1- 3622     	SFUN	_PWM2DUTY
                                    1- 3623     	.line	307, "main.c"; 	pwmInit();
                                    1- 3624     	MCALL	_pwmInit
     00C0 2rrr                      3-   66 m1      LCALL rom_address
     00C1                           1- 3625     _00293_DS_:
                                    1- 3626     	.line	309, "main.c"; 	ledStep = workStep;
                                    1- 3627     	BANKSEL	_workStep
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 01rr                      1- 3628     	MOVR	_workStep,W
                                    1- 3629     	BANKSEL	_ledStep
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 00rr                      1- 3630     	MOVAR	_ledStep
                                    1- 3631     	MGOTO	_00308_DS_
     00C5 3rrr                      3-   63 m1      LGOTO rom_address
     00C6                           1- 3632     _00306_DS_:
                                    1- 3633     	.line	311, "main.c"; 	else if(kclick == 2)
                                    1- 3634     	BANKSEL	r0x1068
     00C6 rrrr                      3-  110 m1      .banksel ram_address
     00C7 01rr                      1- 3635     	MOVR	r0x1068,W
     00C8 2402                      1- 3636     	XORIA	0x02
     00C9 0903                      1- 3637     	BTRSS	STATUS,2
                                    1- 3638     	MGOTO	_00308_DS_
     00CA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3639     	.line	313, "main.c"; 	if(workStep > 0)
                                    1- 3640     	BANKSEL	_workStep
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 01rr                      1- 3641     	MOVR	_workStep,W
     00CD 0D03                      1- 3642     	BTRSC	STATUS,2
                                    1- 3643     	MGOTO	_00301_DS_
     00CE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3644     	.line	315, "main.c"; 	powerOff();
                                    1- 3645     	MCALL	_powerOff
     00CF 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3646     	MGOTO	_00302_DS_
     00D0 3rrr                      3-   63 m1      LGOTO rom_address
     00D1                           1- 3647     _00301_DS_:
                                    1- 3648     	.line	319, "main.c"; 	if(pwStep <= 0 || lockStart)
                                    1- 3649     	BANKSEL	_pwStep
     00D1 rrrr                      3-  110 m1      .banksel ram_address
     00D2 01rr                      1- 3650     	MOVR	_pwStep,W
     00D3 0D03                      1- 3651     	BTRSC	STATUS,2
                                    1- 3652     	MGOTO	_00294_DS_
     00D4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3653     	BANKSEL	_lockStart
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 01rr                      1- 3654     	MOVR	_lockStart,W
     00D7 0D03                      1- 3655     	BTRSC	STATUS,2
                                    1- 3656     	MGOTO	_00295_DS_
     00D8 3rrr                      3-   63 m1      LGOTO rom_address
     00D9                           1- 3657     _00294_DS_:
                                    1- 3658     	.line	322, "main.c"; 	lockStart = 1;
     00D9 2101                      1- 3659     	MOVIA	0x01
                                    1- 3660     	BANKSEL	_lockStart
     00DA rrrr                      3-  110 m1      .banksel ram_address
     00DB 00rr                      1- 3661     	MOVAR	_lockStart
                                    1- 3662     	.line	323, "main.c"; 	shandengTime = 500;
     00DC 21F4                      1- 3663     	MOVIA	0xf4
                                    1- 3664     	BANKSEL	_shandengTime
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 00rr                      1- 3665     	MOVAR	_shandengTime
     00DF 2101                      1- 3666     	MOVIA	0x01
     00E0 00rr                      1- 3667     	MOVAR	(_shandengTime + 1)
                                    1- 3668     	.line	324, "main.c"; 	return;	
                                    1- 3669     	MGOTO	_00308_DS_
     00E1 3rrr                      3-   63 m1      LGOTO rom_address
     00E2                           1- 3670     _00295_DS_:
                                    1- 3671     	.line	326, "main.c"; 	ledLightTime = 0;
                                    1- 3672     	BANKSEL	_ledLightTime
     00E2 rrrr                      3-  110 m1      .banksel ram_address
     00E3 02rr                      1- 3673     	CLRR	_ledLightTime
                                    1- 3674     	.line	327, "main.c"; 	workStep = 1;
     00E4 2101                      1- 3675     	MOVIA	0x01
                                    1- 3676     	BANKSEL	_workStep
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 00rr                      1- 3677     	MOVAR	_workStep
                                    1- 3678     	.line	328, "main.c"; 	PWM2DUTY = 80;
     00E7 2150                      1- 3679     	MOVIA	0x50
     00E8 00rr                      1- 3680     	SFUN	_PWM2DUTY
                                    1- 3681     	.line	329, "main.c"; 	currentDuty = 80;
                                    1- 3682     	BANKSEL	_currentDuty
     00E9 rrrr                      3-  110 m1      .banksel ram_address
     00EA 00rr                      1- 3683     	MOVAR	_currentDuty
                                    1- 3684     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3685     ;;unsigned compare: left >= lit (0x3=3), size=1
                                    1- 3686     	.line	330, "main.c"; 	if(pwStep <= 2)
     00EB 2103                      1- 3687     	MOVIA	0x03
                                    1- 3688     	BANKSEL	_pwStep
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 04rr                      1- 3689     	SUBAR	_pwStep,W
     00EE 0C03                      1- 3690     	BTRSC	STATUS,0
                                    1- 3691     	MGOTO	_00298_DS_
     00EF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3692     	.line	331, "main.c"; 	maxDuty = 50;
     00F0 2132                      1- 3693     	MOVIA	0x32
                                    1- 3694     	BANKSEL	_maxDuty
     00F1 rrrr                      3-  110 m1      .banksel ram_address
     00F2 00rr                      1- 3695     	MOVAR	_maxDuty
                                    1- 3696     	MGOTO	_00299_DS_
     00F3 3rrr                      3-   63 m1      LGOTO rom_address
     00F4                           1- 3697     _00298_DS_:
                                    1- 3698     	.line	333, "main.c"; 	maxDuty = 40;
     00F4 2128                      1- 3699     	MOVIA	0x28
                                    1- 3700     	BANKSEL	_maxDuty
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 00rr                      1- 3701     	MOVAR	_maxDuty
     00F7                           1- 3702     _00299_DS_:
                                    1- 3703     	.line	334, "main.c"; 	pwmInit();
                                    1- 3704     	MCALL	_pwmInit
     00F7 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3705     	.line	335, "main.c"; 	shanshuoTime = 16;
     00F8 2110                      1- 3706     	MOVIA	0x10
                                    1- 3707     	BANKSEL	_shanshuoTime
     00F9 rrrr                      3-  110 m1      .banksel ram_address
     00FA 00rr                      1- 3708     	MOVAR	_shanshuoTime
     00FB                           1- 3709     _00302_DS_:
                                    1- 3710     	.line	338, "main.c"; 	ledStep = workStep;
                                    1- 3711     	BANKSEL	_workStep
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 01rr                      1- 3712     	MOVR	_workStep,W
                                    1- 3713     	BANKSEL	_ledStep
     00FD rrrr                      3-  110 m1      .banksel ram_address
     00FE 00rr                      1- 3714     	MOVAR	_ledStep
     00FF                           1- 3715     _00308_DS_:
                                    1- 3716     	.line	340, "main.c"; 	}
                                    1- 3717     	RETURN	
     00FF 0010                      3-   40 m1      ret
                                    1- 3718     ; exit point of _keyCtr
                                    1- 3721     ;	code size estimation:
                                    1- 3722     ;	 1387+  383 =  1770 instructions ( 4306 byte)
                                    1- 3724     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810624
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062e.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
