
                    Nyquest Technology Co., Ltd.

NYASM 2.27

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_fgCtr
                                    1-   18     	extern	_LedCtr2
                                    1-   19     	extern	_checkInAD
                                    1-   20     	extern	_PORTAbits
                                    1-   21     	extern	_PORTBbits
                                    1-   22     	extern	_PCONbits
                                    1-   23     	extern	_BWUCONbits
                                    1-   24     	extern	_ABPLCONbits
                                    1-   25     	extern	_BPHCONbits
                                    1-   26     	extern	_INTEbits
                                    1-   27     	extern	_INTFbits
                                    1-   28     	extern	_ADMDbits
                                    1-   29     	extern	_ADRbits
                                    1-   30     	extern	_ADVREFHbits
                                    1-   31     	extern	_ADCRbits
                                    1-   32     	extern	_AWUCONbits
                                    1-   33     	extern	_PACONbits
                                    1-   34     	extern	_INTEDGbits
                                    1-   35     	extern	_ANAENbits
                                    1-   36     	extern	_RFCbits
                                    1-   37     	extern	_INTE2bits
                                    1-   38     	extern	_INDF
                                    1-   39     	extern	_TMR0
                                    1-   40     	extern	_PCL
                                    1-   41     	extern	_STATUS
                                    1-   42     	extern	_FSR
                                    1-   43     	extern	_PORTA
                                    1-   44     	extern	_PORTB
                                    1-   45     	extern	_PCON
                                    1-   46     	extern	_BWUCON
                                    1-   47     	extern	_PCHBUF
                                    1-   48     	extern	_ABPLCON
                                    1-   49     	extern	_BPHCON
                                    1-   50     	extern	_INTE
                                    1-   51     	extern	_INTF
                                    1-   52     	extern	_ADMD
                                    1-   53     	extern	_ADR
                                    1-   54     	extern	_ADD
                                    1-   55     	extern	_ADVREFH
                                    1-   56     	extern	_ADCR
                                    1-   57     	extern	_AWUCON
                                    1-   58     	extern	_PACON
                                    1-   59     	extern	_INTEDG
                                    1-   60     	extern	_TMRH
                                    1-   61     	extern	_ANAEN
                                    1-   62     	extern	_RFC
                                    1-   63     	extern	_TM3RH
                                    1-   64     	extern	_INTE2
                                    1-   65     	extern	_TMR1
                                    1-   66     	extern	_T1CR1
                                    1-   67     	extern	_T1CR2
                                    1-   68     	extern	_PWM1DUTY
                                    1-   69     	extern	_PS1CV
                                    1-   70     	extern	_BZ1CR
                                    1-   71     	extern	_IRCR
                                    1-   72     	extern	_TBHP
                                    1-   73     	extern	_TBHD
                                    1-   74     	extern	_TMR2
                                    1-   75     	extern	_T2CR1
                                    1-   76     	extern	_T2CR2
                                    1-   77     	extern	_PWM2DUTY
                                    1-   78     	extern	_PS2CV
                                    1-   79     	extern	_BZ2CR
                                    1-   80     	extern	_OSCCR
                                    1-   81     	extern	_TMR3
                                    1-   82     	extern	_T3CR1
                                    1-   83     	extern	_T3CR2
                                    1-   84     	extern	_PWM3DUTY
                                    1-   85     	extern	_PS3CV
                                    1-   86     	extern	_BZ3CR
                                    1-   87     	extern	_IOSTA
                                    1-   88     	extern	_IOSTB
                                    1-   89     	extern	_APHCON
                                    1-   90     	extern	_PS0CV
                                    1-   91     	extern	_BODCON
                                    1-   92     	extern	_CMPCR
                                    1-   93     	extern	_PCON1
                                    1-   94     	extern	_T0MD
                                    1-   95     	extern	___sdcc_saved_fsr
                                    1-   96     	extern	___sdcc_saved_stk00
                                    1-   97     	extern	___sdcc_saved_stk01
                                    1-   98     	extern	__nyc_ny8_startup
                                    1-   99     ;--------------------------------------------------------
                                    1-  100     ; global declarations
                                    1-  101     ;--------------------------------------------------------
                                    1-  102     	extern	_F_wait_eoc
                                    1-  103     	extern	_F_AIN2_Convert
                                    1-  104     	extern	_F_AIN3_Convert
                                    1-  105     	extern	_F_AIN4_Convert
                                    1-  106     	extern	_checkOutA
                                    1-  107     	extern	_checkBatAD
                                    1-  108     	extern	_initAD
                                    1-  109     	extern	_delay
                                    1-  110     	extern	_chrgCtr
                                    1-  111     	extern	_keyRead
                                    1-  112     	extern	_gotoSleep
                                    1-  113     	extern	_pwmStop
                                    1-  114     	extern	_pwmInit
                                    1-  115     	extern	_pwm1Stop
                                    1-  116     	extern	_pwm1Init
                                    1-  117     	extern	_LED8ON
                                    1-  118     	extern	_LED7ON
                                    1-  119     	extern	_LED6ON
                                    1-  120     	extern	_LED5ON
                                    1-  121     	extern	_LED4ON
                                    1-  122     	extern	_LED3ON
                                    1-  123     	extern	_LED2ON
                                    1-  124     	extern	_LED1ON
                                    1-  125     	extern	_LedInput
                                    1-  126     	extern	_ledShow
                                    1-  127     	extern	_initSys
                                    1-  128     	extern	_powerOff
                                    1-  129     	extern	_keyCtr
                                    1-  130     	extern	_isr
                                    1-  131     	extern	_main
                                    1-  132     	extern	_Status
                                    1-  133     	extern	_duty
                                    1-  134     	extern	_intCount
                                    1-  135     	extern	_count500ms
                                    1-  136     	extern	_keyCount
                                    1-  137     	extern	_workStep
                                    1-  138     	extern	_ledStep
                                    1-  139     	extern	_fgCount
                                    1-  140     	extern	_fgPRD
                                    1-  141     	extern	_preFG
                                    1-  142     	extern	_maxDuty
                                    1-  143     	extern	_pwStep
                                    1-  144     	extern	_R_AIN4_DATA
                                    1-  145     	extern	_R_AIN4_DATA_LB
                                    1-  146     	extern	_R_AIN3_DATA
                                    1-  147     	extern	_R_AIN3_DATA_LB
                                    1-  148     	extern	_R_AIN2_DATA
                                    1-  149     	extern	_R_AIN2_DATA_LB
                                    1-  150     	extern	_chrgTime
                                    1-  151     	extern	_startStep
                                    1-  152     	extern	_sleepTime
                                    1-  153     	extern	_count200ms
                                    1-  154     	extern	_count1s
                                    1-  155     	extern	_count900s
                                    1-  156     	extern	_lowBatTime
                                    1-  157     	extern	_ledTime
                                    1-  158     	extern	_overCount
                                    1-  159     	extern	_chrgCount
                                    1-  160     	extern	_ledLightTime
                                    1-  161     	extern	_currentDuty
                                    1-  162     	extern	_fullCount
                                    1-  163     	extern	_shanshuoTime
                                    1-  164     	extern	_firstTime
                                    1-  165     	extern	_tempDuty
                                    1-  166     	extern	_lowCount
                                    1-  167     	extern	_longPressFlag
                                    1-  168     	extern	_IntFlag
                                    1-  169     	extern	_chrgFlag
                                    1-  170     	extern	_redLedFlag
                                    1-  171     	extern	_debug
                                    1-  173     	extern PSAVE
                                    1-  174     	extern SSAVE
                                    1-  175     	extern WSAVE
                                    1-  176     	extern STK02
                                    1-  177     	extern STK01
                                    1-  178     	extern STK00
                                    1-  180     .segment "uninit", 0x20000040
 20000040                           1-  181     PSAVE:
                                    1-  182     	.res 1
 20000041                           1-  183     SSAVE:
                                    1-  184     	.res 1
 20000042                           1-  185     WSAVE:
                                    1-  186     	.res 1
 20000043                           1-  187     STK02:
                                    1-  188     	.res 1
 20000044                           1-  189     STK01:
                                    1-  190     	.res 1
 20000045                           1-  191     STK00:
                                    1-  192     	.res 1
                                    1-  194     ;--------------------------------------------------------
                                    1-  195     ; global definitions
                                    1-  196     ;--------------------------------------------------------
                                    1-  197     .segment "uninit"
     0000                           1-  198     _R_AIN4_DATA:
                                    1-  199     	.res	2
                                    1-  202     .segment "uninit"
     0000                           1-  203     _R_AIN4_DATA_LB:
                                    1-  204     	.res	1
                                    1-  207     .segment "uninit"
     0000                           1-  208     _R_AIN3_DATA:
                                    1-  209     	.res	2
                                    1-  212     .segment "uninit"
     0000                           1-  213     _R_AIN3_DATA_LB:
                                    1-  214     	.res	1
                                    1-  217     .segment "uninit"
     0000                           1-  218     _R_AIN2_DATA:
                                    1-  219     	.res	2
                                    1-  222     .segment "uninit"
     0000                           1-  223     _R_AIN2_DATA_LB:
                                    1-  224     	.res	1
                                    1-  227     ;--------------------------------------------------------
                                    1-  228     ; absolute symbol definitions
                                    1-  229     ;--------------------------------------------------------
                                    1-  230     ;--------------------------------------------------------
                                    1-  231     ; compiler-defined variables
                                    1-  232     ;--------------------------------------------------------
                                    1-  233     .segment "uninit"
     0000                           1-  234     r0x1053:
                                    1-  235     	.res	1
                                    1-  236     .segment "uninit"
     0000                           1-  237     r0x1048:
                                    1-  238     	.res	1
                                    1-  239     .segment "uninit"
     0000                           1-  240     r0x1052:
                                    1-  241     	.res	1
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x1051:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x1050:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x104F:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x104E:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x104D:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x104C:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x104B:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x104A:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x1049:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1047:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1046:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x102A:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x102B:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x1044:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x1045:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x103E:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x1041:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x1038:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x1039:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x103A:
                                    1-  301     	.res	1
                                    1-  302     .segment "uninit"
     0000                           1-  303     r0x103D:
                                    1-  304     	.res	1
                                    1-  305     .segment "uninit"
     0000                           1-  306     r0x1032:
                                    1-  307     	.res	1
                                    1-  308     .segment "uninit"
     0000                           1-  309     r0x1033:
                                    1-  310     	.res	1
                                    1-  311     .segment "uninit"
     0000                           1-  312     r0x1034:
                                    1-  313     	.res	1
                                    1-  314     .segment "uninit"
     0000                           1-  315     r0x1037:
                                    1-  316     	.res	1
                                    1-  317     .segment "uninit"
     0000                           1-  318     r0x102C:
                                    1-  319     	.res	1
                                    1-  320     .segment "uninit"
     0000                           1-  321     r0x102D:
                                    1-  322     	.res	1
                                    1-  323     .segment "uninit"
     0000                           1-  324     r0x102E:
                                    1-  325     	.res	1
                                    1-  326     .segment "uninit"
     0000                           1-  327     r0x1031:
                                    1-  328     	.res	1
                                    1-  329     ;--------------------------------------------------------
                                    1-  330     ; initialized data
                                    1-  331     ;--------------------------------------------------------
                                    1-  333     .segment "idata"
     0000                           1-  334     _Status:
     0000 0000                      1-  335     	dw	0x00
                                    1-  339     .segment "idata"
     0000                           1-  340     _duty:
     0000 0000 0000                 1-  341     	dw	0x00, 0x00
                                    1-  345     .segment "idata"
     0000                           1-  346     _intCount:
     0000 0000                      1-  347     	dw	0x00
                                    1-  351     .segment "idata"
     0000                           1-  352     _count500ms:
     0000 0000                      1-  353     	dw	0x00
                                    1-  357     .segment "idata"
     0000                           1-  358     _keyCount:
     0000 0000                      1-  359     	dw	0x00
                                    1-  363     .segment "idata"
     0000                           1-  364     _workStep:
     0000 0000                      1-  365     	dw	0x00
                                    1-  369     .segment "idata"
     0000                           1-  370     _ledStep:
     0000 0000                      1-  371     	dw	0x00
                                    1-  375     .segment "idata"
     0000                           1-  376     _fgCount:
     0000 0000 0000                 1-  377     	dw	0x00, 0x00
                                    1-  381     .segment "idata"
     0000                           1-  382     _fgPRD:
     0000 0000 0000                 1-  383     	dw	0x00, 0x00
                                    1-  387     .segment "idata"
     0000                           1-  388     _preFG:
     0000 0000                      1-  389     	dw	0x00
                                    1-  393     .segment "idata"
     0000                           1-  394     _maxDuty:
     0000 0000                      1-  395     	dw	0x00
                                    1-  399     .segment "idata"
     0000                           1-  400     _pwStep:
     0000 0000                      1-  401     	dw	0x00
                                    1-  405     .segment "idata"
     0000                           1-  406     _chrgTime:
     0000 0000 0000                 1-  407     	dw	0x00, 0x00
                                    1-  411     .segment "idata"
     0000                           1-  412     _startStep:
     0000 0000                      1-  413     	dw	0x00
                                    1-  417     .segment "idata"
     0000                           1-  418     _sleepTime:
     0000 0000 0000                 1-  419     	dw	0x00, 0x00
                                    1-  423     .segment "idata"
     0000                           1-  424     _count200ms:
     0000 0000                      1-  425     	dw	0x00
                                    1-  429     .segment "idata"
     0000                           1-  430     _count1s:
     0000 0000                      1-  431     	dw	0x00
                                    1-  435     .segment "idata"
     0000                           1-  436     _count900s:
     0000 0000 0000                 1-  437     	dw	0x00, 0x00
                                    1-  441     .segment "idata"
     0000                           1-  442     _lowBatTime:
     0000 0000                      1-  443     	dw	0x00
                                    1-  447     .segment "idata"
     0000                           1-  448     _ledTime:
     0000 0000                      1-  449     	dw	0x00
                                    1-  453     .segment "idata"
     0000                           1-  454     _overCount:
     0000 0000                      1-  455     	dw	0x00
                                    1-  459     .segment "idata"
     0000                           1-  460     _chrgCount:
     0000 0000                      1-  461     	dw	0x00
                                    1-  465     .segment "idata"
     0000                           1-  466     _ledLightTime:
     0000 0000                      1-  467     	dw	0x00
                                    1-  471     .segment "idata"
     0000                           1-  472     _currentDuty:
     0000 0000                      1-  473     	dw	0x00
                                    1-  477     .segment "idata"
     0000                           1-  478     _fullCount:
     0000 0000                      1-  479     	dw	0x00
                                    1-  483     .segment "idata"
     0000                           1-  484     _shanshuoTime:
     0000 0000                      1-  485     	dw	0x00
                                    1-  489     .segment "idata"
     0000                           1-  490     _firstTime:
     0000 0000                      1-  491     	dw	0x00
                                    1-  495     .segment "idata"
     0000                           1-  496     _tempDuty:
     0000 0000                      1-  497     	dw	0x00
                                    1-  501     .segment "idata"
     0000                           1-  502     _lowCount:
     0000 0000                      1-  503     	dw	0x00
                                    1-  507     .segment "idata"
     0000                           1-  508     _longPressFlag:
     0000 0000                      1-  509     	dw	0x00
                                    1-  513     .segment "idata"
     0000                           1-  514     _IntFlag:
     0000 0000                      1-  515     	dw	0x00
                                    1-  519     .segment "idata"
     0000                           1-  520     _chrgFlag:
     0000 0000                      1-  521     	dw	0x00
                                    1-  525     .segment "idata"
     0000                           1-  526     _redLedFlag:
     0000 0000                      1-  527     	dw	0x00
                                    1-  531     .segment "idata"
     0000                           1-  532     _debug:
     0000 0000                      1-  533     	dw	0x00
                                    1-  536     ;--------------------------------------------------------
                                    1-  537     ; overlayable items in internal ram 
                                    1-  538     ;--------------------------------------------------------
                                    1-  539     ;	udata_ovr
                                    1-  540     ;--------------------------------------------------------
                                    1-  541     ; reset vector 
                                    1-  542     ;--------------------------------------------------------
                                    1-  543     ORG	0x0000
     0000 3rrr                      1-  544     	LGOTO	__nyc_ny8_startup
                                    1-  545     ;--------------------------------------------------------
                                    1-  546     ; interrupt and initialization code
                                    1-  547     ;--------------------------------------------------------
                                    1-  548     ORG 0x0008
     0008 3rrr                      1-  549     	lgoto	__sdcc_interrupt
                                    1-  551     .segment "code"
     0000                           1-  552     __sdcc_interrupt:
                                    1-  553     ;***
                                    1-  554     ;  pBlock Stats: dbName = I
                                    1-  555     ;***
                                    1-  556     ;2 compiler assigned registers:
                                    1-  557     ;   STK00
                                    1-  558     ;   STK01
                                    1-  559     ;; Starting pCode block
     0000                           1-  560     _isr:
                                    1-  561     ; 0 exit points
                                    1-  562     	.line	114, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  563     	MOVAR	WSAVE
     0001 1503                      1-  564     	SWAPR	STATUS,W
     0002 0283                      1-  565     	CLRR	STATUS
     0003 00rr                      1-  566     	MOVAR	SSAVE
     0004 010A                      1-  567     	MOVR	PCHBUF,W
     0005 028A                      1-  568     	CLRR	PCHBUF
     0006 00rr                      1-  569     	MOVAR	PSAVE
     0007 0104                      1-  570     	MOVR	FSR,W
                                    1-  571     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  572     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  573     	MOVR	STK00,W
                                    1-  574     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  575     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  576     	MOVR	STK01,W
                                    1-  577     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  578     	MOVAR	___sdcc_saved_stk01
                                    1-  579     	.line	116, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  580     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  581     	LGOTO	_00126_DS_
                                    1-  582     	.line	118, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  583     	MOVIA	0x37
     0013 03rr                      1-  584     	ADDAR	_TMR0,F
                                    1-  585     	.line	120, "main.c"; 	if(++intCount >= 100)
                                    1-  586     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  587     	INCR	_intCount,F
                                    1-  588     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  589     	MOVIA	0x64
     0017 04rr                      1-  590     	SUBAR	_intCount,W
     0018 0803                      1-  591     	BTRSS	STATUS,0
     0019 3rrr                      1-  592     	LGOTO	_00126_DS_
                                    1-  593     	.line	122, "main.c"; 	IntFlag = 1;
     001A 2101                      1-  594     	MOVIA	0x01
                                    1-  595     	BANKSEL	_IntFlag
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1-  596     	MOVAR	_IntFlag
                                    1-  597     	.line	123, "main.c"; 	intCount = 0;
                                    1-  598     	BANKSEL	_intCount
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 02rr                      1-  599     	CLRR	_intCount
                                    1-  600     	.line	124, "main.c"; 	if(workStep)
                                    1-  601     	BANKSEL	_workStep
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 01rr                      1-  602     	MOVR	_workStep,W
     0021 0D03                      1-  603     	BTRSC	STATUS,2
     0022 3rrr                      1-  604     	LGOTO	_00106_DS_
                                    1-  605     	.line	125, "main.c"; 	++fgCount;
                                    1-  606     	BANKSEL	_fgCount
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 05rr                      1-  607     	INCR	_fgCount,F
     0025 0D03                      1-  608     	BTRSC	STATUS,2
     0026 05rr                      1-  609     	INCR	(_fgCount + 1),F
     0027                           1-  610     _00106_DS_:
                                    1-  611     	.line	126, "main.c"; 	if(++count500ms >= 60)
                                    1-  612     	BANKSEL	_count500ms
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 05rr                      1-  613     	INCR	_count500ms,F
                                    1-  614     ;;unsigned compare: left < lit (0x3C=60), size=1
     0029 213C                      1-  615     	MOVIA	0x3c
     002A 04rr                      1-  616     	SUBAR	_count500ms,W
     002B 0C03                      1-  617     	BTRSC	STATUS,0
                                    1-  618     	.line	127, "main.c"; 	count500ms = 0;
     002C 02rr                      1-  619     	CLRR	_count500ms
                                    1-  620     	.line	128, "main.c"; 	if(++count200ms >= 20)
                                    1-  621     	BANKSEL	_count200ms
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 05rr                      1-  622     	INCR	_count200ms,F
     002F 2114                      1-  623     	MOVIA	0x14
     0030 04rr                      1-  624     	SUBAR	_count200ms,W
     0031 0C03                      1-  625     	BTRSC	STATUS,0
                                    1-  626     	.line	129, "main.c"; 	count200ms = 0;
     0032 02rr                      1-  627     	CLRR	_count200ms
                                    1-  628     	.line	130, "main.c"; 	if(++count1s >= 100)
                                    1-  629     	BANKSEL	_count1s
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 05rr                      1-  630     	INCR	_count1s,F
     0035 2164                      1-  631     	MOVIA	0x64
     0036 04rr                      1-  632     	SUBAR	_count1s,W
     0037 0803                      1-  633     	BTRSS	STATUS,0
     0038 3rrr                      1-  634     	LGOTO	_00126_DS_
                                    1-  635     	.line	132, "main.c"; 	count1s = 0;
     0039 02rr                      1-  636     	CLRR	_count1s
                                    1-  637     	.line	133, "main.c"; 	if(chrgFlag == 1 && pwStep == 8)
                                    1-  638     	BANKSEL	_chrgFlag
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 01rr                      1-  639     	MOVR	_chrgFlag,W
     003C 2401                      1-  640     	XORIA	0x01
     003D 0903                      1-  641     	BTRSS	STATUS,2
     003E 3rrr                      1-  642     	LGOTO	_00112_DS_
                                    1-  643     	BANKSEL	_pwStep
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 01rr                      1-  644     	MOVR	_pwStep,W
     0041 2408                      1-  645     	XORIA	0x08
     0042 0903                      1-  646     	BTRSS	STATUS,2
     0043 3rrr                      1-  647     	LGOTO	_00112_DS_
                                    1-  648     	.line	135, "main.c"; 	++chrgTime;
                                    1-  649     	BANKSEL	_chrgTime
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 05rr                      1-  650     	INCR	_chrgTime,F
     0046 0D03                      1-  651     	BTRSC	STATUS,2
     0047 05rr                      1-  652     	INCR	(_chrgTime + 1),F
     0048                           1-  653     _00112_DS_:
                                    1-  654     	.line	137, "main.c"; 	if(ledLightTime > 0)
                                    1-  655     	BANKSEL	_ledLightTime
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 01rr                      1-  656     	MOVR	_ledLightTime,W
     004A 0903                      1-  657     	BTRSS	STATUS,2
                                    1-  658     	.line	138, "main.c"; 	--ledLightTime;
     004B 06rr                      1-  659     	DECR	_ledLightTime,F
                                    1-  660     	.line	139, "main.c"; 	if(shanshuoTime > 0)
                                    1-  661     	BANKSEL	_shanshuoTime
     004C rrrr                      3-   71 m1      .banksel ram_address
     004D 01rr                      1-  662     	MOVR	_shanshuoTime,W
     004E 0903                      1-  663     	BTRSS	STATUS,2
                                    1-  664     	.line	140, "main.c"; 	--shanshuoTime;
     004F 06rr                      1-  665     	DECR	_shanshuoTime,F
                                    1-  666     	.line	141, "main.c"; 	if(workStep)
                                    1-  667     	BANKSEL	_workStep
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 01rr                      1-  668     	MOVR	_workStep,W
     0052 0D03                      1-  669     	BTRSC	STATUS,2
     0053 3rrr                      1-  670     	LGOTO	_00119_DS_
                                    1-  671     	.line	143, "main.c"; 	++count900s;
                                    1-  672     	BANKSEL	_count900s
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 05rr                      1-  673     	INCR	_count900s,F
     0056 0D03                      1-  674     	BTRSC	STATUS,2
     0057 05rr                      1-  675     	INCR	(_count900s + 1),F
     0058 3rrr                      1-  676     	LGOTO	_00126_DS_
     0059                           1-  677     _00119_DS_:
                                    1-  678     	.line	147, "main.c"; 	count900s = 0;
                                    1-  679     	BANKSEL	_count900s
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 02rr                      1-  680     	CLRR	_count900s
     005B 02rr                      1-  681     	CLRR	(_count900s + 1)
     005C                           1-  682     _00126_DS_:
                                    1-  683     	.line	156, "main.c"; 	if(INTFbits.PABIF)
     005C 08rr                      1-  684     	BTRSS	_INTFbits,1
     005D 3rrr                      1-  685     	LGOTO	_00128_DS_
                                    1-  686     	.line	158, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     005E 21FD                      1-  687     	MOVIA	0xfd
     005F 00rr                      1-  688     	MOVAR	_INTF
     0060                           1-  689     _00128_DS_:
                                    1-  690     	.line	161, "main.c"; 	INTF = 0;
     0060 02rr                      1-  691     	CLRR	_INTF
                                    1-  692     	.line	163, "main.c"; 	}
                                    1-  693     	BANKSEL	___sdcc_saved_stk01
     0061 rrrr                      3-   71 m1      .banksel ram_address
     0062 01rr                      1-  694     	MOVR	___sdcc_saved_stk01,W
     0063 00rr                      1-  695     	MOVAR	STK01
                                    1-  696     	BANKSEL	___sdcc_saved_stk00
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 01rr                      1-  697     	MOVR	___sdcc_saved_stk00,W
     0066 00rr                      1-  698     	MOVAR	STK00
                                    1-  699     	BANKSEL	___sdcc_saved_fsr
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 01rr                      1-  700     	MOVR	___sdcc_saved_fsr,W
     0069 0084                      1-  701     	MOVAR	FSR
     006A 01rr                      1-  702     	MOVR	PSAVE,W
     006B 008A                      1-  703     	MOVAR	PCHBUF
     006C 0283                      1-  704     	CLRR	STATUS
     006D 15rr                      1-  705     	SWAPR	SSAVE,W
     006E 0083                      1-  706     	MOVAR	STATUS
     006F 15rr                      1-  707     	SWAPR	WSAVE,F
     0070 15rr                      1-  708     	SWAPR	WSAVE,W
     0071                           1-  709     END_OF_INTERRUPT:
     0071 0011                      1-  710     	RETIE	
                                    1-  712     ;--------------------------------------------------------
                                    1-  713     ; code
                                    1-  714     ;--------------------------------------------------------
                                    1-  715     ;***
                                    1-  716     ;  pBlock Stats: dbName = M
                                    1-  717     ;***
                                    1-  718     ;has an exit
                                    1-  719     ;functions called:
                                    1-  720     ;   _initSys
                                    1-  721     ;   _initAD
                                    1-  722     ;   _ledShow
                                    1-  723     ;   _keyCtr
                                    1-  724     ;   _checkBatAD
                                    1-  725     ;   _checkOutA
                                    1-  726     ;   _chrgCtr
                                    1-  727     ;   _gotoSleep
                                    1-  728     ;   _powerOff
                                    1-  729     ;   _initSys
                                    1-  730     ;   _initAD
                                    1-  731     ;   _ledShow
                                    1-  732     ;   _keyCtr
                                    1-  733     ;   _checkBatAD
                                    1-  734     ;   _checkOutA
                                    1-  735     ;   _chrgCtr
                                    1-  736     ;   _gotoSleep
                                    1-  737     ;   _powerOff
                                    1-  738     ;; Starting pCode block
                                    1-  739     .segment "code"; module=main, function=_main
     0000                           1-  741     _main:
                                    1-  742     ; 2 exit points
                                    1-  743     	.line	167, "main.c"; 	initSys();
     0000 2rrr                      1-  744     	LCALL	_initSys
                                    1-  745     	.line	168, "main.c"; 	initAD();
     0001 2rrr                      1-  746     	LCALL	_initAD
     0002                           1-  747     _00156_DS_:
                                    1-  748     	.line	171, "main.c"; 	CLRWDT();
     0002 0002                      1-  749     	clrwdt
                                    1-  750     	.line	172, "main.c"; 	ledShow();
     0003 2rrr                      1-  751     	LCALL	_ledShow
                                    1-  752     	.line	173, "main.c"; 	if(!IntFlag)
                                    1-  753     	BANKSEL	_IntFlag
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1-  754     	MOVR	_IntFlag,W
     0006 0D03                      1-  755     	BTRSC	STATUS,2
     0007 3rrr                      1-  756     	LGOTO	_00156_DS_
                                    1-  757     	.line	175, "main.c"; 	IntFlag = 0;
     0008 02rr                      1-  758     	CLRR	_IntFlag
                                    1-  759     	.line	176, "main.c"; 	if(chrgFlag == 0)
                                    1-  760     	BANKSEL	_chrgFlag
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1-  761     	MOVR	_chrgFlag,W
     000B 0D03                      1-  762     	BTRSC	STATUS,2
                                    1-  763     	.line	177, "main.c"; 	keyCtr();
     000C 2rrr                      1-  764     	LCALL	_keyCtr
                                    1-  765     	.line	178, "main.c"; 	if(count200ms < 5)
     000D 2105                      1-  766     	MOVIA	0x05
                                    1-  767     	BANKSEL	_count200ms
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 04rr                      1-  768     	SUBAR	_count200ms,W
     0010 0C03                      1-  769     	BTRSC	STATUS,0
     0011 3rrr                      1-  770     	LGOTO	_00141_DS_
                                    1-  771     	.line	180, "main.c"; 	checkBatAD();
     0012 2rrr                      1-  772     	LCALL	_checkBatAD
     0013 3rrr                      1-  773     	LGOTO	_00142_DS_
                                    1-  774     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  775     ;;unsigned compare: left >= lit (0x9=9), size=1
     0014                           1-  776     _00141_DS_:
                                    1-  777     	.line	182, "main.c"; 	else if(count200ms > 8 && count200ms < 11)
     0014 2109                      1-  778     	MOVIA	0x09
                                    1-  779     	BANKSEL	_count200ms
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 04rr                      1-  780     	SUBAR	_count200ms,W
     0017 0803                      1-  781     	BTRSS	STATUS,0
     0018 3rrr                      1-  782     	LGOTO	_00142_DS_
                                    1-  783     ;;unsigned compare: left < lit (0xB=11), size=1
     0019 210B                      1-  784     	MOVIA	0x0b
     001A 04rr                      1-  785     	SUBAR	_count200ms,W
     001B 0803                      1-  786     	BTRSS	STATUS,0
                                    1-  787     	.line	184, "main.c"; 	checkOutA();
     001C 2rrr                      1-  788     	LCALL	_checkOutA
     001D                           1-  789     _00142_DS_:
                                    1-  790     	.line	186, "main.c"; 	chrgCtr();
     001D 2rrr                      1-  791     	LCALL	_chrgCtr
                                    1-  792     	.line	188, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  793     	BANKSEL	_workStep
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1-  794     	MOVR	_workStep,W
     0020 0D03                      1-  795     	BTRSC	STATUS,2
     0021 3rrr                      1-  796     	LGOTO	_00144_DS_
                                    1-  797     	BANKSEL	_currentDuty
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1-  798     	MOVR	_currentDuty,W
                                    1-  799     	BANKSEL	_maxDuty
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 04rr                      1-  800     	SUBAR	_maxDuty,W
     0026 0C03                      1-  801     	BTRSC	STATUS,0
     0027 3rrr                      1-  802     	LGOTO	_00144_DS_
                                    1-  803     	.line	190, "main.c"; 	currentDuty = currentDuty - 10;
     0028 21F6                      1-  804     	MOVIA	0xf6
                                    1-  805     	BANKSEL	_currentDuty
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 03rr                      1-  806     	ADDAR	_currentDuty,F
                                    1-  807     	.line	191, "main.c"; 	PWM2DUTY = currentDuty;
     002B 01rr                      1-  808     	MOVR	_currentDuty,W
     002C 00rr                      1-  809     	SFUN	_PWM2DUTY
     002D                           1-  810     _00144_DS_:
                                    1-  811     	.line	193, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x20) == 0 && ledLightTime == 0)
                                    1-  812     	BANKSEL	_workStep
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 01rr                      1-  813     	MOVR	_workStep,W
     002F 0903                      1-  814     	BTRSS	STATUS,2
     0030 3rrr                      1-  815     	LGOTO	_00149_DS_
                                    1-  816     	BANKSEL	_keyCount
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 01rr                      1-  817     	MOVR	_keyCount,W
     0033 0903                      1-  818     	BTRSS	STATUS,2
     0034 3rrr                      1-  819     	LGOTO	_00149_DS_
                                    1-  820     	BANKSEL	_PORTA
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 0Err                      1-  821     	BTRSC	_PORTA,5
     0037 3rrr                      1-  822     	LGOTO	_00149_DS_
                                    1-  823     	BANKSEL	_ledLightTime
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 01rr                      1-  824     	MOVR	_ledLightTime,W
     003A 0903                      1-  825     	BTRSS	STATUS,2
     003B 3rrr                      1-  826     	LGOTO	_00149_DS_
                                    1-  827     	.line	195, "main.c"; 	if(++sleepTime > 300)
                                    1-  828     	BANKSEL	_sleepTime
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 05rr                      1-  829     	INCR	_sleepTime,F
     003E 0D03                      1-  830     	BTRSC	STATUS,2
     003F 05rr                      1-  831     	INCR	(_sleepTime + 1),F
                                    1-  832     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  833     ;;unsigned compare: left >= lit (0x12D=301), size=2
     0040 2101                      1-  834     	MOVIA	0x01
     0041 04rr                      1-  835     	SUBAR	(_sleepTime + 1),W
     0042 0903                      1-  836     	BTRSS	STATUS,2
     0043 3rrr                      1-  837     	LGOTO	_00206_DS_
     0044 212D                      1-  838     	MOVIA	0x2d
     0045 04rr                      1-  839     	SUBAR	_sleepTime,W
     0046                           1-  840     _00206_DS_:
     0046 0803                      1-  841     	BTRSS	STATUS,0
     0047 3rrr                      1-  842     	LGOTO	_00149_DS_
                                    1-  843     	.line	197, "main.c"; 	gotoSleep();
     0048 2rrr                      1-  844     	LCALL	_gotoSleep
                                    1-  845     ;;unsigned compare: left < lit (0x384=900), size=2
     0049                           1-  846     _00149_DS_:
                                    1-  847     	.line	201, "main.c"; 	if(count900s >= 900)
     0049 2103                      1-  848     	MOVIA	0x03
                                    1-  849     	BANKSEL	_count900s
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 04rr                      1-  850     	SUBAR	(_count900s + 1),W
     004C 0903                      1-  851     	BTRSS	STATUS,2
     004D 3rrr                      1-  852     	LGOTO	_00207_DS_
     004E 2184                      1-  853     	MOVIA	0x84
     004F 04rr                      1-  854     	SUBAR	_count900s,W
     0050                           1-  855     _00207_DS_:
     0050 0803                      1-  856     	BTRSS	STATUS,0
     0051 3rrr                      1-  857     	LGOTO	_00156_DS_
                                    1-  858     	.line	203, "main.c"; 	powerOff();
     0052 2rrr                      1-  859     	LCALL	_powerOff
     0053 3rrr                      1-  860     	LGOTO	_00156_DS_
                                    1-  861     	.line	207, "main.c"; 	}
                                    1-  862     	RETURN	
     0054 0010                      3-   26 m1      ret
                                    1-  863     ; exit point of _main
                                    1-  865     ;***
                                    1-  866     ;  pBlock Stats: dbName = C
                                    1-  867     ;***
                                    1-  868     ;has an exit
                                    1-  869     ;; Starting pCode block
                                    1-  870     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  872     _F_wait_eoc:
                                    1-  873     ; 2 exit points
     0000                           1-  874     _00935_DS_:
                                    1-  875     	.line	993, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  876     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  877     	LGOTO	_00935_DS_
                                    1-  878     	.line	995, "main.c"; 	}
                                    1-  879     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  880     ; exit point of _F_wait_eoc
                                    1-  882     ;***
                                    1-  883     ;  pBlock Stats: dbName = C
                                    1-  884     ;***
                                    1-  885     ;has an exit
                                    1-  886     ;functions called:
                                    1-  887     ;   _delay
                                    1-  888     ;   _F_wait_eoc
                                    1-  889     ;   _delay
                                    1-  890     ;   _F_wait_eoc
                                    1-  891     ;6 compiler assigned registers:
                                    1-  892     ;   r0x102C
                                    1-  893     ;   r0x102D
                                    1-  894     ;   r0x102E
                                    1-  895     ;   r0x102F
                                    1-  896     ;   r0x1030
                                    1-  897     ;   r0x1031
                                    1-  898     ;; Starting pCode block
                                    1-  899     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1-  901     ;local variable name mapping:
     0000                           1-  904     _F_AIN2_Convert:
                                    1-  905     ; 2 exit points
                                    1-  906     	.line	976, "main.c"; 	void F_AIN2_Convert(char count)
                                    1-  907     	BANKSEL	r0x102C
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  908     	MOVAR	r0x102C
                                    1-  909     	.line	978, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1-  910     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  911     	CLRR	_R_AIN2_DATA_LB
                                    1-  912     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1-  913     	CLRR	_R_AIN2_DATA
     0006 02rr                      1-  914     	CLRR	(_R_AIN2_DATA + 1)
                                    1-  915     	.line	980, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1-  916     	MOVIA	0x92
     0008 00rr                      1-  917     	MOVAR	_ADMD
                                    1-  918     	.line	981, "main.c"; 	delay(200);	
     0009 21C8                      1-  919     	MOVIA	0xc8
     000A 2rrr                      1-  920     	LCALL	_delay
                                    1-  921     	.line	982, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1-  922     	MOVIA	0x01
                                    1-  923     	BANKSEL	r0x102D
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1-  924     	MOVAR	r0x102D
     000E                           1-  925     _00928_DS_:
                                    1-  926     	BANKSEL	r0x102D
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1-  927     	MOVR	r0x102D,W
                                    1-  928     	BANKSEL	r0x102C
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1-  929     	SUBAR	r0x102C,W
     0012 0803                      1-  930     	BTRSS	STATUS,0
     0013 3rrr                      1-  931     	LGOTO	_00930_DS_
                                    1-  932     	.line	984, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1-  933     	BSR	_ADMDbits,6
                                    1-  934     	.line	985, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0015 2rrr                      1-  935     	LCALL	_F_wait_eoc
                                    1-  936     	.line	986, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1-  937     	MOVIA	0x0f
     0017 10rr                      1-  938     	ANDAR	_ADR,W
                                    1-  939     ;;3	MOVAR	r0x102E
                                    1-  940     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 03rr                      1-  941     	ADDAR	_R_AIN2_DATA_LB,F
                                    1-  942     	.line	987, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1-  943     	MOVR	_ADD,W
                                    1-  944     	BANKSEL	r0x102E
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1-  945     	MOVAR	r0x102E
                                    1-  946     ;;1	CLRR	r0x102F
                                    1-  947     ;;111	MOVR	r0x102E,W
                                    1-  948     ;;109	MOVAR	r0x1030
     001D 2100                      1-  949     	MOVIA	0x00
                                    1-  950     	BANKSEL	r0x1031
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1-  951     	MOVAR	r0x1031
                                    1-  952     ;;110	MOVR	r0x1030,W
                                    1-  953     	BANKSEL	r0x102E
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1-  954     	MOVR	r0x102E,W
                                    1-  955     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1-  956     	ADDAR	_R_AIN2_DATA,F
                                    1-  957     	BANKSEL	r0x1031
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  958     	MOVR	r0x1031,W
     0026 0C03                      1-  959     	BTRSC	STATUS,0
     0027 05rr                      1-  960     	INCR	r0x1031,W
     0028 0D03                      1-  961     	BTRSC	STATUS,2
     0029 3rrr                      1-  962     	LGOTO	_00001_DS_
                                    1-  963     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 03rr                      1-  964     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1-  965     _00001_DS_:
                                    1-  966     	.line	982, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  967     	BANKSEL	r0x102D
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1-  968     	INCR	r0x102D,F
     002E 3rrr                      1-  969     	LGOTO	_00928_DS_
     002F                           1-  970     _00930_DS_:
                                    1-  971     	.line	989, "main.c"; 	}
                                    1-  972     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1-  973     ; exit point of _F_AIN2_Convert
                                    1-  975     ;***
                                    1-  976     ;  pBlock Stats: dbName = C
                                    1-  977     ;***
                                    1-  978     ;has an exit
                                    1-  979     ;functions called:
                                    1-  980     ;   _delay
                                    1-  981     ;   _F_wait_eoc
                                    1-  982     ;   _delay
                                    1-  983     ;   _F_wait_eoc
                                    1-  984     ;6 compiler assigned registers:
                                    1-  985     ;   r0x1032
                                    1-  986     ;   r0x1033
                                    1-  987     ;   r0x1034
                                    1-  988     ;   r0x1035
                                    1-  989     ;   r0x1036
                                    1-  990     ;   r0x1037
                                    1-  991     ;; Starting pCode block
                                    1-  992     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1-  994     ;local variable name mapping:
     0000                           1-  997     _F_AIN3_Convert:
                                    1-  998     ; 2 exit points
                                    1-  999     	.line	961, "main.c"; 	void F_AIN3_Convert(char count)
                                    1- 1000     	BANKSEL	r0x1032
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1001     	MOVAR	r0x1032
                                    1- 1002     	.line	963, "main.c"; 	R_AIN3_DATA=R_AIN3_DATA_LB=0x00;   
                                    1- 1003     	BANKSEL	_R_AIN3_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1004     	CLRR	_R_AIN3_DATA_LB
                                    1- 1005     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1006     	CLRR	_R_AIN3_DATA
     0006 02rr                      1- 1007     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1008     	.line	965, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0007 2193                      1- 1009     	MOVIA	0x93
     0008 00rr                      1- 1010     	MOVAR	_ADMD
                                    1- 1011     	.line	966, "main.c"; 	delay(200);	
     0009 21C8                      1- 1012     	MOVIA	0xc8
     000A 2rrr                      1- 1013     	LCALL	_delay
                                    1- 1014     	.line	967, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1015     	MOVIA	0x01
                                    1- 1016     	BANKSEL	r0x1033
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1017     	MOVAR	r0x1033
     000E                           1- 1018     _00919_DS_:
                                    1- 1019     	BANKSEL	r0x1033
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 1020     	MOVR	r0x1033,W
                                    1- 1021     	BANKSEL	r0x1032
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1- 1022     	SUBAR	r0x1032,W
     0012 0803                      1- 1023     	BTRSS	STATUS,0
     0013 3rrr                      1- 1024     	LGOTO	_00921_DS_
                                    1- 1025     	.line	969, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1026     	BSR	_ADMDbits,6
                                    1- 1027     	.line	970, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0015 2rrr                      1- 1028     	LCALL	_F_wait_eoc
                                    1- 1029     	.line	971, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1030     	MOVIA	0x0f
     0017 10rr                      1- 1031     	ANDAR	_ADR,W
                                    1- 1032     ;;3	MOVAR	r0x1034
                                    1- 1033     	BANKSEL	_R_AIN3_DATA_LB
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 03rr                      1- 1034     	ADDAR	_R_AIN3_DATA_LB,F
                                    1- 1035     	.line	972, "main.c"; 	R_AIN3_DATA    += ADD; 
     001A 01rr                      1- 1036     	MOVR	_ADD,W
                                    1- 1037     	BANKSEL	r0x1034
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1038     	MOVAR	r0x1034
                                    1- 1039     ;;1	CLRR	r0x1035
                                    1- 1040     ;;108	MOVR	r0x1034,W
                                    1- 1041     ;;106	MOVAR	r0x1036
     001D 2100                      1- 1042     	MOVIA	0x00
                                    1- 1043     	BANKSEL	r0x1037
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1- 1044     	MOVAR	r0x1037
                                    1- 1045     ;;107	MOVR	r0x1036,W
                                    1- 1046     	BANKSEL	r0x1034
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 1047     	MOVR	r0x1034,W
                                    1- 1048     	BANKSEL	_R_AIN3_DATA
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1- 1049     	ADDAR	_R_AIN3_DATA,F
                                    1- 1050     	BANKSEL	r0x1037
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 1051     	MOVR	r0x1037,W
     0026 0C03                      1- 1052     	BTRSC	STATUS,0
     0027 05rr                      1- 1053     	INCR	r0x1037,W
     0028 0D03                      1- 1054     	BTRSC	STATUS,2
     0029 3rrr                      1- 1055     	LGOTO	_00002_DS_
                                    1- 1056     	BANKSEL	_R_AIN3_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 03rr                      1- 1057     	ADDAR	(_R_AIN3_DATA + 1),F
     002C                           1- 1058     _00002_DS_:
                                    1- 1059     	.line	967, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1060     	BANKSEL	r0x1033
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1- 1061     	INCR	r0x1033,F
     002E 3rrr                      1- 1062     	LGOTO	_00919_DS_
     002F                           1- 1063     _00921_DS_:
                                    1- 1064     	.line	974, "main.c"; 	}
                                    1- 1065     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1- 1066     ; exit point of _F_AIN3_Convert
                                    1- 1068     ;***
                                    1- 1069     ;  pBlock Stats: dbName = C
                                    1- 1070     ;***
                                    1- 1071     ;has an exit
                                    1- 1072     ;functions called:
                                    1- 1073     ;   _delay
                                    1- 1074     ;   _F_wait_eoc
                                    1- 1075     ;   _delay
                                    1- 1076     ;   _F_wait_eoc
                                    1- 1077     ;6 compiler assigned registers:
                                    1- 1078     ;   r0x1038
                                    1- 1079     ;   r0x1039
                                    1- 1080     ;   r0x103A
                                    1- 1081     ;   r0x103B
                                    1- 1082     ;   r0x103C
                                    1- 1083     ;   r0x103D
                                    1- 1084     ;; Starting pCode block
                                    1- 1085     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1087     ;local variable name mapping:
     0000                           1- 1090     _F_AIN4_Convert:
                                    1- 1091     ; 2 exit points
                                    1- 1092     	.line	946, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1093     	BANKSEL	r0x1038
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1094     	MOVAR	r0x1038
                                    1- 1095     	.line	948, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1096     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1097     	CLRR	_R_AIN4_DATA_LB
                                    1- 1098     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1099     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1100     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1101     	.line	950, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1102     	MOVIA	0x94
     0008 00rr                      1- 1103     	MOVAR	_ADMD
                                    1- 1104     	.line	951, "main.c"; 	delay(200);	
     0009 21C8                      1- 1105     	MOVIA	0xc8
     000A 2rrr                      1- 1106     	LCALL	_delay
                                    1- 1107     	.line	952, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1108     	MOVIA	0x01
                                    1- 1109     	BANKSEL	r0x1039
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1110     	MOVAR	r0x1039
     000E                           1- 1111     _00910_DS_:
                                    1- 1112     	BANKSEL	r0x1039
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 1113     	MOVR	r0x1039,W
                                    1- 1114     	BANKSEL	r0x1038
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1- 1115     	SUBAR	r0x1038,W
     0012 0803                      1- 1116     	BTRSS	STATUS,0
     0013 3rrr                      1- 1117     	LGOTO	_00912_DS_
                                    1- 1118     	.line	954, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1119     	BSR	_ADMDbits,6
                                    1- 1120     	.line	955, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0015 2rrr                      1- 1121     	LCALL	_F_wait_eoc
                                    1- 1122     	.line	956, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1123     	MOVIA	0x0f
     0017 10rr                      1- 1124     	ANDAR	_ADR,W
                                    1- 1125     ;;3	MOVAR	r0x103A
                                    1- 1126     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 03rr                      1- 1127     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1128     	.line	957, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1129     	MOVR	_ADD,W
                                    1- 1130     	BANKSEL	r0x103A
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1131     	MOVAR	r0x103A
                                    1- 1132     ;;1	CLRR	r0x103B
                                    1- 1133     ;;105	MOVR	r0x103A,W
                                    1- 1134     ;;103	MOVAR	r0x103C
     001D 2100                      1- 1135     	MOVIA	0x00
                                    1- 1136     	BANKSEL	r0x103D
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1- 1137     	MOVAR	r0x103D
                                    1- 1138     ;;104	MOVR	r0x103C,W
                                    1- 1139     	BANKSEL	r0x103A
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1- 1140     	MOVR	r0x103A,W
                                    1- 1141     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1- 1142     	ADDAR	_R_AIN4_DATA,F
                                    1- 1143     	BANKSEL	r0x103D
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 1144     	MOVR	r0x103D,W
     0026 0C03                      1- 1145     	BTRSC	STATUS,0
     0027 05rr                      1- 1146     	INCR	r0x103D,W
     0028 0D03                      1- 1147     	BTRSC	STATUS,2
     0029 3rrr                      1- 1148     	LGOTO	_00003_DS_
                                    1- 1149     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 03rr                      1- 1150     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1151     _00003_DS_:
                                    1- 1152     	.line	952, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1153     	BANKSEL	r0x1039
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1- 1154     	INCR	r0x1039,F
     002E 3rrr                      1- 1155     	LGOTO	_00910_DS_
     002F                           1- 1156     _00912_DS_:
                                    1- 1157     	.line	959, "main.c"; 	}
                                    1- 1158     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1- 1159     ; exit point of _F_AIN4_Convert
                                    1- 1161     ;***
                                    1- 1162     ;  pBlock Stats: dbName = C
                                    1- 1163     ;***
                                    1- 1164     ;has an exit
                                    1- 1165     ;functions called:
                                    1- 1166     ;   _F_AIN3_Convert
                                    1- 1167     ;   _F_AIN3_Convert
                                    1- 1168     ;4 compiler assigned registers:
                                    1- 1169     ;   r0x103E
                                    1- 1170     ;   r0x103F
                                    1- 1171     ;   r0x1040
                                    1- 1172     ;   r0x1041
                                    1- 1173     ;; Starting pCode block
                                    1- 1174     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1176     _checkOutA:
                                    1- 1177     ; 2 exit points
                                    1- 1178     	.line	840, "main.c"; 	R_AIN3_DATA = R_AIN3_DATA_LB = 0x00;
                                    1- 1179     	BANKSEL	_R_AIN3_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1180     	CLRR	_R_AIN3_DATA_LB
                                    1- 1181     	BANKSEL	_R_AIN3_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1182     	CLRR	_R_AIN3_DATA
     0004 02rr                      1- 1183     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1184     	.line	841, "main.c"; 	F_AIN3_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1185     	MOVIA	0x08
     0006 2rrr                      1- 1186     	LCALL	_F_AIN3_Convert
                                    1- 1187     	.line	842, "main.c"; 	R_AIN3_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1188     	BANKSEL	_R_AIN3_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1189     	SWAPR	(_R_AIN3_DATA + 1),W
     0009 22F0                      1- 1190     	ANDIA	0xf0
     000A 00rr                      1- 1191     	MOVAR	(_R_AIN3_DATA + 1)
     000B 15rr                      1- 1192     	SWAPR	_R_AIN3_DATA,W
     000C 00rr                      1- 1193     	MOVAR	_R_AIN3_DATA
     000D 220F                      1- 1194     	ANDIA	0x0f
     000E 11rr                      1- 1195     	IORAR	(_R_AIN3_DATA + 1),F
     000F 12rr                      1- 1196     	XORAR	_R_AIN3_DATA,F
                                    1- 1197     	.line	843, "main.c"; 	R_AIN3_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1198     	MOVIA	0xf0
                                    1- 1199     	BANKSEL	_R_AIN3_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1200     	ANDAR	_R_AIN3_DATA_LB,F
                                    1- 1201     	.line	844, "main.c"; 	R_AIN3_DATA += R_AIN3_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1202     	MOVR	_R_AIN3_DATA_LB,W
                                    1- 1203     	BANKSEL	r0x103E
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1204     	MOVAR	r0x103E
                                    1- 1205     ;;1	CLRR	r0x103F
                                    1- 1206     ;;102	MOVR	r0x103E,W
                                    1- 1207     ;;100	MOVAR	r0x1040
     0016 2100                      1- 1208     	MOVIA	0x00
                                    1- 1209     	BANKSEL	r0x1041
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1210     	MOVAR	r0x1041
                                    1- 1211     ;;101	MOVR	r0x1040,W
                                    1- 1212     	BANKSEL	r0x103E
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1213     	MOVR	r0x103E,W
                                    1- 1214     	BANKSEL	_R_AIN3_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1215     	ADDAR	_R_AIN3_DATA,F
                                    1- 1216     	BANKSEL	r0x1041
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1217     	MOVR	r0x1041,W
     001F 0C03                      1- 1218     	BTRSC	STATUS,0
     0020 05rr                      1- 1219     	INCR	r0x1041,W
     0021 0D03                      1- 1220     	BTRSC	STATUS,2
     0022 3rrr                      1- 1221     	LGOTO	_00004_DS_
                                    1- 1222     	BANKSEL	_R_AIN3_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1223     	ADDAR	(_R_AIN3_DATA + 1),F
                                    1- 1224     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1225     _00004_DS_:
                                    1- 1226     	.line	845, "main.c"; 	R_AIN3_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1227     	BCR	STATUS,0
                                    1- 1228     	BANKSEL	_R_AIN3_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1229     	RRR	(_R_AIN3_DATA + 1),F
     0028 13rr                      1- 1230     	RRR	_R_AIN3_DATA,F
                                    1- 1231     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1232     	BCR	STATUS,0
     002A 13rr                      1- 1233     	RRR	(_R_AIN3_DATA + 1),F
     002B 13rr                      1- 1234     	RRR	_R_AIN3_DATA,F
                                    1- 1235     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1236     	BCR	STATUS,0
     002D 13rr                      1- 1237     	RRR	(_R_AIN3_DATA + 1),F
     002E 13rr                      1- 1238     	RRR	_R_AIN3_DATA,F
                                    1- 1239     	.line	846, "main.c"; 	if(debug)
                                    1- 1240     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1241     	MOVR	_debug,W
     0031 0D03                      1- 1242     	BTRSC	STATUS,2
     0032 3rrr                      1- 1243     	LGOTO	_00769_DS_
                                    1- 1244     	.line	847, "main.c"; 	R_AIN3_DATA = OUTA;
     0033 212D                      1- 1245     	MOVIA	0x2d
                                    1- 1246     	BANKSEL	_R_AIN3_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1247     	MOVAR	_R_AIN3_DATA
     0036 2101                      1- 1248     	MOVIA	0x01
     0037 00rr                      1- 1249     	MOVAR	(_R_AIN3_DATA + 1)
                                    1- 1250     ;;unsigned compare: left < lit (0x6=6), size=1
     0038                           1- 1251     _00769_DS_:
                                    1- 1252     	.line	848, "main.c"; 	if(workStep < 6 && R_AIN3_DATA > 200)
     0038 2106                      1- 1253     	MOVIA	0x06
                                    1- 1254     	BANKSEL	_workStep
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1255     	SUBAR	_workStep,W
     003B 0C03                      1- 1256     	BTRSC	STATUS,0
     003C 3rrr                      1- 1257     	LGOTO	_00822_DS_
                                    1- 1258     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1259     ;;unsigned compare: left >= lit (0xC9=201), size=2
     003D 2100                      1- 1260     	MOVIA	0x00
                                    1- 1261     	BANKSEL	_R_AIN3_DATA
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 04rr                      1- 1262     	SUBAR	(_R_AIN3_DATA + 1),W
     0040 0903                      1- 1263     	BTRSS	STATUS,2
     0041 3rrr                      1- 1264     	LGOTO	_00897_DS_
     0042 21C9                      1- 1265     	MOVIA	0xc9
     0043 04rr                      1- 1266     	SUBAR	_R_AIN3_DATA,W
     0044                           1- 1267     _00897_DS_:
     0044 0803                      1- 1268     	BTRSS	STATUS,0
     0045 3rrr                      1- 1269     	LGOTO	_00822_DS_
                                    1- 1270     	.line	850, "main.c"; 	if(++overCount > 5)
                                    1- 1271     	BANKSEL	_overCount
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 05rr                      1- 1272     	INCR	_overCount,F
                                    1- 1273     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1274     ;;unsigned compare: left >= lit (0x6=6), size=1
     0048 2106                      1- 1275     	MOVIA	0x06
     0049 04rr                      1- 1276     	SUBAR	_overCount,W
     004A 0803                      1- 1277     	BTRSS	STATUS,0
     004B 3rrr                      1- 1278     	LGOTO	_00825_DS_
                                    1- 1279     	.line	852, "main.c"; 	overCount = 5;
     004C 2105                      1- 1280     	MOVIA	0x05
     004D 00rr                      1- 1281     	MOVAR	_overCount
     004E 3rrr                      1- 1282     	LGOTO	_00825_DS_
                                    1- 1283     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1284     ;;unsigned compare: left >= lit (0x191=401), size=2
     004F                           1- 1285     _00822_DS_:
                                    1- 1286     	.line	855, "main.c"; 	else if(R_AIN3_DATA > 400)
     004F 2101                      1- 1287     	MOVIA	0x01
                                    1- 1288     	BANKSEL	_R_AIN3_DATA
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 04rr                      1- 1289     	SUBAR	(_R_AIN3_DATA + 1),W
     0052 0903                      1- 1290     	BTRSS	STATUS,2
     0053 3rrr                      1- 1291     	LGOTO	_00899_DS_
     0054 2191                      1- 1292     	MOVIA	0x91
     0055 04rr                      1- 1293     	SUBAR	_R_AIN3_DATA,W
     0056                           1- 1294     _00899_DS_:
     0056 0803                      1- 1295     	BTRSS	STATUS,0
     0057 3rrr                      1- 1296     	LGOTO	_00819_DS_
                                    1- 1297     	.line	857, "main.c"; 	if(++overCount > 5)
                                    1- 1298     	BANKSEL	_overCount
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 05rr                      1- 1299     	INCR	_overCount,F
                                    1- 1300     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1301     ;;unsigned compare: left >= lit (0x6=6), size=1
     005A 2106                      1- 1302     	MOVIA	0x06
     005B 04rr                      1- 1303     	SUBAR	_overCount,W
     005C 0803                      1- 1304     	BTRSS	STATUS,0
     005D 3rrr                      1- 1305     	LGOTO	_00825_DS_
                                    1- 1306     	.line	859, "main.c"; 	overCount = 5;
     005E 2105                      1- 1307     	MOVIA	0x05
     005F 00rr                      1- 1308     	MOVAR	_overCount
     0060 3rrr                      1- 1309     	LGOTO	_00825_DS_
                                    1- 1310     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1311     ;;unsigned compare: left >= lit (0x51=81), size=2
     0061                           1- 1312     _00819_DS_:
                                    1- 1313     	.line	867, "main.c"; 	else if(R_AIN3_DATA > 80)
     0061 2100                      1- 1314     	MOVIA	0x00
                                    1- 1315     	BANKSEL	_R_AIN3_DATA
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 04rr                      1- 1316     	SUBAR	(_R_AIN3_DATA + 1),W
     0064 0903                      1- 1317     	BTRSS	STATUS,2
     0065 3rrr                      1- 1318     	LGOTO	_00901_DS_
     0066 2151                      1- 1319     	MOVIA	0x51
     0067 04rr                      1- 1320     	SUBAR	_R_AIN3_DATA,W
     0068                           1- 1321     _00901_DS_:
                                    1- 1322     	BANKSEL	r0x103E
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 02rr                      1- 1323     	CLRR	r0x103E
     006A 14rr                      1- 1324     	RLR	r0x103E,F
     006B 01rr                      1- 1325     	MOVR	r0x103E,W
     006C 0D03                      1- 1326     	BTRSC	STATUS,2
     006D 3rrr                      1- 1327     	LGOTO	_00816_DS_
                                    1- 1328     	.line	869, "main.c"; 	if(overCount > 0)
                                    1- 1329     	BANKSEL	_overCount
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 01rr                      1- 1330     	MOVR	_overCount,W
     0070 0903                      1- 1331     	BTRSS	STATUS,2
                                    1- 1332     	.line	871, "main.c"; 	overCount--;
     0071 06rr                      1- 1333     	DECR	_overCount,F
                                    1- 1334     	.line	874, "main.c"; 	if(workStep == 1)
                                    1- 1335     	BANKSEL	_workStep
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 01rr                      1- 1336     	MOVR	_workStep,W
     0074 2401                      1- 1337     	XORIA	0x01
     0075 0903                      1- 1338     	BTRSS	STATUS,2
     0076 3rrr                      1- 1339     	LGOTO	_00795_DS_
                                    1- 1340     	.line	876, "main.c"; 	tempDuty = 106;
     0077 216A                      1- 1341     	MOVIA	0x6a
                                    1- 1342     	BANKSEL	_tempDuty
     0078 rrrr                      3-   71 m1      .banksel ram_address
     0079 00rr                      1- 1343     	MOVAR	_tempDuty
     007A 3rrr                      1- 1344     	LGOTO	_00796_DS_
     007B                           1- 1345     _00795_DS_:
                                    1- 1346     	.line	878, "main.c"; 	else if(workStep == 2)
                                    1- 1347     	BANKSEL	_workStep
     007B rrrr                      3-   71 m1      .banksel ram_address
     007C 01rr                      1- 1348     	MOVR	_workStep,W
     007D 2402                      1- 1349     	XORIA	0x02
     007E 0903                      1- 1350     	BTRSS	STATUS,2
     007F 3rrr                      1- 1351     	LGOTO	_00792_DS_
                                    1- 1352     	.line	880, "main.c"; 	tempDuty = 109;
     0080 216D                      1- 1353     	MOVIA	0x6d
                                    1- 1354     	BANKSEL	_tempDuty
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 00rr                      1- 1355     	MOVAR	_tempDuty
     0083 3rrr                      1- 1356     	LGOTO	_00796_DS_
     0084                           1- 1357     _00792_DS_:
                                    1- 1358     	.line	882, "main.c"; 	else if(workStep == 3)
                                    1- 1359     	BANKSEL	_workStep
     0084 rrrr                      3-   71 m1      .banksel ram_address
     0085 01rr                      1- 1360     	MOVR	_workStep,W
     0086 2403                      1- 1361     	XORIA	0x03
     0087 0903                      1- 1362     	BTRSS	STATUS,2
     0088 3rrr                      1- 1363     	LGOTO	_00789_DS_
                                    1- 1364     	.line	884, "main.c"; 	tempDuty = 112;
     0089 2170                      1- 1365     	MOVIA	0x70
                                    1- 1366     	BANKSEL	_tempDuty
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 00rr                      1- 1367     	MOVAR	_tempDuty
     008C 3rrr                      1- 1368     	LGOTO	_00796_DS_
     008D                           1- 1369     _00789_DS_:
                                    1- 1370     	.line	886, "main.c"; 	else if(workStep == 4)
                                    1- 1371     	BANKSEL	_workStep
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 01rr                      1- 1372     	MOVR	_workStep,W
     008F 2404                      1- 1373     	XORIA	0x04
     0090 0903                      1- 1374     	BTRSS	STATUS,2
     0091 3rrr                      1- 1375     	LGOTO	_00786_DS_
                                    1- 1376     	.line	888, "main.c"; 	tempDuty = 115;
     0092 2173                      1- 1377     	MOVIA	0x73
                                    1- 1378     	BANKSEL	_tempDuty
     0093 rrrr                      3-   71 m1      .banksel ram_address
     0094 00rr                      1- 1379     	MOVAR	_tempDuty
     0095 3rrr                      1- 1380     	LGOTO	_00796_DS_
     0096                           1- 1381     _00786_DS_:
                                    1- 1382     	.line	890, "main.c"; 	else if(workStep == 5)
                                    1- 1383     	BANKSEL	_workStep
     0096 rrrr                      3-   71 m1      .banksel ram_address
     0097 01rr                      1- 1384     	MOVR	_workStep,W
     0098 2405                      1- 1385     	XORIA	0x05
     0099 0903                      1- 1386     	BTRSS	STATUS,2
     009A 3rrr                      1- 1387     	LGOTO	_00783_DS_
                                    1- 1388     	.line	892, "main.c"; 	tempDuty = 119;
     009B 2177                      1- 1389     	MOVIA	0x77
                                    1- 1390     	BANKSEL	_tempDuty
     009C rrrr                      3-   71 m1      .banksel ram_address
     009D 00rr                      1- 1391     	MOVAR	_tempDuty
     009E 3rrr                      1- 1392     	LGOTO	_00796_DS_
     009F                           1- 1393     _00783_DS_:
                                    1- 1394     	.line	894, "main.c"; 	else if(workStep == 6)
                                    1- 1395     	BANKSEL	_workStep
     009F rrrr                      3-   71 m1      .banksel ram_address
     00A0 01rr                      1- 1396     	MOVR	_workStep,W
     00A1 2406                      1- 1397     	XORIA	0x06
     00A2 0903                      1- 1398     	BTRSS	STATUS,2
     00A3 3rrr                      1- 1399     	LGOTO	_00780_DS_
                                    1- 1400     	.line	896, "main.c"; 	tempDuty = 122;
     00A4 217A                      1- 1401     	MOVIA	0x7a
                                    1- 1402     	BANKSEL	_tempDuty
     00A5 rrrr                      3-   71 m1      .banksel ram_address
     00A6 00rr                      1- 1403     	MOVAR	_tempDuty
     00A7 3rrr                      1- 1404     	LGOTO	_00796_DS_
     00A8                           1- 1405     _00780_DS_:
                                    1- 1406     	.line	898, "main.c"; 	else if(workStep == 7)
                                    1- 1407     	BANKSEL	_workStep
     00A8 rrrr                      3-   71 m1      .banksel ram_address
     00A9 01rr                      1- 1408     	MOVR	_workStep,W
     00AA 2407                      1- 1409     	XORIA	0x07
     00AB 0903                      1- 1410     	BTRSS	STATUS,2
     00AC 3rrr                      1- 1411     	LGOTO	_00777_DS_
                                    1- 1412     	.line	900, "main.c"; 	tempDuty = 125;
     00AD 217D                      1- 1413     	MOVIA	0x7d
                                    1- 1414     	BANKSEL	_tempDuty
     00AE rrrr                      3-   71 m1      .banksel ram_address
     00AF 00rr                      1- 1415     	MOVAR	_tempDuty
     00B0 3rrr                      1- 1416     	LGOTO	_00796_DS_
     00B1                           1- 1417     _00777_DS_:
                                    1- 1418     	.line	904, "main.c"; 	tempDuty = 128;
     00B1 2180                      1- 1419     	MOVIA	0x80
                                    1- 1420     	BANKSEL	_tempDuty
     00B2 rrrr                      3-   71 m1      .banksel ram_address
     00B3 00rr                      1- 1421     	MOVAR	_tempDuty
     00B4                           1- 1422     _00796_DS_:
                                    1- 1423     	.line	907, "main.c"; 	PWM2DUTY = tempDuty;
                                    1- 1424     	BANKSEL	_tempDuty
     00B4 rrrr                      3-   71 m1      .banksel ram_address
     00B5 01rr                      1- 1425     	MOVR	_tempDuty,W
     00B6 00rr                      1- 1426     	SFUN	_PWM2DUTY
     00B7 3rrr                      1- 1427     	LGOTO	_00825_DS_
     00B8                           1- 1428     _00816_DS_:
                                    1- 1429     	.line	911, "main.c"; 	if(overCount > 0)
                                    1- 1430     	BANKSEL	_overCount
     00B8 rrrr                      3-   71 m1      .banksel ram_address
     00B9 01rr                      1- 1431     	MOVR	_overCount,W
     00BA 0903                      1- 1432     	BTRSS	STATUS,2
                                    1- 1433     	.line	913, "main.c"; 	overCount--;
     00BB 06rr                      1- 1434     	DECR	_overCount,F
                                    1- 1435     	.line	915, "main.c"; 	if(R_AIN3_DATA > 80 && workStep < 4)
                                    1- 1436     	BANKSEL	r0x103E
     00BC rrrr                      3-   71 m1      .banksel ram_address
     00BD 01rr                      1- 1437     	MOVR	r0x103E,W
     00BE 0D03                      1- 1438     	BTRSC	STATUS,2
     00BF 3rrr                      1- 1439     	LGOTO	_00810_DS_
                                    1- 1440     ;;unsigned compare: left < lit (0x4=4), size=1
     00C0 2104                      1- 1441     	MOVIA	0x04
                                    1- 1442     	BANKSEL	_workStep
     00C1 rrrr                      3-   71 m1      .banksel ram_address
     00C2 04rr                      1- 1443     	SUBAR	_workStep,W
     00C3 0C03                      1- 1444     	BTRSC	STATUS,0
     00C4 3rrr                      1- 1445     	LGOTO	_00810_DS_
                                    1- 1446     	.line	917, "main.c"; 	if(workStep == 1)
     00C5 01rr                      1- 1447     	MOVR	_workStep,W
     00C6 2401                      1- 1448     	XORIA	0x01
     00C7 0903                      1- 1449     	BTRSS	STATUS,2
     00C8 3rrr                      1- 1450     	LGOTO	_00805_DS_
                                    1- 1451     	.line	919, "main.c"; 	tempDuty = 106;
     00C9 216A                      1- 1452     	MOVIA	0x6a
                                    1- 1453     	BANKSEL	_tempDuty
     00CA rrrr                      3-   71 m1      .banksel ram_address
     00CB 00rr                      1- 1454     	MOVAR	_tempDuty
     00CC 3rrr                      1- 1455     	LGOTO	_00806_DS_
     00CD                           1- 1456     _00805_DS_:
                                    1- 1457     	.line	921, "main.c"; 	else if(workStep == 2)
                                    1- 1458     	BANKSEL	_workStep
     00CD rrrr                      3-   71 m1      .banksel ram_address
     00CE 01rr                      1- 1459     	MOVR	_workStep,W
     00CF 2402                      1- 1460     	XORIA	0x02
     00D0 0903                      1- 1461     	BTRSS	STATUS,2
     00D1 3rrr                      1- 1462     	LGOTO	_00802_DS_
                                    1- 1463     	.line	923, "main.c"; 	tempDuty = 109;
     00D2 216D                      1- 1464     	MOVIA	0x6d
                                    1- 1465     	BANKSEL	_tempDuty
     00D3 rrrr                      3-   71 m1      .banksel ram_address
     00D4 00rr                      1- 1466     	MOVAR	_tempDuty
     00D5 3rrr                      1- 1467     	LGOTO	_00806_DS_
     00D6                           1- 1468     _00802_DS_:
                                    1- 1469     	.line	925, "main.c"; 	else if(workStep == 3)
                                    1- 1470     	BANKSEL	_workStep
     00D6 rrrr                      3-   71 m1      .banksel ram_address
     00D7 01rr                      1- 1471     	MOVR	_workStep,W
     00D8 2403                      1- 1472     	XORIA	0x03
     00D9 0903                      1- 1473     	BTRSS	STATUS,2
     00DA 3rrr                      1- 1474     	LGOTO	_00806_DS_
                                    1- 1475     	.line	927, "main.c"; 	tempDuty = 112;
     00DB 2170                      1- 1476     	MOVIA	0x70
                                    1- 1477     	BANKSEL	_tempDuty
     00DC rrrr                      3-   71 m1      .banksel ram_address
     00DD 00rr                      1- 1478     	MOVAR	_tempDuty
     00DE                           1- 1479     _00806_DS_:
                                    1- 1480     	.line	929, "main.c"; 	PWM2DUTY = tempDuty;
                                    1- 1481     	BANKSEL	_tempDuty
     00DE rrrr                      3-   71 m1      .banksel ram_address
     00DF 01rr                      1- 1482     	MOVR	_tempDuty,W
     00E0 00rr                      1- 1483     	SFUN	_PWM2DUTY
     00E1 3rrr                      1- 1484     	LGOTO	_00811_DS_
                                    1- 1485     ;;unsigned compare: left < lit (0x50=80), size=2
     00E2                           1- 1486     _00810_DS_:
                                    1- 1487     	.line	931, "main.c"; 	else if(R_AIN3_DATA < 80)
     00E2 2100                      1- 1488     	MOVIA	0x00
                                    1- 1489     	BANKSEL	_R_AIN3_DATA
     00E3 rrrr                      3-   71 m1      .banksel ram_address
     00E4 04rr                      1- 1490     	SUBAR	(_R_AIN3_DATA + 1),W
     00E5 0903                      1- 1491     	BTRSS	STATUS,2
     00E6 3rrr                      1- 1492     	LGOTO	_00903_DS_
     00E7 2150                      1- 1493     	MOVIA	0x50
     00E8 04rr                      1- 1494     	SUBAR	_R_AIN3_DATA,W
     00E9                           1- 1495     _00903_DS_:
     00E9 0C03                      1- 1496     	BTRSC	STATUS,0
     00EA 3rrr                      1- 1497     	LGOTO	_00811_DS_
                                    1- 1498     	.line	933, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 1499     	BANKSEL	_maxDuty
     00EB rrrr                      3-   71 m1      .banksel ram_address
     00EC 01rr                      1- 1500     	MOVR	_maxDuty,W
     00ED 00rr                      1- 1501     	SFUN	_PWM2DUTY
     00EE                           1- 1502     _00811_DS_:
                                    1- 1503     	.line	935, "main.c"; 	if(workStep > 0)
                                    1- 1504     	BANKSEL	_workStep
     00EE rrrr                      3-   71 m1      .banksel ram_address
     00EF 01rr                      1- 1505     	MOVR	_workStep,W
     00F0 0D03                      1- 1506     	BTRSC	STATUS,2
     00F1 3rrr                      1- 1507     	LGOTO	_00825_DS_
                                    1- 1508     	.line	936, "main.c"; 	ledStep = workStep;
     00F2 01rr                      1- 1509     	MOVR	_workStep,W
                                    1- 1510     	BANKSEL	_ledStep
     00F3 rrrr                      3-   71 m1      .banksel ram_address
     00F4 00rr                      1- 1511     	MOVAR	_ledStep
     00F5                           1- 1512     _00825_DS_:
                                    1- 1513     	.line	940, "main.c"; 	}
                                    1- 1514     	RETURN	
     00F5 0010                      3-   26 m1      ret
                                    1- 1515     ; exit point of _checkOutA
                                    1- 1517     ;***
                                    1- 1518     ;  pBlock Stats: dbName = C
                                    1- 1519     ;***
                                    1- 1520     ;has an exit
                                    1- 1521     ;functions called:
                                    1- 1522     ;   _F_AIN4_Convert
                                    1- 1523     ;   _F_AIN4_Convert
                                    1- 1524     ;4 compiler assigned registers:
                                    1- 1525     ;   r0x1042
                                    1- 1526     ;   r0x1043
                                    1- 1527     ;   r0x1044
                                    1- 1528     ;   r0x1045
                                    1- 1529     ;; Starting pCode block
                                    1- 1530     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1532     _checkBatAD:
                                    1- 1533     ; 2 exit points
                                    1- 1534     	.line	656, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1535     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1536     	CLRR	_R_AIN4_DATA_LB
                                    1- 1537     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1538     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1539     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1540     	.line	657, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1541     	MOVIA	0x08
     0006 2rrr                      1- 1542     	LCALL	_F_AIN4_Convert
                                    1- 1543     	.line	658, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1544     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1545     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1546     	ANDIA	0xf0
     000A 00rr                      1- 1547     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1548     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1549     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1550     	ANDIA	0x0f
     000E 11rr                      1- 1551     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1552     	XORAR	_R_AIN4_DATA,F
                                    1- 1553     	.line	659, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1554     	MOVIA	0xf0
                                    1- 1555     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1556     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1557     	.line	660, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1558     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1559     	BANKSEL	r0x1044
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1560     	MOVAR	r0x1044
                                    1- 1561     ;;1	MOVAR	r0x1042
                                    1- 1562     ;;1	CLRR	r0x1043
                                    1- 1563     ;;99	MOVR	r0x1042,W
     0016 2100                      1- 1564     	MOVIA	0x00
                                    1- 1565     	BANKSEL	r0x1045
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1566     	MOVAR	r0x1045
                                    1- 1567     	BANKSEL	r0x1044
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1568     	MOVR	r0x1044,W
                                    1- 1569     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1570     	ADDAR	_R_AIN4_DATA,F
                                    1- 1571     	BANKSEL	r0x1045
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1572     	MOVR	r0x1045,W
     001F 0C03                      1- 1573     	BTRSC	STATUS,0
     0020 05rr                      1- 1574     	INCR	r0x1045,W
     0021 0D03                      1- 1575     	BTRSC	STATUS,2
     0022 3rrr                      1- 1576     	LGOTO	_00005_DS_
                                    1- 1577     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1578     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1579     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1580     _00005_DS_:
                                    1- 1581     	.line	661, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1582     	BCR	STATUS,0
                                    1- 1583     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1584     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1585     	RRR	_R_AIN4_DATA,F
                                    1- 1586     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1587     	BCR	STATUS,0
     002A 13rr                      1- 1588     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1589     	RRR	_R_AIN4_DATA,F
                                    1- 1590     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1591     	BCR	STATUS,0
     002D 13rr                      1- 1592     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1593     	RRR	_R_AIN4_DATA,F
                                    1- 1594     	.line	662, "main.c"; 	if(debug)
                                    1- 1595     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1596     	MOVR	_debug,W
     0031 0D03                      1- 1597     	BTRSC	STATUS,2
     0032 3rrr                      1- 1598     	LGOTO	_00467_DS_
                                    1- 1599     	.line	663, "main.c"; 	R_AIN4_DATA = BATTLE;
     0033 210E                      1- 1600     	MOVIA	0x0e
                                    1- 1601     	BANKSEL	_R_AIN4_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1602     	MOVAR	_R_AIN4_DATA
     0036 2106                      1- 1603     	MOVIA	0x06
     0037 00rr                      1- 1604     	MOVAR	(_R_AIN4_DATA + 1)
                                    1- 1605     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1606     ;;unsigned compare: left >= lit (0x5F6=1526), size=2
     0038                           1- 1607     _00467_DS_:
                                    1- 1608     	.line	665, "main.c"; 	if(R_AIN4_DATA > 1525)
     0038 2105                      1- 1609     	MOVIA	0x05
                                    1- 1610     	BANKSEL	_R_AIN4_DATA
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1611     	SUBAR	(_R_AIN4_DATA + 1),W
     003B 0903                      1- 1612     	BTRSS	STATUS,2
     003C 3rrr                      1- 1613     	LGOTO	_00727_DS_
     003D 21F6                      1- 1614     	MOVIA	0xf6
     003E 04rr                      1- 1615     	SUBAR	_R_AIN4_DATA,W
     003F                           1- 1616     _00727_DS_:
     003F 0803                      1- 1617     	BTRSS	STATUS,0
     0040 3rrr                      1- 1618     	LGOTO	_00479_DS_
                                    1- 1619     	.line	668, "main.c"; 	lowCount = 0;
                                    1- 1620     	BANKSEL	_lowCount
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 02rr                      1- 1621     	CLRR	_lowCount
     0043 3rrr                      1- 1622     	LGOTO	_00480_DS_
                                    1- 1623     ;;unsigned compare: left < lit (0x451=1105), size=2
     0044                           1- 1624     _00479_DS_:
                                    1- 1625     	.line	670, "main.c"; 	else if(R_AIN4_DATA < 1105)
     0044 2104                      1- 1626     	MOVIA	0x04
                                    1- 1627     	BANKSEL	_R_AIN4_DATA
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 04rr                      1- 1628     	SUBAR	(_R_AIN4_DATA + 1),W
     0047 0903                      1- 1629     	BTRSS	STATUS,2
     0048 3rrr                      1- 1630     	LGOTO	_00728_DS_
     0049 2151                      1- 1631     	MOVIA	0x51
     004A 04rr                      1- 1632     	SUBAR	_R_AIN4_DATA,W
     004B                           1- 1633     _00728_DS_:
     004B 0C03                      1- 1634     	BTRSC	STATUS,0
     004C 3rrr                      1- 1635     	LGOTO	_00476_DS_
                                    1- 1636     	.line	672, "main.c"; 	if(++lowCount < 10)
                                    1- 1637     	BANKSEL	_lowCount
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 05rr                      1- 1638     	INCR	_lowCount,F
                                    1- 1639     ;;unsigned compare: left < lit (0xA=10), size=1
     004F 210A                      1- 1640     	MOVIA	0x0a
     0050 04rr                      1- 1641     	SUBAR	_lowCount,W
     0051 0803                      1- 1642     	BTRSS	STATUS,0
                                    1- 1643     	.line	673, "main.c"; 	return;
     0052 3rrr                      1- 1644     	LGOTO	_00578_DS_
                                    1- 1645     	.line	674, "main.c"; 	lowCount = 10;
     0053 210A                      1- 1646     	MOVIA	0x0a
     0054 00rr                      1- 1647     	MOVAR	_lowCount
                                    1- 1648     	.line	675, "main.c"; 	pwStep = 0;
                                    1- 1649     	BANKSEL	_pwStep
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 02rr                      1- 1650     	CLRR	_pwStep
                                    1- 1651     	.line	676, "main.c"; 	R_AIN4_DATA = 1105;
     0057 2151                      1- 1652     	MOVIA	0x51
                                    1- 1653     	BANKSEL	_R_AIN4_DATA
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 00rr                      1- 1654     	MOVAR	_R_AIN4_DATA
     005A 2104                      1- 1655     	MOVIA	0x04
     005B 00rr                      1- 1656     	MOVAR	(_R_AIN4_DATA + 1)
                                    1- 1657     	.line	678, "main.c"; 	if(workStep > 0 && ++firstTime == 10)
                                    1- 1658     	BANKSEL	_workStep
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 01rr                      1- 1659     	MOVR	_workStep,W
     005E 0D03                      1- 1660     	BTRSC	STATUS,2
     005F 3rrr                      1- 1661     	LGOTO	_00471_DS_
                                    1- 1662     	BANKSEL	_firstTime
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 05rr                      1- 1663     	INCR	_firstTime,F
     0062 01rr                      1- 1664     	MOVR	_firstTime,W
     0063 240A                      1- 1665     	XORIA	0x0a
     0064 0903                      1- 1666     	BTRSS	STATUS,2
     0065 3rrr                      1- 1667     	LGOTO	_00471_DS_
                                    1- 1668     	.line	680, "main.c"; 	shanshuoTime = 16;
     0066 2110                      1- 1669     	MOVIA	0x10
                                    1- 1670     	BANKSEL	_shanshuoTime
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 00rr                      1- 1671     	MOVAR	_shanshuoTime
                                    1- 1672     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1673     ;;unsigned compare: left >= lit (0xC=12), size=1
     0069                           1- 1674     _00471_DS_:
                                    1- 1675     	.line	683, "main.c"; 	if(firstTime > 11)
     0069 210C                      1- 1676     	MOVIA	0x0c
                                    1- 1677     	BANKSEL	_firstTime
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 04rr                      1- 1678     	SUBAR	_firstTime,W
     006C 0803                      1- 1679     	BTRSS	STATUS,0
     006D 3rrr                      1- 1680     	LGOTO	_00480_DS_
                                    1- 1681     	.line	684, "main.c"; 	firstTime = 11;
     006E 210B                      1- 1682     	MOVIA	0x0b
     006F 00rr                      1- 1683     	MOVAR	_firstTime
     0070 3rrr                      1- 1684     	LGOTO	_00480_DS_
     0071                           1- 1685     _00476_DS_:
                                    1- 1686     	.line	688, "main.c"; 	lowCount = 0;
                                    1- 1687     	BANKSEL	_lowCount
     0071 rrrr                      3-   71 m1      .banksel ram_address
     0072 02rr                      1- 1688     	CLRR	_lowCount
                                    1- 1689     	.line	689, "main.c"; 	firstTime = 0;
                                    1- 1690     	BANKSEL	_firstTime
     0073 rrrr                      3-   71 m1      .banksel ram_address
     0074 02rr                      1- 1691     	CLRR	_firstTime
     0075                           1- 1692     _00480_DS_:
                                    1- 1693     	.line	691, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA - 1105;
     0075 21AF                      1- 1694     	MOVIA	0xaf
                                    1- 1695     	BANKSEL	_R_AIN4_DATA
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 03rr                      1- 1696     	ADDAR	_R_AIN4_DATA,F
     0078 21FB                      1- 1697     	MOVIA	0xfb
     0079 0C03                      1- 1698     	BTRSC	STATUS,0
     007A 21FC                      1- 1699     	MOVIA	0xfc
     007B 03rr                      1- 1700     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1701     ;;unsigned compare: left < lit (0x1A4=420), size=2
                                    1- 1702     	.line	693, "main.c"; 	if(R_AIN4_DATA >= 420)
     007C 2101                      1- 1703     	MOVIA	0x01
     007D 04rr                      1- 1704     	SUBAR	(_R_AIN4_DATA + 1),W
     007E 0903                      1- 1705     	BTRSS	STATUS,2
     007F 3rrr                      1- 1706     	LGOTO	_00731_DS_
     0080 21A4                      1- 1707     	MOVIA	0xa4
     0081 04rr                      1- 1708     	SUBAR	_R_AIN4_DATA,W
     0082                           1- 1709     _00731_DS_:
     0082 0803                      1- 1710     	BTRSS	STATUS,0
     0083 3rrr                      1- 1711     	LGOTO	_00576_DS_
                                    1- 1712     	.line	695, "main.c"; 	pwStep = 9;
     0084 2109                      1- 1713     	MOVIA	0x09
                                    1- 1714     	BANKSEL	_pwStep
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 00rr                      1- 1715     	MOVAR	_pwStep
     0087 3rrr                      1- 1716     	LGOTO	_00578_DS_
                                    1- 1717     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1718     ;;unsigned compare: left >= lit (0x18C=396), size=2
     0088                           1- 1719     _00576_DS_:
                                    1- 1720     	.line	697, "main.c"; 	else if(R_AIN4_DATA > 395)
     0088 2101                      1- 1721     	MOVIA	0x01
                                    1- 1722     	BANKSEL	_R_AIN4_DATA
     0089 rrrr                      3-   71 m1      .banksel ram_address
     008A 04rr                      1- 1723     	SUBAR	(_R_AIN4_DATA + 1),W
     008B 0903                      1- 1724     	BTRSS	STATUS,2
     008C 3rrr                      1- 1725     	LGOTO	_00732_DS_
     008D 218C                      1- 1726     	MOVIA	0x8c
     008E 04rr                      1- 1727     	SUBAR	_R_AIN4_DATA,W
     008F                           1- 1728     _00732_DS_:
     008F 0803                      1- 1729     	BTRSS	STATUS,0
     0090 3rrr                      1- 1730     	LGOTO	_00573_DS_
                                    1- 1731     	.line	699, "main.c"; 	fullCount = 0;
                                    1- 1732     	BANKSEL	_fullCount
     0091 rrrr                      3-   71 m1      .banksel ram_address
     0092 02rr                      1- 1733     	CLRR	_fullCount
                                    1- 1734     ;;unsigned compare: left < lit (0x8=8), size=1
                                    1- 1735     	.line	700, "main.c"; 	if(pwStep < 8)
     0093 2108                      1- 1736     	MOVIA	0x08
                                    1- 1737     	BANKSEL	_pwStep
     0094 rrrr                      3-   71 m1      .banksel ram_address
     0095 04rr                      1- 1738     	SUBAR	_pwStep,W
     0096 0C03                      1- 1739     	BTRSC	STATUS,0
     0097 3rrr                      1- 1740     	LGOTO	_00487_DS_
                                    1- 1741     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1742     ;;unsigned compare: left >= lit (0x191=401), size=2
                                    1- 1743     	.line	702, "main.c"; 	if(R_AIN4_DATA > 400)
     0098 2101                      1- 1744     	MOVIA	0x01
                                    1- 1745     	BANKSEL	_R_AIN4_DATA
     0099 rrrr                      3-   71 m1      .banksel ram_address
     009A 04rr                      1- 1746     	SUBAR	(_R_AIN4_DATA + 1),W
     009B 0903                      1- 1747     	BTRSS	STATUS,2
     009C 3rrr                      1- 1748     	LGOTO	_00734_DS_
     009D 2191                      1- 1749     	MOVIA	0x91
     009E 04rr                      1- 1750     	SUBAR	_R_AIN4_DATA,W
     009F                           1- 1751     _00734_DS_:
     009F 0803                      1- 1752     	BTRSS	STATUS,0
     00A0 3rrr                      1- 1753     	LGOTO	_00488_DS_
                                    1- 1754     	.line	703, "main.c"; 	pwStep = 8;
     00A1 2108                      1- 1755     	MOVIA	0x08
                                    1- 1756     	BANKSEL	_pwStep
     00A2 rrrr                      3-   71 m1      .banksel ram_address
     00A3 00rr                      1- 1757     	MOVAR	_pwStep
     00A4 3rrr                      1- 1758     	LGOTO	_00488_DS_
     00A5                           1- 1759     _00487_DS_:
                                    1- 1760     	.line	705, "main.c"; 	else if(chrgTime == 0 && R_AIN4_DATA < 405)
                                    1- 1761     	BANKSEL	_chrgTime
     00A5 rrrr                      3-   71 m1      .banksel ram_address
     00A6 01rr                      1- 1762     	MOVR	_chrgTime,W
     00A7 11rr                      1- 1763     	IORAR	(_chrgTime + 1),W
     00A8 0903                      1- 1764     	BTRSS	STATUS,2
     00A9 3rrr                      1- 1765     	LGOTO	_00488_DS_
                                    1- 1766     ;;unsigned compare: left < lit (0x195=405), size=2
     00AA 2101                      1- 1767     	MOVIA	0x01
                                    1- 1768     	BANKSEL	_R_AIN4_DATA
     00AB rrrr                      3-   71 m1      .banksel ram_address
     00AC 04rr                      1- 1769     	SUBAR	(_R_AIN4_DATA + 1),W
     00AD 0903                      1- 1770     	BTRSS	STATUS,2
     00AE 3rrr                      1- 1771     	LGOTO	_00735_DS_
     00AF 2195                      1- 1772     	MOVIA	0x95
     00B0 04rr                      1- 1773     	SUBAR	_R_AIN4_DATA,W
     00B1                           1- 1774     _00735_DS_:
     00B1 0C03                      1- 1775     	BTRSC	STATUS,0
     00B2 3rrr                      1- 1776     	LGOTO	_00488_DS_
                                    1- 1777     	.line	707, "main.c"; 	pwStep = 8;
     00B3 2108                      1- 1778     	MOVIA	0x08
                                    1- 1779     	BANKSEL	_pwStep
     00B4 rrrr                      3-   71 m1      .banksel ram_address
     00B5 00rr                      1- 1780     	MOVAR	_pwStep
     00B6                           1- 1781     _00488_DS_:
                                    1- 1782     	.line	711, "main.c"; 	if(chrgTime > 0 && R_AIN4_DATA > 415 && chrgTime > 600)
                                    1- 1783     	BANKSEL	_chrgTime
     00B6 rrrr                      3-   71 m1      .banksel ram_address
     00B7 01rr                      1- 1784     	MOVR	_chrgTime,W
     00B8 11rr                      1- 1785     	IORAR	(_chrgTime + 1),W
     00B9 0D03                      1- 1786     	BTRSC	STATUS,2
     00BA 3rrr                      1- 1787     	LGOTO	_00578_DS_
                                    1- 1788     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1789     ;;unsigned compare: left >= lit (0x1A0=416), size=2
     00BB 2101                      1- 1790     	MOVIA	0x01
                                    1- 1791     	BANKSEL	_R_AIN4_DATA
     00BC rrrr                      3-   71 m1      .banksel ram_address
     00BD 04rr                      1- 1792     	SUBAR	(_R_AIN4_DATA + 1),W
     00BE 0903                      1- 1793     	BTRSS	STATUS,2
     00BF 3rrr                      1- 1794     	LGOTO	_00736_DS_
     00C0 21A0                      1- 1795     	MOVIA	0xa0
     00C1 04rr                      1- 1796     	SUBAR	_R_AIN4_DATA,W
     00C2                           1- 1797     _00736_DS_:
     00C2 0803                      1- 1798     	BTRSS	STATUS,0
     00C3 3rrr                      1- 1799     	LGOTO	_00578_DS_
                                    1- 1800     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1801     ;;unsigned compare: left >= lit (0x259=601), size=2
     00C4 2102                      1- 1802     	MOVIA	0x02
                                    1- 1803     	BANKSEL	_chrgTime
     00C5 rrrr                      3-   71 m1      .banksel ram_address
     00C6 04rr                      1- 1804     	SUBAR	(_chrgTime + 1),W
     00C7 0903                      1- 1805     	BTRSS	STATUS,2
     00C8 3rrr                      1- 1806     	LGOTO	_00737_DS_
     00C9 2159                      1- 1807     	MOVIA	0x59
     00CA 04rr                      1- 1808     	SUBAR	_chrgTime,W
     00CB                           1- 1809     _00737_DS_:
     00CB 0803                      1- 1810     	BTRSS	STATUS,0
     00CC 3rrr                      1- 1811     	LGOTO	_00578_DS_
                                    1- 1812     	.line	713, "main.c"; 	chrgTime = 600;
     00CD 2158                      1- 1813     	MOVIA	0x58
                                    1- 1814     	BANKSEL	_chrgTime
     00CE rrrr                      3-   71 m1      .banksel ram_address
     00CF 00rr                      1- 1815     	MOVAR	_chrgTime
     00D0 2102                      1- 1816     	MOVIA	0x02
     00D1 00rr                      1- 1817     	MOVAR	(_chrgTime + 1)
                                    1- 1818     	.line	714, "main.c"; 	pwStep = 9;
     00D2 2109                      1- 1819     	MOVIA	0x09
                                    1- 1820     	BANKSEL	_pwStep
     00D3 rrrr                      3-   71 m1      .banksel ram_address
     00D4 00rr                      1- 1821     	MOVAR	_pwStep
     00D5 3rrr                      1- 1822     	LGOTO	_00578_DS_
                                    1- 1823     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1824     ;;unsigned compare: left >= lit (0x17D=381), size=2
     00D6                           1- 1825     _00573_DS_:
                                    1- 1826     	.line	717, "main.c"; 	else if(R_AIN4_DATA > 380)
     00D6 2101                      1- 1827     	MOVIA	0x01
                                    1- 1828     	BANKSEL	_R_AIN4_DATA
     00D7 rrrr                      3-   71 m1      .banksel ram_address
     00D8 04rr                      1- 1829     	SUBAR	(_R_AIN4_DATA + 1),W
     00D9 0903                      1- 1830     	BTRSS	STATUS,2
     00DA 3rrr                      1- 1831     	LGOTO	_00738_DS_
     00DB 217D                      1- 1832     	MOVIA	0x7d
     00DC 04rr                      1- 1833     	SUBAR	_R_AIN4_DATA,W
     00DD                           1- 1834     _00738_DS_:
     00DD 0803                      1- 1835     	BTRSS	STATUS,0
     00DE 3rrr                      1- 1836     	LGOTO	_00570_DS_
                                    1- 1837     	.line	720, "main.c"; 	if(pwStep == 6)
                                    1- 1838     	BANKSEL	_pwStep
     00DF rrrr                      3-   71 m1      .banksel ram_address
     00E0 01rr                      1- 1839     	MOVR	_pwStep,W
     00E1 2406                      1- 1840     	XORIA	0x06
     00E2 0903                      1- 1841     	BTRSS	STATUS,2
     00E3 3rrr                      1- 1842     	LGOTO	_00496_DS_
                                    1- 1843     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1844     ;;unsigned compare: left >= lit (0x182=386), size=2
                                    1- 1845     	.line	722, "main.c"; 	if(R_AIN4_DATA > 385)
     00E4 2101                      1- 1846     	MOVIA	0x01
                                    1- 1847     	BANKSEL	_R_AIN4_DATA
     00E5 rrrr                      3-   71 m1      .banksel ram_address
     00E6 04rr                      1- 1848     	SUBAR	(_R_AIN4_DATA + 1),W
     00E7 0903                      1- 1849     	BTRSS	STATUS,2
     00E8 3rrr                      1- 1850     	LGOTO	_00739_DS_
     00E9 2182                      1- 1851     	MOVIA	0x82
     00EA 04rr                      1- 1852     	SUBAR	_R_AIN4_DATA,W
     00EB                           1- 1853     _00739_DS_:
     00EB 0803                      1- 1854     	BTRSS	STATUS,0
     00EC 3rrr                      1- 1855     	LGOTO	_00496_DS_
                                    1- 1856     	.line	723, "main.c"; 	pwStep = 7;
     00ED 2107                      1- 1857     	MOVIA	0x07
                                    1- 1858     	BANKSEL	_pwStep
     00EE rrrr                      3-   71 m1      .banksel ram_address
     00EF 00rr                      1- 1859     	MOVAR	_pwStep
                                    1- 1860     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1861     ;;unsigned compare: left >= lit (0x8=8), size=1
     00F0                           1- 1862     _00496_DS_:
                                    1- 1863     	.line	725, "main.c"; 	if(pwStep > 7)
     00F0 2108                      1- 1864     	MOVIA	0x08
                                    1- 1865     	BANKSEL	_pwStep
     00F1 rrrr                      3-   71 m1      .banksel ram_address
     00F2 04rr                      1- 1866     	SUBAR	_pwStep,W
     00F3 0803                      1- 1867     	BTRSS	STATUS,0
     00F4 3rrr                      1- 1868     	LGOTO	_00500_DS_
                                    1- 1869     ;;unsigned compare: left < lit (0x186=390), size=2
                                    1- 1870     	.line	727, "main.c"; 	if(R_AIN4_DATA < 390)
     00F5 2101                      1- 1871     	MOVIA	0x01
                                    1- 1872     	BANKSEL	_R_AIN4_DATA
     00F6 rrrr                      3-   71 m1      .banksel ram_address
     00F7 04rr                      1- 1873     	SUBAR	(_R_AIN4_DATA + 1),W
     00F8 0903                      1- 1874     	BTRSS	STATUS,2
     00F9 3rrr                      1- 1875     	LGOTO	_00741_DS_
     00FA 2186                      1- 1876     	MOVIA	0x86
     00FB 04rr                      1- 1877     	SUBAR	_R_AIN4_DATA,W
     00FC                           1- 1878     _00741_DS_:
     00FC 0C03                      1- 1879     	BTRSC	STATUS,0
     00FD 3rrr                      1- 1880     	LGOTO	_00501_DS_
                                    1- 1881     	.line	728, "main.c"; 	pwStep = 7;
     00FE 2107                      1- 1882     	MOVIA	0x07
                                    1- 1883     	BANKSEL	_pwStep
     00FF rrrr                      3-   71 m1      .banksel ram_address
     0100 00rr                      1- 1884     	MOVAR	_pwStep
     0101 3rrr                      1- 1885     	LGOTO	_00501_DS_
     0102                           1- 1886     _00500_DS_:
                                    1- 1887     	.line	731, "main.c"; 	pwStep = 7;
     0102 2107                      1- 1888     	MOVIA	0x07
                                    1- 1889     	BANKSEL	_pwStep
     0103 rrrr                      3-   71 m1      .banksel ram_address
     0104 00rr                      1- 1890     	MOVAR	_pwStep
     0105                           1- 1891     _00501_DS_:
                                    1- 1892     	.line	732, "main.c"; 	chrgTime = 0;
                                    1- 1893     	BANKSEL	_chrgTime
     0105 rrrr                      3-   71 m1      .banksel ram_address
     0106 02rr                      1- 1894     	CLRR	_chrgTime
     0107 02rr                      1- 1895     	CLRR	(_chrgTime + 1)
     0108 3rrr                      1- 1896     	LGOTO	_00578_DS_
                                    1- 1897     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1898     ;;unsigned compare: left >= lit (0x15A=346), size=2
     0109                           1- 1899     _00570_DS_:
                                    1- 1900     	.line	734, "main.c"; 	else if(R_AIN4_DATA > 345)
     0109 2101                      1- 1901     	MOVIA	0x01
                                    1- 1902     	BANKSEL	_R_AIN4_DATA
     010A rrrr                      3-   71 m1      .banksel ram_address
     010B 04rr                      1- 1903     	SUBAR	(_R_AIN4_DATA + 1),W
     010C 0903                      1- 1904     	BTRSS	STATUS,2
     010D 3rrr                      1- 1905     	LGOTO	_00742_DS_
     010E 215A                      1- 1906     	MOVIA	0x5a
     010F 04rr                      1- 1907     	SUBAR	_R_AIN4_DATA,W
     0110                           1- 1908     _00742_DS_:
     0110 0803                      1- 1909     	BTRSS	STATUS,0
     0111 3rrr                      1- 1910     	LGOTO	_00567_DS_
                                    1- 1911     	.line	737, "main.c"; 	if(pwStep == 5)
                                    1- 1912     	BANKSEL	_pwStep
     0112 rrrr                      3-   71 m1      .banksel ram_address
     0113 01rr                      1- 1913     	MOVR	_pwStep,W
     0114 2405                      1- 1914     	XORIA	0x05
     0115 0903                      1- 1915     	BTRSS	STATUS,2
     0116 3rrr                      1- 1916     	LGOTO	_00505_DS_
                                    1- 1917     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1918     ;;unsigned compare: left >= lit (0x15F=351), size=2
                                    1- 1919     	.line	739, "main.c"; 	if(R_AIN4_DATA > 350)
     0117 2101                      1- 1920     	MOVIA	0x01
                                    1- 1921     	BANKSEL	_R_AIN4_DATA
     0118 rrrr                      3-   71 m1      .banksel ram_address
     0119 04rr                      1- 1922     	SUBAR	(_R_AIN4_DATA + 1),W
     011A 0903                      1- 1923     	BTRSS	STATUS,2
     011B 3rrr                      1- 1924     	LGOTO	_00743_DS_
     011C 215F                      1- 1925     	MOVIA	0x5f
     011D 04rr                      1- 1926     	SUBAR	_R_AIN4_DATA,W
     011E                           1- 1927     _00743_DS_:
     011E 0803                      1- 1928     	BTRSS	STATUS,0
     011F 3rrr                      1- 1929     	LGOTO	_00505_DS_
                                    1- 1930     	.line	740, "main.c"; 	pwStep = 6;
     0120 2106                      1- 1931     	MOVIA	0x06
                                    1- 1932     	BANKSEL	_pwStep
     0121 rrrr                      3-   71 m1      .banksel ram_address
     0122 00rr                      1- 1933     	MOVAR	_pwStep
                                    1- 1934     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1935     ;;unsigned compare: left >= lit (0x7=7), size=1
     0123                           1- 1936     _00505_DS_:
                                    1- 1937     	.line	742, "main.c"; 	if(pwStep > 6)
     0123 2107                      1- 1938     	MOVIA	0x07
                                    1- 1939     	BANKSEL	_pwStep
     0124 rrrr                      3-   71 m1      .banksel ram_address
     0125 04rr                      1- 1940     	SUBAR	_pwStep,W
     0126 0803                      1- 1941     	BTRSS	STATUS,0
     0127 3rrr                      1- 1942     	LGOTO	_00509_DS_
                                    1- 1943     ;;unsigned compare: left < lit (0x177=375), size=2
                                    1- 1944     	.line	744, "main.c"; 	if(R_AIN4_DATA < 375)
     0128 2101                      1- 1945     	MOVIA	0x01
                                    1- 1946     	BANKSEL	_R_AIN4_DATA
     0129 rrrr                      3-   71 m1      .banksel ram_address
     012A 04rr                      1- 1947     	SUBAR	(_R_AIN4_DATA + 1),W
     012B 0903                      1- 1948     	BTRSS	STATUS,2
     012C 3rrr                      1- 1949     	LGOTO	_00745_DS_
     012D 2177                      1- 1950     	MOVIA	0x77
     012E 04rr                      1- 1951     	SUBAR	_R_AIN4_DATA,W
     012F                           1- 1952     _00745_DS_:
     012F 0C03                      1- 1953     	BTRSC	STATUS,0
     0130 3rrr                      1- 1954     	LGOTO	_00510_DS_
                                    1- 1955     	.line	745, "main.c"; 	pwStep = 6;
     0131 2106                      1- 1956     	MOVIA	0x06
                                    1- 1957     	BANKSEL	_pwStep
     0132 rrrr                      3-   71 m1      .banksel ram_address
     0133 00rr                      1- 1958     	MOVAR	_pwStep
     0134 3rrr                      1- 1959     	LGOTO	_00510_DS_
     0135                           1- 1960     _00509_DS_:
                                    1- 1961     	.line	748, "main.c"; 	pwStep = 6;
     0135 2106                      1- 1962     	MOVIA	0x06
                                    1- 1963     	BANKSEL	_pwStep
     0136 rrrr                      3-   71 m1      .banksel ram_address
     0137 00rr                      1- 1964     	MOVAR	_pwStep
     0138                           1- 1965     _00510_DS_:
                                    1- 1966     	.line	749, "main.c"; 	chrgTime = 0;
                                    1- 1967     	BANKSEL	_chrgTime
     0138 rrrr                      3-   71 m1      .banksel ram_address
     0139 02rr                      1- 1968     	CLRR	_chrgTime
     013A 02rr                      1- 1969     	CLRR	(_chrgTime + 1)
     013B 3rrr                      1- 1970     	LGOTO	_00578_DS_
                                    1- 1971     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1972     ;;unsigned compare: left >= lit (0x132=306), size=2
     013C                           1- 1973     _00567_DS_:
                                    1- 1974     	.line	751, "main.c"; 	else if(R_AIN4_DATA > 305)
     013C 2101                      1- 1975     	MOVIA	0x01
                                    1- 1976     	BANKSEL	_R_AIN4_DATA
     013D rrrr                      3-   71 m1      .banksel ram_address
     013E 04rr                      1- 1977     	SUBAR	(_R_AIN4_DATA + 1),W
     013F 0903                      1- 1978     	BTRSS	STATUS,2
     0140 3rrr                      1- 1979     	LGOTO	_00746_DS_
     0141 2132                      1- 1980     	MOVIA	0x32
     0142 04rr                      1- 1981     	SUBAR	_R_AIN4_DATA,W
     0143                           1- 1982     _00746_DS_:
     0143 0803                      1- 1983     	BTRSS	STATUS,0
     0144 3rrr                      1- 1984     	LGOTO	_00564_DS_
                                    1- 1985     	.line	754, "main.c"; 	if(pwStep == 4)
                                    1- 1986     	BANKSEL	_pwStep
     0145 rrrr                      3-   71 m1      .banksel ram_address
     0146 01rr                      1- 1987     	MOVR	_pwStep,W
     0147 2404                      1- 1988     	XORIA	0x04
     0148 0903                      1- 1989     	BTRSS	STATUS,2
     0149 3rrr                      1- 1990     	LGOTO	_00514_DS_
                                    1- 1991     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1992     ;;unsigned compare: left >= lit (0x137=311), size=2
                                    1- 1993     	.line	756, "main.c"; 	if(R_AIN4_DATA > 310)
     014A 2101                      1- 1994     	MOVIA	0x01
                                    1- 1995     	BANKSEL	_R_AIN4_DATA
     014B rrrr                      3-   71 m1      .banksel ram_address
     014C 04rr                      1- 1996     	SUBAR	(_R_AIN4_DATA + 1),W
     014D 0903                      1- 1997     	BTRSS	STATUS,2
     014E 3rrr                      1- 1998     	LGOTO	_00747_DS_
     014F 2137                      1- 1999     	MOVIA	0x37
     0150 04rr                      1- 2000     	SUBAR	_R_AIN4_DATA,W
     0151                           1- 2001     _00747_DS_:
     0151 0803                      1- 2002     	BTRSS	STATUS,0
     0152 3rrr                      1- 2003     	LGOTO	_00514_DS_
                                    1- 2004     	.line	757, "main.c"; 	pwStep = 5;
     0153 2105                      1- 2005     	MOVIA	0x05
                                    1- 2006     	BANKSEL	_pwStep
     0154 rrrr                      3-   71 m1      .banksel ram_address
     0155 00rr                      1- 2007     	MOVAR	_pwStep
                                    1- 2008     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2009     ;;unsigned compare: left >= lit (0x6=6), size=1
     0156                           1- 2010     _00514_DS_:
                                    1- 2011     	.line	759, "main.c"; 	if(pwStep > 5)
     0156 2106                      1- 2012     	MOVIA	0x06
                                    1- 2013     	BANKSEL	_pwStep
     0157 rrrr                      3-   71 m1      .banksel ram_address
     0158 04rr                      1- 2014     	SUBAR	_pwStep,W
     0159 0803                      1- 2015     	BTRSS	STATUS,0
     015A 3rrr                      1- 2016     	LGOTO	_00518_DS_
                                    1- 2017     ;;unsigned compare: left < lit (0x154=340), size=2
                                    1- 2018     	.line	761, "main.c"; 	if(R_AIN4_DATA < 340)
     015B 2101                      1- 2019     	MOVIA	0x01
                                    1- 2020     	BANKSEL	_R_AIN4_DATA
     015C rrrr                      3-   71 m1      .banksel ram_address
     015D 04rr                      1- 2021     	SUBAR	(_R_AIN4_DATA + 1),W
     015E 0903                      1- 2022     	BTRSS	STATUS,2
     015F 3rrr                      1- 2023     	LGOTO	_00749_DS_
     0160 2154                      1- 2024     	MOVIA	0x54
     0161 04rr                      1- 2025     	SUBAR	_R_AIN4_DATA,W
     0162                           1- 2026     _00749_DS_:
     0162 0C03                      1- 2027     	BTRSC	STATUS,0
     0163 3rrr                      1- 2028     	LGOTO	_00519_DS_
                                    1- 2029     	.line	762, "main.c"; 	pwStep = 5;
     0164 2105                      1- 2030     	MOVIA	0x05
                                    1- 2031     	BANKSEL	_pwStep
     0165 rrrr                      3-   71 m1      .banksel ram_address
     0166 00rr                      1- 2032     	MOVAR	_pwStep
     0167 3rrr                      1- 2033     	LGOTO	_00519_DS_
     0168                           1- 2034     _00518_DS_:
                                    1- 2035     	.line	765, "main.c"; 	pwStep = 5;
     0168 2105                      1- 2036     	MOVIA	0x05
                                    1- 2037     	BANKSEL	_pwStep
     0169 rrrr                      3-   71 m1      .banksel ram_address
     016A 00rr                      1- 2038     	MOVAR	_pwStep
     016B                           1- 2039     _00519_DS_:
                                    1- 2040     	.line	766, "main.c"; 	chrgTime = 0;
                                    1- 2041     	BANKSEL	_chrgTime
     016B rrrr                      3-   71 m1      .banksel ram_address
     016C 02rr                      1- 2042     	CLRR	_chrgTime
     016D 02rr                      1- 2043     	CLRR	(_chrgTime + 1)
     016E 3rrr                      1- 2044     	LGOTO	_00578_DS_
                                    1- 2045     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2046     ;;unsigned compare: left >= lit (0xF1=241), size=2
     016F                           1- 2047     _00564_DS_:
                                    1- 2048     	.line	768, "main.c"; 	else if(R_AIN4_DATA > 240)
     016F 2100                      1- 2049     	MOVIA	0x00
                                    1- 2050     	BANKSEL	_R_AIN4_DATA
     0170 rrrr                      3-   71 m1      .banksel ram_address
     0171 04rr                      1- 2051     	SUBAR	(_R_AIN4_DATA + 1),W
     0172 0903                      1- 2052     	BTRSS	STATUS,2
     0173 3rrr                      1- 2053     	LGOTO	_00750_DS_
     0174 21F1                      1- 2054     	MOVIA	0xf1
     0175 04rr                      1- 2055     	SUBAR	_R_AIN4_DATA,W
     0176                           1- 2056     _00750_DS_:
     0176 0803                      1- 2057     	BTRSS	STATUS,0
     0177 3rrr                      1- 2058     	LGOTO	_00561_DS_
                                    1- 2059     	.line	770, "main.c"; 	if(pwStep == 3)
                                    1- 2060     	BANKSEL	_pwStep
     0178 rrrr                      3-   71 m1      .banksel ram_address
     0179 01rr                      1- 2061     	MOVR	_pwStep,W
     017A 2403                      1- 2062     	XORIA	0x03
     017B 0903                      1- 2063     	BTRSS	STATUS,2
     017C 3rrr                      1- 2064     	LGOTO	_00523_DS_
                                    1- 2065     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2066     ;;unsigned compare: left >= lit (0xF6=246), size=2
                                    1- 2067     	.line	772, "main.c"; 	if(R_AIN4_DATA > 245)
     017D 2100                      1- 2068     	MOVIA	0x00
                                    1- 2069     	BANKSEL	_R_AIN4_DATA
     017E rrrr                      3-   71 m1      .banksel ram_address
     017F 04rr                      1- 2070     	SUBAR	(_R_AIN4_DATA + 1),W
     0180 0903                      1- 2071     	BTRSS	STATUS,2
     0181 3rrr                      1- 2072     	LGOTO	_00751_DS_
     0182 21F6                      1- 2073     	MOVIA	0xf6
     0183 04rr                      1- 2074     	SUBAR	_R_AIN4_DATA,W
     0184                           1- 2075     _00751_DS_:
     0184 0803                      1- 2076     	BTRSS	STATUS,0
     0185 3rrr                      1- 2077     	LGOTO	_00523_DS_
                                    1- 2078     	.line	773, "main.c"; 	pwStep = 4;
     0186 2104                      1- 2079     	MOVIA	0x04
                                    1- 2080     	BANKSEL	_pwStep
     0187 rrrr                      3-   71 m1      .banksel ram_address
     0188 00rr                      1- 2081     	MOVAR	_pwStep
                                    1- 2082     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2083     ;;unsigned compare: left >= lit (0x5=5), size=1
     0189                           1- 2084     _00523_DS_:
                                    1- 2085     	.line	775, "main.c"; 	if(pwStep > 4)
     0189 2105                      1- 2086     	MOVIA	0x05
                                    1- 2087     	BANKSEL	_pwStep
     018A rrrr                      3-   71 m1      .banksel ram_address
     018B 04rr                      1- 2088     	SUBAR	_pwStep,W
     018C 0803                      1- 2089     	BTRSS	STATUS,0
     018D 3rrr                      1- 2090     	LGOTO	_00527_DS_
                                    1- 2091     ;;unsigned compare: left < lit (0x12C=300), size=2
                                    1- 2092     	.line	777, "main.c"; 	if(R_AIN4_DATA < 300)
     018E 2101                      1- 2093     	MOVIA	0x01
                                    1- 2094     	BANKSEL	_R_AIN4_DATA
     018F rrrr                      3-   71 m1      .banksel ram_address
     0190 04rr                      1- 2095     	SUBAR	(_R_AIN4_DATA + 1),W
     0191 0903                      1- 2096     	BTRSS	STATUS,2
     0192 3rrr                      1- 2097     	LGOTO	_00753_DS_
     0193 212C                      1- 2098     	MOVIA	0x2c
     0194 04rr                      1- 2099     	SUBAR	_R_AIN4_DATA,W
     0195                           1- 2100     _00753_DS_:
     0195 0C03                      1- 2101     	BTRSC	STATUS,0
     0196 3rrr                      1- 2102     	LGOTO	_00528_DS_
                                    1- 2103     	.line	778, "main.c"; 	pwStep = 4;
     0197 2104                      1- 2104     	MOVIA	0x04
                                    1- 2105     	BANKSEL	_pwStep
     0198 rrrr                      3-   71 m1      .banksel ram_address
     0199 00rr                      1- 2106     	MOVAR	_pwStep
     019A 3rrr                      1- 2107     	LGOTO	_00528_DS_
     019B                           1- 2108     _00527_DS_:
                                    1- 2109     	.line	781, "main.c"; 	pwStep = 4;
     019B 2104                      1- 2110     	MOVIA	0x04
                                    1- 2111     	BANKSEL	_pwStep
     019C rrrr                      3-   71 m1      .banksel ram_address
     019D 00rr                      1- 2112     	MOVAR	_pwStep
     019E                           1- 2113     _00528_DS_:
                                    1- 2114     	.line	782, "main.c"; 	chrgTime = 0;
                                    1- 2115     	BANKSEL	_chrgTime
     019E rrrr                      3-   71 m1      .banksel ram_address
     019F 02rr                      1- 2116     	CLRR	_chrgTime
     01A0 02rr                      1- 2117     	CLRR	(_chrgTime + 1)
     01A1 3rrr                      1- 2118     	LGOTO	_00578_DS_
                                    1- 2119     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2120     ;;unsigned compare: left >= lit (0xC9=201), size=2
     01A2                           1- 2121     _00561_DS_:
                                    1- 2122     	.line	784, "main.c"; 	else if(R_AIN4_DATA > 200)
     01A2 2100                      1- 2123     	MOVIA	0x00
                                    1- 2124     	BANKSEL	_R_AIN4_DATA
     01A3 rrrr                      3-   71 m1      .banksel ram_address
     01A4 04rr                      1- 2125     	SUBAR	(_R_AIN4_DATA + 1),W
     01A5 0903                      1- 2126     	BTRSS	STATUS,2
     01A6 3rrr                      1- 2127     	LGOTO	_00754_DS_
     01A7 21C9                      1- 2128     	MOVIA	0xc9
     01A8 04rr                      1- 2129     	SUBAR	_R_AIN4_DATA,W
     01A9                           1- 2130     _00754_DS_:
     01A9 0803                      1- 2131     	BTRSS	STATUS,0
     01AA 3rrr                      1- 2132     	LGOTO	_00558_DS_
                                    1- 2133     	.line	786, "main.c"; 	if(pwStep == 2)
                                    1- 2134     	BANKSEL	_pwStep
     01AB rrrr                      3-   71 m1      .banksel ram_address
     01AC 01rr                      1- 2135     	MOVR	_pwStep,W
     01AD 2402                      1- 2136     	XORIA	0x02
     01AE 0903                      1- 2137     	BTRSS	STATUS,2
     01AF 3rrr                      1- 2138     	LGOTO	_00532_DS_
                                    1- 2139     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2140     ;;unsigned compare: left >= lit (0xD3=211), size=2
                                    1- 2141     	.line	788, "main.c"; 	if(R_AIN4_DATA > 210)
     01B0 2100                      1- 2142     	MOVIA	0x00
                                    1- 2143     	BANKSEL	_R_AIN4_DATA
     01B1 rrrr                      3-   71 m1      .banksel ram_address
     01B2 04rr                      1- 2144     	SUBAR	(_R_AIN4_DATA + 1),W
     01B3 0903                      1- 2145     	BTRSS	STATUS,2
     01B4 3rrr                      1- 2146     	LGOTO	_00755_DS_
     01B5 21D3                      1- 2147     	MOVIA	0xd3
     01B6 04rr                      1- 2148     	SUBAR	_R_AIN4_DATA,W
     01B7                           1- 2149     _00755_DS_:
     01B7 0803                      1- 2150     	BTRSS	STATUS,0
     01B8 3rrr                      1- 2151     	LGOTO	_00532_DS_
                                    1- 2152     	.line	789, "main.c"; 	pwStep = 3;
     01B9 2103                      1- 2153     	MOVIA	0x03
                                    1- 2154     	BANKSEL	_pwStep
     01BA rrrr                      3-   71 m1      .banksel ram_address
     01BB 00rr                      1- 2155     	MOVAR	_pwStep
                                    1- 2156     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2157     ;;unsigned compare: left >= lit (0x4=4), size=1
     01BC                           1- 2158     _00532_DS_:
                                    1- 2159     	.line	791, "main.c"; 	if(pwStep > 3)
     01BC 2104                      1- 2160     	MOVIA	0x04
                                    1- 2161     	BANKSEL	_pwStep
     01BD rrrr                      3-   71 m1      .banksel ram_address
     01BE 04rr                      1- 2162     	SUBAR	_pwStep,W
     01BF 0803                      1- 2163     	BTRSS	STATUS,0
     01C0 3rrr                      1- 2164     	LGOTO	_00536_DS_
                                    1- 2165     ;;unsigned compare: left < lit (0xEB=235), size=2
                                    1- 2166     	.line	793, "main.c"; 	if(R_AIN4_DATA < 235)
     01C1 2100                      1- 2167     	MOVIA	0x00
                                    1- 2168     	BANKSEL	_R_AIN4_DATA
     01C2 rrrr                      3-   71 m1      .banksel ram_address
     01C3 04rr                      1- 2169     	SUBAR	(_R_AIN4_DATA + 1),W
     01C4 0903                      1- 2170     	BTRSS	STATUS,2
     01C5 3rrr                      1- 2171     	LGOTO	_00757_DS_
     01C6 21EB                      1- 2172     	MOVIA	0xeb
     01C7 04rr                      1- 2173     	SUBAR	_R_AIN4_DATA,W
     01C8                           1- 2174     _00757_DS_:
     01C8 0C03                      1- 2175     	BTRSC	STATUS,0
     01C9 3rrr                      1- 2176     	LGOTO	_00537_DS_
                                    1- 2177     	.line	794, "main.c"; 	pwStep = 3;
     01CA 2103                      1- 2178     	MOVIA	0x03
                                    1- 2179     	BANKSEL	_pwStep
     01CB rrrr                      3-   71 m1      .banksel ram_address
     01CC 00rr                      1- 2180     	MOVAR	_pwStep
     01CD 3rrr                      1- 2181     	LGOTO	_00537_DS_
     01CE                           1- 2182     _00536_DS_:
                                    1- 2183     	.line	797, "main.c"; 	pwStep = 3;
     01CE 2103                      1- 2184     	MOVIA	0x03
                                    1- 2185     	BANKSEL	_pwStep
     01CF rrrr                      3-   71 m1      .banksel ram_address
     01D0 00rr                      1- 2186     	MOVAR	_pwStep
     01D1                           1- 2187     _00537_DS_:
                                    1- 2188     	.line	798, "main.c"; 	chrgTime = 0;
                                    1- 2189     	BANKSEL	_chrgTime
     01D1 rrrr                      3-   71 m1      .banksel ram_address
     01D2 02rr                      1- 2190     	CLRR	_chrgTime
     01D3 02rr                      1- 2191     	CLRR	(_chrgTime + 1)
     01D4 3rrr                      1- 2192     	LGOTO	_00578_DS_
                                    1- 2193     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2194     ;;unsigned compare: left >= lit (0x65=101), size=2
     01D5                           1- 2195     _00558_DS_:
                                    1- 2196     	.line	800, "main.c"; 	else if(R_AIN4_DATA > 100)
     01D5 2100                      1- 2197     	MOVIA	0x00
                                    1- 2198     	BANKSEL	_R_AIN4_DATA
     01D6 rrrr                      3-   71 m1      .banksel ram_address
     01D7 04rr                      1- 2199     	SUBAR	(_R_AIN4_DATA + 1),W
     01D8 0903                      1- 2200     	BTRSS	STATUS,2
     01D9 3rrr                      1- 2201     	LGOTO	_00758_DS_
     01DA 2165                      1- 2202     	MOVIA	0x65
     01DB 04rr                      1- 2203     	SUBAR	_R_AIN4_DATA,W
     01DC                           1- 2204     _00758_DS_:
     01DC 0803                      1- 2205     	BTRSS	STATUS,0
     01DD 3rrr                      1- 2206     	LGOTO	_00555_DS_
                                    1- 2207     	.line	803, "main.c"; 	if(pwStep == 1)
                                    1- 2208     	BANKSEL	_pwStep
     01DE rrrr                      3-   71 m1      .banksel ram_address
     01DF 01rr                      1- 2209     	MOVR	_pwStep,W
     01E0 2401                      1- 2210     	XORIA	0x01
     01E1 0903                      1- 2211     	BTRSS	STATUS,2
     01E2 3rrr                      1- 2212     	LGOTO	_00541_DS_
                                    1- 2213     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2214     ;;unsigned compare: left >= lit (0x6F=111), size=2
                                    1- 2215     	.line	805, "main.c"; 	if(R_AIN4_DATA > 110)
     01E3 2100                      1- 2216     	MOVIA	0x00
                                    1- 2217     	BANKSEL	_R_AIN4_DATA
     01E4 rrrr                      3-   71 m1      .banksel ram_address
     01E5 04rr                      1- 2218     	SUBAR	(_R_AIN4_DATA + 1),W
     01E6 0903                      1- 2219     	BTRSS	STATUS,2
     01E7 3rrr                      1- 2220     	LGOTO	_00759_DS_
     01E8 216F                      1- 2221     	MOVIA	0x6f
     01E9 04rr                      1- 2222     	SUBAR	_R_AIN4_DATA,W
     01EA                           1- 2223     _00759_DS_:
     01EA 0803                      1- 2224     	BTRSS	STATUS,0
     01EB 3rrr                      1- 2225     	LGOTO	_00541_DS_
                                    1- 2226     	.line	806, "main.c"; 	pwStep = 2;
     01EC 2102                      1- 2227     	MOVIA	0x02
                                    1- 2228     	BANKSEL	_pwStep
     01ED rrrr                      3-   71 m1      .banksel ram_address
     01EE 00rr                      1- 2229     	MOVAR	_pwStep
                                    1- 2230     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2231     ;;unsigned compare: left >= lit (0x3=3), size=1
     01EF                           1- 2232     _00541_DS_:
                                    1- 2233     	.line	808, "main.c"; 	if(pwStep > 2)
     01EF 2103                      1- 2234     	MOVIA	0x03
                                    1- 2235     	BANKSEL	_pwStep
     01F0 rrrr                      3-   71 m1      .banksel ram_address
     01F1 04rr                      1- 2236     	SUBAR	_pwStep,W
     01F2 0803                      1- 2237     	BTRSS	STATUS,0
     01F3 3rrr                      1- 2238     	LGOTO	_00545_DS_
                                    1- 2239     ;;unsigned compare: left < lit (0xBE=190), size=2
                                    1- 2240     	.line	810, "main.c"; 	if(R_AIN4_DATA < 190)
     01F4 2100                      1- 2241     	MOVIA	0x00
                                    1- 2242     	BANKSEL	_R_AIN4_DATA
     01F5 rrrr                      3-   71 m1      .banksel ram_address
     01F6 04rr                      1- 2243     	SUBAR	(_R_AIN4_DATA + 1),W
     01F7 0903                      1- 2244     	BTRSS	STATUS,2
     01F8 3rrr                      1- 2245     	LGOTO	_00761_DS_
     01F9 21BE                      1- 2246     	MOVIA	0xbe
     01FA 04rr                      1- 2247     	SUBAR	_R_AIN4_DATA,W
     01FB                           1- 2248     _00761_DS_:
     01FB 0C03                      1- 2249     	BTRSC	STATUS,0
     01FC 3rrr                      1- 2250     	LGOTO	_00546_DS_
                                    1- 2251     	.line	811, "main.c"; 	pwStep = 2;
     01FD 2102                      1- 2252     	MOVIA	0x02
                                    1- 2253     	BANKSEL	_pwStep
     01FE rrrr                      3-   71 m1      .banksel ram_address
     01FF 00rr                      1- 2254     	MOVAR	_pwStep
     0200 3rrr                      1- 2255     	LGOTO	_00546_DS_
     0201                           1- 2256     _00545_DS_:
                                    1- 2257     	.line	814, "main.c"; 	pwStep = 2;
     0201 2102                      1- 2258     	MOVIA	0x02
                                    1- 2259     	BANKSEL	_pwStep
     0202 rrrr                      3-   71 m1      .banksel ram_address
     0203 00rr                      1- 2260     	MOVAR	_pwStep
     0204                           1- 2261     _00546_DS_:
                                    1- 2262     	.line	815, "main.c"; 	chrgTime = 0;
                                    1- 2263     	BANKSEL	_chrgTime
     0204 rrrr                      3-   71 m1      .banksel ram_address
     0205 02rr                      1- 2264     	CLRR	_chrgTime
     0206 02rr                      1- 2265     	CLRR	(_chrgTime + 1)
     0207 3rrr                      1- 2266     	LGOTO	_00578_DS_
     0208                           1- 2267     _00555_DS_:
                                    1- 2268     	.line	817, "main.c"; 	else  if(R_AIN4_DATA > 0)
                                    1- 2269     	BANKSEL	_R_AIN4_DATA
     0208 rrrr                      3-   71 m1      .banksel ram_address
     0209 01rr                      1- 2270     	MOVR	_R_AIN4_DATA,W
     020A 11rr                      1- 2271     	IORAR	(_R_AIN4_DATA + 1),W
     020B 0D03                      1- 2272     	BTRSC	STATUS,2
     020C 3rrr                      1- 2273     	LGOTO	_00578_DS_
                                    1- 2274     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2275     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 2276     	.line	820, "main.c"; 	if(pwStep > 1)
     020D 2102                      1- 2277     	MOVIA	0x02
                                    1- 2278     	BANKSEL	_pwStep
     020E rrrr                      3-   71 m1      .banksel ram_address
     020F 04rr                      1- 2279     	SUBAR	_pwStep,W
     0210 0803                      1- 2280     	BTRSS	STATUS,0
     0211 3rrr                      1- 2281     	LGOTO	_00550_DS_
                                    1- 2282     ;;unsigned compare: left < lit (0x5A=90), size=2
                                    1- 2283     	.line	822, "main.c"; 	if(R_AIN4_DATA < 90)
     0212 2100                      1- 2284     	MOVIA	0x00
                                    1- 2285     	BANKSEL	_R_AIN4_DATA
     0213 rrrr                      3-   71 m1      .banksel ram_address
     0214 04rr                      1- 2286     	SUBAR	(_R_AIN4_DATA + 1),W
     0215 0903                      1- 2287     	BTRSS	STATUS,2
     0216 3rrr                      1- 2288     	LGOTO	_00763_DS_
     0217 215A                      1- 2289     	MOVIA	0x5a
     0218 04rr                      1- 2290     	SUBAR	_R_AIN4_DATA,W
     0219                           1- 2291     _00763_DS_:
     0219 0C03                      1- 2292     	BTRSC	STATUS,0
     021A 3rrr                      1- 2293     	LGOTO	_00551_DS_
                                    1- 2294     	.line	823, "main.c"; 	pwStep = 1;
     021B 2101                      1- 2295     	MOVIA	0x01
                                    1- 2296     	BANKSEL	_pwStep
     021C rrrr                      3-   71 m1      .banksel ram_address
     021D 00rr                      1- 2297     	MOVAR	_pwStep
     021E 3rrr                      1- 2298     	LGOTO	_00551_DS_
     021F                           1- 2299     _00550_DS_:
                                    1- 2300     	.line	826, "main.c"; 	pwStep = 1;
     021F 2101                      1- 2301     	MOVIA	0x01
                                    1- 2302     	BANKSEL	_pwStep
     0220 rrrr                      3-   71 m1      .banksel ram_address
     0221 00rr                      1- 2303     	MOVAR	_pwStep
     0222                           1- 2304     _00551_DS_:
                                    1- 2305     	.line	827, "main.c"; 	chrgTime = 0;
                                    1- 2306     	BANKSEL	_chrgTime
     0222 rrrr                      3-   71 m1      .banksel ram_address
     0223 02rr                      1- 2307     	CLRR	_chrgTime
     0224 02rr                      1- 2308     	CLRR	(_chrgTime + 1)
     0225                           1- 2309     _00578_DS_:
                                    1- 2310     	.line	831, "main.c"; 	}
                                    1- 2311     	RETURN	
     0225 0010                      3-   26 m1      ret
                                    1- 2312     ; exit point of _checkBatAD
                                    1- 2314     ;***
                                    1- 2315     ;  pBlock Stats: dbName = C
                                    1- 2316     ;***
                                    1- 2317     ;has an exit
                                    1- 2318     ;functions called:
                                    1- 2319     ;   _delay
                                    1- 2320     ;   _delay
                                    1- 2321     ;; Starting pCode block
                                    1- 2322     .segment "code"; module=main, function=_initAD
     0000                           1- 2324     _initAD:
                                    1- 2325     ; 2 exit points
                                    1- 2326     	.line	632, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 2327     	MOVIA	0x84
     0001 00rr                      1- 2328     	MOVAR	_ADMD
                                    1- 2329     	.line	637, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 2330     	CLRR	_ADVREFH
                                    1- 2331     	.line	642, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 2332     	MOVIA	0x10
     0004 00rr                      1- 2333     	MOVAR	_ADR
                                    1- 2334     	.line	644, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 2335     	MOVIA	0x03
     0006 00rr                      1- 2336     	MOVAR	_ADCR
                                    1- 2337     	.line	647, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 2338     	BSR	_ADMDbits,4
                                    1- 2339     	.line	648, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 2340     	MOVIA	0x64
     0009 2rrr                      1- 2341     	LCALL	_delay
                                    1- 2342     	.line	651, "main.c"; 	}
                                    1- 2343     	RETURN	
     000A 0010                      3-   26 m1      ret
                                    1- 2344     ; exit point of _initAD
                                    1- 2346     ;***
                                    1- 2347     ;  pBlock Stats: dbName = C
                                    1- 2348     ;***
                                    1- 2349     ;has an exit
                                    1- 2350     ;2 compiler assigned registers:
                                    1- 2351     ;   r0x102A
                                    1- 2352     ;   r0x102B
                                    1- 2353     ;; Starting pCode block
                                    1- 2354     .segment "code"; module=main, function=_delay
                                    1- 2356     ;local variable name mapping:
     0000                           1- 2359     _delay:
                                    1- 2360     ; 2 exit points
                                    1- 2361     	.line	622, "main.c"; 	void delay(u8t time)
                                    1- 2362     	BANKSEL	r0x102A
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 2363     	MOVAR	r0x102A
                                    1- 2364     	.line	624, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2365     	BANKSEL	r0x102B
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 2366     	CLRR	r0x102B
     0004                           1- 2367     _00455_DS_:
                                    1- 2368     	BANKSEL	r0x102A
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 2369     	MOVR	r0x102A,W
                                    1- 2370     	BANKSEL	r0x102B
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 04rr                      1- 2371     	SUBAR	r0x102B,W
     0008 0C03                      1- 2372     	BTRSC	STATUS,0
     0009 3rrr                      1- 2373     	LGOTO	_00457_DS_
                                    1- 2374     	.line	625, "main.c"; 	NOP();
     000A 0000                      1- 2375     	nop
                                    1- 2376     	.line	624, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2377     	BANKSEL	r0x102B
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 05rr                      1- 2378     	INCR	r0x102B,F
     000D 3rrr                      1- 2379     	LGOTO	_00455_DS_
     000E                           1- 2380     _00457_DS_:
                                    1- 2381     	.line	626, "main.c"; 	}
                                    1- 2382     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 2383     ; exit point of _delay
                                    1- 2385     ;***
                                    1- 2386     ;  pBlock Stats: dbName = C
                                    1- 2387     ;***
                                    1- 2388     ;has an exit
                                    1- 2389     ;functions called:
                                    1- 2390     ;   _pwmStop
                                    1- 2391     ;   _pwmStop
                                    1- 2392     ;1 compiler assigned register :
                                    1- 2393     ;   r0x1046
                                    1- 2394     ;; Starting pCode block
                                    1- 2395     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2397     _chrgCtr:
                                    1- 2398     ; 2 exit points
                                    1- 2399     	.line	565, "main.c"; 	if(PORTA & 0x20)
                                    1- 2400     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 0Arr                      1- 2401     	BTRSS	_PORTA,5
     0002 3rrr                      1- 2402     	LGOTO	_00446_DS_
                                    1- 2403     	.line	568, "main.c"; 	chrgFlag = 1;
     0003 2101                      1- 2404     	MOVIA	0x01
                                    1- 2405     	BANKSEL	_chrgFlag
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1- 2406     	MOVAR	_chrgFlag
                                    1- 2407     	.line	569, "main.c"; 	workStep = 0;
                                    1- 2408     	BANKSEL	_workStep
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1- 2409     	CLRR	_workStep
                                    1- 2410     	.line	570, "main.c"; 	ledLightTime = 0;
                                    1- 2411     	BANKSEL	_ledLightTime
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1- 2412     	CLRR	_ledLightTime
                                    1- 2413     	.line	571, "main.c"; 	pwmStop();
     000A 2rrr                      1- 2414     	LCALL	_pwmStop
                                    1- 2415     	.line	573, "main.c"; 	if(pwStep == 9)
                                    1- 2416     	BANKSEL	_pwStep
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 2417     	MOVR	_pwStep,W
     000D 2409                      1- 2418     	XORIA	0x09
     000E 0903                      1- 2419     	BTRSS	STATUS,2
     000F 3rrr                      1- 2420     	LGOTO	_00441_DS_
                                    1- 2421     	.line	576, "main.c"; 	ledStep = 8;
     0010 2108                      1- 2422     	MOVIA	0x08
                                    1- 2423     	BANKSEL	_ledStep
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 00rr                      1- 2424     	MOVAR	_ledStep
                                    1- 2425     	.line	577, "main.c"; 	if(++fullCount > 100)
                                    1- 2426     	BANKSEL	_fullCount
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 05rr                      1- 2427     	INCR	_fullCount,F
                                    1- 2428     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2429     ;;unsigned compare: left >= lit (0x65=101), size=1
     0015 2165                      1- 2430     	MOVIA	0x65
     0016 04rr                      1- 2431     	SUBAR	_fullCount,W
     0017 0803                      1- 2432     	BTRSS	STATUS,0
     0018 3rrr                      1- 2433     	LGOTO	_00432_DS_
                                    1- 2434     	.line	578, "main.c"; 	IOSTA |= 0x01;
     0019 001r                      1- 2435     	IOSTR	_IOSTA
                                    1- 2436     	BANKSEL	r0x1046
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 00rr                      1- 2437     	MOVAR	r0x1046
     001C 18rr                      1- 2438     	BSR	r0x1046,0
     001D 01rr                      1- 2439     	MOVR	r0x1046,W
     001E 000r                      1- 2440     	IOST	_IOSTA
     001F                           1- 2441     _00432_DS_:
                                    1- 2442     	.line	580, "main.c"; 	PORTA |= 0x04;		//打开充满提示灯
                                    1- 2443     	BANKSEL	_PORTA
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 19rr                      1- 2444     	BSR	_PORTA,2
     0021 3rrr                      1- 2445     	LGOTO	_00448_DS_
     0022                           1- 2446     _00441_DS_:
                                    1- 2447     	.line	585, "main.c"; 	PORTA &= 0xFB;		//关闭充满提示灯
                                    1- 2448     	BANKSEL	_PORTA
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 1Drr                      1- 2449     	BCR	_PORTA,2
                                    1- 2450     	.line	587, "main.c"; 	if(count500ms == 0)
                                    1- 2451     	BANKSEL	_count500ms
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 2452     	MOVR	_count500ms,W
     0026 0903                      1- 2453     	BTRSS	STATUS,2
     0027 3rrr                      1- 2454     	LGOTO	_00436_DS_
                                    1- 2455     	.line	589, "main.c"; 	if(++ledStep > 8)
                                    1- 2456     	BANKSEL	_ledStep
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 05rr                      1- 2457     	INCR	_ledStep,F
                                    1- 2458     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2459     ;;unsigned compare: left >= lit (0x9=9), size=1
     002A 2109                      1- 2460     	MOVIA	0x09
     002B 04rr                      1- 2461     	SUBAR	_ledStep,W
     002C 0803                      1- 2462     	BTRSS	STATUS,0
     002D 3rrr                      1- 2463     	LGOTO	_00436_DS_
                                    1- 2464     	.line	590, "main.c"; 	ledStep = pwStep - 1;
                                    1- 2465     	BANKSEL	_pwStep
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 06rr                      1- 2466     	DECR	_pwStep,W
                                    1- 2467     	BANKSEL	_ledStep
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 00rr                      1- 2468     	MOVAR	_ledStep
                                    1- 2469     ;;unsigned compare: left < lit (0x1E=30), size=1
     0032                           1- 2470     _00436_DS_:
                                    1- 2471     	.line	592, "main.c"; 	if(count500ms < 30)
     0032 211E                      1- 2472     	MOVIA	0x1e
                                    1- 2473     	BANKSEL	_count500ms
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 04rr                      1- 2474     	SUBAR	_count500ms,W
     0035 0C03                      1- 2475     	BTRSC	STATUS,0
     0036 3rrr                      1- 2476     	LGOTO	_00438_DS_
                                    1- 2477     	.line	594, "main.c"; 	PORTA |= 0x02;		//打开充电灯
                                    1- 2478     	BANKSEL	_PORTA
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 18rr                      1- 2479     	BSR	_PORTA,1
     0039 3rrr                      1- 2480     	LGOTO	_00439_DS_
     003A                           1- 2481     _00438_DS_:
                                    1- 2482     	.line	598, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
                                    1- 2483     	BANKSEL	_PORTA
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 1Crr                      1- 2484     	BCR	_PORTA,1
     003C                           1- 2485     _00439_DS_:
                                    1- 2486     	.line	601, "main.c"; 	IOSTA &= 0xFE;
     003C 001r                      1- 2487     	IOSTR	_IOSTA
                                    1- 2488     	BANKSEL	r0x1046
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 00rr                      1- 2489     	MOVAR	r0x1046
     003F 1Crr                      1- 2490     	BCR	r0x1046,0
     0040 01rr                      1- 2491     	MOVR	r0x1046,W
     0041 000r                      1- 2492     	IOST	_IOSTA
                                    1- 2493     	.line	602, "main.c"; 	PORTA |= 0x01;			//打开充电
                                    1- 2494     	BANKSEL	_PORTA
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 18rr                      1- 2495     	BSR	_PORTA,0
     0044 3rrr                      1- 2496     	LGOTO	_00448_DS_
     0045                           1- 2497     _00446_DS_:
                                    1- 2498     	.line	608, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
                                    1- 2499     	BANKSEL	_PORTA
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 1Crr                      1- 2500     	BCR	_PORTA,1
                                    1- 2501     	.line	609, "main.c"; 	PORTA &= 0xFB;		//关闭充满提示灯
     0047 1Drr                      1- 2502     	BCR	_PORTA,2
                                    1- 2503     	.line	610, "main.c"; 	IOSTA |= 0x01;
     0048 001r                      1- 2504     	IOSTR	_IOSTA
                                    1- 2505     	BANKSEL	r0x1046
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 00rr                      1- 2506     	MOVAR	r0x1046
     004B 18rr                      1- 2507     	BSR	r0x1046,0
     004C 01rr                      1- 2508     	MOVR	r0x1046,W
     004D 000r                      1- 2509     	IOST	_IOSTA
                                    1- 2510     	.line	611, "main.c"; 	chrgTime = 0;
                                    1- 2511     	BANKSEL	_chrgTime
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 02rr                      1- 2512     	CLRR	_chrgTime
     0050 02rr                      1- 2513     	CLRR	(_chrgTime + 1)
                                    1- 2514     	.line	613, "main.c"; 	if(workStep == 0)
                                    1- 2515     	BANKSEL	_workStep
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 01rr                      1- 2516     	MOVR	_workStep,W
     0053 0903                      1- 2517     	BTRSS	STATUS,2
     0054 3rrr                      1- 2518     	LGOTO	_00006_DS_
                                    1- 2519     	.line	614, "main.c"; 	ledStep = 0;
                                    1- 2520     	BANKSEL	_ledStep
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 02rr                      1- 2521     	CLRR	_ledStep
     0057                           1- 2522     _00006_DS_:
                                    1- 2523     	.line	615, "main.c"; 	chrgFlag = 0;
                                    1- 2524     	BANKSEL	_chrgFlag
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 02rr                      1- 2525     	CLRR	_chrgFlag
                                    1- 2526     	.line	616, "main.c"; 	chrgTime = 0;	//重置充电计数
                                    1- 2527     	BANKSEL	_chrgTime
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 02rr                      1- 2528     	CLRR	_chrgTime
     005B 02rr                      1- 2529     	CLRR	(_chrgTime + 1)
     005C                           1- 2530     _00448_DS_:
                                    1- 2531     	.line	619, "main.c"; 	}
                                    1- 2532     	RETURN	
     005C 0010                      3-   26 m1      ret
                                    1- 2533     ; exit point of _chrgCtr
                                    1- 2535     ;***
                                    1- 2536     ;  pBlock Stats: dbName = C
                                    1- 2537     ;***
                                    1- 2538     ;has an exit
                                    1- 2539     ;1 compiler assigned register :
                                    1- 2540     ;   r0x1047
                                    1- 2541     ;; Starting pCode block
                                    1- 2542     .segment "code"; module=main, function=_keyRead
                                    1- 2544     ;local variable name mapping:
     0000                           1- 2546     _keyRead:
                                    1- 2547     ; 2 exit points
                                    1- 2548     	.line	528, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2549     	BANKSEL	r0x1047
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 2550     	MOVAR	r0x1047
                                    1- 2551     	.line	530, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2552     	MOVR	r0x1047,W
     0003 0D03                      1- 2553     	BTRSC	STATUS,2
     0004 3rrr                      1- 2554     	LGOTO	_00424_DS_
                                    1- 2555     	.line	532, "main.c"; 	keyCount++;
                                    1- 2556     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 2557     	INCR	_keyCount,F
                                    1- 2558     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 2559     	.line	533, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 2560     	MOVIA	0x64
     0008 04rr                      1- 2561     	SUBAR	_keyCount,W
     0009 0803                      1- 2562     	BTRSS	STATUS,0
     000A 3rrr                      1- 2563     	LGOTO	_00425_DS_
                                    1- 2564     	.line	535, "main.c"; 	keyCount = 100;
     000B 2164                      1- 2565     	MOVIA	0x64
     000C 00rr                      1- 2566     	MOVAR	_keyCount
                                    1- 2567     	.line	536, "main.c"; 	if(!longPressFlag)
                                    1- 2568     	BANKSEL	_longPressFlag
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1- 2569     	MOVR	_longPressFlag,W
     000F 0903                      1- 2570     	BTRSS	STATUS,2
     0010 3rrr                      1- 2571     	LGOTO	_00425_DS_
                                    1- 2572     	.line	538, "main.c"; 	longPressFlag = 1;
     0011 2101                      1- 2573     	MOVIA	0x01
     0012 00rr                      1- 2574     	MOVAR	_longPressFlag
                                    1- 2575     	.line	539, "main.c"; 	return 2;
     0013 2102                      1- 2576     	MOVIA	0x02
     0014 3rrr                      1- 2577     	LGOTO	_00426_DS_
                                    1- 2578     ;;unsigned compare: left < lit (0x64=100), size=1
     0015                           1- 2579     _00424_DS_:
                                    1- 2580     	.line	545, "main.c"; 	if(keyCount >= 100)
     0015 2164                      1- 2581     	MOVIA	0x64
                                    1- 2582     	BANKSEL	_keyCount
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 04rr                      1- 2583     	SUBAR	_keyCount,W
     0018 0803                      1- 2584     	BTRSS	STATUS,0
     0019 3rrr                      1- 2585     	LGOTO	_00421_DS_
                                    1- 2586     	.line	547, "main.c"; 	keyCount = 0;
     001A 02rr                      1- 2587     	CLRR	_keyCount
                                    1- 2588     	.line	548, "main.c"; 	longPressFlag = 0;
                                    1- 2589     	BANKSEL	_longPressFlag
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 02rr                      1- 2590     	CLRR	_longPressFlag
                                    1- 2591     	.line	549, "main.c"; 	return	0;
     001D 2100                      1- 2592     	MOVIA	0x00
     001E 3rrr                      1- 2593     	LGOTO	_00426_DS_
                                    1- 2594     ;;unsigned compare: left < lit (0x8=8), size=1
     001F                           1- 2595     _00421_DS_:
                                    1- 2596     	.line	551, "main.c"; 	else if(keyCount >= 8)
     001F 2108                      1- 2597     	MOVIA	0x08
                                    1- 2598     	BANKSEL	_keyCount
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 04rr                      1- 2599     	SUBAR	_keyCount,W
     0022 0803                      1- 2600     	BTRSS	STATUS,0
     0023 3rrr                      1- 2601     	LGOTO	_00422_DS_
                                    1- 2602     	.line	553, "main.c"; 	keyCount = 0;
     0024 02rr                      1- 2603     	CLRR	_keyCount
                                    1- 2604     	.line	554, "main.c"; 	return	1;
     0025 2101                      1- 2605     	MOVIA	0x01
     0026 3rrr                      1- 2606     	LGOTO	_00426_DS_
     0027                           1- 2607     _00422_DS_:
                                    1- 2608     	.line	556, "main.c"; 	keyCount = 0;
                                    1- 2609     	BANKSEL	_keyCount
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 02rr                      1- 2610     	CLRR	_keyCount
     0029                           1- 2611     _00425_DS_:
                                    1- 2612     	.line	558, "main.c"; 	return 0;
     0029 2100                      1- 2613     	MOVIA	0x00
     002A                           1- 2614     _00426_DS_:
                                    1- 2615     	.line	559, "main.c"; 	}
                                    1- 2616     	RETURN	
     002A 0010                      3-   26 m1      ret
                                    1- 2617     ; exit point of _keyRead
                                    1- 2619     ;***
                                    1- 2620     ;  pBlock Stats: dbName = C
                                    1- 2621     ;***
                                    1- 2622     ;has an exit
                                    1- 2623     ;functions called:
                                    1- 2624     ;   _LedInput
                                    1- 2625     ;   _pwmStop
                                    1- 2626     ;   _LedInput
                                    1- 2627     ;   _pwmStop
                                    1- 2628     ;; Starting pCode block
                                    1- 2629     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2631     _gotoSleep:
                                    1- 2632     ; 2 exit points
                                    1- 2633     	.line	505, "main.c"; 	PORTB = 0x00;
     0000 02rr                      1- 2634     	CLRR	_PORTB
                                    1- 2635     	.line	506, "main.c"; 	PORTA = 0x00;
                                    1- 2636     	BANKSEL	_PORTA
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 02rr                      1- 2637     	CLRR	_PORTA
                                    1- 2638     	.line	507, "main.c"; 	LedInput();
     0003 2rrr                      1- 2639     	LCALL	_LedInput
                                    1- 2640     	.line	508, "main.c"; 	sleepTime = 0;
                                    1- 2641     	BANKSEL	_sleepTime
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 2642     	CLRR	_sleepTime
     0006 02rr                      1- 2643     	CLRR	(_sleepTime + 1)
                                    1- 2644     	.line	510, "main.c"; 	pwmStop();
     0007 2rrr                      1- 2645     	LCALL	_pwmStop
                                    1- 2646     	.line	511, "main.c"; 	workStep = 0;
                                    1- 2647     	BANKSEL	_workStep
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1- 2648     	CLRR	_workStep
                                    1- 2649     	.line	512, "main.c"; 	AWUCON = 0x60;
     000A 2160                      1- 2650     	MOVIA	0x60
     000B 00rr                      1- 2651     	MOVAR	_AWUCON
                                    1- 2652     	.line	513, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     000C 210B                      1- 2653     	MOVIA	0x0b
     000D 00rr                      1- 2654     	MOVAR	_INTE
                                    1- 2655     	.line	514, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     000E 2118                      1- 2656     	MOVIA	0x18
     000F 00rr                      1- 2657     	MOVAR	_PCON
                                    1- 2658     	.line	515, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0010 02rr                      1- 2659     	CLRR	_INTF
                                    1- 2660     	.line	516, "main.c"; 	CLRWDT();
     0011 0002                      1- 2661     	clrwdt
                                    1- 2662     	.line	517, "main.c"; 	ENI();
     0012 0004                      1- 2663     	ENI
                                    1- 2664     	.line	518, "main.c"; 	SLEEP();
     0013 0001                      1- 2665     	sleep
                                    1- 2666     	.line	519, "main.c"; 	AWUCON = 0x00;
     0014 02rr                      1- 2667     	CLRR	_AWUCON
                                    1- 2668     	.line	520, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0015 2101                      1- 2669     	MOVIA	0x01
     0016 00rr                      1- 2670     	MOVAR	_INTE
                                    1- 2671     	.line	521, "main.c"; 	INTF = 0;
     0017 02rr                      1- 2672     	CLRR	_INTF
                                    1- 2673     	.line	523, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0018 21B8                      1- 2674     	MOVIA	0xb8
     0019 00rr                      1- 2675     	MOVAR	_PCON
                                    1- 2676     	.line	525, "main.c"; 	}
                                    1- 2677     	RETURN	
     001A 0010                      3-   26 m1      ret
                                    1- 2678     ; exit point of _gotoSleep
                                    1- 2680     ;***
                                    1- 2681     ;  pBlock Stats: dbName = C
                                    1- 2682     ;***
                                    1- 2683     ;has an exit
                                    1- 2684     ;; Starting pCode block
                                    1- 2685     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2687     _pwmStop:
                                    1- 2688     ; 2 exit points
                                    1- 2689     	.line	499, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2690     	CLRA	
     0001 00rr                      1- 2691     	SFUN	_T2CR1
                                    1- 2692     	.line	500, "main.c"; 	}
                                    1- 2693     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2694     ; exit point of _pwmStop
                                    1- 2696     ;***
                                    1- 2697     ;  pBlock Stats: dbName = C
                                    1- 2698     ;***
                                    1- 2699     ;has an exit
                                    1- 2700     ;1 compiler assigned register :
                                    1- 2701     ;   r0x1049
                                    1- 2702     ;; Starting pCode block
                                    1- 2703     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2705     _pwmInit:
                                    1- 2706     ; 2 exit points
                                    1- 2707     	.line	487, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2708     	SFUNR	_T2CR1
                                    1- 2709     	BANKSEL	r0x1049
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2710     	MOVAR	r0x1049
     0003 0Frr                      1- 2711     	BTRSC	r0x1049,7
                                    1- 2712     	.line	488, "main.c"; 	return;
     0004 3rrr                      1- 2713     	LGOTO	_00401_DS_
                                    1- 2714     	.line	489, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2715     	CLRR	_TMRH
                                    1- 2716     	.line	490, "main.c"; 	TMR2 = 128;							//频率为110K
     0006 2180                      1- 2717     	MOVIA	0x80
     0007 00rr                      1- 2718     	SFUN	_TMR2
                                    1- 2719     	.line	493, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2720     	CLRA	
     0009 00rr                      1- 2721     	SFUN	_T2CR2
                                    1- 2722     	.line	494, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2723     	MOVIA	0x83
     000B 00rr                      1- 2724     	SFUN	_T2CR1
     000C                           1- 2725     _00401_DS_:
                                    1- 2726     	.line	495, "main.c"; 	}
                                    1- 2727     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1- 2728     ; exit point of _pwmInit
                                    1- 2730     ;***
                                    1- 2731     ;  pBlock Stats: dbName = C
                                    1- 2732     ;***
                                    1- 2733     ;has an exit
                                    1- 2734     ;; Starting pCode block
                                    1- 2735     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2737     _pwm1Stop:
                                    1- 2738     ; 2 exit points
                                    1- 2739     	.line	480, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2740     	CLRA	
     0001 00rr                      1- 2741     	SFUN	_T1CR1
                                    1- 2742     	.line	481, "main.c"; 	}
                                    1- 2743     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2744     ; exit point of _pwm1Stop
                                    1- 2746     ;***
                                    1- 2747     ;  pBlock Stats: dbName = C
                                    1- 2748     ;***
                                    1- 2749     ;has an exit
                                    1- 2750     ;1 compiler assigned register :
                                    1- 2751     ;   r0x104A
                                    1- 2752     ;; Starting pCode block
                                    1- 2753     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2755     _pwm1Init:
                                    1- 2756     ; 2 exit points
                                    1- 2757     	.line	468, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2758     	SFUNR	_T1CR1
                                    1- 2759     	BANKSEL	r0x104A
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2760     	MOVAR	r0x104A
     0003 0Frr                      1- 2761     	BTRSC	r0x104A,7
                                    1- 2762     	.line	469, "main.c"; 	return;
     0004 3rrr                      1- 2763     	LGOTO	_00390_DS_
                                    1- 2764     	.line	470, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2765     	CLRR	_TMRH
                                    1- 2766     	.line	471, "main.c"; 	TMR1 = 12;							//频率为110K
     0006 210C                      1- 2767     	MOVIA	0x0c
     0007 00rr                      1- 2768     	SFUN	_TMR1
                                    1- 2769     	.line	474, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2770     	CLRA	
     0009 00rr                      1- 2771     	SFUN	_T1CR2
                                    1- 2772     	.line	475, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2773     	MOVIA	0x83
     000B 00rr                      1- 2774     	SFUN	_T1CR1
     000C                           1- 2775     _00390_DS_:
                                    1- 2776     	.line	476, "main.c"; 	}
                                    1- 2777     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1- 2778     ; exit point of _pwm1Init
                                    1- 2780     ;***
                                    1- 2781     ;  pBlock Stats: dbName = C
                                    1- 2782     ;***
                                    1- 2783     ;has an exit
                                    1- 2784     ;functions called:
                                    1- 2785     ;   _delay
                                    1- 2786     ;   _LedInput
                                    1- 2787     ;   _delay
                                    1- 2788     ;   _LedInput
                                    1- 2789     ;1 compiler assigned register :
                                    1- 2790     ;   r0x104B
                                    1- 2791     ;; Starting pCode block
                                    1- 2792     .segment "code"; module=main, function=_LED8ON
     0000                           1- 2794     _LED8ON:
                                    1- 2795     ; 2 exit points
                                    1- 2796     	.line	458, "main.c"; 	L4OUT;
     0000 001r                      1- 2797     	IOSTR	_IOSTB
                                    1- 2798     	BANKSEL	r0x104B
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2799     	MOVAR	r0x104B
     0003 1Crr                      1- 2800     	BCR	r0x104B,0
     0004 01rr                      1- 2801     	MOVR	r0x104B,W
     0005 000r                      1- 2802     	IOST	_IOSTB
                                    1- 2803     	.line	459, "main.c"; 	L2OUT;
     0006 001r                      1- 2804     	IOSTR	_IOSTB
     0007 00rr                      1- 2805     	MOVAR	r0x104B
     0008 1Drr                      1- 2806     	BCR	r0x104B,3
     0009 01rr                      1- 2807     	MOVR	r0x104B,W
     000A 000r                      1- 2808     	IOST	_IOSTB
                                    1- 2809     	.line	460, "main.c"; 	L4H;
     000B 18rr                      1- 2810     	BSR	_PORTB,0
                                    1- 2811     	.line	461, "main.c"; 	L2L;
     000C 1Drr                      1- 2812     	BCR	_PORTB,3
                                    1- 2813     	.line	462, "main.c"; 	delay(100);
     000D 2164                      1- 2814     	MOVIA	0x64
     000E 2rrr                      1- 2815     	LCALL	_delay
                                    1- 2816     	.line	463, "main.c"; 	LedInput();
     000F 2rrr                      1- 2817     	LCALL	_LedInput
                                    1- 2818     	.line	464, "main.c"; 	}
                                    1- 2819     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1- 2820     ; exit point of _LED8ON
                                    1- 2822     ;***
                                    1- 2823     ;  pBlock Stats: dbName = C
                                    1- 2824     ;***
                                    1- 2825     ;has an exit
                                    1- 2826     ;functions called:
                                    1- 2827     ;   _delay
                                    1- 2828     ;   _LedInput
                                    1- 2829     ;   _delay
                                    1- 2830     ;   _LedInput
                                    1- 2831     ;1 compiler assigned register :
                                    1- 2832     ;   r0x104C
                                    1- 2833     ;; Starting pCode block
                                    1- 2834     .segment "code"; module=main, function=_LED7ON
     0000                           1- 2836     _LED7ON:
                                    1- 2837     ; 2 exit points
                                    1- 2838     	.line	448, "main.c"; 	L4OUT;
     0000 001r                      1- 2839     	IOSTR	_IOSTB
                                    1- 2840     	BANKSEL	r0x104C
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2841     	MOVAR	r0x104C
     0003 1Crr                      1- 2842     	BCR	r0x104C,0
     0004 01rr                      1- 2843     	MOVR	r0x104C,W
     0005 000r                      1- 2844     	IOST	_IOSTB
                                    1- 2845     	.line	449, "main.c"; 	L2OUT;
     0006 001r                      1- 2846     	IOSTR	_IOSTB
     0007 00rr                      1- 2847     	MOVAR	r0x104C
     0008 1Drr                      1- 2848     	BCR	r0x104C,3
     0009 01rr                      1- 2849     	MOVR	r0x104C,W
     000A 000r                      1- 2850     	IOST	_IOSTB
                                    1- 2851     	.line	450, "main.c"; 	L2H;
     000B 19rr                      1- 2852     	BSR	_PORTB,3
                                    1- 2853     	.line	451, "main.c"; 	L4L;
     000C 1Crr                      1- 2854     	BCR	_PORTB,0
                                    1- 2855     	.line	452, "main.c"; 	delay(100);
     000D 2164                      1- 2856     	MOVIA	0x64
     000E 2rrr                      1- 2857     	LCALL	_delay
                                    1- 2858     	.line	453, "main.c"; 	LedInput();
     000F 2rrr                      1- 2859     	LCALL	_LedInput
                                    1- 2860     	.line	454, "main.c"; 	}
                                    1- 2861     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1- 2862     ; exit point of _LED7ON
                                    1- 2864     ;***
                                    1- 2865     ;  pBlock Stats: dbName = C
                                    1- 2866     ;***
                                    1- 2867     ;has an exit
                                    1- 2868     ;functions called:
                                    1- 2869     ;   _delay
                                    1- 2870     ;   _LedInput
                                    1- 2871     ;   _delay
                                    1- 2872     ;   _LedInput
                                    1- 2873     ;1 compiler assigned register :
                                    1- 2874     ;   r0x104D
                                    1- 2875     ;; Starting pCode block
                                    1- 2876     .segment "code"; module=main, function=_LED6ON
     0000                           1- 2878     _LED6ON:
                                    1- 2879     ; 2 exit points
                                    1- 2880     	.line	438, "main.c"; 	L4OUT;
     0000 001r                      1- 2881     	IOSTR	_IOSTB
                                    1- 2882     	BANKSEL	r0x104D
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2883     	MOVAR	r0x104D
     0003 1Crr                      1- 2884     	BCR	r0x104D,0
     0004 01rr                      1- 2885     	MOVR	r0x104D,W
     0005 000r                      1- 2886     	IOST	_IOSTB
                                    1- 2887     	.line	439, "main.c"; 	L1OUT;
     0006 001r                      1- 2888     	IOSTR	_IOSTA
     0007 00rr                      1- 2889     	MOVAR	r0x104D
     0008 1Frr                      1- 2890     	BCR	r0x104D,7
     0009 01rr                      1- 2891     	MOVR	r0x104D,W
     000A 000r                      1- 2892     	IOST	_IOSTA
                                    1- 2893     	.line	440, "main.c"; 	L1H;
                                    1- 2894     	BANKSEL	_PORTA
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 1Brr                      1- 2895     	BSR	_PORTA,7
                                    1- 2896     	.line	441, "main.c"; 	L4L;
     000D 1Crr                      1- 2897     	BCR	_PORTB,0
                                    1- 2898     	.line	442, "main.c"; 	delay(100);
     000E 2164                      1- 2899     	MOVIA	0x64
     000F 2rrr                      1- 2900     	LCALL	_delay
                                    1- 2901     	.line	443, "main.c"; 	LedInput();
     0010 2rrr                      1- 2902     	LCALL	_LedInput
                                    1- 2903     	.line	444, "main.c"; 	}
                                    1- 2904     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 2905     ; exit point of _LED6ON
                                    1- 2907     ;***
                                    1- 2908     ;  pBlock Stats: dbName = C
                                    1- 2909     ;***
                                    1- 2910     ;has an exit
                                    1- 2911     ;functions called:
                                    1- 2912     ;   _delay
                                    1- 2913     ;   _LedInput
                                    1- 2914     ;   _delay
                                    1- 2915     ;   _LedInput
                                    1- 2916     ;1 compiler assigned register :
                                    1- 2917     ;   r0x104E
                                    1- 2918     ;; Starting pCode block
                                    1- 2919     .segment "code"; module=main, function=_LED5ON
     0000                           1- 2921     _LED5ON:
                                    1- 2922     ; 2 exit points
                                    1- 2923     	.line	427, "main.c"; 	L4OUT;
     0000 001r                      1- 2924     	IOSTR	_IOSTB
                                    1- 2925     	BANKSEL	r0x104E
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2926     	MOVAR	r0x104E
     0003 1Crr                      1- 2927     	BCR	r0x104E,0
     0004 01rr                      1- 2928     	MOVR	r0x104E,W
     0005 000r                      1- 2929     	IOST	_IOSTB
                                    1- 2930     	.line	428, "main.c"; 	L1OUT;
     0006 001r                      1- 2931     	IOSTR	_IOSTA
     0007 00rr                      1- 2932     	MOVAR	r0x104E
     0008 1Frr                      1- 2933     	BCR	r0x104E,7
     0009 01rr                      1- 2934     	MOVR	r0x104E,W
     000A 000r                      1- 2935     	IOST	_IOSTA
                                    1- 2936     	.line	429, "main.c"; 	L4H;
     000B 18rr                      1- 2937     	BSR	_PORTB,0
                                    1- 2938     	.line	430, "main.c"; 	L1L;
                                    1- 2939     	BANKSEL	_PORTA
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 1Frr                      1- 2940     	BCR	_PORTA,7
                                    1- 2941     	.line	431, "main.c"; 	delay(100);
     000E 2164                      1- 2942     	MOVIA	0x64
     000F 2rrr                      1- 2943     	LCALL	_delay
                                    1- 2944     	.line	432, "main.c"; 	LedInput();
     0010 2rrr                      1- 2945     	LCALL	_LedInput
                                    1- 2946     	.line	433, "main.c"; 	}
                                    1- 2947     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 2948     ; exit point of _LED5ON
                                    1- 2950     ;***
                                    1- 2951     ;  pBlock Stats: dbName = C
                                    1- 2952     ;***
                                    1- 2953     ;has an exit
                                    1- 2954     ;functions called:
                                    1- 2955     ;   _delay
                                    1- 2956     ;   _LedInput
                                    1- 2957     ;   _delay
                                    1- 2958     ;   _LedInput
                                    1- 2959     ;1 compiler assigned register :
                                    1- 2960     ;   r0x104F
                                    1- 2961     ;; Starting pCode block
                                    1- 2962     .segment "code"; module=main, function=_LED4ON
     0000                           1- 2964     _LED4ON:
                                    1- 2965     ; 2 exit points
                                    1- 2966     	.line	417, "main.c"; 	L3OUT;
     0000 001r                      1- 2967     	IOSTR	_IOSTB
                                    1- 2968     	BANKSEL	r0x104F
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2969     	MOVAR	r0x104F
     0003 1Crr                      1- 2970     	BCR	r0x104F,1
     0004 01rr                      1- 2971     	MOVR	r0x104F,W
     0005 000r                      1- 2972     	IOST	_IOSTB
                                    1- 2973     	.line	418, "main.c"; 	L2OUT;
     0006 001r                      1- 2974     	IOSTR	_IOSTB
     0007 00rr                      1- 2975     	MOVAR	r0x104F
     0008 1Drr                      1- 2976     	BCR	r0x104F,3
     0009 01rr                      1- 2977     	MOVR	r0x104F,W
     000A 000r                      1- 2978     	IOST	_IOSTB
                                    1- 2979     	.line	419, "main.c"; 	L3H;
     000B 18rr                      1- 2980     	BSR	_PORTB,1
                                    1- 2981     	.line	420, "main.c"; 	L2L;
     000C 1Drr                      1- 2982     	BCR	_PORTB,3
                                    1- 2983     	.line	421, "main.c"; 	delay(100);
     000D 2164                      1- 2984     	MOVIA	0x64
     000E 2rrr                      1- 2985     	LCALL	_delay
                                    1- 2986     	.line	422, "main.c"; 	LedInput();
     000F 2rrr                      1- 2987     	LCALL	_LedInput
                                    1- 2988     	.line	423, "main.c"; 	}
                                    1- 2989     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1- 2990     ; exit point of _LED4ON
                                    1- 2992     ;***
                                    1- 2993     ;  pBlock Stats: dbName = C
                                    1- 2994     ;***
                                    1- 2995     ;has an exit
                                    1- 2996     ;functions called:
                                    1- 2997     ;   _delay
                                    1- 2998     ;   _LedInput
                                    1- 2999     ;   _delay
                                    1- 3000     ;   _LedInput
                                    1- 3001     ;1 compiler assigned register :
                                    1- 3002     ;   r0x1050
                                    1- 3003     ;; Starting pCode block
                                    1- 3004     .segment "code"; module=main, function=_LED3ON
     0000                           1- 3006     _LED3ON:
                                    1- 3007     ; 2 exit points
                                    1- 3008     	.line	407, "main.c"; 	L3OUT;
     0000 001r                      1- 3009     	IOSTR	_IOSTB
                                    1- 3010     	BANKSEL	r0x1050
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 3011     	MOVAR	r0x1050
     0003 1Crr                      1- 3012     	BCR	r0x1050,1
     0004 01rr                      1- 3013     	MOVR	r0x1050,W
     0005 000r                      1- 3014     	IOST	_IOSTB
                                    1- 3015     	.line	408, "main.c"; 	L2OUT;
     0006 001r                      1- 3016     	IOSTR	_IOSTB
     0007 00rr                      1- 3017     	MOVAR	r0x1050
     0008 1Drr                      1- 3018     	BCR	r0x1050,3
     0009 01rr                      1- 3019     	MOVR	r0x1050,W
     000A 000r                      1- 3020     	IOST	_IOSTB
                                    1- 3021     	.line	409, "main.c"; 	L2H;
     000B 19rr                      1- 3022     	BSR	_PORTB,3
                                    1- 3023     	.line	410, "main.c"; 	L3L;
     000C 1Crr                      1- 3024     	BCR	_PORTB,1
                                    1- 3025     	.line	411, "main.c"; 	delay(100);
     000D 2164                      1- 3026     	MOVIA	0x64
     000E 2rrr                      1- 3027     	LCALL	_delay
                                    1- 3028     	.line	412, "main.c"; 	LedInput();
     000F 2rrr                      1- 3029     	LCALL	_LedInput
                                    1- 3030     	.line	413, "main.c"; 	}
                                    1- 3031     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1- 3032     ; exit point of _LED3ON
                                    1- 3034     ;***
                                    1- 3035     ;  pBlock Stats: dbName = C
                                    1- 3036     ;***
                                    1- 3037     ;has an exit
                                    1- 3038     ;functions called:
                                    1- 3039     ;   _delay
                                    1- 3040     ;   _LedInput
                                    1- 3041     ;   _delay
                                    1- 3042     ;   _LedInput
                                    1- 3043     ;1 compiler assigned register :
                                    1- 3044     ;   r0x1051
                                    1- 3045     ;; Starting pCode block
                                    1- 3046     .segment "code"; module=main, function=_LED2ON
     0000                           1- 3048     _LED2ON:
                                    1- 3049     ; 2 exit points
                                    1- 3050     	.line	397, "main.c"; 	L1OUT;
     0000 001r                      1- 3051     	IOSTR	_IOSTA
                                    1- 3052     	BANKSEL	r0x1051
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 3053     	MOVAR	r0x1051
     0003 1Frr                      1- 3054     	BCR	r0x1051,7
     0004 01rr                      1- 3055     	MOVR	r0x1051,W
     0005 000r                      1- 3056     	IOST	_IOSTA
                                    1- 3057     	.line	398, "main.c"; 	L3OUT;
     0006 001r                      1- 3058     	IOSTR	_IOSTB
     0007 00rr                      1- 3059     	MOVAR	r0x1051
     0008 1Crr                      1- 3060     	BCR	r0x1051,1
     0009 01rr                      1- 3061     	MOVR	r0x1051,W
     000A 000r                      1- 3062     	IOST	_IOSTB
                                    1- 3063     	.line	399, "main.c"; 	L3H;
     000B 18rr                      1- 3064     	BSR	_PORTB,1
                                    1- 3065     	.line	400, "main.c"; 	L1L;
                                    1- 3066     	BANKSEL	_PORTA
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 1Frr                      1- 3067     	BCR	_PORTA,7
                                    1- 3068     	.line	401, "main.c"; 	delay(100);
     000E 2164                      1- 3069     	MOVIA	0x64
     000F 2rrr                      1- 3070     	LCALL	_delay
                                    1- 3071     	.line	402, "main.c"; 	LedInput();
     0010 2rrr                      1- 3072     	LCALL	_LedInput
                                    1- 3073     	.line	403, "main.c"; 	}
                                    1- 3074     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 3075     ; exit point of _LED2ON
                                    1- 3077     ;***
                                    1- 3078     ;  pBlock Stats: dbName = C
                                    1- 3079     ;***
                                    1- 3080     ;has an exit
                                    1- 3081     ;functions called:
                                    1- 3082     ;   _delay
                                    1- 3083     ;   _LedInput
                                    1- 3084     ;   _delay
                                    1- 3085     ;   _LedInput
                                    1- 3086     ;1 compiler assigned register :
                                    1- 3087     ;   r0x1052
                                    1- 3088     ;; Starting pCode block
                                    1- 3089     .segment "code"; module=main, function=_LED1ON
     0000                           1- 3091     _LED1ON:
                                    1- 3092     ; 2 exit points
                                    1- 3093     	.line	387, "main.c"; 	L3OUT;
     0000 001r                      1- 3094     	IOSTR	_IOSTB
                                    1- 3095     	BANKSEL	r0x1052
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 3096     	MOVAR	r0x1052
     0003 1Crr                      1- 3097     	BCR	r0x1052,1
     0004 01rr                      1- 3098     	MOVR	r0x1052,W
     0005 000r                      1- 3099     	IOST	_IOSTB
                                    1- 3100     	.line	388, "main.c"; 	L1OUT;
     0006 001r                      1- 3101     	IOSTR	_IOSTA
     0007 00rr                      1- 3102     	MOVAR	r0x1052
     0008 1Frr                      1- 3103     	BCR	r0x1052,7
     0009 01rr                      1- 3104     	MOVR	r0x1052,W
     000A 000r                      1- 3105     	IOST	_IOSTA
                                    1- 3106     	.line	389, "main.c"; 	L1H;
                                    1- 3107     	BANKSEL	_PORTA
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 1Brr                      1- 3108     	BSR	_PORTA,7
                                    1- 3109     	.line	390, "main.c"; 	L3L;
     000D 1Crr                      1- 3110     	BCR	_PORTB,1
                                    1- 3111     	.line	391, "main.c"; 	delay(100);
     000E 2164                      1- 3112     	MOVIA	0x64
     000F 2rrr                      1- 3113     	LCALL	_delay
                                    1- 3114     	.line	392, "main.c"; 	LedInput();
     0010 2rrr                      1- 3115     	LCALL	_LedInput
                                    1- 3116     	.line	393, "main.c"; 	}
                                    1- 3117     	RETURN	
     0011 0010                      3-   26 m1      ret
                                    1- 3118     ; exit point of _LED1ON
                                    1- 3120     ;***
                                    1- 3121     ;  pBlock Stats: dbName = C
                                    1- 3122     ;***
                                    1- 3123     ;has an exit
                                    1- 3124     ;1 compiler assigned register :
                                    1- 3125     ;   r0x1048
                                    1- 3126     ;; Starting pCode block
                                    1- 3127     .segment "code"; module=main, function=_LedInput
     0000                           1- 3129     _LedInput:
                                    1- 3130     ; 2 exit points
                                    1- 3131     	.line	379, "main.c"; 	IOSTA |= 0x80;
     0000 001r                      1- 3132     	IOSTR	_IOSTA
                                    1- 3133     	BANKSEL	r0x1048
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 3134     	MOVAR	r0x1048
     0003 1Brr                      1- 3135     	BSR	r0x1048,7
     0004 01rr                      1- 3136     	MOVR	r0x1048,W
     0005 000r                      1- 3137     	IOST	_IOSTA
                                    1- 3138     	.line	380, "main.c"; 	IOSTB |= 0x0B;
     0006 001r                      1- 3139     	IOSTR	_IOSTB
     0007 00rr                      1- 3140     	MOVAR	r0x1048
     0008 210B                      1- 3141     	MOVIA	0x0b
     0009 11rr                      1- 3142     	IORAR	r0x1048,F
     000A 01rr                      1- 3143     	MOVR	r0x1048,W
     000B 000r                      1- 3144     	IOST	_IOSTB
                                    1- 3145     	.line	381, "main.c"; 	PORTA &= 0x7F;
                                    1- 3146     	BANKSEL	_PORTA
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 1Frr                      1- 3147     	BCR	_PORTA,7
                                    1- 3148     	.line	382, "main.c"; 	PORTB &= 0xF4;
     000E 21F4                      1- 3149     	MOVIA	0xf4
     000F 10rr                      1- 3150     	ANDAR	_PORTB,F
                                    1- 3151     	.line	383, "main.c"; 	}
                                    1- 3152     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1- 3153     ; exit point of _LedInput
                                    1- 3155     ;***
                                    1- 3156     ;  pBlock Stats: dbName = C
                                    1- 3157     ;***
                                    1- 3158     ;has an exit
                                    1- 3159     ;functions called:
                                    1- 3160     ;   _pwmStop
                                    1- 3161     ;   _LedInput
                                    1- 3162     ;   _LedInput
                                    1- 3163     ;   _LED8ON
                                    1- 3164     ;   _LED7ON
                                    1- 3165     ;   _LED6ON
                                    1- 3166     ;   _LED5ON
                                    1- 3167     ;   _LED4ON
                                    1- 3168     ;   _LED3ON
                                    1- 3169     ;   _LED2ON
                                    1- 3170     ;   _LED1ON
                                    1- 3171     ;   _pwmStop
                                    1- 3172     ;   _LedInput
                                    1- 3173     ;   _LedInput
                                    1- 3174     ;   _LED8ON
                                    1- 3175     ;   _LED7ON
                                    1- 3176     ;   _LED6ON
                                    1- 3177     ;   _LED5ON
                                    1- 3178     ;   _LED4ON
                                    1- 3179     ;   _LED3ON
                                    1- 3180     ;   _LED2ON
                                    1- 3181     ;   _LED1ON
                                    1- 3182     ;; Starting pCode block
                                    1- 3183     .segment "code"; module=main, function=_ledShow
     0000                           1- 3185     _ledShow:
                                    1- 3186     ; 2 exit points
                                    1- 3187     ;;unsigned compare: left < lit (0x5=5), size=1
                                    1- 3188     	.line	319, "main.c"; 	if(overCount >= 5 && workStep > 0)
     0000 2105                      1- 3189     	MOVIA	0x05
                                    1- 3190     	BANKSEL	_overCount
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 3191     	SUBAR	_overCount,W
     0003 0803                      1- 3192     	BTRSS	STATUS,0
     0004 3rrr                      1- 3193     	LGOTO	_00268_DS_
                                    1- 3194     	BANKSEL	_workStep
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 01rr                      1- 3195     	MOVR	_workStep,W
     0007 0D03                      1- 3196     	BTRSC	STATUS,2
     0008 3rrr                      1- 3197     	LGOTO	_00268_DS_
                                    1- 3198     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 3199     	.line	321, "main.c"; 	if(count1s < 50)
     0009 2132                      1- 3200     	MOVIA	0x32
                                    1- 3201     	BANKSEL	_count1s
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 04rr                      1- 3202     	SUBAR	_count1s,W
     000C 0C03                      1- 3203     	BTRSC	STATUS,0
     000D 3rrr                      1- 3204     	LGOTO	_00265_DS_
                                    1- 3205     	.line	322, "main.c"; 	ledStep = workStep;
                                    1- 3206     	BANKSEL	_workStep
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1- 3207     	MOVR	_workStep,W
                                    1- 3208     	BANKSEL	_ledStep
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1- 3209     	MOVAR	_ledStep
     0012 3rrr                      1- 3210     	LGOTO	_00268_DS_
     0013                           1- 3211     _00265_DS_:
                                    1- 3212     	.line	324, "main.c"; 	ledStep = 0;
                                    1- 3213     	BANKSEL	_ledStep
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 02rr                      1- 3214     	CLRR	_ledStep
     0015                           1- 3215     _00268_DS_:
                                    1- 3216     	.line	326, "main.c"; 	if(ledLightTime > 0 && pwStep > 0)
                                    1- 3217     	BANKSEL	_ledLightTime
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 3218     	MOVR	_ledLightTime,W
     0017 0D03                      1- 3219     	BTRSC	STATUS,2
     0018 3rrr                      1- 3220     	LGOTO	_00276_DS_
                                    1- 3221     	BANKSEL	_pwStep
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 3222     	MOVR	_pwStep,W
     001B 0D03                      1- 3223     	BTRSC	STATUS,2
     001C 3rrr                      1- 3224     	LGOTO	_00276_DS_
                                    1- 3225     	.line	328, "main.c"; 	if(ledLightTime == 2)
                                    1- 3226     	BANKSEL	_ledLightTime
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 3227     	MOVR	_ledLightTime,W
     001F 2402                      1- 3228     	XORIA	0x02
     0020 0903                      1- 3229     	BTRSS	STATUS,2
     0021 3rrr                      1- 3230     	LGOTO	_00276_DS_
                                    1- 3231     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3232     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 3233     	.line	330, "main.c"; 	if(pwStep > 8 )
     0022 2109                      1- 3234     	MOVIA	0x09
                                    1- 3235     	BANKSEL	_pwStep
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 04rr                      1- 3236     	SUBAR	_pwStep,W
     0025 0803                      1- 3237     	BTRSS	STATUS,0
     0026 3rrr                      1- 3238     	LGOTO	_00271_DS_
                                    1- 3239     	.line	331, "main.c"; 	ledStep = 8;
     0027 2108                      1- 3240     	MOVIA	0x08
                                    1- 3241     	BANKSEL	_ledStep
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 00rr                      1- 3242     	MOVAR	_ledStep
     002A 3rrr                      1- 3243     	LGOTO	_00276_DS_
     002B                           1- 3244     _00271_DS_:
                                    1- 3245     	.line	333, "main.c"; 	ledStep = pwStep;
                                    1- 3246     	BANKSEL	_pwStep
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1- 3247     	MOVR	_pwStep,W
                                    1- 3248     	BANKSEL	_ledStep
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 00rr                      1- 3249     	MOVAR	_ledStep
     002F                           1- 3250     _00276_DS_:
                                    1- 3251     	.line	336, "main.c"; 	if(shanshuoTime > 0 && workStep > 0 && pwStep == 0)
                                    1- 3252     	BANKSEL	_shanshuoTime
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 3253     	MOVR	_shanshuoTime,W
     0031 0D03                      1- 3254     	BTRSC	STATUS,2
     0032 3rrr                      1- 3255     	LGOTO	_00282_DS_
                                    1- 3256     	BANKSEL	_workStep
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1- 3257     	MOVR	_workStep,W
     0035 0D03                      1- 3258     	BTRSC	STATUS,2
     0036 3rrr                      1- 3259     	LGOTO	_00282_DS_
                                    1- 3260     	BANKSEL	_pwStep
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 01rr                      1- 3261     	MOVR	_pwStep,W
     0039 0903                      1- 3262     	BTRSS	STATUS,2
     003A 3rrr                      1- 3263     	LGOTO	_00282_DS_
                                    1- 3264     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 3265     	.line	338, "main.c"; 	if(count1s < 50)
     003B 2132                      1- 3266     	MOVIA	0x32
                                    1- 3267     	BANKSEL	_count1s
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 04rr                      1- 3268     	SUBAR	_count1s,W
     003E 0C03                      1- 3269     	BTRSC	STATUS,0
     003F 3rrr                      1- 3270     	LGOTO	_00279_DS_
                                    1- 3271     	.line	339, "main.c"; 	ledStep = workStep;
                                    1- 3272     	BANKSEL	_workStep
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 01rr                      1- 3273     	MOVR	_workStep,W
                                    1- 3274     	BANKSEL	_ledStep
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 00rr                      1- 3275     	MOVAR	_ledStep
     0044 3rrr                      1- 3276     	LGOTO	_00282_DS_
     0045                           1- 3277     _00279_DS_:
                                    1- 3278     	.line	341, "main.c"; 	ledStep = 0;
                                    1- 3279     	BANKSEL	_ledStep
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 02rr                      1- 3280     	CLRR	_ledStep
     0047                           1- 3281     _00282_DS_:
                                    1- 3282     	.line	343, "main.c"; 	if(shanshuoTime == 0 && pwStep == 0)
                                    1- 3283     	BANKSEL	_shanshuoTime
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 01rr                      1- 3284     	MOVR	_shanshuoTime,W
     0049 0903                      1- 3285     	BTRSS	STATUS,2
     004A 3rrr                      1- 3286     	LGOTO	_00286_DS_
                                    1- 3287     	BANKSEL	_pwStep
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 01rr                      1- 3288     	MOVR	_pwStep,W
     004D 0903                      1- 3289     	BTRSS	STATUS,2
     004E 3rrr                      1- 3290     	LGOTO	_00286_DS_
                                    1- 3291     	.line	345, "main.c"; 	workStep = 0;
                                    1- 3292     	BANKSEL	_workStep
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 02rr                      1- 3293     	CLRR	_workStep
                                    1- 3294     	.line	346, "main.c"; 	ledStep = 0;
                                    1- 3295     	BANKSEL	_ledStep
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 02rr                      1- 3296     	CLRR	_ledStep
                                    1- 3297     	.line	347, "main.c"; 	pwmStop();
     0053 2rrr                      1- 3298     	LCALL	_pwmStop
     0054                           1- 3299     _00286_DS_:
                                    1- 3300     	.line	349, "main.c"; 	LedInput();
     0054 2rrr                      1- 3301     	LCALL	_LedInput
                                    1- 3302     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3303     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 3304     	.line	350, "main.c"; 	switch(ledStep)
     0055 2109                      1- 3305     	MOVIA	0x09
                                    1- 3306     	BANKSEL	_ledStep
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 04rr                      1- 3307     	SUBAR	_ledStep,W
     0058 0C03                      1- 3308     	BTRSC	STATUS,0
     0059 3rrr                      1- 3309     	LGOTO	_00298_DS_
     005A 21rr                      1- 3310     	MOVIA	((_00347_DS_ >> 8) & 0xff)
     005B 008A                      1- 3311     	MOVAR	PCHBUF
     005C 01rr                      1- 3312     	MOVR	_ledStep,W
     005D 25rr                      1- 3313     	ADDIA	_00347_DS_
     005E 0C03                      1- 3314     	BTRSC	STATUS,0
     005F 058A                      1- 3315     	INCR	PCHBUF,F
     0060 0082                      1- 3316     	MOVAR	PCL
     0061                           1- 3317     _00347_DS_:
     0061 3rrr                      1- 3318     	LGOTO	_00288_DS_
     0062 3rrr                      1- 3319     	LGOTO	_00296_DS_
     0063 3rrr                      1- 3320     	LGOTO	_00295_DS_
     0064 3rrr                      1- 3321     	LGOTO	_00294_DS_
     0065 3rrr                      1- 3322     	LGOTO	_00293_DS_
     0066 3rrr                      1- 3323     	LGOTO	_00292_DS_
     0067 3rrr                      1- 3324     	LGOTO	_00291_DS_
     0068 3rrr                      1- 3325     	LGOTO	_00290_DS_
     0069 3rrr                      1- 3326     	LGOTO	_00289_DS_
     006A                           1- 3327     _00288_DS_:
                                    1- 3328     	.line	353, "main.c"; 	LedInput();
     006A 2rrr                      1- 3329     	LCALL	_LedInput
                                    1- 3330     	.line	354, "main.c"; 	break;
     006B 3rrr                      1- 3331     	LGOTO	_00298_DS_
     006C                           1- 3332     _00289_DS_:
                                    1- 3333     	.line	356, "main.c"; 	LED8ON();
     006C 2rrr                      1- 3334     	LCALL	_LED8ON
     006D                           1- 3335     _00290_DS_:
                                    1- 3336     	.line	358, "main.c"; 	LED7ON();
     006D 2rrr                      1- 3337     	LCALL	_LED7ON
     006E                           1- 3338     _00291_DS_:
                                    1- 3339     	.line	360, "main.c"; 	LED6ON();
     006E 2rrr                      1- 3340     	LCALL	_LED6ON
     006F                           1- 3341     _00292_DS_:
                                    1- 3342     	.line	362, "main.c"; 	LED5ON();
     006F 2rrr                      1- 3343     	LCALL	_LED5ON
     0070                           1- 3344     _00293_DS_:
                                    1- 3345     	.line	364, "main.c"; 	LED4ON();
     0070 2rrr                      1- 3346     	LCALL	_LED4ON
     0071                           1- 3347     _00294_DS_:
                                    1- 3348     	.line	366, "main.c"; 	LED3ON();
     0071 2rrr                      1- 3349     	LCALL	_LED3ON
     0072                           1- 3350     _00295_DS_:
                                    1- 3351     	.line	368, "main.c"; 	LED2ON();
     0072 2rrr                      1- 3352     	LCALL	_LED2ON
     0073                           1- 3353     _00296_DS_:
                                    1- 3354     	.line	370, "main.c"; 	LED1ON();
     0073 2rrr                      1- 3355     	LCALL	_LED1ON
     0074                           1- 3356     _00298_DS_:
                                    1- 3357     	.line	373, "main.c"; 	}
                                    1- 3358     	RETURN	
     0074 0010                      3-   26 m1      ret
                                    1- 3359     ; exit point of _ledShow
                                    1- 3361     ;***
                                    1- 3362     ;  pBlock Stats: dbName = C
                                    1- 3363     ;***
                                    1- 3364     ;has an exit
                                    1- 3365     ;functions called:
                                    1- 3366     ;   _LedInput
                                    1- 3367     ;   _LedInput
                                    1- 3368     ;; Starting pCode block
                                    1- 3369     .segment "code"; module=main, function=_initSys
     0000                           1- 3371     _initSys:
                                    1- 3372     ; 2 exit points
                                    1- 3373     	.line	287, "main.c"; 	DISI();
     0000 0013                      1- 3374     	DISI
                                    1- 3375     	.line	288, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input ;
     0001 2178                      1- 3376     	MOVIA	0x78
     0002 000r                      1- 3377     	IOST	_IOSTA
                                    1- 3378     	.line	289, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 3379     	CLRA	
     0004 000r                      1- 3380     	IOST	_IOSTB
                                    1- 3381     	.line	290, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 3382     	CLRR	_PORTB
                                    1- 3383     	.line	291, "main.c"; 	PORTA = 0x00;
                                    1- 3384     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1- 3385     	CLRR	_PORTA
                                    1- 3386     	.line	292, "main.c"; 	LedInput();
     0008 2rrr                      1- 3387     	LCALL	_LedInput
                                    1- 3388     	.line	293, "main.c"; 	APHCON = 0xBF;
     0009 21BF                      1- 3389     	MOVIA	0xbf
     000A 000r                      1- 3390     	IOST	_APHCON
                                    1- 3391     	.line	294, "main.c"; 	BPHCON = 0xFF;
     000B 21FF                      1- 3392     	MOVIA	0xff
     000C 00rr                      1- 3393     	MOVAR	_BPHCON
                                    1- 3394     	.line	295, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 3395     	MOVAR	_ABPLCON
                                    1- 3396     	.line	297, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1- 3397     	MOVIA	0x01
     000F 00rr                      1- 3398     	MOVAR	_INTE
                                    1- 3399     	.line	299, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 3400     	CLRA	
     0011 000r                      1- 3401     	IOST	_PCON1
                                    1- 3402     	.line	301, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 3403     	MOVIA	0x37
     0013 00rr                      1- 3404     	MOVAR	_TMR0
                                    1- 3405     	.line	302, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0014 0200                      1- 3406     	CLRA	
     0015 0003                      1- 3407     	T0MD	
                                    1- 3408     	.line	304, "main.c"; 	PCON1 = C_TMR0_En;
     0016 2101                      1- 3409     	MOVIA	0x01
     0017 000r                      1- 3410     	IOST	_PCON1
                                    1- 3411     	.line	307, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0018 2198                      1- 3412     	MOVIA	0x98
     0019 00rr                      1- 3413     	MOVAR	_PCON
                                    1- 3414     	.line	310, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001A 2101                      1- 3415     	MOVIA	0x01
     001B 000r                      1- 3416     	IOST	_PCON1
                                    1- 3417     	.line	311, "main.c"; 	ENI();
     001C 0004                      1- 3418     	ENI
                                    1- 3419     	.line	312, "main.c"; 	}
                                    1- 3420     	RETURN	
     001D 0010                      3-   26 m1      ret
                                    1- 3421     ; exit point of _initSys
                                    1- 3423     ;***
                                    1- 3424     ;  pBlock Stats: dbName = C
                                    1- 3425     ;***
                                    1- 3426     ;has an exit
                                    1- 3427     ;functions called:
                                    1- 3428     ;   _pwmStop
                                    1- 3429     ;   _pwmStop
                                    1- 3430     ;; Starting pCode block
                                    1- 3431     .segment "code"; module=main, function=_powerOff
     0000                           1- 3433     _powerOff:
                                    1- 3434     ; 2 exit points
                                    1- 3435     	.line	278, "main.c"; 	workStep = 0;
                                    1- 3436     	BANKSEL	_workStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 3437     	CLRR	_workStep
                                    1- 3438     	.line	279, "main.c"; 	pwmStop();
     0002 2rrr                      1- 3439     	LCALL	_pwmStop
                                    1- 3440     	.line	280, "main.c"; 	ledStep = 0;
                                    1- 3441     	BANKSEL	_ledStep
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 02rr                      1- 3442     	CLRR	_ledStep
                                    1- 3443     	.line	281, "main.c"; 	}
                                    1- 3444     	RETURN	
     0005 0010                      3-   26 m1      ret
                                    1- 3445     ; exit point of _powerOff
                                    1- 3447     ;***
                                    1- 3448     ;  pBlock Stats: dbName = C
                                    1- 3449     ;***
                                    1- 3450     ;has an exit
                                    1- 3451     ;functions called:
                                    1- 3452     ;   _keyRead
                                    1- 3453     ;   _pwmInit
                                    1- 3454     ;   _powerOff
                                    1- 3455     ;   _pwmInit
                                    1- 3456     ;   _keyRead
                                    1- 3457     ;   _pwmInit
                                    1- 3458     ;   _powerOff
                                    1- 3459     ;   _pwmInit
                                    1- 3460     ;1 compiler assigned register :
                                    1- 3461     ;   r0x1053
                                    1- 3462     ;; Starting pCode block
                                    1- 3463     .segment "code"; module=main, function=_keyCtr
                                    1- 3465     ;local variable name mapping:
     0000                           1- 3467     _keyCtr:
                                    1- 3468     ; 2 exit points
                                    1- 3469     	.line	212, "main.c"; 	char kclick = keyRead(0x40 & (~PORTA));
                                    1- 3470     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 07rr                      1- 3471     	COMR	_PORTA,W
                                    1- 3472     	BANKSEL	r0x1053
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 00rr                      1- 3473     	MOVAR	r0x1053
     0004 2140                      1- 3474     	MOVIA	0x40
     0005 10rr                      1- 3475     	ANDAR	r0x1053,F
     0006 01rr                      1- 3476     	MOVR	r0x1053,W
     0007 2rrr                      1- 3477     	LCALL	_keyRead
                                    1- 3478     	BANKSEL	r0x1053
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1- 3479     	MOVAR	r0x1053
                                    1- 3480     	.line	213, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 3481     	XORIA	0x01
     000B 0903                      1- 3482     	BTRSS	STATUS,2
     000C 3rrr                      1- 3483     	LGOTO	_00249_DS_
                                    1- 3484     	.line	215, "main.c"; 	count500ms = 0;
                                    1- 3485     	BANKSEL	_count500ms
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 02rr                      1- 3486     	CLRR	_count500ms
                                    1- 3487     	.line	216, "main.c"; 	ledLightTime = 0;
                                    1- 3488     	BANKSEL	_ledLightTime
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 02rr                      1- 3489     	CLRR	_ledLightTime
                                    1- 3490     	.line	217, "main.c"; 	if(workStep == 0)
                                    1- 3491     	BANKSEL	_workStep
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 3492     	MOVR	_workStep,W
     0013 0903                      1- 3493     	BTRSS	STATUS,2
     0014 3rrr                      1- 3494     	LGOTO	_00213_DS_
                                    1- 3495     	.line	219, "main.c"; 	count1s = 0;
                                    1- 3496     	BANKSEL	_count1s
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 02rr                      1- 3497     	CLRR	_count1s
                                    1- 3498     	.line	220, "main.c"; 	ledLightTime = 2;
     0017 2102                      1- 3499     	MOVIA	0x02
                                    1- 3500     	BANKSEL	_ledLightTime
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 00rr                      1- 3501     	MOVAR	_ledLightTime
                                    1- 3502     	.line	221, "main.c"; 	return;
     001A 3rrr                      1- 3503     	LGOTO	_00251_DS_
     001B                           1- 3504     _00213_DS_:
                                    1- 3505     	.line	223, "main.c"; 	ledTime = 0;
                                    1- 3506     	BANKSEL	_ledTime
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 02rr                      1- 3507     	CLRR	_ledTime
                                    1- 3508     	.line	224, "main.c"; 	if(++workStep > 8)
                                    1- 3509     	BANKSEL	_workStep
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 05rr                      1- 3510     	INCR	_workStep,F
                                    1- 3511     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3512     ;;unsigned compare: left >= lit (0x9=9), size=1
     001F 2109                      1- 3513     	MOVIA	0x09
     0020 04rr                      1- 3514     	SUBAR	_workStep,W
     0021 0803                      1- 3515     	BTRSS	STATUS,0
     0022 3rrr                      1- 3516     	LGOTO	_00215_DS_
                                    1- 3517     	.line	225, "main.c"; 	workStep = 1;
     0023 2101                      1- 3518     	MOVIA	0x01
     0024 00rr                      1- 3519     	MOVAR	_workStep
     0025                           1- 3520     _00215_DS_:
                                    1- 3521     	.line	226, "main.c"; 	shanshuoTime = 6;
     0025 2106                      1- 3522     	MOVIA	0x06
                                    1- 3523     	BANKSEL	_shanshuoTime
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 00rr                      1- 3524     	MOVAR	_shanshuoTime
                                    1- 3525     	.line	227, "main.c"; 	if(workStep == 1)
                                    1- 3526     	BANKSEL	_workStep
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 01rr                      1- 3527     	MOVR	_workStep,W
     002A 2401                      1- 3528     	XORIA	0x01
     002B 0903                      1- 3529     	BTRSS	STATUS,2
     002C 3rrr                      1- 3530     	LGOTO	_00237_DS_
                                    1- 3531     	.line	228, "main.c"; 	maxDuty = 51;
     002D 2133                      1- 3532     	MOVIA	0x33
                                    1- 3533     	BANKSEL	_maxDuty
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 00rr                      1- 3534     	MOVAR	_maxDuty
     0030 3rrr                      1- 3535     	LGOTO	_00238_DS_
     0031                           1- 3536     _00237_DS_:
                                    1- 3537     	.line	229, "main.c"; 	else if(workStep == 2)
                                    1- 3538     	BANKSEL	_workStep
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 01rr                      1- 3539     	MOVR	_workStep,W
     0033 2402                      1- 3540     	XORIA	0x02
     0034 0903                      1- 3541     	BTRSS	STATUS,2
     0035 3rrr                      1- 3542     	LGOTO	_00234_DS_
                                    1- 3543     	.line	230, "main.c"; 	maxDuty = 54;
     0036 2136                      1- 3544     	MOVIA	0x36
                                    1- 3545     	BANKSEL	_maxDuty
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 00rr                      1- 3546     	MOVAR	_maxDuty
     0039 3rrr                      1- 3547     	LGOTO	_00238_DS_
     003A                           1- 3548     _00234_DS_:
                                    1- 3549     	.line	231, "main.c"; 	else if(workStep == 3)
                                    1- 3550     	BANKSEL	_workStep
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 01rr                      1- 3551     	MOVR	_workStep,W
     003C 2403                      1- 3552     	XORIA	0x03
     003D 0903                      1- 3553     	BTRSS	STATUS,2
     003E 3rrr                      1- 3554     	LGOTO	_00231_DS_
                                    1- 3555     	.line	232, "main.c"; 	maxDuty = 56;
     003F 2138                      1- 3556     	MOVIA	0x38
                                    1- 3557     	BANKSEL	_maxDuty
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 00rr                      1- 3558     	MOVAR	_maxDuty
     0042 3rrr                      1- 3559     	LGOTO	_00238_DS_
     0043                           1- 3560     _00231_DS_:
                                    1- 3561     	.line	233, "main.c"; 	else if(workStep == 4)
                                    1- 3562     	BANKSEL	_workStep
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 01rr                      1- 3563     	MOVR	_workStep,W
     0045 2404                      1- 3564     	XORIA	0x04
     0046 0903                      1- 3565     	BTRSS	STATUS,2
     0047 3rrr                      1- 3566     	LGOTO	_00228_DS_
                                    1- 3567     	.line	234, "main.c"; 	maxDuty = 59;
     0048 213B                      1- 3568     	MOVIA	0x3b
                                    1- 3569     	BANKSEL	_maxDuty
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 00rr                      1- 3570     	MOVAR	_maxDuty
     004B 3rrr                      1- 3571     	LGOTO	_00238_DS_
     004C                           1- 3572     _00228_DS_:
                                    1- 3573     	.line	235, "main.c"; 	else if(workStep == 5)
                                    1- 3574     	BANKSEL	_workStep
     004C rrrr                      3-   71 m1      .banksel ram_address
     004D 01rr                      1- 3575     	MOVR	_workStep,W
     004E 2405                      1- 3576     	XORIA	0x05
     004F 0903                      1- 3577     	BTRSS	STATUS,2
     0050 3rrr                      1- 3578     	LGOTO	_00225_DS_
                                    1- 3579     	.line	236, "main.c"; 	maxDuty = 61;
     0051 213D                      1- 3580     	MOVIA	0x3d
                                    1- 3581     	BANKSEL	_maxDuty
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 00rr                      1- 3582     	MOVAR	_maxDuty
     0054 3rrr                      1- 3583     	LGOTO	_00238_DS_
     0055                           1- 3584     _00225_DS_:
                                    1- 3585     	.line	237, "main.c"; 	else if(workStep == 6)
                                    1- 3586     	BANKSEL	_workStep
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 01rr                      1- 3587     	MOVR	_workStep,W
     0057 2406                      1- 3588     	XORIA	0x06
     0058 0903                      1- 3589     	BTRSS	STATUS,2
     0059 3rrr                      1- 3590     	LGOTO	_00222_DS_
                                    1- 3591     	.line	238, "main.c"; 	maxDuty = 63;
     005A 213F                      1- 3592     	MOVIA	0x3f
                                    1- 3593     	BANKSEL	_maxDuty
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 00rr                      1- 3594     	MOVAR	_maxDuty
     005D 3rrr                      1- 3595     	LGOTO	_00238_DS_
     005E                           1- 3596     _00222_DS_:
                                    1- 3597     	.line	239, "main.c"; 	else if(workStep == 7)
                                    1- 3598     	BANKSEL	_workStep
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 01rr                      1- 3599     	MOVR	_workStep,W
     0060 2407                      1- 3600     	XORIA	0x07
     0061 0903                      1- 3601     	BTRSS	STATUS,2
     0062 3rrr                      1- 3602     	LGOTO	_00219_DS_
                                    1- 3603     	.line	240, "main.c"; 	maxDuty = 65;
     0063 2141                      1- 3604     	MOVIA	0x41
                                    1- 3605     	BANKSEL	_maxDuty
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 00rr                      1- 3606     	MOVAR	_maxDuty
     0066 3rrr                      1- 3607     	LGOTO	_00238_DS_
     0067                           1- 3608     _00219_DS_:
                                    1- 3609     	.line	241, "main.c"; 	else if(workStep == 8)
                                    1- 3610     	BANKSEL	_workStep
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 01rr                      1- 3611     	MOVR	_workStep,W
     0069 2408                      1- 3612     	XORIA	0x08
     006A 0903                      1- 3613     	BTRSS	STATUS,2
     006B 3rrr                      1- 3614     	LGOTO	_00238_DS_
                                    1- 3615     	.line	242, "main.c"; 	maxDuty = 68;
     006C 2144                      1- 3616     	MOVIA	0x44
                                    1- 3617     	BANKSEL	_maxDuty
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 00rr                      1- 3618     	MOVAR	_maxDuty
     006F                           1- 3619     _00238_DS_:
                                    1- 3620     	.line	243, "main.c"; 	if(workStep > 0)
                                    1- 3621     	BANKSEL	_workStep
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 01rr                      1- 3622     	MOVR	_workStep,W
     0071 0D03                      1- 3623     	BTRSC	STATUS,2
     0072 3rrr                      1- 3624     	LGOTO	_00240_DS_
                                    1- 3625     	.line	245, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 3626     	BANKSEL	_maxDuty
     0073 rrrr                      3-   71 m1      .banksel ram_address
     0074 01rr                      1- 3627     	MOVR	_maxDuty,W
     0075 00rr                      1- 3628     	SFUN	_PWM2DUTY
                                    1- 3629     	.line	246, "main.c"; 	pwmInit();
     0076 2rrr                      1- 3630     	LCALL	_pwmInit
     0077                           1- 3631     _00240_DS_:
                                    1- 3632     	.line	248, "main.c"; 	ledStep = workStep;
                                    1- 3633     	BANKSEL	_workStep
     0077 rrrr                      3-   71 m1      .banksel ram_address
     0078 01rr                      1- 3634     	MOVR	_workStep,W
                                    1- 3635     	BANKSEL	_ledStep
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 00rr                      1- 3636     	MOVAR	_ledStep
     007B 3rrr                      1- 3637     	LGOTO	_00251_DS_
     007C                           1- 3638     _00249_DS_:
                                    1- 3639     	.line	250, "main.c"; 	else if(kclick == 2)
                                    1- 3640     	BANKSEL	r0x1053
     007C rrrr                      3-   71 m1      .banksel ram_address
     007D 01rr                      1- 3641     	MOVR	r0x1053,W
     007E 2402                      1- 3642     	XORIA	0x02
     007F 0903                      1- 3643     	BTRSS	STATUS,2
     0080 3rrr                      1- 3644     	LGOTO	_00251_DS_
                                    1- 3645     	.line	252, "main.c"; 	if(workStep > 0)
                                    1- 3646     	BANKSEL	_workStep
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 01rr                      1- 3647     	MOVR	_workStep,W
     0083 0D03                      1- 3648     	BTRSC	STATUS,2
     0084 3rrr                      1- 3649     	LGOTO	_00244_DS_
                                    1- 3650     	.line	254, "main.c"; 	powerOff();
     0085 2rrr                      1- 3651     	LCALL	_powerOff
     0086 3rrr                      1- 3652     	LGOTO	_00245_DS_
     0087                           1- 3653     _00244_DS_:
                                    1- 3654     	.line	258, "main.c"; 	if(pwStep == 10)
                                    1- 3655     	BANKSEL	_pwStep
     0087 rrrr                      3-   71 m1      .banksel ram_address
     0088 01rr                      1- 3656     	MOVR	_pwStep,W
     0089 240A                      1- 3657     	XORIA	0x0a
     008A 0903                      1- 3658     	BTRSS	STATUS,2
     008B 3rrr                      1- 3659     	LGOTO	_00242_DS_
                                    1- 3660     	.line	260, "main.c"; 	sleepTime = 0;
                                    1- 3661     	BANKSEL	_sleepTime
     008C rrrr                      3-   71 m1      .banksel ram_address
     008D 02rr                      1- 3662     	CLRR	_sleepTime
     008E 02rr                      1- 3663     	CLRR	(_sleepTime + 1)
                                    1- 3664     	.line	261, "main.c"; 	return;
     008F 3rrr                      1- 3665     	LGOTO	_00251_DS_
     0090                           1- 3666     _00242_DS_:
                                    1- 3667     	.line	263, "main.c"; 	workStep = 1;
     0090 2101                      1- 3668     	MOVIA	0x01
                                    1- 3669     	BANKSEL	_workStep
     0091 rrrr                      3-   71 m1      .banksel ram_address
     0092 00rr                      1- 3670     	MOVAR	_workStep
                                    1- 3671     	.line	264, "main.c"; 	PWM2DUTY = 100;
     0093 2164                      1- 3672     	MOVIA	0x64
     0094 00rr                      1- 3673     	SFUN	_PWM2DUTY
                                    1- 3674     	.line	265, "main.c"; 	currentDuty = 100;
                                    1- 3675     	BANKSEL	_currentDuty
     0095 rrrr                      3-   71 m1      .banksel ram_address
     0096 00rr                      1- 3676     	MOVAR	_currentDuty
                                    1- 3677     	.line	266, "main.c"; 	maxDuty = 50;
     0097 2132                      1- 3678     	MOVIA	0x32
                                    1- 3679     	BANKSEL	_maxDuty
     0098 rrrr                      3-   71 m1      .banksel ram_address
     0099 00rr                      1- 3680     	MOVAR	_maxDuty
                                    1- 3681     	.line	267, "main.c"; 	pwmInit();
     009A 2rrr                      1- 3682     	LCALL	_pwmInit
                                    1- 3683     	.line	268, "main.c"; 	shanshuoTime = 16;
     009B 2110                      1- 3684     	MOVIA	0x10
                                    1- 3685     	BANKSEL	_shanshuoTime
     009C rrrr                      3-   71 m1      .banksel ram_address
     009D 00rr                      1- 3686     	MOVAR	_shanshuoTime
     009E                           1- 3687     _00245_DS_:
                                    1- 3688     	.line	271, "main.c"; 	ledStep = workStep;
                                    1- 3689     	BANKSEL	_workStep
     009E rrrr                      3-   71 m1      .banksel ram_address
     009F 01rr                      1- 3690     	MOVR	_workStep,W
                                    1- 3691     	BANKSEL	_ledStep
     00A0 rrrr                      3-   71 m1      .banksel ram_address
     00A1 00rr                      1- 3692     	MOVAR	_ledStep
     00A2                           1- 3693     _00251_DS_:
                                    1- 3694     	.line	273, "main.c"; 	}
                                    1- 3695     	RETURN	
     00A2 0010                      3-   26 m1      ret
                                    1- 3696     ; exit point of _keyCtr
                                    1- 3699     ;	code size estimation:
                                    1- 3700     ;	 1475+  354 =  1829 instructions ( 4366 byte)
                                    1- 3702     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000002C
_00002_DS_              Label    0000002C
_00003_DS_              Label    0000002C
_00004_DS_              Label    00000025
_00005_DS_              Label    00000025
_00006_DS_              Label    00000057
_00106_DS_              Label    00000027
_00112_DS_              Label    00000048
_00119_DS_              Label    00000059
_00126_DS_              Label    0000005C
_00128_DS_              Label    00000060
_00141_DS_              Label    00000014
_00142_DS_              Label    0000001D
_00144_DS_              Label    0000002D
_00149_DS_              Label    00000049
_00156_DS_              Label    00000002
_00206_DS_              Label    00000046
_00207_DS_              Label    00000050
_00213_DS_              Label    0000001B
_00215_DS_              Label    00000025
_00219_DS_              Label    00000067
_00222_DS_              Label    0000005E
_00225_DS_              Label    00000055
_00228_DS_              Label    0000004C
_00231_DS_              Label    00000043
_00234_DS_              Label    0000003A
_00237_DS_              Label    00000031
_00238_DS_              Label    0000006F
_00240_DS_              Label    00000077
_00242_DS_              Label    00000090
_00244_DS_              Label    00000087
_00245_DS_              Label    0000009E
_00249_DS_              Label    0000007C
_00251_DS_              Label    000000A2
_00265_DS_              Label    00000013
_00268_DS_              Label    00000015
_00271_DS_              Label    0000002B
_00276_DS_              Label    0000002F
_00279_DS_              Label    00000045
_00282_DS_              Label    00000047
_00286_DS_              Label    00000054
_00288_DS_              Label    0000006A
_00289_DS_              Label    0000006C
_00290_DS_              Label    0000006D
_00291_DS_              Label    0000006E
_00292_DS_              Label    0000006F
_00293_DS_              Label    00000070
_00294_DS_              Label    00000071
_00295_DS_              Label    00000072
_00296_DS_              Label    00000073
_00298_DS_              Label    00000074
_00347_DS_              Label    00000061
_00390_DS_              Label    0000000C
_00401_DS_              Label    0000000C
_00421_DS_              Label    0000001F
_00422_DS_              Label    00000027
_00424_DS_              Label    00000015
_00425_DS_              Label    00000029
_00426_DS_              Label    0000002A
_00432_DS_              Label    0000001F
_00436_DS_              Label    00000032
_00438_DS_              Label    0000003A
_00439_DS_              Label    0000003C
_00441_DS_              Label    00000022
_00446_DS_              Label    00000045
_00448_DS_              Label    0000005C
_00455_DS_              Label    00000004
_00457_DS_              Label    0000000E
_00467_DS_              Label    00000038
_00471_DS_              Label    00000069
_00476_DS_              Label    00000071
_00479_DS_              Label    00000044
_00480_DS_              Label    00000075
_00487_DS_              Label    000000A5
_00488_DS_              Label    000000B6
_00496_DS_              Label    000000F0
_00500_DS_              Label    00000102
_00501_DS_              Label    00000105
_00505_DS_              Label    00000123
_00509_DS_              Label    00000135
_00510_DS_              Label    00000138
_00514_DS_              Label    00000156
_00518_DS_              Label    00000168
_00519_DS_              Label    0000016B
_00523_DS_              Label    00000189
_00527_DS_              Label    0000019B
_00528_DS_              Label    0000019E
_00532_DS_              Label    000001BC
_00536_DS_              Label    000001CE
_00537_DS_              Label    000001D1
_00541_DS_              Label    000001EF
_00545_DS_              Label    00000201
_00546_DS_              Label    00000204
_00550_DS_              Label    0000021F
_00551_DS_              Label    00000222
_00555_DS_              Label    00000208
_00558_DS_              Label    000001D5
_00561_DS_              Label    000001A2
_00564_DS_              Label    0000016F
_00567_DS_              Label    0000013C
_00570_DS_              Label    00000109
_00573_DS_              Label    000000D6
_00576_DS_              Label    00000088
_00578_DS_              Label    00000225
_00727_DS_              Label    0000003F
_00728_DS_              Label    0000004B
_00731_DS_              Label    00000082
_00732_DS_              Label    0000008F
_00734_DS_              Label    0000009F
_00735_DS_              Label    000000B1
_00736_DS_              Label    000000C2
_00737_DS_              Label    000000CB
_00738_DS_              Label    000000DD
_00739_DS_              Label    000000EB
_00741_DS_              Label    000000FC
_00742_DS_              Label    00000110
_00743_DS_              Label    0000011E
_00745_DS_              Label    0000012F
_00746_DS_              Label    00000143
_00747_DS_              Label    00000151
_00749_DS_              Label    00000162
_00750_DS_              Label    00000176
_00751_DS_              Label    00000184
_00753_DS_              Label    00000195
_00754_DS_              Label    000001A9
_00755_DS_              Label    000001B7
_00757_DS_              Label    000001C8
_00758_DS_              Label    000001DC
_00759_DS_              Label    000001EA
_00761_DS_              Label    000001FB
_00763_DS_              Label    00000219
_00769_DS_              Label    00000038
_00777_DS_              Label    000000B1
_00780_DS_              Label    000000A8
_00783_DS_              Label    0000009F
_00786_DS_              Label    00000096
_00789_DS_              Label    0000008D
_00792_DS_              Label    00000084
_00795_DS_              Label    0000007B
_00796_DS_              Label    000000B4
_00802_DS_              Label    000000D6
_00805_DS_              Label    000000CD
_00806_DS_              Label    000000DE
_00810_DS_              Label    000000E2
_00811_DS_              Label    000000EE
_00816_DS_              Label    000000B8
_00819_DS_              Label    00000061
_00822_DS_              Label    0000004F
_00825_DS_              Label    000000F5
_00897_DS_              Label    00000044
_00899_DS_              Label    00000056
_00901_DS_              Label    00000068
_00903_DS_              Label    000000E9
_00910_DS_              Label    0000000E
_00912_DS_              Label    0000002F
_00919_DS_              Label    0000000E
_00921_DS_              Label    0000002F
_00928_DS_              Label    0000000E
_00930_DS_              Label    0000002F
_00935_DS_              Label    00000000
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkBatAD             Label    00000000
_checkInAD              Label    00000000
_checkOutA              Label    00000000
_chrgCount              Label    00000000
_chrgCtr                Label    00000000
_chrgFlag               Label    00000000
_chrgTime               Label    00000000
_CMPCR                  Label    00000000
_count1s                Label    00000000
_count200ms             Label    00000000
_count500ms             Label    00000000
_count900s              Label    00000000
_currentDuty            Label    00000000
_debug                  Label    00000000
_delay                  Label    00000000
_duty                   Label    00000000
_F_AIN2_Convert         Label    00000000
_F_AIN3_Convert         Label    00000000
_F_AIN4_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_fgCount                Label    00000000
_fgCtr                  Label    00000000
_fgPRD                  Label    00000000
_firstTime              Label    00000000
_FSR                    Label    00000000
_fullCount              Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_initSys                Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IO_Init                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyCtr                 Label    00000000
_keyRead                Label    00000000
_LED1ON                 Label    00000000
_LED2ON                 Label    00000000
_LED3ON                 Label    00000000
_LED4ON                 Label    00000000
_LED5ON                 Label    00000000
_LED6ON                 Label    00000000
_LED7ON                 Label    00000000
_LED8ON                 Label    00000000
_ledCtr                 Label    00000000
_LedCtr2                Label    00000000
_LedInput               Label    00000000
_ledLightTime           Label    00000000
_ledShow                Label    00000000
_ledStep                Label    00000000
_ledTime                Label    00000000
_longPressFlag          Label    00000000
_lowBatTime             Label    00000000
_lowCount               Label    00000000
_main                   Label    00000000
_maxDuty                Label    00000000
_OSCCR                  Label    00000000
_overCount              Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_powerOff               Label    00000000
_preFG                  Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_pwm1Init               Label    00000000
_pwm1Stop               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_pwmInit                Label    00000000
_pwmStop                Label    00000000
_pwStep                 Label    00000000
_R_AIN2_DATA            Label    00000000
_R_AIN2_DATA_LB         Label    00000000
_R_AIN3_DATA            Label    00000000
_R_AIN3_DATA_LB         Label    00000000
_R_AIN4_DATA            Label    00000000
_R_AIN4_DATA_LB         Label    00000000
_redLedFlag             Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_shanshuoTime           Label    00000000
_sleepTime              Label    00000000
_startStep              Label    00000000
_Status                 Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_tempDuty               Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    00000071
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
r0x1031                 Label    00000000
r0x1032                 Label    00000000
r0x1033                 Label    00000000
r0x1034                 Label    00000000
r0x1037                 Label    00000000
r0x1038                 Label    00000000
r0x1039                 Label    00000000
r0x103A                 Label    00000000
r0x103D                 Label    00000000
r0x103E                 Label    00000000
r0x1041                 Label    00000000
r0x1044                 Label    00000000
r0x1045                 Label    00000000
r0x1046                 Label    00000000
r0x1047                 Label    00000000
r0x1048                 Label    00000000
r0x1049                 Label    00000000
r0x104A                 Label    00000000
r0x104B                 Label    00000000
r0x104C                 Label    00000000
r0x104D                 Label    00000000
r0x104E                 Label    00000000
r0x104F                 Label    00000000
r0x1050                 Label    00000000
r0x1051                 Label    00000000
r0x1052                 Label    00000000
r0x1053                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
