
                    Nyquest Technology Co., Ltd.

NYASM 2.27

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubGewei
                                    1-   20     	extern	_showNubGewei2
                                    1-   21     	extern	_showNubShiwei
                                    1-   22     	extern	_showNubShiwei2
                                    1-   23     	extern	_showBaiwei
                                    1-   24     	extern	_showKeyLed
                                    1-   25     	extern	_B1
                                    1-   26     	extern	_C1
                                    1-   27     	extern	_A2
                                    1-   28     	extern	_B2
                                    1-   29     	extern	_C2
                                    1-   30     	extern	_D2
                                    1-   31     	extern	_E2
                                    1-   32     	extern	_F2
                                    1-   33     	extern	_G2
                                    1-   34     	extern	_A3
                                    1-   35     	extern	_B3
                                    1-   36     	extern	_C3
                                    1-   37     	extern	_D3
                                    1-   38     	extern	_E3
                                    1-   39     	extern	_F3
                                    1-   40     	extern	_G3
                                    1-   41     	extern	_delayms
                                    1-   42     	extern	_LedCtr2
                                    1-   43     	extern	_checkInAD
                                    1-   44     	extern	_fgCtr
                                    1-   45     	extern	_ledCtr
                                    1-   46     	extern	_workCtr
                                    1-   47     	extern	__divuchar
                                    1-   48     	extern	__moduchar
                                    1-   49     	extern	_PORTAbits
                                    1-   50     	extern	_PORTBbits
                                    1-   51     	extern	_PCONbits
                                    1-   52     	extern	_BWUCONbits
                                    1-   53     	extern	_ABPLCONbits
                                    1-   54     	extern	_BPHCONbits
                                    1-   55     	extern	_INTEbits
                                    1-   56     	extern	_INTFbits
                                    1-   57     	extern	_ADMDbits
                                    1-   58     	extern	_ADRbits
                                    1-   59     	extern	_ADVREFHbits
                                    1-   60     	extern	_ADCRbits
                                    1-   61     	extern	_AWUCONbits
                                    1-   62     	extern	_PACONbits
                                    1-   63     	extern	_INTEDGbits
                                    1-   64     	extern	_ANAENbits
                                    1-   65     	extern	_RFCbits
                                    1-   66     	extern	_INTE2bits
                                    1-   67     	extern	_INDF
                                    1-   68     	extern	_TMR0
                                    1-   69     	extern	_PCL
                                    1-   70     	extern	_STATUS
                                    1-   71     	extern	_FSR
                                    1-   72     	extern	_PORTA
                                    1-   73     	extern	_PORTB
                                    1-   74     	extern	_PCON
                                    1-   75     	extern	_BWUCON
                                    1-   76     	extern	_PCHBUF
                                    1-   77     	extern	_ABPLCON
                                    1-   78     	extern	_BPHCON
                                    1-   79     	extern	_INTE
                                    1-   80     	extern	_INTF
                                    1-   81     	extern	_ADMD
                                    1-   82     	extern	_ADR
                                    1-   83     	extern	_ADD
                                    1-   84     	extern	_ADVREFH
                                    1-   85     	extern	_ADCR
                                    1-   86     	extern	_AWUCON
                                    1-   87     	extern	_PACON
                                    1-   88     	extern	_INTEDG
                                    1-   89     	extern	_TMRH
                                    1-   90     	extern	_ANAEN
                                    1-   91     	extern	_RFC
                                    1-   92     	extern	_TM3RH
                                    1-   93     	extern	_INTE2
                                    1-   94     	extern	_TMR1
                                    1-   95     	extern	_T1CR1
                                    1-   96     	extern	_T1CR2
                                    1-   97     	extern	_PWM1DUTY
                                    1-   98     	extern	_PS1CV
                                    1-   99     	extern	_BZ1CR
                                    1-  100     	extern	_IRCR
                                    1-  101     	extern	_TBHP
                                    1-  102     	extern	_TBHD
                                    1-  103     	extern	_TMR2
                                    1-  104     	extern	_T2CR1
                                    1-  105     	extern	_T2CR2
                                    1-  106     	extern	_PWM2DUTY
                                    1-  107     	extern	_PS2CV
                                    1-  108     	extern	_BZ2CR
                                    1-  109     	extern	_OSCCR
                                    1-  110     	extern	_TMR3
                                    1-  111     	extern	_T3CR1
                                    1-  112     	extern	_T3CR2
                                    1-  113     	extern	_PWM3DUTY
                                    1-  114     	extern	_PS3CV
                                    1-  115     	extern	_BZ3CR
                                    1-  116     	extern	_IOSTA
                                    1-  117     	extern	_IOSTB
                                    1-  118     	extern	_APHCON
                                    1-  119     	extern	_PS0CV
                                    1-  120     	extern	_BODCON
                                    1-  121     	extern	_CMPCR
                                    1-  122     	extern	_PCON1
                                    1-  123     	extern	_T0MD
                                    1-  124     	extern	___sdcc_saved_fsr
                                    1-  125     	extern	___sdcc_saved_stk00
                                    1-  126     	extern	___sdcc_saved_stk01
                                    1-  127     	extern	__gptrget1
                                    1-  128     	extern	__mulchar
                                    1-  129     	extern	__nyc_ny8_startup
                                    1-  130     ;--------------------------------------------------------
                                    1-  131     ; global declarations
                                    1-  132     ;--------------------------------------------------------
                                    1-  133     	extern	_delay
                                    1-  134     	extern	_F_wait_eoc
                                    1-  135     	extern	_F_AIN2_Convert
                                    1-  136     	extern	_F_AIN3_Convert
                                    1-  137     	extern	_F_AIN4_Convert
                                    1-  138     	extern	_checkOutA
                                    1-  139     	extern	_checkBatAD
                                    1-  140     	extern	_initAD
                                    1-  141     	extern	_keyRead
                                    1-  142     	extern	_gotoSleep
                                    1-  143     	extern	_pwmStop
                                    1-  144     	extern	_pwmInit
                                    1-  145     	extern	_pwm1Stop
                                    1-  146     	extern	_pwm1Init
                                    1-  147     	extern	_powerOff
                                    1-  148     	extern	_initSys
                                    1-  149     	extern	_keyCtr
                                    1-  150     	extern	_refreshNub
                                    1-  151     	extern	_chrgCtr
                                    1-  152     	extern	_isr
                                    1-  153     	extern	_main
                                    1-  154     	extern	_debug
                                    1-  155     	extern	_Status
                                    1-  156     	extern	_R_AIN4_DATA
                                    1-  157     	extern	_R_AIN4_DATA_LB
                                    1-  158     	extern	_R_AIN3_DATA
                                    1-  159     	extern	_R_AIN3_DATA_LB
                                    1-  160     	extern	_R_AIN2_DATA
                                    1-  161     	extern	_R_AIN2_DATA_LB
                                    1-  162     	extern	_intCount
                                    1-  163     	extern	_sleepTime
                                    1-  164     	extern	_count200ms
                                    1-  165     	extern	_count500ms
                                    1-  166     	extern	_count1s
                                    1-  167     	extern	_count900s
                                    1-  168     	extern	_workStep
                                    1-  169     	extern	_keyCount
                                    1-  170     	extern	_pwStep
                                    1-  171     	extern	_lowCount
                                    1-  172     	extern	_ledLightTime
                                    1-  173     	extern	_maxDuty
                                    1-  174     	extern	_currentDuty
                                    1-  175     	extern	_overCount
                                    1-  176     	extern	_tempDuty
                                    1-  177     	extern	_count5S
                                    1-  178     	extern	_ledDeadTime
                                    1-  179     	extern	_tempshiweiNum
                                    1-  180     	extern	_tempgeweiNum
                                    1-  181     	extern	_refreshCount
                                    1-  182     	extern	_shiweiNum
                                    1-  183     	extern	_geweiNum
                                    1-  184     	extern	_batValue
                                    1-  185     	extern	_cDuty
                                    1-  186     	extern	_preBatValue
                                    1-  187     	extern	_showFlag
                                    1-  188     	extern	_chrgStep
                                    1-  189     	extern	_lightBat
                                    1-  191     	extern PSAVE
                                    1-  192     	extern SSAVE
                                    1-  193     	extern WSAVE
                                    1-  194     	extern STK02
                                    1-  195     	extern STK01
                                    1-  196     	extern STK00
                                    1-  198     .segment "uninit", 0x20000040
 20000040                           1-  199     PSAVE:
                                    1-  200     	.res 1
 20000041                           1-  201     SSAVE:
                                    1-  202     	.res 1
 20000042                           1-  203     WSAVE:
                                    1-  204     	.res 1
 20000043                           1-  205     STK02:
                                    1-  206     	.res 1
 20000044                           1-  207     STK01:
                                    1-  208     	.res 1
 20000045                           1-  209     STK00:
                                    1-  210     	.res 1
                                    1-  212     ;--------------------------------------------------------
                                    1-  213     ; global definitions
                                    1-  214     ;--------------------------------------------------------
                                    1-  215     .segment "uninit"
     0000                           1-  216     _R_AIN4_DATA:
                                    1-  217     	.res	2
                                    1-  220     .segment "uninit"
     0000                           1-  221     _R_AIN4_DATA_LB:
                                    1-  222     	.res	1
                                    1-  225     .segment "uninit"
     0000                           1-  226     _R_AIN3_DATA:
                                    1-  227     	.res	2
                                    1-  230     .segment "uninit"
     0000                           1-  231     _R_AIN3_DATA_LB:
                                    1-  232     	.res	1
                                    1-  235     .segment "uninit"
     0000                           1-  236     _R_AIN2_DATA:
                                    1-  237     	.res	2
                                    1-  240     .segment "uninit"
     0000                           1-  241     _R_AIN2_DATA_LB:
                                    1-  242     	.res	1
                                    1-  245     ;--------------------------------------------------------
                                    1-  246     ; absolute symbol definitions
                                    1-  247     ;--------------------------------------------------------
                                    1-  248     ;--------------------------------------------------------
                                    1-  249     ; compiler-defined variables
                                    1-  250     ;--------------------------------------------------------
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x1061:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x105E:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x105F:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x105D:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x105C:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x105B:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x105A:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1055:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1056:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x1057:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x1058:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x1059:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x1051:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x1054:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x104B:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x104C:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x104D:
                                    1-  301     	.res	1
                                    1-  302     .segment "uninit"
     0000                           1-  303     r0x1050:
                                    1-  304     	.res	1
                                    1-  305     .segment "uninit"
     0000                           1-  306     r0x1045:
                                    1-  307     	.res	1
                                    1-  308     .segment "uninit"
     0000                           1-  309     r0x1046:
                                    1-  310     	.res	1
                                    1-  311     .segment "uninit"
     0000                           1-  312     r0x1047:
                                    1-  313     	.res	1
                                    1-  314     .segment "uninit"
     0000                           1-  315     r0x104A:
                                    1-  316     	.res	1
                                    1-  317     .segment "uninit"
     0000                           1-  318     r0x103F:
                                    1-  319     	.res	1
                                    1-  320     .segment "uninit"
     0000                           1-  321     r0x1040:
                                    1-  322     	.res	1
                                    1-  323     .segment "uninit"
     0000                           1-  324     r0x1041:
                                    1-  325     	.res	1
                                    1-  326     .segment "uninit"
     0000                           1-  327     r0x1044:
                                    1-  328     	.res	1
                                    1-  329     .segment "uninit"
     0000                           1-  330     r0x103B:
                                    1-  331     	.res	1
                                    1-  332     .segment "uninit"
     0000                           1-  333     r0x103A:
                                    1-  334     	.res	1
                                    1-  335     .segment "uninit"
     0000                           1-  336     r0x103C:
                                    1-  337     	.res	1
                                    1-  338     .segment "uninit"
     0000                           1-  339     r0x103D:
                                    1-  340     	.res	1
                                    1-  341     .segment "uninit"
     0000                           1-  342     r0x103E:
                                    1-  343     	.res	1
                                    1-  344     ;--------------------------------------------------------
                                    1-  345     ; initialized data
                                    1-  346     ;--------------------------------------------------------
                                    1-  348     .segment "idata"
     0000                           1-  349     _debug:
     0000 0000                      1-  350     	dw	0x00
                                    1-  354     .segment "idata"
     0000                           1-  355     _numArray:
     0000 003F                      1-  356     	dw	0x3f
     0001 0006                      1-  357     	dw	0x06
     0002 005B                      1-  358     	dw	0x5b
     0003 004F                      1-  359     	dw	0x4f
     0004 0066                      1-  360     	dw	0x66
     0005 006D                      1-  361     	dw	0x6d
     0006 007D                      1-  362     	dw	0x7d
     0007 0007                      1-  363     	dw	0x07
     0008 007F                      1-  364     	dw	0x7f
     0009 006F                      1-  365     	dw	0x6f
     000A 0071                      1-  366     	dw	0x71
     000B 0079                      1-  367     	dw	0x79
     000C 0050                      1-  368     	dw	0x50
                                    1-  372     .segment "idata"
     0000                           1-  373     _Status:
     0000 0000                      1-  374     	dw	0x00
                                    1-  378     .segment "idata"
     0000                           1-  379     _intCount:
     0000 0000                      1-  380     	dw	0x00
                                    1-  384     .segment "idata"
     0000                           1-  385     _sleepTime:
     0000 0000 0000                 1-  386     	dw	0x00, 0x00
                                    1-  390     .segment "idata"
     0000                           1-  391     _count200ms:
     0000 0000                      1-  392     	dw	0x00
                                    1-  396     .segment "idata"
     0000                           1-  397     _count500ms:
     0000 0000                      1-  398     	dw	0x00
                                    1-  402     .segment "idata"
     0000                           1-  403     _count1s:
     0000 0000                      1-  404     	dw	0x00
                                    1-  408     .segment "idata"
     0000                           1-  409     _count900s:
     0000 0000 0000                 1-  410     	dw	0x00, 0x00
                                    1-  414     .segment "idata"
     0000                           1-  415     _workStep:
     0000 0000                      1-  416     	dw	0x00
                                    1-  420     .segment "idata"
     0000                           1-  421     _keyCount:
     0000 0000                      1-  422     	dw	0x00
                                    1-  426     .segment "idata"
     0000                           1-  427     _pwStep:
     0000 0000                      1-  428     	dw	0x00
                                    1-  432     .segment "idata"
     0000                           1-  433     _lowCount:
     0000 0000                      1-  434     	dw	0x00
                                    1-  438     .segment "idata"
     0000                           1-  439     _ledLightTime:
     0000 0000                      1-  440     	dw	0x00
                                    1-  444     .segment "idata"
     0000                           1-  445     _maxDuty:
     0000 0000                      1-  446     	dw	0x00
                                    1-  450     .segment "idata"
     0000                           1-  451     _currentDuty:
     0000 0000                      1-  452     	dw	0x00
                                    1-  456     .segment "idata"
     0000                           1-  457     _overCount:
     0000 0000                      1-  458     	dw	0x00
                                    1-  462     .segment "idata"
     0000                           1-  463     _tempDuty:
     0000 0000                      1-  464     	dw	0x00
                                    1-  468     .segment "idata"
     0000                           1-  469     _count5S:
     0000 0000 0000                 1-  470     	dw	0x00, 0x00
                                    1-  474     .segment "idata"
     0000                           1-  475     _ledDeadTime:
     0000 0000                      1-  476     	dw	0x00
                                    1-  480     .segment "idata"
     0000                           1-  481     _tempshiweiNum:
     0000 0000                      1-  482     	dw	0x00
                                    1-  486     .segment "idata"
     0000                           1-  487     _tempgeweiNum:
     0000 0000                      1-  488     	dw	0x00
                                    1-  492     .segment "idata"
     0000                           1-  493     _refreshCount:
     0000 0000 0000                 1-  494     	dw	0x00, 0x00
                                    1-  498     .segment "idata"
     0000                           1-  499     _shiweiNum:
     0000 0000                      1-  500     	dw	0x00
                                    1-  504     .segment "idata"
     0000                           1-  505     _geweiNum:
     0000 0000                      1-  506     	dw	0x00
                                    1-  510     .segment "idata"
     0000                           1-  511     _batValue:
     0000 0000                      1-  512     	dw	0x00
                                    1-  516     .segment "idata"
     0000                           1-  517     _cDuty:
     0000 0000                      1-  518     	dw	0x00
                                    1-  522     .segment "idata"
     0000                           1-  523     _preBatValue:
     0000 0000                      1-  524     	dw	0x00
                                    1-  528     .segment "idata"
     0000                           1-  529     _showFlag:
     0000 0000                      1-  530     	dw	0x00
                                    1-  534     .segment "idata"
     0000                           1-  535     _chrgStep:
     0000 0000                      1-  536     	dw	0x00
                                    1-  540     .segment "idata"
     0000                           1-  541     _lightBat:
     0000 0000                      1-  542     	dw	0x00
                                    1-  545     ;--------------------------------------------------------
                                    1-  546     ; overlayable items in internal ram 
                                    1-  547     ;--------------------------------------------------------
                                    1-  548     ;	udata_ovr
                                    1-  549     ;--------------------------------------------------------
                                    1-  550     ; reset vector 
                                    1-  551     ;--------------------------------------------------------
                                    1-  552     ORG	0x0000
     0000 3rrr                      1-  553     	LGOTO	__nyc_ny8_startup
                                    1-  554     ;--------------------------------------------------------
                                    1-  555     ; interrupt and initialization code
                                    1-  556     ;--------------------------------------------------------
                                    1-  557     ORG 0x0008
     0008 3rrr                      1-  558     	lgoto	__sdcc_interrupt
                                    1-  560     .segment "code"
     0000                           1-  561     __sdcc_interrupt:
                                    1-  562     ;***
                                    1-  563     ;  pBlock Stats: dbName = I
                                    1-  564     ;***
                                    1-  565     ;2 compiler assigned registers:
                                    1-  566     ;   STK00
                                    1-  567     ;   STK01
                                    1-  568     ;; Starting pCode block
     0000                           1-  569     _isr:
                                    1-  570     ; 0 exit points
                                    1-  571     	.line	85, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  572     	MOVAR	WSAVE
     0001 1503                      1-  573     	SWAPR	STATUS,W
     0002 0283                      1-  574     	CLRR	STATUS
     0003 00rr                      1-  575     	MOVAR	SSAVE
     0004 010A                      1-  576     	MOVR	PCHBUF,W
     0005 028A                      1-  577     	CLRR	PCHBUF
     0006 00rr                      1-  578     	MOVAR	PSAVE
     0007 0104                      1-  579     	MOVR	FSR,W
                                    1-  580     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  581     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  582     	MOVR	STK00,W
                                    1-  583     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  584     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  585     	MOVR	STK01,W
                                    1-  586     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  587     	MOVAR	___sdcc_saved_stk01
                                    1-  588     	.line	87, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  589     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  590     	LGOTO	_00121_DS_
                                    1-  591     	.line	89, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  592     	MOVIA	0x37
     0013 03rr                      1-  593     	ADDAR	_TMR0,F
                                    1-  594     	.line	91, "main.c"; 	if(++intCount >= 100)
                                    1-  595     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  596     	INCR	_intCount,F
                                    1-  597     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  598     	MOVIA	0x64
     0017 04rr                      1-  599     	SUBAR	_intCount,W
     0018 0803                      1-  600     	BTRSS	STATUS,0
     0019 3rrr                      1-  601     	LGOTO	_00121_DS_
                                    1-  602     	.line	93, "main.c"; 	IntFlag = 1;
                                    1-  603     	BANKSEL	_Status
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 18rr                      1-  604     	BSR	_Status,0
                                    1-  605     	.line	94, "main.c"; 	intCount = 0;
                                    1-  606     	BANKSEL	_intCount
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 02rr                      1-  607     	CLRR	_intCount
                                    1-  608     	.line	95, "main.c"; 	if(++count500ms >= 40)
                                    1-  609     	BANKSEL	_count500ms
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 05rr                      1-  610     	INCR	_count500ms,F
                                    1-  611     ;;unsigned compare: left < lit (0x28=40), size=1
     0020 2128                      1-  612     	MOVIA	0x28
     0021 04rr                      1-  613     	SUBAR	_count500ms,W
     0022 0C03                      1-  614     	BTRSC	STATUS,0
                                    1-  615     	.line	96, "main.c"; 	count500ms = 0;
     0023 02rr                      1-  616     	CLRR	_count500ms
                                    1-  617     	.line	97, "main.c"; 	if(++count200ms >= 20)
                                    1-  618     	BANKSEL	_count200ms
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 05rr                      1-  619     	INCR	_count200ms,F
     0026 2114                      1-  620     	MOVIA	0x14
     0027 04rr                      1-  621     	SUBAR	_count200ms,W
     0028 0803                      1-  622     	BTRSS	STATUS,0
     0029 3rrr                      1-  623     	LGOTO	_00110_DS_
                                    1-  624     	.line	99, "main.c"; 	count200ms = 0;
     002A 02rr                      1-  625     	CLRR	_count200ms
                                    1-  626     	.line	100, "main.c"; 	if(ledDeadTime > 0)
                                    1-  627     	BANKSEL	_ledDeadTime
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1-  628     	MOVR	_ledDeadTime,W
     002D 0903                      1-  629     	BTRSS	STATUS,2
                                    1-  630     	.line	101, "main.c"; 	--ledDeadTime;
     002E 06rr                      1-  631     	DECR	_ledDeadTime,F
     002F                           1-  632     _00110_DS_:
                                    1-  633     	.line	103, "main.c"; 	if(++count1s >= 100)
                                    1-  634     	BANKSEL	_count1s
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 05rr                      1-  635     	INCR	_count1s,F
     0031 2164                      1-  636     	MOVIA	0x64
     0032 04rr                      1-  637     	SUBAR	_count1s,W
     0033 0803                      1-  638     	BTRSS	STATUS,0
     0034 3rrr                      1-  639     	LGOTO	_00121_DS_
                                    1-  640     	.line	105, "main.c"; 	count1s = 0;
     0035 02rr                      1-  641     	CLRR	_count1s
                                    1-  642     	.line	106, "main.c"; 	if(ledLightTime > 0)
                                    1-  643     	BANKSEL	_ledLightTime
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 01rr                      1-  644     	MOVR	_ledLightTime,W
     0038 0903                      1-  645     	BTRSS	STATUS,2
                                    1-  646     	.line	107, "main.c"; 	ledLightTime--;
     0039 06rr                      1-  647     	DECR	_ledLightTime,F
                                    1-  648     	.line	108, "main.c"; 	if(workStep)
                                    1-  649     	BANKSEL	_workStep
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 01rr                      1-  650     	MOVR	_workStep,W
     003C 0D03                      1-  651     	BTRSC	STATUS,2
     003D 3rrr                      1-  652     	LGOTO	_00114_DS_
                                    1-  653     	.line	110, "main.c"; 	++count900s;
                                    1-  654     	BANKSEL	_count900s
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 05rr                      1-  655     	INCR	_count900s,F
     0040 0D03                      1-  656     	BTRSC	STATUS,2
     0041 05rr                      1-  657     	INCR	(_count900s + 1),F
     0042 3rrr                      1-  658     	LGOTO	_00121_DS_
     0043                           1-  659     _00114_DS_:
                                    1-  660     	.line	114, "main.c"; 	count900s = 0;
                                    1-  661     	BANKSEL	_count900s
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 02rr                      1-  662     	CLRR	_count900s
     0045 02rr                      1-  663     	CLRR	(_count900s + 1)
     0046                           1-  664     _00121_DS_:
                                    1-  665     	.line	123, "main.c"; 	if(INTFbits.PABIF)
     0046 08rr                      1-  666     	BTRSS	_INTFbits,1
     0047 3rrr                      1-  667     	LGOTO	_00123_DS_
                                    1-  668     	.line	125, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0048 21FD                      1-  669     	MOVIA	0xfd
     0049 00rr                      1-  670     	MOVAR	_INTF
     004A                           1-  671     _00123_DS_:
                                    1-  672     	.line	128, "main.c"; 	INTF = 0;
     004A 02rr                      1-  673     	CLRR	_INTF
                                    1-  674     	.line	130, "main.c"; 	}
                                    1-  675     	BANKSEL	___sdcc_saved_stk01
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 01rr                      1-  676     	MOVR	___sdcc_saved_stk01,W
     004D 00rr                      1-  677     	MOVAR	STK01
                                    1-  678     	BANKSEL	___sdcc_saved_stk00
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 01rr                      1-  679     	MOVR	___sdcc_saved_stk00,W
     0050 00rr                      1-  680     	MOVAR	STK00
                                    1-  681     	BANKSEL	___sdcc_saved_fsr
     0051 rrrr                      3-   71 m1      .banksel ram_address
     0052 01rr                      1-  682     	MOVR	___sdcc_saved_fsr,W
     0053 0084                      1-  683     	MOVAR	FSR
     0054 01rr                      1-  684     	MOVR	PSAVE,W
     0055 008A                      1-  685     	MOVAR	PCHBUF
     0056 0283                      1-  686     	CLRR	STATUS
     0057 15rr                      1-  687     	SWAPR	SSAVE,W
     0058 0083                      1-  688     	MOVAR	STATUS
     0059 15rr                      1-  689     	SWAPR	WSAVE,F
     005A 15rr                      1-  690     	SWAPR	WSAVE,W
     005B                           1-  691     END_OF_INTERRUPT:
     005B 0011                      1-  692     	RETIE	
                                    1-  694     ;--------------------------------------------------------
                                    1-  695     ; code
                                    1-  696     ;--------------------------------------------------------
                                    1-  697     ;***
                                    1-  698     ;  pBlock Stats: dbName = M
                                    1-  699     ;***
                                    1-  700     ;has an exit
                                    1-  701     ;functions called:
                                    1-  702     ;   _initSys
                                    1-  703     ;   _initAD
                                    1-  704     ;   _refreshNub
                                    1-  705     ;   _powerOff
                                    1-  706     ;   _checkBatAD
                                    1-  707     ;   _checkBatAD
                                    1-  708     ;   _checkOutA
                                    1-  709     ;   _chrgCtr
                                    1-  710     ;   _keyCtr
                                    1-  711     ;   _gotoSleep
                                    1-  712     ;   _powerOff
                                    1-  713     ;   _initSys
                                    1-  714     ;   _initAD
                                    1-  715     ;   _refreshNub
                                    1-  716     ;   _powerOff
                                    1-  717     ;   _checkBatAD
                                    1-  718     ;   _checkBatAD
                                    1-  719     ;   _checkOutA
                                    1-  720     ;   _chrgCtr
                                    1-  721     ;   _keyCtr
                                    1-  722     ;   _gotoSleep
                                    1-  723     ;   _powerOff
                                    1-  724     ;; Starting pCode block
                                    1-  725     .segment "code"; module=main, function=_main
     0000                           1-  727     _main:
                                    1-  728     ; 2 exit points
                                    1-  729     	.line	135, "main.c"; 	initSys();
     0000 2rrr                      1-  730     	LCALL	_initSys
                                    1-  731     	.line	136, "main.c"; 	initAD();
     0001 2rrr                      1-  732     	LCALL	_initAD
     0002                           1-  733     _00171_DS_:
                                    1-  734     	.line	139, "main.c"; 	CLRWDT();
     0002 0002                      1-  735     	clrwdt
                                    1-  736     	.line	140, "main.c"; 	if(showFlag)
                                    1-  737     	BANKSEL	_showFlag
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 01rr                      1-  738     	MOVR	_showFlag,W
     0005 0903                      1-  739     	BTRSS	STATUS,2
                                    1-  740     	.line	141, "main.c"; 	refreshNub();
     0006 2rrr                      1-  741     	LCALL	_refreshNub
                                    1-  742     	.line	142, "main.c"; 	if(workStep > 0 && tempDuty >= 40)
                                    1-  743     	BANKSEL	_workStep
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 01rr                      1-  744     	MOVR	_workStep,W
     0009 0D03                      1-  745     	BTRSC	STATUS,2
     000A 3rrr                      1-  746     	LGOTO	_00136_DS_
                                    1-  747     ;;unsigned compare: left < lit (0x28=40), size=1
     000B 2128                      1-  748     	MOVIA	0x28
                                    1-  749     	BANKSEL	_tempDuty
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 04rr                      1-  750     	SUBAR	_tempDuty,W
     000E 0803                      1-  751     	BTRSS	STATUS,0
     000F 3rrr                      1-  752     	LGOTO	_00136_DS_
                                    1-  753     	.line	144, "main.c"; 	if(cDuty > tempDuty)
                                    1-  754     	BANKSEL	_cDuty
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1-  755     	MOVR	_cDuty,W
                                    1-  756     	BANKSEL	_tempDuty
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1-  757     	SUBAR	_tempDuty,W
     0014 0C03                      1-  758     	BTRSC	STATUS,0
     0015 3rrr                      1-  759     	LGOTO	_00133_DS_
                                    1-  760     	.line	146, "main.c"; 	cDuty--;
                                    1-  761     	BANKSEL	_cDuty
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 06rr                      1-  762     	DECR	_cDuty,F
                                    1-  763     	.line	147, "main.c"; 	PWM2DUTY = cDuty;
     0018 01rr                      1-  764     	MOVR	_cDuty,W
     0019 00rr                      1-  765     	SFUN	_PWM2DUTY
     001A 3rrr                      1-  766     	LGOTO	_00136_DS_
     001B                           1-  767     _00133_DS_:
                                    1-  768     	.line	149, "main.c"; 	else if(cDuty < tempDuty)
                                    1-  769     	BANKSEL	_tempDuty
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 01rr                      1-  770     	MOVR	_tempDuty,W
                                    1-  771     	BANKSEL	_cDuty
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 04rr                      1-  772     	SUBAR	_cDuty,W
     001F 0C03                      1-  773     	BTRSC	STATUS,0
     0020 3rrr                      1-  774     	LGOTO	_00136_DS_
                                    1-  775     	.line	151, "main.c"; 	cDuty++;
     0021 05rr                      1-  776     	INCR	_cDuty,F
                                    1-  777     	.line	152, "main.c"; 	PWM2DUTY = cDuty;
     0022 01rr                      1-  778     	MOVR	_cDuty,W
     0023 00rr                      1-  779     	SFUN	_PWM2DUTY
     0024                           1-  780     _00136_DS_:
                                    1-  781     	.line	155, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  782     	BANKSEL	_workStep
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  783     	MOVR	_workStep,W
     0026 0D03                      1-  784     	BTRSC	STATUS,2
     0027 3rrr                      1-  785     	LGOTO	_00139_DS_
                                    1-  786     	BANKSEL	_currentDuty
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 01rr                      1-  787     	MOVR	_currentDuty,W
                                    1-  788     	BANKSEL	_maxDuty
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 04rr                      1-  789     	SUBAR	_maxDuty,W
     002C 0C03                      1-  790     	BTRSC	STATUS,0
     002D 3rrr                      1-  791     	LGOTO	_00139_DS_
                                    1-  792     	.line	157, "main.c"; 	currentDuty = currentDuty - 1;
                                    1-  793     	BANKSEL	_currentDuty
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 06rr                      1-  794     	DECR	_currentDuty,F
                                    1-  795     	.line	158, "main.c"; 	PWM2DUTY = currentDuty;
     0030 01rr                      1-  796     	MOVR	_currentDuty,W
     0031 00rr                      1-  797     	SFUN	_PWM2DUTY
                                    1-  798     	.line	159, "main.c"; 	cDuty = currentDuty;
     0032 01rr                      1-  799     	MOVR	_currentDuty,W
                                    1-  800     	BANKSEL	_cDuty
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 00rr                      1-  801     	MOVAR	_cDuty
     0035                           1-  802     _00139_DS_:
                                    1-  803     	.line	161, "main.c"; 	if(!IntFlag)
                                    1-  804     	BANKSEL	_Status
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 08rr                      1-  805     	BTRSS	_Status,0
     0037 3rrr                      1-  806     	LGOTO	_00171_DS_
                                    1-  807     	.line	163, "main.c"; 	IntFlag = 0;
     0038 1Crr                      1-  808     	BCR	_Status,0
                                    1-  809     ;;unsigned compare: left < lit (0x5=5), size=1
                                    1-  810     	.line	165, "main.c"; 	if(overCount >= 5 && workStep > 0)
     0039 2105                      1-  811     	MOVIA	0x05
                                    1-  812     	BANKSEL	_overCount
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 04rr                      1-  813     	SUBAR	_overCount,W
     003C 0803                      1-  814     	BTRSS	STATUS,0
     003D 3rrr                      1-  815     	LGOTO	_00146_DS_
                                    1-  816     	BANKSEL	_workStep
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 01rr                      1-  817     	MOVR	_workStep,W
     0040 0D03                      1-  818     	BTRSC	STATUS,2
     0041 3rrr                      1-  819     	LGOTO	_00146_DS_
                                    1-  820     	.line	167, "main.c"; 	if(++count5S > 500)
                                    1-  821     	BANKSEL	_count5S
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 05rr                      1-  822     	INCR	_count5S,F
     0044 0D03                      1-  823     	BTRSC	STATUS,2
     0045 05rr                      1-  824     	INCR	(_count5S + 1),F
                                    1-  825     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  826     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     0046 2101                      1-  827     	MOVIA	0x01
     0047 04rr                      1-  828     	SUBAR	(_count5S + 1),W
     0048 0903                      1-  829     	BTRSS	STATUS,2
     0049 3rrr                      1-  830     	LGOTO	_00255_DS_
     004A 21F5                      1-  831     	MOVIA	0xf5
     004B 04rr                      1-  832     	SUBAR	_count5S,W
     004C                           1-  833     _00255_DS_:
     004C 0803                      1-  834     	BTRSS	STATUS,0
     004D 3rrr                      1-  835     	LGOTO	_00147_DS_
                                    1-  836     	.line	169, "main.c"; 	overCount = 0;
                                    1-  837     	BANKSEL	_overCount
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 02rr                      1-  838     	CLRR	_overCount
                                    1-  839     	.line	170, "main.c"; 	count5S = 0;
                                    1-  840     	BANKSEL	_count5S
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 02rr                      1-  841     	CLRR	_count5S
     0052 02rr                      1-  842     	CLRR	(_count5S + 1)
                                    1-  843     	.line	171, "main.c"; 	ledDeadTime = 25;
     0053 2119                      1-  844     	MOVIA	0x19
                                    1-  845     	BANKSEL	_ledDeadTime
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 00rr                      1-  846     	MOVAR	_ledDeadTime
                                    1-  847     	.line	172, "main.c"; 	powerOff();
     0056 2rrr                      1-  848     	LCALL	_powerOff
     0057 3rrr                      1-  849     	LGOTO	_00147_DS_
     0058                           1-  850     _00146_DS_:
                                    1-  851     	.line	177, "main.c"; 	count5S = 0;
                                    1-  852     	BANKSEL	_count5S
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 02rr                      1-  853     	CLRR	_count5S
     005A 02rr                      1-  854     	CLRR	(_count5S + 1)
                                    1-  855     ;;unsigned compare: left < lit (0x5=5), size=1
     005B                           1-  856     _00147_DS_:
                                    1-  857     	.line	179, "main.c"; 	if(count200ms < 5)
     005B 2105                      1-  858     	MOVIA	0x05
                                    1-  859     	BANKSEL	_count200ms
     005C rrrr                      3-   71 m1      .banksel ram_address
     005D 04rr                      1-  860     	SUBAR	_count200ms,W
     005E 0C03                      1-  861     	BTRSC	STATUS,0
     005F 3rrr                      1-  862     	LGOTO	_00158_DS_
                                    1-  863     	.line	181, "main.c"; 	if(workStep > 0 &&cDuty == tempDuty)
                                    1-  864     	BANKSEL	_workStep
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 01rr                      1-  865     	MOVR	_workStep,W
     0062 0D03                      1-  866     	BTRSC	STATUS,2
     0063 3rrr                      1-  867     	LGOTO	_00150_DS_
                                    1-  868     	BANKSEL	_tempDuty
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 01rr                      1-  869     	MOVR	_tempDuty,W
                                    1-  870     	BANKSEL	_cDuty
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 12rr                      1-  871     	XORAR	_cDuty,W
     0068 0D03                      1-  872     	BTRSC	STATUS,2
                                    1-  873     	.line	182, "main.c"; 	checkBatAD();
     0069 2rrr                      1-  874     	LCALL	_checkBatAD
     006A                           1-  875     _00150_DS_:
                                    1-  876     	.line	183, "main.c"; 	if(workStep == 0)
                                    1-  877     	BANKSEL	_workStep
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 01rr                      1-  878     	MOVR	_workStep,W
     006C 0903                      1-  879     	BTRSS	STATUS,2
     006D 3rrr                      1-  880     	LGOTO	_00159_DS_
                                    1-  881     	.line	184, "main.c"; 	checkBatAD();
     006E 2rrr                      1-  882     	LCALL	_checkBatAD
     006F 3rrr                      1-  883     	LGOTO	_00159_DS_
                                    1-  884     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  885     ;;unsigned compare: left >= lit (0x9=9), size=1
     0070                           1-  886     _00158_DS_:
                                    1-  887     	.line	186, "main.c"; 	else if(count200ms > 8 && count200ms < 11)
     0070 2109                      1-  888     	MOVIA	0x09
                                    1-  889     	BANKSEL	_count200ms
     0071 rrrr                      3-   71 m1      .banksel ram_address
     0072 04rr                      1-  890     	SUBAR	_count200ms,W
     0073 0803                      1-  891     	BTRSS	STATUS,0
     0074 3rrr                      1-  892     	LGOTO	_00159_DS_
                                    1-  893     ;;unsigned compare: left < lit (0xB=11), size=1
     0075 210B                      1-  894     	MOVIA	0x0b
     0076 04rr                      1-  895     	SUBAR	_count200ms,W
     0077 0803                      1-  896     	BTRSS	STATUS,0
                                    1-  897     	.line	188, "main.c"; 	checkOutA();
     0078 2rrr                      1-  898     	LCALL	_checkOutA
     0079                           1-  899     _00159_DS_:
                                    1-  900     	.line	190, "main.c"; 	chrgCtr();
     0079 2rrr                      1-  901     	LCALL	_chrgCtr
                                    1-  902     	.line	191, "main.c"; 	if(chrgFlag == 0)
                                    1-  903     	BANKSEL	_Status
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 09rr                      1-  904     	BTRSS	_Status,3
                                    1-  905     	.line	192, "main.c"; 	keyCtr();
     007C 2rrr                      1-  906     	LCALL	_keyCtr
                                    1-  907     	.line	193, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x08) == 0 && ledLightTime == 0 && ledDeadTime == 0)
                                    1-  908     	BANKSEL	_workStep
     007D rrrr                      3-   71 m1      .banksel ram_address
     007E 01rr                      1-  909     	MOVR	_workStep,W
     007F 0903                      1-  910     	BTRSS	STATUS,2
     0080 3rrr                      1-  911     	LGOTO	_00163_DS_
                                    1-  912     	BANKSEL	_keyCount
     0081 rrrr                      3-   71 m1      .banksel ram_address
     0082 01rr                      1-  913     	MOVR	_keyCount,W
     0083 0903                      1-  914     	BTRSS	STATUS,2
     0084 3rrr                      1-  915     	LGOTO	_00163_DS_
                                    1-  916     	BANKSEL	_PORTA
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 0Drr                      1-  917     	BTRSC	_PORTA,3
     0087 3rrr                      1-  918     	LGOTO	_00163_DS_
                                    1-  919     	BANKSEL	_ledLightTime
     0088 rrrr                      3-   71 m1      .banksel ram_address
     0089 01rr                      1-  920     	MOVR	_ledLightTime,W
     008A 0903                      1-  921     	BTRSS	STATUS,2
     008B 3rrr                      1-  922     	LGOTO	_00163_DS_
                                    1-  923     	BANKSEL	_ledDeadTime
     008C rrrr                      3-   71 m1      .banksel ram_address
     008D 01rr                      1-  924     	MOVR	_ledDeadTime,W
     008E 0D03                      1-  925     	BTRSC	STATUS,2
                                    1-  926     	.line	196, "main.c"; 	gotoSleep();
     008F 2rrr                      1-  927     	LCALL	_gotoSleep
     0090                           1-  928     _00163_DS_:
                                    1-  929     	.line	200, "main.c"; 	if(count900s >= 900)
     0090 2103                      1-  930     	MOVIA	0x03
                                    1-  931     	BANKSEL	_count900s
     0091 rrrr                      3-   71 m1      .banksel ram_address
     0092 04rr                      1-  932     	SUBAR	(_count900s + 1),W
     0093 0903                      1-  933     	BTRSS	STATUS,2
     0094 3rrr                      1-  934     	LGOTO	_00259_DS_
     0095 2184                      1-  935     	MOVIA	0x84
     0096 04rr                      1-  936     	SUBAR	_count900s,W
     0097                           1-  937     _00259_DS_:
     0097 0803                      1-  938     	BTRSS	STATUS,0
     0098 3rrr                      1-  939     	LGOTO	_00171_DS_
                                    1-  940     	.line	202, "main.c"; 	powerOff();
     0099 2rrr                      1-  941     	LCALL	_powerOff
     009A 3rrr                      1-  942     	LGOTO	_00171_DS_
                                    1-  943     	.line	205, "main.c"; 	}
                                    1-  944     	RETURN	
     009B 0010                      3-   26 m1      ret
                                    1-  945     ; exit point of _main
                                    1-  947     ;***
                                    1-  948     ;  pBlock Stats: dbName = C
                                    1-  949     ;***
                                    1-  950     ;has an exit
                                    1-  951     ;6 compiler assigned registers:
                                    1-  952     ;   r0x103A
                                    1-  953     ;   STK00
                                    1-  954     ;   r0x103B
                                    1-  955     ;   r0x103C
                                    1-  956     ;   r0x103D
                                    1-  957     ;   r0x103E
                                    1-  958     ;; Starting pCode block
                                    1-  959     .segment "code"; module=main, function=_delay
                                    1-  961     ;local variable name mapping:
     0000                           1-  966     _delay:
                                    1-  967     ; 2 exit points
                                    1-  968     	.line	759, "main.c"; 	void delay(int count)
                                    1-  969     	BANKSEL	r0x103A
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  970     	MOVAR	r0x103A
     0002 01rr                      1-  971     	MOVR	STK00,W
                                    1-  972     	BANKSEL	r0x103B
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1-  973     	MOVAR	r0x103B
                                    1-  974     	.line	762, "main.c"; 	for(i=1;i<=count;i++)
     0005 2101                      1-  975     	MOVIA	0x01
                                    1-  976     	BANKSEL	r0x103C
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1-  977     	MOVAR	r0x103C
                                    1-  978     	BANKSEL	r0x103D
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1-  979     	CLRR	r0x103D
     000A                           1-  980     _00618_DS_:
                                    1-  981     	BANKSEL	r0x103A
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1-  982     	MOVR	r0x103A,W
     000C 2580                      1-  983     	ADDIA	0x80
                                    1-  984     	BANKSEL	r0x103E
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1-  985     	MOVAR	r0x103E
                                    1-  986     	BANKSEL	r0x103D
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1-  987     	MOVR	r0x103D,W
     0011 2580                      1-  988     	ADDIA	0x80
                                    1-  989     	BANKSEL	r0x103E
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1-  990     	SUBAR	r0x103E,W
     0014 0903                      1-  991     	BTRSS	STATUS,2
     0015 3rrr                      1-  992     	LGOTO	_00629_DS_
                                    1-  993     	BANKSEL	r0x103C
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1-  994     	MOVR	r0x103C,W
                                    1-  995     	BANKSEL	r0x103B
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 04rr                      1-  996     	SUBAR	r0x103B,W
     001A                           1-  997     _00629_DS_:
     001A 0803                      1-  998     	BTRSS	STATUS,0
     001B 3rrr                      1-  999     	LGOTO	_00620_DS_
                                    1- 1000     	BANKSEL	r0x103C
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 05rr                      1- 1001     	INCR	r0x103C,F
     001E 0903                      1- 1002     	BTRSS	STATUS,2
     001F 3rrr                      1- 1003     	LGOTO	_00001_DS_
                                    1- 1004     	BANKSEL	r0x103D
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 05rr                      1- 1005     	INCR	r0x103D,F
     0022                           1- 1006     _00001_DS_:
     0022 3rrr                      1- 1007     	LGOTO	_00618_DS_
     0023                           1- 1008     _00620_DS_:
                                    1- 1009     	.line	764, "main.c"; 	}
                                    1- 1010     	RETURN	
     0023 0010                      3-   26 m1      ret
                                    1- 1011     ; exit point of _delay
                                    1- 1013     ;***
                                    1- 1014     ;  pBlock Stats: dbName = C
                                    1- 1015     ;***
                                    1- 1016     ;has an exit
                                    1- 1017     ;; Starting pCode block
                                    1- 1018     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1020     _F_wait_eoc:
                                    1- 1021     ; 2 exit points
     0000                           1- 1022     _00611_DS_:
                                    1- 1023     	.line	754, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1024     	BTRSS	_ADMDbits,5
     0001 3rrr                      1- 1025     	LGOTO	_00611_DS_
                                    1- 1026     	.line	756, "main.c"; 	}
                                    1- 1027     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 1028     ; exit point of _F_wait_eoc
                                    1- 1030     ;***
                                    1- 1031     ;  pBlock Stats: dbName = C
                                    1- 1032     ;***
                                    1- 1033     ;has an exit
                                    1- 1034     ;functions called:
                                    1- 1035     ;   _delay
                                    1- 1036     ;   _F_wait_eoc
                                    1- 1037     ;   _delay
                                    1- 1038     ;   _F_wait_eoc
                                    1- 1039     ;7 compiler assigned registers:
                                    1- 1040     ;   r0x103F
                                    1- 1041     ;   STK00
                                    1- 1042     ;   r0x1040
                                    1- 1043     ;   r0x1041
                                    1- 1044     ;   r0x1042
                                    1- 1045     ;   r0x1043
                                    1- 1046     ;   r0x1044
                                    1- 1047     ;; Starting pCode block
                                    1- 1048     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1050     ;local variable name mapping:
     0000                           1- 1053     _F_AIN2_Convert:
                                    1- 1054     ; 2 exit points
                                    1- 1055     	.line	737, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1056     	BANKSEL	r0x103F
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1057     	MOVAR	r0x103F
                                    1- 1058     	.line	739, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1059     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1060     	CLRR	_R_AIN2_DATA_LB
                                    1- 1061     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1062     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1063     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1064     	.line	741, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1065     	MOVIA	0x92
     0008 00rr                      1- 1066     	MOVAR	_ADMD
                                    1- 1067     	.line	742, "main.c"; 	delay(200);	
     0009 21C8                      1- 1068     	MOVIA	0xc8
     000A 00rr                      1- 1069     	MOVAR	STK00
     000B 2100                      1- 1070     	MOVIA	0x00
     000C 2rrr                      1- 1071     	LCALL	_delay
                                    1- 1072     	.line	743, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1073     	MOVIA	0x01
                                    1- 1074     	BANKSEL	r0x1040
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1075     	MOVAR	r0x1040
     0010                           1- 1076     _00604_DS_:
                                    1- 1077     	BANKSEL	r0x1040
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1078     	MOVR	r0x1040,W
                                    1- 1079     	BANKSEL	r0x103F
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1080     	SUBAR	r0x103F,W
     0014 0803                      1- 1081     	BTRSS	STATUS,0
     0015 3rrr                      1- 1082     	LGOTO	_00606_DS_
                                    1- 1083     	.line	745, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1084     	BSR	_ADMDbits,6
                                    1- 1085     	.line	746, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1086     	LCALL	_F_wait_eoc
                                    1- 1087     	.line	747, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1088     	MOVIA	0x0f
     0019 10rr                      1- 1089     	ANDAR	_ADR,W
                                    1- 1090     ;;3	MOVAR	r0x1041
                                    1- 1091     	BANKSEL	_R_AIN2_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1092     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1093     	.line	748, "main.c"; 	R_AIN2_DATA    += ADD; 
     001C 01rr                      1- 1094     	MOVR	_ADD,W
                                    1- 1095     	BANKSEL	r0x1041
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1096     	MOVAR	r0x1041
                                    1- 1097     ;;1	CLRR	r0x1042
                                    1- 1098     ;;112	MOVR	r0x1041,W
                                    1- 1099     ;;110	MOVAR	r0x1043
     001F 2100                      1- 1100     	MOVIA	0x00
                                    1- 1101     	BANKSEL	r0x1044
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1102     	MOVAR	r0x1044
                                    1- 1103     ;;111	MOVR	r0x1043,W
                                    1- 1104     	BANKSEL	r0x1041
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1105     	MOVR	r0x1041,W
                                    1- 1106     	BANKSEL	_R_AIN2_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1107     	ADDAR	_R_AIN2_DATA,F
                                    1- 1108     	BANKSEL	r0x1044
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1109     	MOVR	r0x1044,W
     0028 0C03                      1- 1110     	BTRSC	STATUS,0
     0029 05rr                      1- 1111     	INCR	r0x1044,W
     002A 0D03                      1- 1112     	BTRSC	STATUS,2
     002B 3rrr                      1- 1113     	LGOTO	_00002_DS_
                                    1- 1114     	BANKSEL	_R_AIN2_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1115     	ADDAR	(_R_AIN2_DATA + 1),F
     002E                           1- 1116     _00002_DS_:
                                    1- 1117     	.line	743, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1118     	BANKSEL	r0x1040
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1119     	INCR	r0x1040,F
     0030 3rrr                      1- 1120     	LGOTO	_00604_DS_
     0031                           1- 1121     _00606_DS_:
                                    1- 1122     	.line	750, "main.c"; 	}
                                    1- 1123     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1124     ; exit point of _F_AIN2_Convert
                                    1- 1126     ;***
                                    1- 1127     ;  pBlock Stats: dbName = C
                                    1- 1128     ;***
                                    1- 1129     ;has an exit
                                    1- 1130     ;functions called:
                                    1- 1131     ;   _delay
                                    1- 1132     ;   _F_wait_eoc
                                    1- 1133     ;   _delay
                                    1- 1134     ;   _F_wait_eoc
                                    1- 1135     ;7 compiler assigned registers:
                                    1- 1136     ;   r0x1045
                                    1- 1137     ;   STK00
                                    1- 1138     ;   r0x1046
                                    1- 1139     ;   r0x1047
                                    1- 1140     ;   r0x1048
                                    1- 1141     ;   r0x1049
                                    1- 1142     ;   r0x104A
                                    1- 1143     ;; Starting pCode block
                                    1- 1144     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1- 1146     ;local variable name mapping:
     0000                           1- 1149     _F_AIN3_Convert:
                                    1- 1150     ; 2 exit points
                                    1- 1151     	.line	722, "main.c"; 	void F_AIN3_Convert(char count)
                                    1- 1152     	BANKSEL	r0x1045
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1153     	MOVAR	r0x1045
                                    1- 1154     	.line	724, "main.c"; 	R_AIN3_DATA=R_AIN3_DATA_LB=0x00;   
                                    1- 1155     	BANKSEL	_R_AIN3_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1156     	CLRR	_R_AIN3_DATA_LB
                                    1- 1157     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1158     	CLRR	_R_AIN3_DATA
     0006 02rr                      1- 1159     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1160     	.line	726, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0007 2193                      1- 1161     	MOVIA	0x93
     0008 00rr                      1- 1162     	MOVAR	_ADMD
                                    1- 1163     	.line	727, "main.c"; 	delay(200);	
     0009 21C8                      1- 1164     	MOVIA	0xc8
     000A 00rr                      1- 1165     	MOVAR	STK00
     000B 2100                      1- 1166     	MOVIA	0x00
     000C 2rrr                      1- 1167     	LCALL	_delay
                                    1- 1168     	.line	728, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1169     	MOVIA	0x01
                                    1- 1170     	BANKSEL	r0x1046
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1171     	MOVAR	r0x1046
     0010                           1- 1172     _00595_DS_:
                                    1- 1173     	BANKSEL	r0x1046
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1174     	MOVR	r0x1046,W
                                    1- 1175     	BANKSEL	r0x1045
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1176     	SUBAR	r0x1045,W
     0014 0803                      1- 1177     	BTRSS	STATUS,0
     0015 3rrr                      1- 1178     	LGOTO	_00597_DS_
                                    1- 1179     	.line	730, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1180     	BSR	_ADMDbits,6
                                    1- 1181     	.line	731, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1182     	LCALL	_F_wait_eoc
                                    1- 1183     	.line	732, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1184     	MOVIA	0x0f
     0019 10rr                      1- 1185     	ANDAR	_ADR,W
                                    1- 1186     ;;3	MOVAR	r0x1047
                                    1- 1187     	BANKSEL	_R_AIN3_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1188     	ADDAR	_R_AIN3_DATA_LB,F
                                    1- 1189     	.line	733, "main.c"; 	R_AIN3_DATA    += ADD; 
     001C 01rr                      1- 1190     	MOVR	_ADD,W
                                    1- 1191     	BANKSEL	r0x1047
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1192     	MOVAR	r0x1047
                                    1- 1193     ;;1	CLRR	r0x1048
                                    1- 1194     ;;109	MOVR	r0x1047,W
                                    1- 1195     ;;107	MOVAR	r0x1049
     001F 2100                      1- 1196     	MOVIA	0x00
                                    1- 1197     	BANKSEL	r0x104A
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1198     	MOVAR	r0x104A
                                    1- 1199     ;;108	MOVR	r0x1049,W
                                    1- 1200     	BANKSEL	r0x1047
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1201     	MOVR	r0x1047,W
                                    1- 1202     	BANKSEL	_R_AIN3_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1203     	ADDAR	_R_AIN3_DATA,F
                                    1- 1204     	BANKSEL	r0x104A
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1205     	MOVR	r0x104A,W
     0028 0C03                      1- 1206     	BTRSC	STATUS,0
     0029 05rr                      1- 1207     	INCR	r0x104A,W
     002A 0D03                      1- 1208     	BTRSC	STATUS,2
     002B 3rrr                      1- 1209     	LGOTO	_00003_DS_
                                    1- 1210     	BANKSEL	_R_AIN3_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1211     	ADDAR	(_R_AIN3_DATA + 1),F
     002E                           1- 1212     _00003_DS_:
                                    1- 1213     	.line	728, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1214     	BANKSEL	r0x1046
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1215     	INCR	r0x1046,F
     0030 3rrr                      1- 1216     	LGOTO	_00595_DS_
     0031                           1- 1217     _00597_DS_:
                                    1- 1218     	.line	735, "main.c"; 	}
                                    1- 1219     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1220     ; exit point of _F_AIN3_Convert
                                    1- 1222     ;***
                                    1- 1223     ;  pBlock Stats: dbName = C
                                    1- 1224     ;***
                                    1- 1225     ;has an exit
                                    1- 1226     ;functions called:
                                    1- 1227     ;   _delay
                                    1- 1228     ;   _F_wait_eoc
                                    1- 1229     ;   _delay
                                    1- 1230     ;   _F_wait_eoc
                                    1- 1231     ;7 compiler assigned registers:
                                    1- 1232     ;   r0x104B
                                    1- 1233     ;   STK00
                                    1- 1234     ;   r0x104C
                                    1- 1235     ;   r0x104D
                                    1- 1236     ;   r0x104E
                                    1- 1237     ;   r0x104F
                                    1- 1238     ;   r0x1050
                                    1- 1239     ;; Starting pCode block
                                    1- 1240     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1242     ;local variable name mapping:
     0000                           1- 1245     _F_AIN4_Convert:
                                    1- 1246     ; 2 exit points
                                    1- 1247     	.line	707, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1248     	BANKSEL	r0x104B
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1249     	MOVAR	r0x104B
                                    1- 1250     	.line	709, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1251     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1252     	CLRR	_R_AIN4_DATA_LB
                                    1- 1253     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 1254     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1255     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1256     	.line	711, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1257     	MOVIA	0x94
     0008 00rr                      1- 1258     	MOVAR	_ADMD
                                    1- 1259     	.line	712, "main.c"; 	delay(200);	
     0009 21C8                      1- 1260     	MOVIA	0xc8
     000A 00rr                      1- 1261     	MOVAR	STK00
     000B 2100                      1- 1262     	MOVIA	0x00
     000C 2rrr                      1- 1263     	LCALL	_delay
                                    1- 1264     	.line	713, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1265     	MOVIA	0x01
                                    1- 1266     	BANKSEL	r0x104C
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 1267     	MOVAR	r0x104C
     0010                           1- 1268     _00586_DS_:
                                    1- 1269     	BANKSEL	r0x104C
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 1270     	MOVR	r0x104C,W
                                    1- 1271     	BANKSEL	r0x104B
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 1272     	SUBAR	r0x104B,W
     0014 0803                      1- 1273     	BTRSS	STATUS,0
     0015 3rrr                      1- 1274     	LGOTO	_00588_DS_
                                    1- 1275     	.line	715, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1276     	BSR	_ADMDbits,6
                                    1- 1277     	.line	716, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 1278     	LCALL	_F_wait_eoc
                                    1- 1279     	.line	717, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1280     	MOVIA	0x0f
     0019 10rr                      1- 1281     	ANDAR	_ADR,W
                                    1- 1282     ;;3	MOVAR	r0x104D
                                    1- 1283     	BANKSEL	_R_AIN4_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 1284     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1285     	.line	718, "main.c"; 	R_AIN4_DATA    += ADD; 
     001C 01rr                      1- 1286     	MOVR	_ADD,W
                                    1- 1287     	BANKSEL	r0x104D
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 1288     	MOVAR	r0x104D
                                    1- 1289     ;;1	CLRR	r0x104E
                                    1- 1290     ;;106	MOVR	r0x104D,W
                                    1- 1291     ;;104	MOVAR	r0x104F
     001F 2100                      1- 1292     	MOVIA	0x00
                                    1- 1293     	BANKSEL	r0x1050
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 1294     	MOVAR	r0x1050
                                    1- 1295     ;;105	MOVR	r0x104F,W
                                    1- 1296     	BANKSEL	r0x104D
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 1297     	MOVR	r0x104D,W
                                    1- 1298     	BANKSEL	_R_AIN4_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 1299     	ADDAR	_R_AIN4_DATA,F
                                    1- 1300     	BANKSEL	r0x1050
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1301     	MOVR	r0x1050,W
     0028 0C03                      1- 1302     	BTRSC	STATUS,0
     0029 05rr                      1- 1303     	INCR	r0x1050,W
     002A 0D03                      1- 1304     	BTRSC	STATUS,2
     002B 3rrr                      1- 1305     	LGOTO	_00004_DS_
                                    1- 1306     	BANKSEL	_R_AIN4_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 1307     	ADDAR	(_R_AIN4_DATA + 1),F
     002E                           1- 1308     _00004_DS_:
                                    1- 1309     	.line	713, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1310     	BANKSEL	r0x104C
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 1311     	INCR	r0x104C,F
     0030 3rrr                      1- 1312     	LGOTO	_00586_DS_
     0031                           1- 1313     _00588_DS_:
                                    1- 1314     	.line	720, "main.c"; 	}
                                    1- 1315     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 1316     ; exit point of _F_AIN4_Convert
                                    1- 1318     ;***
                                    1- 1319     ;  pBlock Stats: dbName = C
                                    1- 1320     ;***
                                    1- 1321     ;has an exit
                                    1- 1322     ;functions called:
                                    1- 1323     ;   _F_AIN4_Convert
                                    1- 1324     ;   __mulchar
                                    1- 1325     ;   __mulchar
                                    1- 1326     ;   __mulchar
                                    1- 1327     ;   _F_AIN4_Convert
                                    1- 1328     ;   __mulchar
                                    1- 1329     ;   __mulchar
                                    1- 1330     ;   __mulchar
                                    1- 1331     ;5 compiler assigned registers:
                                    1- 1332     ;   r0x1051
                                    1- 1333     ;   r0x1052
                                    1- 1334     ;   r0x1053
                                    1- 1335     ;   r0x1054
                                    1- 1336     ;   STK00
                                    1- 1337     ;; Starting pCode block
                                    1- 1338     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1340     _checkOutA:
                                    1- 1341     ; 2 exit points
                                    1- 1342     	.line	639, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1343     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1344     	CLRR	_R_AIN4_DATA_LB
                                    1- 1345     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1346     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1347     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1348     	.line	640, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1349     	MOVIA	0x08
     0006 2rrr                      1- 1350     	LCALL	_F_AIN4_Convert
                                    1- 1351     	.line	641, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1352     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1353     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1354     	ANDIA	0xf0
     000A 00rr                      1- 1355     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1356     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1357     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1358     	ANDIA	0x0f
     000E 11rr                      1- 1359     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1360     	XORAR	_R_AIN4_DATA,F
                                    1- 1361     	.line	642, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1362     	MOVIA	0xf0
                                    1- 1363     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1364     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1365     	.line	643, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1366     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1367     	BANKSEL	r0x1051
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1368     	MOVAR	r0x1051
                                    1- 1369     ;;1	CLRR	r0x1052
                                    1- 1370     ;;103	MOVR	r0x1051,W
                                    1- 1371     ;;101	MOVAR	r0x1053
     0016 2100                      1- 1372     	MOVIA	0x00
                                    1- 1373     	BANKSEL	r0x1054
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1- 1374     	MOVAR	r0x1054
                                    1- 1375     ;;102	MOVR	r0x1053,W
                                    1- 1376     	BANKSEL	r0x1051
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1- 1377     	MOVR	r0x1051,W
                                    1- 1378     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1- 1379     	ADDAR	_R_AIN4_DATA,F
                                    1- 1380     	BANKSEL	r0x1054
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1381     	MOVR	r0x1054,W
     001F 0C03                      1- 1382     	BTRSC	STATUS,0
     0020 05rr                      1- 1383     	INCR	r0x1054,W
     0021 0D03                      1- 1384     	BTRSC	STATUS,2
     0022 3rrr                      1- 1385     	LGOTO	_00005_DS_
                                    1- 1386     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1- 1387     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1388     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1389     _00005_DS_:
                                    1- 1390     	.line	644, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1391     	BCR	STATUS,0
                                    1- 1392     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1- 1393     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1394     	RRR	_R_AIN4_DATA,F
                                    1- 1395     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1396     	BCR	STATUS,0
     002A 13rr                      1- 1397     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1398     	RRR	_R_AIN4_DATA,F
                                    1- 1399     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1400     	BCR	STATUS,0
     002D 13rr                      1- 1401     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1402     	RRR	_R_AIN4_DATA,F
                                    1- 1403     	.line	645, "main.c"; 	if(debug)
                                    1- 1404     	BANKSEL	_debug
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 1405     	MOVR	_debug,W
     0031 0D03                      1- 1406     	BTRSC	STATUS,2
     0032 3rrr                      1- 1407     	LGOTO	_00501_DS_
                                    1- 1408     	.line	646, "main.c"; 	R_AIN4_DATA = OUTA;
     0033 212D                      1- 1409     	MOVIA	0x2d
                                    1- 1410     	BANKSEL	_R_AIN4_DATA
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 00rr                      1- 1411     	MOVAR	_R_AIN4_DATA
     0036 2101                      1- 1412     	MOVIA	0x01
     0037 00rr                      1- 1413     	MOVAR	(_R_AIN4_DATA + 1)
                                    1- 1414     ;;unsigned compare: left < lit (0x6=6), size=1
     0038                           1- 1415     _00501_DS_:
                                    1- 1416     	.line	647, "main.c"; 	if(workStep < 6 && R_AIN4_DATA > 200)
     0038 2106                      1- 1417     	MOVIA	0x06
                                    1- 1418     	BANKSEL	_workStep
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 04rr                      1- 1419     	SUBAR	_workStep,W
     003B 0C03                      1- 1420     	BTRSC	STATUS,0
     003C 3rrr                      1- 1421     	LGOTO	_00526_DS_
                                    1- 1422     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1423     ;;unsigned compare: left >= lit (0xC9=201), size=2
     003D 2100                      1- 1424     	MOVIA	0x00
                                    1- 1425     	BANKSEL	_R_AIN4_DATA
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 04rr                      1- 1426     	SUBAR	(_R_AIN4_DATA + 1),W
     0040 0903                      1- 1427     	BTRSS	STATUS,2
     0041 3rrr                      1- 1428     	LGOTO	_00571_DS_
     0042 21C9                      1- 1429     	MOVIA	0xc9
     0043 04rr                      1- 1430     	SUBAR	_R_AIN4_DATA,W
     0044                           1- 1431     _00571_DS_:
     0044 0803                      1- 1432     	BTRSS	STATUS,0
     0045 3rrr                      1- 1433     	LGOTO	_00526_DS_
                                    1- 1434     	.line	649, "main.c"; 	if(++overCount > 5)
                                    1- 1435     	BANKSEL	_overCount
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 05rr                      1- 1436     	INCR	_overCount,F
                                    1- 1437     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1438     ;;unsigned compare: left >= lit (0x6=6), size=1
     0048 2106                      1- 1439     	MOVIA	0x06
     0049 04rr                      1- 1440     	SUBAR	_overCount,W
     004A 0803                      1- 1441     	BTRSS	STATUS,0
     004B 3rrr                      1- 1442     	LGOTO	_00529_DS_
                                    1- 1443     	.line	651, "main.c"; 	overCount = 5;
     004C 2105                      1- 1444     	MOVIA	0x05
     004D 00rr                      1- 1445     	MOVAR	_overCount
     004E 3rrr                      1- 1446     	LGOTO	_00529_DS_
                                    1- 1447     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1448     ;;unsigned compare: left >= lit (0x191=401), size=2
     004F                           1- 1449     _00526_DS_:
                                    1- 1450     	.line	654, "main.c"; 	else if(R_AIN4_DATA > 400)
     004F 2101                      1- 1451     	MOVIA	0x01
                                    1- 1452     	BANKSEL	_R_AIN4_DATA
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 04rr                      1- 1453     	SUBAR	(_R_AIN4_DATA + 1),W
     0052 0903                      1- 1454     	BTRSS	STATUS,2
     0053 3rrr                      1- 1455     	LGOTO	_00573_DS_
     0054 2191                      1- 1456     	MOVIA	0x91
     0055 04rr                      1- 1457     	SUBAR	_R_AIN4_DATA,W
     0056                           1- 1458     _00573_DS_:
     0056 0803                      1- 1459     	BTRSS	STATUS,0
     0057 3rrr                      1- 1460     	LGOTO	_00523_DS_
                                    1- 1461     	.line	656, "main.c"; 	if(++overCount > 5)
                                    1- 1462     	BANKSEL	_overCount
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 05rr                      1- 1463     	INCR	_overCount,F
                                    1- 1464     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1465     ;;unsigned compare: left >= lit (0x6=6), size=1
     005A 2106                      1- 1466     	MOVIA	0x06
     005B 04rr                      1- 1467     	SUBAR	_overCount,W
     005C 0803                      1- 1468     	BTRSS	STATUS,0
     005D 3rrr                      1- 1469     	LGOTO	_00529_DS_
                                    1- 1470     	.line	658, "main.c"; 	overCount = 5;
     005E 2105                      1- 1471     	MOVIA	0x05
     005F 00rr                      1- 1472     	MOVAR	_overCount
     0060 3rrr                      1- 1473     	LGOTO	_00529_DS_
                                    1- 1474     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1475     ;;unsigned compare: left >= lit (0x2E=46), size=2
     0061                           1- 1476     _00523_DS_:
                                    1- 1477     	.line	666, "main.c"; 	else if(R_AIN4_DATA > 45)
     0061 2100                      1- 1478     	MOVIA	0x00
                                    1- 1479     	BANKSEL	_R_AIN4_DATA
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 04rr                      1- 1480     	SUBAR	(_R_AIN4_DATA + 1),W
     0064 0903                      1- 1481     	BTRSS	STATUS,2
     0065 3rrr                      1- 1482     	LGOTO	_00575_DS_
     0066 212E                      1- 1483     	MOVIA	0x2e
     0067 04rr                      1- 1484     	SUBAR	_R_AIN4_DATA,W
     0068                           1- 1485     _00575_DS_:
     0068 0803                      1- 1486     	BTRSS	STATUS,0
     0069 3rrr                      1- 1487     	LGOTO	_00520_DS_
                                    1- 1488     	.line	668, "main.c"; 	if(overCount > 0)
                                    1- 1489     	BANKSEL	_overCount
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 01rr                      1- 1490     	MOVR	_overCount,W
     006C 0903                      1- 1491     	BTRSS	STATUS,2
                                    1- 1492     	.line	670, "main.c"; 	overCount--;
     006D 06rr                      1- 1493     	DECR	_overCount,F
                                    1- 1494     	.line	672, "main.c"; 	if(workStep < 4)
     006E 2104                      1- 1495     	MOVIA	0x04
                                    1- 1496     	BANKSEL	_workStep
     006F rrrr                      3-   71 m1      .banksel ram_address
     0070 04rr                      1- 1497     	SUBAR	_workStep,W
     0071 0C03                      1- 1498     	BTRSC	STATUS,0
     0072 3rrr                      1- 1499     	LGOTO	_00509_DS_
                                    1- 1500     	.line	674, "main.c"; 	tempDuty = 70 + workStep*5;
     0073 2105                      1- 1501     	MOVIA	0x05
     0074 00rr                      1- 1502     	MOVAR	STK00
     0075 01rr                      1- 1503     	MOVR	_workStep,W
     0076 2rrr                      1- 1504     	LCALL	__mulchar
                                    1- 1505     	BANKSEL	r0x1051
     0077 rrrr                      3-   71 m1      .banksel ram_address
     0078 00rr                      1- 1506     	MOVAR	r0x1051
     0079 2146                      1- 1507     	MOVIA	0x46
     007A 03rr                      1- 1508     	ADDAR	r0x1051,W
                                    1- 1509     	BANKSEL	_tempDuty
     007B rrrr                      3-   71 m1      .banksel ram_address
     007C 00rr                      1- 1510     	MOVAR	_tempDuty
     007D 3rrr                      1- 1511     	LGOTO	_00529_DS_
     007E                           1- 1512     _00509_DS_:
                                    1- 1513     	.line	677, "main.c"; 	tempDuty = 70 + workStep*5;
     007E 2105                      1- 1514     	MOVIA	0x05
     007F 00rr                      1- 1515     	MOVAR	STK00
                                    1- 1516     	BANKSEL	_workStep
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 01rr                      1- 1517     	MOVR	_workStep,W
     0082 2rrr                      1- 1518     	LCALL	__mulchar
                                    1- 1519     	BANKSEL	r0x1051
     0083 rrrr                      3-   71 m1      .banksel ram_address
     0084 00rr                      1- 1520     	MOVAR	r0x1051
     0085 2146                      1- 1521     	MOVIA	0x46
     0086 03rr                      1- 1522     	ADDAR	r0x1051,W
                                    1- 1523     	BANKSEL	_tempDuty
     0087 rrrr                      3-   71 m1      .banksel ram_address
     0088 00rr                      1- 1524     	MOVAR	_tempDuty
     0089 3rrr                      1- 1525     	LGOTO	_00529_DS_
     008A                           1- 1526     _00520_DS_:
                                    1- 1527     	.line	681, "main.c"; 	if(overCount > 0)
                                    1- 1528     	BANKSEL	_overCount
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 01rr                      1- 1529     	MOVR	_overCount,W
     008C 0903                      1- 1530     	BTRSS	STATUS,2
                                    1- 1531     	.line	683, "main.c"; 	overCount--;
     008D 06rr                      1- 1532     	DECR	_overCount,F
                                    1- 1533     	.line	685, "main.c"; 	if(R_AIN4_DATA > 40 && workStep < 4)
     008E 2100                      1- 1534     	MOVIA	0x00
                                    1- 1535     	BANKSEL	_R_AIN4_DATA
     008F rrrr                      3-   71 m1      .banksel ram_address
     0090 04rr                      1- 1536     	SUBAR	(_R_AIN4_DATA + 1),W
     0091 0903                      1- 1537     	BTRSS	STATUS,2
     0092 3rrr                      1- 1538     	LGOTO	_00577_DS_
     0093 2129                      1- 1539     	MOVIA	0x29
     0094 04rr                      1- 1540     	SUBAR	_R_AIN4_DATA,W
     0095                           1- 1541     _00577_DS_:
     0095 0803                      1- 1542     	BTRSS	STATUS,0
     0096 3rrr                      1- 1543     	LGOTO	_00516_DS_
                                    1- 1544     ;;unsigned compare: left < lit (0x4=4), size=1
     0097 2104                      1- 1545     	MOVIA	0x04
                                    1- 1546     	BANKSEL	_workStep
     0098 rrrr                      3-   71 m1      .banksel ram_address
     0099 04rr                      1- 1547     	SUBAR	_workStep,W
     009A 0C03                      1- 1548     	BTRSC	STATUS,0
     009B 3rrr                      1- 1549     	LGOTO	_00516_DS_
                                    1- 1550     	.line	687, "main.c"; 	tempDuty = 70 + workStep*5;
     009C 2105                      1- 1551     	MOVIA	0x05
     009D 00rr                      1- 1552     	MOVAR	STK00
     009E 01rr                      1- 1553     	MOVR	_workStep,W
     009F 2rrr                      1- 1554     	LCALL	__mulchar
                                    1- 1555     	BANKSEL	r0x1051
     00A0 rrrr                      3-   71 m1      .banksel ram_address
     00A1 00rr                      1- 1556     	MOVAR	r0x1051
     00A2 2146                      1- 1557     	MOVIA	0x46
     00A3 03rr                      1- 1558     	ADDAR	r0x1051,W
                                    1- 1559     	BANKSEL	_tempDuty
     00A4 rrrr                      3-   71 m1      .banksel ram_address
     00A5 00rr                      1- 1560     	MOVAR	_tempDuty
     00A6 3rrr                      1- 1561     	LGOTO	_00529_DS_
                                    1- 1562     ;;unsigned compare: left < lit (0x44=68), size=2
     00A7                           1- 1563     _00516_DS_:
                                    1- 1564     	.line	690, "main.c"; 	else if(R_AIN4_DATA < 68)
     00A7 2100                      1- 1565     	MOVIA	0x00
                                    1- 1566     	BANKSEL	_R_AIN4_DATA
     00A8 rrrr                      3-   71 m1      .banksel ram_address
     00A9 04rr                      1- 1567     	SUBAR	(_R_AIN4_DATA + 1),W
     00AA 0903                      1- 1568     	BTRSS	STATUS,2
     00AB 3rrr                      1- 1569     	LGOTO	_00579_DS_
     00AC 2144                      1- 1570     	MOVIA	0x44
     00AD 04rr                      1- 1571     	SUBAR	_R_AIN4_DATA,W
     00AE                           1- 1572     _00579_DS_:
     00AE 0C03                      1- 1573     	BTRSC	STATUS,0
     00AF 3rrr                      1- 1574     	LGOTO	_00529_DS_
                                    1- 1575     	.line	693, "main.c"; 	tempDuty = maxDuty;
                                    1- 1576     	BANKSEL	_maxDuty
     00B0 rrrr                      3-   71 m1      .banksel ram_address
     00B1 01rr                      1- 1577     	MOVR	_maxDuty,W
                                    1- 1578     	BANKSEL	_tempDuty
     00B2 rrrr                      3-   71 m1      .banksel ram_address
     00B3 00rr                      1- 1579     	MOVAR	_tempDuty
     00B4                           1- 1580     _00529_DS_:
                                    1- 1581     	.line	701, "main.c"; 	}
                                    1- 1582     	RETURN	
     00B4 0010                      3-   26 m1      ret
                                    1- 1583     ; exit point of _checkOutA
                                    1- 1585     ;***
                                    1- 1586     ;  pBlock Stats: dbName = C
                                    1- 1587     ;***
                                    1- 1588     ;has an exit
                                    1- 1589     ;functions called:
                                    1- 1590     ;   _F_AIN2_Convert
                                    1- 1591     ;   _F_AIN2_Convert
                                    1- 1592     ;5 compiler assigned registers:
                                    1- 1593     ;   r0x1055
                                    1- 1594     ;   r0x1056
                                    1- 1595     ;   r0x1057
                                    1- 1596     ;   r0x1058
                                    1- 1597     ;   r0x1059
                                    1- 1598     ;; Starting pCode block
                                    1- 1599     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1601     _checkBatAD:
                                    1- 1602     ; 2 exit points
                                    1- 1603     	.line	591, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1604     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1605     	CLRR	_R_AIN2_DATA_LB
                                    1- 1606     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1607     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1608     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1609     	.line	592, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1610     	MOVIA	0x08
     0006 2rrr                      1- 1611     	LCALL	_F_AIN2_Convert
                                    1- 1612     	.line	593, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1613     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1- 1614     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1615     	ANDIA	0xf0
     000A 00rr                      1- 1616     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1617     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1618     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1619     	ANDIA	0x0f
     000E 11rr                      1- 1620     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1621     	XORAR	_R_AIN2_DATA,F
                                    1- 1622     	.line	594, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1623     	MOVIA	0xf0
                                    1- 1624     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1- 1625     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1626     	.line	595, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1627     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1628     	BANKSEL	r0x1057
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1629     	MOVAR	r0x1057
                                    1- 1630     	BANKSEL	r0x1055
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1- 1631     	MOVAR	r0x1055
                                    1- 1632     	BANKSEL	r0x1056
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 02rr                      1- 1633     	CLRR	r0x1056
                                    1- 1634     ;;113	MOVR	r0x1055,W
     001A 2100                      1- 1635     	MOVIA	0x00
                                    1- 1636     	BANKSEL	r0x1058
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 1637     	MOVAR	r0x1058
                                    1- 1638     	BANKSEL	r0x1057
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1639     	MOVR	r0x1057,W
                                    1- 1640     	BANKSEL	_R_AIN2_DATA
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 03rr                      1- 1641     	ADDAR	_R_AIN2_DATA,F
                                    1- 1642     	BANKSEL	r0x1058
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1- 1643     	MOVR	r0x1058,W
     0023 0C03                      1- 1644     	BTRSC	STATUS,0
     0024 05rr                      1- 1645     	INCR	r0x1058,W
     0025 0D03                      1- 1646     	BTRSC	STATUS,2
     0026 3rrr                      1- 1647     	LGOTO	_00006_DS_
                                    1- 1648     	BANKSEL	_R_AIN2_DATA
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 03rr                      1- 1649     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1650     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1651     _00006_DS_:
                                    1- 1652     	.line	596, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0029 1C03                      1- 1653     	BCR	STATUS,0
                                    1- 1654     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 13rr                      1- 1655     	RRR	(_R_AIN2_DATA + 1),F
     002C 13rr                      1- 1656     	RRR	_R_AIN2_DATA,F
                                    1- 1657     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1658     	BCR	STATUS,0
     002E 13rr                      1- 1659     	RRR	(_R_AIN2_DATA + 1),F
     002F 13rr                      1- 1660     	RRR	_R_AIN2_DATA,F
                                    1- 1661     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1662     	BCR	STATUS,0
     0031 13rr                      1- 1663     	RRR	(_R_AIN2_DATA + 1),F
     0032 13rr                      1- 1664     	RRR	_R_AIN2_DATA,F
                                    1- 1665     	.line	597, "main.c"; 	if(debug)
                                    1- 1666     	BANKSEL	_debug
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1- 1667     	MOVR	_debug,W
     0035 0D03                      1- 1668     	BTRSC	STATUS,2
     0036 3rrr                      1- 1669     	LGOTO	_00450_DS_
                                    1- 1670     	.line	598, "main.c"; 	R_AIN2_DATA = BATTLE;
     0037 210E                      1- 1671     	MOVIA	0x0e
                                    1- 1672     	BANKSEL	_R_AIN2_DATA
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 00rr                      1- 1673     	MOVAR	_R_AIN2_DATA
     003A 2106                      1- 1674     	MOVIA	0x06
     003B 00rr                      1- 1675     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1676     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1677     ;;unsigned compare: left >= lit (0x614=1556), size=2
     003C                           1- 1678     _00450_DS_:
                                    1- 1679     	.line	600, "main.c"; 	if(R_AIN2_DATA > 1555)
     003C 2106                      1- 1680     	MOVIA	0x06
                                    1- 1681     	BANKSEL	_R_AIN2_DATA
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 04rr                      1- 1682     	SUBAR	(_R_AIN2_DATA + 1),W
     003F 0903                      1- 1683     	BTRSS	STATUS,2
     0040 3rrr                      1- 1684     	LGOTO	_00490_DS_
     0041 2114                      1- 1685     	MOVIA	0x14
     0042 04rr                      1- 1686     	SUBAR	_R_AIN2_DATA,W
     0043                           1- 1687     _00490_DS_:
     0043 0803                      1- 1688     	BTRSS	STATUS,0
     0044 3rrr                      1- 1689     	LGOTO	_00456_DS_
                                    1- 1690     	.line	602, "main.c"; 	R_AIN2_DATA = 1555;
     0045 2113                      1- 1691     	MOVIA	0x13
                                    1- 1692     	BANKSEL	_R_AIN2_DATA
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 00rr                      1- 1693     	MOVAR	_R_AIN2_DATA
     0048 2106                      1- 1694     	MOVIA	0x06
     0049 00rr                      1- 1695     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1696     	.line	603, "main.c"; 	lowCount = 0;
                                    1- 1697     	BANKSEL	_lowCount
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 02rr                      1- 1698     	CLRR	_lowCount
     004C 3rrr                      1- 1699     	LGOTO	_00457_DS_
                                    1- 1700     ;;unsigned compare: left < lit (0x483=1155), size=2
     004D                           1- 1701     _00456_DS_:
                                    1- 1702     	.line	605, "main.c"; 	else if(R_AIN2_DATA < 1155)
     004D 2104                      1- 1703     	MOVIA	0x04
                                    1- 1704     	BANKSEL	_R_AIN2_DATA
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 04rr                      1- 1705     	SUBAR	(_R_AIN2_DATA + 1),W
     0050 0903                      1- 1706     	BTRSS	STATUS,2
     0051 3rrr                      1- 1707     	LGOTO	_00491_DS_
     0052 2183                      1- 1708     	MOVIA	0x83
     0053 04rr                      1- 1709     	SUBAR	_R_AIN2_DATA,W
     0054                           1- 1710     _00491_DS_:
     0054 0C03                      1- 1711     	BTRSC	STATUS,0
     0055 3rrr                      1- 1712     	LGOTO	_00457_DS_
                                    1- 1713     	.line	607, "main.c"; 	if(++lowCount < 10)
                                    1- 1714     	BANKSEL	_lowCount
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 05rr                      1- 1715     	INCR	_lowCount,F
                                    1- 1716     ;;unsigned compare: left < lit (0xA=10), size=1
     0058 210A                      1- 1717     	MOVIA	0x0a
     0059 04rr                      1- 1718     	SUBAR	_lowCount,W
     005A 0803                      1- 1719     	BTRSS	STATUS,0
                                    1- 1720     	.line	608, "main.c"; 	return;
     005B 3rrr                      1- 1721     	LGOTO	_00467_DS_
                                    1- 1722     	.line	609, "main.c"; 	lowCount = 10;
     005C 210A                      1- 1723     	MOVIA	0x0a
     005D 00rr                      1- 1724     	MOVAR	_lowCount
                                    1- 1725     	.line	610, "main.c"; 	pwStep = 0;
                                    1- 1726     	BANKSEL	_pwStep
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 02rr                      1- 1727     	CLRR	_pwStep
                                    1- 1728     	.line	611, "main.c"; 	R_AIN2_DATA = 1155;
     0060 2183                      1- 1729     	MOVIA	0x83
                                    1- 1730     	BANKSEL	_R_AIN2_DATA
     0061 rrrr                      3-   71 m1      .banksel ram_address
     0062 00rr                      1- 1731     	MOVAR	_R_AIN2_DATA
     0063 2104                      1- 1732     	MOVIA	0x04
     0064 00rr                      1- 1733     	MOVAR	(_R_AIN2_DATA + 1)
     0065                           1- 1734     _00457_DS_:
                                    1- 1735     	.line	614, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA - 1155;
     0065 217D                      1- 1736     	MOVIA	0x7d
                                    1- 1737     	BANKSEL	_R_AIN2_DATA
     0066 rrrr                      3-   71 m1      .banksel ram_address
     0067 03rr                      1- 1738     	ADDAR	_R_AIN2_DATA,F
     0068 21FB                      1- 1739     	MOVIA	0xfb
     0069 0C03                      1- 1740     	BTRSC	STATUS,0
     006A 21FC                      1- 1741     	MOVIA	0xfc
     006B 03rr                      1- 1742     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1743     ;;unsigned compare: left < lit (0x190=400), size=2
                                    1- 1744     	.line	615, "main.c"; 	if(R_AIN2_DATA >= 400)
     006C 2101                      1- 1745     	MOVIA	0x01
     006D 04rr                      1- 1746     	SUBAR	(_R_AIN2_DATA + 1),W
     006E 0903                      1- 1747     	BTRSS	STATUS,2
     006F 3rrr                      1- 1748     	LGOTO	_00493_DS_
     0070 2190                      1- 1749     	MOVIA	0x90
     0071 04rr                      1- 1750     	SUBAR	_R_AIN2_DATA,W
     0072                           1- 1751     _00493_DS_:
     0072 0803                      1- 1752     	BTRSS	STATUS,0
     0073 3rrr                      1- 1753     	LGOTO	_00465_DS_
                                    1- 1754     	.line	617, "main.c"; 	batValue = 100;
     0074 2164                      1- 1755     	MOVIA	0x64
                                    1- 1756     	BANKSEL	_batValue
     0075 rrrr                      3-   71 m1      .banksel ram_address
     0076 00rr                      1- 1757     	MOVAR	_batValue
     0077 3rrr                      1- 1758     	LGOTO	_00467_DS_
                                    1- 1759     ;;unsigned compare: left < lit (0x12C=300), size=2
     0078                           1- 1760     _00465_DS_:
                                    1- 1761     	.line	619, "main.c"; 	else if(R_AIN2_DATA >= 300)
     0078 2101                      1- 1762     	MOVIA	0x01
                                    1- 1763     	BANKSEL	_R_AIN2_DATA
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 04rr                      1- 1764     	SUBAR	(_R_AIN2_DATA + 1),W
     007B 0903                      1- 1765     	BTRSS	STATUS,2
     007C 3rrr                      1- 1766     	LGOTO	_00494_DS_
     007D 212C                      1- 1767     	MOVIA	0x2c
     007E 04rr                      1- 1768     	SUBAR	_R_AIN2_DATA,W
     007F                           1- 1769     _00494_DS_:
     007F 0803                      1- 1770     	BTRSS	STATUS,0
     0080 3rrr                      1- 1771     	LGOTO	_00462_DS_
                                    1- 1772     	.line	621, "main.c"; 	batValue = 50+(R_AIN2_DATA-300)/2;
     0081 21D4                      1- 1773     	MOVIA	0xd4
                                    1- 1774     	BANKSEL	_R_AIN2_DATA
     0082 rrrr                      3-   71 m1      .banksel ram_address
     0083 03rr                      1- 1775     	ADDAR	_R_AIN2_DATA,W
                                    1- 1776     	BANKSEL	r0x1055
     0084 rrrr                      3-   71 m1      .banksel ram_address
     0085 00rr                      1- 1777     	MOVAR	r0x1055
     0086 21FE                      1- 1778     	MOVIA	0xfe
                                    1- 1779     	BANKSEL	r0x1056
     0087 rrrr                      3-   71 m1      .banksel ram_address
     0088 00rr                      1- 1780     	MOVAR	r0x1056
                                    1- 1781     	BANKSEL	_R_AIN2_DATA
     0089 rrrr                      3-   71 m1      .banksel ram_address
     008A 01rr                      1- 1782     	MOVR	(_R_AIN2_DATA + 1),W
     008B 0C03                      1- 1783     	BTRSC	STATUS,0
     008C 05rr                      1- 1784     	INCR	(_R_AIN2_DATA + 1),W
     008D 0D03                      1- 1785     	BTRSC	STATUS,2
     008E 3rrr                      1- 1786     	LGOTO	_00007_DS_
                                    1- 1787     	BANKSEL	r0x1056
     008F rrrr                      3-   71 m1      .banksel ram_address
     0090 03rr                      1- 1788     	ADDAR	r0x1056,F
                                    1- 1789     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     0091                           1- 1790     _00007_DS_:
     0091 1C03                      1- 1791     	BCR	STATUS,0
                                    1- 1792     	BANKSEL	r0x1056
     0092 rrrr                      3-   71 m1      .banksel ram_address
     0093 13rr                      1- 1793     	RRR	r0x1056,W
                                    1- 1794     	BANKSEL	r0x1058
     0094 rrrr                      3-   71 m1      .banksel ram_address
     0095 00rr                      1- 1795     	MOVAR	r0x1058
                                    1- 1796     	BANKSEL	r0x1055
     0096 rrrr                      3-   71 m1      .banksel ram_address
     0097 13rr                      1- 1797     	RRR	r0x1055,W
                                    1- 1798     	BANKSEL	r0x1057
     0098 rrrr                      3-   71 m1      .banksel ram_address
     0099 00rr                      1- 1799     	MOVAR	r0x1057
                                    1- 1800     	BANKSEL	r0x1055
     009A rrrr                      3-   71 m1      .banksel ram_address
     009B 00rr                      1- 1801     	MOVAR	r0x1055
     009C 2132                      1- 1802     	MOVIA	0x32
     009D 03rr                      1- 1803     	ADDAR	r0x1055,W
                                    1- 1804     	BANKSEL	_batValue
     009E rrrr                      3-   71 m1      .banksel ram_address
     009F 00rr                      1- 1805     	MOVAR	_batValue
     00A0 3rrr                      1- 1806     	LGOTO	_00467_DS_
                                    1- 1807     ;;unsigned compare: left < lit (0xC8=200), size=2
     00A1                           1- 1808     _00462_DS_:
                                    1- 1809     	.line	624, "main.c"; 	else if(R_AIN2_DATA >= 200)
     00A1 2100                      1- 1810     	MOVIA	0x00
                                    1- 1811     	BANKSEL	_R_AIN2_DATA
     00A2 rrrr                      3-   71 m1      .banksel ram_address
     00A3 04rr                      1- 1812     	SUBAR	(_R_AIN2_DATA + 1),W
     00A4 0903                      1- 1813     	BTRSS	STATUS,2
     00A5 3rrr                      1- 1814     	LGOTO	_00495_DS_
     00A6 21C8                      1- 1815     	MOVIA	0xc8
     00A7 04rr                      1- 1816     	SUBAR	_R_AIN2_DATA,W
     00A8                           1- 1817     _00495_DS_:
     00A8 0803                      1- 1818     	BTRSS	STATUS,0
     00A9 3rrr                      1- 1819     	LGOTO	_00459_DS_
                                    1- 1820     	.line	626, "main.c"; 	batValue = 25+(R_AIN2_DATA-200)/4;
     00AA 2138                      1- 1821     	MOVIA	0x38
                                    1- 1822     	BANKSEL	_R_AIN2_DATA
     00AB rrrr                      3-   71 m1      .banksel ram_address
     00AC 03rr                      1- 1823     	ADDAR	_R_AIN2_DATA,W
                                    1- 1824     	BANKSEL	r0x1055
     00AD rrrr                      3-   71 m1      .banksel ram_address
     00AE 00rr                      1- 1825     	MOVAR	r0x1055
     00AF 21FF                      1- 1826     	MOVIA	0xff
                                    1- 1827     	BANKSEL	r0x1057
     00B0 rrrr                      3-   71 m1      .banksel ram_address
     00B1 00rr                      1- 1828     	MOVAR	r0x1057
                                    1- 1829     	BANKSEL	_R_AIN2_DATA
     00B2 rrrr                      3-   71 m1      .banksel ram_address
     00B3 01rr                      1- 1830     	MOVR	(_R_AIN2_DATA + 1),W
     00B4 0C03                      1- 1831     	BTRSC	STATUS,0
     00B5 05rr                      1- 1832     	INCR	(_R_AIN2_DATA + 1),W
     00B6 0D03                      1- 1833     	BTRSC	STATUS,2
     00B7 3rrr                      1- 1834     	LGOTO	_00008_DS_
                                    1- 1835     	BANKSEL	r0x1057
     00B8 rrrr                      3-   71 m1      .banksel ram_address
     00B9 03rr                      1- 1836     	ADDAR	r0x1057,F
                                    1- 1837     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     00BA                           1- 1838     _00008_DS_:
     00BA 1C03                      1- 1839     	BCR	STATUS,0
                                    1- 1840     	BANKSEL	r0x1057
     00BB rrrr                      3-   71 m1      .banksel ram_address
     00BC 13rr                      1- 1841     	RRR	r0x1057,W
                                    1- 1842     	BANKSEL	r0x1059
     00BD rrrr                      3-   71 m1      .banksel ram_address
     00BE 00rr                      1- 1843     	MOVAR	r0x1059
                                    1- 1844     	BANKSEL	r0x1055
     00BF rrrr                      3-   71 m1      .banksel ram_address
     00C0 13rr                      1- 1845     	RRR	r0x1055,W
                                    1- 1846     	BANKSEL	r0x1058
     00C1 rrrr                      3-   71 m1      .banksel ram_address
     00C2 00rr                      1- 1847     	MOVAR	r0x1058
                                    1- 1848     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00C3 1C03                      1- 1849     	BCR	STATUS,0
                                    1- 1850     	BANKSEL	r0x1059
     00C4 rrrr                      3-   71 m1      .banksel ram_address
     00C5 13rr                      1- 1851     	RRR	r0x1059,F
                                    1- 1852     	BANKSEL	r0x1058
     00C6 rrrr                      3-   71 m1      .banksel ram_address
     00C7 13rr                      1- 1853     	RRR	r0x1058,F
     00C8 01rr                      1- 1854     	MOVR	r0x1058,W
                                    1- 1855     	BANKSEL	r0x1055
     00C9 rrrr                      3-   71 m1      .banksel ram_address
     00CA 00rr                      1- 1856     	MOVAR	r0x1055
     00CB 2119                      1- 1857     	MOVIA	0x19
     00CC 03rr                      1- 1858     	ADDAR	r0x1055,W
                                    1- 1859     	BANKSEL	_batValue
     00CD rrrr                      3-   71 m1      .banksel ram_address
     00CE 00rr                      1- 1860     	MOVAR	_batValue
     00CF 3rrr                      1- 1861     	LGOTO	_00467_DS_
                                    1- 1862     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     00D0                           1- 1863     _00459_DS_:
                                    1- 1864     	.line	630, "main.c"; 	batValue = R_AIN2_DATA/8;
     00D0 1C03                      1- 1865     	BCR	STATUS,0
                                    1- 1866     	BANKSEL	_R_AIN2_DATA
     00D1 rrrr                      3-   71 m1      .banksel ram_address
     00D2 13rr                      1- 1867     	RRR	(_R_AIN2_DATA + 1),W
                                    1- 1868     	BANKSEL	r0x1058
     00D3 rrrr                      3-   71 m1      .banksel ram_address
     00D4 00rr                      1- 1869     	MOVAR	r0x1058
                                    1- 1870     	BANKSEL	_R_AIN2_DATA
     00D5 rrrr                      3-   71 m1      .banksel ram_address
     00D6 13rr                      1- 1871     	RRR	_R_AIN2_DATA,W
                                    1- 1872     	BANKSEL	r0x1055
     00D7 rrrr                      3-   71 m1      .banksel ram_address
     00D8 00rr                      1- 1873     	MOVAR	r0x1055
                                    1- 1874     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00D9 1C03                      1- 1875     	BCR	STATUS,0
                                    1- 1876     	BANKSEL	r0x1058
     00DA rrrr                      3-   71 m1      .banksel ram_address
     00DB 13rr                      1- 1877     	RRR	r0x1058,F
                                    1- 1878     	BANKSEL	r0x1055
     00DC rrrr                      3-   71 m1      .banksel ram_address
     00DD 13rr                      1- 1879     	RRR	r0x1055,F
                                    1- 1880     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00DE 1C03                      1- 1881     	BCR	STATUS,0
                                    1- 1882     	BANKSEL	r0x1058
     00DF rrrr                      3-   71 m1      .banksel ram_address
     00E0 13rr                      1- 1883     	RRR	r0x1058,F
                                    1- 1884     	BANKSEL	r0x1055
     00E1 rrrr                      3-   71 m1      .banksel ram_address
     00E2 13rr                      1- 1885     	RRR	r0x1055,F
     00E3 01rr                      1- 1886     	MOVR	r0x1055,W
                                    1- 1887     	BANKSEL	_batValue
     00E4 rrrr                      3-   71 m1      .banksel ram_address
     00E5 00rr                      1- 1888     	MOVAR	_batValue
     00E6                           1- 1889     _00467_DS_:
                                    1- 1890     	.line	633, "main.c"; 	}
                                    1- 1891     	RETURN	
     00E6 0010                      3-   26 m1      ret
                                    1- 1892     ; exit point of _checkBatAD
                                    1- 1894     ;***
                                    1- 1895     ;  pBlock Stats: dbName = C
                                    1- 1896     ;***
                                    1- 1897     ;has an exit
                                    1- 1898     ;functions called:
                                    1- 1899     ;   _delay
                                    1- 1900     ;   _delay
                                    1- 1901     ;1 compiler assigned register :
                                    1- 1902     ;   STK00
                                    1- 1903     ;; Starting pCode block
                                    1- 1904     .segment "code"; module=main, function=_initAD
     0000                           1- 1906     _initAD:
                                    1- 1907     ; 2 exit points
                                    1- 1908     	.line	567, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1909     	MOVIA	0x84
     0001 00rr                      1- 1910     	MOVAR	_ADMD
                                    1- 1911     	.line	572, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1912     	CLRR	_ADVREFH
                                    1- 1913     	.line	577, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1914     	MOVIA	0x10
     0004 00rr                      1- 1915     	MOVAR	_ADR
                                    1- 1916     	.line	579, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1917     	MOVIA	0x03
     0006 00rr                      1- 1918     	MOVAR	_ADCR
                                    1- 1919     	.line	582, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1920     	BSR	_ADMDbits,4
                                    1- 1921     	.line	583, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1922     	MOVIA	0x64
     0009 00rr                      1- 1923     	MOVAR	STK00
     000A 2100                      1- 1924     	MOVIA	0x00
     000B 2rrr                      1- 1925     	LCALL	_delay
                                    1- 1926     	.line	586, "main.c"; 	}
                                    1- 1927     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1- 1928     ; exit point of _initAD
                                    1- 1930     ;***
                                    1- 1931     ;  pBlock Stats: dbName = C
                                    1- 1932     ;***
                                    1- 1933     ;has an exit
                                    1- 1934     ;1 compiler assigned register :
                                    1- 1935     ;   r0x105A
                                    1- 1936     ;; Starting pCode block
                                    1- 1937     .segment "code"; module=main, function=_keyRead
                                    1- 1939     ;local variable name mapping:
     0000                           1- 1941     _keyRead:
                                    1- 1942     ; 2 exit points
                                    1- 1943     	.line	530, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1944     	BANKSEL	r0x105A
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1945     	MOVAR	r0x105A
                                    1- 1946     	.line	532, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 1947     	MOVR	r0x105A,W
     0003 0D03                      1- 1948     	BTRSC	STATUS,2
     0004 3rrr                      1- 1949     	LGOTO	_00438_DS_
                                    1- 1950     	.line	534, "main.c"; 	keyCount++;
                                    1- 1951     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 1952     	INCR	_keyCount,F
                                    1- 1953     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 1954     	.line	535, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 1955     	MOVIA	0xc8
     0008 04rr                      1- 1956     	SUBAR	_keyCount,W
     0009 0803                      1- 1957     	BTRSS	STATUS,0
     000A 3rrr                      1- 1958     	LGOTO	_00439_DS_
                                    1- 1959     	.line	537, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 1960     	MOVIA	0xc8
     000C 00rr                      1- 1961     	MOVAR	_keyCount
                                    1- 1962     	.line	538, "main.c"; 	if(!longPressFlag)
                                    1- 1963     	BANKSEL	_Status
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 0Crr                      1- 1964     	BTRSC	_Status,1
     000F 3rrr                      1- 1965     	LGOTO	_00439_DS_
                                    1- 1966     	.line	540, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 1967     	BSR	_Status,1
                                    1- 1968     	.line	541, "main.c"; 	return 2;
     0011 2102                      1- 1969     	MOVIA	0x02
     0012 3rrr                      1- 1970     	LGOTO	_00440_DS_
                                    1- 1971     ;;unsigned compare: left < lit (0xC8=200), size=1
     0013                           1- 1972     _00438_DS_:
                                    1- 1973     	.line	547, "main.c"; 	if(keyCount >= 200)
     0013 21C8                      1- 1974     	MOVIA	0xc8
                                    1- 1975     	BANKSEL	_keyCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1- 1976     	SUBAR	_keyCount,W
     0016 0803                      1- 1977     	BTRSS	STATUS,0
     0017 3rrr                      1- 1978     	LGOTO	_00435_DS_
                                    1- 1979     	.line	549, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 1980     	CLRR	_keyCount
                                    1- 1981     	.line	550, "main.c"; 	longPressFlag = 0;
                                    1- 1982     	BANKSEL	_Status
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 1Crr                      1- 1983     	BCR	_Status,1
                                    1- 1984     	.line	551, "main.c"; 	return	0;
     001B 2100                      1- 1985     	MOVIA	0x00
     001C 3rrr                      1- 1986     	LGOTO	_00440_DS_
                                    1- 1987     ;;unsigned compare: left < lit (0x8=8), size=1
     001D                           1- 1988     _00435_DS_:
                                    1- 1989     	.line	553, "main.c"; 	else if(keyCount >= 8)
     001D 2108                      1- 1990     	MOVIA	0x08
                                    1- 1991     	BANKSEL	_keyCount
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 04rr                      1- 1992     	SUBAR	_keyCount,W
     0020 0803                      1- 1993     	BTRSS	STATUS,0
     0021 3rrr                      1- 1994     	LGOTO	_00436_DS_
                                    1- 1995     	.line	555, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 1996     	CLRR	_keyCount
                                    1- 1997     	.line	556, "main.c"; 	return	1;
     0023 2101                      1- 1998     	MOVIA	0x01
     0024 3rrr                      1- 1999     	LGOTO	_00440_DS_
     0025                           1- 2000     _00436_DS_:
                                    1- 2001     	.line	558, "main.c"; 	keyCount = 0;
                                    1- 2002     	BANKSEL	_keyCount
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 02rr                      1- 2003     	CLRR	_keyCount
     0027                           1- 2004     _00439_DS_:
                                    1- 2005     	.line	560, "main.c"; 	return 0;
     0027 2100                      1- 2006     	MOVIA	0x00
     0028                           1- 2007     _00440_DS_:
                                    1- 2008     	.line	561, "main.c"; 	}
                                    1- 2009     	RETURN	
     0028 0010                      3-   26 m1      ret
                                    1- 2010     ; exit point of _keyRead
                                    1- 2012     ;***
                                    1- 2013     ;  pBlock Stats: dbName = C
                                    1- 2014     ;***
                                    1- 2015     ;has an exit
                                    1- 2016     ;functions called:
                                    1- 2017     ;   _pwmStop
                                    1- 2018     ;   _pwm1Stop
                                    1- 2019     ;   _pwmStop
                                    1- 2020     ;   _pwm1Stop
                                    1- 2021     ;; Starting pCode block
                                    1- 2022     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2024     _gotoSleep:
                                    1- 2025     ; 2 exit points
                                    1- 2026     	.line	506, "main.c"; 	showFlag = 0;
                                    1- 2027     	BANKSEL	_showFlag
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 2028     	CLRR	_showFlag
                                    1- 2029     	.line	507, "main.c"; 	PORTB = 0x00;
     0002 02rr                      1- 2030     	CLRR	_PORTB
                                    1- 2031     	.line	508, "main.c"; 	PORTA = 0x00;
                                    1- 2032     	BANKSEL	_PORTA
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 02rr                      1- 2033     	CLRR	_PORTA
                                    1- 2034     	.line	509, "main.c"; 	sleepTime = 0;
                                    1- 2035     	BANKSEL	_sleepTime
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1- 2036     	CLRR	_sleepTime
     0007 02rr                      1- 2037     	CLRR	(_sleepTime + 1)
                                    1- 2038     	.line	511, "main.c"; 	pwmStop();
     0008 2rrr                      1- 2039     	LCALL	_pwmStop
                                    1- 2040     	.line	512, "main.c"; 	pwm1Stop();
     0009 2rrr                      1- 2041     	LCALL	_pwm1Stop
                                    1- 2042     	.line	513, "main.c"; 	workStep = 0;
                                    1- 2043     	BANKSEL	_workStep
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 02rr                      1- 2044     	CLRR	_workStep
                                    1- 2045     	.line	514, "main.c"; 	AWUCON = 0x28;
     000C 2128                      1- 2046     	MOVIA	0x28
     000D 00rr                      1- 2047     	MOVAR	_AWUCON
                                    1- 2048     	.line	515, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     000E 210B                      1- 2049     	MOVIA	0x0b
     000F 00rr                      1- 2050     	MOVAR	_INTE
                                    1- 2051     	.line	516, "main.c"; 	PCON =  C_LVR_En ;	
     0010 2108                      1- 2052     	MOVIA	0x08
     0011 00rr                      1- 2053     	MOVAR	_PCON
                                    1- 2054     	.line	517, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0012 02rr                      1- 2055     	CLRR	_INTF
                                    1- 2056     	.line	518, "main.c"; 	CLRWDT();
     0013 0002                      1- 2057     	clrwdt
                                    1- 2058     	.line	519, "main.c"; 	ENI();
     0014 0004                      1- 2059     	ENI
                                    1- 2060     	.line	520, "main.c"; 	SLEEP();
     0015 0001                      1- 2061     	sleep
                                    1- 2062     	.line	521, "main.c"; 	AWUCON = 0x00;
     0016 02rr                      1- 2063     	CLRR	_AWUCON
                                    1- 2064     	.line	522, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0017 2101                      1- 2065     	MOVIA	0x01
     0018 00rr                      1- 2066     	MOVAR	_INTE
                                    1- 2067     	.line	523, "main.c"; 	INTF = 0;
     0019 02rr                      1- 2068     	CLRR	_INTF
                                    1- 2069     	.line	525, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En ;				// Enable WDT ,  Enable LVR
     001A 21A8                      1- 2070     	MOVIA	0xa8
     001B 00rr                      1- 2071     	MOVAR	_PCON
                                    1- 2072     	.line	527, "main.c"; 	}
                                    1- 2073     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1- 2074     ; exit point of _gotoSleep
                                    1- 2076     ;***
                                    1- 2077     ;  pBlock Stats: dbName = C
                                    1- 2078     ;***
                                    1- 2079     ;has an exit
                                    1- 2080     ;; Starting pCode block
                                    1- 2081     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2083     _pwmStop:
                                    1- 2084     ; 2 exit points
                                    1- 2085     	.line	500, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2086     	CLRA	
     0001 00rr                      1- 2087     	SFUN	_T2CR1
                                    1- 2088     	.line	501, "main.c"; 	}
                                    1- 2089     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2090     ; exit point of _pwmStop
                                    1- 2092     ;***
                                    1- 2093     ;  pBlock Stats: dbName = C
                                    1- 2094     ;***
                                    1- 2095     ;has an exit
                                    1- 2096     ;1 compiler assigned register :
                                    1- 2097     ;   r0x105B
                                    1- 2098     ;; Starting pCode block
                                    1- 2099     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2101     _pwmInit:
                                    1- 2102     ; 2 exit points
                                    1- 2103     	.line	488, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2104     	SFUNR	_T2CR1
                                    1- 2105     	BANKSEL	r0x105B
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2106     	MOVAR	r0x105B
     0003 0Frr                      1- 2107     	BTRSC	r0x105B,7
                                    1- 2108     	.line	489, "main.c"; 	return;
     0004 3rrr                      1- 2109     	LGOTO	_00415_DS_
                                    1- 2110     	.line	490, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2111     	CLRR	_TMRH
                                    1- 2112     	.line	491, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 2113     	MOVIA	0x64
     0007 00rr                      1- 2114     	SFUN	_TMR2
                                    1- 2115     	.line	494, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2101                      1- 2116     	MOVIA	0x01
     0009 00rr                      1- 2117     	SFUN	_T2CR2
                                    1- 2118     	.line	495, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2119     	MOVIA	0x83
     000B 00rr                      1- 2120     	SFUN	_T2CR1
     000C                           1- 2121     _00415_DS_:
                                    1- 2122     	.line	496, "main.c"; 	}
                                    1- 2123     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1- 2124     ; exit point of _pwmInit
                                    1- 2126     ;***
                                    1- 2127     ;  pBlock Stats: dbName = C
                                    1- 2128     ;***
                                    1- 2129     ;has an exit
                                    1- 2130     ;; Starting pCode block
                                    1- 2131     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2133     _pwm1Stop:
                                    1- 2134     ; 2 exit points
                                    1- 2135     	.line	481, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2136     	CLRA	
     0001 00rr                      1- 2137     	SFUN	_T1CR1
                                    1- 2138     	.line	482, "main.c"; 	}
                                    1- 2139     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2140     ; exit point of _pwm1Stop
                                    1- 2142     ;***
                                    1- 2143     ;  pBlock Stats: dbName = C
                                    1- 2144     ;***
                                    1- 2145     ;has an exit
                                    1- 2146     ;1 compiler assigned register :
                                    1- 2147     ;   r0x105C
                                    1- 2148     ;; Starting pCode block
                                    1- 2149     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2151     _pwm1Init:
                                    1- 2152     ; 2 exit points
                                    1- 2153     	.line	469, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2154     	SFUNR	_T1CR1
                                    1- 2155     	BANKSEL	r0x105C
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2156     	MOVAR	r0x105C
     0003 0Frr                      1- 2157     	BTRSC	r0x105C,7
                                    1- 2158     	.line	470, "main.c"; 	return;
     0004 3rrr                      1- 2159     	LGOTO	_00404_DS_
                                    1- 2160     	.line	471, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2161     	CLRR	_TMRH
                                    1- 2162     	.line	472, "main.c"; 	TMR1 = 24;							//频率为110K
     0006 2118                      1- 2163     	MOVIA	0x18
     0007 00rr                      1- 2164     	SFUN	_TMR1
                                    1- 2165     	.line	475, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2166     	CLRA	
     0009 00rr                      1- 2167     	SFUN	_T1CR2
                                    1- 2168     	.line	476, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2169     	MOVIA	0x83
     000B 00rr                      1- 2170     	SFUN	_T1CR1
     000C                           1- 2171     _00404_DS_:
                                    1- 2172     	.line	477, "main.c"; 	}
                                    1- 2173     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1- 2174     ; exit point of _pwm1Init
                                    1- 2176     ;***
                                    1- 2177     ;  pBlock Stats: dbName = C
                                    1- 2178     ;***
                                    1- 2179     ;has an exit
                                    1- 2180     ;functions called:
                                    1- 2181     ;   _pwmStop
                                    1- 2182     ;   __divuchar
                                    1- 2183     ;   __moduchar
                                    1- 2184     ;   _pwmStop
                                    1- 2185     ;   __divuchar
                                    1- 2186     ;   __moduchar
                                    1- 2187     ;1 compiler assigned register :
                                    1- 2188     ;   STK00
                                    1- 2189     ;; Starting pCode block
                                    1- 2190     .segment "code"; module=main, function=_powerOff
     0000                           1- 2192     _powerOff:
                                    1- 2193     ; 2 exit points
                                    1- 2194     	.line	452, "main.c"; 	workStep = 0;
                                    1- 2195     	BANKSEL	_workStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 2196     	CLRR	_workStep
                                    1- 2197     	.line	453, "main.c"; 	pwmStop();
     0002 2rrr                      1- 2198     	LCALL	_pwmStop
                                    1- 2199     	.line	454, "main.c"; 	if(batValue == 100)
                                    1- 2200     	BANKSEL	_batValue
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 01rr                      1- 2201     	MOVR	_batValue,W
     0005 2464                      1- 2202     	XORIA	0x64
     0006 0903                      1- 2203     	BTRSS	STATUS,2
     0007 3rrr                      1- 2204     	LGOTO	_00395_DS_
                                    1- 2205     	.line	456, "main.c"; 	tempshiweiNum = 9;
     0008 2109                      1- 2206     	MOVIA	0x09
                                    1- 2207     	BANKSEL	_tempshiweiNum
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 2208     	MOVAR	_tempshiweiNum
                                    1- 2209     	.line	457, "main.c"; 	tempgeweiNum = 9;
                                    1- 2210     	BANKSEL	_tempgeweiNum
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1- 2211     	MOVAR	_tempgeweiNum
     000D 3rrr                      1- 2212     	LGOTO	_00397_DS_
     000E                           1- 2213     _00395_DS_:
                                    1- 2214     	.line	461, "main.c"; 	tempshiweiNum = batValue/10;
     000E 210A                      1- 2215     	MOVIA	0x0a
     000F 00rr                      1- 2216     	MOVAR	STK00
                                    1- 2217     	BANKSEL	_batValue
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 2218     	MOVR	_batValue,W
     0012 2rrr                      1- 2219     	LCALL	__divuchar
                                    1- 2220     	BANKSEL	_tempshiweiNum
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 00rr                      1- 2221     	MOVAR	_tempshiweiNum
                                    1- 2222     	.line	462, "main.c"; 	tempgeweiNum = batValue%10;
     0015 210A                      1- 2223     	MOVIA	0x0a
     0016 00rr                      1- 2224     	MOVAR	STK00
                                    1- 2225     	BANKSEL	_batValue
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 01rr                      1- 2226     	MOVR	_batValue,W
     0019 2rrr                      1- 2227     	LCALL	__moduchar
                                    1- 2228     	BANKSEL	_tempgeweiNum
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 00rr                      1- 2229     	MOVAR	_tempgeweiNum
     001C                           1- 2230     _00397_DS_:
                                    1- 2231     	.line	464, "main.c"; 	}
                                    1- 2232     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1- 2233     ; exit point of _powerOff
                                    1- 2235     ;***
                                    1- 2236     ;  pBlock Stats: dbName = C
                                    1- 2237     ;***
                                    1- 2238     ;has an exit
                                    1- 2239     ;; Starting pCode block
                                    1- 2240     .segment "code"; module=main, function=_initSys
     0000                           1- 2242     _initSys:
                                    1- 2243     ; 2 exit points
                                    1- 2244     	.line	424, "main.c"; 	DISI();
     0000 0013                      1- 2245     	DISI
                                    1- 2246     	.line	425, "main.c"; 	IOSTA = C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0001 213E                      1- 2247     	MOVIA	0x3e
     0002 000r                      1- 2248     	IOST	_IOSTA
                                    1- 2249     	.line	426, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 2250     	CLRA	
     0004 000r                      1- 2251     	IOST	_IOSTB
                                    1- 2252     	.line	427, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2253     	CLRR	_PORTB
                                    1- 2254     	.line	428, "main.c"; 	PORTA = 0x00;
                                    1- 2255     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1- 2256     	CLRR	_PORTA
                                    1- 2257     	.line	429, "main.c"; 	APHCON = 0xFF;
     0008 21FF                      1- 2258     	MOVIA	0xff
     0009 000r                      1- 2259     	IOST	_APHCON
                                    1- 2260     	.line	430, "main.c"; 	BPHCON = 0xFF;
     000A 00rr                      1- 2261     	MOVAR	_BPHCON
                                    1- 2262     	.line	431, "main.c"; 	ABPLCON = 0xFF;
     000B 00rr                      1- 2263     	MOVAR	_ABPLCON
                                    1- 2264     	.line	433, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000C 2101                      1- 2265     	MOVIA	0x01
     000D 00rr                      1- 2266     	MOVAR	_INTE
                                    1- 2267     	.line	435, "main.c"; 	PCON1 = C_TMR0_Dis;
     000E 0200                      1- 2268     	CLRA	
     000F 000r                      1- 2269     	IOST	_PCON1
                                    1- 2270     	.line	437, "main.c"; 	TMR0 = 55;
     0010 2137                      1- 2271     	MOVIA	0x37
     0011 00rr                      1- 2272     	MOVAR	_TMR0
                                    1- 2273     	.line	438, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0012 2101                      1- 2274     	MOVIA	0x01
     0013 0003                      1- 2275     	T0MD	
                                    1- 2276     	.line	440, "main.c"; 	PCON1 = C_TMR0_En;
     0014 000r                      1- 2277     	IOST	_PCON1
                                    1- 2278     	.line	443, "main.c"; 	PCON = C_WDT_En | C_LVR_En ;				// Enable WDT ,  Enable LVR
     0015 2188                      1- 2279     	MOVIA	0x88
     0016 00rr                      1- 2280     	MOVAR	_PCON
                                    1- 2281     	.line	446, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0017 2101                      1- 2282     	MOVIA	0x01
     0018 000r                      1- 2283     	IOST	_PCON1
                                    1- 2284     	.line	447, "main.c"; 	ENI();
     0019 0004                      1- 2285     	ENI
                                    1- 2286     	.line	448, "main.c"; 	}
                                    1- 2287     	RETURN	
     001A 0010                      3-   26 m1      ret
                                    1- 2288     ; exit point of _initSys
                                    1- 2290     ;***
                                    1- 2291     ;  pBlock Stats: dbName = C
                                    1- 2292     ;***
                                    1- 2293     ;has an exit
                                    1- 2294     ;functions called:
                                    1- 2295     ;   _keyRead
                                    1- 2296     ;   _pwmInit
                                    1- 2297     ;   _powerOff
                                    1- 2298     ;   _pwmInit
                                    1- 2299     ;   _keyRead
                                    1- 2300     ;   _pwmInit
                                    1- 2301     ;   _powerOff
                                    1- 2302     ;   _pwmInit
                                    1- 2303     ;1 compiler assigned register :
                                    1- 2304     ;   r0x105D
                                    1- 2305     ;; Starting pCode block
                                    1- 2306     .segment "code"; module=main, function=_keyCtr
                                    1- 2308     ;local variable name mapping:
     0000                           1- 2310     _keyCtr:
                                    1- 2311     ; 2 exit points
                                    1- 2312     	.line	362, "main.c"; 	char kclick = keyRead(0x20 & (~PORTA));
                                    1- 2313     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 07rr                      1- 2314     	COMR	_PORTA,W
                                    1- 2315     	BANKSEL	r0x105D
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 00rr                      1- 2316     	MOVAR	r0x105D
     0004 2120                      1- 2317     	MOVIA	0x20
     0005 10rr                      1- 2318     	ANDAR	r0x105D,F
     0006 01rr                      1- 2319     	MOVR	r0x105D,W
     0007 2rrr                      1- 2320     	LCALL	_keyRead
                                    1- 2321     	BANKSEL	r0x105D
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1- 2322     	MOVAR	r0x105D
                                    1- 2323     	.line	363, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 2324     	XORIA	0x01
     000B 0903                      1- 2325     	BTRSS	STATUS,2
     000C 3rrr                      1- 2326     	LGOTO	_00383_DS_
                                    1- 2327     	.line	365, "main.c"; 	count500ms = 0;
                                    1- 2328     	BANKSEL	_count500ms
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 02rr                      1- 2329     	CLRR	_count500ms
                                    1- 2330     	.line	366, "main.c"; 	ledLightTime = 0;
                                    1- 2331     	BANKSEL	_ledLightTime
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 02rr                      1- 2332     	CLRR	_ledLightTime
                                    1- 2333     	.line	367, "main.c"; 	if(workStep == 0)
                                    1- 2334     	BANKSEL	_workStep
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 2335     	MOVR	_workStep,W
     0013 0903                      1- 2336     	BTRSS	STATUS,2
     0014 3rrr                      1- 2337     	LGOTO	_00353_DS_
                                    1- 2338     	.line	369, "main.c"; 	count1s = 0;
                                    1- 2339     	BANKSEL	_count1s
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 02rr                      1- 2340     	CLRR	_count1s
                                    1- 2341     	.line	370, "main.c"; 	ledLightTime = 3;
     0017 2103                      1- 2342     	MOVIA	0x03
                                    1- 2343     	BANKSEL	_ledLightTime
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 00rr                      1- 2344     	MOVAR	_ledLightTime
                                    1- 2345     	.line	371, "main.c"; 	showFlag = 1;
     001A 2101                      1- 2346     	MOVIA	0x01
                                    1- 2347     	BANKSEL	_showFlag
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 2348     	MOVAR	_showFlag
                                    1- 2349     	.line	372, "main.c"; 	return;
     001D 3rrr                      1- 2350     	LGOTO	_00385_DS_
     001E                           1- 2351     _00353_DS_:
                                    1- 2352     	.line	374, "main.c"; 	if(++workStep > 6)
                                    1- 2353     	BANKSEL	_workStep
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 05rr                      1- 2354     	INCR	_workStep,F
                                    1- 2355     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2356     ;;unsigned compare: left >= lit (0x7=7), size=1
     0020 2107                      1- 2357     	MOVIA	0x07
     0021 04rr                      1- 2358     	SUBAR	_workStep,W
     0022 0803                      1- 2359     	BTRSS	STATUS,0
     0023 3rrr                      1- 2360     	LGOTO	_00355_DS_
                                    1- 2361     	.line	375, "main.c"; 	workStep = 1;
     0024 2101                      1- 2362     	MOVIA	0x01
     0025 00rr                      1- 2363     	MOVAR	_workStep
     0026                           1- 2364     _00355_DS_:
                                    1- 2365     	.line	376, "main.c"; 	if(workStep == 1)
                                    1- 2366     	BANKSEL	_workStep
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 2367     	MOVR	_workStep,W
     0028 2401                      1- 2368     	XORIA	0x01
     0029 0903                      1- 2369     	BTRSS	STATUS,2
     002A 3rrr                      1- 2370     	LGOTO	_00371_DS_
                                    1- 2371     	.line	377, "main.c"; 	maxDuty = 40;
     002B 2128                      1- 2372     	MOVIA	0x28
                                    1- 2373     	BANKSEL	_maxDuty
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 00rr                      1- 2374     	MOVAR	_maxDuty
     002E 3rrr                      1- 2375     	LGOTO	_00372_DS_
     002F                           1- 2376     _00371_DS_:
                                    1- 2377     	.line	378, "main.c"; 	else if(workStep == 2)
                                    1- 2378     	BANKSEL	_workStep
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 2379     	MOVR	_workStep,W
     0031 2402                      1- 2380     	XORIA	0x02
     0032 0903                      1- 2381     	BTRSS	STATUS,2
     0033 3rrr                      1- 2382     	LGOTO	_00368_DS_
                                    1- 2383     	.line	379, "main.c"; 	maxDuty = 42;
     0034 212A                      1- 2384     	MOVIA	0x2a
                                    1- 2385     	BANKSEL	_maxDuty
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 00rr                      1- 2386     	MOVAR	_maxDuty
     0037 3rrr                      1- 2387     	LGOTO	_00372_DS_
     0038                           1- 2388     _00368_DS_:
                                    1- 2389     	.line	380, "main.c"; 	else if(workStep == 3)
                                    1- 2390     	BANKSEL	_workStep
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 01rr                      1- 2391     	MOVR	_workStep,W
     003A 2403                      1- 2392     	XORIA	0x03
     003B 0903                      1- 2393     	BTRSS	STATUS,2
     003C 3rrr                      1- 2394     	LGOTO	_00365_DS_
                                    1- 2395     	.line	381, "main.c"; 	maxDuty = 44;
     003D 212C                      1- 2396     	MOVIA	0x2c
                                    1- 2397     	BANKSEL	_maxDuty
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 00rr                      1- 2398     	MOVAR	_maxDuty
     0040 3rrr                      1- 2399     	LGOTO	_00372_DS_
     0041                           1- 2400     _00365_DS_:
                                    1- 2401     	.line	382, "main.c"; 	else if(workStep == 4)
                                    1- 2402     	BANKSEL	_workStep
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 01rr                      1- 2403     	MOVR	_workStep,W
     0043 2404                      1- 2404     	XORIA	0x04
     0044 0903                      1- 2405     	BTRSS	STATUS,2
     0045 3rrr                      1- 2406     	LGOTO	_00362_DS_
                                    1- 2407     	.line	383, "main.c"; 	maxDuty = 46;
     0046 212E                      1- 2408     	MOVIA	0x2e
                                    1- 2409     	BANKSEL	_maxDuty
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 00rr                      1- 2410     	MOVAR	_maxDuty
     0049 3rrr                      1- 2411     	LGOTO	_00372_DS_
     004A                           1- 2412     _00362_DS_:
                                    1- 2413     	.line	384, "main.c"; 	else if(workStep == 5)
                                    1- 2414     	BANKSEL	_workStep
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 01rr                      1- 2415     	MOVR	_workStep,W
     004C 2405                      1- 2416     	XORIA	0x05
     004D 0903                      1- 2417     	BTRSS	STATUS,2
     004E 3rrr                      1- 2418     	LGOTO	_00359_DS_
                                    1- 2419     	.line	385, "main.c"; 	maxDuty = 48;
     004F 2130                      1- 2420     	MOVIA	0x30
                                    1- 2421     	BANKSEL	_maxDuty
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 00rr                      1- 2422     	MOVAR	_maxDuty
     0052 3rrr                      1- 2423     	LGOTO	_00372_DS_
     0053                           1- 2424     _00359_DS_:
                                    1- 2425     	.line	386, "main.c"; 	else if(workStep == 6)
                                    1- 2426     	BANKSEL	_workStep
     0053 rrrr                      3-   71 m1      .banksel ram_address
     0054 01rr                      1- 2427     	MOVR	_workStep,W
     0055 2406                      1- 2428     	XORIA	0x06
     0056 0903                      1- 2429     	BTRSS	STATUS,2
     0057 3rrr                      1- 2430     	LGOTO	_00372_DS_
                                    1- 2431     	.line	387, "main.c"; 	maxDuty = 50;
     0058 2132                      1- 2432     	MOVIA	0x32
                                    1- 2433     	BANKSEL	_maxDuty
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 00rr                      1- 2434     	MOVAR	_maxDuty
     005B                           1- 2435     _00372_DS_:
                                    1- 2436     	.line	388, "main.c"; 	if(workStep > 0)
                                    1- 2437     	BANKSEL	_workStep
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 01rr                      1- 2438     	MOVR	_workStep,W
     005D 0D03                      1- 2439     	BTRSC	STATUS,2
     005E 3rrr                      1- 2440     	LGOTO	_00385_DS_
                                    1- 2441     	.line	390, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 2442     	BANKSEL	_maxDuty
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 01rr                      1- 2443     	MOVR	_maxDuty,W
     0061 00rr                      1- 2444     	SFUN	_PWM2DUTY
                                    1- 2445     	.line	391, "main.c"; 	pwmInit();
     0062 2rrr                      1- 2446     	LCALL	_pwmInit
     0063 3rrr                      1- 2447     	LGOTO	_00385_DS_
     0064                           1- 2448     _00383_DS_:
                                    1- 2449     	.line	394, "main.c"; 	else if(kclick == 2)
                                    1- 2450     	BANKSEL	r0x105D
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 01rr                      1- 2451     	MOVR	r0x105D,W
     0066 2402                      1- 2452     	XORIA	0x02
     0067 0903                      1- 2453     	BTRSS	STATUS,2
     0068 3rrr                      1- 2454     	LGOTO	_00385_DS_
                                    1- 2455     	.line	396, "main.c"; 	if(workStep > 0)
                                    1- 2456     	BANKSEL	_workStep
     0069 rrrr                      3-   71 m1      .banksel ram_address
     006A 01rr                      1- 2457     	MOVR	_workStep,W
     006B 0D03                      1- 2458     	BTRSC	STATUS,2
     006C 3rrr                      1- 2459     	LGOTO	_00378_DS_
                                    1- 2460     	.line	398, "main.c"; 	powerOff();
     006D 2rrr                      1- 2461     	LCALL	_powerOff
                                    1- 2462     	.line	399, "main.c"; 	showFlag = 0;
                                    1- 2463     	BANKSEL	_showFlag
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 02rr                      1- 2464     	CLRR	_showFlag
     0070 3rrr                      1- 2465     	LGOTO	_00385_DS_
     0071                           1- 2466     _00378_DS_:
                                    1- 2467     	.line	403, "main.c"; 	if(pwStep == 10)
                                    1- 2468     	BANKSEL	_pwStep
     0071 rrrr                      3-   71 m1      .banksel ram_address
     0072 01rr                      1- 2469     	MOVR	_pwStep,W
     0073 240A                      1- 2470     	XORIA	0x0a
     0074 0903                      1- 2471     	BTRSS	STATUS,2
     0075 3rrr                      1- 2472     	LGOTO	_00376_DS_
                                    1- 2473     	.line	405, "main.c"; 	sleepTime = 0;
                                    1- 2474     	BANKSEL	_sleepTime
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 02rr                      1- 2475     	CLRR	_sleepTime
     0078 02rr                      1- 2476     	CLRR	(_sleepTime + 1)
                                    1- 2477     	.line	406, "main.c"; 	return;
     0079 3rrr                      1- 2478     	LGOTO	_00385_DS_
     007A                           1- 2479     _00376_DS_:
                                    1- 2480     	.line	408, "main.c"; 	workStep = 1;
     007A 2101                      1- 2481     	MOVIA	0x01
                                    1- 2482     	BANKSEL	_workStep
     007B rrrr                      3-   71 m1      .banksel ram_address
     007C 00rr                      1- 2483     	MOVAR	_workStep
                                    1- 2484     	.line	409, "main.c"; 	PWM2DUTY = 70;
     007D 2146                      1- 2485     	MOVIA	0x46
     007E 00rr                      1- 2486     	SFUN	_PWM2DUTY
                                    1- 2487     	.line	410, "main.c"; 	currentDuty = 70;
                                    1- 2488     	BANKSEL	_currentDuty
     007F rrrr                      3-   71 m1      .banksel ram_address
     0080 00rr                      1- 2489     	MOVAR	_currentDuty
                                    1- 2490     	.line	411, "main.c"; 	maxDuty = 40;
     0081 2128                      1- 2491     	MOVIA	0x28
                                    1- 2492     	BANKSEL	_maxDuty
     0082 rrrr                      3-   71 m1      .banksel ram_address
     0083 00rr                      1- 2493     	MOVAR	_maxDuty
                                    1- 2494     	.line	412, "main.c"; 	pwmInit();
     0084 2rrr                      1- 2495     	LCALL	_pwmInit
     0085                           1- 2496     _00385_DS_:
                                    1- 2497     	.line	417, "main.c"; 	}
                                    1- 2498     	RETURN	
     0085 0010                      3-   26 m1      ret
                                    1- 2499     ; exit point of _keyCtr
                                    1- 2501     ;***
                                    1- 2502     ;  pBlock Stats: dbName = C
                                    1- 2503     ;***
                                    1- 2504     ;has an exit
                                    1- 2505     ;functions called:
                                    1- 2506     ;   _setInput
                                    1- 2507     ;   _showKeyLed
                                    1- 2508     ;   __gptrget1
                                    1- 2509     ;   _showNubShiwei
                                    1- 2510     ;   __gptrget1
                                    1- 2511     ;   _showNubGewei
                                    1- 2512     ;   _setInput
                                    1- 2513     ;   _showKeyLed
                                    1- 2514     ;   __gptrget1
                                    1- 2515     ;   _showNubShiwei
                                    1- 2516     ;   __gptrget1
                                    1- 2517     ;   _showNubGewei
                                    1- 2518     ;5 compiler assigned registers:
                                    1- 2519     ;   r0x105E
                                    1- 2520     ;   r0x105F
                                    1- 2521     ;   STK01
                                    1- 2522     ;   STK00
                                    1- 2523     ;   r0x1060
                                    1- 2524     ;; Starting pCode block
                                    1- 2525     .segment "code"; module=main, function=_refreshNub
     0000                           1- 2527     _refreshNub:
                                    1- 2528     ; 2 exit points
                                    1- 2529     ;;unsigned compare: left < lit (0x384=900), size=2
                                    1- 2530     	.line	312, "main.c"; 	if(count900s >= 900)
     0000 2103                      1- 2531     	MOVIA	0x03
                                    1- 2532     	BANKSEL	_count900s
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 2533     	SUBAR	(_count900s + 1),W
     0003 0903                      1- 2534     	BTRSS	STATUS,2
     0004 3rrr                      1- 2535     	LGOTO	_00344_DS_
     0005 2184                      1- 2536     	MOVIA	0x84
     0006 04rr                      1- 2537     	SUBAR	_count900s,W
     0007                           1- 2538     _00344_DS_:
     0007 0803                      1- 2539     	BTRSS	STATUS,0
     0008 3rrr                      1- 2540     	LGOTO	_00304_DS_
                                    1- 2541     	.line	314, "main.c"; 	setInput();
     0009 2rrr                      1- 2542     	LCALL	_setInput
                                    1- 2543     	.line	315, "main.c"; 	return;
     000A 3rrr                      1- 2544     	LGOTO	_00321_DS_
     000B                           1- 2545     _00304_DS_:
                                    1- 2546     	.line	317, "main.c"; 	if(tempshiweiNum != shiweiNum || tempgeweiNum != geweiNum)
                                    1- 2547     	BANKSEL	_shiweiNum
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 01rr                      1- 2548     	MOVR	_shiweiNum,W
                                    1- 2549     	BANKSEL	_tempshiweiNum
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 12rr                      1- 2550     	XORAR	_tempshiweiNum,W
     000F 0903                      1- 2551     	BTRSS	STATUS,2
     0010 3rrr                      1- 2552     	LGOTO	_00312_DS_
                                    1- 2553     	BANKSEL	_geweiNum
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 01rr                      1- 2554     	MOVR	_geweiNum,W
                                    1- 2555     	BANKSEL	_tempgeweiNum
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 12rr                      1- 2556     	XORAR	_tempgeweiNum,W
     0015 0D03                      1- 2557     	BTRSC	STATUS,2
     0016 3rrr                      1- 2558     	LGOTO	_00313_DS_
     0017                           1- 2559     _00312_DS_:
                                    1- 2560     	.line	320, "main.c"; 	if(workStep == 0)
                                    1- 2561     	BANKSEL	_workStep
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 01rr                      1- 2562     	MOVR	_workStep,W
     0019 0903                      1- 2563     	BTRSS	STATUS,2
     001A 3rrr                      1- 2564     	LGOTO	_00310_DS_
                                    1- 2565     	.line	322, "main.c"; 	if(++refreshCount >= 200)
                                    1- 2566     	BANKSEL	_refreshCount
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 05rr                      1- 2567     	INCR	_refreshCount,F
     001D 0D03                      1- 2568     	BTRSC	STATUS,2
     001E 05rr                      1- 2569     	INCR	(_refreshCount + 1),F
                                    1- 2570     ;;unsigned compare: left < lit (0xC8=200), size=2
     001F 2100                      1- 2571     	MOVIA	0x00
     0020 04rr                      1- 2572     	SUBAR	(_refreshCount + 1),W
     0021 0903                      1- 2573     	BTRSS	STATUS,2
     0022 3rrr                      1- 2574     	LGOTO	_00346_DS_
     0023 21C8                      1- 2575     	MOVIA	0xc8
     0024 04rr                      1- 2576     	SUBAR	_refreshCount,W
     0025                           1- 2577     _00346_DS_:
     0025 0803                      1- 2578     	BTRSS	STATUS,0
     0026 3rrr                      1- 2579     	LGOTO	_00314_DS_
                                    1- 2580     	.line	324, "main.c"; 	refreshCount = 0;
                                    1- 2581     	BANKSEL	_refreshCount
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 02rr                      1- 2582     	CLRR	_refreshCount
     0029 02rr                      1- 2583     	CLRR	(_refreshCount + 1)
                                    1- 2584     	.line	325, "main.c"; 	tempshiweiNum = shiweiNum;
                                    1- 2585     	BANKSEL	_shiweiNum
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1- 2586     	MOVR	_shiweiNum,W
                                    1- 2587     	BANKSEL	_tempshiweiNum
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 00rr                      1- 2588     	MOVAR	_tempshiweiNum
                                    1- 2589     	.line	326, "main.c"; 	tempgeweiNum = geweiNum;
                                    1- 2590     	BANKSEL	_geweiNum
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 01rr                      1- 2591     	MOVR	_geweiNum,W
                                    1- 2592     	BANKSEL	_tempgeweiNum
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 00rr                      1- 2593     	MOVAR	_tempgeweiNum
     0032 3rrr                      1- 2594     	LGOTO	_00314_DS_
     0033                           1- 2595     _00310_DS_:
                                    1- 2596     	.line	331, "main.c"; 	if(++refreshCount >= 200)
                                    1- 2597     	BANKSEL	_refreshCount
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 05rr                      1- 2598     	INCR	_refreshCount,F
     0035 0D03                      1- 2599     	BTRSC	STATUS,2
     0036 05rr                      1- 2600     	INCR	(_refreshCount + 1),F
                                    1- 2601     ;;unsigned compare: left < lit (0xC8=200), size=2
     0037 2100                      1- 2602     	MOVIA	0x00
     0038 04rr                      1- 2603     	SUBAR	(_refreshCount + 1),W
     0039 0903                      1- 2604     	BTRSS	STATUS,2
     003A 3rrr                      1- 2605     	LGOTO	_00347_DS_
     003B 21C8                      1- 2606     	MOVIA	0xc8
     003C 04rr                      1- 2607     	SUBAR	_refreshCount,W
     003D                           1- 2608     _00347_DS_:
     003D 0803                      1- 2609     	BTRSS	STATUS,0
     003E 3rrr                      1- 2610     	LGOTO	_00314_DS_
                                    1- 2611     	.line	333, "main.c"; 	refreshCount = 0;
                                    1- 2612     	BANKSEL	_refreshCount
     003F rrrr                      3-   71 m1      .banksel ram_address
     0040 02rr                      1- 2613     	CLRR	_refreshCount
     0041 02rr                      1- 2614     	CLRR	(_refreshCount + 1)
                                    1- 2615     	.line	334, "main.c"; 	tempshiweiNum = shiweiNum;
                                    1- 2616     	BANKSEL	_shiweiNum
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 01rr                      1- 2617     	MOVR	_shiweiNum,W
                                    1- 2618     	BANKSEL	_tempshiweiNum
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 00rr                      1- 2619     	MOVAR	_tempshiweiNum
                                    1- 2620     	.line	335, "main.c"; 	tempgeweiNum = geweiNum;
                                    1- 2621     	BANKSEL	_geweiNum
     0046 rrrr                      3-   71 m1      .banksel ram_address
     0047 01rr                      1- 2622     	MOVR	_geweiNum,W
                                    1- 2623     	BANKSEL	_tempgeweiNum
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 00rr                      1- 2624     	MOVAR	_tempgeweiNum
     004A 3rrr                      1- 2625     	LGOTO	_00314_DS_
     004B                           1- 2626     _00313_DS_:
                                    1- 2627     	.line	341, "main.c"; 	refreshCount = 0;
                                    1- 2628     	BANKSEL	_refreshCount
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 02rr                      1- 2629     	CLRR	_refreshCount
     004D 02rr                      1- 2630     	CLRR	(_refreshCount + 1)
     004E                           1- 2631     _00314_DS_:
                                    1- 2632     	.line	343, "main.c"; 	if(workStep > 0 || ledLightTime > 0)
                                    1- 2633     	BANKSEL	_workStep
     004E rrrr                      3-   71 m1      .banksel ram_address
     004F 01rr                      1- 2634     	MOVR	_workStep,W
     0050 0903                      1- 2635     	BTRSS	STATUS,2
     0051 3rrr                      1- 2636     	LGOTO	_00316_DS_
                                    1- 2637     	BANKSEL	_ledLightTime
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 01rr                      1- 2638     	MOVR	_ledLightTime,W
     0054 0903                      1- 2639     	BTRSS	STATUS,2
     0055                           1- 2640     _00316_DS_:
                                    1- 2641     	.line	345, "main.c"; 	showKeyLed();
     0055 2rrr                      1- 2642     	LCALL	_showKeyLed
                                    1- 2643     	.line	348, "main.c"; 	if(ledDeadTime > 0)
                                    1- 2644     	BANKSEL	_ledDeadTime
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 01rr                      1- 2645     	MOVR	_ledDeadTime,W
     0058 0D03                      1- 2646     	BTRSC	STATUS,2
     0059 3rrr                      1- 2647     	LGOTO	_00320_DS_
                                    1- 2648     	.line	350, "main.c"; 	tempshiweiNum = 11;
     005A 210B                      1- 2649     	MOVIA	0x0b
                                    1- 2650     	BANKSEL	_tempshiweiNum
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 00rr                      1- 2651     	MOVAR	_tempshiweiNum
                                    1- 2652     	.line	351, "main.c"; 	tempgeweiNum = 12;
     005D 210C                      1- 2653     	MOVIA	0x0c
                                    1- 2654     	BANKSEL	_tempgeweiNum
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 00rr                      1- 2655     	MOVAR	_tempgeweiNum
     0060                           1- 2656     _00320_DS_:
                                    1- 2657     	.line	354, "main.c"; 	showNubShiwei(numArray[tempshiweiNum]);
                                    1- 2658     	BANKSEL	_tempshiweiNum
     0060 rrrr                      3-   71 m1      .banksel ram_address
     0061 01rr                      1- 2659     	MOVR	_tempshiweiNum,W
     0062 25rr                      1- 2660     	ADDIA	(_numArray + 0)
                                    1- 2661     	BANKSEL	r0x105E
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 00rr                      1- 2662     	MOVAR	r0x105E
     0065 21rr                      1- 2663     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0066 0C03                      1- 2664     	BTRSC	STATUS,0
     0067 2501                      1- 2665     	ADDIA	0x01
                                    1- 2666     	BANKSEL	r0x105F
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 00rr                      1- 2667     	MOVAR	r0x105F
                                    1- 2668     	BANKSEL	r0x105E
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 01rr                      1- 2669     	MOVR	r0x105E,W
     006C 00rr                      1- 2670     	MOVAR	STK01
                                    1- 2671     	BANKSEL	r0x105F
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 01rr                      1- 2672     	MOVR	r0x105F,W
     006F 00rr                      1- 2673     	MOVAR	STK00
     0070 2100                      1- 2674     	MOVIA	0x00
     0071 2rrr                      1- 2675     	LCALL	__gptrget1
                                    1- 2676     ;;100	MOVAR	r0x1060
     0072 2rrr                      1- 2677     	LCALL	_showNubShiwei
                                    1- 2678     	.line	355, "main.c"; 	showNubGewei(numArray[tempgeweiNum]);
                                    1- 2679     	BANKSEL	_tempgeweiNum
     0073 rrrr                      3-   71 m1      .banksel ram_address
     0074 01rr                      1- 2680     	MOVR	_tempgeweiNum,W
     0075 25rr                      1- 2681     	ADDIA	(_numArray + 0)
                                    1- 2682     	BANKSEL	r0x105E
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 00rr                      1- 2683     	MOVAR	r0x105E
     0078 21rr                      1- 2684     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0079 0C03                      1- 2685     	BTRSC	STATUS,0
     007A 2501                      1- 2686     	ADDIA	0x01
                                    1- 2687     	BANKSEL	r0x105F
     007B rrrr                      3-   71 m1      .banksel ram_address
     007C 00rr                      1- 2688     	MOVAR	r0x105F
                                    1- 2689     	BANKSEL	r0x105E
     007D rrrr                      3-   71 m1      .banksel ram_address
     007E 01rr                      1- 2690     	MOVR	r0x105E,W
     007F 00rr                      1- 2691     	MOVAR	STK01
                                    1- 2692     	BANKSEL	r0x105F
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 01rr                      1- 2693     	MOVR	r0x105F,W
     0082 00rr                      1- 2694     	MOVAR	STK00
     0083 2100                      1- 2695     	MOVIA	0x00
     0084 2rrr                      1- 2696     	LCALL	__gptrget1
                                    1- 2697     ;;99	MOVAR	r0x1060
     0085 2rrr                      1- 2698     	LCALL	_showNubGewei
     0086                           1- 2699     _00321_DS_:
                                    1- 2700     	.line	356, "main.c"; 	}
                                    1- 2701     	RETURN	
     0086 0010                      3-   26 m1      ret
                                    1- 2702     ; exit point of _refreshNub
                                    1- 2704     ;***
                                    1- 2705     ;  pBlock Stats: dbName = C
                                    1- 2706     ;***
                                    1- 2707     ;has an exit
                                    1- 2708     ;functions called:
                                    1- 2709     ;   _pwmStop
                                    1- 2710     ;   _pwm1Stop
                                    1- 2711     ;   __divuchar
                                    1- 2712     ;   __moduchar
                                    1- 2713     ;   _pwm1Init
                                    1- 2714     ;   _pwm1Stop
                                    1- 2715     ;   __divuchar
                                    1- 2716     ;   __moduchar
                                    1- 2717     ;   _pwmStop
                                    1- 2718     ;   _pwm1Stop
                                    1- 2719     ;   __divuchar
                                    1- 2720     ;   __moduchar
                                    1- 2721     ;   _pwm1Init
                                    1- 2722     ;   _pwm1Stop
                                    1- 2723     ;   __divuchar
                                    1- 2724     ;   __moduchar
                                    1- 2725     ;2 compiler assigned registers:
                                    1- 2726     ;   r0x1061
                                    1- 2727     ;   STK00
                                    1- 2728     ;; Starting pCode block
                                    1- 2729     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2731     _chrgCtr:
                                    1- 2732     ; 2 exit points
                                    1- 2733     	.line	210, "main.c"; 	if(0x08 & PORTA)
                                    1- 2734     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 09rr                      1- 2735     	BTRSS	_PORTA,3
     0002 3rrr                      1- 2736     	LGOTO	_00296_DS_
                                    1- 2737     	.line	213, "main.c"; 	chrgFlag = 1;
                                    1- 2738     	BANKSEL	_Status
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 19rr                      1- 2739     	BSR	_Status,3
                                    1- 2740     	.line	214, "main.c"; 	showFlag = 1;
     0005 2101                      1- 2741     	MOVIA	0x01
                                    1- 2742     	BANKSEL	_showFlag
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1- 2743     	MOVAR	_showFlag
                                    1- 2744     	.line	215, "main.c"; 	workStep = 0;
                                    1- 2745     	BANKSEL	_workStep
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1- 2746     	CLRR	_workStep
                                    1- 2747     	.line	216, "main.c"; 	ledLightTime = 0;
                                    1- 2748     	BANKSEL	_ledLightTime
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 02rr                      1- 2749     	CLRR	_ledLightTime
                                    1- 2750     	.line	217, "main.c"; 	pwmStop();
     000C 2rrr                      1- 2751     	LCALL	_pwmStop
                                    1- 2752     	.line	219, "main.c"; 	if(batValue == 100)
                                    1- 2753     	BANKSEL	_batValue
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 01rr                      1- 2754     	MOVR	_batValue,W
     000F 2464                      1- 2755     	XORIA	0x64
     0010 0903                      1- 2756     	BTRSS	STATUS,2
     0011 3rrr                      1- 2757     	LGOTO	_00282_DS_
                                    1- 2758     	.line	221, "main.c"; 	chrgStep = 4;
     0012 2104                      1- 2759     	MOVIA	0x04
                                    1- 2760     	BANKSEL	_chrgStep
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 00rr                      1- 2761     	MOVAR	_chrgStep
                                    1- 2762     	.line	222, "main.c"; 	shiweiNum = 9;
     0015 2109                      1- 2763     	MOVIA	0x09
                                    1- 2764     	BANKSEL	_shiweiNum
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 00rr                      1- 2765     	MOVAR	_shiweiNum
                                    1- 2766     	.line	223, "main.c"; 	geweiNum = 9;
                                    1- 2767     	BANKSEL	_geweiNum
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 00rr                      1- 2768     	MOVAR	_geweiNum
                                    1- 2769     	.line	225, "main.c"; 	pwm1Stop();
     001A 2rrr                      1- 2770     	LCALL	_pwm1Stop
                                    1- 2771     	.line	227, "main.c"; 	PORTB &= 0xF7;
     001B 1Drr                      1- 2772     	BCR	_PORTB,3
                                    1- 2773     	.line	228, "main.c"; 	IOSTB |= 0X08;
     001C 001r                      1- 2774     	IOSTR	_IOSTB
                                    1- 2775     	BANKSEL	r0x1061
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 2776     	MOVAR	r0x1061
     001F 19rr                      1- 2777     	BSR	r0x1061,3
     0020 01rr                      1- 2778     	MOVR	r0x1061,W
     0021 000r                      1- 2779     	IOST	_IOSTB
     0022 3rrr                      1- 2780     	LGOTO	_00298_DS_
     0023                           1- 2781     _00282_DS_:
                                    1- 2782     	.line	232, "main.c"; 	IOSTB &= 0xF7;
     0023 001r                      1- 2783     	IOSTR	_IOSTB
                                    1- 2784     	BANKSEL	r0x1061
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 00rr                      1- 2785     	MOVAR	r0x1061
     0026 1Drr                      1- 2786     	BCR	r0x1061,3
     0027 01rr                      1- 2787     	MOVR	r0x1061,W
     0028 000r                      1- 2788     	IOST	_IOSTB
                                    1- 2789     	.line	233, "main.c"; 	if(batValue >= preBatValue)
                                    1- 2790     	BANKSEL	_preBatValue
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 01rr                      1- 2791     	MOVR	_preBatValue,W
                                    1- 2792     	BANKSEL	_batValue
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 04rr                      1- 2793     	SUBAR	_batValue,W
     002D 0803                      1- 2794     	BTRSS	STATUS,0
     002E 3rrr                      1- 2795     	LGOTO	_00267_DS_
                                    1- 2796     	.line	235, "main.c"; 	if(count1s == 10)
                                    1- 2797     	BANKSEL	_count1s
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 2798     	MOVR	_count1s,W
     0031 240A                      1- 2799     	XORIA	0x0a
     0032 0903                      1- 2800     	BTRSS	STATUS,2
     0033 3rrr                      1- 2801     	LGOTO	_00267_DS_
                                    1- 2802     	.line	237, "main.c"; 	shiweiNum = preBatValue/10;
     0034 210A                      1- 2803     	MOVIA	0x0a
     0035 00rr                      1- 2804     	MOVAR	STK00
                                    1- 2805     	BANKSEL	_preBatValue
     0036 rrrr                      3-   71 m1      .banksel ram_address
     0037 01rr                      1- 2806     	MOVR	_preBatValue,W
     0038 2rrr                      1- 2807     	LCALL	__divuchar
                                    1- 2808     	BANKSEL	_shiweiNum
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 00rr                      1- 2809     	MOVAR	_shiweiNum
                                    1- 2810     	.line	238, "main.c"; 	geweiNum = preBatValue%10;
     003B 210A                      1- 2811     	MOVIA	0x0a
     003C 00rr                      1- 2812     	MOVAR	STK00
                                    1- 2813     	BANKSEL	_preBatValue
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 01rr                      1- 2814     	MOVR	_preBatValue,W
     003F 2rrr                      1- 2815     	LCALL	__moduchar
                                    1- 2816     	BANKSEL	_geweiNum
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 00rr                      1- 2817     	MOVAR	_geweiNum
                                    1- 2818     	.line	239, "main.c"; 	preBatValue = preBatValue+1;
                                    1- 2819     	BANKSEL	_preBatValue
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 05rr                      1- 2820     	INCR	_preBatValue,F
                                    1- 2821     ;;unsigned compare: left < lit (0x2=2), size=1
     0044                           1- 2822     _00267_DS_:
                                    1- 2823     	.line	242, "main.c"; 	if(shiweiNum < 2)
     0044 2102                      1- 2824     	MOVIA	0x02
                                    1- 2825     	BANKSEL	_shiweiNum
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 04rr                      1- 2826     	SUBAR	_shiweiNum,W
     0047 0C03                      1- 2827     	BTRSC	STATUS,0
     0048 3rrr                      1- 2828     	LGOTO	_00279_DS_
                                    1- 2829     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2830     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 2831     	.line	244, "main.c"; 	if(chrgStep <= 1)
     0049 2102                      1- 2832     	MOVIA	0x02
                                    1- 2833     	BANKSEL	_chrgStep
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 04rr                      1- 2834     	SUBAR	_chrgStep,W
     004C 0C03                      1- 2835     	BTRSC	STATUS,0
     004D 3rrr                      1- 2836     	LGOTO	_00280_DS_
                                    1- 2837     	.line	246, "main.c"; 	PWM1DUTY = 8;
     004E 2108                      1- 2838     	MOVIA	0x08
     004F 00rr                      1- 2839     	SFUN	_PWM1DUTY
                                    1- 2840     	.line	247, "main.c"; 	chrgStep = 1;
     0050 2101                      1- 2841     	MOVIA	0x01
     0051 00rr                      1- 2842     	MOVAR	_chrgStep
     0052 3rrr                      1- 2843     	LGOTO	_00280_DS_
                                    1- 2844     ;;unsigned compare: left < lit (0x9=9), size=1
     0053                           1- 2845     _00279_DS_:
                                    1- 2846     	.line	250, "main.c"; 	else if(shiweiNum < 9 && geweiNum < 8)
     0053 2109                      1- 2847     	MOVIA	0x09
                                    1- 2848     	BANKSEL	_shiweiNum
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 04rr                      1- 2849     	SUBAR	_shiweiNum,W
     0056 0C03                      1- 2850     	BTRSC	STATUS,0
     0057 3rrr                      1- 2851     	LGOTO	_00275_DS_
                                    1- 2852     ;;unsigned compare: left < lit (0x8=8), size=1
     0058 2108                      1- 2853     	MOVIA	0x08
                                    1- 2854     	BANKSEL	_geweiNum
     0059 rrrr                      3-   71 m1      .banksel ram_address
     005A 04rr                      1- 2855     	SUBAR	_geweiNum,W
     005B 0C03                      1- 2856     	BTRSC	STATUS,0
     005C 3rrr                      1- 2857     	LGOTO	_00275_DS_
                                    1- 2858     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2859     ;;unsigned compare: left >= lit (0x3=3), size=1
                                    1- 2860     	.line	252, "main.c"; 	if(chrgStep <= 2)
     005D 2103                      1- 2861     	MOVIA	0x03
                                    1- 2862     	BANKSEL	_chrgStep
     005E rrrr                      3-   71 m1      .banksel ram_address
     005F 04rr                      1- 2863     	SUBAR	_chrgStep,W
     0060 0C03                      1- 2864     	BTRSC	STATUS,0
     0061 3rrr                      1- 2865     	LGOTO	_00280_DS_
                                    1- 2866     	.line	254, "main.c"; 	chrgStep = 2;
     0062 2102                      1- 2867     	MOVIA	0x02
     0063 00rr                      1- 2868     	MOVAR	_chrgStep
                                    1- 2869     	.line	255, "main.c"; 	PWM1DUTY = 13;
     0064 210D                      1- 2870     	MOVIA	0x0d
     0065 00rr                      1- 2871     	SFUN	_PWM1DUTY
     0066 3rrr                      1- 2872     	LGOTO	_00280_DS_
                                    1- 2873     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2874     ;;unsigned compare: left >= lit (0x4=4), size=1
     0067                           1- 2875     _00275_DS_:
                                    1- 2876     	.line	260, "main.c"; 	if(chrgStep <= 3)
     0067 2104                      1- 2877     	MOVIA	0x04
                                    1- 2878     	BANKSEL	_chrgStep
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 04rr                      1- 2879     	SUBAR	_chrgStep,W
     006A 0C03                      1- 2880     	BTRSC	STATUS,0
     006B 3rrr                      1- 2881     	LGOTO	_00280_DS_
                                    1- 2882     	.line	262, "main.c"; 	PWM1DUTY = 12;
     006C 210C                      1- 2883     	MOVIA	0x0c
     006D 00rr                      1- 2884     	SFUN	_PWM1DUTY
                                    1- 2885     	.line	263, "main.c"; 	chrgStep = 3;
     006E 2103                      1- 2886     	MOVIA	0x03
     006F 00rr                      1- 2887     	MOVAR	_chrgStep
     0070                           1- 2888     _00280_DS_:
                                    1- 2889     	.line	266, "main.c"; 	pwm1Init();
     0070 2rrr                      1- 2890     	LCALL	_pwm1Init
     0071 3rrr                      1- 2891     	LGOTO	_00298_DS_
     0072                           1- 2892     _00296_DS_:
                                    1- 2893     	.line	271, "main.c"; 	chrgStep = 0;
                                    1- 2894     	BANKSEL	_chrgStep
     0072 rrrr                      3-   71 m1      .banksel ram_address
     0073 02rr                      1- 2895     	CLRR	_chrgStep
                                    1- 2896     	.line	272, "main.c"; 	preBatValue = batValue;
                                    1- 2897     	BANKSEL	_batValue
     0074 rrrr                      3-   71 m1      .banksel ram_address
     0075 01rr                      1- 2898     	MOVR	_batValue,W
                                    1- 2899     	BANKSEL	_preBatValue
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 00rr                      1- 2900     	MOVAR	_preBatValue
                                    1- 2901     	.line	273, "main.c"; 	pwm1Stop();
     0078 2rrr                      1- 2902     	LCALL	_pwm1Stop
                                    1- 2903     	.line	274, "main.c"; 	chrgFlag = 0;
                                    1- 2904     	BANKSEL	_Status
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 1Drr                      1- 2905     	BCR	_Status,3
                                    1- 2906     	.line	276, "main.c"; 	if(workStep > 0)
                                    1- 2907     	BANKSEL	_workStep
     007B rrrr                      3-   71 m1      .banksel ram_address
     007C 01rr                      1- 2908     	MOVR	_workStep,W
     007D 0D03                      1- 2909     	BTRSC	STATUS,2
     007E 3rrr                      1- 2910     	LGOTO	_00293_DS_
                                    1- 2911     	.line	278, "main.c"; 	showFlag = 1;
     007F 2101                      1- 2912     	MOVIA	0x01
                                    1- 2913     	BANKSEL	_showFlag
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 00rr                      1- 2914     	MOVAR	_showFlag
                                    1- 2915     	.line	279, "main.c"; 	shiweiNum = 0;
                                    1- 2916     	BANKSEL	_shiweiNum
     0082 rrrr                      3-   71 m1      .banksel ram_address
     0083 02rr                      1- 2917     	CLRR	_shiweiNum
                                    1- 2918     	.line	280, "main.c"; 	geweiNum = workStep;
                                    1- 2919     	BANKSEL	_workStep
     0084 rrrr                      3-   71 m1      .banksel ram_address
     0085 01rr                      1- 2920     	MOVR	_workStep,W
                                    1- 2921     	BANKSEL	_geweiNum
     0086 rrrr                      3-   71 m1      .banksel ram_address
     0087 00rr                      1- 2922     	MOVAR	_geweiNum
     0088 3rrr                      1- 2923     	LGOTO	_00298_DS_
     0089                           1- 2924     _00293_DS_:
                                    1- 2925     	.line	284, "main.c"; 	if(batValue == 100)
                                    1- 2926     	BANKSEL	_batValue
     0089 rrrr                      3-   71 m1      .banksel ram_address
     008A 01rr                      1- 2927     	MOVR	_batValue,W
     008B 2464                      1- 2928     	XORIA	0x64
     008C 0903                      1- 2929     	BTRSS	STATUS,2
     008D 3rrr                      1- 2930     	LGOTO	_00290_DS_
                                    1- 2931     	.line	286, "main.c"; 	shiweiNum = 9;
     008E 2109                      1- 2932     	MOVIA	0x09
                                    1- 2933     	BANKSEL	_shiweiNum
     008F rrrr                      3-   71 m1      .banksel ram_address
     0090 00rr                      1- 2934     	MOVAR	_shiweiNum
                                    1- 2935     	.line	287, "main.c"; 	geweiNum = 9;
                                    1- 2936     	BANKSEL	_geweiNum
     0091 rrrr                      3-   71 m1      .banksel ram_address
     0092 00rr                      1- 2937     	MOVAR	_geweiNum
     0093 3rrr                      1- 2938     	LGOTO	_00298_DS_
     0094                           1- 2939     _00290_DS_:
                                    1- 2940     	.line	291, "main.c"; 	if(ledLightTime > 0)
                                    1- 2941     	BANKSEL	_ledLightTime
     0094 rrrr                      3-   71 m1      .banksel ram_address
     0095 01rr                      1- 2942     	MOVR	_ledLightTime,W
     0096 0D03                      1- 2943     	BTRSC	STATUS,2
     0097 3rrr                      1- 2944     	LGOTO	_00287_DS_
                                    1- 2945     	.line	293, "main.c"; 	if(lightBat < batValue)
                                    1- 2946     	BANKSEL	_batValue
     0098 rrrr                      3-   71 m1      .banksel ram_address
     0099 01rr                      1- 2947     	MOVR	_batValue,W
                                    1- 2948     	BANKSEL	_lightBat
     009A rrrr                      3-   71 m1      .banksel ram_address
     009B 04rr                      1- 2949     	SUBAR	_lightBat,W
     009C 0C03                      1- 2950     	BTRSC	STATUS,0
     009D 3rrr                      1- 2951     	LGOTO	_00285_DS_
                                    1- 2952     	.line	294, "main.c"; 	lightBat = batValue;
                                    1- 2953     	BANKSEL	_batValue
     009E rrrr                      3-   71 m1      .banksel ram_address
     009F 01rr                      1- 2954     	MOVR	_batValue,W
                                    1- 2955     	BANKSEL	_lightBat
     00A0 rrrr                      3-   71 m1      .banksel ram_address
     00A1 00rr                      1- 2956     	MOVAR	_lightBat
     00A2                           1- 2957     _00285_DS_:
                                    1- 2958     	.line	295, "main.c"; 	shiweiNum = lightBat/10;
     00A2 210A                      1- 2959     	MOVIA	0x0a
     00A3 00rr                      1- 2960     	MOVAR	STK00
                                    1- 2961     	BANKSEL	_lightBat
     00A4 rrrr                      3-   71 m1      .banksel ram_address
     00A5 01rr                      1- 2962     	MOVR	_lightBat,W
     00A6 2rrr                      1- 2963     	LCALL	__divuchar
                                    1- 2964     	BANKSEL	_shiweiNum
     00A7 rrrr                      3-   71 m1      .banksel ram_address
     00A8 00rr                      1- 2965     	MOVAR	_shiweiNum
                                    1- 2966     	.line	296, "main.c"; 	geweiNum = lightBat%10;
     00A9 210A                      1- 2967     	MOVIA	0x0a
     00AA 00rr                      1- 2968     	MOVAR	STK00
                                    1- 2969     	BANKSEL	_lightBat
     00AB rrrr                      3-   71 m1      .banksel ram_address
     00AC 01rr                      1- 2970     	MOVR	_lightBat,W
     00AD 2rrr                      1- 2971     	LCALL	__moduchar
                                    1- 2972     	BANKSEL	_geweiNum
     00AE rrrr                      3-   71 m1      .banksel ram_address
     00AF 00rr                      1- 2973     	MOVAR	_geweiNum
     00B0 3rrr                      1- 2974     	LGOTO	_00298_DS_
     00B1                           1- 2975     _00287_DS_:
                                    1- 2976     	.line	300, "main.c"; 	lightBat = batValue;
                                    1- 2977     	BANKSEL	_batValue
     00B1 rrrr                      3-   71 m1      .banksel ram_address
     00B2 01rr                      1- 2978     	MOVR	_batValue,W
                                    1- 2979     	BANKSEL	_lightBat
     00B3 rrrr                      3-   71 m1      .banksel ram_address
     00B4 00rr                      1- 2980     	MOVAR	_lightBat
     00B5                           1- 2981     _00298_DS_:
                                    1- 2982     	.line	305, "main.c"; 	}
                                    1- 2983     	RETURN	
     00B5 0010                      3-   26 m1      ret
                                    1- 2984     ; exit point of _chrgCtr
                                    1- 2987     ;	code size estimation:
                                    1- 2988     ;	 1131+  334 =  1465 instructions ( 3598 byte)
                                    1- 2990     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__divuchar              Label    00000000
__gptrget1              Label    00000000
__moduchar              Label    00000000
__mulchar               Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    00000022
_00002_DS_              Label    0000002E
_00003_DS_              Label    0000002E
_00004_DS_              Label    0000002E
_00005_DS_              Label    00000025
_00006_DS_              Label    00000029
_00007_DS_              Label    00000091
_00008_DS_              Label    000000BA
_00110_DS_              Label    0000002F
_00114_DS_              Label    00000043
_00121_DS_              Label    00000046
_00123_DS_              Label    0000004A
_00133_DS_              Label    0000001B
_00136_DS_              Label    00000024
_00139_DS_              Label    00000035
_00146_DS_              Label    00000058
_00147_DS_              Label    0000005B
_00150_DS_              Label    0000006A
_00158_DS_              Label    00000070
_00159_DS_              Label    00000079
_00163_DS_              Label    00000090
_00171_DS_              Label    00000002
_00255_DS_              Label    0000004C
_00259_DS_              Label    00000097
_00267_DS_              Label    00000044
_00275_DS_              Label    00000067
_00279_DS_              Label    00000053
_00280_DS_              Label    00000070
_00282_DS_              Label    00000023
_00285_DS_              Label    000000A2
_00287_DS_              Label    000000B1
_00290_DS_              Label    00000094
_00293_DS_              Label    00000089
_00296_DS_              Label    00000072
_00298_DS_              Label    000000B5
_00304_DS_              Label    0000000B
_00310_DS_              Label    00000033
_00312_DS_              Label    00000017
_00313_DS_              Label    0000004B
_00314_DS_              Label    0000004E
_00316_DS_              Label    00000055
_00320_DS_              Label    00000060
_00321_DS_              Label    00000086
_00344_DS_              Label    00000007
_00346_DS_              Label    00000025
_00347_DS_              Label    0000003D
_00353_DS_              Label    0000001E
_00355_DS_              Label    00000026
_00359_DS_              Label    00000053
_00362_DS_              Label    0000004A
_00365_DS_              Label    00000041
_00368_DS_              Label    00000038
_00371_DS_              Label    0000002F
_00372_DS_              Label    0000005B
_00376_DS_              Label    0000007A
_00378_DS_              Label    00000071
_00383_DS_              Label    00000064
_00385_DS_              Label    00000085
_00395_DS_              Label    0000000E
_00397_DS_              Label    0000001C
_00404_DS_              Label    0000000C
_00415_DS_              Label    0000000C
_00435_DS_              Label    0000001D
_00436_DS_              Label    00000025
_00438_DS_              Label    00000013
_00439_DS_              Label    00000027
_00440_DS_              Label    00000028
_00450_DS_              Label    0000003C
_00456_DS_              Label    0000004D
_00457_DS_              Label    00000065
_00459_DS_              Label    000000D0
_00462_DS_              Label    000000A1
_00465_DS_              Label    00000078
_00467_DS_              Label    000000E6
_00490_DS_              Label    00000043
_00491_DS_              Label    00000054
_00493_DS_              Label    00000072
_00494_DS_              Label    0000007F
_00495_DS_              Label    000000A8
_00501_DS_              Label    00000038
_00509_DS_              Label    0000007E
_00516_DS_              Label    000000A7
_00520_DS_              Label    0000008A
_00523_DS_              Label    00000061
_00526_DS_              Label    0000004F
_00529_DS_              Label    000000B4
_00571_DS_              Label    00000044
_00573_DS_              Label    00000056
_00575_DS_              Label    00000068
_00577_DS_              Label    00000095
_00579_DS_              Label    000000AE
_00586_DS_              Label    00000010
_00588_DS_              Label    00000031
_00595_DS_              Label    00000010
_00597_DS_              Label    00000031
_00604_DS_              Label    00000010
_00606_DS_              Label    00000031
_00611_DS_              Label    00000000
_00618_DS_              Label    0000000A
_00620_DS_              Label    00000023
_00629_DS_              Label    0000001A
_A2                     Label    00000000
_A3                     Label    00000000
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_B1                     Label    00000000
_B2                     Label    00000000
_B3                     Label    00000000
_batValue               Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_C1                     Label    00000000
_C2                     Label    00000000
_C3                     Label    00000000
_cDuty                  Label    00000000
_checkBatAD             Label    00000000
_checkInAD              Label    00000000
_checkOutA              Label    00000000
_chrgCtr                Label    00000000
_chrgStep               Label    00000000
_CMPCR                  Label    00000000
_count1s                Label    00000000
_count200ms             Label    00000000
_count500ms             Label    00000000
_count5S                Label    00000000
_count900s              Label    00000000
_currentDuty            Label    00000000
_D2                     Label    00000000
_D3                     Label    00000000
_debug                  Label    00000000
_delay                  Label    00000000
_delayms                Label    00000000
_E2                     Label    00000000
_E3                     Label    00000000
_F_AIN2_Convert         Label    00000000
_F_AIN3_Convert         Label    00000000
_F_AIN4_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_F2                     Label    00000000
_F3                     Label    00000000
_fgCtr                  Label    00000000
_FSR                    Label    00000000
_G2                     Label    00000000
_G3                     Label    00000000
_geweiNum               Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_initSys                Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyCtr                 Label    00000000
_keyRead                Label    00000000
_ledCtr                 Label    00000000
_LedCtr2                Label    00000000
_ledDeadTime            Label    00000000
_ledLightTime           Label    00000000
_lightBat               Label    00000000
_lowCount               Label    00000000
_main                   Label    00000000
_maxDuty                Label    00000000
_numArray               Label    00000000
_OSCCR                  Label    00000000
_overCount              Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_powerOff               Label    00000000
_preBatValue            Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_pwm1Init               Label    00000000
_pwm1Stop               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_pwmInit                Label    00000000
_pwmStop                Label    00000000
_pwStep                 Label    00000000
_R_AIN2_DATA            Label    00000000
_R_AIN2_DATA_LB         Label    00000000
_R_AIN3_DATA            Label    00000000
_R_AIN3_DATA_LB         Label    00000000
_R_AIN4_DATA            Label    00000000
_R_AIN4_DATA_LB         Label    00000000
_refreshCount           Label    00000000
_refreshNub             Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_setHightOutput         Label    00000000
_setInput               Label    00000000
_setlowOutput           Label    00000000
_setOutput              Label    00000000
_shiweiNum              Label    00000000
_showBaiwei             Label    00000000
_showFlag               Label    00000000
_showKeyLed             Label    00000000
_showNub                Label    00000000
_showNubGewei           Label    00000000
_showNubGewei2          Label    00000000
_showNubShiwei          Label    00000000
_showNubShiwei2         Label    00000000
_sleepTime              Label    00000000
_Status                 Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_tempDuty               Label    00000000
_tempgeweiNum           Label    00000000
_tempshiweiNum          Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    0000005B
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x103A                 Label    00000000
r0x103B                 Label    00000000
r0x103C                 Label    00000000
r0x103D                 Label    00000000
r0x103E                 Label    00000000
r0x103F                 Label    00000000
r0x1040                 Label    00000000
r0x1041                 Label    00000000
r0x1044                 Label    00000000
r0x1045                 Label    00000000
r0x1046                 Label    00000000
r0x1047                 Label    00000000
r0x104A                 Label    00000000
r0x104B                 Label    00000000
r0x104C                 Label    00000000
r0x104D                 Label    00000000
r0x1050                 Label    00000000
r0x1051                 Label    00000000
r0x1054                 Label    00000000
r0x1055                 Label    00000000
r0x1056                 Label    00000000
r0x1057                 Label    00000000
r0x1058                 Label    00000000
r0x1059                 Label    00000000
r0x105A                 Label    00000000
r0x105B                 Label    00000000
r0x105C                 Label    00000000
r0x105D                 Label    00000000
r0x105E                 Label    00000000
r0x105F                 Label    00000000
r0x1061                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
