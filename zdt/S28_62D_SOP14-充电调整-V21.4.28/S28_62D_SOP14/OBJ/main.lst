
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubGewei
                                    1-   20     	extern	_showNubGewei2
                                    1-   21     	extern	_showNubShiwei
                                    1-   22     	extern	_showNubShiwei2
                                    1-   23     	extern	_showKeyLed
                                    1-   24     	extern	_A2
                                    1-   25     	extern	_B2
                                    1-   26     	extern	_C2
                                    1-   27     	extern	_D2
                                    1-   28     	extern	_E2
                                    1-   29     	extern	_F2
                                    1-   30     	extern	_G2
                                    1-   31     	extern	_A3
                                    1-   32     	extern	_B3
                                    1-   33     	extern	_C3
                                    1-   34     	extern	_D3
                                    1-   35     	extern	_E3
                                    1-   36     	extern	_F3
                                    1-   37     	extern	_G3
                                    1-   38     	extern	_delayms
                                    1-   39     	extern	_delay
                                    1-   40     	extern	_LedCtr2
                                    1-   41     	extern	_checkInAD
                                    1-   42     	extern	_F_AIN3_Convert
                                    1-   43     	extern	_fgCtr
                                    1-   44     	extern	_ledCtr
                                    1-   45     	extern	_workCtr
                                    1-   46     	extern	__divuchar
                                    1-   47     	extern	__moduchar
                                    1-   48     	extern	_PORTAbits
                                    1-   49     	extern	_PORTBbits
                                    1-   50     	extern	_PCONbits
                                    1-   51     	extern	_BWUCONbits
                                    1-   52     	extern	_ABPLCONbits
                                    1-   53     	extern	_BPHCONbits
                                    1-   54     	extern	_INTEbits
                                    1-   55     	extern	_INTFbits
                                    1-   56     	extern	_ADMDbits
                                    1-   57     	extern	_ADRbits
                                    1-   58     	extern	_ADVREFHbits
                                    1-   59     	extern	_ADCRbits
                                    1-   60     	extern	_AWUCONbits
                                    1-   61     	extern	_PACONbits
                                    1-   62     	extern	_INTEDGbits
                                    1-   63     	extern	_ANAENbits
                                    1-   64     	extern	_RFCbits
                                    1-   65     	extern	_INTE2bits
                                    1-   66     	extern	_INDF
                                    1-   67     	extern	_TMR0
                                    1-   68     	extern	_PCL
                                    1-   69     	extern	_STATUS
                                    1-   70     	extern	_FSR
                                    1-   71     	extern	_PORTA
                                    1-   72     	extern	_PORTB
                                    1-   73     	extern	_PCON
                                    1-   74     	extern	_BWUCON
                                    1-   75     	extern	_PCHBUF
                                    1-   76     	extern	_ABPLCON
                                    1-   77     	extern	_BPHCON
                                    1-   78     	extern	_INTE
                                    1-   79     	extern	_INTF
                                    1-   80     	extern	_ADMD
                                    1-   81     	extern	_ADR
                                    1-   82     	extern	_ADD
                                    1-   83     	extern	_ADVREFH
                                    1-   84     	extern	_ADCR
                                    1-   85     	extern	_AWUCON
                                    1-   86     	extern	_PACON
                                    1-   87     	extern	_INTEDG
                                    1-   88     	extern	_TMRH
                                    1-   89     	extern	_ANAEN
                                    1-   90     	extern	_RFC
                                    1-   91     	extern	_TM3RH
                                    1-   92     	extern	_INTE2
                                    1-   93     	extern	_TMR1
                                    1-   94     	extern	_T1CR1
                                    1-   95     	extern	_T1CR2
                                    1-   96     	extern	_PWM1DUTY
                                    1-   97     	extern	_PS1CV
                                    1-   98     	extern	_BZ1CR
                                    1-   99     	extern	_IRCR
                                    1-  100     	extern	_TBHP
                                    1-  101     	extern	_TBHD
                                    1-  102     	extern	_TMR2
                                    1-  103     	extern	_T2CR1
                                    1-  104     	extern	_T2CR2
                                    1-  105     	extern	_PWM2DUTY
                                    1-  106     	extern	_PS2CV
                                    1-  107     	extern	_BZ2CR
                                    1-  108     	extern	_OSCCR
                                    1-  109     	extern	_TMR3
                                    1-  110     	extern	_T3CR1
                                    1-  111     	extern	_T3CR2
                                    1-  112     	extern	_PWM3DUTY
                                    1-  113     	extern	_PS3CV
                                    1-  114     	extern	_BZ3CR
                                    1-  115     	extern	_IOSTA
                                    1-  116     	extern	_IOSTB
                                    1-  117     	extern	_APHCON
                                    1-  118     	extern	_PS0CV
                                    1-  119     	extern	_BODCON
                                    1-  120     	extern	_CMPCR
                                    1-  121     	extern	_PCON1
                                    1-  122     	extern	_T0MD
                                    1-  123     	extern	___sdcc_saved_fsr
                                    1-  124     	extern	___sdcc_saved_stk00
                                    1-  125     	extern	___sdcc_saved_stk01
                                    1-  126     	extern	__gptrget1
                                    1-  127     	extern	__mulchar
                                    1-  128     	extern	__nyc_ny8_startup
                                    1-  129     ;--------------------------------------------------------
                                    1-  130     ; global declarations
                                    1-  131     ;--------------------------------------------------------
                                    1-  132     	extern	_F_wait_eoc
                                    1-  133     	extern	_F_AIN2_Convert
                                    1-  134     	extern	_F_AIN4_Convert
                                    1-  135     	extern	_checkOutA
                                    1-  136     	extern	_checkBatAD
                                    1-  137     	extern	_initAD
                                    1-  138     	extern	_keyRead
                                    1-  139     	extern	_gotoSleep
                                    1-  140     	extern	_pwmStop
                                    1-  141     	extern	_pwmInit
                                    1-  142     	extern	_pwm1Stop
                                    1-  143     	extern	_pwm1Init
                                    1-  144     	extern	_powerOff
                                    1-  145     	extern	_initSys
                                    1-  146     	extern	_keyCtr
                                    1-  147     	extern	_refreshNub
                                    1-  148     	extern	_chrgCtr
                                    1-  149     	extern	_isr
                                    1-  150     	extern	_main
                                    1-  151     	extern	_setMaxDuty
                                    1-  152     	extern	_debug
                                    1-  153     	extern	_Status
                                    1-  154     	extern	_R_AIN4_DATA
                                    1-  155     	extern	_R_AIN4_DATA_LB
                                    1-  156     	extern	_R_AIN2_DATA
                                    1-  157     	extern	_R_AIN2_DATA_LB
                                    1-  158     	extern	_intCount
                                    1-  159     	extern	_sleepTime
                                    1-  160     	extern	_count200ms
                                    1-  161     	extern	_count500ms
                                    1-  162     	extern	_count1s
                                    1-  163     	extern	_count5s
                                    1-  164     	extern	_count900s
                                    1-  165     	extern	_workStep
                                    1-  166     	extern	_keyCount
                                    1-  167     	extern	_pwStep
                                    1-  168     	extern	_ledLightTime
                                    1-  169     	extern	_maxDuty
                                    1-  170     	extern	_currentDuty
                                    1-  171     	extern	_overCount
                                    1-  172     	extern	_tempDuty
                                    1-  173     	extern	_count5S
                                    1-  174     	extern	_ledDeadTime
                                    1-  175     	extern	_countFull
                                    1-  176     	extern	_tempshiweiNum
                                    1-  177     	extern	_tempgeweiNum
                                    1-  178     	extern	_refreshCount
                                    1-  179     	extern	_shiweiNum
                                    1-  180     	extern	_geweiNum
                                    1-  181     	extern	_batValue
                                    1-  182     	extern	_cDuty
                                    1-  183     	extern	_preBatValue
                                    1-  184     	extern	_closeCount
                                    1-  185     	extern	_firstShowCount
                                    1-  186     	extern	_batCount
                                    1-  187     	extern	_chrgStep
                                    1-  188     	extern	_maxduty
                                    1-  189     	extern	_chrgFullFlag
                                    1-  190     	extern	_fullTime
                                    1-  191     	extern	_fullFlag
                                    1-  193     	extern PSAVE
                                    1-  194     	extern SSAVE
                                    1-  195     	extern WSAVE
                                    1-  196     	extern STK02
                                    1-  197     	extern STK01
                                    1-  198     	extern STK00
                                    1-  200     .segment "uninit", 0x20000040
 20000040                           1-  201     PSAVE:
                                    1-  202     	.res 1
 20000041                           1-  203     SSAVE:
                                    1-  204     	.res 1
 20000042                           1-  205     WSAVE:
                                    1-  206     	.res 1
 20000043                           1-  207     STK02:
                                    1-  208     	.res 1
 20000044                           1-  209     STK01:
                                    1-  210     	.res 1
 20000045                           1-  211     STK00:
                                    1-  212     	.res 1
                                    1-  214     ;--------------------------------------------------------
                                    1-  215     ; global definitions
                                    1-  216     ;--------------------------------------------------------
                                    1-  217     .segment "uninit"
     0000                           1-  218     _R_AIN4_DATA:
                                    1-  219     	.res	2
                                    1-  222     .segment "uninit"
     0000                           1-  223     _R_AIN4_DATA_LB:
                                    1-  224     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     _R_AIN2_DATA:
                                    1-  229     	.res	2
                                    1-  232     .segment "uninit"
     0000                           1-  233     _R_AIN2_DATA_LB:
                                    1-  234     	.res	1
                                    1-  237     ;--------------------------------------------------------
                                    1-  238     ; absolute symbol definitions
                                    1-  239     ;--------------------------------------------------------
                                    1-  240     ;--------------------------------------------------------
                                    1-  241     ; compiler-defined variables
                                    1-  242     ;--------------------------------------------------------
                                    1-  243     .segment "uninit"
     0000                           1-  244     r0x1058:
                                    1-  245     	.res	1
                                    1-  246     .segment "uninit"
     0000                           1-  247     r0x1059:
                                    1-  248     	.res	1
                                    1-  249     .segment "uninit"
     0000                           1-  250     r0x105A:
                                    1-  251     	.res	1
                                    1-  252     .segment "uninit"
     0000                           1-  253     r0x105C:
                                    1-  254     	.res	1
                                    1-  255     .segment "uninit"
     0000                           1-  256     r0x1055:
                                    1-  257     	.res	1
                                    1-  258     .segment "uninit"
     0000                           1-  259     r0x1056:
                                    1-  260     	.res	1
                                    1-  261     .segment "uninit"
     0000                           1-  262     r0x1052:
                                    1-  263     	.res	1
                                    1-  264     .segment "uninit"
     0000                           1-  265     r0x1054:
                                    1-  266     	.res	1
                                    1-  267     .segment "uninit"
     0000                           1-  268     r0x1051:
                                    1-  269     	.res	1
                                    1-  270     .segment "uninit"
     0000                           1-  271     r0x1050:
                                    1-  272     	.res	1
                                    1-  273     .segment "uninit"
     0000                           1-  274     r0x104F:
                                    1-  275     	.res	1
                                    1-  276     .segment "uninit"
     0000                           1-  277     r0x104A:
                                    1-  278     	.res	1
                                    1-  279     .segment "uninit"
     0000                           1-  280     r0x104B:
                                    1-  281     	.res	1
                                    1-  282     .segment "uninit"
     0000                           1-  283     r0x104C:
                                    1-  284     	.res	1
                                    1-  285     .segment "uninit"
     0000                           1-  286     r0x104D:
                                    1-  287     	.res	1
                                    1-  288     .segment "uninit"
     0000                           1-  289     r0x104E:
                                    1-  290     	.res	1
                                    1-  291     .segment "uninit"
     0000                           1-  292     r0x1046:
                                    1-  293     	.res	1
                                    1-  294     .segment "uninit"
     0000                           1-  295     r0x1047:
                                    1-  296     	.res	1
                                    1-  297     .segment "uninit"
     0000                           1-  298     r0x1048:
                                    1-  299     	.res	1
                                    1-  300     .segment "uninit"
     0000                           1-  301     r0x1049:
                                    1-  302     	.res	1
                                    1-  303     .segment "uninit"
     0000                           1-  304     r0x1040:
                                    1-  305     	.res	1
                                    1-  306     .segment "uninit"
     0000                           1-  307     r0x1041:
                                    1-  308     	.res	1
                                    1-  309     .segment "uninit"
     0000                           1-  310     r0x1042:
                                    1-  311     	.res	1
                                    1-  312     .segment "uninit"
     0000                           1-  313     r0x1045:
                                    1-  314     	.res	1
                                    1-  315     .segment "uninit"
     0000                           1-  316     r0x103A:
                                    1-  317     	.res	1
                                    1-  318     .segment "uninit"
     0000                           1-  319     r0x103B:
                                    1-  320     	.res	1
                                    1-  321     .segment "uninit"
     0000                           1-  322     r0x103C:
                                    1-  323     	.res	1
                                    1-  324     .segment "uninit"
     0000                           1-  325     r0x103F:
                                    1-  326     	.res	1
                                    1-  327     ;--------------------------------------------------------
                                    1-  328     ; initialized data
                                    1-  329     ;--------------------------------------------------------
                                    1-  331     .segment "idata"
     0000                           1-  332     _debug:
     0000 0000                      1-  333     	dw	0x00
                                    1-  337     .segment "idata"
     0000                           1-  338     _numArray:
     0000 003F                      1-  339     	dw	0x3f
     0001 0006                      1-  340     	dw	0x06
     0002 005B                      1-  341     	dw	0x5b
     0003 004F                      1-  342     	dw	0x4f
     0004 0066                      1-  343     	dw	0x66
     0005 006D                      1-  344     	dw	0x6d
     0006 007D                      1-  345     	dw	0x7d
     0007 0007                      1-  346     	dw	0x07
     0008 007F                      1-  347     	dw	0x7f
     0009 006F                      1-  348     	dw	0x6f
     000A 0071                      1-  349     	dw	0x71
     000B 0079                      1-  350     	dw	0x79
     000C 0050                      1-  351     	dw	0x50
                                    1-  355     .segment "idata"
     0000                           1-  356     _Status:
     0000 0000                      1-  357     	dw	0x00
                                    1-  361     .segment "idata"
     0000                           1-  362     _intCount:
     0000 0000                      1-  363     	dw	0x00
                                    1-  367     .segment "idata"
     0000                           1-  368     _sleepTime:
     0000 0000 0000                 1-  369     	dw	0x00, 0x00
                                    1-  373     .segment "idata"
     0000                           1-  374     _count200ms:
     0000 0000                      1-  375     	dw	0x00
                                    1-  379     .segment "idata"
     0000                           1-  380     _count500ms:
     0000 0000                      1-  381     	dw	0x00
                                    1-  385     .segment "idata"
     0000                           1-  386     _count1s:
     0000 0000                      1-  387     	dw	0x00
                                    1-  391     .segment "idata"
     0000                           1-  392     _count5s:
     0000 0000 0000                 1-  393     	dw	0x00, 0x00
                                    1-  397     .segment "idata"
     0000                           1-  398     _count900s:
     0000 0000 0000                 1-  399     	dw	0x00, 0x00
                                    1-  403     .segment "idata"
     0000                           1-  404     _workStep:
     0000 0000                      1-  405     	dw	0x00
                                    1-  409     .segment "idata"
     0000                           1-  410     _keyCount:
     0000 0000                      1-  411     	dw	0x00
                                    1-  415     .segment "idata"
     0000                           1-  416     _pwStep:
     0000 0000                      1-  417     	dw	0x00
                                    1-  421     .segment "idata"
     0000                           1-  422     _ledLightTime:
     0000 0000                      1-  423     	dw	0x00
                                    1-  427     .segment "idata"
     0000                           1-  428     _maxDuty:
     0000 0000                      1-  429     	dw	0x00
                                    1-  433     .segment "idata"
     0000                           1-  434     _currentDuty:
     0000 0000                      1-  435     	dw	0x00
                                    1-  439     .segment "idata"
     0000                           1-  440     _overCount:
     0000 0000                      1-  441     	dw	0x00
                                    1-  445     .segment "idata"
     0000                           1-  446     _tempDuty:
     0000 0000                      1-  447     	dw	0x00
                                    1-  451     .segment "idata"
     0000                           1-  452     _count5S:
     0000 0000 0000                 1-  453     	dw	0x00, 0x00
                                    1-  457     .segment "idata"
     0000                           1-  458     _ledDeadTime:
     0000 0000                      1-  459     	dw	0x00
                                    1-  463     .segment "idata"
     0000                           1-  464     _countFull:
     0000 0000 0000                 1-  465     	dw	0x00, 0x00
                                    1-  469     .segment "idata"
     0000                           1-  470     _tempshiweiNum:
     0000 0000                      1-  471     	dw	0x00
                                    1-  475     .segment "idata"
     0000                           1-  476     _tempgeweiNum:
     0000 0000                      1-  477     	dw	0x00
                                    1-  481     .segment "idata"
     0000                           1-  482     _refreshCount:
     0000 0000 0000                 1-  483     	dw	0x00, 0x00
                                    1-  487     .segment "idata"
     0000                           1-  488     _shiweiNum:
     0000 0000                      1-  489     	dw	0x00
                                    1-  493     .segment "idata"
     0000                           1-  494     _geweiNum:
     0000 0000                      1-  495     	dw	0x00
                                    1-  499     .segment "idata"
     0000                           1-  500     _batValue:
     0000 0000                      1-  501     	dw	0x00
                                    1-  505     .segment "idata"
     0000                           1-  506     _cDuty:
     0000 0000                      1-  507     	dw	0x00
                                    1-  511     .segment "idata"
     0000                           1-  512     _preBatValue:
     0000 0000                      1-  513     	dw	0x00
                                    1-  517     .segment "idata"
     0000                           1-  518     _closeCount:
     0000 0000 0000                 1-  519     	dw	0x00, 0x00
                                    1-  523     .segment "idata"
     0000                           1-  524     _firstShowCount:
     0000 0000                      1-  525     	dw	0x00
                                    1-  529     .segment "idata"
     0000                           1-  530     _batCount:
     0000 0000 0000                 1-  531     	dw	0x00, 0x00
                                    1-  535     .segment "idata"
     0000                           1-  536     _chrgStep:
     0000 0000                      1-  537     	dw	0x00
                                    1-  541     .segment "idata"
     0000                           1-  542     _maxduty:
     0000 0000                      1-  543     	dw	0x00
                                    1-  547     .segment "idata"
     0000                           1-  548     _chrgFullFlag:
     0000 0000                      1-  549     	dw	0x00
                                    1-  553     .segment "idata"
     0000                           1-  554     _fullTime:
     0000 0000                      1-  555     	dw	0x00
                                    1-  559     .segment "idata"
     0000                           1-  560     _fullFlag:
     0000 0000                      1-  561     	dw	0x00
                                    1-  564     ;--------------------------------------------------------
                                    1-  565     ; overlayable items in internal ram 
                                    1-  566     ;--------------------------------------------------------
                                    1-  567     ;	udata_ovr
                                    1-  568     ;--------------------------------------------------------
                                    1-  569     ; reset vector 
                                    1-  570     ;--------------------------------------------------------
                                    1-  571     ORG	0x0000
     0000 3rrr                      1-  572     	LGOTO	__nyc_ny8_startup
                                    1-  573     ;--------------------------------------------------------
                                    1-  574     ; interrupt and initialization code
                                    1-  575     ;--------------------------------------------------------
                                    1-  576     ORG 0x0008
                                    1-  577     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  579     .segment "code"
     0000                           1-  580     __sdcc_interrupt:
                                    1-  581     ;***
                                    1-  582     ;  pBlock Stats: dbName = I
                                    1-  583     ;***
                                    1-  584     ;2 compiler assigned registers:
                                    1-  585     ;   STK00
                                    1-  586     ;   STK01
                                    1-  587     ;; Starting pCode block
     0000                           1-  588     _isr:
                                    1-  589     ; 0 exit points
                                    1-  590     	.line	90, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  591     	MOVAR	WSAVE
     0001 1503                      1-  592     	SWAPR	STATUS,W
     0002 0283                      1-  593     	CLRR	STATUS
     0003 00rr                      1-  594     	MOVAR	SSAVE
     0004 010A                      1-  595     	MOVR	PCHBUF,W
     0005 028A                      1-  596     	CLRR	PCHBUF
     0006 00rr                      1-  597     	MOVAR	PSAVE
     0007 0104                      1-  598     	MOVR	FSR,W
                                    1-  599     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  600     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  601     	MOVR	STK00,W
                                    1-  602     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  603     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  604     	MOVR	STK01,W
                                    1-  605     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  606     	MOVAR	___sdcc_saved_stk01
                                    1-  607     	.line	92, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  608     	BTRSS	_INTFbits,0
                                    1-  609     	MGOTO	_00121_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  610     	.line	94, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  611     	MOVIA	0x37
     0013 03rr                      1-  612     	ADDAR	_TMR0,F
                                    1-  613     	.line	96, "main.c"; 	if(++intCount >= 100)
                                    1-  614     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  615     	INCR	_intCount,F
                                    1-  616     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  617     	MOVIA	0x64
     0017 04rr                      1-  618     	SUBAR	_intCount,W
     0018 0803                      1-  619     	BTRSS	STATUS,0
                                    1-  620     	MGOTO	_00121_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  621     	.line	98, "main.c"; 	IntFlag = 1;
                                    1-  622     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  623     	BSR	_Status,0
                                    1-  624     	.line	99, "main.c"; 	intCount = 0;
                                    1-  625     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  626     	CLRR	_intCount
                                    1-  627     	.line	101, "main.c"; 	if(++count200ms >= 20)
                                    1-  628     	BANKSEL	_count200ms
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 05rr                      1-  629     	INCR	_count200ms,F
                                    1-  630     ;;unsigned compare: left < lit (0x14=20), size=1
     0020 2114                      1-  631     	MOVIA	0x14
     0021 04rr                      1-  632     	SUBAR	_count200ms,W
     0022 0803                      1-  633     	BTRSS	STATUS,0
                                    1-  634     	MGOTO	_00108_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  635     	.line	103, "main.c"; 	count200ms = 0;
     0024 02rr                      1-  636     	CLRR	_count200ms
                                    1-  637     	.line	104, "main.c"; 	if(ledDeadTime > 0)
                                    1-  638     	BANKSEL	_ledDeadTime
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1-  639     	MOVR	_ledDeadTime,W
     0027 0903                      1-  640     	BTRSS	STATUS,2
                                    1-  641     	.line	105, "main.c"; 	--ledDeadTime;
     0028 06rr                      1-  642     	DECR	_ledDeadTime,F
     0029                           1-  643     _00108_DS_:
                                    1-  644     	.line	107, "main.c"; 	if(++count5s >= 500)
                                    1-  645     	BANKSEL	_count5s
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 05rr                      1-  646     	INCR	_count5s,F
     002B 0D03                      1-  647     	BTRSC	STATUS,2
     002C 05rr                      1-  648     	INCR	(_count5s + 1),F
                                    1-  649     ;;unsigned compare: left < lit (0x1F4=500), size=2
     002D 2101                      1-  650     	MOVIA	0x01
     002E 04rr                      1-  651     	SUBAR	(_count5s + 1),W
     002F 0903                      1-  652     	BTRSS	STATUS,2
                                    1-  653     	MGOTO	_00155_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031 21F4                      1-  654     	MOVIA	0xf4
     0032 04rr                      1-  655     	SUBAR	_count5s,W
     0033                           1-  656     _00155_DS_:
     0033 0803                      1-  657     	BTRSS	STATUS,0
                                    1-  658     	MGOTO	_00110_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  659     	.line	109, "main.c"; 	count5s = 0;
                                    1-  660     	BANKSEL	_count5s
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 02rr                      1-  661     	CLRR	_count5s
     0037 02rr                      1-  662     	CLRR	(_count5s + 1)
     0038                           1-  663     _00110_DS_:
                                    1-  664     	.line	111, "main.c"; 	if(++count1s >= 100)
                                    1-  665     	BANKSEL	_count1s
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 05rr                      1-  666     	INCR	_count1s,F
                                    1-  667     ;;unsigned compare: left < lit (0x64=100), size=1
     003A 2164                      1-  668     	MOVIA	0x64
     003B 04rr                      1-  669     	SUBAR	_count1s,W
     003C 0803                      1-  670     	BTRSS	STATUS,0
                                    1-  671     	MGOTO	_00121_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  672     	.line	113, "main.c"; 	count1s = 0;
     003E 02rr                      1-  673     	CLRR	_count1s
                                    1-  674     	.line	114, "main.c"; 	if(ledLightTime > 0)
                                    1-  675     	BANKSEL	_ledLightTime
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 01rr                      1-  676     	MOVR	_ledLightTime,W
     0041 0903                      1-  677     	BTRSS	STATUS,2
                                    1-  678     	.line	115, "main.c"; 	ledLightTime--;
     0042 06rr                      1-  679     	DECR	_ledLightTime,F
                                    1-  680     	.line	116, "main.c"; 	if(workStep)
                                    1-  681     	BANKSEL	_workStep
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1-  682     	MOVR	_workStep,W
     0045 0D03                      1-  683     	BTRSC	STATUS,2
                                    1-  684     	MGOTO	_00114_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  685     	.line	118, "main.c"; 	++count900s;
                                    1-  686     	BANKSEL	_count900s
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 05rr                      1-  687     	INCR	_count900s,F
     0049 0D03                      1-  688     	BTRSC	STATUS,2
     004A 05rr                      1-  689     	INCR	(_count900s + 1),F
                                    1-  690     	MGOTO	_00121_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C                           1-  691     _00114_DS_:
                                    1-  692     	.line	122, "main.c"; 	count900s = 0;
                                    1-  693     	BANKSEL	_count900s
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 02rr                      1-  694     	CLRR	_count900s
     004E 02rr                      1-  695     	CLRR	(_count900s + 1)
     004F                           1-  696     _00121_DS_:
                                    1-  697     	.line	131, "main.c"; 	if(INTFbits.PABIF)
     004F 08rr                      1-  698     	BTRSS	_INTFbits,1
                                    1-  699     	MGOTO	_00123_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  700     	.line	133, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0051 21FD                      1-  701     	MOVIA	0xfd
     0052 00rr                      1-  702     	MOVAR	_INTF
     0053                           1-  703     _00123_DS_:
                                    1-  704     	.line	136, "main.c"; 	INTF = 0;
     0053 02rr                      1-  705     	CLRR	_INTF
                                    1-  706     	.line	138, "main.c"; 	}
                                    1-  707     	BANKSEL	___sdcc_saved_stk01
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 01rr                      1-  708     	MOVR	___sdcc_saved_stk01,W
     0056 00rr                      1-  709     	MOVAR	STK01
                                    1-  710     	BANKSEL	___sdcc_saved_stk00
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 01rr                      1-  711     	MOVR	___sdcc_saved_stk00,W
     0059 00rr                      1-  712     	MOVAR	STK00
                                    1-  713     	BANKSEL	___sdcc_saved_fsr
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 01rr                      1-  714     	MOVR	___sdcc_saved_fsr,W
     005C 0084                      1-  715     	MOVAR	FSR
     005D 01rr                      1-  716     	MOVR	PSAVE,W
     005E 008A                      1-  717     	MOVAR	PCHBUF
     005F 0283                      1-  718     	CLRR	STATUS
     0060 15rr                      1-  719     	SWAPR	SSAVE,W
     0061 0083                      1-  720     	MOVAR	STATUS
     0062 15rr                      1-  721     	SWAPR	WSAVE,F
     0063 15rr                      1-  722     	SWAPR	WSAVE,W
     0064                           1-  723     END_OF_INTERRUPT:
     0064 0011                      1-  724     	RETIE	
                                    1-  726     ;--------------------------------------------------------
                                    1-  727     ; code
                                    1-  728     ;--------------------------------------------------------
                                    1-  729     ;***
                                    1-  730     ;  pBlock Stats: dbName = M
                                    1-  731     ;***
                                    1-  732     ;has an exit
                                    1-  733     ;functions called:
                                    1-  734     ;   _initSys
                                    1-  735     ;   _initAD
                                    1-  736     ;   _delayms
                                    1-  737     ;   _refreshNub
                                    1-  738     ;   _setInput
                                    1-  739     ;   _pwmStop
                                    1-  740     ;   _powerOff
                                    1-  741     ;   _checkBatAD
                                    1-  742     ;   _checkOutA
                                    1-  743     ;   _chrgCtr
                                    1-  744     ;   _keyCtr
                                    1-  745     ;   _gotoSleep
                                    1-  746     ;   _powerOff
                                    1-  747     ;   _initSys
                                    1-  748     ;   _initAD
                                    1-  749     ;   _delayms
                                    1-  750     ;   _refreshNub
                                    1-  751     ;   _setInput
                                    1-  752     ;   _pwmStop
                                    1-  753     ;   _powerOff
                                    1-  754     ;   _checkBatAD
                                    1-  755     ;   _checkOutA
                                    1-  756     ;   _chrgCtr
                                    1-  757     ;   _keyCtr
                                    1-  758     ;   _gotoSleep
                                    1-  759     ;   _powerOff
                                    1-  760     ;; Starting pCode block
                                    1-  761     .segment "code"; module=main, function=_main
     0000                           1-  763     _main:
                                    1-  764     ; 2 exit points
                                    1-  765     	.line	143, "main.c"; 	initSys();
                                    1-  766     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  767     	.line	144, "main.c"; 	initAD();
                                    1-  768     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  769     	.line	145, "main.c"; 	firstShowCount = 100;
     0002 2164                      1-  770     	MOVIA	0x64
                                    1-  771     	BANKSEL	_firstShowCount
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1-  772     	MOVAR	_firstShowCount
                                    1-  773     	.line	146, "main.c"; 	ledLightTime = showFlag = 1;
                                    1-  774     	BANKSEL	_Status
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 1Arr                      1-  775     	BSR	_Status,4
                                    1-  776     	BANKSEL	_ledLightTime
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1-  777     	CLRR	_ledLightTime
                                    1-  778     	BANKSEL	_Status
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 0Arr                      1-  779     	BTRSS	_Status,4
                                    1-  780     	MGOTO	_00010_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  781     	BANKSEL	_ledLightTime
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 05rr                      1-  782     	INCR	_ledLightTime,F
     000E                           1-  783     _00010_DS_:
                                    1-  784     	.line	147, "main.c"; 	tempshiweiNum = shiweiNum = 8;
     000E 2108                      1-  785     	MOVIA	0x08
                                    1-  786     	BANKSEL	_shiweiNum
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 00rr                      1-  787     	MOVAR	_shiweiNum
                                    1-  788     	BANKSEL	_tempshiweiNum
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1-  789     	MOVAR	_tempshiweiNum
                                    1-  790     	.line	148, "main.c"; 	tempgeweiNum = geweiNum = 8;
                                    1-  791     	BANKSEL	_geweiNum
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 00rr                      1-  792     	MOVAR	_geweiNum
     0015 2108                      1-  793     	MOVIA	0x08
                                    1-  794     	BANKSEL	_tempgeweiNum
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1-  795     	MOVAR	_tempgeweiNum
                                    1-  796     	.line	149, "main.c"; 	delayms(250);
     0018 21FA                      1-  797     	MOVIA	0xfa
                                    1-  798     	MCALL	_delayms
     0019 2rrr                      3-   66 m1      LCALL rom_address
     001A                           1-  799     _00212_DS_:
                                    1-  800     	.line	152, "main.c"; 	CLRWDT();
     001A 0002                      1-  801     	clrwdt
                                    1-  802     	.line	153, "main.c"; 	if(showFlag)
                                    1-  803     	BANKSEL	_Status
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 0Arr                      1-  804     	BTRSS	_Status,4
                                    1-  805     	MGOTO	_00161_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  806     	.line	154, "main.c"; 	refreshNub();
                                    1-  807     	MCALL	_refreshNub
     001E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  808     	MGOTO	_00162_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1-  809     _00161_DS_:
                                    1-  810     	.line	156, "main.c"; 	setInput();
                                    1-  811     	MCALL	_setInput
     0020 2rrr                      3-   66 m1      LCALL rom_address
     0021                           1-  812     _00162_DS_:
                                    1-  813     	.line	157, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  814     	BANKSEL	_workStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1-  815     	MOVR	_workStep,W
     0023 0D03                      1-  816     	BTRSC	STATUS,2
                                    1-  817     	MGOTO	_00172_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  818     	BANKSEL	_currentDuty
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1-  819     	MOVR	_currentDuty,W
                                    1-  820     	BANKSEL	_maxDuty
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 04rr                      1-  821     	SUBAR	_maxDuty,W
     0029 0C03                      1-  822     	BTRSC	STATUS,0
                                    1-  823     	MGOTO	_00172_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  824     	.line	159, "main.c"; 	currentDuty = currentDuty - 1;
                                    1-  825     	BANKSEL	_currentDuty
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 06rr                      1-  826     	DECR	_currentDuty,F
                                    1-  827     	.line	160, "main.c"; 	PWM2DUTY = currentDuty;
     002D 01rr                      1-  828     	MOVR	_currentDuty,W
     002E 00rr                      1-  829     	SFUN	_PWM2DUTY
                                    1-  830     	.line	161, "main.c"; 	cDuty = currentDuty;
     002F 01rr                      1-  831     	MOVR	_currentDuty,W
                                    1-  832     	BANKSEL	_cDuty
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 00rr                      1-  833     	MOVAR	_cDuty
                                    1-  834     	MGOTO	_00173_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033                           1-  835     _00172_DS_:
                                    1-  836     	.line	163, "main.c"; 	else if(workStep > 0 && tempDuty >= 40)
                                    1-  837     	BANKSEL	_workStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1-  838     	MOVR	_workStep,W
     0035 0D03                      1-  839     	BTRSC	STATUS,2
                                    1-  840     	MGOTO	_00173_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  841     ;;unsigned compare: left < lit (0x28=40), size=1
     0037 2128                      1-  842     	MOVIA	0x28
                                    1-  843     	BANKSEL	_tempDuty
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 04rr                      1-  844     	SUBAR	_tempDuty,W
     003A 0803                      1-  845     	BTRSS	STATUS,0
                                    1-  846     	MGOTO	_00173_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  847     	.line	165, "main.c"; 	if(cDuty > tempDuty)
                                    1-  848     	BANKSEL	_cDuty
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1-  849     	MOVR	_cDuty,W
                                    1-  850     	BANKSEL	_tempDuty
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 04rr                      1-  851     	SUBAR	_tempDuty,W
     0040 0C03                      1-  852     	BTRSC	STATUS,0
                                    1-  853     	MGOTO	_00166_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  854     	.line	167, "main.c"; 	cDuty--;
                                    1-  855     	BANKSEL	_cDuty
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 06rr                      1-  856     	DECR	_cDuty,F
                                    1-  857     	.line	168, "main.c"; 	PWM2DUTY = cDuty;
     0044 01rr                      1-  858     	MOVR	_cDuty,W
     0045 00rr                      1-  859     	SFUN	_PWM2DUTY
                                    1-  860     	MGOTO	_00173_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
     0047                           1-  861     _00166_DS_:
                                    1-  862     	.line	170, "main.c"; 	else if(cDuty < tempDuty)
                                    1-  863     	BANKSEL	_tempDuty
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 01rr                      1-  864     	MOVR	_tempDuty,W
                                    1-  865     	BANKSEL	_cDuty
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 04rr                      1-  866     	SUBAR	_cDuty,W
     004B 0C03                      1-  867     	BTRSC	STATUS,0
                                    1-  868     	MGOTO	_00173_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  869     	.line	172, "main.c"; 	cDuty++;
     004D 05rr                      1-  870     	INCR	_cDuty,F
                                    1-  871     	.line	173, "main.c"; 	PWM2DUTY = cDuty;
     004E 01rr                      1-  872     	MOVR	_cDuty,W
     004F 00rr                      1-  873     	SFUN	_PWM2DUTY
     0050                           1-  874     _00173_DS_:
                                    1-  875     	.line	177, "main.c"; 	if(!IntFlag)
                                    1-  876     	BANKSEL	_Status
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 08rr                      1-  877     	BTRSS	_Status,0
                                    1-  878     	MGOTO	_00212_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  879     	.line	179, "main.c"; 	IntFlag = 0;
     0053 1Crr                      1-  880     	BCR	_Status,0
                                    1-  881     	.line	180, "main.c"; 	if(firstShowCount > 0)
                                    1-  882     	BANKSEL	_firstShowCount
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 01rr                      1-  883     	MOVR	_firstShowCount,W
     0056 0D03                      1-  884     	BTRSC	STATUS,2
                                    1-  885     	MGOTO	_00178_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  886     	.line	182, "main.c"; 	firstShowCount--;
     0058 06rr                      1-  887     	DECR	_firstShowCount,F
                                    1-  888     	.line	183, "main.c"; 	preBatValue = batValue;
                                    1-  889     	BANKSEL	_batValue
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 01rr                      1-  890     	MOVR	_batValue,W
                                    1-  891     	BANKSEL	_preBatValue
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 00rr                      1-  892     	MOVAR	_preBatValue
                                    1-  893     ;;unsigned compare: left < lit (0x5=5), size=1
     005D                           1-  894     _00178_DS_:
                                    1-  895     	.line	186, "main.c"; 	if(batValue < 5 && workStep > 0)
     005D 2105                      1-  896     	MOVIA	0x05
                                    1-  897     	BANKSEL	_batValue
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 04rr                      1-  898     	SUBAR	_batValue,W
     0060 0C03                      1-  899     	BTRSC	STATUS,0
                                    1-  900     	MGOTO	_00182_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  901     	BANKSEL	_workStep
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 01rr                      1-  902     	MOVR	_workStep,W
     0064 0D03                      1-  903     	BTRSC	STATUS,2
                                    1-  904     	MGOTO	_00182_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  905     	.line	188, "main.c"; 	if(++closeCount >= 6000)
                                    1-  906     	BANKSEL	_closeCount
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 05rr                      1-  907     	INCR	_closeCount,F
     0068 0D03                      1-  908     	BTRSC	STATUS,2
     0069 05rr                      1-  909     	INCR	(_closeCount + 1),F
                                    1-  910     ;;unsigned compare: left < lit (0x1770=6000), size=2
     006A 2117                      1-  911     	MOVIA	0x17
     006B 04rr                      1-  912     	SUBAR	(_closeCount + 1),W
     006C 0903                      1-  913     	BTRSS	STATUS,2
                                    1-  914     	MGOTO	_00305_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
     006E 2170                      1-  915     	MOVIA	0x70
     006F 04rr                      1-  916     	SUBAR	_closeCount,W
     0070                           1-  917     _00305_DS_:
     0070 0803                      1-  918     	BTRSS	STATUS,0
                                    1-  919     	MGOTO	_00183_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  920     	.line	190, "main.c"; 	closeCount = 0;
                                    1-  921     	BANKSEL	_closeCount
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 02rr                      1-  922     	CLRR	_closeCount
     0074 02rr                      1-  923     	CLRR	(_closeCount + 1)
                                    1-  924     	.line	191, "main.c"; 	preBatValue = 0;
                                    1-  925     	BANKSEL	_preBatValue
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 02rr                      1-  926     	CLRR	_preBatValue
                                    1-  927     	.line	192, "main.c"; 	workStep = 0;
                                    1-  928     	BANKSEL	_workStep
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 02rr                      1-  929     	CLRR	_workStep
                                    1-  930     	.line	193, "main.c"; 	pwmStop();
                                    1-  931     	MCALL	_pwmStop
     0079 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  932     	MGOTO	_00183_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
     007B                           1-  933     _00182_DS_:
                                    1-  934     	.line	198, "main.c"; 	closeCount = 0;
                                    1-  935     	BANKSEL	_closeCount
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 02rr                      1-  936     	CLRR	_closeCount
     007D 02rr                      1-  937     	CLRR	(_closeCount + 1)
                                    1-  938     ;;unsigned compare: left < lit (0x5=5), size=1
     007E                           1-  939     _00183_DS_:
                                    1-  940     	.line	201, "main.c"; 	if(overCount >= 5 && workStep > 0)
     007E 2105                      1-  941     	MOVIA	0x05
                                    1-  942     	BANKSEL	_overCount
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 04rr                      1-  943     	SUBAR	_overCount,W
     0081 0803                      1-  944     	BTRSS	STATUS,0
                                    1-  945     	MGOTO	_00188_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  946     	BANKSEL	_workStep
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 01rr                      1-  947     	MOVR	_workStep,W
     0085 0D03                      1-  948     	BTRSC	STATUS,2
                                    1-  949     	MGOTO	_00188_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  950     	.line	203, "main.c"; 	if(++count5S > 250)
                                    1-  951     	BANKSEL	_count5S
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 05rr                      1-  952     	INCR	_count5S,F
     0089 0D03                      1-  953     	BTRSC	STATUS,2
     008A 05rr                      1-  954     	INCR	(_count5S + 1),F
                                    1-  955     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  956     ;;unsigned compare: left >= lit (0xFB=251), size=2
     008B 2100                      1-  957     	MOVIA	0x00
     008C 04rr                      1-  958     	SUBAR	(_count5S + 1),W
     008D 0903                      1-  959     	BTRSS	STATUS,2
                                    1-  960     	MGOTO	_00307_DS_
     008E 3rrr                      3-   63 m1      LGOTO rom_address
     008F 21FB                      1-  961     	MOVIA	0xfb
     0090 04rr                      1-  962     	SUBAR	_count5S,W
     0091                           1-  963     _00307_DS_:
     0091 0803                      1-  964     	BTRSS	STATUS,0
                                    1-  965     	MGOTO	_00189_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  966     	.line	205, "main.c"; 	overCount = 0;
                                    1-  967     	BANKSEL	_overCount
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 02rr                      1-  968     	CLRR	_overCount
                                    1-  969     	.line	206, "main.c"; 	count5S = 0;
                                    1-  970     	BANKSEL	_count5S
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 02rr                      1-  971     	CLRR	_count5S
     0097 02rr                      1-  972     	CLRR	(_count5S + 1)
                                    1-  973     	.line	207, "main.c"; 	ledDeadTime = 25;
     0098 2119                      1-  974     	MOVIA	0x19
                                    1-  975     	BANKSEL	_ledDeadTime
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 00rr                      1-  976     	MOVAR	_ledDeadTime
                                    1-  977     	.line	208, "main.c"; 	powerOff();
                                    1-  978     	MCALL	_powerOff
     009B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  979     	MGOTO	_00189_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
     009D                           1-  980     _00188_DS_:
                                    1-  981     	.line	213, "main.c"; 	count5S = 0;
                                    1-  982     	BANKSEL	_count5S
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 02rr                      1-  983     	CLRR	_count5S
     009F 02rr                      1-  984     	CLRR	(_count5S + 1)
                                    1-  985     ;;unsigned compare: left < lit (0x3=3), size=1
     00A0                           1-  986     _00189_DS_:
                                    1-  987     	.line	215, "main.c"; 	if(count200ms < 3 && R_AIN4_DATA < 40)
     00A0 2103                      1-  988     	MOVIA	0x03
                                    1-  989     	BANKSEL	_count200ms
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 04rr                      1-  990     	SUBAR	_count200ms,W
     00A3 0C03                      1-  991     	BTRSC	STATUS,0
                                    1-  992     	MGOTO	_00195_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  993     ;;unsigned compare: left < lit (0x28=40), size=2
     00A5 2100                      1-  994     	MOVIA	0x00
                                    1-  995     	BANKSEL	_R_AIN4_DATA
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 04rr                      1-  996     	SUBAR	(_R_AIN4_DATA + 1),W
     00A8 0903                      1-  997     	BTRSS	STATUS,2
                                    1-  998     	MGOTO	_00309_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
     00AA 2128                      1-  999     	MOVIA	0x28
     00AB 04rr                      1- 1000     	SUBAR	_R_AIN4_DATA,W
     00AC                           1- 1001     _00309_DS_:
     00AC 0C03                      1- 1002     	BTRSC	STATUS,0
                                    1- 1003     	MGOTO	_00195_DS_
     00AD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1004     	.line	217, "main.c"; 	checkBatAD();
                                    1- 1005     	MCALL	_checkBatAD
     00AE 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1006     	MGOTO	_00196_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1007     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1008     ;;unsigned compare: left >= lit (0x6=6), size=1
     00B0                           1- 1009     _00195_DS_:
                                    1- 1010     	.line	219, "main.c"; 	else if(count200ms > 5 && count200ms < 19)
     00B0 2106                      1- 1011     	MOVIA	0x06
                                    1- 1012     	BANKSEL	_count200ms
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 04rr                      1- 1013     	SUBAR	_count200ms,W
     00B3 0803                      1- 1014     	BTRSS	STATUS,0
                                    1- 1015     	MGOTO	_00196_DS_
     00B4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1016     ;;unsigned compare: left < lit (0x13=19), size=1
     00B5 2113                      1- 1017     	MOVIA	0x13
     00B6 04rr                      1- 1018     	SUBAR	_count200ms,W
     00B7 0803                      1- 1019     	BTRSS	STATUS,0
                                    1- 1020     	.line	221, "main.c"; 	checkOutA();
                                    1- 1021     	MCALL	_checkOutA
     00B8 2rrr                      3-   66 m1      LCALL rom_address
     00B9                           1- 1022     _00196_DS_:
                                    1- 1023     	.line	223, "main.c"; 	chrgCtr();
                                    1- 1024     	MCALL	_chrgCtr
     00B9 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1025     	.line	224, "main.c"; 	if(chrgFlag == 0)
                                    1- 1026     	BANKSEL	_Status
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 09rr                      1- 1027     	BTRSS	_Status,3
                                    1- 1028     	.line	225, "main.c"; 	keyCtr();
                                    1- 1029     	MCALL	_keyCtr
     00BC 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1030     	.line	226, "main.c"; 	if(workStep == 0 && keyCount == 0 && chrgFlag == 0 && ledLightTime == 0 && ledDeadTime == 0)
                                    1- 1031     	BANKSEL	_workStep
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 01rr                      1- 1032     	MOVR	_workStep,W
     00BF 0903                      1- 1033     	BTRSS	STATUS,2
                                    1- 1034     	MGOTO	_00203_DS_
     00C0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1035     	BANKSEL	_keyCount
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 01rr                      1- 1036     	MOVR	_keyCount,W
     00C3 0903                      1- 1037     	BTRSS	STATUS,2
                                    1- 1038     	MGOTO	_00203_DS_
     00C4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1039     	BANKSEL	_Status
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 0Drr                      1- 1040     	BTRSC	_Status,3
                                    1- 1041     	MGOTO	_00203_DS_
     00C7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1042     	BANKSEL	_ledLightTime
     00C8 rrrr                      3-  110 m1      .banksel ram_address
     00C9 01rr                      1- 1043     	MOVR	_ledLightTime,W
     00CA 0903                      1- 1044     	BTRSS	STATUS,2
                                    1- 1045     	MGOTO	_00203_DS_
     00CB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1046     	BANKSEL	_ledDeadTime
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 01rr                      1- 1047     	MOVR	_ledDeadTime,W
     00CE 0903                      1- 1048     	BTRSS	STATUS,2
                                    1- 1049     	MGOTO	_00203_DS_
     00CF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1050     	.line	228, "main.c"; 	showFlag = 0;
                                    1- 1051     	BANKSEL	_Status
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 1Err                      1- 1052     	BCR	_Status,4
                                    1- 1053     	.line	229, "main.c"; 	if(++sleepTime > 200)
                                    1- 1054     	BANKSEL	_sleepTime
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 05rr                      1- 1055     	INCR	_sleepTime,F
     00D4 0D03                      1- 1056     	BTRSC	STATUS,2
     00D5 05rr                      1- 1057     	INCR	(_sleepTime + 1),F
                                    1- 1058     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1059     ;;unsigned compare: left >= lit (0xC9=201), size=2
     00D6 2100                      1- 1060     	MOVIA	0x00
     00D7 04rr                      1- 1061     	SUBAR	(_sleepTime + 1),W
     00D8 0903                      1- 1062     	BTRSS	STATUS,2
                                    1- 1063     	MGOTO	_00312_DS_
     00D9 3rrr                      3-   63 m1      LGOTO rom_address
     00DA 21C9                      1- 1064     	MOVIA	0xc9
     00DB 04rr                      1- 1065     	SUBAR	_sleepTime,W
     00DC                           1- 1066     _00312_DS_:
     00DC 0803                      1- 1067     	BTRSS	STATUS,0
                                    1- 1068     	MGOTO	_00204_DS_
     00DD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1069     	.line	230, "main.c"; 	gotoSleep();
                                    1- 1070     	MCALL	_gotoSleep
     00DE 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1071     	MGOTO	_00204_DS_
     00DF 3rrr                      3-   63 m1      LGOTO rom_address
     00E0                           1- 1072     _00203_DS_:
                                    1- 1073     	.line	235, "main.c"; 	sleepTime = 0;
                                    1- 1074     	BANKSEL	_sleepTime
     00E0 rrrr                      3-  110 m1      .banksel ram_address
     00E1 02rr                      1- 1075     	CLRR	_sleepTime
     00E2 02rr                      1- 1076     	CLRR	(_sleepTime + 1)
                                    1- 1077     ;;unsigned compare: left < lit (0x384=900), size=2
     00E3                           1- 1078     _00204_DS_:
                                    1- 1079     	.line	238, "main.c"; 	if(count900s >= 900)
     00E3 2103                      1- 1080     	MOVIA	0x03
                                    1- 1081     	BANKSEL	_count900s
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 04rr                      1- 1082     	SUBAR	(_count900s + 1),W
     00E6 0903                      1- 1083     	BTRSS	STATUS,2
                                    1- 1084     	MGOTO	_00313_DS_
     00E7 3rrr                      3-   63 m1      LGOTO rom_address
     00E8 2184                      1- 1085     	MOVIA	0x84
     00E9 04rr                      1- 1086     	SUBAR	_count900s,W
     00EA                           1- 1087     _00313_DS_:
     00EA 0803                      1- 1088     	BTRSS	STATUS,0
                                    1- 1089     	MGOTO	_00212_DS_
     00EB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1090     	.line	240, "main.c"; 	powerOff();
                                    1- 1091     	MCALL	_powerOff
     00EC 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1092     	MGOTO	_00212_DS_
     00ED 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1093     	.line	243, "main.c"; 	}
                                    1- 1094     	RETURN	
     00EE 0010                      3-   40 m1      ret
                                    1- 1095     ; exit point of _main
                                    1- 1097     ;***
                                    1- 1098     ;  pBlock Stats: dbName = C
                                    1- 1099     ;***
                                    1- 1100     ;has an exit
                                    1- 1101     ;; Starting pCode block
                                    1- 1102     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1104     _F_wait_eoc:
                                    1- 1105     ; 2 exit points
     0000                           1- 1106     _00790_DS_:
                                    1- 1107     	.line	846, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1108     	BTRSS	_ADMDbits,5
                                    1- 1109     	MGOTO	_00790_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1110     	.line	848, "main.c"; 	}
                                    1- 1111     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1112     ; exit point of _F_wait_eoc
                                    1- 1114     ;***
                                    1- 1115     ;  pBlock Stats: dbName = C
                                    1- 1116     ;***
                                    1- 1117     ;has an exit
                                    1- 1118     ;functions called:
                                    1- 1119     ;   _delayms
                                    1- 1120     ;   _F_wait_eoc
                                    1- 1121     ;   _delayms
                                    1- 1122     ;   _F_wait_eoc
                                    1- 1123     ;6 compiler assigned registers:
                                    1- 1124     ;   r0x103A
                                    1- 1125     ;   r0x103B
                                    1- 1126     ;   r0x103C
                                    1- 1127     ;   r0x103D
                                    1- 1128     ;   r0x103E
                                    1- 1129     ;   r0x103F
                                    1- 1130     ;; Starting pCode block
                                    1- 1131     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1133     ;local variable name mapping:
     0000                           1- 1136     _F_AIN2_Convert:
                                    1- 1137     ; 2 exit points
                                    1- 1138     	.line	829, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1139     	BANKSEL	r0x103A
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1140     	MOVAR	r0x103A
                                    1- 1141     	.line	831, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1142     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1143     	CLRR	_R_AIN2_DATA_LB
                                    1- 1144     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1145     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1146     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1147     	.line	833, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1148     	MOVIA	0x92
     0008 00rr                      1- 1149     	MOVAR	_ADMD
                                    1- 1150     	.line	834, "main.c"; 	delayms(200);	
     0009 21C8                      1- 1151     	MOVIA	0xc8
                                    1- 1152     	MCALL	_delayms
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1153     	.line	835, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1154     	MOVIA	0x01
                                    1- 1155     	BANKSEL	r0x103B
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1156     	MOVAR	r0x103B
     000E                           1- 1157     _00783_DS_:
                                    1- 1158     	BANKSEL	r0x103B
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1159     	MOVR	r0x103B,W
                                    1- 1160     	BANKSEL	r0x103A
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1161     	SUBAR	r0x103A,W
     0012 0803                      1- 1162     	BTRSS	STATUS,0
                                    1- 1163     	MGOTO	_00785_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1164     	.line	837, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1165     	BSR	_ADMDbits,6
                                    1- 1166     	.line	838, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1167     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1168     	.line	839, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1169     	MOVIA	0x0f
     0017 10rr                      1- 1170     	ANDAR	_ADR,W
                                    1- 1171     ;;3	MOVAR	r0x103C
                                    1- 1172     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1173     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1174     	.line	840, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1- 1175     	MOVR	_ADD,W
                                    1- 1176     	BANKSEL	r0x103C
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1177     	MOVAR	r0x103C
                                    1- 1178     ;;1	CLRR	r0x103D
                                    1- 1179     ;;106	MOVR	r0x103C,W
                                    1- 1180     ;;104	MOVAR	r0x103E
     001D 2100                      1- 1181     	MOVIA	0x00
                                    1- 1182     	BANKSEL	r0x103F
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1183     	MOVAR	r0x103F
                                    1- 1184     ;;105	MOVR	r0x103E,W
                                    1- 1185     	BANKSEL	r0x103C
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1186     	MOVR	r0x103C,W
                                    1- 1187     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1188     	ADDAR	_R_AIN2_DATA,F
                                    1- 1189     	BANKSEL	r0x103F
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1190     	MOVR	r0x103F,W
     0026 0C03                      1- 1191     	BTRSC	STATUS,0
     0027 05rr                      1- 1192     	INCR	r0x103F,W
     0028 0D03                      1- 1193     	BTRSC	STATUS,2
                                    1- 1194     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1195     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1196     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1- 1197     _00001_DS_:
                                    1- 1198     	.line	835, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1199     	BANKSEL	r0x103B
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1200     	INCR	r0x103B,F
                                    1- 1201     	MGOTO	_00783_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1202     _00785_DS_:
                                    1- 1203     	.line	842, "main.c"; 	}
                                    1- 1204     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1205     ; exit point of _F_AIN2_Convert
                                    1- 1207     ;***
                                    1- 1208     ;  pBlock Stats: dbName = C
                                    1- 1209     ;***
                                    1- 1210     ;has an exit
                                    1- 1211     ;functions called:
                                    1- 1212     ;   _delayms
                                    1- 1213     ;   _F_wait_eoc
                                    1- 1214     ;   _delayms
                                    1- 1215     ;   _F_wait_eoc
                                    1- 1216     ;6 compiler assigned registers:
                                    1- 1217     ;   r0x1040
                                    1- 1218     ;   r0x1041
                                    1- 1219     ;   r0x1042
                                    1- 1220     ;   r0x1043
                                    1- 1221     ;   r0x1044
                                    1- 1222     ;   r0x1045
                                    1- 1223     ;; Starting pCode block
                                    1- 1224     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1226     ;local variable name mapping:
     0000                           1- 1229     _F_AIN4_Convert:
                                    1- 1230     ; 2 exit points
                                    1- 1231     	.line	814, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1232     	BANKSEL	r0x1040
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1233     	MOVAR	r0x1040
                                    1- 1234     	.line	816, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1235     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1236     	CLRR	_R_AIN4_DATA_LB
                                    1- 1237     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1238     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1239     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1240     	.line	818, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1241     	MOVIA	0x94
     0008 00rr                      1- 1242     	MOVAR	_ADMD
                                    1- 1243     	.line	819, "main.c"; 	delayms(200);	
     0009 21C8                      1- 1244     	MOVIA	0xc8
                                    1- 1245     	MCALL	_delayms
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1246     	.line	820, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1247     	MOVIA	0x01
                                    1- 1248     	BANKSEL	r0x1041
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1249     	MOVAR	r0x1041
     000E                           1- 1250     _00774_DS_:
                                    1- 1251     	BANKSEL	r0x1041
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1252     	MOVR	r0x1041,W
                                    1- 1253     	BANKSEL	r0x1040
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1254     	SUBAR	r0x1040,W
     0012 0803                      1- 1255     	BTRSS	STATUS,0
                                    1- 1256     	MGOTO	_00776_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1257     	.line	822, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1258     	BSR	_ADMDbits,6
                                    1- 1259     	.line	823, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1260     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1261     	.line	824, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1262     	MOVIA	0x0f
     0017 10rr                      1- 1263     	ANDAR	_ADR,W
                                    1- 1264     ;;3	MOVAR	r0x1042
                                    1- 1265     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1266     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1267     	.line	825, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1268     	MOVR	_ADD,W
                                    1- 1269     	BANKSEL	r0x1042
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1270     	MOVAR	r0x1042
                                    1- 1271     ;;1	CLRR	r0x1043
                                    1- 1272     ;;103	MOVR	r0x1042,W
                                    1- 1273     ;;101	MOVAR	r0x1044
     001D 2100                      1- 1274     	MOVIA	0x00
                                    1- 1275     	BANKSEL	r0x1045
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1276     	MOVAR	r0x1045
                                    1- 1277     ;;102	MOVR	r0x1044,W
                                    1- 1278     	BANKSEL	r0x1042
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1279     	MOVR	r0x1042,W
                                    1- 1280     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1281     	ADDAR	_R_AIN4_DATA,F
                                    1- 1282     	BANKSEL	r0x1045
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1283     	MOVR	r0x1045,W
     0026 0C03                      1- 1284     	BTRSC	STATUS,0
     0027 05rr                      1- 1285     	INCR	r0x1045,W
     0028 0D03                      1- 1286     	BTRSC	STATUS,2
                                    1- 1287     	MGOTO	_00002_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1288     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1289     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1290     _00002_DS_:
                                    1- 1291     	.line	820, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1292     	BANKSEL	r0x1041
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1293     	INCR	r0x1041,F
                                    1- 1294     	MGOTO	_00774_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1295     _00776_DS_:
                                    1- 1296     	.line	827, "main.c"; 	}
                                    1- 1297     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1298     ; exit point of _F_AIN4_Convert
                                    1- 1300     ;***
                                    1- 1301     ;  pBlock Stats: dbName = C
                                    1- 1302     ;***
                                    1- 1303     ;has an exit
                                    1- 1304     ;functions called:
                                    1- 1305     ;   _F_AIN4_Convert
                                    1- 1306     ;   __mulchar
                                    1- 1307     ;   __mulchar
                                    1- 1308     ;   _F_AIN4_Convert
                                    1- 1309     ;   __mulchar
                                    1- 1310     ;   __mulchar
                                    1- 1311     ;5 compiler assigned registers:
                                    1- 1312     ;   r0x1046
                                    1- 1313     ;   r0x1047
                                    1- 1314     ;   r0x1048
                                    1- 1315     ;   r0x1049
                                    1- 1316     ;   STK00
                                    1- 1317     ;; Starting pCode block
                                    1- 1318     .segment "code"; module=main, function=_checkOutA
                                    1- 1320     ;local variable name mapping:
     0000                           1- 1322     _checkOutA:
                                    1- 1323     ; 2 exit points
                                    1- 1324     	.line	732, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1325     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1326     	CLRR	_R_AIN4_DATA_LB
                                    1- 1327     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1328     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1329     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1330     	.line	733, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1331     	MOVIA	0x08
                                    1- 1332     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1333     	.line	734, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1334     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1335     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1336     	ANDIA	0xf0
     000A 00rr                      1- 1337     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1338     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1339     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1340     	ANDIA	0x0f
     000E 11rr                      1- 1341     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1342     	XORAR	_R_AIN4_DATA,F
                                    1- 1343     	.line	735, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1344     	MOVIA	0xf0
                                    1- 1345     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1346     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1347     	.line	736, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1348     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1349     	BANKSEL	r0x1048
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1350     	MOVAR	r0x1048
                                    1- 1351     	BANKSEL	r0x1046
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1352     	MOVAR	r0x1046
                                    1- 1353     	BANKSEL	r0x1047
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1354     	CLRR	r0x1047
                                    1- 1355     ;;108	MOVR	r0x1046,W
     001A 2100                      1- 1356     	MOVIA	0x00
                                    1- 1357     	BANKSEL	r0x1049
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1358     	MOVAR	r0x1049
                                    1- 1359     	BANKSEL	r0x1048
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1360     	MOVR	r0x1048,W
                                    1- 1361     	BANKSEL	_R_AIN4_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1362     	ADDAR	_R_AIN4_DATA,F
                                    1- 1363     	BANKSEL	r0x1049
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1364     	MOVR	r0x1049,W
     0023 0C03                      1- 1365     	BTRSC	STATUS,0
     0024 05rr                      1- 1366     	INCR	r0x1049,W
     0025 0D03                      1- 1367     	BTRSC	STATUS,2
                                    1- 1368     	MGOTO	_00003_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1369     	BANKSEL	_R_AIN4_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1370     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1371     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1372     _00003_DS_:
                                    1- 1373     	.line	737, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0029 1C03                      1- 1374     	BCR	STATUS,0
                                    1- 1375     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1376     	RRR	(_R_AIN4_DATA + 1),F
     002C 13rr                      1- 1377     	RRR	_R_AIN4_DATA,F
                                    1- 1378     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1379     	BCR	STATUS,0
     002E 13rr                      1- 1380     	RRR	(_R_AIN4_DATA + 1),F
     002F 13rr                      1- 1381     	RRR	_R_AIN4_DATA,F
                                    1- 1382     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1383     	BCR	STATUS,0
     0031 13rr                      1- 1384     	RRR	(_R_AIN4_DATA + 1),F
     0032 13rr                      1- 1385     	RRR	_R_AIN4_DATA,F
                                    1- 1386     ;;unsigned compare: left < lit (0x6=6), size=1
                                    1- 1387     	.line	738, "main.c"; 	if(workStep < 6 && R_AIN4_DATA > 200)
     0033 2106                      1- 1388     	MOVIA	0x06
                                    1- 1389     	BANKSEL	_workStep
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 04rr                      1- 1390     	SUBAR	_workStep,W
     0036 0C03                      1- 1391     	BTRSC	STATUS,0
                                    1- 1392     	MGOTO	_00709_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1393     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1394     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0038 2100                      1- 1395     	MOVIA	0x00
                                    1- 1396     	BANKSEL	_R_AIN4_DATA
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1397     	SUBAR	(_R_AIN4_DATA + 1),W
     003B 0903                      1- 1398     	BTRSS	STATUS,2
                                    1- 1399     	MGOTO	_00760_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 21C9                      1- 1400     	MOVIA	0xc9
     003E 04rr                      1- 1401     	SUBAR	_R_AIN4_DATA,W
     003F                           1- 1402     _00760_DS_:
     003F 0803                      1- 1403     	BTRSS	STATUS,0
                                    1- 1404     	MGOTO	_00709_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1405     	.line	740, "main.c"; 	if(++overCount > 5)
                                    1- 1406     	BANKSEL	_overCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 05rr                      1- 1407     	INCR	_overCount,F
                                    1- 1408     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1409     ;;unsigned compare: left >= lit (0x6=6), size=1
     0043 2106                      1- 1410     	MOVIA	0x06
     0044 04rr                      1- 1411     	SUBAR	_overCount,W
     0045 0803                      1- 1412     	BTRSS	STATUS,0
                                    1- 1413     	MGOTO	_00712_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1414     	.line	742, "main.c"; 	overCount = 5;
     0047 2105                      1- 1415     	MOVIA	0x05
     0048 00rr                      1- 1416     	MOVAR	_overCount
                                    1- 1417     	MGOTO	_00712_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1418     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1419     ;;unsigned compare: left >= lit (0x191=401), size=2
     004A                           1- 1420     _00709_DS_:
                                    1- 1421     	.line	745, "main.c"; 	else if(R_AIN4_DATA > 400)
     004A 2101                      1- 1422     	MOVIA	0x01
                                    1- 1423     	BANKSEL	_R_AIN4_DATA
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 04rr                      1- 1424     	SUBAR	(_R_AIN4_DATA + 1),W
     004D 0903                      1- 1425     	BTRSS	STATUS,2
                                    1- 1426     	MGOTO	_00762_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
     004F 2191                      1- 1427     	MOVIA	0x91
     0050 04rr                      1- 1428     	SUBAR	_R_AIN4_DATA,W
     0051                           1- 1429     _00762_DS_:
     0051 0803                      1- 1430     	BTRSS	STATUS,0
                                    1- 1431     	MGOTO	_00706_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1432     	.line	747, "main.c"; 	if(++overCount > 5)
                                    1- 1433     	BANKSEL	_overCount
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 05rr                      1- 1434     	INCR	_overCount,F
                                    1- 1435     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1436     ;;unsigned compare: left >= lit (0x6=6), size=1
     0055 2106                      1- 1437     	MOVIA	0x06
     0056 04rr                      1- 1438     	SUBAR	_overCount,W
     0057 0803                      1- 1439     	BTRSS	STATUS,0
                                    1- 1440     	MGOTO	_00712_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1441     	.line	749, "main.c"; 	overCount = 5;
     0059 2105                      1- 1442     	MOVIA	0x05
     005A 00rr                      1- 1443     	MOVAR	_overCount
                                    1- 1444     	MGOTO	_00712_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1445     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1446     ;;unsigned compare: left >= lit (0x4E=78), size=2
     005C                           1- 1447     _00706_DS_:
                                    1- 1448     	.line	757, "main.c"; 	else if(R_AIN4_DATA > 77)
     005C 2100                      1- 1449     	MOVIA	0x00
                                    1- 1450     	BANKSEL	_R_AIN4_DATA
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 04rr                      1- 1451     	SUBAR	(_R_AIN4_DATA + 1),W
     005F 0903                      1- 1452     	BTRSS	STATUS,2
                                    1- 1453     	MGOTO	_00764_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
     0061 214E                      1- 1454     	MOVIA	0x4e
     0062 04rr                      1- 1455     	SUBAR	_R_AIN4_DATA,W
     0063                           1- 1456     _00764_DS_:
     0063 0803                      1- 1457     	BTRSS	STATUS,0
                                    1- 1458     	MGOTO	_00703_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1459     	.line	759, "main.c"; 	if(overCount > 0)
                                    1- 1460     	BANKSEL	_overCount
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 01rr                      1- 1461     	MOVR	_overCount,W
     0067 0903                      1- 1462     	BTRSS	STATUS,2
                                    1- 1463     	.line	761, "main.c"; 	overCount--;
     0068 06rr                      1- 1464     	DECR	_overCount,F
                                    1- 1465     	.line	764, "main.c"; 	tempDuty = 70 + workStep*5;
     0069 2105                      1- 1466     	MOVIA	0x05
     006A 00rr                      1- 1467     	MOVAR	STK00
                                    1- 1468     	BANKSEL	_workStep
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 01rr                      1- 1469     	MOVR	_workStep,W
                                    1- 1470     	MCALL	__mulchar
     006D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1471     	BANKSEL	r0x1046
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 00rr                      1- 1472     	MOVAR	r0x1046
     0070 2146                      1- 1473     	MOVIA	0x46
     0071 03rr                      1- 1474     	ADDAR	r0x1046,W
                                    1- 1475     	BANKSEL	_tempDuty
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 00rr                      1- 1476     	MOVAR	_tempDuty
                                    1- 1477     	MGOTO	_00712_DS_
     0074 3rrr                      3-   63 m1      LGOTO rom_address
     0075                           1- 1478     _00703_DS_:
                                    1- 1479     	.line	769, "main.c"; 	u8t maxAout = 40;
     0075 2128                      1- 1480     	MOVIA	0x28
                                    1- 1481     	BANKSEL	r0x1046
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 00rr                      1- 1482     	MOVAR	r0x1046
                                    1- 1483     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1484     ;;unsigned compare: left >= lit (0x47=71), size=1
                                    1- 1485     	.line	770, "main.c"; 	if(batValue > 70)
     0078 2147                      1- 1486     	MOVIA	0x47
                                    1- 1487     	BANKSEL	_batValue
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 04rr                      1- 1488     	SUBAR	_batValue,W
     007B 0803                      1- 1489     	BTRSS	STATUS,0
                                    1- 1490     	MGOTO	_00683_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1491     	.line	771, "main.c"; 	maxAout = 45;
     007D 212D                      1- 1492     	MOVIA	0x2d
                                    1- 1493     	BANKSEL	r0x1046
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 00rr                      1- 1494     	MOVAR	r0x1046
     0080                           1- 1495     _00683_DS_:
                                    1- 1496     	.line	772, "main.c"; 	if(workStep == 1)
                                    1- 1497     	BANKSEL	_workStep
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 01rr                      1- 1498     	MOVR	_workStep,W
     0082 2401                      1- 1499     	XORIA	0x01
     0083 0903                      1- 1500     	BTRSS	STATUS,2
                                    1- 1501     	MGOTO	_00693_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1502     	.line	774, "main.c"; 	maxAout = maxAout - 5;
     0085 21FB                      1- 1503     	MOVIA	0xfb
                                    1- 1504     	BANKSEL	r0x1046
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 03rr                      1- 1505     	ADDAR	r0x1046,F
                                    1- 1506     	MGOTO	_00694_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
     0089                           1- 1507     _00693_DS_:
                                    1- 1508     	.line	776, "main.c"; 	else if(workStep == 4)
                                    1- 1509     	BANKSEL	_workStep
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 01rr                      1- 1510     	MOVR	_workStep,W
     008B 2404                      1- 1511     	XORIA	0x04
     008C 0903                      1- 1512     	BTRSS	STATUS,2
                                    1- 1513     	MGOTO	_00690_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1514     	.line	778, "main.c"; 	maxAout = maxAout + 5;
     008E 2105                      1- 1515     	MOVIA	0x05
                                    1- 1516     	BANKSEL	r0x1046
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 03rr                      1- 1517     	ADDAR	r0x1046,F
                                    1- 1518     	MGOTO	_00694_DS_
     0091 3rrr                      3-   63 m1      LGOTO rom_address
     0092                           1- 1519     _00690_DS_:
                                    1- 1520     	.line	780, "main.c"; 	else if(workStep == 5)
                                    1- 1521     	BANKSEL	_workStep
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 01rr                      1- 1522     	MOVR	_workStep,W
     0094 2405                      1- 1523     	XORIA	0x05
     0095 0903                      1- 1524     	BTRSS	STATUS,2
                                    1- 1525     	MGOTO	_00687_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1526     	.line	782, "main.c"; 	maxAout = maxAout + 10;
     0097 210A                      1- 1527     	MOVIA	0x0a
                                    1- 1528     	BANKSEL	r0x1046
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 03rr                      1- 1529     	ADDAR	r0x1046,F
                                    1- 1530     	MGOTO	_00694_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
     009B                           1- 1531     _00687_DS_:
                                    1- 1532     	.line	784, "main.c"; 	else if(workStep == 6)
                                    1- 1533     	BANKSEL	_workStep
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 01rr                      1- 1534     	MOVR	_workStep,W
     009D 2406                      1- 1535     	XORIA	0x06
     009E 0903                      1- 1536     	BTRSS	STATUS,2
                                    1- 1537     	MGOTO	_00694_DS_
     009F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1538     	.line	786, "main.c"; 	maxAout = maxAout + 18;
     00A0 2112                      1- 1539     	MOVIA	0x12
                                    1- 1540     	BANKSEL	r0x1046
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 03rr                      1- 1541     	ADDAR	r0x1046,F
     00A3                           1- 1542     _00694_DS_:
                                    1- 1543     	.line	788, "main.c"; 	if(overCount > 0)
                                    1- 1544     	BANKSEL	_overCount
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 01rr                      1- 1545     	MOVR	_overCount,W
     00A5 0903                      1- 1546     	BTRSS	STATUS,2
                                    1- 1547     	.line	790, "main.c"; 	overCount--;
     00A6 06rr                      1- 1548     	DECR	_overCount,F
                                    1- 1549     	.line	792, "main.c"; 	if(R_AIN4_DATA > maxAout)
                                    1- 1550     	BANKSEL	r0x1046
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 01rr                      1- 1551     	MOVR	r0x1046,W
                                    1- 1552     	BANKSEL	r0x1047
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 00rr                      1- 1553     	MOVAR	r0x1047
                                    1- 1554     	BANKSEL	r0x1048
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 02rr                      1- 1555     	CLRR	r0x1048
                                    1- 1556     	BANKSEL	_R_AIN4_DATA
     00AD rrrr                      3-  110 m1      .banksel ram_address
     00AE 01rr                      1- 1557     	MOVR	(_R_AIN4_DATA + 1),W
                                    1- 1558     	BANKSEL	r0x1048
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 04rr                      1- 1559     	SUBAR	r0x1048,W
     00B1 0903                      1- 1560     	BTRSS	STATUS,2
                                    1- 1561     	MGOTO	_00766_DS_
     00B2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1562     	BANKSEL	_R_AIN4_DATA
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 01rr                      1- 1563     	MOVR	_R_AIN4_DATA,W
                                    1- 1564     	BANKSEL	r0x1047
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 04rr                      1- 1565     	SUBAR	r0x1047,W
     00B7                           1- 1566     _00766_DS_:
     00B7 0C03                      1- 1567     	BTRSC	STATUS,0
                                    1- 1568     	MGOTO	_00700_DS_
     00B8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1569     	.line	794, "main.c"; 	tempDuty = 70 + workStep*5;
     00B9 2105                      1- 1570     	MOVIA	0x05
     00BA 00rr                      1- 1571     	MOVAR	STK00
                                    1- 1572     	BANKSEL	_workStep
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 01rr                      1- 1573     	MOVR	_workStep,W
                                    1- 1574     	MCALL	__mulchar
     00BD 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1575     	BANKSEL	r0x1046
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 00rr                      1- 1576     	MOVAR	r0x1046
     00C0 2146                      1- 1577     	MOVIA	0x46
     00C1 03rr                      1- 1578     	ADDAR	r0x1046,W
                                    1- 1579     	BANKSEL	_tempDuty
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 00rr                      1- 1580     	MOVAR	_tempDuty
                                    1- 1581     	MGOTO	_00712_DS_
     00C4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1582     ;;unsigned compare: left < lit (0x4B=75), size=2
     00C5                           1- 1583     _00700_DS_:
                                    1- 1584     	.line	797, "main.c"; 	else if(R_AIN4_DATA < 75)
     00C5 2100                      1- 1585     	MOVIA	0x00
                                    1- 1586     	BANKSEL	_R_AIN4_DATA
     00C6 rrrr                      3-  110 m1      .banksel ram_address
     00C7 04rr                      1- 1587     	SUBAR	(_R_AIN4_DATA + 1),W
     00C8 0903                      1- 1588     	BTRSS	STATUS,2
                                    1- 1589     	MGOTO	_00767_DS_
     00C9 3rrr                      3-   63 m1      LGOTO rom_address
     00CA 214B                      1- 1590     	MOVIA	0x4b
     00CB 04rr                      1- 1591     	SUBAR	_R_AIN4_DATA,W
     00CC                           1- 1592     _00767_DS_:
     00CC 0C03                      1- 1593     	BTRSC	STATUS,0
                                    1- 1594     	MGOTO	_00712_DS_
     00CD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1595     	.line	800, "main.c"; 	tempDuty = maxDuty;
                                    1- 1596     	BANKSEL	_maxDuty
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 01rr                      1- 1597     	MOVR	_maxDuty,W
                                    1- 1598     	BANKSEL	_tempDuty
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 00rr                      1- 1599     	MOVAR	_tempDuty
     00D2                           1- 1600     _00712_DS_:
                                    1- 1601     	.line	808, "main.c"; 	}
                                    1- 1602     	RETURN	
     00D2 0010                      3-   40 m1      ret
                                    1- 1603     ; exit point of _checkOutA
                                    1- 1605     ;***
                                    1- 1606     ;  pBlock Stats: dbName = C
                                    1- 1607     ;***
                                    1- 1608     ;has an exit
                                    1- 1609     ;functions called:
                                    1- 1610     ;   _F_AIN2_Convert
                                    1- 1611     ;   _F_AIN2_Convert
                                    1- 1612     ;5 compiler assigned registers:
                                    1- 1613     ;   r0x104A
                                    1- 1614     ;   r0x104B
                                    1- 1615     ;   r0x104C
                                    1- 1616     ;   r0x104D
                                    1- 1617     ;   r0x104E
                                    1- 1618     ;; Starting pCode block
                                    1- 1619     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1621     _checkBatAD:
                                    1- 1622     ; 2 exit points
                                    1- 1623     	.line	664, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1624     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1625     	CLRR	_R_AIN2_DATA_LB
                                    1- 1626     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1627     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1628     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1629     	.line	665, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1630     	MOVIA	0x08
                                    1- 1631     	MCALL	_F_AIN2_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1632     	.line	666, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1633     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1634     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1635     	ANDIA	0xf0
     000A 00rr                      1- 1636     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1637     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1638     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1639     	ANDIA	0x0f
     000E 11rr                      1- 1640     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1641     	XORAR	_R_AIN2_DATA,F
                                    1- 1642     	.line	667, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1643     	MOVIA	0xf0
                                    1- 1644     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1645     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1646     	.line	668, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1647     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1648     	BANKSEL	r0x104C
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1649     	MOVAR	r0x104C
                                    1- 1650     	BANKSEL	r0x104A
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1651     	MOVAR	r0x104A
                                    1- 1652     	BANKSEL	r0x104B
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1653     	CLRR	r0x104B
                                    1- 1654     ;;107	MOVR	r0x104A,W
     001A 2100                      1- 1655     	MOVIA	0x00
                                    1- 1656     	BANKSEL	r0x104D
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1657     	MOVAR	r0x104D
                                    1- 1658     	BANKSEL	r0x104C
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1659     	MOVR	r0x104C,W
                                    1- 1660     	BANKSEL	_R_AIN2_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1661     	ADDAR	_R_AIN2_DATA,F
                                    1- 1662     	BANKSEL	r0x104D
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1663     	MOVR	r0x104D,W
     0023 0C03                      1- 1664     	BTRSC	STATUS,0
     0024 05rr                      1- 1665     	INCR	r0x104D,W
     0025 0D03                      1- 1666     	BTRSC	STATUS,2
                                    1- 1667     	MGOTO	_00004_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1668     	BANKSEL	_R_AIN2_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1669     	ADDAR	(_R_AIN2_DATA + 1),F
     0029                           1- 1670     _00004_DS_:
                                    1- 1671     	.line	669, "main.c"; 	R_AIN2_DATA >>=4;					// R_AIN0_DATA divided 
                                    1- 1672     	BANKSEL	_R_AIN2_DATA
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 15rr                      1- 1673     	SWAPR	_R_AIN2_DATA,W
     002B 220F                      1- 1674     	ANDIA	0x0f
     002C 00rr                      1- 1675     	MOVAR	_R_AIN2_DATA
     002D 15rr                      1- 1676     	SWAPR	(_R_AIN2_DATA + 1),W
     002E 00rr                      1- 1677     	MOVAR	(_R_AIN2_DATA + 1)
     002F 22F0                      1- 1678     	ANDIA	0xf0
     0030 11rr                      1- 1679     	IORAR	_R_AIN2_DATA,F
     0031 12rr                      1- 1680     	XORAR	(_R_AIN2_DATA + 1),F
                                    1- 1681     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1682     ;;unsigned compare: left >= lit (0x312=786), size=2
                                    1- 1683     	.line	672, "main.c"; 	if(R_AIN2_DATA > 785)
     0032 2103                      1- 1684     	MOVIA	0x03
     0033 04rr                      1- 1685     	SUBAR	(_R_AIN2_DATA + 1),W
     0034 0903                      1- 1686     	BTRSS	STATUS,2
                                    1- 1687     	MGOTO	_00666_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
     0036 2112                      1- 1688     	MOVIA	0x12
     0037 04rr                      1- 1689     	SUBAR	_R_AIN2_DATA,W
     0038                           1- 1690     _00666_DS_:
     0038 0803                      1- 1691     	BTRSS	STATUS,0
                                    1- 1692     	MGOTO	_00626_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1693     	.line	674, "main.c"; 	if(++fullTime > 200)
                                    1- 1694     	BANKSEL	_fullTime
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 05rr                      1- 1695     	INCR	_fullTime,F
                                    1- 1696     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1697     ;;unsigned compare: left >= lit (0xC9=201), size=1
     003C 21C9                      1- 1698     	MOVIA	0xc9
     003D 04rr                      1- 1699     	SUBAR	_fullTime,W
     003E 0803                      1- 1700     	BTRSS	STATUS,0
                                    1- 1701     	MGOTO	_00628_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1702     	.line	676, "main.c"; 	fullFlag = 1;
     0040 2101                      1- 1703     	MOVIA	0x01
                                    1- 1704     	BANKSEL	_fullFlag
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 00rr                      1- 1705     	MOVAR	_fullFlag
                                    1- 1706     	.line	677, "main.c"; 	batValue = 100;
     0043 2164                      1- 1707     	MOVIA	0x64
                                    1- 1708     	BANKSEL	_batValue
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 1709     	MOVAR	_batValue
                                    1- 1710     	MGOTO	_00628_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1711     ;;unsigned compare: left < lit (0x226=550), size=2
     0047                           1- 1712     _00626_DS_:
                                    1- 1713     	.line	680, "main.c"; 	else if(R_AIN2_DATA < 550)
     0047 2102                      1- 1714     	MOVIA	0x02
                                    1- 1715     	BANKSEL	_R_AIN2_DATA
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 04rr                      1- 1716     	SUBAR	(_R_AIN2_DATA + 1),W
     004A 0903                      1- 1717     	BTRSS	STATUS,2
                                    1- 1718     	MGOTO	_00668_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C 2126                      1- 1719     	MOVIA	0x26
     004D 04rr                      1- 1720     	SUBAR	_R_AIN2_DATA,W
     004E                           1- 1721     _00668_DS_:
     004E 0C03                      1- 1722     	BTRSC	STATUS,0
                                    1- 1723     	MGOTO	_00623_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1724     	.line	682, "main.c"; 	batValue = 0;
                                    1- 1725     	BANKSEL	_batValue
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 02rr                      1- 1726     	CLRR	_batValue
                                    1- 1727     	.line	683, "main.c"; 	fullTime = 0;
                                    1- 1728     	BANKSEL	_fullTime
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 02rr                      1- 1729     	CLRR	_fullTime
                                    1- 1730     	MGOTO	_00628_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
     0055                           1- 1731     _00623_DS_:
                                    1- 1732     	.line	687, "main.c"; 	fullTime = 0;
                                    1- 1733     	BANKSEL	_fullTime
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 02rr                      1- 1734     	CLRR	_fullTime
                                    1- 1735     ;;unsigned compare: left < lit (0x2B4=692), size=2
                                    1- 1736     	.line	688, "main.c"; 	if(R_AIN2_DATA >= 692)
     0057 2102                      1- 1737     	MOVIA	0x02
                                    1- 1738     	BANKSEL	_R_AIN2_DATA
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 04rr                      1- 1739     	SUBAR	(_R_AIN2_DATA + 1),W
     005A 0903                      1- 1740     	BTRSS	STATUS,2
                                    1- 1741     	MGOTO	_00669_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
     005C 21B4                      1- 1742     	MOVIA	0xb4
     005D 04rr                      1- 1743     	SUBAR	_R_AIN2_DATA,W
     005E                           1- 1744     _00669_DS_:
     005E 0803                      1- 1745     	BTRSS	STATUS,0
                                    1- 1746     	MGOTO	_00605_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1747     	.line	690, "main.c"; 	batValue = (R_AIN2_DATA - 692) + 40;
                                    1- 1748     	BANKSEL	_R_AIN2_DATA
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1- 1749     	MOVR	_R_AIN2_DATA,W
                                    1- 1750     	BANKSEL	r0x104A
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 00rr                      1- 1751     	MOVAR	r0x104A
                                    1- 1752     	BANKSEL	r0x104B
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 00rr                      1- 1753     	MOVAR	r0x104B
     0066 2174                      1- 1754     	MOVIA	0x74
     0067 03rr                      1- 1755     	ADDAR	r0x104B,W
                                    1- 1756     	BANKSEL	_batValue
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 00rr                      1- 1757     	MOVAR	_batValue
                                    1- 1758     	MGOTO	_00606_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1759     ;;unsigned compare: left < lit (0x23C=572), size=2
     006B                           1- 1760     _00605_DS_:
                                    1- 1761     	.line	692, "main.c"; 	else if(R_AIN2_DATA >= 572)
     006B 2102                      1- 1762     	MOVIA	0x02
                                    1- 1763     	BANKSEL	_R_AIN2_DATA
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 04rr                      1- 1764     	SUBAR	(_R_AIN2_DATA + 1),W
     006E 0903                      1- 1765     	BTRSS	STATUS,2
                                    1- 1766     	MGOTO	_00670_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
     0070 213C                      1- 1767     	MOVIA	0x3c
     0071 04rr                      1- 1768     	SUBAR	_R_AIN2_DATA,W
     0072                           1- 1769     _00670_DS_:
     0072 0803                      1- 1770     	BTRSS	STATUS,0
                                    1- 1771     	MGOTO	_00602_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1772     	.line	694, "main.c"; 	batValue = ((R_AIN2_DATA - 572)/4) + 10;
     0074 21C4                      1- 1773     	MOVIA	0xc4
                                    1- 1774     	BANKSEL	_R_AIN2_DATA
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 03rr                      1- 1775     	ADDAR	_R_AIN2_DATA,W
                                    1- 1776     	BANKSEL	r0x104A
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 00rr                      1- 1777     	MOVAR	r0x104A
     0079 21FD                      1- 1778     	MOVIA	0xfd
                                    1- 1779     	BANKSEL	r0x104B
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 00rr                      1- 1780     	MOVAR	r0x104B
                                    1- 1781     	BANKSEL	_R_AIN2_DATA
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 01rr                      1- 1782     	MOVR	(_R_AIN2_DATA + 1),W
     007E 0C03                      1- 1783     	BTRSC	STATUS,0
     007F 05rr                      1- 1784     	INCR	(_R_AIN2_DATA + 1),W
     0080 0D03                      1- 1785     	BTRSC	STATUS,2
                                    1- 1786     	MGOTO	_00005_DS_
     0081 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1787     	BANKSEL	r0x104B
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 03rr                      1- 1788     	ADDAR	r0x104B,F
                                    1- 1789     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     0084                           1- 1790     _00005_DS_:
     0084 1C03                      1- 1791     	BCR	STATUS,0
                                    1- 1792     	BANKSEL	r0x104B
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 13rr                      1- 1793     	RRR	r0x104B,W
                                    1- 1794     	BANKSEL	r0x104D
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 00rr                      1- 1795     	MOVAR	r0x104D
                                    1- 1796     	BANKSEL	r0x104A
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 13rr                      1- 1797     	RRR	r0x104A,W
                                    1- 1798     	BANKSEL	r0x104C
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 00rr                      1- 1799     	MOVAR	r0x104C
                                    1- 1800     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     008D 1C03                      1- 1801     	BCR	STATUS,0
                                    1- 1802     	BANKSEL	r0x104D
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 13rr                      1- 1803     	RRR	r0x104D,F
                                    1- 1804     	BANKSEL	r0x104C
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 13rr                      1- 1805     	RRR	r0x104C,F
     0092 01rr                      1- 1806     	MOVR	r0x104C,W
                                    1- 1807     	BANKSEL	r0x104A
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 00rr                      1- 1808     	MOVAR	r0x104A
     0095 210A                      1- 1809     	MOVIA	0x0a
     0096 03rr                      1- 1810     	ADDAR	r0x104A,W
                                    1- 1811     	BANKSEL	_batValue
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 00rr                      1- 1812     	MOVAR	_batValue
                                    1- 1813     	MGOTO	_00606_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1814     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1815     ;;unsigned compare: left >= lit (0x227=551), size=2
     009A                           1- 1816     _00602_DS_:
                                    1- 1817     	.line	696, "main.c"; 	else if(R_AIN2_DATA > 550)
     009A 2102                      1- 1818     	MOVIA	0x02
                                    1- 1819     	BANKSEL	_R_AIN2_DATA
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 04rr                      1- 1820     	SUBAR	(_R_AIN2_DATA + 1),W
     009D 0903                      1- 1821     	BTRSS	STATUS,2
                                    1- 1822     	MGOTO	_00671_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
     009F 2127                      1- 1823     	MOVIA	0x27
     00A0 04rr                      1- 1824     	SUBAR	_R_AIN2_DATA,W
     00A1                           1- 1825     _00671_DS_:
     00A1 0803                      1- 1826     	BTRSS	STATUS,0
                                    1- 1827     	MGOTO	_00599_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1828     	.line	698, "main.c"; 	batValue = (R_AIN2_DATA - 550)/8;
     00A3 21DA                      1- 1829     	MOVIA	0xda
                                    1- 1830     	BANKSEL	_R_AIN2_DATA
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 03rr                      1- 1831     	ADDAR	_R_AIN2_DATA,W
                                    1- 1832     	BANKSEL	r0x104A
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 00rr                      1- 1833     	MOVAR	r0x104A
     00A8 21FD                      1- 1834     	MOVIA	0xfd
                                    1- 1835     	BANKSEL	r0x104C
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 00rr                      1- 1836     	MOVAR	r0x104C
                                    1- 1837     	BANKSEL	_R_AIN2_DATA
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 01rr                      1- 1838     	MOVR	(_R_AIN2_DATA + 1),W
     00AD 0C03                      1- 1839     	BTRSC	STATUS,0
     00AE 05rr                      1- 1840     	INCR	(_R_AIN2_DATA + 1),W
     00AF 0D03                      1- 1841     	BTRSC	STATUS,2
                                    1- 1842     	MGOTO	_00006_DS_
     00B0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1843     	BANKSEL	r0x104C
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 03rr                      1- 1844     	ADDAR	r0x104C,F
                                    1- 1845     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     00B3                           1- 1846     _00006_DS_:
     00B3 1C03                      1- 1847     	BCR	STATUS,0
                                    1- 1848     	BANKSEL	r0x104C
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 13rr                      1- 1849     	RRR	r0x104C,W
                                    1- 1850     	BANKSEL	r0x104E
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 00rr                      1- 1851     	MOVAR	r0x104E
                                    1- 1852     	BANKSEL	r0x104A
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 13rr                      1- 1853     	RRR	r0x104A,W
                                    1- 1854     	BANKSEL	r0x104D
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 00rr                      1- 1855     	MOVAR	r0x104D
                                    1- 1856     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00BC 1C03                      1- 1857     	BCR	STATUS,0
                                    1- 1858     	BANKSEL	r0x104E
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 13rr                      1- 1859     	RRR	r0x104E,F
                                    1- 1860     	BANKSEL	r0x104D
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 13rr                      1- 1861     	RRR	r0x104D,F
                                    1- 1862     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00C1 1C03                      1- 1863     	BCR	STATUS,0
                                    1- 1864     	BANKSEL	r0x104E
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 13rr                      1- 1865     	RRR	r0x104E,F
                                    1- 1866     	BANKSEL	r0x104D
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 13rr                      1- 1867     	RRR	r0x104D,F
     00C6 01rr                      1- 1868     	MOVR	r0x104D,W
                                    1- 1869     	BANKSEL	_batValue
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 00rr                      1- 1870     	MOVAR	_batValue
                                    1- 1871     	MGOTO	_00606_DS_
     00C9 3rrr                      3-   63 m1      LGOTO rom_address
     00CA                           1- 1872     _00599_DS_:
                                    1- 1873     	.line	702, "main.c"; 	batValue = 0;
                                    1- 1874     	BANKSEL	_batValue
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 02rr                      1- 1875     	CLRR	_batValue
     00CC                           1- 1876     _00606_DS_:
                                    1- 1877     	.line	704, "main.c"; 	if(0x08 & PORTA)
                                    1- 1878     	BANKSEL	_PORTA
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 09rr                      1- 1879     	BTRSS	_PORTA,3
                                    1- 1880     	MGOTO	_00619_DS_
     00CE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1881     ;;unsigned compare: left < lit (0xA=10), size=1
                                    1- 1882     	.line	706, "main.c"; 	if(batValue < 10)
     00CF 210A                      1- 1883     	MOVIA	0x0a
                                    1- 1884     	BANKSEL	_batValue
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 04rr                      1- 1885     	SUBAR	_batValue,W
     00D2 0C03                      1- 1886     	BTRSC	STATUS,0
                                    1- 1887     	MGOTO	_00616_DS_
     00D3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1888     	.line	707, "main.c"; 	batValue = 1;
     00D4 2101                      1- 1889     	MOVIA	0x01
     00D5 00rr                      1- 1890     	MOVAR	_batValue
                                    1- 1891     	MGOTO	_00619_DS_
     00D6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1892     ;;unsigned compare: left < lit (0x14=20), size=1
     00D7                           1- 1893     _00616_DS_:
                                    1- 1894     	.line	708, "main.c"; 	else if(batValue < 20)
     00D7 2114                      1- 1895     	MOVIA	0x14
                                    1- 1896     	BANKSEL	_batValue
     00D8 rrrr                      3-  110 m1      .banksel ram_address
     00D9 04rr                      1- 1897     	SUBAR	_batValue,W
     00DA 0C03                      1- 1898     	BTRSC	STATUS,0
                                    1- 1899     	MGOTO	_00613_DS_
     00DB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1900     	.line	710, "main.c"; 	batValue = batValue - 10;
     00DC 21F6                      1- 1901     	MOVIA	0xf6
     00DD 03rr                      1- 1902     	ADDAR	_batValue,F
                                    1- 1903     	MGOTO	_00619_DS_
     00DE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1904     ;;unsigned compare: left < lit (0x64=100), size=1
     00DF                           1- 1905     _00613_DS_:
                                    1- 1906     	.line	712, "main.c"; 	else if(batValue < 100)
     00DF 2164                      1- 1907     	MOVIA	0x64
                                    1- 1908     	BANKSEL	_batValue
     00E0 rrrr                      3-  110 m1      .banksel ram_address
     00E1 04rr                      1- 1909     	SUBAR	_batValue,W
     00E2 0C03                      1- 1910     	BTRSC	STATUS,0
                                    1- 1911     	MGOTO	_00610_DS_
     00E3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1912     	.line	714, "main.c"; 	batValue = batValue - 20;
     00E4 21EC                      1- 1913     	MOVIA	0xec
     00E5 03rr                      1- 1914     	ADDAR	_batValue,F
                                    1- 1915     	MGOTO	_00619_DS_
     00E6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1916     ;;unsigned compare: left < lit (0x85=133), size=1
     00E7                           1- 1917     _00610_DS_:
                                    1- 1918     	.line	716, "main.c"; 	else if(batValue < 133)
     00E7 2185                      1- 1919     	MOVIA	0x85
                                    1- 1920     	BANKSEL	_batValue
     00E8 rrrr                      3-  110 m1      .banksel ram_address
     00E9 04rr                      1- 1921     	SUBAR	_batValue,W
     00EA 0C03                      1- 1922     	BTRSC	STATUS,0
                                    1- 1923     	MGOTO	_00619_DS_
     00EB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1924     	.line	718, "main.c"; 	batValue = batValue - 33;
     00EC 21DF                      1- 1925     	MOVIA	0xdf
     00ED 03rr                      1- 1926     	ADDAR	_batValue,F
                                    1- 1927     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1928     ;;unsigned compare: left >= lit (0x65=101), size=1
     00EE                           1- 1929     _00619_DS_:
                                    1- 1930     	.line	721, "main.c"; 	if(batValue > 100)
     00EE 2165                      1- 1931     	MOVIA	0x65
                                    1- 1932     	BANKSEL	_batValue
     00EF rrrr                      3-  110 m1      .banksel ram_address
     00F0 04rr                      1- 1933     	SUBAR	_batValue,W
     00F1 0803                      1- 1934     	BTRSS	STATUS,0
                                    1- 1935     	MGOTO	_00628_DS_
     00F2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1936     	.line	722, "main.c"; 	batValue = 100;
     00F3 2164                      1- 1937     	MOVIA	0x64
     00F4 00rr                      1- 1938     	MOVAR	_batValue
     00F5                           1- 1939     _00628_DS_:
                                    1- 1940     	.line	726, "main.c"; 	}
                                    1- 1941     	RETURN	
     00F5 0010                      3-   40 m1      ret
                                    1- 1942     ; exit point of _checkBatAD
                                    1- 1944     ;***
                                    1- 1945     ;  pBlock Stats: dbName = C
                                    1- 1946     ;***
                                    1- 1947     ;has an exit
                                    1- 1948     ;functions called:
                                    1- 1949     ;   _delayms
                                    1- 1950     ;   _delayms
                                    1- 1951     ;; Starting pCode block
                                    1- 1952     .segment "code"; module=main, function=_initAD
     0000                           1- 1954     _initAD:
                                    1- 1955     ; 2 exit points
                                    1- 1956     	.line	640, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1957     	MOVIA	0x84
     0001 00rr                      1- 1958     	MOVAR	_ADMD
                                    1- 1959     	.line	645, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1960     	CLRR	_ADVREFH
                                    1- 1961     	.line	650, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1962     	MOVIA	0x10
     0004 00rr                      1- 1963     	MOVAR	_ADR
                                    1- 1964     	.line	652, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1965     	MOVIA	0x03
     0006 00rr                      1- 1966     	MOVAR	_ADCR
                                    1- 1967     	.line	654, "main.c"; 	PACON = C_PA2_AIN2 | C_PA1_AIN1 | C_PA4_AIN4;						// Set AIN0(PA0) as pure ADC input for reduce power consumption (SFR "PACON")
     0007 2116                      1- 1968     	MOVIA	0x16
     0008 00rr                      1- 1969     	MOVAR	_PACON
                                    1- 1970     	.line	655, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0009 1Arr                      1- 1971     	BSR	_ADMDbits,4
                                    1- 1972     	.line	656, "main.c"; 	delayms(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     000A 2164                      1- 1973     	MOVIA	0x64
                                    1- 1974     	MCALL	_delayms
     000B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1975     	.line	659, "main.c"; 	}
                                    1- 1976     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 1977     ; exit point of _initAD
                                    1- 1979     ;***
                                    1- 1980     ;  pBlock Stats: dbName = C
                                    1- 1981     ;***
                                    1- 1982     ;has an exit
                                    1- 1983     ;1 compiler assigned register :
                                    1- 1984     ;   r0x104F
                                    1- 1985     ;; Starting pCode block
                                    1- 1986     .segment "code"; module=main, function=_keyRead
                                    1- 1988     ;local variable name mapping:
     0000                           1- 1990     _keyRead:
                                    1- 1991     ; 2 exit points
                                    1- 1992     	.line	602, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1993     	BANKSEL	r0x104F
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1994     	MOVAR	r0x104F
                                    1- 1995     	.line	604, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 1996     	MOVR	r0x104F,W
     0003 0D03                      1- 1997     	BTRSC	STATUS,2
                                    1- 1998     	MGOTO	_00585_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1999     	.line	606, "main.c"; 	keyCount++;
                                    1- 2000     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2001     	INCR	_keyCount,F
                                    1- 2002     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 2003     	.line	608, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 2004     	MOVIA	0xc8
     0008 04rr                      1- 2005     	SUBAR	_keyCount,W
     0009 0803                      1- 2006     	BTRSS	STATUS,0
                                    1- 2007     	MGOTO	_00586_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2008     	.line	610, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 2009     	MOVIA	0xc8
     000C 00rr                      1- 2010     	MOVAR	_keyCount
                                    1- 2011     	.line	611, "main.c"; 	if(!longPressFlag)
                                    1- 2012     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Crr                      1- 2013     	BTRSC	_Status,1
                                    1- 2014     	MGOTO	_00586_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2015     	.line	613, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 2016     	BSR	_Status,1
                                    1- 2017     	.line	614, "main.c"; 	return 2;
     0011 2102                      1- 2018     	MOVIA	0x02
                                    1- 2019     	MGOTO	_00587_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2020     ;;unsigned compare: left < lit (0xC8=200), size=1
     0013                           1- 2021     _00585_DS_:
                                    1- 2022     	.line	620, "main.c"; 	if(keyCount >= 200)
     0013 21C8                      1- 2023     	MOVIA	0xc8
                                    1- 2024     	BANKSEL	_keyCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 2025     	SUBAR	_keyCount,W
     0016 0803                      1- 2026     	BTRSS	STATUS,0
                                    1- 2027     	MGOTO	_00582_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2028     	.line	622, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 2029     	CLRR	_keyCount
                                    1- 2030     	.line	623, "main.c"; 	longPressFlag = 0;
                                    1- 2031     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Crr                      1- 2032     	BCR	_Status,1
                                    1- 2033     	.line	624, "main.c"; 	return	0;
     001B 2100                      1- 2034     	MOVIA	0x00
                                    1- 2035     	MGOTO	_00587_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2036     ;;unsigned compare: left < lit (0x4=4), size=1
     001D                           1- 2037     _00582_DS_:
                                    1- 2038     	.line	626, "main.c"; 	else if(keyCount >= 4)
     001D 2104                      1- 2039     	MOVIA	0x04
                                    1- 2040     	BANKSEL	_keyCount
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 2041     	SUBAR	_keyCount,W
     0020 0803                      1- 2042     	BTRSS	STATUS,0
                                    1- 2043     	MGOTO	_00583_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2044     	.line	628, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 2045     	CLRR	_keyCount
                                    1- 2046     	.line	629, "main.c"; 	return	1;
     0023 2101                      1- 2047     	MOVIA	0x01
                                    1- 2048     	MGOTO	_00587_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 2049     _00583_DS_:
                                    1- 2050     	.line	631, "main.c"; 	keyCount = 0;
                                    1- 2051     	BANKSEL	_keyCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 2052     	CLRR	_keyCount
     0027                           1- 2053     _00586_DS_:
                                    1- 2054     	.line	633, "main.c"; 	return 0;
     0027 2100                      1- 2055     	MOVIA	0x00
     0028                           1- 2056     _00587_DS_:
                                    1- 2057     	.line	634, "main.c"; 	}
                                    1- 2058     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 2059     ; exit point of _keyRead
                                    1- 2061     ;***
                                    1- 2062     ;  pBlock Stats: dbName = C
                                    1- 2063     ;***
                                    1- 2064     ;has an exit
                                    1- 2065     ;functions called:
                                    1- 2066     ;   _checkBatAD
                                    1- 2067     ;   _setInput
                                    1- 2068     ;   _pwmStop
                                    1- 2069     ;   _pwm1Stop
                                    1- 2070     ;   _checkBatAD
                                    1- 2071     ;   _setInput
                                    1- 2072     ;   _pwmStop
                                    1- 2073     ;   _pwm1Stop
                                    1- 2074     ;; Starting pCode block
                                    1- 2075     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2077     _gotoSleep:
                                    1- 2078     ; 2 exit points
                                    1- 2079     	.line	570, "main.c"; 	checkBatAD();
                                    1- 2080     	MCALL	_checkBatAD
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2081     	.line	571, "main.c"; 	setInput();
                                    1- 2082     	MCALL	_setInput
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2083     	.line	572, "main.c"; 	count5s = 0;
                                    1- 2084     	BANKSEL	_count5s
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2085     	CLRR	_count5s
     0004 02rr                      1- 2086     	CLRR	(_count5s + 1)
                                    1- 2087     	.line	573, "main.c"; 	showFlag = 0;
                                    1- 2088     	BANKSEL	_Status
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 1Err                      1- 2089     	BCR	_Status,4
                                    1- 2090     	.line	574, "main.c"; 	IOSTA = C_PA5_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0007 212E                      1- 2091     	MOVIA	0x2e
     0008 000r                      1- 2092     	IOST	_IOSTA
                                    1- 2093     	.line	576, "main.c"; 	IOSTB = 0x00;
     0009 0200                      1- 2094     	CLRA	
     000A 000r                      1- 2095     	IOST	_IOSTB
                                    1- 2096     	.line	577, "main.c"; 	PORTB = 0x00;
     000B 02rr                      1- 2097     	CLRR	_PORTB
                                    1- 2098     	.line	578, "main.c"; 	PORTA = 0x00;
                                    1- 2099     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 02rr                      1- 2100     	CLRR	_PORTA
                                    1- 2101     	.line	579, "main.c"; 	sleepTime = 0;
                                    1- 2102     	BANKSEL	_sleepTime
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1- 2103     	CLRR	_sleepTime
     0010 02rr                      1- 2104     	CLRR	(_sleepTime + 1)
                                    1- 2105     	.line	581, "main.c"; 	pwmStop();
                                    1- 2106     	MCALL	_pwmStop
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2107     	.line	582, "main.c"; 	pwm1Stop();
                                    1- 2108     	MCALL	_pwm1Stop
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2109     	.line	583, "main.c"; 	workStep = 0;
                                    1- 2110     	BANKSEL	_workStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 02rr                      1- 2111     	CLRR	_workStep
                                    1- 2112     	.line	584, "main.c"; 	AWUCON = 0x28;
     0015 2128                      1- 2113     	MOVIA	0x28
     0016 00rr                      1- 2114     	MOVAR	_AWUCON
                                    1- 2115     	.line	585, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0017 210B                      1- 2116     	MOVIA	0x0b
     0018 00rr                      1- 2117     	MOVAR	_INTE
                                    1- 2118     	.line	586, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0019 2118                      1- 2119     	MOVIA	0x18
     001A 00rr                      1- 2120     	MOVAR	_PCON
                                    1- 2121     	.line	587, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     001B 02rr                      1- 2122     	CLRR	_INTF
                                    1- 2123     	.line	588, "main.c"; 	CLRWDT();
     001C 0002                      1- 2124     	clrwdt
                                    1- 2125     	.line	589, "main.c"; 	ENI();
     001D 0004                      1- 2126     	ENI
                                    1- 2127     	.line	590, "main.c"; 	SLEEP();
     001E 0001                      1- 2128     	sleep
                                    1- 2129     	.line	591, "main.c"; 	AWUCON = 0x00;
     001F 02rr                      1- 2130     	CLRR	_AWUCON
                                    1- 2131     	.line	593, "main.c"; 	IOSTA =  C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0020 213E                      1- 2132     	MOVIA	0x3e
     0021 000r                      1- 2133     	IOST	_IOSTA
                                    1- 2134     	.line	594, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0022 2101                      1- 2135     	MOVIA	0x01
     0023 00rr                      1- 2136     	MOVAR	_INTE
                                    1- 2137     	.line	595, "main.c"; 	INTF = 0;
     0024 02rr                      1- 2138     	CLRR	_INTF
                                    1- 2139     	.line	597, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En ;				// Enable WDT ,  Enable LVR
     0025 21A8                      1- 2140     	MOVIA	0xa8
     0026 00rr                      1- 2141     	MOVAR	_PCON
                                    1- 2142     	.line	599, "main.c"; 	}
                                    1- 2143     	RETURN	
     0027 0010                      3-   40 m1      ret
                                    1- 2144     ; exit point of _gotoSleep
                                    1- 2146     ;***
                                    1- 2147     ;  pBlock Stats: dbName = C
                                    1- 2148     ;***
                                    1- 2149     ;has an exit
                                    1- 2150     ;; Starting pCode block
                                    1- 2151     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2153     _pwmStop:
                                    1- 2154     ; 2 exit points
                                    1- 2155     	.line	564, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2156     	CLRA	
     0001 00rr                      1- 2157     	SFUN	_T2CR1
                                    1- 2158     	.line	565, "main.c"; 	}
                                    1- 2159     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2160     ; exit point of _pwmStop
                                    1- 2162     ;***
                                    1- 2163     ;  pBlock Stats: dbName = C
                                    1- 2164     ;***
                                    1- 2165     ;has an exit
                                    1- 2166     ;1 compiler assigned register :
                                    1- 2167     ;   r0x1050
                                    1- 2168     ;; Starting pCode block
                                    1- 2169     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2171     _pwmInit:
                                    1- 2172     ; 2 exit points
                                    1- 2173     	.line	552, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2174     	SFUNR	_T2CR1
                                    1- 2175     	BANKSEL	r0x1050
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2176     	MOVAR	r0x1050
     0003 0Frr                      1- 2177     	BTRSC	r0x1050,7
                                    1- 2178     	.line	553, "main.c"; 	return;
                                    1- 2179     	MGOTO	_00562_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2180     	.line	554, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2181     	CLRR	_TMRH
                                    1- 2182     	.line	555, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 2183     	MOVIA	0x64
     0007 00rr                      1- 2184     	SFUN	_TMR2
                                    1- 2185     	.line	558, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2101                      1- 2186     	MOVIA	0x01
     0009 00rr                      1- 2187     	SFUN	_T2CR2
                                    1- 2188     	.line	559, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2189     	MOVIA	0x83
     000B 00rr                      1- 2190     	SFUN	_T2CR1
     000C                           1- 2191     _00562_DS_:
                                    1- 2192     	.line	560, "main.c"; 	}
                                    1- 2193     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2194     ; exit point of _pwmInit
                                    1- 2196     ;***
                                    1- 2197     ;  pBlock Stats: dbName = C
                                    1- 2198     ;***
                                    1- 2199     ;has an exit
                                    1- 2200     ;; Starting pCode block
                                    1- 2201     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2203     _pwm1Stop:
                                    1- 2204     ; 2 exit points
                                    1- 2205     	.line	545, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2206     	CLRA	
     0001 00rr                      1- 2207     	SFUN	_T1CR1
                                    1- 2208     	.line	546, "main.c"; 	}
                                    1- 2209     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2210     ; exit point of _pwm1Stop
                                    1- 2212     ;***
                                    1- 2213     ;  pBlock Stats: dbName = C
                                    1- 2214     ;***
                                    1- 2215     ;has an exit
                                    1- 2216     ;1 compiler assigned register :
                                    1- 2217     ;   r0x1051
                                    1- 2218     ;; Starting pCode block
                                    1- 2219     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2221     _pwm1Init:
                                    1- 2222     ; 2 exit points
                                    1- 2223     	.line	532, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2224     	SFUNR	_T1CR1
                                    1- 2225     	BANKSEL	r0x1051
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2226     	MOVAR	r0x1051
     0003 0Frr                      1- 2227     	BTRSC	r0x1051,7
                                    1- 2228     	.line	533, "main.c"; 	return;
                                    1- 2229     	MGOTO	_00551_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2230     	.line	534, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2231     	CLRR	_TMRH
                                    1- 2232     	.line	535, "main.c"; 	TMR1 = 48;							//频率为110K
     0006 2130                      1- 2233     	MOVIA	0x30
     0007 00rr                      1- 2234     	SFUN	_TMR1
                                    1- 2235     	.line	538, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2236     	CLRA	
     0009 00rr                      1- 2237     	SFUN	_T1CR2
                                    1- 2238     	.line	539, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Dis;
     000A 2108                      1- 2239     	MOVIA	0x08
     000B 00rr                      1- 2240     	SFUN	_T1CR2
                                    1- 2241     	.line	540, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000C 2183                      1- 2242     	MOVIA	0x83
     000D 00rr                      1- 2243     	SFUN	_T1CR1
     000E                           1- 2244     _00551_DS_:
                                    1- 2245     	.line	541, "main.c"; 	}
                                    1- 2246     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2247     ; exit point of _pwm1Init
                                    1- 2249     ;***
                                    1- 2250     ;  pBlock Stats: dbName = C
                                    1- 2251     ;***
                                    1- 2252     ;has an exit
                                    1- 2253     ;functions called:
                                    1- 2254     ;   _pwmStop
                                    1- 2255     ;   _pwmStop
                                    1- 2256     ;; Starting pCode block
                                    1- 2257     .segment "code"; module=main, function=_powerOff
     0000                           1- 2259     _powerOff:
                                    1- 2260     ; 2 exit points
                                    1- 2261     	.line	525, "main.c"; 	workStep = 0;
                                    1- 2262     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2263     	CLRR	_workStep
                                    1- 2264     	.line	526, "main.c"; 	pwmStop();
                                    1- 2265     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2266     	.line	527, "main.c"; 	}
                                    1- 2267     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 2268     ; exit point of _powerOff
                                    1- 2270     ;***
                                    1- 2271     ;  pBlock Stats: dbName = C
                                    1- 2272     ;***
                                    1- 2273     ;has an exit
                                    1- 2274     ;; Starting pCode block
                                    1- 2275     .segment "code"; module=main, function=_initSys
     0000                           1- 2277     _initSys:
                                    1- 2278     ; 2 exit points
                                    1- 2279     	.line	497, "main.c"; 	DISI();
     0000 0013                      1- 2280     	DISI
                                    1- 2281     	.line	498, "main.c"; 	IOSTA = C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0001 213E                      1- 2282     	MOVIA	0x3e
     0002 000r                      1- 2283     	IOST	_IOSTA
                                    1- 2284     	.line	499, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 2285     	CLRA	
     0004 000r                      1- 2286     	IOST	_IOSTB
                                    1- 2287     	.line	500, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2288     	CLRR	_PORTB
                                    1- 2289     	.line	501, "main.c"; 	PORTA = 0x00;
                                    1- 2290     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2291     	CLRR	_PORTA
                                    1- 2292     	.line	502, "main.c"; 	APHCON = 0xFF;
     0008 21FF                      1- 2293     	MOVIA	0xff
     0009 000r                      1- 2294     	IOST	_APHCON
                                    1- 2295     	.line	503, "main.c"; 	BPHCON = 0xFF;
     000A 00rr                      1- 2296     	MOVAR	_BPHCON
                                    1- 2297     	.line	504, "main.c"; 	ABPLCON = 0xFF;
     000B 00rr                      1- 2298     	MOVAR	_ABPLCON
                                    1- 2299     	.line	506, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000C 2101                      1- 2300     	MOVIA	0x01
     000D 00rr                      1- 2301     	MOVAR	_INTE
                                    1- 2302     	.line	508, "main.c"; 	PCON1 = C_TMR0_Dis;
     000E 0200                      1- 2303     	CLRA	
     000F 000r                      1- 2304     	IOST	_PCON1
                                    1- 2305     	.line	510, "main.c"; 	TMR0 = 55;
     0010 2137                      1- 2306     	MOVIA	0x37
     0011 00rr                      1- 2307     	MOVAR	_TMR0
                                    1- 2308     	.line	511, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0012 2101                      1- 2309     	MOVIA	0x01
     0013 0003                      1- 2310     	T0MD	
                                    1- 2311     	.line	513, "main.c"; 	PCON1 = C_TMR0_En;
     0014 000r                      1- 2312     	IOST	_PCON1
                                    1- 2313     	.line	516, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0015 2188                      1- 2314     	MOVIA	0x88
     0016 00rr                      1- 2315     	MOVAR	_PCON
                                    1- 2316     	.line	519, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0017 2101                      1- 2317     	MOVIA	0x01
     0018 000r                      1- 2318     	IOST	_PCON1
                                    1- 2319     	.line	520, "main.c"; 	ENI();
     0019 0004                      1- 2320     	ENI
                                    1- 2321     	.line	521, "main.c"; 	}
                                    1- 2322     	RETURN	
     001A 0010                      3-   40 m1      ret
                                    1- 2323     ; exit point of _initSys
                                    1- 2325     ;***
                                    1- 2326     ;  pBlock Stats: dbName = C
                                    1- 2327     ;***
                                    1- 2328     ;has an exit
                                    1- 2329     ;functions called:
                                    1- 2330     ;   _keyRead
                                    1- 2331     ;   _setMaxDuty
                                    1- 2332     ;   _powerOff
                                    1- 2333     ;   _setMaxDuty
                                    1- 2334     ;   _keyRead
                                    1- 2335     ;   _setMaxDuty
                                    1- 2336     ;   _powerOff
                                    1- 2337     ;   _setMaxDuty
                                    1- 2338     ;1 compiler assigned register :
                                    1- 2339     ;   r0x1054
                                    1- 2340     ;; Starting pCode block
                                    1- 2341     .segment "code"; module=main, function=_keyCtr
                                    1- 2343     ;local variable name mapping:
     0000                           1- 2345     _keyCtr:
                                    1- 2346     ; 2 exit points
                                    1- 2347     	.line	427, "main.c"; 	char kclick = keyRead(0x20 & (~PORTA));
                                    1- 2348     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 2349     	COMR	_PORTA,W
                                    1- 2350     	BANKSEL	r0x1054
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 2351     	MOVAR	r0x1054
     0004 2120                      1- 2352     	MOVIA	0x20
     0005 10rr                      1- 2353     	ANDAR	r0x1054,F
     0006 01rr                      1- 2354     	MOVR	r0x1054,W
                                    1- 2355     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2356     	BANKSEL	r0x1054
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2357     	MOVAR	r0x1054
                                    1- 2358     	.line	428, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 2359     	XORIA	0x01
     000B 0903                      1- 2360     	BTRSS	STATUS,2
                                    1- 2361     	MGOTO	_00534_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2362     	.line	431, "main.c"; 	ledLightTime = 0;
                                    1- 2363     	BANKSEL	_ledLightTime
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 2364     	CLRR	_ledLightTime
                                    1- 2365     	.line	432, "main.c"; 	count5S = 0;
                                    1- 2366     	BANKSEL	_count5S
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2367     	CLRR	_count5S
     0011 02rr                      1- 2368     	CLRR	(_count5S + 1)
                                    1- 2369     	.line	433, "main.c"; 	if(workStep == 0)
                                    1- 2370     	BANKSEL	_workStep
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 2371     	MOVR	_workStep,W
     0014 0903                      1- 2372     	BTRSS	STATUS,2
                                    1- 2373     	MGOTO	_00505_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2374     	.line	435, "main.c"; 	if(showFlag)
                                    1- 2375     	BANKSEL	_Status
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 0Arr                      1- 2376     	BTRSS	_Status,4
                                    1- 2377     	MGOTO	_00502_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2378     	.line	437, "main.c"; 	ledLightTime = 0;
                                    1- 2379     	BANKSEL	_ledLightTime
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 02rr                      1- 2380     	CLRR	_ledLightTime
                                    1- 2381     	.line	438, "main.c"; 	showFlag = 0;
                                    1- 2382     	BANKSEL	_Status
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 1Err                      1- 2383     	BCR	_Status,4
                                    1- 2384     	MGOTO	_00503_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
     001E                           1- 2385     _00502_DS_:
                                    1- 2386     	.line	442, "main.c"; 	count1s = 0;
                                    1- 2387     	BANKSEL	_count1s
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 02rr                      1- 2388     	CLRR	_count1s
                                    1- 2389     	.line	443, "main.c"; 	ledLightTime = 3;
     0020 2103                      1- 2390     	MOVIA	0x03
                                    1- 2391     	BANKSEL	_ledLightTime
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 00rr                      1- 2392     	MOVAR	_ledLightTime
                                    1- 2393     	.line	444, "main.c"; 	showFlag = 1;
                                    1- 2394     	BANKSEL	_Status
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 1Arr                      1- 2395     	BSR	_Status,4
     0025                           1- 2396     _00503_DS_:
                                    1- 2397     	.line	446, "main.c"; 	return;
                                    1- 2398     	MGOTO	_00536_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
     0026                           1- 2399     _00505_DS_:
                                    1- 2400     	.line	448, "main.c"; 	if(++workStep > 6)
                                    1- 2401     	BANKSEL	_workStep
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 05rr                      1- 2402     	INCR	_workStep,F
                                    1- 2403     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2404     ;;unsigned compare: left >= lit (0x7=7), size=1
     0028 2107                      1- 2405     	MOVIA	0x07
     0029 04rr                      1- 2406     	SUBAR	_workStep,W
     002A 0803                      1- 2407     	BTRSS	STATUS,0
                                    1- 2408     	MGOTO	_00507_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2409     	.line	449, "main.c"; 	workStep = 1;
     002C 2101                      1- 2410     	MOVIA	0x01
     002D 00rr                      1- 2411     	MOVAR	_workStep
     002E                           1- 2412     _00507_DS_:
                                    1- 2413     	.line	450, "main.c"; 	if(workStep == 1)
                                    1- 2414     	BANKSEL	_workStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 2415     	MOVR	_workStep,W
     0030 2401                      1- 2416     	XORIA	0x01
     0031 0903                      1- 2417     	BTRSS	STATUS,2
                                    1- 2418     	MGOTO	_00523_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2419     	.line	451, "main.c"; 	maxDuty = 40;
     0033 2128                      1- 2420     	MOVIA	0x28
                                    1- 2421     	BANKSEL	_maxDuty
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 2422     	MOVAR	_maxDuty
                                    1- 2423     	MGOTO	_00524_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037                           1- 2424     _00523_DS_:
                                    1- 2425     	.line	452, "main.c"; 	else if(workStep == 2)
                                    1- 2426     	BANKSEL	_workStep
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 01rr                      1- 2427     	MOVR	_workStep,W
     0039 2402                      1- 2428     	XORIA	0x02
     003A 0903                      1- 2429     	BTRSS	STATUS,2
                                    1- 2430     	MGOTO	_00520_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2431     	.line	453, "main.c"; 	maxDuty = 42;
     003C 212A                      1- 2432     	MOVIA	0x2a
                                    1- 2433     	BANKSEL	_maxDuty
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 00rr                      1- 2434     	MOVAR	_maxDuty
                                    1- 2435     	MGOTO	_00524_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
     0040                           1- 2436     _00520_DS_:
                                    1- 2437     	.line	454, "main.c"; 	else if(workStep == 3)
                                    1- 2438     	BANKSEL	_workStep
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 01rr                      1- 2439     	MOVR	_workStep,W
     0042 2403                      1- 2440     	XORIA	0x03
     0043 0903                      1- 2441     	BTRSS	STATUS,2
                                    1- 2442     	MGOTO	_00517_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2443     	.line	455, "main.c"; 	maxDuty = 44;
     0045 212C                      1- 2444     	MOVIA	0x2c
                                    1- 2445     	BANKSEL	_maxDuty
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1- 2446     	MOVAR	_maxDuty
                                    1- 2447     	MGOTO	_00524_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049                           1- 2448     _00517_DS_:
                                    1- 2449     	.line	456, "main.c"; 	else if(workStep == 4)
                                    1- 2450     	BANKSEL	_workStep
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 01rr                      1- 2451     	MOVR	_workStep,W
     004B 2404                      1- 2452     	XORIA	0x04
     004C 0903                      1- 2453     	BTRSS	STATUS,2
                                    1- 2454     	MGOTO	_00514_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2455     	.line	457, "main.c"; 	maxDuty = 46;
     004E 212E                      1- 2456     	MOVIA	0x2e
                                    1- 2457     	BANKSEL	_maxDuty
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 00rr                      1- 2458     	MOVAR	_maxDuty
                                    1- 2459     	MGOTO	_00524_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
     0052                           1- 2460     _00514_DS_:
                                    1- 2461     	.line	458, "main.c"; 	else if(workStep == 5)
                                    1- 2462     	BANKSEL	_workStep
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1- 2463     	MOVR	_workStep,W
     0054 2405                      1- 2464     	XORIA	0x05
     0055 0903                      1- 2465     	BTRSS	STATUS,2
                                    1- 2466     	MGOTO	_00511_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2467     	.line	459, "main.c"; 	maxDuty = 48;
     0057 2130                      1- 2468     	MOVIA	0x30
                                    1- 2469     	BANKSEL	_maxDuty
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 00rr                      1- 2470     	MOVAR	_maxDuty
                                    1- 2471     	MGOTO	_00524_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B                           1- 2472     _00511_DS_:
                                    1- 2473     	.line	460, "main.c"; 	else if(workStep == 6)
                                    1- 2474     	BANKSEL	_workStep
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 01rr                      1- 2475     	MOVR	_workStep,W
     005D 2406                      1- 2476     	XORIA	0x06
     005E 0903                      1- 2477     	BTRSS	STATUS,2
                                    1- 2478     	MGOTO	_00524_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2479     	.line	461, "main.c"; 	maxDuty = 50;
     0060 2132                      1- 2480     	MOVIA	0x32
                                    1- 2481     	BANKSEL	_maxDuty
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 00rr                      1- 2482     	MOVAR	_maxDuty
     0063                           1- 2483     _00524_DS_:
                                    1- 2484     	.line	462, "main.c"; 	setMaxDuty();
                                    1- 2485     	MCALL	_setMaxDuty
     0063 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2486     	MGOTO	_00536_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
     0065                           1- 2487     _00534_DS_:
                                    1- 2488     	.line	464, "main.c"; 	else if(kclick == 2)
                                    1- 2489     	BANKSEL	r0x1054
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 01rr                      1- 2490     	MOVR	r0x1054,W
     0067 2402                      1- 2491     	XORIA	0x02
     0068 0903                      1- 2492     	BTRSS	STATUS,2
                                    1- 2493     	MGOTO	_00536_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2494     	.line	466, "main.c"; 	if(workStep > 0)
                                    1- 2495     	BANKSEL	_workStep
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 01rr                      1- 2496     	MOVR	_workStep,W
     006C 0D03                      1- 2497     	BTRSC	STATUS,2
                                    1- 2498     	MGOTO	_00529_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2499     	.line	468, "main.c"; 	workStep = 0;
     006E 02rr                      1- 2500     	CLRR	_workStep
                                    1- 2501     	.line	469, "main.c"; 	powerOff();
                                    1- 2502     	MCALL	_powerOff
     006F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2503     	.line	470, "main.c"; 	showFlag = 0;
                                    1- 2504     	BANKSEL	_Status
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 1Err                      1- 2505     	BCR	_Status,4
                                    1- 2506     	MGOTO	_00536_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
     0073                           1- 2507     _00529_DS_:
                                    1- 2508     	.line	474, "main.c"; 	if(batValue == 0 || preBatValue == 0)
                                    1- 2509     	BANKSEL	_batValue
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 01rr                      1- 2510     	MOVR	_batValue,W
     0075 0D03                      1- 2511     	BTRSC	STATUS,2
                                    1- 2512     	MGOTO	_00525_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2513     	BANKSEL	_preBatValue
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 01rr                      1- 2514     	MOVR	_preBatValue,W
     0079 0903                      1- 2515     	BTRSS	STATUS,2
                                    1- 2516     	MGOTO	_00526_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
     007B                           1- 2517     _00525_DS_:
                                    1- 2518     	.line	476, "main.c"; 	ledLightTime = 3;
     007B 2103                      1- 2519     	MOVIA	0x03
                                    1- 2520     	BANKSEL	_ledLightTime
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 00rr                      1- 2521     	MOVAR	_ledLightTime
                                    1- 2522     	.line	477, "main.c"; 	preBatValue = 0;
                                    1- 2523     	BANKSEL	_preBatValue
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 02rr                      1- 2524     	CLRR	_preBatValue
                                    1- 2525     	.line	478, "main.c"; 	showFlag = 1;
                                    1- 2526     	BANKSEL	_Status
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 1Arr                      1- 2527     	BSR	_Status,4
                                    1- 2528     	.line	479, "main.c"; 	return;
                                    1- 2529     	MGOTO	_00536_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
     0083                           1- 2530     _00526_DS_:
                                    1- 2531     	.line	481, "main.c"; 	workStep = 1;
     0083 2101                      1- 2532     	MOVIA	0x01
                                    1- 2533     	BANKSEL	_workStep
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 00rr                      1- 2534     	MOVAR	_workStep
                                    1- 2535     	.line	482, "main.c"; 	PWM2DUTY = 80;
     0086 2150                      1- 2536     	MOVIA	0x50
     0087 00rr                      1- 2537     	SFUN	_PWM2DUTY
                                    1- 2538     	.line	483, "main.c"; 	cDuty = 80;
                                    1- 2539     	BANKSEL	_cDuty
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 00rr                      1- 2540     	MOVAR	_cDuty
                                    1- 2541     	.line	484, "main.c"; 	currentDuty = 80;
                                    1- 2542     	BANKSEL	_currentDuty
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 00rr                      1- 2543     	MOVAR	_currentDuty
                                    1- 2544     	.line	485, "main.c"; 	maxDuty = 40;
     008C 2128                      1- 2545     	MOVIA	0x28
                                    1- 2546     	BANKSEL	_maxDuty
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 00rr                      1- 2547     	MOVAR	_maxDuty
                                    1- 2548     	.line	486, "main.c"; 	setMaxDuty();
                                    1- 2549     	MCALL	_setMaxDuty
     008F 2rrr                      3-   66 m1      LCALL rom_address
     0090                           1- 2550     _00536_DS_:
                                    1- 2551     	.line	490, "main.c"; 	}
                                    1- 2552     	RETURN	
     0090 0010                      3-   40 m1      ret
                                    1- 2553     ; exit point of _keyCtr
                                    1- 2555     ;***
                                    1- 2556     ;  pBlock Stats: dbName = C
                                    1- 2557     ;***
                                    1- 2558     ;has an exit
                                    1- 2559     ;functions called:
                                    1- 2560     ;   __divuchar
                                    1- 2561     ;   _pwmInit
                                    1- 2562     ;   __divuchar
                                    1- 2563     ;   _pwmInit
                                    1- 2564     ;3 compiler assigned registers:
                                    1- 2565     ;   r0x1052
                                    1- 2566     ;   STK00
                                    1- 2567     ;   r0x1053
                                    1- 2568     ;; Starting pCode block
                                    1- 2569     .segment "code"; module=main, function=_setMaxDuty
     0000                           1- 2571     _setMaxDuty:
                                    1- 2572     ; 2 exit points
                                    1- 2573     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 2574     	.line	418, "main.c"; 	if(batValue < 50)
     0000 2132                      1- 2575     	MOVIA	0x32
                                    1- 2576     	BANKSEL	_batValue
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2577     	SUBAR	_batValue,W
     0003 0C03                      1- 2578     	BTRSC	STATUS,0
                                    1- 2579     	MGOTO	_00496_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2580     	.line	419, "main.c"; 	maxDuty = maxDuty + 10 - (batValue/10);
     0005 210A                      1- 2581     	MOVIA	0x0a
                                    1- 2582     	BANKSEL	_maxDuty
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 03rr                      1- 2583     	ADDAR	_maxDuty,W
                                    1- 2584     	BANKSEL	r0x1052
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2585     	MOVAR	r0x1052
     000A 210A                      1- 2586     	MOVIA	0x0a
     000B 00rr                      1- 2587     	MOVAR	STK00
                                    1- 2588     	BANKSEL	_batValue
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1- 2589     	MOVR	_batValue,W
                                    1- 2590     	MCALL	__divuchar
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2591     ;;1	MOVAR	r0x1053
                                    1- 2592     	BANKSEL	r0x1052
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 04rr                      1- 2593     	SUBAR	r0x1052,W
                                    1- 2594     	BANKSEL	_maxDuty
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1- 2595     	MOVAR	_maxDuty
     0013                           1- 2596     _00496_DS_:
                                    1- 2597     	.line	420, "main.c"; 	tempDuty = maxDuty;
                                    1- 2598     	BANKSEL	_maxDuty
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2599     	MOVR	_maxDuty,W
                                    1- 2600     	BANKSEL	_tempDuty
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 00rr                      1- 2601     	MOVAR	_tempDuty
                                    1- 2602     	.line	421, "main.c"; 	pwmInit();
                                    1- 2603     	MCALL	_pwmInit
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2604     	.line	422, "main.c"; 	}
                                    1- 2605     	RETURN	
     0018 0010                      3-   40 m1      ret
                                    1- 2606     ; exit point of _setMaxDuty
                                    1- 2608     ;***
                                    1- 2609     ;  pBlock Stats: dbName = C
                                    1- 2610     ;***
                                    1- 2611     ;has an exit
                                    1- 2612     ;functions called:
                                    1- 2613     ;   _setInput
                                    1- 2614     ;   _showKeyLed
                                    1- 2615     ;   __gptrget1
                                    1- 2616     ;   _showNubShiwei
                                    1- 2617     ;   __gptrget1
                                    1- 2618     ;   _showNubGewei
                                    1- 2619     ;   _setInput
                                    1- 2620     ;   _showKeyLed
                                    1- 2621     ;   __gptrget1
                                    1- 2622     ;   _showNubShiwei
                                    1- 2623     ;   __gptrget1
                                    1- 2624     ;   _showNubGewei
                                    1- 2625     ;5 compiler assigned registers:
                                    1- 2626     ;   r0x1055
                                    1- 2627     ;   r0x1056
                                    1- 2628     ;   STK01
                                    1- 2629     ;   STK00
                                    1- 2630     ;   r0x1057
                                    1- 2631     ;; Starting pCode block
                                    1- 2632     .segment "code"; module=main, function=_refreshNub
     0000                           1- 2634     _refreshNub:
                                    1- 2635     ; 2 exit points
                                    1- 2636     ;;unsigned compare: left < lit (0x384=900), size=2
                                    1- 2637     	.line	374, "main.c"; 	if(count900s >= 900)
     0000 2103                      1- 2638     	MOVIA	0x03
                                    1- 2639     	BANKSEL	_count900s
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2640     	SUBAR	(_count900s + 1),W
     0003 0903                      1- 2641     	BTRSS	STATUS,2
                                    1- 2642     	MGOTO	_00490_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
     0005 2184                      1- 2643     	MOVIA	0x84
     0006 04rr                      1- 2644     	SUBAR	_count900s,W
     0007                           1- 2645     _00490_DS_:
     0007 0803                      1- 2646     	BTRSS	STATUS,0
                                    1- 2647     	MGOTO	_00468_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2648     	.line	376, "main.c"; 	setInput();
                                    1- 2649     	MCALL	_setInput
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2650     	.line	377, "main.c"; 	return;
                                    1- 2651     	MGOTO	_00476_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
     000B                           1- 2652     _00468_DS_:
                                    1- 2653     	.line	397, "main.c"; 	tempshiweiNum = shiweiNum;
                                    1- 2654     	BANKSEL	_shiweiNum
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 01rr                      1- 2655     	MOVR	_shiweiNum,W
                                    1- 2656     	BANKSEL	_tempshiweiNum
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 2657     	MOVAR	_tempshiweiNum
                                    1- 2658     	.line	398, "main.c"; 	tempgeweiNum = geweiNum;
                                    1- 2659     	BANKSEL	_geweiNum
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 2660     	MOVR	_geweiNum,W
                                    1- 2661     	BANKSEL	_tempgeweiNum
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1- 2662     	MOVAR	_tempgeweiNum
                                    1- 2663     	.line	399, "main.c"; 	if(workStep > 0 || ledLightTime > 0)
                                    1- 2664     	BANKSEL	_workStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2665     	MOVR	_workStep,W
     0015 0903                      1- 2666     	BTRSS	STATUS,2
                                    1- 2667     	MGOTO	_00469_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2668     	BANKSEL	_ledLightTime
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 01rr                      1- 2669     	MOVR	_ledLightTime,W
     0019 0903                      1- 2670     	BTRSS	STATUS,2
     001A                           1- 2671     _00469_DS_:
                                    1- 2672     	.line	401, "main.c"; 	showKeyLed();
                                    1- 2673     	MCALL	_showKeyLed
     001A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2674     	.line	404, "main.c"; 	if(ledDeadTime > 0)
                                    1- 2675     	BANKSEL	_ledDeadTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1- 2676     	MOVR	_ledDeadTime,W
     001D 0D03                      1- 2677     	BTRSC	STATUS,2
                                    1- 2678     	MGOTO	_00473_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2679     	.line	406, "main.c"; 	tempshiweiNum = 11;
     001F 210B                      1- 2680     	MOVIA	0x0b
                                    1- 2681     	BANKSEL	_tempshiweiNum
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 2682     	MOVAR	_tempshiweiNum
                                    1- 2683     	.line	407, "main.c"; 	tempgeweiNum = 12;
     0022 210C                      1- 2684     	MOVIA	0x0c
                                    1- 2685     	BANKSEL	_tempgeweiNum
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 2686     	MOVAR	_tempgeweiNum
     0025                           1- 2687     _00473_DS_:
                                    1- 2688     	.line	410, "main.c"; 	if(firstShowCount > 0)
                                    1- 2689     	BANKSEL	_firstShowCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1- 2690     	MOVR	_firstShowCount,W
     0027 0D03                      1- 2691     	BTRSC	STATUS,2
                                    1- 2692     	MGOTO	_00475_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2693     	.line	411, "main.c"; 	tempshiweiNum = tempgeweiNum = 8;
     0029 2108                      1- 2694     	MOVIA	0x08
                                    1- 2695     	BANKSEL	_tempgeweiNum
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1- 2696     	MOVAR	_tempgeweiNum
                                    1- 2697     	BANKSEL	_tempshiweiNum
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1- 2698     	MOVAR	_tempshiweiNum
     002E                           1- 2699     _00475_DS_:
                                    1- 2700     	.line	412, "main.c"; 	showNubShiwei(numArray[tempshiweiNum]);
                                    1- 2701     	BANKSEL	_tempshiweiNum
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 2702     	MOVR	_tempshiweiNum,W
     0030 25rr                      1- 2703     	ADDIA	(_numArray + 0)
                                    1- 2704     	BANKSEL	r0x1055
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 00rr                      1- 2705     	MOVAR	r0x1055
     0033 21rr                      1- 2706     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0034 0C03                      1- 2707     	BTRSC	STATUS,0
     0035 2501                      1- 2708     	ADDIA	0x01
                                    1- 2709     	BANKSEL	r0x1056
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 00rr                      1- 2710     	MOVAR	r0x1056
                                    1- 2711     	BANKSEL	r0x1055
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 01rr                      1- 2712     	MOVR	r0x1055,W
     003A 00rr                      1- 2713     	MOVAR	STK01
                                    1- 2714     	BANKSEL	r0x1056
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 01rr                      1- 2715     	MOVR	r0x1056,W
     003D 00rr                      1- 2716     	MOVAR	STK00
     003E 2100                      1- 2717     	MOVIA	0x00
                                    1- 2718     	MCALL	__gptrget1
     003F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2719     ;;100	MOVAR	r0x1057
                                    1- 2720     	MCALL	_showNubShiwei
     0040 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2721     	.line	413, "main.c"; 	showNubGewei(numArray[tempgeweiNum]);
                                    1- 2722     	BANKSEL	_tempgeweiNum
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 01rr                      1- 2723     	MOVR	_tempgeweiNum,W
     0043 25rr                      1- 2724     	ADDIA	(_numArray + 0)
                                    1- 2725     	BANKSEL	r0x1055
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 2726     	MOVAR	r0x1055
     0046 21rr                      1- 2727     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0047 0C03                      1- 2728     	BTRSC	STATUS,0
     0048 2501                      1- 2729     	ADDIA	0x01
                                    1- 2730     	BANKSEL	r0x1056
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 2731     	MOVAR	r0x1056
                                    1- 2732     	BANKSEL	r0x1055
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 01rr                      1- 2733     	MOVR	r0x1055,W
     004D 00rr                      1- 2734     	MOVAR	STK01
                                    1- 2735     	BANKSEL	r0x1056
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1- 2736     	MOVR	r0x1056,W
     0050 00rr                      1- 2737     	MOVAR	STK00
     0051 2100                      1- 2738     	MOVIA	0x00
                                    1- 2739     	MCALL	__gptrget1
     0052 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2740     ;;99	MOVAR	r0x1057
                                    1- 2741     	MCALL	_showNubGewei
     0053 2rrr                      3-   66 m1      LCALL rom_address
     0054                           1- 2742     _00476_DS_:
                                    1- 2743     	.line	414, "main.c"; 	}
                                    1- 2744     	RETURN	
     0054 0010                      3-   40 m1      ret
                                    1- 2745     ; exit point of _refreshNub
                                    1- 2747     ;***
                                    1- 2748     ;  pBlock Stats: dbName = C
                                    1- 2749     ;***
                                    1- 2750     ;functions called:
                                    1- 2751     ;   __divuchar
                                    1- 2752     ;   __moduchar
                                    1- 2753     ;   _pwmStop
                                    1- 2754     ;   _pwm1Stop
                                    1- 2755     ;   _pwm1Init
                                    1- 2756     ;   _pwm1Stop
                                    1- 2757     ;   __divuchar
                                    1- 2758     ;   __moduchar
                                    1- 2759     ;   _pwmStop
                                    1- 2760     ;   _pwm1Stop
                                    1- 2761     ;   _pwm1Init
                                    1- 2762     ;   _pwm1Stop
                                    1- 2763     ;6 compiler assigned registers:
                                    1- 2764     ;   STK00
                                    1- 2765     ;   r0x1058
                                    1- 2766     ;   r0x1059
                                    1- 2767     ;   r0x105A
                                    1- 2768     ;   r0x105B
                                    1- 2769     ;   r0x105C
                                    1- 2770     ;; Starting pCode block
                                    1- 2771     .segment "code"; module=main, function=_chrgCtr
                                    1- 2773     ;local variable name mapping:
     0000                           1- 2775     _chrgCtr:
                                    1- 2776     ; 0 exit points
                                    1- 2777     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2778     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1- 2779     	.line	249, "main.c"; 	if(preBatValue > 99)
     0000 2164                      1- 2780     	MOVIA	0x64
                                    1- 2781     	BANKSEL	_preBatValue
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2782     	SUBAR	_preBatValue,W
     0003 0803                      1- 2783     	BTRSS	STATUS,0
                                    1- 2784     	MGOTO	_00319_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2785     	.line	251, "main.c"; 	shiweiNum = geweiNum = 9;
     0005 2109                      1- 2786     	MOVIA	0x09
                                    1- 2787     	BANKSEL	_geweiNum
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 2788     	MOVAR	_geweiNum
                                    1- 2789     	BANKSEL	_shiweiNum
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2790     	MOVAR	_shiweiNum
                                    1- 2791     	MGOTO	_00320_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
     000B                           1- 2792     _00319_DS_:
                                    1- 2793     	.line	255, "main.c"; 	shiweiNum = preBatValue/10;
     000B 210A                      1- 2794     	MOVIA	0x0a
     000C 00rr                      1- 2795     	MOVAR	STK00
                                    1- 2796     	BANKSEL	_preBatValue
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 2797     	MOVR	_preBatValue,W
                                    1- 2798     	MCALL	__divuchar
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2799     	BANKSEL	_shiweiNum
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 2800     	MOVAR	_shiweiNum
                                    1- 2801     	.line	256, "main.c"; 	geweiNum = preBatValue%10;
     0012 210A                      1- 2802     	MOVIA	0x0a
     0013 00rr                      1- 2803     	MOVAR	STK00
                                    1- 2804     	BANKSEL	_preBatValue
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 01rr                      1- 2805     	MOVR	_preBatValue,W
                                    1- 2806     	MCALL	__moduchar
     0016 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2807     	BANKSEL	_geweiNum
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 2808     	MOVAR	_geweiNum
     0019                           1- 2809     _00320_DS_:
                                    1- 2810     	.line	258, "main.c"; 	if(workStep > 0)
                                    1- 2811     	BANKSEL	_workStep
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 2812     	MOVR	_workStep,W
     001B 0D03                      1- 2813     	BTRSC	STATUS,2
                                    1- 2814     	MGOTO	_00322_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2815     	.line	260, "main.c"; 	showFlag = 1;
                                    1- 2816     	BANKSEL	_Status
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 1Arr                      1- 2817     	BSR	_Status,4
                                    1- 2818     	.line	261, "main.c"; 	shiweiNum = 0;
                                    1- 2819     	BANKSEL	_shiweiNum
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 02rr                      1- 2820     	CLRR	_shiweiNum
                                    1- 2821     	.line	262, "main.c"; 	geweiNum = workStep;
                                    1- 2822     	BANKSEL	_workStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 2823     	MOVR	_workStep,W
                                    1- 2824     	BANKSEL	_geweiNum
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 2825     	MOVAR	_geweiNum
     0025                           1- 2826     _00322_DS_:
                                    1- 2827     	.line	264, "main.c"; 	if(0x08 & PORTA)
                                    1- 2828     	BANKSEL	_PORTA
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 09rr                      1- 2829     	BTRSS	_PORTA,3
                                    1- 2830     	MGOTO	_00370_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2831     	.line	267, "main.c"; 	chrgFlag = 1;
                                    1- 2832     	BANKSEL	_Status
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 19rr                      1- 2833     	BSR	_Status,3
                                    1- 2834     	.line	268, "main.c"; 	showFlag = 1;
     002A 1Arr                      1- 2835     	BSR	_Status,4
                                    1- 2836     	.line	269, "main.c"; 	workStep = 0;
                                    1- 2837     	BANKSEL	_workStep
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 02rr                      1- 2838     	CLRR	_workStep
                                    1- 2839     	.line	270, "main.c"; 	ledLightTime = 0;
                                    1- 2840     	BANKSEL	_ledLightTime
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 02rr                      1- 2841     	CLRR	_ledLightTime
                                    1- 2842     	.line	271, "main.c"; 	pwmStop();
                                    1- 2843     	MCALL	_pwmStop
     002F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2844     ;;unsigned compare: left < lit (0x63=99), size=1
                                    1- 2845     	.line	272, "main.c"; 	if(preBatValue < 99 && batValue >= preBatValue && count5s == 1)
     0030 2163                      1- 2846     	MOVIA	0x63
                                    1- 2847     	BANKSEL	_preBatValue
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 04rr                      1- 2848     	SUBAR	_preBatValue,W
     0033 0C03                      1- 2849     	BTRSC	STATUS,0
                                    1- 2850     	MGOTO	_00007_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
     0035 01rr                      1- 2851     	MOVR	_preBatValue,W
                                    1- 2852     	BANKSEL	_batValue
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 04rr                      1- 2853     	SUBAR	_batValue,W
     0038 0803                      1- 2854     	BTRSS	STATUS,0
                                    1- 2855     	MGOTO	_00007_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2856     	BANKSEL	_count5s
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1- 2857     	MOVR	_count5s,W
     003C 2401                      1- 2858     	XORIA	0x01
     003D 0903                      1- 2859     	BTRSS	STATUS,2
                                    1- 2860     	MGOTO	_00007_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
     003F 01rr                      1- 2861     	MOVR	(_count5s + 1),W
     0040 2400                      1- 2862     	XORIA	0x00
     0041 0903                      1- 2863     	BTRSS	STATUS,2
                                    1- 2864     	MGOTO	_00007_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2865     	.line	274, "main.c"; 	preBatValue = preBatValue+1;
                                    1- 2866     	BANKSEL	_preBatValue
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 05rr                      1- 2867     	INCR	_preBatValue,F
     0045                           1- 2868     _00007_DS_:
                                    1- 2869     	.line	276, "main.c"; 	if(batValue >= 99 || chrgFullFlag)
     0045 2163                      1- 2870     	MOVIA	0x63
                                    1- 2871     	BANKSEL	_batValue
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 04rr                      1- 2872     	SUBAR	_batValue,W
     0048 0C03                      1- 2873     	BTRSC	STATUS,0
                                    1- 2874     	MGOTO	_00361_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2875     	BANKSEL	_chrgFullFlag
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1- 2876     	MOVR	_chrgFullFlag,W
     004C 0D03                      1- 2877     	BTRSC	STATUS,2
                                    1- 2878     	MGOTO	_00362_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
     004E                           1- 2879     _00361_DS_:
                                    1- 2880     	.line	278, "main.c"; 	chrgStep = 4;
     004E 2104                      1- 2881     	MOVIA	0x04
                                    1- 2882     	BANKSEL	_chrgStep
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 00rr                      1- 2883     	MOVAR	_chrgStep
                                    1- 2884     	.line	280, "main.c"; 	if(shiweiNum == 9 &&  geweiNum == 9 && batValue >= 100 && ++countFull > 2000)
                                    1- 2885     	BANKSEL	_shiweiNum
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 01rr                      1- 2886     	MOVR	_shiweiNum,W
     0053 2409                      1- 2887     	XORIA	0x09
     0054 0903                      1- 2888     	BTRSS	STATUS,2
                                    1- 2889     	MGOTO	_00009_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2890     	BANKSEL	_geweiNum
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 01rr                      1- 2891     	MOVR	_geweiNum,W
     0058 2409                      1- 2892     	XORIA	0x09
     0059 0903                      1- 2893     	BTRSS	STATUS,2
                                    1- 2894     	MGOTO	_00009_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2895     ;;unsigned compare: left < lit (0x64=100), size=1
     005B 2164                      1- 2896     	MOVIA	0x64
                                    1- 2897     	BANKSEL	_batValue
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 04rr                      1- 2898     	SUBAR	_batValue,W
     005E 0803                      1- 2899     	BTRSS	STATUS,0
                                    1- 2900     	MGOTO	_00009_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2901     	BANKSEL	_countFull
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 05rr                      1- 2902     	INCR	_countFull,F
     0062 0D03                      1- 2903     	BTRSC	STATUS,2
     0063 05rr                      1- 2904     	INCR	(_countFull + 1),F
                                    1- 2905     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2906     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     0064 2107                      1- 2907     	MOVIA	0x07
     0065 04rr                      1- 2908     	SUBAR	(_countFull + 1),W
     0066 0903                      1- 2909     	BTRSS	STATUS,2
                                    1- 2910     	MGOTO	_00451_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
     0068 21D1                      1- 2911     	MOVIA	0xd1
     0069 04rr                      1- 2912     	SUBAR	_countFull,W
     006A                           1- 2913     _00451_DS_:
     006A 0803                      1- 2914     	BTRSS	STATUS,0
                                    1- 2915     	MGOTO	_00009_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2916     	.line	282, "main.c"; 	pwm1Stop();
                                    1- 2917     	MCALL	_pwm1Stop
     006C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2918     	.line	284, "main.c"; 	PORTB &= 0xF7;
     006D 1Drr                      1- 2919     	BCR	_PORTB,3
                                    1- 2920     	.line	285, "main.c"; 	IOSTB |= 0X08;
     006E 001r                      1- 2921     	IOSTR	_IOSTB
                                    1- 2922     	BANKSEL	r0x1058
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 00rr                      1- 2923     	MOVAR	r0x1058
     0071 19rr                      1- 2924     	BSR	r0x1058,3
     0072 01rr                      1- 2925     	MOVR	r0x1058,W
     0073 000r                      1- 2926     	IOST	_IOSTB
                                    1- 2927     	.line	286, "main.c"; 	chrgFullFlag = 1;
     0074 2101                      1- 2928     	MOVIA	0x01
                                    1- 2929     	BANKSEL	_chrgFullFlag
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 00rr                      1- 2930     	MOVAR	_chrgFullFlag
                                    1- 2931     	MGOTO	_00009_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
     0078                           1- 2932     _00362_DS_:
                                    1- 2933     	.line	292, "main.c"; 	countFull = 0;
                                    1- 2934     	BANKSEL	_countFull
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 02rr                      1- 2935     	CLRR	_countFull
     007A 02rr                      1- 2936     	CLRR	(_countFull + 1)
                                    1- 2937     	.line	293, "main.c"; 	IOSTB &= 0xF7;
     007B 001r                      1- 2938     	IOSTR	_IOSTB
                                    1- 2939     	BANKSEL	r0x1058
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 00rr                      1- 2940     	MOVAR	r0x1058
     007E 1Drr                      1- 2941     	BCR	r0x1058,3
     007F 01rr                      1- 2942     	MOVR	r0x1058,W
     0080 000r                      1- 2943     	IOST	_IOSTB
                                    1- 2944     ;;unsigned compare: left < lit (0x2=2), size=1
                                    1- 2945     	.line	295, "main.c"; 	if(preBatValue < 2)
     0081 2102                      1- 2946     	MOVIA	0x02
                                    1- 2947     	BANKSEL	_preBatValue
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 04rr                      1- 2948     	SUBAR	_preBatValue,W
     0084 0C03                      1- 2949     	BTRSC	STATUS,0
                                    1- 2950     	MGOTO	_00351_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2951     	.line	297, "main.c"; 	limitDuty = 13;
     0086 210D                      1- 2952     	MOVIA	0x0d
                                    1- 2953     	BANKSEL	r0x1058
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 00rr                      1- 2954     	MOVAR	r0x1058
                                    1- 2955     	MGOTO	_00352_DS_
     0089 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2956     ;;unsigned compare: left < lit (0x5=5), size=1
     008A                           1- 2957     _00351_DS_:
                                    1- 2958     	.line	299, "main.c"; 	else if(preBatValue < 5)
     008A 2105                      1- 2959     	MOVIA	0x05
                                    1- 2960     	BANKSEL	_preBatValue
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 04rr                      1- 2961     	SUBAR	_preBatValue,W
     008D 0C03                      1- 2962     	BTRSC	STATUS,0
                                    1- 2963     	MGOTO	_00348_DS_
     008E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2964     	.line	301, "main.c"; 	limitDuty = 14;
     008F 210E                      1- 2965     	MOVIA	0x0e
                                    1- 2966     	BANKSEL	r0x1058
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 00rr                      1- 2967     	MOVAR	r0x1058
                                    1- 2968     	MGOTO	_00352_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2969     ;;unsigned compare: left < lit (0xA=10), size=1
     0093                           1- 2970     _00348_DS_:
                                    1- 2971     	.line	303, "main.c"; 	else if(preBatValue < 10)
     0093 210A                      1- 2972     	MOVIA	0x0a
                                    1- 2973     	BANKSEL	_preBatValue
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 04rr                      1- 2974     	SUBAR	_preBatValue,W
     0096 0C03                      1- 2975     	BTRSC	STATUS,0
                                    1- 2976     	MGOTO	_00345_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2977     	.line	305, "main.c"; 	limitDuty = 16;
     0098 2110                      1- 2978     	MOVIA	0x10
                                    1- 2979     	BANKSEL	r0x1058
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 00rr                      1- 2980     	MOVAR	r0x1058
                                    1- 2981     	MGOTO	_00352_DS_
     009B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2982     ;;unsigned compare: left < lit (0x19=25), size=1
     009C                           1- 2983     _00345_DS_:
                                    1- 2984     	.line	307, "main.c"; 	else if(preBatValue < 25)
     009C 2119                      1- 2985     	MOVIA	0x19
                                    1- 2986     	BANKSEL	_preBatValue
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 04rr                      1- 2987     	SUBAR	_preBatValue,W
     009F 0C03                      1- 2988     	BTRSC	STATUS,0
                                    1- 2989     	MGOTO	_00342_DS_
     00A0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2990     	.line	309, "main.c"; 	limitDuty = 19;
     00A1 2113                      1- 2991     	MOVIA	0x13
                                    1- 2992     	BANKSEL	r0x1058
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 00rr                      1- 2993     	MOVAR	r0x1058
                                    1- 2994     	MGOTO	_00352_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2995     ;;unsigned compare: left < lit (0x28=40), size=1
     00A5                           1- 2996     _00342_DS_:
                                    1- 2997     	.line	311, "main.c"; 	else if(preBatValue < 40)
     00A5 2128                      1- 2998     	MOVIA	0x28
                                    1- 2999     	BANKSEL	_preBatValue
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 04rr                      1- 3000     	SUBAR	_preBatValue,W
     00A8 0C03                      1- 3001     	BTRSC	STATUS,0
                                    1- 3002     	MGOTO	_00339_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3003     	.line	313, "main.c"; 	limitDuty = 20;
     00AA 2114                      1- 3004     	MOVIA	0x14
                                    1- 3005     	BANKSEL	r0x1058
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 00rr                      1- 3006     	MOVAR	r0x1058
                                    1- 3007     	MGOTO	_00352_DS_
     00AD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3008     ;;unsigned compare: left < lit (0x37=55), size=1
     00AE                           1- 3009     _00339_DS_:
                                    1- 3010     	.line	315, "main.c"; 	else if(preBatValue < 55)
     00AE 2137                      1- 3011     	MOVIA	0x37
                                    1- 3012     	BANKSEL	_preBatValue
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 04rr                      1- 3013     	SUBAR	_preBatValue,W
     00B1 0C03                      1- 3014     	BTRSC	STATUS,0
                                    1- 3015     	MGOTO	_00336_DS_
     00B2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3016     	.line	317, "main.c"; 	limitDuty = 21;
     00B3 2115                      1- 3017     	MOVIA	0x15
                                    1- 3018     	BANKSEL	r0x1058
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 00rr                      1- 3019     	MOVAR	r0x1058
                                    1- 3020     	MGOTO	_00352_DS_
     00B6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3021     ;;unsigned compare: left < lit (0x50=80), size=1
     00B7                           1- 3022     _00336_DS_:
                                    1- 3023     	.line	319, "main.c"; 	else if(preBatValue < 80)
     00B7 2150                      1- 3024     	MOVIA	0x50
                                    1- 3025     	BANKSEL	_preBatValue
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 04rr                      1- 3026     	SUBAR	_preBatValue,W
     00BA 0C03                      1- 3027     	BTRSC	STATUS,0
                                    1- 3028     	MGOTO	_00333_DS_
     00BB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3029     	.line	321, "main.c"; 	limitDuty = 22;
     00BC 2116                      1- 3030     	MOVIA	0x16
                                    1- 3031     	BANKSEL	r0x1058
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 00rr                      1- 3032     	MOVAR	r0x1058
                                    1- 3033     	MGOTO	_00352_DS_
     00BF 3rrr                      3-   63 m1      LGOTO rom_address
     00C0                           1- 3034     _00333_DS_:
                                    1- 3035     	.line	325, "main.c"; 	limitDuty = 23;
     00C0 2117                      1- 3036     	MOVIA	0x17
                                    1- 3037     	BANKSEL	r0x1058
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 00rr                      1- 3038     	MOVAR	r0x1058
     00C3                           1- 3039     _00352_DS_:
                                    1- 3040     	.line	328, "main.c"; 	if(count1s == 0)
                                    1- 3041     	BANKSEL	_count1s
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 01rr                      1- 3042     	MOVR	_count1s,W
     00C5 0903                      1- 3043     	BTRSS	STATUS,2
                                    1- 3044     	MGOTO	_00009_DS_
     00C6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3045     ;;unsigned compare: left < lit (0x5=5), size=2
                                    1- 3046     	.line	330, "main.c"; 	if(R_AIN4_DATA < 5)
     00C7 2100                      1- 3047     	MOVIA	0x00
                                    1- 3048     	BANKSEL	_R_AIN4_DATA
     00C8 rrrr                      3-  110 m1      .banksel ram_address
     00C9 04rr                      1- 3049     	SUBAR	(_R_AIN4_DATA + 1),W
     00CA 0903                      1- 3050     	BTRSS	STATUS,2
                                    1- 3051     	MGOTO	_00459_DS_
     00CB 3rrr                      3-   63 m1      LGOTO rom_address
     00CC 2105                      1- 3052     	MOVIA	0x05
     00CD 04rr                      1- 3053     	SUBAR	_R_AIN4_DATA,W
     00CE                           1- 3054     _00459_DS_:
     00CE 0C03                      1- 3055     	BTRSC	STATUS,0
                                    1- 3056     	MGOTO	_00354_DS_
     00CF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3057     	.line	331, "main.c"; 	limitDuty = limitDuty + 1;
                                    1- 3058     	BANKSEL	r0x1058
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 05rr                      1- 3059     	INCR	r0x1058,F
     00D2                           1- 3060     _00354_DS_:
                                    1- 3061     	.line	332, "main.c"; 	if(maxduty > limitDuty)
                                    1- 3062     	BANKSEL	_maxduty
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 01rr                      1- 3063     	MOVR	_maxduty,W
                                    1- 3064     	BANKSEL	r0x1058
     00D4 rrrr                      3-  110 m1      .banksel ram_address
     00D5 04rr                      1- 3065     	SUBAR	r0x1058,W
     00D6 0C03                      1- 3066     	BTRSC	STATUS,0
                                    1- 3067     	MGOTO	_00356_DS_
     00D7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3068     	.line	334, "main.c"; 	maxduty = limitDuty;
     00D8 01rr                      1- 3069     	MOVR	r0x1058,W
                                    1- 3070     	BANKSEL	_maxduty
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 00rr                      1- 3071     	MOVAR	_maxduty
     00DB                           1- 3072     _00356_DS_:
                                    1- 3073     	.line	336, "main.c"; 	PWM1DUTY = maxduty;
                                    1- 3074     	BANKSEL	_maxduty
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 01rr                      1- 3075     	MOVR	_maxduty,W
     00DD 00rr                      1- 3076     	SFUN	_PWM1DUTY
                                    1- 3077     	.line	337, "main.c"; 	pwm1Init();
                                    1- 3078     	MCALL	_pwm1Init
     00DE 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3079     	.line	338, "main.c"; 	if(maxduty < limitDuty)
                                    1- 3080     	BANKSEL	r0x1058
     00DF rrrr                      3-  110 m1      .banksel ram_address
     00E0 01rr                      1- 3081     	MOVR	r0x1058,W
                                    1- 3082     	BANKSEL	_maxduty
     00E1 rrrr                      3-  110 m1      .banksel ram_address
     00E2 04rr                      1- 3083     	SUBAR	_maxduty,W
     00E3 0C03                      1- 3084     	BTRSC	STATUS,0
                                    1- 3085     	MGOTO	_00009_DS_
     00E4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3086     	.line	340, "main.c"; 	maxduty++;
     00E5 05rr                      1- 3087     	INCR	_maxduty,F
                                    1- 3088     	MGOTO	_00009_DS_
     00E6 3rrr                      3-   63 m1      LGOTO rom_address
     00E7                           1- 3089     _00370_DS_:
                                    1- 3090     	.line	348, "main.c"; 	chrgFullFlag = 0;
                                    1- 3091     	BANKSEL	_chrgFullFlag
     00E7 rrrr                      3-  110 m1      .banksel ram_address
     00E8 02rr                      1- 3092     	CLRR	_chrgFullFlag
                                    1- 3093     	.line	349, "main.c"; 	maxduty = 0;
                                    1- 3094     	BANKSEL	_maxduty
     00E9 rrrr                      3-  110 m1      .banksel ram_address
     00EA 02rr                      1- 3095     	CLRR	_maxduty
                                    1- 3096     	.line	350, "main.c"; 	countFull = 0;
                                    1- 3097     	BANKSEL	_countFull
     00EB rrrr                      3-  110 m1      .banksel ram_address
     00EC 02rr                      1- 3098     	CLRR	_countFull
     00ED 02rr                      1- 3099     	CLRR	(_countFull + 1)
                                    1- 3100     	.line	351, "main.c"; 	pwm1Stop();
                                    1- 3101     	MCALL	_pwm1Stop
     00EE 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3102     	.line	352, "main.c"; 	chrgFlag = 0;
                                    1- 3103     	BANKSEL	_Status
     00EF rrrr                      3-  110 m1      .banksel ram_address
     00F0 1Drr                      1- 3104     	BCR	_Status,3
                                    1- 3105     	.line	355, "main.c"; 	if(preBatValue > batValue + 1)
                                    1- 3106     	BANKSEL	_batValue
     00F1 rrrr                      3-  110 m1      .banksel ram_address
     00F2 01rr                      1- 3107     	MOVR	_batValue,W
                                    1- 3108     	BANKSEL	r0x1058
     00F3 rrrr                      3-  110 m1      .banksel ram_address
     00F4 00rr                      1- 3109     	MOVAR	r0x1058
                                    1- 3110     	BANKSEL	r0x1059
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 02rr                      1- 3111     	CLRR	r0x1059
                                    1- 3112     	BANKSEL	r0x1058
     00F7 rrrr                      3-  110 m1      .banksel ram_address
     00F8 05rr                      1- 3113     	INCR	r0x1058,F
     00F9 0903                      1- 3114     	BTRSS	STATUS,2
                                    1- 3115     	MGOTO	_00008_DS_
     00FA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3116     	BANKSEL	r0x1059
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 05rr                      1- 3117     	INCR	r0x1059,F
     00FD                           1- 3118     _00008_DS_:
                                    1- 3119     	BANKSEL	_preBatValue
     00FD rrrr                      3-  110 m1      .banksel ram_address
     00FE 01rr                      1- 3120     	MOVR	_preBatValue,W
                                    1- 3121     	BANKSEL	r0x105A
     00FF rrrr                      3-  110 m1      .banksel ram_address
     0100 00rr                      1- 3122     	MOVAR	r0x105A
                                    1- 3123     ;;1	CLRR	r0x105B
                                    1- 3124     	BANKSEL	r0x1059
     0101 rrrr                      3-  110 m1      .banksel ram_address
     0102 01rr                      1- 3125     	MOVR	r0x1059,W
     0103 2580                      1- 3126     	ADDIA	0x80
                                    1- 3127     	BANKSEL	r0x105C
     0104 rrrr                      3-  110 m1      .banksel ram_address
     0105 00rr                      1- 3128     	MOVAR	r0x105C
     0106 2100                      1- 3129     	MOVIA	0x00
     0107 2580                      1- 3130     	ADDIA	0x80
     0108 04rr                      1- 3131     	SUBAR	r0x105C,W
     0109 0903                      1- 3132     	BTRSS	STATUS,2
                                    1- 3133     	MGOTO	_00462_DS_
     010A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3134     	BANKSEL	r0x105A
     010B rrrr                      3-  110 m1      .banksel ram_address
     010C 01rr                      1- 3135     	MOVR	r0x105A,W
                                    1- 3136     	BANKSEL	r0x1058
     010D rrrr                      3-  110 m1      .banksel ram_address
     010E 04rr                      1- 3137     	SUBAR	r0x1058,W
     010F                           1- 3138     _00462_DS_:
     010F 0C03                      1- 3139     	BTRSC	STATUS,0
                                    1- 3140     	MGOTO	_00009_DS_
     0110 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3141     	.line	357, "main.c"; 	if(count5s == 0)
                                    1- 3142     	BANKSEL	_count5s
     0111 rrrr                      3-  110 m1      .banksel ram_address
     0112 01rr                      1- 3143     	MOVR	_count5s,W
     0113 11rr                      1- 3144     	IORAR	(_count5s + 1),W
     0114 0903                      1- 3145     	BTRSS	STATUS,2
                                    1- 3146     	MGOTO	_00009_DS_
     0115 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3147     	.line	360, "main.c"; 	preBatValue = preBatValue - 1;
                                    1- 3148     	BANKSEL	_preBatValue
     0116 rrrr                      3-  110 m1      .banksel ram_address
     0117 06rr                      1- 3149     	DECR	_preBatValue,F
     0118                           1- 3150     _00009_DS_:
                                    1- 3151     	.line	367, "main.c"; 	}
                                    1- 3152     	RETURN	
     0118 0010                      3-   40 m1      ret
                                    1- 3155     ;	code size estimation:
                                    1- 3156     ;	 1221+  364 =  1585 instructions ( 3898 byte)
                                    1- 3158     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
