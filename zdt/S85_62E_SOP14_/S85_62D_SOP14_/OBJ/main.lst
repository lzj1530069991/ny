
                    Nyquest Technology Co., Ltd.

NYASM 2.30

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_F_Quarter_VDD_Convert
                                    1-   15     	extern	_keyRead2
                                    1-   16     	extern	_refreshBat
                                    1-   17     	extern	__divuint
                                    1-   18     	extern	__divuchar
                                    1-   19     	extern	__moduchar
                                    1-   20     	extern	_PORTAbits
                                    1-   21     	extern	_PORTBbits
                                    1-   22     	extern	_PCONbits
                                    1-   23     	extern	_BWUCONbits
                                    1-   24     	extern	_ABPLCONbits
                                    1-   25     	extern	_BPHCONbits
                                    1-   26     	extern	_INTEbits
                                    1-   27     	extern	_INTFbits
                                    1-   28     	extern	_ADMDbits
                                    1-   29     	extern	_ADRbits
                                    1-   30     	extern	_ADVREFHbits
                                    1-   31     	extern	_ADCRbits
                                    1-   32     	extern	_AWUCONbits
                                    1-   33     	extern	_PACONbits
                                    1-   34     	extern	_INTEDGbits
                                    1-   35     	extern	_ANAENbits
                                    1-   36     	extern	_RFCbits
                                    1-   37     	extern	_INTE2bits
                                    1-   38     	extern	_INDF
                                    1-   39     	extern	_TMR0
                                    1-   40     	extern	_PCL
                                    1-   41     	extern	_STATUS
                                    1-   42     	extern	_FSR
                                    1-   43     	extern	_PORTA
                                    1-   44     	extern	_PORTB
                                    1-   45     	extern	_PCON
                                    1-   46     	extern	_BWUCON
                                    1-   47     	extern	_PCHBUF
                                    1-   48     	extern	_ABPLCON
                                    1-   49     	extern	_BPHCON
                                    1-   50     	extern	_INTE
                                    1-   51     	extern	_INTF
                                    1-   52     	extern	_ADMD
                                    1-   53     	extern	_ADR
                                    1-   54     	extern	_ADD
                                    1-   55     	extern	_ADVREFH
                                    1-   56     	extern	_ADCR
                                    1-   57     	extern	_AWUCON
                                    1-   58     	extern	_PACON
                                    1-   59     	extern	_INTEDG
                                    1-   60     	extern	_TMRH
                                    1-   61     	extern	_ANAEN
                                    1-   62     	extern	_RFC
                                    1-   63     	extern	_TM3RH
                                    1-   64     	extern	_INTE2
                                    1-   65     	extern	_TMR1
                                    1-   66     	extern	_T1CR1
                                    1-   67     	extern	_T1CR2
                                    1-   68     	extern	_PWM1DUTY
                                    1-   69     	extern	_PS1CV
                                    1-   70     	extern	_BZ1CR
                                    1-   71     	extern	_IRCR
                                    1-   72     	extern	_TBHP
                                    1-   73     	extern	_TBHD
                                    1-   74     	extern	_TMR2
                                    1-   75     	extern	_T2CR1
                                    1-   76     	extern	_T2CR2
                                    1-   77     	extern	_PWM2DUTY
                                    1-   78     	extern	_PS2CV
                                    1-   79     	extern	_BZ2CR
                                    1-   80     	extern	_OSCCR
                                    1-   81     	extern	_TMR3
                                    1-   82     	extern	_T3CR1
                                    1-   83     	extern	_T3CR2
                                    1-   84     	extern	_PWM3DUTY
                                    1-   85     	extern	_PS3CV
                                    1-   86     	extern	_BZ3CR
                                    1-   87     	extern	_IOSTA
                                    1-   88     	extern	_IOSTB
                                    1-   89     	extern	_APHCON
                                    1-   90     	extern	_PS0CV
                                    1-   91     	extern	_BODCON
                                    1-   92     	extern	_CMPCR
                                    1-   93     	extern	_PCON1
                                    1-   94     	extern	_T0MD
                                    1-   95     	extern	___sdcc_saved_fsr
                                    1-   96     	extern	___sdcc_saved_stk00
                                    1-   97     	extern	___sdcc_saved_stk01
                                    1-   98     	extern	__gptrget1
                                    1-   99     	extern	__mulchar
                                    1-  100     	extern	__nyc_ny8_startup
                                    1-  101     ;--------------------------------------------------------
                                    1-  102     ; global declarations
                                    1-  103     ;--------------------------------------------------------
                                    1-  104     	extern	_Delay10Us
                                    1-  105     	extern	_delay_us
                                    1-  106     	extern	_delay
                                    1-  107     	extern	_F_wait_eoc
                                    1-  108     	extern	_F_AIN6_Convert
                                    1-  109     	extern	_F_AIN2_Convert
                                    1-  110     	extern	_F_AIN0_Convert
                                    1-  111     	extern	_setShowNum
                                    1-  112     	extern	_checkBatAD
                                    1-  113     	extern	_checkOutA
                                    1-  114     	extern	_checkKeyAD
                                    1-  115     	extern	_gotoSleep
                                    1-  116     	extern	_refresh
                                    1-  117     	extern	_ind_light_disp
                                    1-  118     	extern	_pwm1Stop
                                    1-  119     	extern	_pwm1Init
                                    1-  120     	extern	_pwmStop
                                    1-  121     	extern	_pwmInit
                                    1-  122     	extern	_initAD
                                    1-  123     	extern	_initSys
                                    1-  124     	extern	_keyRead
                                    1-  125     	extern	_keyCtr
                                    1-  126     	extern	_workCtr
                                    1-  127     	extern	_chrgCtr
                                    1-  128     	extern	_powerOff
                                    1-  129     	extern	_isr
                                    1-  130     	extern	_main
                                    1-  131     	extern	_workStep
                                    1-  132     	extern	_IntFlag
                                    1-  133     	extern	_intCount
                                    1-  134     	extern	_count1s
                                    1-  135     	extern	_count900s
                                    1-  136     	extern	_closeFlag
                                    1-  137     	extern	_shiwei
                                    1-  138     	extern	_gewei
                                    1-  139     	extern	_workStepshiwei
                                    1-  140     	extern	_workStepgewei
                                    1-  141     	extern	_powerTime
                                    1-  142     	extern	_powerFlag
                                    1-  143     	extern	_keyCount2
                                    1-  144     	extern	_lockKeyFlag
                                    1-  145     	extern	_count100ms
                                    1-  146     	extern	_keyCount
                                    1-  147     	extern	_longPressFlag
                                    1-  148     	extern	_R_AIN2_DATA
                                    1-  149     	extern	_R_AIN2_DATA_LB
                                    1-  150     	extern	_R_AIN6_DATA
                                    1-  151     	extern	_R_AIN6_DATA_LB
                                    1-  152     	extern	_R_AIN4_DATA
                                    1-  153     	extern	_firstTime
                                    1-  154     	extern	_chrgStep
                                    1-  155     	extern	_chrgFlag
                                    1-  156     	extern	_sleepTime
                                    1-  157     	extern	_batValue
                                    1-  158     	extern	_showBatValue
                                    1-  159     	extern	_batTime
                                    1-  160     	extern	_subBatTime
                                    1-  161     	extern	_currentDuty
                                    1-  162     	extern	_closeCount
                                    1-  163     	extern	_overCount
                                    1-  164     	extern	_overFlag
                                    1-  165     	extern	_shanshuoTime
                                    1-  166     	extern	_zeroTime
                                    1-  167     	extern	_zeroFlag
                                    1-  168     	extern	_chrgFullFlag
                                    1-  169     	extern	_batFullTime
                                    1-  170     	extern	_keyNum
                                    1-  171     	extern	_modeStep
                                    1-  172     	extern	_beepTime
                                    1-  173     	extern	_fullLock
                                    1-  174     	extern	_count200ms
                                    1-  175     	extern	_subMin
                                    1-  176     	extern	_maxduty
                                    1-  177     	extern	_addTime
                                    1-  178     	extern	_subTime
                                    1-  179     	extern	_addFlag
                                    1-  180     	extern	_chrgWaitTime
                                    1-  181     	extern	_limitTime
                                    1-  182     	extern	_modeTime
                                    1-  183     	extern	_chrgDutyCount
                                    1-  185     	extern PSAVE
                                    1-  186     	extern SSAVE
                                    1-  187     	extern WSAVE
                                    1-  188     	extern STK04
                                    1-  189     	extern STK03
                                    1-  190     	extern STK02
                                    1-  191     	extern STK01
                                    1-  192     	extern STK00
                                    1-  194     .segment "uninit", 0x20000040
 20000040                           1-  195     PSAVE:
                                    1-  196     	.res 1
 20000041                           1-  197     SSAVE:
                                    1-  198     	.res 1
 20000042                           1-  199     WSAVE:
                                    1-  200     	.res 1
 20000043                           1-  201     STK04:
                                    1-  202     	.res 1
 20000044                           1-  203     STK03:
                                    1-  204     	.res 1
 20000045                           1-  205     STK02:
                                    1-  206     	.res 1
 20000046                           1-  207     STK01:
                                    1-  208     	.res 1
 20000047                           1-  209     STK00:
                                    1-  210     	.res 1
                                    1-  212     ;--------------------------------------------------------
                                    1-  213     ; global definitions
                                    1-  214     ;--------------------------------------------------------
                                    1-  215     ;--------------------------------------------------------
                                    1-  216     ; absolute symbol definitions
                                    1-  217     ;--------------------------------------------------------
                                    1-  218     ;--------------------------------------------------------
                                    1-  219     ; compiler-defined variables
                                    1-  220     ;--------------------------------------------------------
                                    1-  221     .segment "uninit"
     0000                           1-  222     r0x106A:
                                    1-  223     	.res	1
                                    1-  224     .segment "uninit"
     0000                           1-  225     r0x1068:
                                    1-  226     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     r0x1067:
                                    1-  229     	.res	1
                                    1-  230     .segment "uninit"
     0000                           1-  231     r0x1066:
                                    1-  232     	.res	1
                                    1-  233     .segment "uninit"
     0000                           1-  234     r0x1065:
                                    1-  235     	.res	1
                                    1-  236     .segment "uninit"
     0000                           1-  237     r0x1064:
                                    1-  238     	.res	1
                                    1-  239     .segment "uninit"
     0000                           1-  240     r0x1063:
                                    1-  241     	.res	1
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x105E:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x105F:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x1060:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x1061:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x105D:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x105B:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x105C:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x1057:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x1058:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x1051:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1052:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1053:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x1054:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x104B:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x104C:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x104D:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x1050:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x1045:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x1046:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x1047:
                                    1-  301     	.res	1
                                    1-  302     .segment "uninit"
     0000                           1-  303     r0x104A:
                                    1-  304     	.res	1
                                    1-  305     .segment "uninit"
     0000                           1-  306     r0x103F:
                                    1-  307     	.res	1
                                    1-  308     .segment "uninit"
     0000                           1-  309     r0x1040:
                                    1-  310     	.res	1
                                    1-  311     .segment "uninit"
     0000                           1-  312     r0x1041:
                                    1-  313     	.res	1
                                    1-  314     .segment "uninit"
     0000                           1-  315     r0x1044:
                                    1-  316     	.res	1
                                    1-  317     .segment "uninit"
     0000                           1-  318     r0x103B:
                                    1-  319     	.res	1
                                    1-  320     .segment "uninit"
     0000                           1-  321     r0x103A:
                                    1-  322     	.res	1
                                    1-  323     .segment "uninit"
     0000                           1-  324     r0x103C:
                                    1-  325     	.res	1
                                    1-  326     .segment "uninit"
     0000                           1-  327     r0x103D:
                                    1-  328     	.res	1
                                    1-  329     .segment "uninit"
     0000                           1-  330     r0x103E:
                                    1-  331     	.res	1
                                    1-  332     .segment "uninit"
     0000                           1-  333     r0x1039:
                                    1-  334     	.res	1
                                    1-  335     ;--------------------------------------------------------
                                    1-  336     ; initialized data
                                    1-  337     ;--------------------------------------------------------
                                    1-  339     .segment "idata"
     0000                           1-  340     _workStep:
     0000 0000                      1-  341     	dw	0x00
                                    1-  345     .segment "idata"
     0000                           1-  346     _IntFlag:
     0000 0000                      1-  347     	dw	0x00
                                    1-  351     .segment "idata"
     0000                           1-  352     _intCount:
     0000 0000                      1-  353     	dw	0x00
                                    1-  357     .segment "idata"
     0000                           1-  358     _count1s:
     0000 0000                      1-  359     	dw	0x00
                                    1-  363     .segment "idata"
     0000                           1-  364     _count900s:
     0000 0000 0000                 1-  365     	dw	0x00, 0x00
                                    1-  369     .segment "idata"
     0000                           1-  370     _closeFlag:
     0000 0000                      1-  371     	dw	0x00
                                    1-  375     .segment "idata"
     0000                           1-  376     _shiwei:
     0000 0000                      1-  377     	dw	0x00
                                    1-  381     .segment "idata"
     0000                           1-  382     _gewei:
     0000 0000                      1-  383     	dw	0x00
                                    1-  387     .segment "idata"
     0000                           1-  388     _workStepshiwei:
     0000 0000                      1-  389     	dw	0x00
                                    1-  393     .segment "idata"
     0000                           1-  394     _workStepgewei:
     0000 0000                      1-  395     	dw	0x00
                                    1-  399     .segment "idata"
     0000                           1-  400     _powerTime:
     0000 0000 0000                 1-  401     	dw	0x00, 0x00
                                    1-  405     .segment "idata"
     0000                           1-  406     _powerFlag:
     0000 0000                      1-  407     	dw	0x00
                                    1-  411     .segment "idata"
     0000                           1-  412     _keyCount2:
     0000 0000                      1-  413     	dw	0x00
                                    1-  417     .segment "idata"
     0000                           1-  418     _lockKeyFlag:
     0000 0000                      1-  419     	dw	0x00
                                    1-  423     .segment "idata"
     0000                           1-  424     _count100ms:
     0000 0000                      1-  425     	dw	0x00
                                    1-  429     .segment "idata"
     0000                           1-  430     _keyCount:
     0000 0000                      1-  431     	dw	0x00
                                    1-  435     .segment "idata"
     0000                           1-  436     _longPressFlag:
     0000 0000                      1-  437     	dw	0x00
                                    1-  441     .segment "idata"
     0000                           1-  442     _R_AIN2_DATA:
     0000 0000 0000                 1-  443     	dw	0x00, 0x00
                                    1-  447     .segment "idata"
     0000                           1-  448     _R_AIN2_DATA_LB:
     0000 0000                      1-  449     	dw	0x00
                                    1-  453     .segment "idata"
     0000                           1-  454     _R_AIN6_DATA:
     0000 0000 0000                 1-  455     	dw	0x00, 0x00
                                    1-  459     .segment "idata"
     0000                           1-  460     _R_AIN6_DATA_LB:
     0000 0000                      1-  461     	dw	0x00
                                    1-  465     .segment "idata"
     0000                           1-  466     _R_AIN4_DATA:
     0000 0000 0000                 1-  467     	dw	0x00, 0x00
                                    1-  471     .segment "idata"
     0000                           1-  472     _firstTime:
     0000 0000                      1-  473     	dw	0x00
                                    1-  477     .segment "idata"
     0000                           1-  478     _chrgStep:
     0000 0000                      1-  479     	dw	0x00
                                    1-  483     .segment "idata"
     0000                           1-  484     _chrgFlag:
     0000 0000                      1-  485     	dw	0x00
                                    1-  489     .segment "idata"
     0000                           1-  490     _sleepTime:
     0000 0000                      1-  491     	dw	0x00
                                    1-  495     .segment "idata"
     0000                           1-  496     _batValue:
     0000 0000                      1-  497     	dw	0x00
                                    1-  501     .segment "idata"
     0000                           1-  502     _showBatValue:
     0000 0000                      1-  503     	dw	0x00
                                    1-  507     .segment "idata"
     0000                           1-  508     _batTime:
     0000 0000 0000                 1-  509     	dw	0x00, 0x00
                                    1-  513     .segment "idata"
     0000                           1-  514     _subBatTime:
     0000 0000 0000                 1-  515     	dw	0x00, 0x00
                                    1-  519     .segment "idata"
     0000                           1-  520     _currentDuty:
     0000 0000                      1-  521     	dw	0x00
                                    1-  525     .segment "idata"
     0000                           1-  526     _closeCount:
     0000 0000                      1-  527     	dw	0x00
                                    1-  531     .segment "idata"
     0000                           1-  532     _overCount:
     0000 0000                      1-  533     	dw	0x00
                                    1-  537     .segment "idata"
     0000                           1-  538     _overFlag:
     0000 0000                      1-  539     	dw	0x00
                                    1-  543     .segment "idata"
     0000                           1-  544     _shanshuoTime:
     0000 0000                      1-  545     	dw	0x00
                                    1-  549     .segment "idata"
     0000                           1-  550     _zeroTime:
     0000 0000                      1-  551     	dw	0x00
                                    1-  555     .segment "idata"
     0000                           1-  556     _zeroFlag:
     0000 0000                      1-  557     	dw	0x00
                                    1-  561     .segment "idata"
     0000                           1-  562     _chrgFullFlag:
     0000 0000                      1-  563     	dw	0x00
                                    1-  567     .segment "idata"
     0000                           1-  568     _batFullTime:
     0000 0000                      1-  569     	dw	0x00
                                    1-  573     .segment "idata"
     0000                           1-  574     _keyNum:
     0000 0000                      1-  575     	dw	0x00
                                    1-  579     .segment "idata"
     0000                           1-  580     _modeStep:
     0000 0000                      1-  581     	dw	0x00
                                    1-  585     .segment "idata"
     0000                           1-  586     _beepTime:
     0000 0000                      1-  587     	dw	0x00
                                    1-  591     .segment "idata"
     0000                           1-  592     _fullLock:
     0000 0000                      1-  593     	dw	0x00
                                    1-  597     .segment "idata"
     0000                           1-  598     _count200ms:
     0000 0000                      1-  599     	dw	0x00
                                    1-  603     .segment "idata"
     0000                           1-  604     _subMin:
     0000 0000                      1-  605     	dw	0x00
                                    1-  609     .segment "idata"
     0000                           1-  610     _maxduty:
     0000 0000                      1-  611     	dw	0x00
                                    1-  615     .segment "idata"
     0000                           1-  616     _addTime:
     0000 0000                      1-  617     	dw	0x00
                                    1-  621     .segment "idata"
     0000                           1-  622     _subTime:
     0000 0000                      1-  623     	dw	0x00
                                    1-  627     .segment "idata"
     0000                           1-  628     _addFlag:
     0000 0000                      1-  629     	dw	0x00
                                    1-  633     .segment "idata"
     0000                           1-  634     _chrgWaitTime:
     0000 0000                      1-  635     	dw	0x00
                                    1-  639     .segment "idata"
     0000                           1-  640     _limitTime:
     0000 0000                      1-  641     	dw	0x00
                                    1-  645     .segment "idata"
     0000                           1-  646     _modeTime:
     0000 0000                      1-  647     	dw	0x00
                                    1-  651     .segment "idata"
     0000                           1-  652     _chrgDutyCount:
     0000 0000 0000                 1-  653     	dw	0x00, 0x00
                                    1-  657     .segment "code"
     0000                           1-  658     _table:
     0000 203F                      1-  659     	retia 0x3f
     0001 2006                      1-  660     	retia 0x06
     0002 205B                      1-  661     	retia 0x5b
     0003 204F                      1-  662     	retia 0x4f
     0004 2066                      1-  663     	retia 0x66
     0005 206D                      1-  664     	retia 0x6d
     0006 207D                      1-  665     	retia 0x7d
     0007 2007                      1-  666     	retia 0x07
     0008 207F                      1-  667     	retia 0x7f
     0009 206F                      1-  668     	retia 0x6f
     000A 2079                      1-  669     	retia 0x79
     000B 2038                      1-  670     	retia 0x38
     000C 205C                      1-  671     	retia 0x5c
                                    1-  673     ;--------------------------------------------------------
                                    1-  674     ; overlayable items in internal ram 
                                    1-  675     ;--------------------------------------------------------
                                    1-  676     ;	udata_ovr
                                    1-  677     ;--------------------------------------------------------
                                    1-  678     ; reset vector 
                                    1-  679     ;--------------------------------------------------------
                                    1-  680     ORG	0x0000
     0000 3rrr                      1-  681     	LGOTO	__nyc_ny8_startup
                                    1-  682     ;--------------------------------------------------------
                                    1-  683     ; interrupt and initialization code
                                    1-  684     ;--------------------------------------------------------
                                    1-  685     ORG 0x0008
                                    1-  686     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  688     .segment "code"
     0000                           1-  689     __sdcc_interrupt:
                                    1-  690     ;***
                                    1-  691     ;  pBlock Stats: dbName = I
                                    1-  692     ;***
                                    1-  693     ;2 compiler assigned registers:
                                    1-  694     ;   STK00
                                    1-  695     ;   STK01
                                    1-  696     ;; Starting pCode block
     0000                           1-  697     _isr:
                                    1-  698     ; 0 exit points
                                    1-  699     	.line	106, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  700     	MOVAR	WSAVE
     0001 1503                      1-  701     	SWAPR	STATUS,W
     0002 0283                      1-  702     	CLRR	STATUS
     0003 00rr                      1-  703     	MOVAR	SSAVE
     0004 010A                      1-  704     	MOVR	PCHBUF,W
     0005 028A                      1-  705     	CLRR	PCHBUF
     0006 00rr                      1-  706     	MOVAR	PSAVE
     0007 0104                      1-  707     	MOVR	FSR,W
                                    1-  708     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  709     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  710     	MOVR	STK00,W
                                    1-  711     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  712     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  713     	MOVR	STK01,W
                                    1-  714     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  715     	MOVAR	___sdcc_saved_stk01
                                    1-  716     	.line	108, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  717     	BTRSS	_INTFbits,0
                                    1-  718     	MGOTO	_00115_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  719     	.line	110, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  720     	MOVIA	0x37
     0013 03rr                      1-  721     	ADDAR	_TMR0,F
                                    1-  722     	.line	112, "main.c"; 	if(++intCount >= 125)
                                    1-  723     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  724     	INCR	_intCount,F
                                    1-  725     ;;unsigned compare: left < lit (0x7D=125), size=1
     0016 217D                      1-  726     	MOVIA	0x7d
     0017 04rr                      1-  727     	SUBAR	_intCount,W
     0018 0803                      1-  728     	BTRSS	STATUS,0
                                    1-  729     	MGOTO	_00115_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  730     	.line	114, "main.c"; 	IntFlag = 1;
     001A 2101                      1-  731     	MOVIA	0x01
                                    1-  732     	BANKSEL	_IntFlag
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  733     	MOVAR	_IntFlag
                                    1-  734     	.line	115, "main.c"; 	intCount = 0;
                                    1-  735     	BANKSEL	_intCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1-  736     	CLRR	_intCount
                                    1-  737     	.line	116, "main.c"; 	if(++count200ms > 20)
                                    1-  738     	BANKSEL	_count200ms
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1-  739     	INCR	_count200ms,F
                                    1-  740     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  741     ;;unsigned compare: left >= lit (0x15=21), size=1
     0021 2115                      1-  742     	MOVIA	0x15
     0022 04rr                      1-  743     	SUBAR	_count200ms,W
     0023 0C03                      1-  744     	BTRSC	STATUS,0
                                    1-  745     	.line	117, "main.c"; 	count200ms = 0;
     0024 02rr                      1-  746     	CLRR	_count200ms
                                    1-  747     	.line	118, "main.c"; 	if(++count1s >= 100)
                                    1-  748     	BANKSEL	_count1s
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 05rr                      1-  749     	INCR	_count1s,F
     0027 2164                      1-  750     	MOVIA	0x64
     0028 04rr                      1-  751     	SUBAR	_count1s,W
     0029 0803                      1-  752     	BTRSS	STATUS,0
                                    1-  753     	MGOTO	_00115_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  754     	.line	120, "main.c"; 	count1s = 0;
     002B 02rr                      1-  755     	CLRR	_count1s
                                    1-  756     	.line	121, "main.c"; 	if(workStep)
                                    1-  757     	BANKSEL	_workStep
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 01rr                      1-  758     	MOVR	_workStep,W
     002E 0D03                      1-  759     	BTRSC	STATUS,2
                                    1-  760     	MGOTO	_00108_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  761     	.line	123, "main.c"; 	++count900s;
                                    1-  762     	BANKSEL	_count900s
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 05rr                      1-  763     	INCR	_count900s,F
     0032 0D03                      1-  764     	BTRSC	STATUS,2
     0033 05rr                      1-  765     	INCR	(_count900s + 1),F
                                    1-  766     	MGOTO	_00115_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
     0035                           1-  767     _00108_DS_:
                                    1-  768     	.line	127, "main.c"; 	count900s = 0;
                                    1-  769     	BANKSEL	_count900s
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 02rr                      1-  770     	CLRR	_count900s
     0037 02rr                      1-  771     	CLRR	(_count900s + 1)
     0038                           1-  772     _00115_DS_:
                                    1-  773     	.line	136, "main.c"; 	if(INTFbits.PABIF)
     0038 08rr                      1-  774     	BTRSS	_INTFbits,1
                                    1-  775     	MGOTO	_00117_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  776     	.line	138, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     003A 21FD                      1-  777     	MOVIA	0xfd
     003B 00rr                      1-  778     	MOVAR	_INTF
     003C                           1-  779     _00117_DS_:
                                    1-  780     	.line	141, "main.c"; 	INTF = 0;
     003C 02rr                      1-  781     	CLRR	_INTF
                                    1-  782     	.line	143, "main.c"; 	}
                                    1-  783     	BANKSEL	___sdcc_saved_stk01
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 01rr                      1-  784     	MOVR	___sdcc_saved_stk01,W
     003F 00rr                      1-  785     	MOVAR	STK01
                                    1-  786     	BANKSEL	___sdcc_saved_stk00
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 01rr                      1-  787     	MOVR	___sdcc_saved_stk00,W
     0042 00rr                      1-  788     	MOVAR	STK00
                                    1-  789     	BANKSEL	___sdcc_saved_fsr
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 01rr                      1-  790     	MOVR	___sdcc_saved_fsr,W
     0045 0084                      1-  791     	MOVAR	FSR
     0046 01rr                      1-  792     	MOVR	PSAVE,W
     0047 008A                      1-  793     	MOVAR	PCHBUF
     0048 0283                      1-  794     	CLRR	STATUS
     0049 15rr                      1-  795     	SWAPR	SSAVE,W
     004A 0083                      1-  796     	MOVAR	STATUS
     004B 15rr                      1-  797     	SWAPR	WSAVE,F
     004C 15rr                      1-  798     	SWAPR	WSAVE,W
     004D                           1-  799     END_OF_INTERRUPT:
     004D 0011                      1-  800     	RETIE	
                                    1-  802     ;--------------------------------------------------------
                                    1-  803     ; code
                                    1-  804     ;--------------------------------------------------------
                                    1-  805     ;***
                                    1-  806     ;  pBlock Stats: dbName = M
                                    1-  807     ;***
                                    1-  808     ;has an exit
                                    1-  809     ;functions called:
                                    1-  810     ;   _initSys
                                    1-  811     ;   _initAD
                                    1-  812     ;   _ind_light_disp
                                    1-  813     ;   _refresh
                                    1-  814     ;   __gptrget1
                                    1-  815     ;   _ind_light_disp
                                    1-  816     ;   _delay_us
                                    1-  817     ;   __gptrget1
                                    1-  818     ;   _ind_light_disp
                                    1-  819     ;   _delay_us
                                    1-  820     ;   _ind_light_disp
                                    1-  821     ;   _checkBatAD
                                    1-  822     ;   _checkOutA
                                    1-  823     ;   _chrgCtr
                                    1-  824     ;   _powerOff
                                    1-  825     ;   _gotoSleep
                                    1-  826     ;   _powerOff
                                    1-  827     ;   _initSys
                                    1-  828     ;   _initAD
                                    1-  829     ;   _ind_light_disp
                                    1-  830     ;   _refresh
                                    1-  831     ;   __gptrget1
                                    1-  832     ;   _ind_light_disp
                                    1-  833     ;   _delay_us
                                    1-  834     ;   __gptrget1
                                    1-  835     ;   _ind_light_disp
                                    1-  836     ;   _delay_us
                                    1-  837     ;   _ind_light_disp
                                    1-  838     ;   _checkBatAD
                                    1-  839     ;   _checkOutA
                                    1-  840     ;   _chrgCtr
                                    1-  841     ;   _powerOff
                                    1-  842     ;   _gotoSleep
                                    1-  843     ;   _powerOff
                                    1-  844     ;3 compiler assigned registers:
                                    1-  845     ;   r0x106A
                                    1-  846     ;   STK01
                                    1-  847     ;   STK00
                                    1-  848     ;; Starting pCode block
                                    1-  849     .segment "code"; module=main, function=_main
     0000                           1-  851     _main:
                                    1-  852     ; 2 exit points
                                    1-  853     	.line	148, "main.c"; 	initSys();
                                    1-  854     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  855     	.line	149, "main.c"; 	initAD();
                                    1-  856     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  857     	.line	150, "main.c"; 	firstTime = 200;
     0002 21C8                      1-  858     	MOVIA	0xc8
                                    1-  859     	BANKSEL	_firstTime
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1-  860     	MOVAR	_firstTime
     0005                           1-  861     _00159_DS_:
                                    1-  862     	.line	153, "main.c"; 	CLRWDT();
     0005 0002                      1-  863     	clrwdt
                                    1-  864     	.line	154, "main.c"; 	if(powerFlag)
                                    1-  865     	BANKSEL	_powerFlag
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 01rr                      1-  866     	MOVR	_powerFlag,W
     0008 0D03                      1-  867     	BTRSC	STATUS,2
                                    1-  868     	MGOTO	_00129_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  869     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  870     ;;unsigned compare: left >= lit (0x1A=26), size=1
                                    1-  871     	.line	156, "main.c"; 	if(shanshuoTime > 25)
     000A 211A                      1-  872     	MOVIA	0x1a
                                    1-  873     	BANKSEL	_shanshuoTime
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 04rr                      1-  874     	SUBAR	_shanshuoTime,W
     000D 0803                      1-  875     	BTRSS	STATUS,0
                                    1-  876     	MGOTO	_00123_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  877     	.line	158, "main.c"; 	ind_light_disp(0);
     000F 2100                      1-  878     	MOVIA	0x00
                                    1-  879     	MCALL	_ind_light_disp
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  880     	.line	159, "main.c"; 	IOSTA &= 0xDF;
     0011 001r                      1-  881     	IOSTR	_IOSTA
                                    1-  882     	BANKSEL	r0x106A
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 00rr                      1-  883     	MOVAR	r0x106A
     0014 1Err                      1-  884     	BCR	r0x106A,5
     0015 01rr                      1-  885     	MOVR	r0x106A,W
     0016 000r                      1-  886     	IOST	_IOSTA
                                    1-  887     	.line	160, "main.c"; 	COM1 = COM2 =  0;
                                    1-  888     	BANKSEL	_PORTA
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 1Err                      1-  889     	BCR	_PORTA,5
     0019 0Arr                      1-  890     	BTRSS	_PORTA,5
     001A 1Frr                      1-  891     	BCR	_PORTA,7
     001B 0Err                      1-  892     	BTRSC	_PORTA,5
     001C 1Brr                      1-  893     	BSR	_PORTA,7
                                    1-  894     	MGOTO	_00130_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
     001E                           1-  895     _00123_DS_:
                                    1-  896     	.line	164, "main.c"; 	refresh();
                                    1-  897     	MCALL	_refresh
     001E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  898     	MGOTO	_00130_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1-  899     _00129_DS_:
                                    1-  900     	.line	169, "main.c"; 	if(firstTime)
                                    1-  901     	BANKSEL	_firstTime
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1-  902     	MOVR	_firstTime,W
     0022 0D03                      1-  903     	BTRSC	STATUS,2
                                    1-  904     	MGOTO	_00126_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  905     	.line	171, "main.c"; 	COM1 = COM2 =  1;
                                    1-  906     	BANKSEL	_PORTA
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 1Arr                      1-  907     	BSR	_PORTA,5
     0026 0Arr                      1-  908     	BTRSS	_PORTA,5
     0027 1Frr                      1-  909     	BCR	_PORTA,7
     0028 0Err                      1-  910     	BTRSC	_PORTA,5
     0029 1Brr                      1-  911     	BSR	_PORTA,7
                                    1-  912     	.line	172, "main.c"; 	IOSTA |= 0x20;
     002A 001r                      1-  913     	IOSTR	_IOSTA
                                    1-  914     	BANKSEL	r0x106A
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 00rr                      1-  915     	MOVAR	r0x106A
     002D 1Arr                      1-  916     	BSR	r0x106A,5
     002E 01rr                      1-  917     	MOVR	r0x106A,W
     002F 000r                      1-  918     	IOST	_IOSTA
                                    1-  919     	.line	173, "main.c"; 	ind_light_disp(table[8]);
     0030 21rr                      1-  920     	MOVIA	(_table + 8)
     0031 00rr                      1-  921     	MOVAR	STK01
     0032 21rr                      1-  922     	MOVIA	((_table + 8) >> 8) & 0xff
     0033 00rr                      1-  923     	MOVAR	STK00
     0034 2180                      1-  924     	MOVIA	0x80
                                    1-  925     	MCALL	__gptrget1
     0035 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  926     	BANKSEL	r0x106A
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 00rr                      1-  927     	MOVAR	r0x106A
                                    1-  928     	MCALL	_ind_light_disp
     0038 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  929     	.line	174, "main.c"; 	COM1 = 0;
                                    1-  930     	BANKSEL	_PORTA
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 1Frr                      1-  931     	BCR	_PORTA,7
                                    1-  932     	.line	175, "main.c"; 	delay_us(REFRESHTIME);
     003B 2164                      1-  933     	MOVIA	0x64
                                    1-  934     	MCALL	_delay_us
     003C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  935     	.line	176, "main.c"; 	COM1 = COM2 =  1;
                                    1-  936     	BANKSEL	_PORTA
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 1Arr                      1-  937     	BSR	_PORTA,5
     003F 0Arr                      1-  938     	BTRSS	_PORTA,5
     0040 1Frr                      1-  939     	BCR	_PORTA,7
     0041 0Err                      1-  940     	BTRSC	_PORTA,5
     0042 1Brr                      1-  941     	BSR	_PORTA,7
                                    1-  942     	.line	177, "main.c"; 	IOSTA |= 0x20;
     0043 001r                      1-  943     	IOSTR	_IOSTA
                                    1-  944     	BANKSEL	r0x106A
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1-  945     	MOVAR	r0x106A
     0046 1Arr                      1-  946     	BSR	r0x106A,5
     0047 01rr                      1-  947     	MOVR	r0x106A,W
     0048 000r                      1-  948     	IOST	_IOSTA
                                    1-  949     	.line	178, "main.c"; 	ind_light_disp(table[8]);
     0049 21rr                      1-  950     	MOVIA	(_table + 8)
     004A 00rr                      1-  951     	MOVAR	STK01
     004B 21rr                      1-  952     	MOVIA	((_table + 8) >> 8) & 0xff
     004C 00rr                      1-  953     	MOVAR	STK00
     004D 2180                      1-  954     	MOVIA	0x80
                                    1-  955     	MCALL	__gptrget1
     004E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  956     	BANKSEL	r0x106A
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 00rr                      1-  957     	MOVAR	r0x106A
                                    1-  958     	MCALL	_ind_light_disp
     0051 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  959     	.line	179, "main.c"; 	IOSTA &= 0xDF;
     0052 001r                      1-  960     	IOSTR	_IOSTA
                                    1-  961     	BANKSEL	r0x106A
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 00rr                      1-  962     	MOVAR	r0x106A
     0055 1Err                      1-  963     	BCR	r0x106A,5
     0056 01rr                      1-  964     	MOVR	r0x106A,W
     0057 000r                      1-  965     	IOST	_IOSTA
                                    1-  966     	.line	180, "main.c"; 	COM2 = 0;
                                    1-  967     	BANKSEL	_PORTA
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 1Err                      1-  968     	BCR	_PORTA,5
                                    1-  969     	.line	181, "main.c"; 	delay_us(REFRESHTIME);
     005A 2164                      1-  970     	MOVIA	0x64
                                    1-  971     	MCALL	_delay_us
     005B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  972     	MGOTO	_00130_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
     005D                           1-  973     _00126_DS_:
                                    1-  974     	.line	185, "main.c"; 	ind_light_disp(0);
     005D 2100                      1-  975     	MOVIA	0x00
                                    1-  976     	MCALL	_ind_light_disp
     005E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  977     	.line	186, "main.c"; 	IOSTA &= 0xDF;
     005F 001r                      1-  978     	IOSTR	_IOSTA
                                    1-  979     	BANKSEL	r0x106A
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 00rr                      1-  980     	MOVAR	r0x106A
     0062 1Err                      1-  981     	BCR	r0x106A,5
     0063 01rr                      1-  982     	MOVR	r0x106A,W
     0064 000r                      1-  983     	IOST	_IOSTA
                                    1-  984     	.line	187, "main.c"; 	COM1 = COM2 =  0;
                                    1-  985     	BANKSEL	_PORTA
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 1Err                      1-  986     	BCR	_PORTA,5
     0067 0Arr                      1-  987     	BTRSS	_PORTA,5
     0068 1Frr                      1-  988     	BCR	_PORTA,7
     0069 0Err                      1-  989     	BTRSC	_PORTA,5
     006A 1Brr                      1-  990     	BSR	_PORTA,7
     006B                           1-  991     _00130_DS_:
                                    1-  992     	.line	191, "main.c"; 	if(!IntFlag)
                                    1-  993     	BANKSEL	_IntFlag
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 01rr                      1-  994     	MOVR	_IntFlag,W
     006D 0D03                      1-  995     	BTRSC	STATUS,2
                                    1-  996     	MGOTO	_00159_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  997     	.line	193, "main.c"; 	IntFlag = 0;
     006F 02rr                      1-  998     	CLRR	_IntFlag
                                    1-  999     	.line	195, "main.c"; 	if(beepTime > 0)
                                    1- 1000     	BANKSEL	_beepTime
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 01rr                      1- 1001     	MOVR	_beepTime,W
     0072 0D03                      1- 1002     	BTRSC	STATUS,2
                                    1- 1003     	MGOTO	_00134_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1004     	.line	197, "main.c"; 	beepTime--;
     0074 06rr                      1- 1005     	DECR	_beepTime,F
                                    1- 1006     	.line	198, "main.c"; 	PORTA |= 0x02;
                                    1- 1007     	BANKSEL	_PORTA
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 18rr                      1- 1008     	BSR	_PORTA,1
                                    1- 1009     	MGOTO	_00135_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
     0078                           1- 1010     _00134_DS_:
                                    1- 1011     	.line	202, "main.c"; 	PORTA &= 0xFD;
                                    1- 1012     	BANKSEL	_PORTA
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 1Crr                      1- 1013     	BCR	_PORTA,1
                                    1- 1014     ;;unsigned compare: left < lit (0x5=5), size=1
     007A                           1- 1015     _00135_DS_:
                                    1- 1016     	.line	204, "main.c"; 	if(count200ms < 5)
     007A 2105                      1- 1017     	MOVIA	0x05
                                    1- 1018     	BANKSEL	_count200ms
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 04rr                      1- 1019     	SUBAR	_count200ms,W
     007D 0803                      1- 1020     	BTRSS	STATUS,0
                                    1- 1021     	.line	206, "main.c"; 	checkBatAD();
                                    1- 1022     	MCALL	_checkBatAD
     007E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1023     	.line	208, "main.c"; 	checkOutA();
                                    1- 1024     	MCALL	_checkOutA
     007F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1025     	.line	209, "main.c"; 	chrgCtr();
                                    1- 1026     	MCALL	_chrgCtr
     0080 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1027     	.line	210, "main.c"; 	if(chrgFlag == 0 && batValue == 0 && workStep > 0)
                                    1- 1028     	BANKSEL	_chrgFlag
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 01rr                      1- 1029     	MOVR	_chrgFlag,W
     0083 0903                      1- 1030     	BTRSS	STATUS,2
                                    1- 1031     	MGOTO	_00141_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1032     	BANKSEL	_batValue
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 01rr                      1- 1033     	MOVR	_batValue,W
     0087 0903                      1- 1034     	BTRSS	STATUS,2
                                    1- 1035     	MGOTO	_00141_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1036     	BANKSEL	_workStep
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 01rr                      1- 1037     	MOVR	_workStep,W
     008B 0D03                      1- 1038     	BTRSC	STATUS,2
                                    1- 1039     	MGOTO	_00141_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1040     	.line	212, "main.c"; 	if(++closeCount > 250)
                                    1- 1041     	BANKSEL	_closeCount
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 05rr                      1- 1042     	INCR	_closeCount,F
                                    1- 1043     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1044     ;;unsigned compare: left >= lit (0xFB=251), size=1
     008F 21FB                      1- 1045     	MOVIA	0xfb
     0090 04rr                      1- 1046     	SUBAR	_closeCount,W
     0091 0803                      1- 1047     	BTRSS	STATUS,0
                                    1- 1048     	MGOTO	_00142_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1049     	.line	214, "main.c"; 	closeCount = 0;
     0093 02rr                      1- 1050     	CLRR	_closeCount
                                    1- 1051     	.line	215, "main.c"; 	powerOff();
                                    1- 1052     	MCALL	_powerOff
     0094 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1053     	MGOTO	_00142_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
     0096                           1- 1054     _00141_DS_:
                                    1- 1055     	.line	220, "main.c"; 	closeCount = 0;
                                    1- 1056     	BANKSEL	_closeCount
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 02rr                      1- 1057     	CLRR	_closeCount
     0098                           1- 1058     _00142_DS_:
                                    1- 1059     	.line	222, "main.c"; 	if(workStep == 0 && keyCount == 0 &&  keyCount2 == 0 && (PORTA & 0x40) == 0 && firstTime == 0 && powerFlag == 0 && chrgFlag == 0 && powerTime == 0)
                                    1- 1060     	BANKSEL	_workStep
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 01rr                      1- 1061     	MOVR	_workStep,W
     009A 0903                      1- 1062     	BTRSS	STATUS,2
                                    1- 1063     	MGOTO	_00148_DS_
     009B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1064     	BANKSEL	_keyCount
     009C rrrr                      3-  110 m1      .banksel ram_address
     009D 01rr                      1- 1065     	MOVR	_keyCount,W
     009E 0903                      1- 1066     	BTRSS	STATUS,2
                                    1- 1067     	MGOTO	_00148_DS_
     009F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1068     	BANKSEL	_keyCount2
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 01rr                      1- 1069     	MOVR	_keyCount2,W
     00A2 0903                      1- 1070     	BTRSS	STATUS,2
                                    1- 1071     	MGOTO	_00148_DS_
     00A3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1072     	BANKSEL	_PORTA
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 0Frr                      1- 1073     	BTRSC	_PORTA,6
                                    1- 1074     	MGOTO	_00148_DS_
     00A6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1075     	BANKSEL	_firstTime
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 01rr                      1- 1076     	MOVR	_firstTime,W
     00A9 0903                      1- 1077     	BTRSS	STATUS,2
                                    1- 1078     	MGOTO	_00148_DS_
     00AA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1079     	BANKSEL	_powerFlag
     00AB rrrr                      3-  110 m1      .banksel ram_address
     00AC 01rr                      1- 1080     	MOVR	_powerFlag,W
     00AD 0903                      1- 1081     	BTRSS	STATUS,2
                                    1- 1082     	MGOTO	_00148_DS_
     00AE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1083     	BANKSEL	_chrgFlag
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 01rr                      1- 1084     	MOVR	_chrgFlag,W
     00B1 0903                      1- 1085     	BTRSS	STATUS,2
                                    1- 1086     	MGOTO	_00148_DS_
     00B2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1087     	BANKSEL	_powerTime
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 01rr                      1- 1088     	MOVR	_powerTime,W
     00B5 11rr                      1- 1089     	IORAR	(_powerTime + 1),W
     00B6 0903                      1- 1090     	BTRSS	STATUS,2
                                    1- 1091     	MGOTO	_00148_DS_
     00B7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1092     	.line	224, "main.c"; 	if(++sleepTime > 20)
                                    1- 1093     	BANKSEL	_sleepTime
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 05rr                      1- 1094     	INCR	_sleepTime,F
                                    1- 1095     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1096     ;;unsigned compare: left >= lit (0x15=21), size=1
     00BA 2115                      1- 1097     	MOVIA	0x15
     00BB 04rr                      1- 1098     	SUBAR	_sleepTime,W
     00BC 0C03                      1- 1099     	BTRSC	STATUS,0
                                    1- 1100     	.line	226, "main.c"; 	gotoSleep();
                                    1- 1101     	MCALL	_gotoSleep
     00BD 2rrr                      3-   66 m1      LCALL rom_address
     00BE                           1- 1102     _00148_DS_:
                                    1- 1103     	.line	230, "main.c"; 	if(count900s >= 900)
     00BE 2103                      1- 1104     	MOVIA	0x03
                                    1- 1105     	BANKSEL	_count900s
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 04rr                      1- 1106     	SUBAR	(_count900s + 1),W
     00C1 0903                      1- 1107     	BTRSS	STATUS,2
                                    1- 1108     	MGOTO	_00230_DS_
     00C2 3rrr                      3-   63 m1      LGOTO rom_address
     00C3 2184                      1- 1109     	MOVIA	0x84
     00C4 04rr                      1- 1110     	SUBAR	_count900s,W
     00C5                           1- 1111     _00230_DS_:
     00C5 0803                      1- 1112     	BTRSS	STATUS,0
                                    1- 1113     	MGOTO	_00159_DS_
     00C6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1114     	.line	232, "main.c"; 	powerOff();
                                    1- 1115     	MCALL	_powerOff
     00C7 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1116     	MGOTO	_00159_DS_
     00C8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1117     	.line	235, "main.c"; 	}
                                    1- 1118     	RETURN	
     00C9 0010                      3-   40 m1      ret
                                    1- 1119     ; exit point of _main
                                    1- 1121     ;***
                                    1- 1122     ;  pBlock Stats: dbName = C
                                    1- 1123     ;***
                                    1- 1124     ;has an exit
                                    1- 1125     ;; Starting pCode block
                                    1- 1126     .segment "code"; module=main, function=_Delay10Us
     0000                           1- 1128     _Delay10Us:
                                    1- 1129     ; 2 exit points
                                    1- 1130     	.line	955, "main.c"; 	NOP();
     0000 0000                      1- 1131     	nop
                                    1- 1132     	.line	956, "main.c"; 	NOP();
     0001 0000                      1- 1133     	nop
                                    1- 1134     	.line	957, "main.c"; 	NOP();
     0002 0000                      1- 1135     	nop
                                    1- 1136     	.line	958, "main.c"; 	NOP();
     0003 0000                      1- 1137     	nop
                                    1- 1138     	.line	959, "main.c"; 	NOP();
     0004 0000                      1- 1139     	nop
                                    1- 1140     	.line	960, "main.c"; 	NOP();
     0005 0000                      1- 1141     	nop
                                    1- 1142     	.line	961, "main.c"; 	}
                                    1- 1143     	RETURN	
     0006 0010                      3-   40 m1      ret
                                    1- 1144     ; exit point of _Delay10Us
                                    1- 1146     ;***
                                    1- 1147     ;  pBlock Stats: dbName = C
                                    1- 1148     ;***
                                    1- 1149     ;has an exit
                                    1- 1150     ;1 compiler assigned register :
                                    1- 1151     ;   r0x1039
                                    1- 1152     ;; Starting pCode block
                                    1- 1153     .segment "code"; module=main, function=_delay_us
     0000                           1- 1155     _delay_us:
                                    1- 1156     ; 2 exit points
                                    1- 1157     	.line	943, "main.c"; 	void delay_us(u8t time)
                                    1- 1158     	BANKSEL	r0x1039
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1159     	MOVAR	r0x1039
     0002                           1- 1160     _00770_DS_:
                                    1- 1161     	.line	945, "main.c"; 	while(time)
                                    1- 1162     	BANKSEL	r0x1039
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 01rr                      1- 1163     	MOVR	r0x1039,W
     0004 0D03                      1- 1164     	BTRSC	STATUS,2
                                    1- 1165     	MGOTO	_00773_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1166     	.line	947, "main.c"; 	--time;
     0006 06rr                      1- 1167     	DECR	r0x1039,F
                                    1- 1168     	.line	948, "main.c"; 	NOP();
     0007 0000                      1- 1169     	nop
                                    1- 1170     	MGOTO	_00770_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
     0009                           1- 1171     _00773_DS_:
                                    1- 1172     	.line	950, "main.c"; 	}
                                    1- 1173     	RETURN	
     0009 0010                      3-   40 m1      ret
                                    1- 1174     ; exit point of _delay_us
                                    1- 1176     ;***
                                    1- 1177     ;  pBlock Stats: dbName = C
                                    1- 1178     ;***
                                    1- 1179     ;has an exit
                                    1- 1180     ;6 compiler assigned registers:
                                    1- 1181     ;   r0x103A
                                    1- 1182     ;   STK00
                                    1- 1183     ;   r0x103B
                                    1- 1184     ;   r0x103C
                                    1- 1185     ;   r0x103D
                                    1- 1186     ;   r0x103E
                                    1- 1187     ;; Starting pCode block
                                    1- 1188     .segment "code"; module=main, function=_delay
                                    1- 1190     ;local variable name mapping:
     0000                           1- 1195     _delay:
                                    1- 1196     ; 2 exit points
                                    1- 1197     	.line	935, "main.c"; 	void delay(int count)
                                    1- 1198     	BANKSEL	r0x103A
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1199     	MOVAR	r0x103A
     0002 01rr                      1- 1200     	MOVR	STK00,W
                                    1- 1201     	BANKSEL	r0x103B
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1202     	MOVAR	r0x103B
                                    1- 1203     	.line	938, "main.c"; 	for(i=1;i<=count;i++)
     0005 2101                      1- 1204     	MOVIA	0x01
                                    1- 1205     	BANKSEL	r0x103C
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 1206     	MOVAR	r0x103C
                                    1- 1207     	BANKSEL	r0x103D
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 1208     	CLRR	r0x103D
     000A                           1- 1209     _00754_DS_:
                                    1- 1210     	BANKSEL	r0x103A
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1- 1211     	MOVR	r0x103A,W
     000C 2580                      1- 1212     	ADDIA	0x80
                                    1- 1213     	BANKSEL	r0x103E
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 1214     	MOVAR	r0x103E
                                    1- 1215     	BANKSEL	r0x103D
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 1216     	MOVR	r0x103D,W
     0011 2580                      1- 1217     	ADDIA	0x80
                                    1- 1218     	BANKSEL	r0x103E
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1219     	SUBAR	r0x103E,W
     0014 0903                      1- 1220     	BTRSS	STATUS,2
                                    1- 1221     	MGOTO	_00765_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1222     	BANKSEL	r0x103C
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 1223     	MOVR	r0x103C,W
                                    1- 1224     	BANKSEL	r0x103B
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 04rr                      1- 1225     	SUBAR	r0x103B,W
     001A                           1- 1226     _00765_DS_:
     001A 0803                      1- 1227     	BTRSS	STATUS,0
                                    1- 1228     	MGOTO	_00756_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1229     	BANKSEL	r0x103C
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 05rr                      1- 1230     	INCR	r0x103C,F
     001E 0903                      1- 1231     	BTRSS	STATUS,2
                                    1- 1232     	MGOTO	_00001_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1233     	BANKSEL	r0x103D
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 05rr                      1- 1234     	INCR	r0x103D,F
     0022                           1- 1235     _00001_DS_:
                                    1- 1236     	MGOTO	_00754_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023                           1- 1237     _00756_DS_:
                                    1- 1238     	.line	940, "main.c"; 	}
                                    1- 1239     	RETURN	
     0023 0010                      3-   40 m1      ret
                                    1- 1240     ; exit point of _delay
                                    1- 1242     ;***
                                    1- 1243     ;  pBlock Stats: dbName = C
                                    1- 1244     ;***
                                    1- 1245     ;has an exit
                                    1- 1246     ;; Starting pCode block
                                    1- 1247     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1249     _F_wait_eoc:
                                    1- 1250     ; 2 exit points
     0000                           1- 1251     _00747_DS_:
                                    1- 1252     	.line	931, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1253     	BTRSS	_ADMDbits,5
                                    1- 1254     	MGOTO	_00747_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1255     	.line	933, "main.c"; 	}
                                    1- 1256     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1257     ; exit point of _F_wait_eoc
                                    1- 1259     ;***
                                    1- 1260     ;  pBlock Stats: dbName = C
                                    1- 1261     ;***
                                    1- 1262     ;has an exit
                                    1- 1263     ;functions called:
                                    1- 1264     ;   _F_wait_eoc
                                    1- 1265     ;   _F_wait_eoc
                                    1- 1266     ;6 compiler assigned registers:
                                    1- 1267     ;   r0x103F
                                    1- 1268     ;   r0x1040
                                    1- 1269     ;   r0x1041
                                    1- 1270     ;   r0x1042
                                    1- 1271     ;   r0x1043
                                    1- 1272     ;   r0x1044
                                    1- 1273     ;; Starting pCode block
                                    1- 1274     .segment "code"; module=main, function=_F_AIN6_Convert
                                    1- 1276     ;local variable name mapping:
     0000                           1- 1279     _F_AIN6_Convert:
                                    1- 1280     ; 2 exit points
                                    1- 1281     	.line	916, "main.c"; 	void F_AIN6_Convert(char count)
                                    1- 1282     	BANKSEL	r0x103F
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1283     	MOVAR	r0x103F
                                    1- 1284     	.line	919, "main.c"; 	ADMD  = 0x90 | C_ADC_PB1;				// Select AIN0(PA0) pad as ADC input
     0002 2196                      1- 1285     	MOVIA	0x96
     0003 00rr                      1- 1286     	MOVAR	_ADMD
                                    1- 1287     	.line	920, "main.c"; 	for(i=1;i<=count;i++)
     0004 2101                      1- 1288     	MOVIA	0x01
                                    1- 1289     	BANKSEL	r0x1040
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 00rr                      1- 1290     	MOVAR	r0x1040
     0007                           1- 1291     _00740_DS_:
                                    1- 1292     	BANKSEL	r0x1040
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1- 1293     	MOVR	r0x1040,W
                                    1- 1294     	BANKSEL	r0x103F
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1- 1295     	SUBAR	r0x103F,W
     000B 0803                      1- 1296     	BTRSS	STATUS,0
                                    1- 1297     	MGOTO	_00742_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1298     	.line	922, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000D 1Brr                      1- 1299     	BSR	_ADMDbits,6
                                    1- 1300     	.line	923, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1301     	MCALL	_F_wait_eoc
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1302     	.line	924, "main.c"; 	R_AIN6_DATA_LB += ( 0x0F & ADR); 
     000F 210F                      1- 1303     	MOVIA	0x0f
     0010 10rr                      1- 1304     	ANDAR	_ADR,W
                                    1- 1305     ;;3	MOVAR	r0x1041
                                    1- 1306     	BANKSEL	_R_AIN6_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 03rr                      1- 1307     	ADDAR	_R_AIN6_DATA_LB,F
                                    1- 1308     	.line	925, "main.c"; 	R_AIN6_DATA    += ADD; 
     0013 01rr                      1- 1309     	MOVR	_ADD,W
                                    1- 1310     	BANKSEL	r0x1041
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1311     	MOVAR	r0x1041
                                    1- 1312     ;;1	CLRR	r0x1042
                                    1- 1313     ;;111	MOVR	r0x1041,W
                                    1- 1314     ;;109	MOVAR	r0x1043
     0016 2100                      1- 1315     	MOVIA	0x00
                                    1- 1316     	BANKSEL	r0x1044
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1317     	MOVAR	r0x1044
                                    1- 1318     ;;110	MOVR	r0x1043,W
                                    1- 1319     	BANKSEL	r0x1041
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1320     	MOVR	r0x1041,W
                                    1- 1321     	BANKSEL	_R_AIN6_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1322     	ADDAR	_R_AIN6_DATA,F
                                    1- 1323     	BANKSEL	r0x1044
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1324     	MOVR	r0x1044,W
     001F 0C03                      1- 1325     	BTRSC	STATUS,0
     0020 05rr                      1- 1326     	INCR	r0x1044,W
     0021 0D03                      1- 1327     	BTRSC	STATUS,2
                                    1- 1328     	MGOTO	_00002_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1329     	BANKSEL	_R_AIN6_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1330     	ADDAR	(_R_AIN6_DATA + 1),F
     0025                           1- 1331     _00002_DS_:
                                    1- 1332     	.line	920, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1333     	BANKSEL	r0x1040
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 05rr                      1- 1334     	INCR	r0x1040,F
                                    1- 1335     	MGOTO	_00740_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 1336     _00742_DS_:
                                    1- 1337     	.line	927, "main.c"; 	}
                                    1- 1338     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 1339     ; exit point of _F_AIN6_Convert
                                    1- 1341     ;***
                                    1- 1342     ;  pBlock Stats: dbName = C
                                    1- 1343     ;***
                                    1- 1344     ;has an exit
                                    1- 1345     ;functions called:
                                    1- 1346     ;   _F_wait_eoc
                                    1- 1347     ;   _F_wait_eoc
                                    1- 1348     ;6 compiler assigned registers:
                                    1- 1349     ;   r0x1045
                                    1- 1350     ;   r0x1046
                                    1- 1351     ;   r0x1047
                                    1- 1352     ;   r0x1048
                                    1- 1353     ;   r0x1049
                                    1- 1354     ;   r0x104A
                                    1- 1355     ;; Starting pCode block
                                    1- 1356     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1358     ;local variable name mapping:
     0000                           1- 1361     _F_AIN2_Convert:
                                    1- 1362     ; 2 exit points
                                    1- 1363     	.line	903, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1364     	BANKSEL	r0x1045
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1365     	MOVAR	r0x1045
                                    1- 1366     	.line	906, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN0(PA0) pad as ADC input
     0002 2194                      1- 1367     	MOVIA	0x94
     0003 00rr                      1- 1368     	MOVAR	_ADMD
                                    1- 1369     	.line	907, "main.c"; 	for(i=1;i<=count;i++)
     0004 2101                      1- 1370     	MOVIA	0x01
                                    1- 1371     	BANKSEL	r0x1046
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 00rr                      1- 1372     	MOVAR	r0x1046
     0007                           1- 1373     _00731_DS_:
                                    1- 1374     	BANKSEL	r0x1046
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1- 1375     	MOVR	r0x1046,W
                                    1- 1376     	BANKSEL	r0x1045
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1- 1377     	SUBAR	r0x1045,W
     000B 0803                      1- 1378     	BTRSS	STATUS,0
                                    1- 1379     	MGOTO	_00733_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1380     	.line	909, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000D 1Brr                      1- 1381     	BSR	_ADMDbits,6
                                    1- 1382     	.line	910, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1383     	MCALL	_F_wait_eoc
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1384     	.line	911, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     000F 210F                      1- 1385     	MOVIA	0x0f
     0010 10rr                      1- 1386     	ANDAR	_ADR,W
                                    1- 1387     ;;3	MOVAR	r0x1047
                                    1- 1388     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 03rr                      1- 1389     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1390     	.line	912, "main.c"; 	R_AIN4_DATA    += ADD; 
     0013 01rr                      1- 1391     	MOVR	_ADD,W
                                    1- 1392     	BANKSEL	r0x1047
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1393     	MOVAR	r0x1047
                                    1- 1394     ;;1	CLRR	r0x1048
                                    1- 1395     ;;108	MOVR	r0x1047,W
                                    1- 1396     ;;106	MOVAR	r0x1049
     0016 2100                      1- 1397     	MOVIA	0x00
                                    1- 1398     	BANKSEL	r0x104A
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1399     	MOVAR	r0x104A
                                    1- 1400     ;;107	MOVR	r0x1049,W
                                    1- 1401     	BANKSEL	r0x1047
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1402     	MOVR	r0x1047,W
                                    1- 1403     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1404     	ADDAR	_R_AIN4_DATA,F
                                    1- 1405     	BANKSEL	r0x104A
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1406     	MOVR	r0x104A,W
     001F 0C03                      1- 1407     	BTRSC	STATUS,0
     0020 05rr                      1- 1408     	INCR	r0x104A,W
     0021 0D03                      1- 1409     	BTRSC	STATUS,2
                                    1- 1410     	MGOTO	_00003_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1411     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1412     	ADDAR	(_R_AIN4_DATA + 1),F
     0025                           1- 1413     _00003_DS_:
                                    1- 1414     	.line	907, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1415     	BANKSEL	r0x1046
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 05rr                      1- 1416     	INCR	r0x1046,F
                                    1- 1417     	MGOTO	_00731_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 1418     _00733_DS_:
                                    1- 1419     	.line	914, "main.c"; 	}
                                    1- 1420     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 1421     ; exit point of _F_AIN2_Convert
                                    1- 1423     ;***
                                    1- 1424     ;  pBlock Stats: dbName = C
                                    1- 1425     ;***
                                    1- 1426     ;has an exit
                                    1- 1427     ;functions called:
                                    1- 1428     ;   _F_wait_eoc
                                    1- 1429     ;   _F_wait_eoc
                                    1- 1430     ;6 compiler assigned registers:
                                    1- 1431     ;   r0x104B
                                    1- 1432     ;   r0x104C
                                    1- 1433     ;   r0x104D
                                    1- 1434     ;   r0x104E
                                    1- 1435     ;   r0x104F
                                    1- 1436     ;   r0x1050
                                    1- 1437     ;; Starting pCode block
                                    1- 1438     .segment "code"; module=main, function=_F_AIN0_Convert
                                    1- 1440     ;local variable name mapping:
     0000                           1- 1443     _F_AIN0_Convert:
                                    1- 1444     ; 2 exit points
                                    1- 1445     	.line	890, "main.c"; 	void F_AIN0_Convert(char count)
                                    1- 1446     	BANKSEL	r0x104B
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1447     	MOVAR	r0x104B
                                    1- 1448     	.line	893, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN0(PA0) pad as ADC input
     0002 2193                      1- 1449     	MOVIA	0x93
     0003 00rr                      1- 1450     	MOVAR	_ADMD
                                    1- 1451     	.line	894, "main.c"; 	for(i=1;i<=count;i++)
     0004 2101                      1- 1452     	MOVIA	0x01
                                    1- 1453     	BANKSEL	r0x104C
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 00rr                      1- 1454     	MOVAR	r0x104C
     0007                           1- 1455     _00722_DS_:
                                    1- 1456     	BANKSEL	r0x104C
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1- 1457     	MOVR	r0x104C,W
                                    1- 1458     	BANKSEL	r0x104B
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1- 1459     	SUBAR	r0x104B,W
     000B 0803                      1- 1460     	BTRSS	STATUS,0
                                    1- 1461     	MGOTO	_00724_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1462     	.line	896, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000D 1Brr                      1- 1463     	BSR	_ADMDbits,6
                                    1- 1464     	.line	897, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1465     	MCALL	_F_wait_eoc
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1466     	.line	898, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     000F 210F                      1- 1467     	MOVIA	0x0f
     0010 10rr                      1- 1468     	ANDAR	_ADR,W
                                    1- 1469     ;;3	MOVAR	r0x104D
                                    1- 1470     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 03rr                      1- 1471     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1472     	.line	899, "main.c"; 	R_AIN2_DATA    += ADD; 
     0013 01rr                      1- 1473     	MOVR	_ADD,W
                                    1- 1474     	BANKSEL	r0x104D
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1475     	MOVAR	r0x104D
                                    1- 1476     ;;1	CLRR	r0x104E
                                    1- 1477     ;;105	MOVR	r0x104D,W
                                    1- 1478     ;;103	MOVAR	r0x104F
     0016 2100                      1- 1479     	MOVIA	0x00
                                    1- 1480     	BANKSEL	r0x1050
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1481     	MOVAR	r0x1050
                                    1- 1482     ;;104	MOVR	r0x104F,W
                                    1- 1483     	BANKSEL	r0x104D
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1484     	MOVR	r0x104D,W
                                    1- 1485     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1486     	ADDAR	_R_AIN2_DATA,F
                                    1- 1487     	BANKSEL	r0x1050
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1488     	MOVR	r0x1050,W
     001F 0C03                      1- 1489     	BTRSC	STATUS,0
     0020 05rr                      1- 1490     	INCR	r0x1050,W
     0021 0D03                      1- 1491     	BTRSC	STATUS,2
                                    1- 1492     	MGOTO	_00004_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1493     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1494     	ADDAR	(_R_AIN2_DATA + 1),F
     0025                           1- 1495     _00004_DS_:
                                    1- 1496     	.line	894, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1497     	BANKSEL	r0x104C
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 05rr                      1- 1498     	INCR	r0x104C,F
                                    1- 1499     	MGOTO	_00722_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 1500     _00724_DS_:
                                    1- 1501     	.line	901, "main.c"; 	}
                                    1- 1502     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 1503     ; exit point of _F_AIN0_Convert
                                    1- 1505     ;***
                                    1- 1506     ;  pBlock Stats: dbName = C
                                    1- 1507     ;***
                                    1- 1508     ;has an exit
                                    1- 1509     ;functions called:
                                    1- 1510     ;   __divuchar
                                    1- 1511     ;   __moduchar
                                    1- 1512     ;   __divuchar
                                    1- 1513     ;   __moduchar
                                    1- 1514     ;   __divuchar
                                    1- 1515     ;   __moduchar
                                    1- 1516     ;   __divuchar
                                    1- 1517     ;   __moduchar
                                    1- 1518     ;1 compiler assigned register :
                                    1- 1519     ;   STK00
                                    1- 1520     ;; Starting pCode block
                                    1- 1521     .segment "code"; module=main, function=_setShowNum
     0000                           1- 1523     _setShowNum:
                                    1- 1524     ; 2 exit points
                                    1- 1525     	.line	866, "main.c"; 	if(workStep > 0)
                                    1- 1526     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 1527     	MOVR	_workStep,W
     0002 0D03                      1- 1528     	BTRSC	STATUS,2
                                    1- 1529     	MGOTO	_00713_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1530     	.line	868, "main.c"; 	shiwei = workStep/10;
     0004 210A                      1- 1531     	MOVIA	0x0a
     0005 00rr                      1- 1532     	MOVAR	STK00
     0006 01rr                      1- 1533     	MOVR	_workStep,W
                                    1- 1534     	MCALL	__divuchar
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1535     	BANKSEL	_shiwei
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 1536     	MOVAR	_shiwei
                                    1- 1537     	.line	869, "main.c"; 	gewei = workStep%10;
     000A 210A                      1- 1538     	MOVIA	0x0a
     000B 00rr                      1- 1539     	MOVAR	STK00
                                    1- 1540     	BANKSEL	_workStep
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1- 1541     	MOVR	_workStep,W
                                    1- 1542     	MCALL	__moduchar
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1543     	BANKSEL	_gewei
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 00rr                      1- 1544     	MOVAR	_gewei
                                    1- 1545     	MGOTO	_00715_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
     0012                           1- 1546     _00713_DS_:
                                    1- 1547     	.line	873, "main.c"; 	if(zeroFlag)
                                    1- 1548     	BANKSEL	_zeroFlag
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 1549     	MOVR	_zeroFlag,W
     0014 0D03                      1- 1550     	BTRSC	STATUS,2
                                    1- 1551     	MGOTO	_00710_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1552     	.line	875, "main.c"; 	shiwei = 11;
     0016 210B                      1- 1553     	MOVIA	0x0b
                                    1- 1554     	BANKSEL	_shiwei
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1555     	MOVAR	_shiwei
                                    1- 1556     	.line	876, "main.c"; 	gewei = 12;
     0019 210C                      1- 1557     	MOVIA	0x0c
                                    1- 1558     	BANKSEL	_gewei
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 00rr                      1- 1559     	MOVAR	_gewei
                                    1- 1560     	MGOTO	_00715_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1561     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1562     ;;unsigned compare: left >= lit (0x64=100), size=1
     001D                           1- 1563     _00710_DS_:
                                    1- 1564     	.line	880, "main.c"; 	if(showBatValue > 99)
     001D 2164                      1- 1565     	MOVIA	0x64
                                    1- 1566     	BANKSEL	_showBatValue
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 1567     	SUBAR	_showBatValue,W
     0020 0803                      1- 1568     	BTRSS	STATUS,0
                                    1- 1569     	MGOTO	_00708_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1570     	.line	881, "main.c"; 	showBatValue = 99;
     0022 2163                      1- 1571     	MOVIA	0x63
     0023 00rr                      1- 1572     	MOVAR	_showBatValue
     0024                           1- 1573     _00708_DS_:
                                    1- 1574     	.line	882, "main.c"; 	shiwei = showBatValue/10;
     0024 210A                      1- 1575     	MOVIA	0x0a
     0025 00rr                      1- 1576     	MOVAR	STK00
                                    1- 1577     	BANKSEL	_showBatValue
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 1578     	MOVR	_showBatValue,W
                                    1- 1579     	MCALL	__divuchar
     0028 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1580     	BANKSEL	_shiwei
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 1581     	MOVAR	_shiwei
                                    1- 1582     	.line	883, "main.c"; 	gewei = showBatValue%10;
     002B 210A                      1- 1583     	MOVIA	0x0a
     002C 00rr                      1- 1584     	MOVAR	STK00
                                    1- 1585     	BANKSEL	_showBatValue
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 01rr                      1- 1586     	MOVR	_showBatValue,W
                                    1- 1587     	MCALL	__moduchar
     002F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1588     	BANKSEL	_gewei
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 00rr                      1- 1589     	MOVAR	_gewei
     0032                           1- 1590     _00715_DS_:
                                    1- 1591     	.line	886, "main.c"; 	}
                                    1- 1592     	RETURN	
     0032 0010                      3-   40 m1      ret
                                    1- 1593     ; exit point of _setShowNum
                                    1- 1595     ;***
                                    1- 1596     ;  pBlock Stats: dbName = C
                                    1- 1597     ;***
                                    1- 1598     ;has an exit
                                    1- 1599     ;functions called:
                                    1- 1600     ;   _F_AIN0_Convert
                                    1- 1601     ;   __divuint
                                    1- 1602     ;   __divuint
                                    1- 1603     ;   _powerOff
                                    1- 1604     ;   _setShowNum
                                    1- 1605     ;   _F_AIN0_Convert
                                    1- 1606     ;   __divuint
                                    1- 1607     ;   __divuint
                                    1- 1608     ;   _powerOff
                                    1- 1609     ;   _setShowNum
                                    1- 1610     ;7 compiler assigned registers:
                                    1- 1611     ;   r0x1051
                                    1- 1612     ;   r0x1052
                                    1- 1613     ;   r0x1053
                                    1- 1614     ;   r0x1054
                                    1- 1615     ;   STK02
                                    1- 1616     ;   STK01
                                    1- 1617     ;   STK00
                                    1- 1618     ;; Starting pCode block
                                    1- 1619     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1621     _checkBatAD:
                                    1- 1622     ; 2 exit points
                                    1- 1623     	.line	717, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1624     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1625     	CLRR	_R_AIN2_DATA_LB
                                    1- 1626     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1627     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1628     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1629     	.line	718, "main.c"; 	F_AIN0_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1630     	MOVIA	0x08
                                    1- 1631     	MCALL	_F_AIN0_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1632     	.line	719, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1633     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1634     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1635     	ANDIA	0xf0
     000A 00rr                      1- 1636     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1637     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1638     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1639     	ANDIA	0x0f
     000E 11rr                      1- 1640     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1641     	XORAR	_R_AIN2_DATA,F
                                    1- 1642     	.line	720, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1643     	MOVIA	0xf0
                                    1- 1644     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1645     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1646     	.line	721, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1647     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1648     	BANKSEL	r0x1053
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1649     	MOVAR	r0x1053
                                    1- 1650     	BANKSEL	r0x1051
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1651     	MOVAR	r0x1051
                                    1- 1652     	BANKSEL	r0x1052
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1653     	CLRR	r0x1052
                                    1- 1654     ;;112	MOVR	r0x1051,W
     001A 2100                      1- 1655     	MOVIA	0x00
                                    1- 1656     	BANKSEL	r0x1054
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1657     	MOVAR	r0x1054
                                    1- 1658     	BANKSEL	r0x1053
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1659     	MOVR	r0x1053,W
                                    1- 1660     	BANKSEL	_R_AIN2_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1661     	ADDAR	_R_AIN2_DATA,F
                                    1- 1662     	BANKSEL	r0x1054
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1663     	MOVR	r0x1054,W
     0023 0C03                      1- 1664     	BTRSC	STATUS,0
     0024 05rr                      1- 1665     	INCR	r0x1054,W
     0025 0D03                      1- 1666     	BTRSC	STATUS,2
                                    1- 1667     	MGOTO	_00005_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1668     	BANKSEL	_R_AIN2_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1669     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1670     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1671     _00005_DS_:
                                    1- 1672     	.line	722, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0029 1C03                      1- 1673     	BCR	STATUS,0
                                    1- 1674     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1675     	RRR	(_R_AIN2_DATA + 1),F
     002C 13rr                      1- 1676     	RRR	_R_AIN2_DATA,F
                                    1- 1677     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1678     	BCR	STATUS,0
     002E 13rr                      1- 1679     	RRR	(_R_AIN2_DATA + 1),F
     002F 13rr                      1- 1680     	RRR	_R_AIN2_DATA,F
                                    1- 1681     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1682     	BCR	STATUS,0
     0031 13rr                      1- 1683     	RRR	(_R_AIN2_DATA + 1),F
     0032 13rr                      1- 1684     	RRR	_R_AIN2_DATA,F
                                    1- 1685     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1686     ;;unsigned compare: left >= lit (0x614=1556), size=2
                                    1- 1687     	.line	724, "main.c"; 	if(R_AIN2_DATA > 1555)
     0033 2106                      1- 1688     	MOVIA	0x06
     0034 04rr                      1- 1689     	SUBAR	(_R_AIN2_DATA + 1),W
     0035 0903                      1- 1690     	BTRSS	STATUS,2
                                    1- 1691     	MGOTO	_00687_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037 2114                      1- 1692     	MOVIA	0x14
     0038 04rr                      1- 1693     	SUBAR	_R_AIN2_DATA,W
     0039                           1- 1694     _00687_DS_:
     0039 0803                      1- 1695     	BTRSS	STATUS,0
                                    1- 1696     	MGOTO	_00550_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1697     	.line	726, "main.c"; 	if(++batFullTime > 250)
                                    1- 1698     	BANKSEL	_batFullTime
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 05rr                      1- 1699     	INCR	_batFullTime,F
                                    1- 1700     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1701     ;;unsigned compare: left >= lit (0xFB=251), size=1
     003D 21FB                      1- 1702     	MOVIA	0xfb
     003E 04rr                      1- 1703     	SUBAR	_batFullTime,W
     003F 0803                      1- 1704     	BTRSS	STATUS,0
                                    1- 1705     	MGOTO	_00533_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1706     	.line	728, "main.c"; 	batFullTime = 250;
     0041 21FA                      1- 1707     	MOVIA	0xfa
     0042 00rr                      1- 1708     	MOVAR	_batFullTime
                                    1- 1709     	.line	729, "main.c"; 	batValue = 100;
     0043 2164                      1- 1710     	MOVIA	0x64
                                    1- 1711     	BANKSEL	_batValue
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 1712     	MOVAR	_batValue
                                    1- 1713     	MGOTO	_00551_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
     0047                           1- 1714     _00533_DS_:
                                    1- 1715     	.line	732, "main.c"; 	batValue = 99;
     0047 2163                      1- 1716     	MOVIA	0x63
                                    1- 1717     	BANKSEL	_batValue
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1- 1718     	MOVAR	_batValue
                                    1- 1719     	MGOTO	_00551_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1720     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1721     ;;unsigned compare: left >= lit (0x5CB=1483), size=2
     004B                           1- 1722     _00550_DS_:
                                    1- 1723     	.line	735, "main.c"; 	else if(R_AIN2_DATA > 1482)		//80%
     004B 2105                      1- 1724     	MOVIA	0x05
                                    1- 1725     	BANKSEL	_R_AIN2_DATA
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 04rr                      1- 1726     	SUBAR	(_R_AIN2_DATA + 1),W
     004E 0903                      1- 1727     	BTRSS	STATUS,2
                                    1- 1728     	MGOTO	_00689_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
     0050 21CB                      1- 1729     	MOVIA	0xcb
     0051 04rr                      1- 1730     	SUBAR	_R_AIN2_DATA,W
     0052                           1- 1731     _00689_DS_:
     0052 0803                      1- 1732     	BTRSS	STATUS,0
                                    1- 1733     	MGOTO	_00547_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1734     	.line	737, "main.c"; 	batFullTime = 0;
                                    1- 1735     	BANKSEL	_batFullTime
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 02rr                      1- 1736     	CLRR	_batFullTime
                                    1- 1737     	.line	738, "main.c"; 	batValue = (R_AIN2_DATA-1482)/3;
     0056 2136                      1- 1738     	MOVIA	0x36
                                    1- 1739     	BANKSEL	_R_AIN2_DATA
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 03rr                      1- 1740     	ADDAR	_R_AIN2_DATA,W
                                    1- 1741     	BANKSEL	r0x1051
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 00rr                      1- 1742     	MOVAR	r0x1051
     005B 21FA                      1- 1743     	MOVIA	0xfa
                                    1- 1744     	BANKSEL	r0x1052
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 00rr                      1- 1745     	MOVAR	r0x1052
                                    1- 1746     	BANKSEL	_R_AIN2_DATA
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 01rr                      1- 1747     	MOVR	(_R_AIN2_DATA + 1),W
     0060 0C03                      1- 1748     	BTRSC	STATUS,0
     0061 05rr                      1- 1749     	INCR	(_R_AIN2_DATA + 1),W
     0062 0D03                      1- 1750     	BTRSC	STATUS,2
                                    1- 1751     	MGOTO	_00006_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1752     	BANKSEL	r0x1052
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 03rr                      1- 1753     	ADDAR	r0x1052,F
     0066                           1- 1754     _00006_DS_:
     0066 2103                      1- 1755     	MOVIA	0x03
     0067 00rr                      1- 1756     	MOVAR	STK02
     0068 2100                      1- 1757     	MOVIA	0x00
     0069 00rr                      1- 1758     	MOVAR	STK01
                                    1- 1759     	BANKSEL	r0x1051
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 01rr                      1- 1760     	MOVR	r0x1051,W
     006C 00rr                      1- 1761     	MOVAR	STK00
                                    1- 1762     	BANKSEL	r0x1052
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 01rr                      1- 1763     	MOVR	r0x1052,W
                                    1- 1764     	MCALL	__divuint
     006F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1765     	BANKSEL	r0x1052
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 00rr                      1- 1766     	MOVAR	r0x1052
     0072 01rr                      1- 1767     	MOVR	STK00,W
                                    1- 1768     	BANKSEL	r0x1051
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 00rr                      1- 1769     	MOVAR	r0x1051
                                    1- 1770     	BANKSEL	_batValue
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 00rr                      1- 1771     	MOVAR	_batValue
                                    1- 1772     	.line	739, "main.c"; 	batValue += 80;
     0077 2150                      1- 1773     	MOVIA	0x50
     0078 03rr                      1- 1774     	ADDAR	_batValue,F
                                    1- 1775     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1776     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1- 1777     	.line	740, "main.c"; 	if(batValue > 99)
     0079 2164                      1- 1778     	MOVIA	0x64
     007A 04rr                      1- 1779     	SUBAR	_batValue,W
     007B 0803                      1- 1780     	BTRSS	STATUS,0
                                    1- 1781     	MGOTO	_00551_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1782     	.line	741, "main.c"; 	batValue = 99;
     007D 2163                      1- 1783     	MOVIA	0x63
     007E 00rr                      1- 1784     	MOVAR	_batValue
                                    1- 1785     	MGOTO	_00551_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1786     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1787     ;;unsigned compare: left >= lit (0x53F=1343), size=2
     0080                           1- 1788     _00547_DS_:
                                    1- 1789     	.line	743, "main.c"; 	else if(R_AIN2_DATA > 1342)			
     0080 2105                      1- 1790     	MOVIA	0x05
                                    1- 1791     	BANKSEL	_R_AIN2_DATA
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 04rr                      1- 1792     	SUBAR	(_R_AIN2_DATA + 1),W
     0083 0903                      1- 1793     	BTRSS	STATUS,2
                                    1- 1794     	MGOTO	_00691_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
     0085 213F                      1- 1795     	MOVIA	0x3f
     0086 04rr                      1- 1796     	SUBAR	_R_AIN2_DATA,W
     0087                           1- 1797     _00691_DS_:
     0087 0803                      1- 1798     	BTRSS	STATUS,0
                                    1- 1799     	MGOTO	_00544_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1800     	.line	745, "main.c"; 	batValue = (R_AIN2_DATA-1332)/2;
     0089 21CC                      1- 1801     	MOVIA	0xcc
                                    1- 1802     	BANKSEL	_R_AIN2_DATA
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 03rr                      1- 1803     	ADDAR	_R_AIN2_DATA,W
                                    1- 1804     	BANKSEL	r0x1051
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 00rr                      1- 1805     	MOVAR	r0x1051
     008E 21FA                      1- 1806     	MOVIA	0xfa
                                    1- 1807     	BANKSEL	r0x1052
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 00rr                      1- 1808     	MOVAR	r0x1052
                                    1- 1809     	BANKSEL	_R_AIN2_DATA
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 01rr                      1- 1810     	MOVR	(_R_AIN2_DATA + 1),W
     0093 0C03                      1- 1811     	BTRSC	STATUS,0
     0094 05rr                      1- 1812     	INCR	(_R_AIN2_DATA + 1),W
     0095 0D03                      1- 1813     	BTRSC	STATUS,2
                                    1- 1814     	MGOTO	_00007_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1815     	BANKSEL	r0x1052
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 03rr                      1- 1816     	ADDAR	r0x1052,F
                                    1- 1817     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=0, offr=0
     0099                           1- 1818     _00007_DS_:
     0099 1C03                      1- 1819     	BCR	STATUS,0
                                    1- 1820     	BANKSEL	r0x1052
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 13rr                      1- 1821     	RRR	r0x1052,W
                                    1- 1822     	BANKSEL	r0x1054
     009C rrrr                      3-  110 m1      .banksel ram_address
     009D 00rr                      1- 1823     	MOVAR	r0x1054
                                    1- 1824     	BANKSEL	r0x1051
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 13rr                      1- 1825     	RRR	r0x1051,W
                                    1- 1826     	BANKSEL	r0x1053
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 00rr                      1- 1827     	MOVAR	r0x1053
                                    1- 1828     	BANKSEL	_batValue
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 00rr                      1- 1829     	MOVAR	_batValue
                                    1- 1830     	.line	746, "main.c"; 	batValue += 10;
     00A4 210A                      1- 1831     	MOVIA	0x0a
     00A5 03rr                      1- 1832     	ADDAR	_batValue,F
                                    1- 1833     	MGOTO	_00551_DS_
     00A6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1834     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1835     ;;unsigned compare: left >= lit (0x4F9=1273), size=2
     00A7                           1- 1836     _00544_DS_:
                                    1- 1837     	.line	748, "main.c"; 	else if(R_AIN2_DATA > 1272)			//10%
     00A7 2104                      1- 1838     	MOVIA	0x04
                                    1- 1839     	BANKSEL	_R_AIN2_DATA
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 04rr                      1- 1840     	SUBAR	(_R_AIN2_DATA + 1),W
     00AA 0903                      1- 1841     	BTRSS	STATUS,2
                                    1- 1842     	MGOTO	_00692_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
     00AC 21F9                      1- 1843     	MOVIA	0xf9
     00AD 04rr                      1- 1844     	SUBAR	_R_AIN2_DATA,W
     00AE                           1- 1845     _00692_DS_:
     00AE 0803                      1- 1846     	BTRSS	STATUS,0
                                    1- 1847     	MGOTO	_00541_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1848     	.line	750, "main.c"; 	batValue = (R_AIN2_DATA-1284)/14;
     00B0 21FC                      1- 1849     	MOVIA	0xfc
                                    1- 1850     	BANKSEL	_R_AIN2_DATA
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 03rr                      1- 1851     	ADDAR	_R_AIN2_DATA,W
                                    1- 1852     	BANKSEL	r0x1051
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 00rr                      1- 1853     	MOVAR	r0x1051
     00B5 21FA                      1- 1854     	MOVIA	0xfa
                                    1- 1855     	BANKSEL	r0x1052
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 00rr                      1- 1856     	MOVAR	r0x1052
                                    1- 1857     	BANKSEL	_R_AIN2_DATA
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 01rr                      1- 1858     	MOVR	(_R_AIN2_DATA + 1),W
     00BA 0C03                      1- 1859     	BTRSC	STATUS,0
     00BB 05rr                      1- 1860     	INCR	(_R_AIN2_DATA + 1),W
     00BC 0D03                      1- 1861     	BTRSC	STATUS,2
                                    1- 1862     	MGOTO	_00008_DS_
     00BD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1863     	BANKSEL	r0x1052
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 03rr                      1- 1864     	ADDAR	r0x1052,F
     00C0                           1- 1865     _00008_DS_:
     00C0 210E                      1- 1866     	MOVIA	0x0e
     00C1 00rr                      1- 1867     	MOVAR	STK02
     00C2 2100                      1- 1868     	MOVIA	0x00
     00C3 00rr                      1- 1869     	MOVAR	STK01
                                    1- 1870     	BANKSEL	r0x1051
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 01rr                      1- 1871     	MOVR	r0x1051,W
     00C6 00rr                      1- 1872     	MOVAR	STK00
                                    1- 1873     	BANKSEL	r0x1052
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 01rr                      1- 1874     	MOVR	r0x1052,W
                                    1- 1875     	MCALL	__divuint
     00C9 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1876     	BANKSEL	r0x1052
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 00rr                      1- 1877     	MOVAR	r0x1052
     00CC 01rr                      1- 1878     	MOVR	STK00,W
                                    1- 1879     	BANKSEL	r0x1051
     00CD rrrr                      3-  110 m1      .banksel ram_address
     00CE 00rr                      1- 1880     	MOVAR	r0x1051
                                    1- 1881     	BANKSEL	_batValue
     00CF rrrr                      3-  110 m1      .banksel ram_address
     00D0 00rr                      1- 1882     	MOVAR	_batValue
                                    1- 1883     	.line	751, "main.c"; 	batValue += 5;
     00D1 2105                      1- 1884     	MOVIA	0x05
     00D2 03rr                      1- 1885     	ADDAR	_batValue,F
                                    1- 1886     	MGOTO	_00551_DS_
     00D3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1887     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1888     ;;unsigned compare: left >= lit (0x4A8=1192), size=2
     00D4                           1- 1889     _00541_DS_:
                                    1- 1890     	.line	753, "main.c"; 	else if(R_AIN2_DATA > 1191)
     00D4 2104                      1- 1891     	MOVIA	0x04
                                    1- 1892     	BANKSEL	_R_AIN2_DATA
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 04rr                      1- 1893     	SUBAR	(_R_AIN2_DATA + 1),W
     00D7 0903                      1- 1894     	BTRSS	STATUS,2
                                    1- 1895     	MGOTO	_00693_DS_
     00D8 3rrr                      3-   63 m1      LGOTO rom_address
     00D9 21A8                      1- 1896     	MOVIA	0xa8
     00DA 04rr                      1- 1897     	SUBAR	_R_AIN2_DATA,W
     00DB                           1- 1898     _00693_DS_:
     00DB 0803                      1- 1899     	BTRSS	STATUS,0
                                    1- 1900     	MGOTO	_00538_DS_
     00DC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1901     	.line	755, "main.c"; 	batValue = (R_AIN2_DATA-1191)/16;
     00DD 2159                      1- 1902     	MOVIA	0x59
                                    1- 1903     	BANKSEL	_R_AIN2_DATA
     00DE rrrr                      3-  110 m1      .banksel ram_address
     00DF 03rr                      1- 1904     	ADDAR	_R_AIN2_DATA,W
                                    1- 1905     	BANKSEL	r0x1051
     00E0 rrrr                      3-  110 m1      .banksel ram_address
     00E1 00rr                      1- 1906     	MOVAR	r0x1051
     00E2 21FB                      1- 1907     	MOVIA	0xfb
                                    1- 1908     	BANKSEL	r0x1052
     00E3 rrrr                      3-  110 m1      .banksel ram_address
     00E4 00rr                      1- 1909     	MOVAR	r0x1052
                                    1- 1910     	BANKSEL	_R_AIN2_DATA
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 01rr                      1- 1911     	MOVR	(_R_AIN2_DATA + 1),W
     00E7 0C03                      1- 1912     	BTRSC	STATUS,0
     00E8 05rr                      1- 1913     	INCR	(_R_AIN2_DATA + 1),W
     00E9 0D03                      1- 1914     	BTRSC	STATUS,2
                                    1- 1915     	MGOTO	_00009_DS_
     00EA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1916     	BANKSEL	r0x1052
     00EB rrrr                      3-  110 m1      .banksel ram_address
     00EC 03rr                      1- 1917     	ADDAR	r0x1052,F
     00ED                           1- 1918     _00009_DS_:
                                    1- 1919     	BANKSEL	r0x1051
     00ED rrrr                      3-  110 m1      .banksel ram_address
     00EE 15rr                      1- 1920     	SWAPR	r0x1051,W
     00EF 220F                      1- 1921     	ANDIA	0x0f
                                    1- 1922     	BANKSEL	r0x1053
     00F0 rrrr                      3-  110 m1      .banksel ram_address
     00F1 00rr                      1- 1923     	MOVAR	r0x1053
                                    1- 1924     	BANKSEL	r0x1052
     00F2 rrrr                      3-  110 m1      .banksel ram_address
     00F3 15rr                      1- 1925     	SWAPR	r0x1052,W
                                    1- 1926     	BANKSEL	r0x1054
     00F4 rrrr                      3-  110 m1      .banksel ram_address
     00F5 00rr                      1- 1927     	MOVAR	r0x1054
     00F6 22F0                      1- 1928     	ANDIA	0xf0
                                    1- 1929     	BANKSEL	r0x1053
     00F7 rrrr                      3-  110 m1      .banksel ram_address
     00F8 11rr                      1- 1930     	IORAR	r0x1053,F
                                    1- 1931     	BANKSEL	r0x1054
     00F9 rrrr                      3-  110 m1      .banksel ram_address
     00FA 12rr                      1- 1932     	XORAR	r0x1054,F
                                    1- 1933     	BANKSEL	r0x1053
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 01rr                      1- 1934     	MOVR	r0x1053,W
                                    1- 1935     	BANKSEL	_batValue
     00FD rrrr                      3-  110 m1      .banksel ram_address
     00FE 00rr                      1- 1936     	MOVAR	_batValue
                                    1- 1937     	MGOTO	_00551_DS_
     00FF 3rrr                      3-   63 m1      LGOTO rom_address
     0100                           1- 1938     _00538_DS_:
                                    1- 1939     	.line	759, "main.c"; 	batValue = 0;
                                    1- 1940     	BANKSEL	_batValue
     0100 rrrr                      3-  110 m1      .banksel ram_address
     0101 02rr                      1- 1941     	CLRR	_batValue
     0102                           1- 1942     _00551_DS_:
                                    1- 1943     	.line	761, "main.c"; 	if(showBatValue == 0)
                                    1- 1944     	BANKSEL	_showBatValue
     0102 rrrr                      3-  110 m1      .banksel ram_address
     0103 01rr                      1- 1945     	MOVR	_showBatValue,W
     0104 0903                      1- 1946     	BTRSS	STATUS,2
                                    1- 1947     	MGOTO	_00553_DS_
     0105 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1948     	.line	763, "main.c"; 	showBatValue = batValue;
                                    1- 1949     	BANKSEL	_batValue
     0106 rrrr                      3-  110 m1      .banksel ram_address
     0107 01rr                      1- 1950     	MOVR	_batValue,W
                                    1- 1951     	BANKSEL	_showBatValue
     0108 rrrr                      3-  110 m1      .banksel ram_address
     0109 00rr                      1- 1952     	MOVAR	_showBatValue
     010A                           1- 1953     _00553_DS_:
                                    1- 1954     	.line	765, "main.c"; 	if(chrgFlag == 0)
                                    1- 1955     	BANKSEL	_chrgFlag
     010A rrrr                      3-  110 m1      .banksel ram_address
     010B 01rr                      1- 1956     	MOVR	_chrgFlag,W
     010C 0903                      1- 1957     	BTRSS	STATUS,2
                                    1- 1958     	MGOTO	_00563_DS_
     010D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1959     	.line	767, "main.c"; 	if(showBatValue > batValue && showBatValue > 0)
                                    1- 1960     	BANKSEL	_showBatValue
     010E rrrr                      3-  110 m1      .banksel ram_address
     010F 01rr                      1- 1961     	MOVR	_showBatValue,W
                                    1- 1962     	BANKSEL	_batValue
     0110 rrrr                      3-  110 m1      .banksel ram_address
     0111 04rr                      1- 1963     	SUBAR	_batValue,W
     0112 0C03                      1- 1964     	BTRSC	STATUS,0
                                    1- 1965     	MGOTO	_00559_DS_
     0113 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1966     	BANKSEL	_showBatValue
     0114 rrrr                      3-  110 m1      .banksel ram_address
     0115 01rr                      1- 1967     	MOVR	_showBatValue,W
     0116 0D03                      1- 1968     	BTRSC	STATUS,2
                                    1- 1969     	MGOTO	_00559_DS_
     0117 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1970     	.line	769, "main.c"; 	if(++subBatTime > 1000)
                                    1- 1971     	BANKSEL	_subBatTime
     0118 rrrr                      3-  110 m1      .banksel ram_address
     0119 05rr                      1- 1972     	INCR	_subBatTime,F
     011A 0D03                      1- 1973     	BTRSC	STATUS,2
     011B 05rr                      1- 1974     	INCR	(_subBatTime + 1),F
                                    1- 1975     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1976     ;;unsigned compare: left >= lit (0x3E9=1001), size=2
     011C 2103                      1- 1977     	MOVIA	0x03
     011D 04rr                      1- 1978     	SUBAR	(_subBatTime + 1),W
     011E 0903                      1- 1979     	BTRSS	STATUS,2
                                    1- 1980     	MGOTO	_00695_DS_
     011F 3rrr                      3-   63 m1      LGOTO rom_address
     0120 21E9                      1- 1981     	MOVIA	0xe9
     0121 04rr                      1- 1982     	SUBAR	_subBatTime,W
     0122                           1- 1983     _00695_DS_:
     0122 0803                      1- 1984     	BTRSS	STATUS,0
                                    1- 1985     	MGOTO	_00563_DS_
     0123 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1986     	.line	771, "main.c"; 	subBatTime = 0;
                                    1- 1987     	BANKSEL	_subBatTime
     0124 rrrr                      3-  110 m1      .banksel ram_address
     0125 02rr                      1- 1988     	CLRR	_subBatTime
     0126 02rr                      1- 1989     	CLRR	(_subBatTime + 1)
                                    1- 1990     	.line	772, "main.c"; 	if(--showBatValue == 0)
                                    1- 1991     	BANKSEL	_showBatValue
     0127 rrrr                      3-  110 m1      .banksel ram_address
     0128 17rr                      1- 1992     	DECRSZ	_showBatValue,F
                                    1- 1993     	MGOTO	_00563_DS_
     0129 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1994     	.line	774, "main.c"; 	showBatValue = 1;
     012A 2101                      1- 1995     	MOVIA	0x01
     012B 00rr                      1- 1996     	MOVAR	_showBatValue
                                    1- 1997     	MGOTO	_00563_DS_
     012C 3rrr                      3-   63 m1      LGOTO rom_address
     012D                           1- 1998     _00559_DS_:
                                    1- 1999     	.line	780, "main.c"; 	subBatTime = 0;
                                    1- 2000     	BANKSEL	_subBatTime
     012D rrrr                      3-  110 m1      .banksel ram_address
     012E 02rr                      1- 2001     	CLRR	_subBatTime
     012F 02rr                      1- 2002     	CLRR	(_subBatTime + 1)
     0130                           1- 2003     _00563_DS_:
                                    1- 2004     	.line	784, "main.c"; 	if(showBatValue < batValue)
                                    1- 2005     	BANKSEL	_batValue
     0130 rrrr                      3-  110 m1      .banksel ram_address
     0131 01rr                      1- 2006     	MOVR	_batValue,W
                                    1- 2007     	BANKSEL	_showBatValue
     0132 rrrr                      3-  110 m1      .banksel ram_address
     0133 04rr                      1- 2008     	SUBAR	_showBatValue,W
     0134 0C03                      1- 2009     	BTRSC	STATUS,0
                                    1- 2010     	MGOTO	_00569_DS_
     0135 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2011     	.line	786, "main.c"; 	if(++batTime > 1000)
                                    1- 2012     	BANKSEL	_batTime
     0136 rrrr                      3-  110 m1      .banksel ram_address
     0137 05rr                      1- 2013     	INCR	_batTime,F
     0138 0D03                      1- 2014     	BTRSC	STATUS,2
     0139 05rr                      1- 2015     	INCR	(_batTime + 1),F
                                    1- 2016     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2017     ;;unsigned compare: left >= lit (0x3E9=1001), size=2
     013A 2103                      1- 2018     	MOVIA	0x03
     013B 04rr                      1- 2019     	SUBAR	(_batTime + 1),W
     013C 0903                      1- 2020     	BTRSS	STATUS,2
                                    1- 2021     	MGOTO	_00697_DS_
     013D 3rrr                      3-   63 m1      LGOTO rom_address
     013E 21E9                      1- 2022     	MOVIA	0xe9
     013F 04rr                      1- 2023     	SUBAR	_batTime,W
     0140                           1- 2024     _00697_DS_:
     0140 0803                      1- 2025     	BTRSS	STATUS,0
                                    1- 2026     	MGOTO	_00570_DS_
     0141 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2027     	.line	788, "main.c"; 	batTime = 0;
                                    1- 2028     	BANKSEL	_batTime
     0142 rrrr                      3-  110 m1      .banksel ram_address
     0143 02rr                      1- 2029     	CLRR	_batTime
     0144 02rr                      1- 2030     	CLRR	(_batTime + 1)
                                    1- 2031     	.line	789, "main.c"; 	if(++showBatValue > 100)
                                    1- 2032     	BANKSEL	_showBatValue
     0145 rrrr                      3-  110 m1      .banksel ram_address
     0146 05rr                      1- 2033     	INCR	_showBatValue,F
                                    1- 2034     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2035     ;;unsigned compare: left >= lit (0x65=101), size=1
     0147 2165                      1- 2036     	MOVIA	0x65
     0148 04rr                      1- 2037     	SUBAR	_showBatValue,W
     0149 0803                      1- 2038     	BTRSS	STATUS,0
                                    1- 2039     	MGOTO	_00570_DS_
     014A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2040     	.line	790, "main.c"; 	showBatValue = 100;
     014B 2164                      1- 2041     	MOVIA	0x64
     014C 00rr                      1- 2042     	MOVAR	_showBatValue
                                    1- 2043     	MGOTO	_00570_DS_
     014D 3rrr                      3-   63 m1      LGOTO rom_address
     014E                           1- 2044     _00569_DS_:
                                    1- 2045     	.line	795, "main.c"; 	batTime = 0;
                                    1- 2046     	BANKSEL	_batTime
     014E rrrr                      3-  110 m1      .banksel ram_address
     014F 02rr                      1- 2047     	CLRR	_batTime
     0150 02rr                      1- 2048     	CLRR	(_batTime + 1)
     0151                           1- 2049     _00570_DS_:
                                    1- 2050     	.line	799, "main.c"; 	if(showBatValue == 0)
                                    1- 2051     	BANKSEL	_showBatValue
     0151 rrrr                      3-  110 m1      .banksel ram_address
     0152 01rr                      1- 2052     	MOVR	_showBatValue,W
     0153 0903                      1- 2053     	BTRSS	STATUS,2
                                    1- 2054     	MGOTO	_00572_DS_
     0154 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2055     	.line	801, "main.c"; 	showBatValue = batValue;
                                    1- 2056     	BANKSEL	_batValue
     0155 rrrr                      3-  110 m1      .banksel ram_address
     0156 01rr                      1- 2057     	MOVR	_batValue,W
                                    1- 2058     	BANKSEL	_showBatValue
     0157 rrrr                      3-  110 m1      .banksel ram_address
     0158 00rr                      1- 2059     	MOVAR	_showBatValue
     0159                           1- 2060     _00572_DS_:
                                    1- 2061     	.line	803, "main.c"; 	if(chrgFlag == 0)
                                    1- 2062     	BANKSEL	_chrgFlag
     0159 rrrr                      3-  110 m1      .banksel ram_address
     015A 01rr                      1- 2063     	MOVR	_chrgFlag,W
     015B 0903                      1- 2064     	BTRSS	STATUS,2
                                    1- 2065     	MGOTO	_00582_DS_
     015C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2066     	.line	805, "main.c"; 	if(showBatValue > batValue && showBatValue > 0)
                                    1- 2067     	BANKSEL	_showBatValue
     015D rrrr                      3-  110 m1      .banksel ram_address
     015E 01rr                      1- 2068     	MOVR	_showBatValue,W
                                    1- 2069     	BANKSEL	_batValue
     015F rrrr                      3-  110 m1      .banksel ram_address
     0160 04rr                      1- 2070     	SUBAR	_batValue,W
     0161 0C03                      1- 2071     	BTRSC	STATUS,0
                                    1- 2072     	MGOTO	_00578_DS_
     0162 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2073     	BANKSEL	_showBatValue
     0163 rrrr                      3-  110 m1      .banksel ram_address
     0164 01rr                      1- 2074     	MOVR	_showBatValue,W
     0165 0D03                      1- 2075     	BTRSC	STATUS,2
                                    1- 2076     	MGOTO	_00578_DS_
     0166 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2077     	.line	807, "main.c"; 	if(++subBatTime > 1000)
                                    1- 2078     	BANKSEL	_subBatTime
     0167 rrrr                      3-  110 m1      .banksel ram_address
     0168 05rr                      1- 2079     	INCR	_subBatTime,F
     0169 0D03                      1- 2080     	BTRSC	STATUS,2
     016A 05rr                      1- 2081     	INCR	(_subBatTime + 1),F
                                    1- 2082     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2083     ;;unsigned compare: left >= lit (0x3E9=1001), size=2
     016B 2103                      1- 2084     	MOVIA	0x03
     016C 04rr                      1- 2085     	SUBAR	(_subBatTime + 1),W
     016D 0903                      1- 2086     	BTRSS	STATUS,2
                                    1- 2087     	MGOTO	_00700_DS_
     016E 3rrr                      3-   63 m1      LGOTO rom_address
     016F 21E9                      1- 2088     	MOVIA	0xe9
     0170 04rr                      1- 2089     	SUBAR	_subBatTime,W
     0171                           1- 2090     _00700_DS_:
     0171 0803                      1- 2091     	BTRSS	STATUS,0
                                    1- 2092     	MGOTO	_00582_DS_
     0172 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2093     	.line	809, "main.c"; 	subBatTime = 0;
                                    1- 2094     	BANKSEL	_subBatTime
     0173 rrrr                      3-  110 m1      .banksel ram_address
     0174 02rr                      1- 2095     	CLRR	_subBatTime
     0175 02rr                      1- 2096     	CLRR	(_subBatTime + 1)
                                    1- 2097     	.line	810, "main.c"; 	if(--showBatValue == 0)
                                    1- 2098     	BANKSEL	_showBatValue
     0176 rrrr                      3-  110 m1      .banksel ram_address
     0177 17rr                      1- 2099     	DECRSZ	_showBatValue,F
                                    1- 2100     	MGOTO	_00582_DS_
     0178 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2101     	.line	812, "main.c"; 	showBatValue = 1;
     0179 2101                      1- 2102     	MOVIA	0x01
     017A 00rr                      1- 2103     	MOVAR	_showBatValue
                                    1- 2104     	MGOTO	_00582_DS_
     017B 3rrr                      3-   63 m1      LGOTO rom_address
     017C                           1- 2105     _00578_DS_:
                                    1- 2106     	.line	818, "main.c"; 	subBatTime = 0;
                                    1- 2107     	BANKSEL	_subBatTime
     017C rrrr                      3-  110 m1      .banksel ram_address
     017D 02rr                      1- 2108     	CLRR	_subBatTime
     017E 02rr                      1- 2109     	CLRR	(_subBatTime + 1)
     017F                           1- 2110     _00582_DS_:
                                    1- 2111     	.line	822, "main.c"; 	if(showBatValue < batValue)
                                    1- 2112     	BANKSEL	_batValue
     017F rrrr                      3-  110 m1      .banksel ram_address
     0180 01rr                      1- 2113     	MOVR	_batValue,W
                                    1- 2114     	BANKSEL	_showBatValue
     0181 rrrr                      3-  110 m1      .banksel ram_address
     0182 04rr                      1- 2115     	SUBAR	_showBatValue,W
     0183 0C03                      1- 2116     	BTRSC	STATUS,0
                                    1- 2117     	MGOTO	_00588_DS_
     0184 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2118     	.line	824, "main.c"; 	if(++batTime > 1000)
                                    1- 2119     	BANKSEL	_batTime
     0185 rrrr                      3-  110 m1      .banksel ram_address
     0186 05rr                      1- 2120     	INCR	_batTime,F
     0187 0D03                      1- 2121     	BTRSC	STATUS,2
     0188 05rr                      1- 2122     	INCR	(_batTime + 1),F
                                    1- 2123     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2124     ;;unsigned compare: left >= lit (0x3E9=1001), size=2
     0189 2103                      1- 2125     	MOVIA	0x03
     018A 04rr                      1- 2126     	SUBAR	(_batTime + 1),W
     018B 0903                      1- 2127     	BTRSS	STATUS,2
                                    1- 2128     	MGOTO	_00702_DS_
     018C 3rrr                      3-   63 m1      LGOTO rom_address
     018D 21E9                      1- 2129     	MOVIA	0xe9
     018E 04rr                      1- 2130     	SUBAR	_batTime,W
     018F                           1- 2131     _00702_DS_:
     018F 0803                      1- 2132     	BTRSS	STATUS,0
                                    1- 2133     	MGOTO	_00589_DS_
     0190 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2134     	.line	826, "main.c"; 	batTime = 0;
                                    1- 2135     	BANKSEL	_batTime
     0191 rrrr                      3-  110 m1      .banksel ram_address
     0192 02rr                      1- 2136     	CLRR	_batTime
     0193 02rr                      1- 2137     	CLRR	(_batTime + 1)
                                    1- 2138     	.line	827, "main.c"; 	if(++showBatValue > 99)
                                    1- 2139     	BANKSEL	_showBatValue
     0194 rrrr                      3-  110 m1      .banksel ram_address
     0195 05rr                      1- 2140     	INCR	_showBatValue,F
                                    1- 2141     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2142     ;;unsigned compare: left >= lit (0x64=100), size=1
     0196 2164                      1- 2143     	MOVIA	0x64
     0197 04rr                      1- 2144     	SUBAR	_showBatValue,W
     0198 0803                      1- 2145     	BTRSS	STATUS,0
                                    1- 2146     	MGOTO	_00589_DS_
     0199 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2147     	.line	828, "main.c"; 	showBatValue = 99;
     019A 2163                      1- 2148     	MOVIA	0x63
     019B 00rr                      1- 2149     	MOVAR	_showBatValue
                                    1- 2150     	MGOTO	_00589_DS_
     019C 3rrr                      3-   63 m1      LGOTO rom_address
     019D                           1- 2151     _00588_DS_:
                                    1- 2152     	.line	833, "main.c"; 	batTime = 0;
                                    1- 2153     	BANKSEL	_batTime
     019D rrrr                      3-  110 m1      .banksel ram_address
     019E 02rr                      1- 2154     	CLRR	_batTime
     019F 02rr                      1- 2155     	CLRR	(_batTime + 1)
     01A0                           1- 2156     _00589_DS_:
                                    1- 2157     	.line	837, "main.c"; 	if(batValue == 0 && chrgFlag == 0)
                                    1- 2158     	BANKSEL	_batValue
     01A0 rrrr                      3-  110 m1      .banksel ram_address
     01A1 01rr                      1- 2159     	MOVR	_batValue,W
     01A2 0903                      1- 2160     	BTRSS	STATUS,2
                                    1- 2161     	MGOTO	_00595_DS_
     01A3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2162     	BANKSEL	_chrgFlag
     01A4 rrrr                      3-  110 m1      .banksel ram_address
     01A5 01rr                      1- 2163     	MOVR	_chrgFlag,W
     01A6 0903                      1- 2164     	BTRSS	STATUS,2
                                    1- 2165     	MGOTO	_00595_DS_
     01A7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2166     	.line	839, "main.c"; 	if(++zeroTime > 200)
                                    1- 2167     	BANKSEL	_zeroTime
     01A8 rrrr                      3-  110 m1      .banksel ram_address
     01A9 05rr                      1- 2168     	INCR	_zeroTime,F
                                    1- 2169     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2170     ;;unsigned compare: left >= lit (0xC9=201), size=1
     01AA 21C9                      1- 2171     	MOVIA	0xc9
     01AB 04rr                      1- 2172     	SUBAR	_zeroTime,W
     01AC 0803                      1- 2173     	BTRSS	STATUS,0
                                    1- 2174     	MGOTO	_00596_DS_
     01AD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2175     	.line	841, "main.c"; 	zeroTime = 200;
     01AE 21C8                      1- 2176     	MOVIA	0xc8
     01AF 00rr                      1- 2177     	MOVAR	_zeroTime
                                    1- 2178     	.line	842, "main.c"; 	showBatValue = 0;
                                    1- 2179     	BANKSEL	_showBatValue
     01B0 rrrr                      3-  110 m1      .banksel ram_address
     01B1 02rr                      1- 2180     	CLRR	_showBatValue
                                    1- 2181     	.line	843, "main.c"; 	if(zeroFlag == 0)
                                    1- 2182     	BANKSEL	_zeroFlag
     01B2 rrrr                      3-  110 m1      .banksel ram_address
     01B3 01rr                      1- 2183     	MOVR	_zeroFlag,W
     01B4 0903                      1- 2184     	BTRSS	STATUS,2
                                    1- 2185     	MGOTO	_00596_DS_
     01B5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2186     	.line	845, "main.c"; 	powerOff();
                                    1- 2187     	MCALL	_powerOff
     01B6 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2188     	.line	846, "main.c"; 	powerFlag = 1;
     01B7 2101                      1- 2189     	MOVIA	0x01
                                    1- 2190     	BANKSEL	_powerFlag
     01B8 rrrr                      3-  110 m1      .banksel ram_address
     01B9 00rr                      1- 2191     	MOVAR	_powerFlag
                                    1- 2192     	.line	847, "main.c"; 	shiwei = 11;
     01BA 210B                      1- 2193     	MOVIA	0x0b
                                    1- 2194     	BANKSEL	_shiwei
     01BB rrrr                      3-  110 m1      .banksel ram_address
     01BC 00rr                      1- 2195     	MOVAR	_shiwei
                                    1- 2196     	.line	848, "main.c"; 	gewei = 12;
     01BD 210C                      1- 2197     	MOVIA	0x0c
                                    1- 2198     	BANKSEL	_gewei
     01BE rrrr                      3-  110 m1      .banksel ram_address
     01BF 00rr                      1- 2199     	MOVAR	_gewei
                                    1- 2200     	.line	849, "main.c"; 	zeroFlag = 1;
     01C0 2101                      1- 2201     	MOVIA	0x01
                                    1- 2202     	BANKSEL	_zeroFlag
     01C1 rrrr                      3-  110 m1      .banksel ram_address
     01C2 00rr                      1- 2203     	MOVAR	_zeroFlag
                                    1- 2204     	.line	850, "main.c"; 	powerTime = 500;
     01C3 21F4                      1- 2205     	MOVIA	0xf4
                                    1- 2206     	BANKSEL	_powerTime
     01C4 rrrr                      3-  110 m1      .banksel ram_address
     01C5 00rr                      1- 2207     	MOVAR	_powerTime
     01C6 2101                      1- 2208     	MOVIA	0x01
     01C7 00rr                      1- 2209     	MOVAR	(_powerTime + 1)
                                    1- 2210     	.line	851, "main.c"; 	workStep = 0;
                                    1- 2211     	BANKSEL	_workStep
     01C8 rrrr                      3-  110 m1      .banksel ram_address
     01C9 02rr                      1- 2212     	CLRR	_workStep
                                    1- 2213     	.line	852, "main.c"; 	modeStep = 0;
                                    1- 2214     	BANKSEL	_modeStep
     01CA rrrr                      3-  110 m1      .banksel ram_address
     01CB 02rr                      1- 2215     	CLRR	_modeStep
                                    1- 2216     	MGOTO	_00596_DS_
     01CC 3rrr                      3-   63 m1      LGOTO rom_address
     01CD                           1- 2217     _00595_DS_:
                                    1- 2218     	.line	858, "main.c"; 	zeroTime = 0;
                                    1- 2219     	BANKSEL	_zeroTime
     01CD rrrr                      3-  110 m1      .banksel ram_address
     01CE 02rr                      1- 2220     	CLRR	_zeroTime
                                    1- 2221     	.line	859, "main.c"; 	zeroFlag = 0;
                                    1- 2222     	BANKSEL	_zeroFlag
     01CF rrrr                      3-  110 m1      .banksel ram_address
     01D0 02rr                      1- 2223     	CLRR	_zeroFlag
     01D1                           1- 2224     _00596_DS_:
                                    1- 2225     	.line	861, "main.c"; 	setShowNum();
                                    1- 2226     	MCALL	_setShowNum
     01D1 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2227     	.line	862, "main.c"; 	}
                                    1- 2228     	RETURN	
     01D2 0010                      3-   40 m1      ret
                                    1- 2229     ; exit point of _checkBatAD
                                    1- 2231     ;***
                                    1- 2232     ;  pBlock Stats: dbName = C
                                    1- 2233     ;***
                                    1- 2234     ;functions called:
                                    1- 2235     ;   _F_AIN2_Convert
                                    1- 2236     ;   _powerOff
                                    1- 2237     ;   _F_AIN2_Convert
                                    1- 2238     ;   _powerOff
                                    1- 2239     ;4 compiler assigned registers:
                                    1- 2240     ;   r0x1055
                                    1- 2241     ;   r0x1056
                                    1- 2242     ;   r0x1057
                                    1- 2243     ;   r0x1058
                                    1- 2244     ;; Starting pCode block
                                    1- 2245     .segment "code"; module=main, function=_checkOutA
     0000                           1- 2247     _checkOutA:
                                    1- 2248     ; 0 exit points
                                    1- 2249     	.line	689, "main.c"; 	R_AIN4_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 2250     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2251     	CLRR	_R_AIN2_DATA_LB
                                    1- 2252     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2253     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 2254     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 2255     	.line	690, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 2256     	MOVIA	0x08
                                    1- 2257     	MCALL	_F_AIN2_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2258     	.line	691, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 2259     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 2260     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 2261     	ANDIA	0xf0
     000A 00rr                      1- 2262     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 2263     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 2264     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 2265     	ANDIA	0x0f
     000E 11rr                      1- 2266     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 2267     	XORAR	_R_AIN4_DATA,F
                                    1- 2268     	.line	692, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 2269     	MOVIA	0xf0
                                    1- 2270     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 2271     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 2272     	.line	693, "main.c"; 	R_AIN4_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 2273     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 2274     	BANKSEL	r0x1057
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 2275     	MOVAR	r0x1057
                                    1- 2276     ;;1	MOVAR	r0x1055
                                    1- 2277     ;;1	CLRR	r0x1056
                                    1- 2278     ;;102	MOVR	r0x1055,W
     0016 2100                      1- 2279     	MOVIA	0x00
                                    1- 2280     	BANKSEL	r0x1058
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 2281     	MOVAR	r0x1058
                                    1- 2282     	BANKSEL	r0x1057
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 2283     	MOVR	r0x1057,W
                                    1- 2284     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 2285     	ADDAR	_R_AIN4_DATA,F
                                    1- 2286     	BANKSEL	r0x1058
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 2287     	MOVR	r0x1058,W
     001F 0C03                      1- 2288     	BTRSC	STATUS,0
     0020 05rr                      1- 2289     	INCR	r0x1058,W
     0021 0D03                      1- 2290     	BTRSC	STATUS,2
                                    1- 2291     	MGOTO	_00010_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2292     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 2293     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 2294     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 2295     _00010_DS_:
                                    1- 2296     	.line	694, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 
     0025 1C03                      1- 2297     	BCR	STATUS,0
                                    1- 2298     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 2299     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 2300     	RRR	_R_AIN4_DATA,F
                                    1- 2301     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 2302     	BCR	STATUS,0
     002A 13rr                      1- 2303     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 2304     	RRR	_R_AIN4_DATA,F
                                    1- 2305     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 2306     	BCR	STATUS,0
     002D 13rr                      1- 2307     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 2308     	RRR	_R_AIN4_DATA,F
                                    1- 2309     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2310     ;;unsigned compare: left >= lit (0xC9=201), size=2
                                    1- 2311     	.line	695, "main.c"; 	if(R_AIN4_DATA > 200)
     002F 2100                      1- 2312     	MOVIA	0x00
     0030 04rr                      1- 2313     	SUBAR	(_R_AIN4_DATA + 1),W
     0031 0903                      1- 2314     	BTRSS	STATUS,2
                                    1- 2315     	MGOTO	_00527_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033 21C9                      1- 2316     	MOVIA	0xc9
     0034 04rr                      1- 2317     	SUBAR	_R_AIN4_DATA,W
     0035                           1- 2318     _00527_DS_:
     0035 0803                      1- 2319     	BTRSS	STATUS,0
                                    1- 2320     	MGOTO	_00514_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2321     	.line	697, "main.c"; 	if(++overCount > 250)
                                    1- 2322     	BANKSEL	_overCount
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 05rr                      1- 2323     	INCR	_overCount,F
                                    1- 2324     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2325     ;;unsigned compare: left >= lit (0xFB=251), size=1
     0039 21FB                      1- 2326     	MOVIA	0xfb
     003A 04rr                      1- 2327     	SUBAR	_overCount,W
     003B 0803                      1- 2328     	BTRSS	STATUS,0
                                    1- 2329     	MGOTO	_00516_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2330     	.line	699, "main.c"; 	overCount = 250;
     003D 21FA                      1- 2331     	MOVIA	0xfa
     003E 00rr                      1- 2332     	MOVAR	_overCount
                                    1- 2333     	.line	700, "main.c"; 	powerOff();
                                    1- 2334     	MCALL	_powerOff
     003F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2335     	.line	701, "main.c"; 	powerTime = 500;
     0040 21F4                      1- 2336     	MOVIA	0xf4
                                    1- 2337     	BANKSEL	_powerTime
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 00rr                      1- 2338     	MOVAR	_powerTime
     0043 2101                      1- 2339     	MOVIA	0x01
     0044 00rr                      1- 2340     	MOVAR	(_powerTime + 1)
                                    1- 2341     	.line	702, "main.c"; 	overFlag = 1;
                                    1- 2342     	BANKSEL	_overFlag
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 00rr                      1- 2343     	MOVAR	_overFlag
                                    1- 2344     	MGOTO	_00516_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
     0048                           1- 2345     _00514_DS_:
                                    1- 2346     	.line	707, "main.c"; 	if(overCount > 0)
                                    1- 2347     	BANKSEL	_overCount
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 01rr                      1- 2348     	MOVR	_overCount,W
     004A 0903                      1- 2349     	BTRSS	STATUS,2
                                    1- 2350     	.line	709, "main.c"; 	overCount--;
     004B 06rr                      1- 2351     	DECR	_overCount,F
     004C                           1- 2352     _00516_DS_:
                                    1- 2353     	.line	712, "main.c"; 	}
                                    1- 2354     	RETURN	
     004C 0010                      3-   40 m1      ret
                                    1- 2356     ;***
                                    1- 2357     ;  pBlock Stats: dbName = C
                                    1- 2358     ;***
                                    1- 2359     ;has an exit
                                    1- 2360     ;functions called:
                                    1- 2361     ;   _F_AIN6_Convert
                                    1- 2362     ;   _F_AIN6_Convert
                                    1- 2363     ;4 compiler assigned registers:
                                    1- 2364     ;   r0x1059
                                    1- 2365     ;   r0x105A
                                    1- 2366     ;   r0x105B
                                    1- 2367     ;   r0x105C
                                    1- 2368     ;; Starting pCode block
                                    1- 2369     .segment "code"; module=main, function=_checkKeyAD
     0000                           1- 2371     _checkKeyAD:
                                    1- 2372     ; 2 exit points
                                    1- 2373     	.line	665, "main.c"; 	R_AIN6_DATA = R_AIN6_DATA_LB = 0x00;
                                    1- 2374     	BANKSEL	_R_AIN6_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2375     	CLRR	_R_AIN6_DATA_LB
                                    1- 2376     	BANKSEL	_R_AIN6_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2377     	CLRR	_R_AIN6_DATA
     0004 02rr                      1- 2378     	CLRR	(_R_AIN6_DATA + 1)
                                    1- 2379     	.line	666, "main.c"; 	F_AIN6_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 2380     	MOVIA	0x08
                                    1- 2381     	MCALL	_F_AIN6_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2382     	.line	667, "main.c"; 	R_AIN6_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 2383     	BANKSEL	_R_AIN6_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 2384     	SWAPR	(_R_AIN6_DATA + 1),W
     0009 22F0                      1- 2385     	ANDIA	0xf0
     000A 00rr                      1- 2386     	MOVAR	(_R_AIN6_DATA + 1)
     000B 15rr                      1- 2387     	SWAPR	_R_AIN6_DATA,W
     000C 00rr                      1- 2388     	MOVAR	_R_AIN6_DATA
     000D 220F                      1- 2389     	ANDIA	0x0f
     000E 11rr                      1- 2390     	IORAR	(_R_AIN6_DATA + 1),F
     000F 12rr                      1- 2391     	XORAR	_R_AIN6_DATA,F
                                    1- 2392     	.line	668, "main.c"; 	R_AIN6_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 2393     	MOVIA	0xf0
                                    1- 2394     	BANKSEL	_R_AIN6_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 2395     	ANDAR	_R_AIN6_DATA_LB,F
                                    1- 2396     	.line	669, "main.c"; 	R_AIN6_DATA += R_AIN6_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 2397     	MOVR	_R_AIN6_DATA_LB,W
                                    1- 2398     	BANKSEL	r0x105B
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 2399     	MOVAR	r0x105B
                                    1- 2400     ;;1	MOVAR	r0x1059
                                    1- 2401     ;;1	CLRR	r0x105A
                                    1- 2402     ;;101	MOVR	r0x1059,W
     0016 2100                      1- 2403     	MOVIA	0x00
                                    1- 2404     	BANKSEL	r0x105C
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 2405     	MOVAR	r0x105C
                                    1- 2406     	BANKSEL	r0x105B
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 2407     	MOVR	r0x105B,W
                                    1- 2408     	BANKSEL	_R_AIN6_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 2409     	ADDAR	_R_AIN6_DATA,F
                                    1- 2410     	BANKSEL	r0x105C
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 2411     	MOVR	r0x105C,W
     001F 0C03                      1- 2412     	BTRSC	STATUS,0
     0020 05rr                      1- 2413     	INCR	r0x105C,W
     0021 0D03                      1- 2414     	BTRSC	STATUS,2
                                    1- 2415     	MGOTO	_00011_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2416     	BANKSEL	_R_AIN6_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 2417     	ADDAR	(_R_AIN6_DATA + 1),F
                                    1- 2418     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 2419     _00011_DS_:
                                    1- 2420     	.line	670, "main.c"; 	R_AIN6_DATA >>=3;					// R_AIN0_DATA divided 
     0025 1C03                      1- 2421     	BCR	STATUS,0
                                    1- 2422     	BANKSEL	_R_AIN6_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 2423     	RRR	(_R_AIN6_DATA + 1),F
     0028 13rr                      1- 2424     	RRR	_R_AIN6_DATA,F
                                    1- 2425     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 2426     	BCR	STATUS,0
     002A 13rr                      1- 2427     	RRR	(_R_AIN6_DATA + 1),F
     002B 13rr                      1- 2428     	RRR	_R_AIN6_DATA,F
                                    1- 2429     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 2430     	BCR	STATUS,0
     002D 13rr                      1- 2431     	RRR	(_R_AIN6_DATA + 1),F
     002E 13rr                      1- 2432     	RRR	_R_AIN6_DATA,F
                                    1- 2433     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2434     ;;unsigned compare: left >= lit (0x191=401), size=2
                                    1- 2435     	.line	672, "main.c"; 	if(R_AIN6_DATA > 400 && R_AIN6_DATA < 1300)
     002F 2101                      1- 2436     	MOVIA	0x01
     0030 04rr                      1- 2437     	SUBAR	(_R_AIN6_DATA + 1),W
     0031 0903                      1- 2438     	BTRSS	STATUS,2
                                    1- 2439     	MGOTO	_00499_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033 2191                      1- 2440     	MOVIA	0x91
     0034 04rr                      1- 2441     	SUBAR	_R_AIN6_DATA,W
     0035                           1- 2442     _00499_DS_:
     0035 0803                      1- 2443     	BTRSS	STATUS,0
                                    1- 2444     	MGOTO	_00476_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2445     ;;unsigned compare: left < lit (0x514=1300), size=2
     0037 2105                      1- 2446     	MOVIA	0x05
                                    1- 2447     	BANKSEL	_R_AIN6_DATA
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 04rr                      1- 2448     	SUBAR	(_R_AIN6_DATA + 1),W
     003A 0903                      1- 2449     	BTRSS	STATUS,2
                                    1- 2450     	MGOTO	_00500_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
     003C 2114                      1- 2451     	MOVIA	0x14
     003D 04rr                      1- 2452     	SUBAR	_R_AIN6_DATA,W
     003E                           1- 2453     _00500_DS_:
     003E 0C03                      1- 2454     	BTRSC	STATUS,0
                                    1- 2455     	MGOTO	_00476_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2456     	.line	674, "main.c"; 	keyNum = 3;
     0040 2103                      1- 2457     	MOVIA	0x03
                                    1- 2458     	BANKSEL	_keyNum
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 00rr                      1- 2459     	MOVAR	_keyNum
                                    1- 2460     	MGOTO	_00479_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2461     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2462     ;;unsigned compare: left >= lit (0x579=1401), size=2
     0044                           1- 2463     _00476_DS_:
                                    1- 2464     	.line	676, "main.c"; 	else if(R_AIN6_DATA > 1400 && R_AIN6_DATA < 2200)
     0044 2105                      1- 2465     	MOVIA	0x05
                                    1- 2466     	BANKSEL	_R_AIN6_DATA
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 04rr                      1- 2467     	SUBAR	(_R_AIN6_DATA + 1),W
     0047 0903                      1- 2468     	BTRSS	STATUS,2
                                    1- 2469     	MGOTO	_00501_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 2179                      1- 2470     	MOVIA	0x79
     004A 04rr                      1- 2471     	SUBAR	_R_AIN6_DATA,W
     004B                           1- 2472     _00501_DS_:
     004B 0803                      1- 2473     	BTRSS	STATUS,0
                                    1- 2474     	MGOTO	_00472_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2475     ;;unsigned compare: left < lit (0x898=2200), size=2
     004D 2108                      1- 2476     	MOVIA	0x08
                                    1- 2477     	BANKSEL	_R_AIN6_DATA
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 04rr                      1- 2478     	SUBAR	(_R_AIN6_DATA + 1),W
     0050 0903                      1- 2479     	BTRSS	STATUS,2
                                    1- 2480     	MGOTO	_00502_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
     0052 2198                      1- 2481     	MOVIA	0x98
     0053 04rr                      1- 2482     	SUBAR	_R_AIN6_DATA,W
     0054                           1- 2483     _00502_DS_:
     0054 0C03                      1- 2484     	BTRSC	STATUS,0
                                    1- 2485     	MGOTO	_00472_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2486     	.line	678, "main.c"; 	keyNum = 2;
     0056 2102                      1- 2487     	MOVIA	0x02
                                    1- 2488     	BANKSEL	_keyNum
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 00rr                      1- 2489     	MOVAR	_keyNum
                                    1- 2490     	MGOTO	_00479_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2491     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2492     ;;unsigned compare: left >= lit (0x8FD=2301), size=2
     005A                           1- 2493     _00472_DS_:
                                    1- 2494     	.line	680, "main.c"; 	else if(R_AIN6_DATA > 2300 && R_AIN6_DATA < 3200)
     005A 2108                      1- 2495     	MOVIA	0x08
                                    1- 2496     	BANKSEL	_R_AIN6_DATA
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 04rr                      1- 2497     	SUBAR	(_R_AIN6_DATA + 1),W
     005D 0903                      1- 2498     	BTRSS	STATUS,2
                                    1- 2499     	MGOTO	_00503_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
     005F 21FD                      1- 2500     	MOVIA	0xfd
     0060 04rr                      1- 2501     	SUBAR	_R_AIN6_DATA,W
     0061                           1- 2502     _00503_DS_:
     0061 0803                      1- 2503     	BTRSS	STATUS,0
                                    1- 2504     	MGOTO	_00479_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2505     ;;unsigned compare: left < lit (0xC80=3200), size=2
     0063 210C                      1- 2506     	MOVIA	0x0c
                                    1- 2507     	BANKSEL	_R_AIN6_DATA
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 04rr                      1- 2508     	SUBAR	(_R_AIN6_DATA + 1),W
     0066 0903                      1- 2509     	BTRSS	STATUS,2
                                    1- 2510     	MGOTO	_00504_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
     0068 2180                      1- 2511     	MOVIA	0x80
     0069 04rr                      1- 2512     	SUBAR	_R_AIN6_DATA,W
     006A                           1- 2513     _00504_DS_:
     006A 0C03                      1- 2514     	BTRSC	STATUS,0
                                    1- 2515     	MGOTO	_00479_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2516     	.line	682, "main.c"; 	keyNum = 1;
     006C 2101                      1- 2517     	MOVIA	0x01
                                    1- 2518     	BANKSEL	_keyNum
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 00rr                      1- 2519     	MOVAR	_keyNum
     006F                           1- 2520     _00479_DS_:
                                    1- 2521     	.line	684, "main.c"; 	}
                                    1- 2522     	RETURN	
     006F 0010                      3-   40 m1      ret
                                    1- 2523     ; exit point of _checkKeyAD
                                    1- 2525     ;***
                                    1- 2526     ;  pBlock Stats: dbName = C
                                    1- 2527     ;***
                                    1- 2528     ;has an exit
                                    1- 2529     ;functions called:
                                    1- 2530     ;   _pwm1Stop
                                    1- 2531     ;   _pwm1Stop
                                    1- 2532     ;1 compiler assigned register :
                                    1- 2533     ;   r0x105D
                                    1- 2534     ;; Starting pCode block
                                    1- 2535     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2537     _gotoSleep:
                                    1- 2538     ; 2 exit points
                                    1- 2539     	.line	633, "main.c"; 	shanshuoTime = 0;
                                    1- 2540     	BANKSEL	_shanshuoTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2541     	CLRR	_shanshuoTime
                                    1- 2542     	.line	634, "main.c"; 	overFlag = 0;
                                    1- 2543     	BANKSEL	_overFlag
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2544     	CLRR	_overFlag
                                    1- 2545     	.line	635, "main.c"; 	count900s = 0;
                                    1- 2546     	BANKSEL	_count900s
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 2547     	CLRR	_count900s
     0006 02rr                      1- 2548     	CLRR	(_count900s + 1)
                                    1- 2549     	.line	636, "main.c"; 	COM1 = COM2 =  1;
                                    1- 2550     	BANKSEL	_PORTA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 1Arr                      1- 2551     	BSR	_PORTA,5
     0009 0Arr                      1- 2552     	BTRSS	_PORTA,5
     000A 1Frr                      1- 2553     	BCR	_PORTA,7
     000B 0Err                      1- 2554     	BTRSC	_PORTA,5
     000C 1Brr                      1- 2555     	BSR	_PORTA,7
                                    1- 2556     	.line	637, "main.c"; 	IOSTA |= 0x20;
     000D 001r                      1- 2557     	IOSTR	_IOSTA
                                    1- 2558     	BANKSEL	r0x105D
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1- 2559     	MOVAR	r0x105D
     0010 1Arr                      1- 2560     	BSR	r0x105D,5
     0011 01rr                      1- 2561     	MOVR	r0x105D,W
     0012 000r                      1- 2562     	IOST	_IOSTA
                                    1- 2563     	.line	638, "main.c"; 	sleepTime = 0;
                                    1- 2564     	BANKSEL	_sleepTime
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 02rr                      1- 2565     	CLRR	_sleepTime
                                    1- 2566     	.line	639, "main.c"; 	workStep = 0;
                                    1- 2567     	BANKSEL	_workStep
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 2568     	CLRR	_workStep
                                    1- 2569     	.line	640, "main.c"; 	powerFlag = 0;
                                    1- 2570     	BANKSEL	_powerFlag
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 02rr                      1- 2571     	CLRR	_powerFlag
                                    1- 2572     	.line	641, "main.c"; 	powerTime = 0;
                                    1- 2573     	BANKSEL	_powerTime
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 02rr                      1- 2574     	CLRR	_powerTime
     001B 02rr                      1- 2575     	CLRR	(_powerTime + 1)
                                    1- 2576     	.line	642, "main.c"; 	pwm1Stop();
                                    1- 2577     	MCALL	_pwm1Stop
     001C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2578     	.line	644, "main.c"; 	AWUCON = 0x40;
     001D 2140                      1- 2579     	MOVIA	0x40
     001E 00rr                      1- 2580     	MOVAR	_AWUCON
                                    1- 2581     	.line	645, "main.c"; 	BWUCON = 0x02;
     001F 2102                      1- 2582     	MOVIA	0x02
     0020 00rr                      1- 2583     	MOVAR	_BWUCON
                                    1- 2584     	.line	646, "main.c"; 	INTE =  C_INT_PABKey;
     0021 00rr                      1- 2585     	MOVAR	_INTE
                                    1- 2586     	.line	647, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0022 2118                      1- 2587     	MOVIA	0x18
     0023 00rr                      1- 2588     	MOVAR	_PCON
                                    1- 2589     	.line	648, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0024 02rr                      1- 2590     	CLRR	_INTF
                                    1- 2591     	.line	649, "main.c"; 	CLRWDT();
     0025 0002                      1- 2592     	clrwdt
                                    1- 2593     	.line	650, "main.c"; 	ENI();
     0026 0004                      1- 2594     	ENI
                                    1- 2595     	.line	651, "main.c"; 	SLEEP();
     0027 0001                      1- 2596     	sleep
                                    1- 2597     	.line	652, "main.c"; 	AWUCON = 0x00;
     0028 02rr                      1- 2598     	CLRR	_AWUCON
                                    1- 2599     	.line	653, "main.c"; 	BWUCON = 0x00;
     0029 02rr                      1- 2600     	CLRR	_BWUCON
                                    1- 2601     	.line	654, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     002A 2101                      1- 2602     	MOVIA	0x01
     002B 00rr                      1- 2603     	MOVAR	_INTE
                                    1- 2604     	.line	655, "main.c"; 	INTF = 0;
     002C 02rr                      1- 2605     	CLRR	_INTF
                                    1- 2606     	.line	657, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     002D 21B8                      1- 2607     	MOVIA	0xb8
     002E 00rr                      1- 2608     	MOVAR	_PCON
                                    1- 2609     	.line	660, "main.c"; 	}
                                    1- 2610     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 2611     ; exit point of _gotoSleep
                                    1- 2613     ;***
                                    1- 2614     ;  pBlock Stats: dbName = C
                                    1- 2615     ;***
                                    1- 2616     ;has an exit
                                    1- 2617     ;functions called:
                                    1- 2618     ;   __gptrget1
                                    1- 2619     ;   _ind_light_disp
                                    1- 2620     ;   _delay_us
                                    1- 2621     ;   __gptrget1
                                    1- 2622     ;   _ind_light_disp
                                    1- 2623     ;   _delay_us
                                    1- 2624     ;   __gptrget1
                                    1- 2625     ;   _ind_light_disp
                                    1- 2626     ;   _delay_us
                                    1- 2627     ;   __gptrget1
                                    1- 2628     ;   _ind_light_disp
                                    1- 2629     ;   _delay_us
                                    1- 2630     ;5 compiler assigned registers:
                                    1- 2631     ;   r0x1060
                                    1- 2632     ;   r0x1061
                                    1- 2633     ;   STK01
                                    1- 2634     ;   STK00
                                    1- 2635     ;   r0x1062
                                    1- 2636     ;; Starting pCode block
                                    1- 2637     .segment "code"; module=main, function=_refresh
     0000                           1- 2639     _refresh:
                                    1- 2640     ; 2 exit points
                                    1- 2641     	.line	610, "main.c"; 	COM1 = 1;
                                    1- 2642     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 1Brr                      1- 2643     	BSR	_PORTA,7
                                    1- 2644     	.line	611, "main.c"; 	COM2 = 1;
     0002 1Arr                      1- 2645     	BSR	_PORTA,5
                                    1- 2646     	.line	612, "main.c"; 	IOSTA |= 0x20;
     0003 001r                      1- 2647     	IOSTR	_IOSTA
                                    1- 2648     	BANKSEL	r0x1060
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 00rr                      1- 2649     	MOVAR	r0x1060
     0006 1Arr                      1- 2650     	BSR	r0x1060,5
     0007 01rr                      1- 2651     	MOVR	r0x1060,W
     0008 000r                      1- 2652     	IOST	_IOSTA
                                    1- 2653     	.line	613, "main.c"; 	ind_light_disp(table[shiwei]);
                                    1- 2654     	BANKSEL	_shiwei
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 01rr                      1- 2655     	MOVR	_shiwei,W
     000B 25rr                      1- 2656     	ADDIA	(_table + 0)
                                    1- 2657     	BANKSEL	r0x1060
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 2658     	MOVAR	r0x1060
     000E 21rr                      1- 2659     	MOVIA	((_table + 0) >> 8) & 0xff
     000F 0C03                      1- 2660     	BTRSC	STATUS,0
     0010 2501                      1- 2661     	ADDIA	0x01
                                    1- 2662     	BANKSEL	r0x1061
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1- 2663     	MOVAR	r0x1061
                                    1- 2664     	BANKSEL	r0x1060
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2665     	MOVR	r0x1060,W
     0015 00rr                      1- 2666     	MOVAR	STK01
                                    1- 2667     	BANKSEL	r0x1061
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 2668     	MOVR	r0x1061,W
     0018 00rr                      1- 2669     	MOVAR	STK00
     0019 2180                      1- 2670     	MOVIA	0x80
                                    1- 2671     	MCALL	__gptrget1
     001A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2672     ;;100	MOVAR	r0x1062
                                    1- 2673     	MCALL	_ind_light_disp
     001B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2674     	.line	614, "main.c"; 	COM1 = 0;
                                    1- 2675     	BANKSEL	_PORTA
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 1Frr                      1- 2676     	BCR	_PORTA,7
                                    1- 2677     	.line	615, "main.c"; 	COM2 = 1;
     001E 1Arr                      1- 2678     	BSR	_PORTA,5
                                    1- 2679     	.line	616, "main.c"; 	delay_us(REFRESHTIME);
     001F 2164                      1- 2680     	MOVIA	0x64
                                    1- 2681     	MCALL	_delay_us
     0020 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2682     	.line	617, "main.c"; 	COM1 = 1;
                                    1- 2683     	BANKSEL	_PORTA
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 1Brr                      1- 2684     	BSR	_PORTA,7
                                    1- 2685     	.line	618, "main.c"; 	COM2 = 1;
     0023 1Arr                      1- 2686     	BSR	_PORTA,5
                                    1- 2687     	.line	619, "main.c"; 	ind_light_disp(table[gewei]);
                                    1- 2688     	BANKSEL	_gewei
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 2689     	MOVR	_gewei,W
     0026 25rr                      1- 2690     	ADDIA	(_table + 0)
                                    1- 2691     	BANKSEL	r0x1060
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 00rr                      1- 2692     	MOVAR	r0x1060
     0029 21rr                      1- 2693     	MOVIA	((_table + 0) >> 8) & 0xff
     002A 0C03                      1- 2694     	BTRSC	STATUS,0
     002B 2501                      1- 2695     	ADDIA	0x01
                                    1- 2696     	BANKSEL	r0x1061
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1- 2697     	MOVAR	r0x1061
                                    1- 2698     	BANKSEL	r0x1060
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 2699     	MOVR	r0x1060,W
     0030 00rr                      1- 2700     	MOVAR	STK01
                                    1- 2701     	BANKSEL	r0x1061
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1- 2702     	MOVR	r0x1061,W
     0033 00rr                      1- 2703     	MOVAR	STK00
     0034 2180                      1- 2704     	MOVIA	0x80
                                    1- 2705     	MCALL	__gptrget1
     0035 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2706     ;;99	MOVAR	r0x1062
                                    1- 2707     	MCALL	_ind_light_disp
     0036 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2708     	.line	620, "main.c"; 	IOSTA &= 0xDF;
     0037 001r                      1- 2709     	IOSTR	_IOSTA
                                    1- 2710     	BANKSEL	r0x1060
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 00rr                      1- 2711     	MOVAR	r0x1060
     003A 1Err                      1- 2712     	BCR	r0x1060,5
     003B 01rr                      1- 2713     	MOVR	r0x1060,W
     003C 000r                      1- 2714     	IOST	_IOSTA
                                    1- 2715     	.line	621, "main.c"; 	COM1 = 1;
                                    1- 2716     	BANKSEL	_PORTA
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 1Brr                      1- 2717     	BSR	_PORTA,7
                                    1- 2718     	.line	622, "main.c"; 	COM2 = 0;
     003F 1Err                      1- 2719     	BCR	_PORTA,5
                                    1- 2720     	.line	623, "main.c"; 	delay_us(REFRESHTIME);
     0040 2164                      1- 2721     	MOVIA	0x64
                                    1- 2722     	MCALL	_delay_us
     0041 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2723     	.line	624, "main.c"; 	COM1 = 1;
                                    1- 2724     	BANKSEL	_PORTA
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 1Brr                      1- 2725     	BSR	_PORTA,7
                                    1- 2726     	.line	625, "main.c"; 	COM2 = 1;
     0044 1Arr                      1- 2727     	BSR	_PORTA,5
                                    1- 2728     	.line	626, "main.c"; 	IOSTA |= 0x20;
     0045 001r                      1- 2729     	IOSTR	_IOSTA
                                    1- 2730     	BANKSEL	r0x1060
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1- 2731     	MOVAR	r0x1060
     0048 1Arr                      1- 2732     	BSR	r0x1060,5
     0049 01rr                      1- 2733     	MOVR	r0x1060,W
     004A 000r                      1- 2734     	IOST	_IOSTA
                                    1- 2735     	.line	627, "main.c"; 	}
                                    1- 2736     	RETURN	
     004B 0010                      3-   40 m1      ret
                                    1- 2737     ; exit point of _refresh
                                    1- 2739     ;***
                                    1- 2740     ;  pBlock Stats: dbName = C
                                    1- 2741     ;***
                                    1- 2742     ;has an exit
                                    1- 2743     ;functions called:
                                    1- 2744     ;   _Delay10Us
                                    1- 2745     ;   _Delay10Us
                                    1- 2746     ;   _Delay10Us
                                    1- 2747     ;   _Delay10Us
                                    1- 2748     ;   _Delay10Us
                                    1- 2749     ;   _Delay10Us
                                    1- 2750     ;   _Delay10Us
                                    1- 2751     ;   _Delay10Us
                                    1- 2752     ;2 compiler assigned registers:
                                    1- 2753     ;   r0x105E
                                    1- 2754     ;   r0x105F
                                    1- 2755     ;; Starting pCode block
                                    1- 2756     .segment "code"; module=main, function=_ind_light_disp
                                    1- 2758     ;local variable name mapping:
     0000                           1- 2761     _ind_light_disp:
                                    1- 2762     ; 2 exit points
                                    1- 2763     	.line	582, "main.c"; 	void ind_light_disp( u8t udata )
                                    1- 2764     	BANKSEL	r0x105E
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2765     	MOVAR	r0x105E
                                    1- 2766     	.line	585, "main.c"; 	for(Count0=0;Count0<=7;Count0++)
                                    1- 2767     	BANKSEL	r0x105F
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2768     	CLRR	r0x105F
     0004                           1- 2769     _00455_DS_:
                                    1- 2770     	.line	587, "main.c"; 	CLK=0;
                                    1- 2771     	BANKSEL	_PORTA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 1Drr                      1- 2772     	BCR	_PORTA,2
                                    1- 2773     	.line	588, "main.c"; 	Delay10Us();
                                    1- 2774     	MCALL	_Delay10Us
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2775     	.line	589, "main.c"; 	if(udata&0x80)
                                    1- 2776     	BANKSEL	r0x105E
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 0Brr                      1- 2777     	BTRSS	r0x105E,7
                                    1- 2778     	MGOTO	_00452_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2779     	.line	591, "main.c"; 	DAT=1;
     000A 18rr                      1- 2780     	BSR	_PORTB,0
                                    1- 2781     	.line	592, "main.c"; 	Delay10Us();
                                    1- 2782     	MCALL	_Delay10Us
     000B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2783     	MGOTO	_00453_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
     000D                           1- 2784     _00452_DS_:
                                    1- 2785     	.line	596, "main.c"; 	DAT=0;
     000D 1Crr                      1- 2786     	BCR	_PORTB,0
                                    1- 2787     	.line	597, "main.c"; 	Delay10Us();
                                    1- 2788     	MCALL	_Delay10Us
     000E 2rrr                      3-   66 m1      LCALL rom_address
     000F                           1- 2789     _00453_DS_:
                                    1- 2790     	.line	599, "main.c"; 	CLK=1;
                                    1- 2791     	BANKSEL	_PORTA
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 19rr                      1- 2792     	BSR	_PORTA,2
                                    1- 2793     	.line	600, "main.c"; 	Delay10Us();
                                    1- 2794     	MCALL	_Delay10Us
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2795     	.line	601, "main.c"; 	udata<<=1;
     0012 1C03                      1- 2796     	BCR	STATUS,0
                                    1- 2797     	BANKSEL	r0x105E
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 14rr                      1- 2798     	RLR	r0x105E,F
                                    1- 2799     	.line	585, "main.c"; 	for(Count0=0;Count0<=7;Count0++)
                                    1- 2800     	BANKSEL	r0x105F
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 05rr                      1- 2801     	INCR	r0x105F,F
                                    1- 2802     ;;swapping arguments (AOP_TYPEs 1/2)
                                    1- 2803     ;;unsigned compare: left >= lit (0x8=8), size=1
     0017 2108                      1- 2804     	MOVIA	0x08
     0018 04rr                      1- 2805     	SUBAR	r0x105F,W
     0019 0803                      1- 2806     	BTRSS	STATUS,0
                                    1- 2807     	MGOTO	_00455_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2808     	.line	603, "main.c"; 	CLK=0;
                                    1- 2809     	BANKSEL	_PORTA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 1Drr                      1- 2810     	BCR	_PORTA,2
                                    1- 2811     	.line	604, "main.c"; 	DAT=0;
     001D 1Crr                      1- 2812     	BCR	_PORTB,0
                                    1- 2813     	.line	605, "main.c"; 	}
                                    1- 2814     	RETURN	
     001E 0010                      3-   40 m1      ret
                                    1- 2815     ; exit point of _ind_light_disp
                                    1- 2817     ;***
                                    1- 2818     ;  pBlock Stats: dbName = C
                                    1- 2819     ;***
                                    1- 2820     ;has an exit
                                    1- 2821     ;; Starting pCode block
                                    1- 2822     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2824     _pwm1Stop:
                                    1- 2825     ; 2 exit points
                                    1- 2826     	.line	576, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2827     	CLRA	
     0001 00rr                      1- 2828     	SFUN	_T1CR1
                                    1- 2829     	.line	577, "main.c"; 	PORTB &= 0xF7;
     0002 1Drr                      1- 2830     	BCR	_PORTB,3
                                    1- 2831     	.line	578, "main.c"; 	}
                                    1- 2832     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 2833     ; exit point of _pwm1Stop
                                    1- 2835     ;***
                                    1- 2836     ;  pBlock Stats: dbName = C
                                    1- 2837     ;***
                                    1- 2838     ;has an exit
                                    1- 2839     ;1 compiler assigned register :
                                    1- 2840     ;   r0x1063
                                    1- 2841     ;; Starting pCode block
                                    1- 2842     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2844     _pwm1Init:
                                    1- 2845     ; 2 exit points
                                    1- 2846     	.line	564, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2847     	SFUNR	_T1CR1
                                    1- 2848     	BANKSEL	r0x1063
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2849     	MOVAR	r0x1063
     0003 0Frr                      1- 2850     	BTRSC	r0x1063,7
                                    1- 2851     	.line	565, "main.c"; 	return;
                                    1- 2852     	MGOTO	_00442_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2853     	.line	566, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2854     	CLRR	_TMRH
                                    1- 2855     	.line	567, "main.c"; 	TMR1 = 60;							//频率为110K
     0006 213C                      1- 2856     	MOVIA	0x3c
     0007 00rr                      1- 2857     	SFUN	_TMR1
                                    1- 2858     	.line	570, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Dis;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2108                      1- 2859     	MOVIA	0x08
     0009 00rr                      1- 2860     	SFUN	_T1CR2
                                    1- 2861     	.line	571, "main.c"; 	T1CR1	 = C_PWM1_En | C_PWM1_Active_Hi | C_TMR1_Reload | C_TMR1_En;
     000A 2183                      1- 2862     	MOVIA	0x83
     000B 00rr                      1- 2863     	SFUN	_T1CR1
     000C                           1- 2864     _00442_DS_:
                                    1- 2865     	.line	572, "main.c"; 	}
                                    1- 2866     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2867     ; exit point of _pwm1Init
                                    1- 2869     ;***
                                    1- 2870     ;  pBlock Stats: dbName = C
                                    1- 2871     ;***
                                    1- 2872     ;has an exit
                                    1- 2873     ;; Starting pCode block
                                    1- 2874     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2876     _pwmStop:
                                    1- 2877     ; 2 exit points
                                    1- 2878     	.line	557, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2879     	CLRA	
     0001 00rr                      1- 2880     	SFUN	_T2CR1
                                    1- 2881     	.line	558, "main.c"; 	PORTB &= 0xFB;
     0002 1Drr                      1- 2882     	BCR	_PORTB,2
                                    1- 2883     	.line	559, "main.c"; 	}
                                    1- 2884     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 2885     ; exit point of _pwmStop
                                    1- 2887     ;***
                                    1- 2888     ;  pBlock Stats: dbName = C
                                    1- 2889     ;***
                                    1- 2890     ;has an exit
                                    1- 2891     ;1 compiler assigned register :
                                    1- 2892     ;   r0x1064
                                    1- 2893     ;; Starting pCode block
                                    1- 2894     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2896     _pwmInit:
                                    1- 2897     ; 2 exit points
                                    1- 2898     	.line	545, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2899     	SFUNR	_T1CR1
                                    1- 2900     	BANKSEL	r0x1064
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2901     	MOVAR	r0x1064
     0003 0Frr                      1- 2902     	BTRSC	r0x1064,7
                                    1- 2903     	.line	546, "main.c"; 	return;
                                    1- 2904     	MGOTO	_00431_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2905     	.line	547, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2906     	CLRR	_TMRH
                                    1- 2907     	.line	548, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 2908     	MOVIA	0x64
     0007 00rr                      1- 2909     	SFUN	_TMR2
                                    1- 2910     	.line	551, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2101                      1- 2911     	MOVIA	0x01
     0009 00rr                      1- 2912     	SFUN	_T2CR2
                                    1- 2913     	.line	552, "main.c"; 	T2CR1	 = C_PWM2_En | C_PWM2_Active_Hi | C_TMR2_Reload | C_TMR2_En;
     000A 2183                      1- 2914     	MOVIA	0x83
     000B 00rr                      1- 2915     	SFUN	_T2CR1
     000C                           1- 2916     _00431_DS_:
                                    1- 2917     	.line	553, "main.c"; 	}
                                    1- 2918     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2919     ; exit point of _pwmInit
                                    1- 2921     ;***
                                    1- 2922     ;  pBlock Stats: dbName = C
                                    1- 2923     ;***
                                    1- 2924     ;has an exit
                                    1- 2925     ;functions called:
                                    1- 2926     ;   _delay
                                    1- 2927     ;   _delay
                                    1- 2928     ;1 compiler assigned register :
                                    1- 2929     ;   STK00
                                    1- 2930     ;; Starting pCode block
                                    1- 2931     .segment "code"; module=main, function=_initAD
     0000                           1- 2933     _initAD:
                                    1- 2934     ; 2 exit points
                                    1- 2935     	.line	522, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 2936     	MOVIA	0x84
     0001 00rr                      1- 2937     	MOVAR	_ADMD
                                    1- 2938     	.line	527, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 2939     	CLRR	_ADVREFH
                                    1- 2940     	.line	532, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 2941     	MOVIA	0x10
     0004 00rr                      1- 2942     	MOVAR	_ADR
                                    1- 2943     	.line	534, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 2944     	MOVIA	0x03
     0006 00rr                      1- 2945     	MOVAR	_ADCR
                                    1- 2946     	.line	537, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 2947     	BSR	_ADMDbits,4
                                    1- 2948     	.line	538, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 2949     	MOVIA	0x64
     0009 00rr                      1- 2950     	MOVAR	STK00
     000A 2100                      1- 2951     	MOVIA	0x00
                                    1- 2952     	MCALL	_delay
     000B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2953     	.line	541, "main.c"; 	}
                                    1- 2954     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2955     ; exit point of _initAD
                                    1- 2957     ;***
                                    1- 2958     ;  pBlock Stats: dbName = C
                                    1- 2959     ;***
                                    1- 2960     ;has an exit
                                    1- 2961     ;; Starting pCode block
                                    1- 2962     .segment "code"; module=main, function=_initSys
     0000                           1- 2964     _initSys:
                                    1- 2965     ; 2 exit points
                                    1- 2966     	.line	491, "main.c"; 	DISI();
     0000 0013                      1- 2967     	DISI
                                    1- 2968     	.line	492, "main.c"; 	IOSTA = C_PA6_Input  | C_PA4_Input | C_PA3_Input;
     0001 2158                      1- 2969     	MOVIA	0x58
     0002 000r                      1- 2970     	IOST	_IOSTA
                                    1- 2971     	.line	493, "main.c"; 	IOSTB = C_PB1_Input ;
     0003 2102                      1- 2972     	MOVIA	0x02
     0004 000r                      1- 2973     	IOST	_IOSTB
                                    1- 2974     	.line	494, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2975     	CLRR	_PORTB
                                    1- 2976     	.line	495, "main.c"; 	PORTA = 0x00;
                                    1- 2977     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2978     	CLRR	_PORTA
                                    1- 2979     	.line	496, "main.c"; 	APHCON = 0xFF;
     0008 21FF                      1- 2980     	MOVIA	0xff
     0009 000r                      1- 2981     	IOST	_APHCON
                                    1- 2982     	.line	497, "main.c"; 	BPHCON = 0xFF;
     000A 00rr                      1- 2983     	MOVAR	_BPHCON
                                    1- 2984     	.line	498, "main.c"; 	ABPLCON = 0xFF;
     000B 00rr                      1- 2985     	MOVAR	_ABPLCON
                                    1- 2986     	.line	500, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000C 2101                      1- 2987     	MOVIA	0x01
     000D 00rr                      1- 2988     	MOVAR	_INTE
                                    1- 2989     	.line	502, "main.c"; 	PCON1 = C_TMR0_Dis;
     000E 0200                      1- 2990     	CLRA	
     000F 000r                      1- 2991     	IOST	_PCON1
                                    1- 2992     	.line	504, "main.c"; 	TMR0 = 55;
     0010 2137                      1- 2993     	MOVIA	0x37
     0011 00rr                      1- 2994     	MOVAR	_TMR0
                                    1- 2995     	.line	505, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0012 2101                      1- 2996     	MOVIA	0x01
     0013 0003                      1- 2997     	T0MD	
                                    1- 2998     	.line	507, "main.c"; 	PCON1 = C_TMR0_En;
     0014 000r                      1- 2999     	IOST	_PCON1
                                    1- 3000     	.line	510, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0015 2198                      1- 3001     	MOVIA	0x98
     0016 00rr                      1- 3002     	MOVAR	_PCON
                                    1- 3003     	.line	513, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0017 2101                      1- 3004     	MOVIA	0x01
     0018 000r                      1- 3005     	IOST	_PCON1
                                    1- 3006     	.line	514, "main.c"; 	ENI();
     0019 0004                      1- 3007     	ENI
                                    1- 3008     	.line	515, "main.c"; 	closeFlag = 0;
                                    1- 3009     	BANKSEL	_closeFlag
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 02rr                      1- 3010     	CLRR	_closeFlag
                                    1- 3011     	.line	516, "main.c"; 	}
                                    1- 3012     	RETURN	
     001C 0010                      3-   40 m1      ret
                                    1- 3013     ; exit point of _initSys
                                    1- 3015     ;***
                                    1- 3016     ;  pBlock Stats: dbName = C
                                    1- 3017     ;***
                                    1- 3018     ;has an exit
                                    1- 3019     ;functions called:
                                    1- 3020     ;   _checkKeyAD
                                    1- 3021     ;   _checkKeyAD
                                    1- 3022     ;1 compiler assigned register :
                                    1- 3023     ;   r0x1065
                                    1- 3024     ;; Starting pCode block
                                    1- 3025     .segment "code"; module=main, function=_keyRead
                                    1- 3027     ;local variable name mapping:
     0000                           1- 3029     _keyRead:
                                    1- 3030     ; 2 exit points
                                    1- 3031     	.line	447, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 3032     	BANKSEL	r0x1065
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 3033     	MOVAR	r0x1065
                                    1- 3034     	.line	449, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 3035     	MOVR	r0x1065,W
     0003 0D03                      1- 3036     	BTRSC	STATUS,2
                                    1- 3037     	MGOTO	_00414_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3038     	.line	451, "main.c"; 	keyCount++;
                                    1- 3039     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 3040     	INCR	_keyCount,F
                                    1- 3041     	.line	452, "main.c"; 	checkKeyAD();
                                    1- 3042     	MCALL	_checkKeyAD
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3043     ;;unsigned compare: left < lit (0x96=150), size=1
                                    1- 3044     	.line	453, "main.c"; 	if(keyCount >= 150)
     0008 2196                      1- 3045     	MOVIA	0x96
                                    1- 3046     	BANKSEL	_keyCount
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1- 3047     	SUBAR	_keyCount,W
     000B 0803                      1- 3048     	BTRSS	STATUS,0
                                    1- 3049     	MGOTO	_00415_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3050     	.line	455, "main.c"; 	keyCount = 150;
     000D 2196                      1- 3051     	MOVIA	0x96
     000E 00rr                      1- 3052     	MOVAR	_keyCount
                                    1- 3053     	.line	456, "main.c"; 	if(keyNum == 1)
                                    1- 3054     	BANKSEL	_keyNum
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 3055     	MOVR	_keyNum,W
     0011 2401                      1- 3056     	XORIA	0x01
     0012 0903                      1- 3057     	BTRSS	STATUS,2
                                    1- 3058     	MGOTO	_00415_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3059     	.line	458, "main.c"; 	if(!longPressFlag)
                                    1- 3060     	BANKSEL	_longPressFlag
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 01rr                      1- 3061     	MOVR	_longPressFlag,W
     0016 0903                      1- 3062     	BTRSS	STATUS,2
                                    1- 3063     	MGOTO	_00415_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3064     	.line	460, "main.c"; 	longPressFlag = 1;
     0018 2101                      1- 3065     	MOVIA	0x01
     0019 00rr                      1- 3066     	MOVAR	_longPressFlag
                                    1- 3067     	.line	461, "main.c"; 	return 2;
     001A 2102                      1- 3068     	MOVIA	0x02
                                    1- 3069     	MGOTO	_00416_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
     001C                           1- 3070     _00414_DS_:
                                    1- 3071     	.line	468, "main.c"; 	if(keyNum == 1 && keyCount >= 100)
                                    1- 3072     	BANKSEL	_keyNum
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 01rr                      1- 3073     	MOVR	_keyNum,W
     001E 2401                      1- 3074     	XORIA	0x01
     001F 0903                      1- 3075     	BTRSS	STATUS,2
                                    1- 3076     	MGOTO	_00410_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3077     ;;unsigned compare: left < lit (0x64=100), size=1
     0021 2164                      1- 3078     	MOVIA	0x64
                                    1- 3079     	BANKSEL	_keyCount
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 04rr                      1- 3080     	SUBAR	_keyCount,W
     0024 0803                      1- 3081     	BTRSS	STATUS,0
                                    1- 3082     	MGOTO	_00410_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3083     	.line	470, "main.c"; 	keyCount = 0;
     0026 02rr                      1- 3084     	CLRR	_keyCount
                                    1- 3085     	.line	471, "main.c"; 	longPressFlag = 0;
                                    1- 3086     	BANKSEL	_longPressFlag
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 3087     	CLRR	_longPressFlag
                                    1- 3088     	.line	472, "main.c"; 	return	0;
     0029 2100                      1- 3089     	MOVIA	0x00
                                    1- 3090     	MGOTO	_00416_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3091     ;;unsigned compare: left < lit (0x4=4), size=1
     002B                           1- 3092     _00410_DS_:
                                    1- 3093     	.line	474, "main.c"; 	else if(keyCount >= 4)
     002B 2104                      1- 3094     	MOVIA	0x04
                                    1- 3095     	BANKSEL	_keyCount
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 04rr                      1- 3096     	SUBAR	_keyCount,W
     002E 0803                      1- 3097     	BTRSS	STATUS,0
                                    1- 3098     	MGOTO	_00411_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3099     	.line	476, "main.c"; 	keyCount = 0;
     0030 02rr                      1- 3100     	CLRR	_keyCount
                                    1- 3101     	.line	477, "main.c"; 	return	1;
     0031 2101                      1- 3102     	MOVIA	0x01
                                    1- 3103     	MGOTO	_00416_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033                           1- 3104     _00411_DS_:
                                    1- 3105     	.line	479, "main.c"; 	longPressFlag = 0;
                                    1- 3106     	BANKSEL	_longPressFlag
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 02rr                      1- 3107     	CLRR	_longPressFlag
                                    1- 3108     	.line	480, "main.c"; 	keyCount = 0;
                                    1- 3109     	BANKSEL	_keyCount
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 02rr                      1- 3110     	CLRR	_keyCount
     0037                           1- 3111     _00415_DS_:
                                    1- 3112     	.line	482, "main.c"; 	return 0;
     0037 2100                      1- 3113     	MOVIA	0x00
     0038                           1- 3114     _00416_DS_:
                                    1- 3115     	.line	483, "main.c"; 	}
                                    1- 3116     	RETURN	
     0038 0010                      3-   40 m1      ret
                                    1- 3117     ; exit point of _keyRead
                                    1- 3119     ;***
                                    1- 3120     ;  pBlock Stats: dbName = C
                                    1- 3121     ;***
                                    1- 3122     ;has an exit
                                    1- 3123     ;functions called:
                                    1- 3124     ;   _keyRead
                                    1- 3125     ;   _powerOff
                                    1- 3126     ;   _setShowNum
                                    1- 3127     ;   _keyRead
                                    1- 3128     ;   _powerOff
                                    1- 3129     ;   _setShowNum
                                    1- 3130     ;1 compiler assigned register :
                                    1- 3131     ;   r0x1066
                                    1- 3132     ;; Starting pCode block
                                    1- 3133     .segment "code"; module=main, function=_keyCtr
                                    1- 3135     ;local variable name mapping:
     0000                           1- 3137     _keyCtr:
                                    1- 3138     ; 2 exit points
                                    1- 3139     	.line	398, "main.c"; 	u8t keyClick = keyRead(0x02 & ~PORTB);
     0000 07rr                      1- 3140     	COMR	_PORTB,W
                                    1- 3141     	BANKSEL	r0x1066
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3142     	MOVAR	r0x1066
     0003 2102                      1- 3143     	MOVIA	0x02
     0004 10rr                      1- 3144     	ANDAR	r0x1066,F
     0005 01rr                      1- 3145     	MOVR	r0x1066,W
                                    1- 3146     	MCALL	_keyRead
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3147     	BANKSEL	r0x1066
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 00rr                      1- 3148     	MOVAR	r0x1066
                                    1- 3149     	.line	399, "main.c"; 	if(keyNum == 1)
                                    1- 3150     	BANKSEL	_keyNum
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 01rr                      1- 3151     	MOVR	_keyNum,W
     000B 2401                      1- 3152     	XORIA	0x01
     000C 0903                      1- 3153     	BTRSS	STATUS,2
                                    1- 3154     	MGOTO	_00394_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3155     	.line	401, "main.c"; 	if(keyClick == 2)
                                    1- 3156     	BANKSEL	r0x1066
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 3157     	MOVR	r0x1066,W
     0010 2402                      1- 3158     	XORIA	0x02
     0011 0903                      1- 3159     	BTRSS	STATUS,2
                                    1- 3160     	MGOTO	_00396_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3161     	.line	403, "main.c"; 	beepTime = 30;
     0013 211E                      1- 3162     	MOVIA	0x1e
                                    1- 3163     	BANKSEL	_beepTime
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 3164     	MOVAR	_beepTime
                                    1- 3165     	.line	404, "main.c"; 	if(modeStep > 0)
                                    1- 3166     	BANKSEL	_modeStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 3167     	MOVR	_modeStep,W
     0018 0D03                      1- 3168     	BTRSC	STATUS,2
                                    1- 3169     	MGOTO	_00372_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3170     	.line	406, "main.c"; 	modeStep = 0;
     001A 02rr                      1- 3171     	CLRR	_modeStep
                                    1- 3172     	.line	407, "main.c"; 	workStep = 0;
                                    1- 3173     	BANKSEL	_workStep
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 3174     	CLRR	_workStep
                                    1- 3175     	.line	408, "main.c"; 	powerOff();
                                    1- 3176     	MCALL	_powerOff
     001D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3177     	MGOTO	_00396_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
     001F                           1- 3178     _00372_DS_:
                                    1- 3179     	.line	412, "main.c"; 	modeStep = 1;
     001F 2101                      1- 3180     	MOVIA	0x01
                                    1- 3181     	BANKSEL	_modeStep
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 3182     	MOVAR	_modeStep
                                    1- 3183     	.line	413, "main.c"; 	workStep = 1;
                                    1- 3184     	BANKSEL	_workStep
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 00rr                      1- 3185     	MOVAR	_workStep
                                    1- 3186     	.line	414, "main.c"; 	setShowNum();
                                    1- 3187     	MCALL	_setShowNum
     0024 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3188     	MGOTO	_00396_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
     0026                           1- 3189     _00394_DS_:
                                    1- 3190     	.line	418, "main.c"; 	else if(keyNum == 2)
                                    1- 3191     	BANKSEL	_keyNum
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 3192     	MOVR	_keyNum,W
     0028 2402                      1- 3193     	XORIA	0x02
     0029 0903                      1- 3194     	BTRSS	STATUS,2
                                    1- 3195     	MGOTO	_00391_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3196     	.line	420, "main.c"; 	if(keyClick == 1)
                                    1- 3197     	BANKSEL	r0x1066
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1- 3198     	MOVR	r0x1066,W
     002D 2401                      1- 3199     	XORIA	0x01
     002E 0903                      1- 3200     	BTRSS	STATUS,2
                                    1- 3201     	MGOTO	_00396_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3202     	.line	422, "main.c"; 	if(modeStep > 0)
                                    1- 3203     	BANKSEL	_modeStep
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1- 3204     	MOVR	_modeStep,W
     0032 0D03                      1- 3205     	BTRSC	STATUS,2
                                    1- 3206     	MGOTO	_00396_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3207     	.line	424, "main.c"; 	beepTime = 20;
     0034 2114                      1- 3208     	MOVIA	0x14
                                    1- 3209     	BANKSEL	_beepTime
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 00rr                      1- 3210     	MOVAR	_beepTime
                                    1- 3211     	.line	425, "main.c"; 	if(++modeStep > 6)
                                    1- 3212     	BANKSEL	_modeStep
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 05rr                      1- 3213     	INCR	_modeStep,F
                                    1- 3214     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3215     ;;unsigned compare: left >= lit (0x7=7), size=1
     0039 2107                      1- 3216     	MOVIA	0x07
     003A 04rr                      1- 3217     	SUBAR	_modeStep,W
     003B 0803                      1- 3218     	BTRSS	STATUS,0
                                    1- 3219     	MGOTO	_00396_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3220     	.line	426, "main.c"; 	modeStep = 1;
     003D 2101                      1- 3221     	MOVIA	0x01
     003E 00rr                      1- 3222     	MOVAR	_modeStep
                                    1- 3223     	MGOTO	_00396_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
     0040                           1- 3224     _00391_DS_:
                                    1- 3225     	.line	430, "main.c"; 	else if(keyNum == 3)
                                    1- 3226     	BANKSEL	_keyNum
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 01rr                      1- 3227     	MOVR	_keyNum,W
     0042 2403                      1- 3228     	XORIA	0x03
     0043 0903                      1- 3229     	BTRSS	STATUS,2
                                    1- 3230     	MGOTO	_00396_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3231     	.line	432, "main.c"; 	if(keyClick == 1)
                                    1- 3232     	BANKSEL	r0x1066
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1- 3233     	MOVR	r0x1066,W
     0047 2401                      1- 3234     	XORIA	0x01
     0048 0903                      1- 3235     	BTRSS	STATUS,2
                                    1- 3236     	MGOTO	_00396_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3237     	.line	434, "main.c"; 	if(workStep > 0)
                                    1- 3238     	BANKSEL	_workStep
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1- 3239     	MOVR	_workStep,W
     004C 0D03                      1- 3240     	BTRSC	STATUS,2
                                    1- 3241     	MGOTO	_00396_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3242     	.line	436, "main.c"; 	beepTime = 20;
     004E 2114                      1- 3243     	MOVIA	0x14
                                    1- 3244     	BANKSEL	_beepTime
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 00rr                      1- 3245     	MOVAR	_beepTime
                                    1- 3246     	.line	437, "main.c"; 	if(++workStep > 12)
                                    1- 3247     	BANKSEL	_workStep
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 05rr                      1- 3248     	INCR	_workStep,F
                                    1- 3249     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3250     ;;unsigned compare: left >= lit (0xD=13), size=1
     0053 210D                      1- 3251     	MOVIA	0x0d
     0054 04rr                      1- 3252     	SUBAR	_workStep,W
     0055 0803                      1- 3253     	BTRSS	STATUS,0
                                    1- 3254     	MGOTO	_00396_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3255     	.line	438, "main.c"; 	workStep = 1;
     0057 2101                      1- 3256     	MOVIA	0x01
     0058 00rr                      1- 3257     	MOVAR	_workStep
     0059                           1- 3258     _00396_DS_:
                                    1- 3259     	.line	443, "main.c"; 	}
                                    1- 3260     	RETURN	
     0059 0010                      3-   40 m1      ret
                                    1- 3261     ; exit point of _keyCtr
                                    1- 3263     ;***
                                    1- 3264     ;  pBlock Stats: dbName = C
                                    1- 3265     ;***
                                    1- 3266     ;functions called:
                                    1- 3267     ;   __mulchar
                                    1- 3268     ;   _pwmInit
                                    1- 3269     ;   _pwmInit
                                    1- 3270     ;   _pwmStop
                                    1- 3271     ;   __mulchar
                                    1- 3272     ;   _pwmStop
                                    1- 3273     ;   __mulchar
                                    1- 3274     ;   _pwmInit
                                    1- 3275     ;   _pwmInit
                                    1- 3276     ;   _pwmStop
                                    1- 3277     ;   __mulchar
                                    1- 3278     ;   _pwmStop
                                    1- 3279     ;2 compiler assigned registers:
                                    1- 3280     ;   STK00
                                    1- 3281     ;   r0x1067
                                    1- 3282     ;; Starting pCode block
                                    1- 3283     .segment "code"; module=main, function=_workCtr
                                    1- 3285     ;local variable name mapping:
     0000                           1- 3287     _workCtr:
                                    1- 3288     ; 0 exit points
                                    1- 3289     	.line	340, "main.c"; 	if(powerTime > 0)
                                    1- 3290     	BANKSEL	_powerTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 3291     	MOVR	_powerTime,W
     0002 11rr                      1- 3292     	IORAR	(_powerTime + 1),W
     0003 0D03                      1- 3293     	BTRSC	STATUS,2
                                    1- 3294     	MGOTO	_00012_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3295     	.line	342, "main.c"; 	if(--powerTime == 0)
     0005 21FF                      1- 3296     	MOVIA	0xff
     0006 03rr                      1- 3297     	ADDAR	_powerTime,F
     0007 0803                      1- 3298     	BTRSS	STATUS,0
     0008 06rr                      1- 3299     	DECR	(_powerTime + 1),F
     0009 01rr                      1- 3300     	MOVR	_powerTime,W
     000A 11rr                      1- 3301     	IORAR	(_powerTime + 1),W
     000B 0903                      1- 3302     	BTRSS	STATUS,2
                                    1- 3303     	MGOTO	_00012_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3304     	.line	343, "main.c"; 	powerFlag = 0;
                                    1- 3305     	BANKSEL	_powerFlag
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 3306     	CLRR	_powerFlag
     000F                           1- 3307     _00012_DS_:
                                    1- 3308     	.line	347, "main.c"; 	if(firstTime > 0)
                                    1- 3309     	BANKSEL	_firstTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 3310     	MOVR	_firstTime,W
     0011 0D03                      1- 3311     	BTRSC	STATUS,2
                                    1- 3312     	MGOTO	_00364_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3313     	.line	349, "main.c"; 	firstTime--;
     0013 06rr                      1- 3314     	DECR	_firstTime,F
                                    1- 3315     	.line	350, "main.c"; 	powerTime = 500;
     0014 21F4                      1- 3316     	MOVIA	0xf4
                                    1- 3317     	BANKSEL	_powerTime
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 00rr                      1- 3318     	MOVAR	_powerTime
     0017 2101                      1- 3319     	MOVIA	0x01
     0018 00rr                      1- 3320     	MOVAR	(_powerTime + 1)
                                    1- 3321     	MGOTO	_00366_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
     001A                           1- 3322     _00364_DS_:
                                    1- 3323     	.line	354, "main.c"; 	if(modeStep > 0)
                                    1- 3324     	BANKSEL	_modeStep
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 01rr                      1- 3325     	MOVR	_modeStep,W
     001C 0D03                      1- 3326     	BTRSC	STATUS,2
                                    1- 3327     	MGOTO	_00361_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3328     	.line	356, "main.c"; 	powerFlag = 1;
     001E 2101                      1- 3329     	MOVIA	0x01
                                    1- 3330     	BANKSEL	_powerFlag
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 00rr                      1- 3331     	MOVAR	_powerFlag
                                    1- 3332     	.line	357, "main.c"; 	if(workStep > 0)
                                    1- 3333     	BANKSEL	_workStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 3334     	MOVR	_workStep,W
     0023 0D03                      1- 3335     	BTRSC	STATUS,2
                                    1- 3336     	MGOTO	_00346_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3337     	.line	359, "main.c"; 	PWM2DUTY = 63 + workStep*3;
     0025 2103                      1- 3338     	MOVIA	0x03
     0026 00rr                      1- 3339     	MOVAR	STK00
     0027 01rr                      1- 3340     	MOVR	_workStep,W
                                    1- 3341     	MCALL	__mulchar
     0028 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3342     	BANKSEL	r0x1067
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 3343     	MOVAR	r0x1067
     002B 213F                      1- 3344     	MOVIA	0x3f
     002C 03rr                      1- 3345     	ADDAR	r0x1067,F
     002D 01rr                      1- 3346     	MOVR	r0x1067,W
     002E 00rr                      1- 3347     	SFUN	_PWM2DUTY
     002F                           1- 3348     _00346_DS_:
                                    1- 3349     	.line	361, "main.c"; 	if(modeStep == 1)
                                    1- 3350     	BANKSEL	_modeStep
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 3351     	MOVR	_modeStep,W
     0031 2401                      1- 3352     	XORIA	0x01
     0032 0903                      1- 3353     	BTRSS	STATUS,2
                                    1- 3354     	MGOTO	_00351_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3355     	.line	363, "main.c"; 	pwmInit();
                                    1- 3356     	MCALL	_pwmInit
     0034 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3357     	MGOTO	_00352_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
     0036                           1- 3358     _00351_DS_:
                                    1- 3359     	.line	365, "main.c"; 	else if(modeTime < limitTime)
                                    1- 3360     	BANKSEL	_limitTime
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 01rr                      1- 3361     	MOVR	_limitTime,W
                                    1- 3362     	BANKSEL	_modeTime
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 04rr                      1- 3363     	SUBAR	_modeTime,W
     003A 0C03                      1- 3364     	BTRSC	STATUS,0
                                    1- 3365     	MGOTO	_00348_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3366     	.line	367, "main.c"; 	pwmInit();
                                    1- 3367     	MCALL	_pwmInit
     003C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3368     	MGOTO	_00352_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
     003E                           1- 3369     _00348_DS_:
                                    1- 3370     	.line	371, "main.c"; 	pwmStop();
                                    1- 3371     	MCALL	_pwmStop
     003E 2rrr                      3-   66 m1      LCALL rom_address
     003F                           1- 3372     _00352_DS_:
                                    1- 3373     	.line	373, "main.c"; 	limitTime = 90-(modeStep*10);
     003F 210A                      1- 3374     	MOVIA	0x0a
     0040 00rr                      1- 3375     	MOVAR	STK00
                                    1- 3376     	BANKSEL	_modeStep
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 01rr                      1- 3377     	MOVR	_modeStep,W
                                    1- 3378     	MCALL	__mulchar
     0043 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3379     ;;3	MOVAR	r0x1067
     0044 275A                      1- 3380     	SUBIA	0x5a
                                    1- 3381     	BANKSEL	_limitTime
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 00rr                      1- 3382     	MOVAR	_limitTime
                                    1- 3383     	.line	374, "main.c"; 	u8t tempTime = limitTime + limitTime;
     0047 1C03                      1- 3384     	BCR	STATUS,0
     0048 14rr                      1- 3385     	RLR	_limitTime,W
                                    1- 3386     	BANKSEL	r0x1067
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 3387     	MOVAR	r0x1067
                                    1- 3388     	.line	375, "main.c"; 	if(++modeTime >= tempTime)
                                    1- 3389     	BANKSEL	_modeTime
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 05rr                      1- 3390     	INCR	_modeTime,F
                                    1- 3391     	BANKSEL	r0x1067
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 01rr                      1- 3392     	MOVR	r0x1067,W
                                    1- 3393     	BANKSEL	_modeTime
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 04rr                      1- 3394     	SUBAR	_modeTime,W
     0051 0803                      1- 3395     	BTRSS	STATUS,0
                                    1- 3396     	MGOTO	_00366_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3397     	.line	377, "main.c"; 	modeTime = 0;
     0053 02rr                      1- 3398     	CLRR	_modeTime
                                    1- 3399     	MGOTO	_00366_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
     0055                           1- 3400     _00361_DS_:
                                    1- 3401     	.line	382, "main.c"; 	powerFlag = 0;
                                    1- 3402     	BANKSEL	_powerFlag
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 02rr                      1- 3403     	CLRR	_powerFlag
                                    1- 3404     	.line	383, "main.c"; 	pwmStop();
                                    1- 3405     	MCALL	_pwmStop
     0057 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3406     	.line	384, "main.c"; 	if(overFlag || zeroFlag)
                                    1- 3407     	BANKSEL	_overFlag
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 01rr                      1- 3408     	MOVR	_overFlag,W
     005A 0903                      1- 3409     	BTRSS	STATUS,2
                                    1- 3410     	MGOTO	_00357_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3411     	BANKSEL	_zeroFlag
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 01rr                      1- 3412     	MOVR	_zeroFlag,W
     005E 0D03                      1- 3413     	BTRSC	STATUS,2
                                    1- 3414     	MGOTO	_00366_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
     0060                           1- 3415     _00357_DS_:
                                    1- 3416     	.line	386, "main.c"; 	if(++shanshuoTime > 50)
                                    1- 3417     	BANKSEL	_shanshuoTime
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 05rr                      1- 3418     	INCR	_shanshuoTime,F
                                    1- 3419     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3420     ;;unsigned compare: left >= lit (0x33=51), size=1
     0062 2133                      1- 3421     	MOVIA	0x33
     0063 04rr                      1- 3422     	SUBAR	_shanshuoTime,W
     0064 0C03                      1- 3423     	BTRSC	STATUS,0
                                    1- 3424     	.line	387, "main.c"; 	shanshuoTime = 0;
     0065 02rr                      1- 3425     	CLRR	_shanshuoTime
     0066                           1- 3426     _00366_DS_:
                                    1- 3427     	.line	394, "main.c"; 	}
                                    1- 3428     	RETURN	
     0066 0010                      3-   40 m1      ret
                                    1- 3430     ;***
                                    1- 3431     ;  pBlock Stats: dbName = C
                                    1- 3432     ;***
                                    1- 3433     ;has an exit
                                    1- 3434     ;functions called:
                                    1- 3435     ;   _pwmStop
                                    1- 3436     ;   _pwm1Stop
                                    1- 3437     ;   _pwm1Init
                                    1- 3438     ;   _pwm1Stop
                                    1- 3439     ;   _keyCtr
                                    1- 3440     ;   _workCtr
                                    1- 3441     ;   _pwmStop
                                    1- 3442     ;   _pwm1Stop
                                    1- 3443     ;   _pwm1Init
                                    1- 3444     ;   _pwm1Stop
                                    1- 3445     ;   _keyCtr
                                    1- 3446     ;   _workCtr
                                    1- 3447     ;2 compiler assigned registers:
                                    1- 3448     ;   r0x1068
                                    1- 3449     ;   r0x1069
                                    1- 3450     ;; Starting pCode block
                                    1- 3451     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 3453     _chrgCtr:
                                    1- 3454     ; 2 exit points
                                    1- 3455     	.line	253, "main.c"; 	if(0x40&PORTA)
                                    1- 3456     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Brr                      1- 3457     	BTRSS	_PORTA,6
                                    1- 3458     	MGOTO	_00272_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3459     	.line	256, "main.c"; 	zeroFlag = 0;
                                    1- 3460     	BANKSEL	_zeroFlag
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 3461     	CLRR	_zeroFlag
                                    1- 3462     	.line	257, "main.c"; 	chrgFlag = 1;
     0005 2101                      1- 3463     	MOVIA	0x01
                                    1- 3464     	BANKSEL	_chrgFlag
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 3465     	MOVAR	_chrgFlag
                                    1- 3466     	.line	258, "main.c"; 	powerFlag = 1;
                                    1- 3467     	BANKSEL	_powerFlag
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 3468     	MOVAR	_powerFlag
                                    1- 3469     	.line	259, "main.c"; 	powerTime = 0;
                                    1- 3470     	BANKSEL	_powerTime
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 02rr                      1- 3471     	CLRR	_powerTime
     000C 02rr                      1- 3472     	CLRR	(_powerTime + 1)
                                    1- 3473     	.line	260, "main.c"; 	firstTime = 0;
                                    1- 3474     	BANKSEL	_firstTime
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 3475     	CLRR	_firstTime
                                    1- 3476     	.line	261, "main.c"; 	workStep = 0;
                                    1- 3477     	BANKSEL	_workStep
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 3478     	CLRR	_workStep
                                    1- 3479     	.line	262, "main.c"; 	pwmStop();
                                    1- 3480     	MCALL	_pwmStop
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3481     ;;unsigned compare: left < lit (0x63=99), size=1
                                    1- 3482     	.line	263, "main.c"; 	if(showBatValue < 99)
     0012 2163                      1- 3483     	MOVIA	0x63
                                    1- 3484     	BANKSEL	_showBatValue
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 04rr                      1- 3485     	SUBAR	_showBatValue,W
     0015 0C03                      1- 3486     	BTRSC	STATUS,0
                                    1- 3487     	MGOTO	_00013_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3488     	.line	264, "main.c"; 	fullLock = 0;
                                    1- 3489     	BANKSEL	_fullLock
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 02rr                      1- 3490     	CLRR	_fullLock
     0019                           1- 3491     _00013_DS_:
                                    1- 3492     	.line	266, "main.c"; 	if(fullLock || (showBatValue >= 99 && batValue == 100))
                                    1- 3493     	BANKSEL	_fullLock
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 3494     	MOVR	_fullLock,W
     001B 0903                      1- 3495     	BTRSS	STATUS,2
                                    1- 3496     	MGOTO	_00264_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3497     ;;unsigned compare: left < lit (0x63=99), size=1
     001D 2163                      1- 3498     	MOVIA	0x63
                                    1- 3499     	BANKSEL	_showBatValue
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 3500     	SUBAR	_showBatValue,W
     0020 0803                      1- 3501     	BTRSS	STATUS,0
                                    1- 3502     	MGOTO	_00265_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3503     	BANKSEL	_batValue
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 3504     	MOVR	_batValue,W
     0024 2464                      1- 3505     	XORIA	0x64
     0025 0903                      1- 3506     	BTRSS	STATUS,2
                                    1- 3507     	MGOTO	_00265_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 3508     _00264_DS_:
                                    1- 3509     	.line	269, "main.c"; 	fullLock = 1;
     0027 2101                      1- 3510     	MOVIA	0x01
                                    1- 3511     	BANKSEL	_fullLock
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 00rr                      1- 3512     	MOVAR	_fullLock
                                    1- 3513     	.line	270, "main.c"; 	PORTA |= 0x01;		//打开充满提示灯
                                    1- 3514     	BANKSEL	_PORTA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 18rr                      1- 3515     	BSR	_PORTA,0
                                    1- 3516     	.line	271, "main.c"; 	PORTA &= 0XFD;		//关闭充电灯
     002C 1Crr                      1- 3517     	BCR	_PORTA,1
                                    1- 3518     	.line	272, "main.c"; 	pwm1Stop();
                                    1- 3519     	MCALL	_pwm1Stop
     002D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3520     	MGOTO	_00274_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3521     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3522     ;;unsigned compare: left >= lit (0x6=6), size=1
     002F                           1- 3523     _00265_DS_:
                                    1- 3524     	.line	277, "main.c"; 	if(count200ms > 5)
     002F 2106                      1- 3525     	MOVIA	0x06
                                    1- 3526     	BANKSEL	_count200ms
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 04rr                      1- 3527     	SUBAR	_count200ms,W
     0032 0803                      1- 3528     	BTRSS	STATUS,0
                                    1- 3529     	MGOTO	_00274_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3530     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3531     ;;unsigned compare: left >= lit (0x42=66), size=2
                                    1- 3532     	.line	279, "main.c"; 	if(R_AIN4_DATA <= 65 && R_AIN4_DATA >=subMin)
     0034 2100                      1- 3533     	MOVIA	0x00
                                    1- 3534     	BANKSEL	_R_AIN4_DATA
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 04rr                      1- 3535     	SUBAR	(_R_AIN4_DATA + 1),W
     0037 0903                      1- 3536     	BTRSS	STATUS,2
                                    1- 3537     	MGOTO	_00327_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
     0039 2142                      1- 3538     	MOVIA	0x42
     003A 04rr                      1- 3539     	SUBAR	_R_AIN4_DATA,W
     003B                           1- 3540     _00327_DS_:
     003B 0C03                      1- 3541     	BTRSC	STATUS,0
                                    1- 3542     	MGOTO	_00242_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3543     	BANKSEL	_subMin
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 01rr                      1- 3544     	MOVR	_subMin,W
                                    1- 3545     	BANKSEL	r0x1068
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 00rr                      1- 3546     	MOVAR	r0x1068
                                    1- 3547     ;;114	CLRR	r0x1069
     0041 2100                      1- 3548     	MOVIA	0x00
                                    1- 3549     	BANKSEL	_R_AIN4_DATA
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 04rr                      1- 3550     	SUBAR	(_R_AIN4_DATA + 1),W
     0044 0903                      1- 3551     	BTRSS	STATUS,2
                                    1- 3552     	MGOTO	_00328_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3553     	BANKSEL	r0x1068
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 01rr                      1- 3554     	MOVR	r0x1068,W
                                    1- 3555     	BANKSEL	_R_AIN4_DATA
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 04rr                      1- 3556     	SUBAR	_R_AIN4_DATA,W
     004A                           1- 3557     _00328_DS_:
     004A 0803                      1- 3558     	BTRSS	STATUS,0
                                    1- 3559     	MGOTO	_00242_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3560     	.line	281, "main.c"; 	addTime = subTime = 0;
                                    1- 3561     	BANKSEL	_subTime
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 02rr                      1- 3562     	CLRR	_subTime
                                    1- 3563     	BANKSEL	_addTime
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 02rr                      1- 3564     	CLRR	_addTime
                                    1- 3565     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3566     ;;unsigned compare: left >= lit (0x42=66), size=2
     0050                           1- 3567     _00242_DS_:
                                    1- 3568     	.line	283, "main.c"; 	if(R_AIN4_DATA > 65)
     0050 2100                      1- 3569     	MOVIA	0x00
                                    1- 3570     	BANKSEL	_R_AIN4_DATA
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 04rr                      1- 3571     	SUBAR	(_R_AIN4_DATA + 1),W
     0053 0903                      1- 3572     	BTRSS	STATUS,2
                                    1- 3573     	MGOTO	_00329_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
     0055 2142                      1- 3574     	MOVIA	0x42
     0056 04rr                      1- 3575     	SUBAR	_R_AIN4_DATA,W
     0057                           1- 3576     _00329_DS_:
     0057 0803                      1- 3577     	BTRSS	STATUS,0
                                    1- 3578     	MGOTO	_00252_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3579     	.line	285, "main.c"; 	if(++subTime > chrgWaitTime)
                                    1- 3580     	BANKSEL	_subTime
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 05rr                      1- 3581     	INCR	_subTime,F
     005B 01rr                      1- 3582     	MOVR	_subTime,W
                                    1- 3583     	BANKSEL	_chrgWaitTime
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 04rr                      1- 3584     	SUBAR	_chrgWaitTime,W
     005E 0C03                      1- 3585     	BTRSC	STATUS,0
                                    1- 3586     	MGOTO	_00245_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3587     	.line	287, "main.c"; 	addFlag = 1;
     0060 2101                      1- 3588     	MOVIA	0x01
                                    1- 3589     	BANKSEL	_addFlag
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 00rr                      1- 3590     	MOVAR	_addFlag
                                    1- 3591     	.line	288, "main.c"; 	maxduty = maxduty - 1;
                                    1- 3592     	BANKSEL	_maxduty
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 06rr                      1- 3593     	DECR	_maxduty,F
                                    1- 3594     	.line	289, "main.c"; 	subTime = 0;
                                    1- 3595     	BANKSEL	_subTime
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 02rr                      1- 3596     	CLRR	_subTime
                                    1- 3597     	.line	290, "main.c"; 	subMin = 62;
     0067 213E                      1- 3598     	MOVIA	0x3e
                                    1- 3599     	BANKSEL	_subMin
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 00rr                      1- 3600     	MOVAR	_subMin
                                    1- 3601     	.line	291, "main.c"; 	chrgWaitTime = 250;
     006A 21FA                      1- 3602     	MOVIA	0xfa
                                    1- 3603     	BANKSEL	_chrgWaitTime
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 00rr                      1- 3604     	MOVAR	_chrgWaitTime
     006D                           1- 3605     _00245_DS_:
                                    1- 3606     	.line	293, "main.c"; 	addTime = 0;
                                    1- 3607     	BANKSEL	_addTime
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 02rr                      1- 3608     	CLRR	_addTime
                                    1- 3609     	MGOTO	_00253_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
     0070                           1- 3610     _00252_DS_:
                                    1- 3611     	.line	295, "main.c"; 	else if(R_AIN4_DATA < subMin || addFlag == 0)
                                    1- 3612     	BANKSEL	_subMin
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 01rr                      1- 3613     	MOVR	_subMin,W
                                    1- 3614     	BANKSEL	r0x1068
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 00rr                      1- 3615     	MOVAR	r0x1068
                                    1- 3616     ;;113	CLRR	r0x1069
     0074 2100                      1- 3617     	MOVIA	0x00
                                    1- 3618     	BANKSEL	_R_AIN4_DATA
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 04rr                      1- 3619     	SUBAR	(_R_AIN4_DATA + 1),W
     0077 0903                      1- 3620     	BTRSS	STATUS,2
                                    1- 3621     	MGOTO	_00331_DS_
     0078 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3622     	BANKSEL	r0x1068
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 01rr                      1- 3623     	MOVR	r0x1068,W
                                    1- 3624     	BANKSEL	_R_AIN4_DATA
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 04rr                      1- 3625     	SUBAR	_R_AIN4_DATA,W
     007D                           1- 3626     _00331_DS_:
     007D 0803                      1- 3627     	BTRSS	STATUS,0
                                    1- 3628     	MGOTO	_00248_DS_
     007E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3629     	BANKSEL	_addFlag
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 01rr                      1- 3630     	MOVR	_addFlag,W
     0081 0903                      1- 3631     	BTRSS	STATUS,2
                                    1- 3632     	MGOTO	_00253_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
     0083                           1- 3633     _00248_DS_:
                                    1- 3634     	.line	297, "main.c"; 	if(++addTime > chrgWaitTime)
                                    1- 3635     	BANKSEL	_addTime
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 05rr                      1- 3636     	INCR	_addTime,F
     0085 01rr                      1- 3637     	MOVR	_addTime,W
                                    1- 3638     	BANKSEL	_chrgWaitTime
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 04rr                      1- 3639     	SUBAR	_chrgWaitTime,W
     0088 0C03                      1- 3640     	BTRSC	STATUS,0
                                    1- 3641     	MGOTO	_00247_DS_
     0089 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3642     	.line	299, "main.c"; 	maxduty = maxduty + 1;
                                    1- 3643     	BANKSEL	_maxduty
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 05rr                      1- 3644     	INCR	_maxduty,F
                                    1- 3645     	.line	300, "main.c"; 	addTime = 0;
                                    1- 3646     	BANKSEL	_addTime
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 02rr                      1- 3647     	CLRR	_addTime
     008E                           1- 3648     _00247_DS_:
                                    1- 3649     	.line	302, "main.c"; 	subTime = 0;
                                    1- 3650     	BANKSEL	_subTime
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 02rr                      1- 3651     	CLRR	_subTime
                                    1- 3652     ;;unsigned compare: left < lit (0xA=10), size=1
     0090                           1- 3653     _00253_DS_:
                                    1- 3654     	.line	304, "main.c"; 	if(maxduty < 10)
     0090 210A                      1- 3655     	MOVIA	0x0a
                                    1- 3656     	BANKSEL	_maxduty
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 04rr                      1- 3657     	SUBAR	_maxduty,W
     0093 0C03                      1- 3658     	BTRSC	STATUS,0
                                    1- 3659     	MGOTO	_00255_DS_
     0094 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3660     	.line	305, "main.c"; 	maxduty = 10;
     0095 210A                      1- 3661     	MOVIA	0x0a
     0096 00rr                      1- 3662     	MOVAR	_maxduty
                                    1- 3663     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3664     ;;unsigned compare: left >= lit (0x24=36), size=1
     0097                           1- 3665     _00255_DS_:
                                    1- 3666     	.line	306, "main.c"; 	if(maxduty > 35)
     0097 2124                      1- 3667     	MOVIA	0x24
                                    1- 3668     	BANKSEL	_maxduty
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 04rr                      1- 3669     	SUBAR	_maxduty,W
     009A 0803                      1- 3670     	BTRSS	STATUS,0
                                    1- 3671     	MGOTO	_00257_DS_
     009B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3672     	.line	307, "main.c"; 	maxduty = 35;
     009C 2123                      1- 3673     	MOVIA	0x23
     009D 00rr                      1- 3674     	MOVAR	_maxduty
                                    1- 3675     ;;unsigned compare: left < lit (0x19=25), size=1
     009E                           1- 3676     _00257_DS_:
                                    1- 3677     	.line	308, "main.c"; 	if(showBatValue < 25)
     009E 2119                      1- 3678     	MOVIA	0x19
                                    1- 3679     	BANKSEL	_showBatValue
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 04rr                      1- 3680     	SUBAR	_showBatValue,W
     00A1 0C03                      1- 3681     	BTRSC	STATUS,0
                                    1- 3682     	MGOTO	_00261_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3683     	.line	310, "main.c"; 	if(++chrgDutyCount > 2000)
                                    1- 3684     	BANKSEL	_chrgDutyCount
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 05rr                      1- 3685     	INCR	_chrgDutyCount,F
     00A5 0D03                      1- 3686     	BTRSC	STATUS,2
     00A6 05rr                      1- 3687     	INCR	(_chrgDutyCount + 1),F
                                    1- 3688     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3689     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     00A7 2107                      1- 3690     	MOVIA	0x07
     00A8 04rr                      1- 3691     	SUBAR	(_chrgDutyCount + 1),W
     00A9 0903                      1- 3692     	BTRSS	STATUS,2
                                    1- 3693     	MGOTO	_00336_DS_
     00AA 3rrr                      3-   63 m1      LGOTO rom_address
     00AB 21D1                      1- 3694     	MOVIA	0xd1
     00AC 04rr                      1- 3695     	SUBAR	_chrgDutyCount,W
     00AD                           1- 3696     _00336_DS_:
     00AD 0803                      1- 3697     	BTRSS	STATUS,0
                                    1- 3698     	MGOTO	_00261_DS_
     00AE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3699     	.line	312, "main.c"; 	chrgDutyCount = 0;
                                    1- 3700     	BANKSEL	_chrgDutyCount
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 02rr                      1- 3701     	CLRR	_chrgDutyCount
     00B1 02rr                      1- 3702     	CLRR	(_chrgDutyCount + 1)
                                    1- 3703     	.line	313, "main.c"; 	maxduty = maxduty + 1;
                                    1- 3704     	BANKSEL	_maxduty
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 05rr                      1- 3705     	INCR	_maxduty,F
     00B4                           1- 3706     _00261_DS_:
                                    1- 3707     	.line	316, "main.c"; 	PWM1DUTY = maxduty;
                                    1- 3708     	BANKSEL	_maxduty
     00B4 rrrr                      3-  110 m1      .banksel ram_address
     00B5 01rr                      1- 3709     	MOVR	_maxduty,W
     00B6 00rr                      1- 3710     	SFUN	_PWM1DUTY
                                    1- 3711     	.line	317, "main.c"; 	pwm1Init();			
                                    1- 3712     	MCALL	_pwm1Init
     00B7 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3713     	MGOTO	_00274_DS_
     00B8 3rrr                      3-   63 m1      LGOTO rom_address
     00B9                           1- 3714     _00272_DS_:
                                    1- 3715     	.line	326, "main.c"; 	addFlag = 0;
                                    1- 3716     	BANKSEL	_addFlag
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 02rr                      1- 3717     	CLRR	_addFlag
                                    1- 3718     	.line	327, "main.c"; 	chrgWaitTime = 20;
     00BB 2114                      1- 3719     	MOVIA	0x14
                                    1- 3720     	BANKSEL	_chrgWaitTime
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 00rr                      1- 3721     	MOVAR	_chrgWaitTime
                                    1- 3722     	.line	328, "main.c"; 	subMin = 62;
     00BE 213E                      1- 3723     	MOVIA	0x3e
                                    1- 3724     	BANKSEL	_subMin
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 00rr                      1- 3725     	MOVAR	_subMin
                                    1- 3726     	.line	329, "main.c"; 	maxduty = 0;
                                    1- 3727     	BANKSEL	_maxduty
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 02rr                      1- 3728     	CLRR	_maxduty
                                    1- 3729     	.line	330, "main.c"; 	pwm1Stop();
                                    1- 3730     	MCALL	_pwm1Stop
     00C3 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3731     	.line	331, "main.c"; 	chrgFlag = 0;
                                    1- 3732     	BANKSEL	_chrgFlag
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 02rr                      1- 3733     	CLRR	_chrgFlag
                                    1- 3734     	.line	332, "main.c"; 	if(zeroFlag == 0)
                                    1- 3735     	BANKSEL	_zeroFlag
     00C6 rrrr                      3-  110 m1      .banksel ram_address
     00C7 01rr                      1- 3736     	MOVR	_zeroFlag,W
     00C8 0D03                      1- 3737     	BTRSC	STATUS,2
                                    1- 3738     	.line	333, "main.c"; 	keyCtr();
                                    1- 3739     	MCALL	_keyCtr
     00C9 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3740     	.line	334, "main.c"; 	workCtr();
                                    1- 3741     	MCALL	_workCtr
     00CA 2rrr                      3-   66 m1      LCALL rom_address
     00CB                           1- 3742     _00274_DS_:
                                    1- 3743     	.line	336, "main.c"; 	}
                                    1- 3744     	RETURN	
     00CB 0010                      3-   40 m1      ret
                                    1- 3745     ; exit point of _chrgCtr
                                    1- 3747     ;***
                                    1- 3748     ;  pBlock Stats: dbName = C
                                    1- 3749     ;***
                                    1- 3750     ;has an exit
                                    1- 3751     ;functions called:
                                    1- 3752     ;   _pwmStop
                                    1- 3753     ;   _pwmStop
                                    1- 3754     ;; Starting pCode block
                                    1- 3755     .segment "code"; module=main, function=_powerOff
     0000                           1- 3757     _powerOff:
                                    1- 3758     ; 2 exit points
                                    1- 3759     	.line	240, "main.c"; 	count900s = 0;
                                    1- 3760     	BANKSEL	_count900s
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 3761     	CLRR	_count900s
     0002 02rr                      1- 3762     	CLRR	(_count900s + 1)
                                    1- 3763     	.line	241, "main.c"; 	workStep = 0;
                                    1- 3764     	BANKSEL	_workStep
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 3765     	CLRR	_workStep
                                    1- 3766     	.line	242, "main.c"; 	powerFlag = 0;
                                    1- 3767     	BANKSEL	_powerFlag
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1- 3768     	CLRR	_powerFlag
                                    1- 3769     	.line	243, "main.c"; 	powerTime = 0;
                                    1- 3770     	BANKSEL	_powerTime
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1- 3771     	CLRR	_powerTime
     0009 02rr                      1- 3772     	CLRR	(_powerTime + 1)
                                    1- 3773     	.line	244, "main.c"; 	firstTime = 0;
                                    1- 3774     	BANKSEL	_firstTime
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 02rr                      1- 3775     	CLRR	_firstTime
                                    1- 3776     	.line	245, "main.c"; 	pwmStop();
                                    1- 3777     	MCALL	_pwmStop
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3778     	.line	246, "main.c"; 	}
                                    1- 3779     	RETURN	
     000D 0010                      3-   40 m1      ret
                                    1- 3780     ; exit point of _powerOff
                                    1- 3783     ;	code size estimation:
                                    1- 3784     ;	 1441+  411 =  1852 instructions ( 4526 byte)
                                    1- 3786     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
