
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A053E,c=on
                                    1-    9     	#include "ny8a053e.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_INDF
                                    1-   23     	extern	_TMR0
                                    1-   24     	extern	_PCL
                                    1-   25     	extern	_STATUS
                                    1-   26     	extern	_FSR
                                    1-   27     	extern	_PORTA
                                    1-   28     	extern	_PORTB
                                    1-   29     	extern	_PCON
                                    1-   30     	extern	_BWUCON
                                    1-   31     	extern	_PCHBUF
                                    1-   32     	extern	_ABPLCON
                                    1-   33     	extern	_BPHCON
                                    1-   34     	extern	_INTE
                                    1-   35     	extern	_INTF
                                    1-   36     	extern	_TMR1
                                    1-   37     	extern	_T1CR1
                                    1-   38     	extern	_T1CR2
                                    1-   39     	extern	_PWM1DUTY
                                    1-   40     	extern	_PS1CV
                                    1-   41     	extern	_BZ1CR
                                    1-   42     	extern	_IRCR
                                    1-   43     	extern	_TBHP
                                    1-   44     	extern	_TBHD
                                    1-   45     	extern	_P2CR1
                                    1-   46     	extern	_PWM2DUTY
                                    1-   47     	extern	_TMRH
                                    1-   48     	extern	_TM34RH
                                    1-   49     	extern	_OSCCR
                                    1-   50     	extern	_P3CR1
                                    1-   51     	extern	_PWM3DUTY
                                    1-   52     	extern	_P4CR1
                                    1-   53     	extern	_PWM4DUTY
                                    1-   54     	extern	_IOSTA
                                    1-   55     	extern	_IOSTB
                                    1-   56     	extern	_PS0CV
                                    1-   57     	extern	_BODCON
                                    1-   58     	extern	_CMPCR
                                    1-   59     	extern	_PCON1
                                    1-   60     	extern	_T0MD
                                    1-   61     	extern	___sdcc_saved_fsr
                                    1-   62     	extern	___sdcc_saved_stk00
                                    1-   63     	extern	___sdcc_saved_stk01
                                    1-   64     	extern	__gptrget1
                                    1-   65     	extern	__gptrput1
                                    1-   66     	extern	__nyc_ny8_startup
                                    1-   67     ;--------------------------------------------------------
                                    1-   68     ; global declarations
                                    1-   69     ;--------------------------------------------------------
                                    1-   70     	extern	_gotoSleep
                                    1-   71     	extern	_keyRead
                                    1-   72     	extern	_stopPWM
                                    1-   73     	extern	_startPWM
                                    1-   74     	extern	_initSys
                                    1-   75     	extern	_ledOff
                                    1-   76     	extern	_ledBlue
                                    1-   77     	extern	_ledRed
                                    1-   78     	extern	_chrgCon
                                    1-   79     	extern	_keyCon
                                    1-   80     	extern	_isr
                                    1-   81     	extern	_main
                                    1-   82     	extern	_pwmFlag
                                    1-   83     	extern	_pwKeyCount
                                    1-   84     	extern	_addKeyCount
                                    1-   85     	extern	_subKeyCount
                                    1-   86     	extern	_workStep
                                    1-   87     	extern	_intCount
                                    1-   88     	extern	_IntFlag
                                    1-   89     	extern	_longFlag
                                    1-   90     	extern	_fullCount
                                    1-   91     	extern	_sleepTime
                                    1-   92     	extern	_fullFlag
                                    1-   94     	extern PSAVE
                                    1-   95     	extern SSAVE
                                    1-   96     	extern WSAVE
                                    1-   97     	extern STK04
                                    1-   98     	extern STK03
                                    1-   99     	extern STK02
                                    1-  100     	extern STK01
                                    1-  101     	extern STK00
                                    1-  103     .segment "uninit", 0x20000020
 20000020                           1-  104     PSAVE:
                                    1-  105     	.res 1
 20000021                           1-  106     SSAVE:
                                    1-  107     	.res 1
 20000022                           1-  108     WSAVE:
                                    1-  109     	.res 1
 20000023                           1-  110     STK04:
                                    1-  111     	.res 1
 20000024                           1-  112     STK03:
                                    1-  113     	.res 1
 20000025                           1-  114     STK02:
                                    1-  115     	.res 1
 20000026                           1-  116     STK01:
                                    1-  117     	.res 1
 20000027                           1-  118     STK00:
                                    1-  119     	.res 1
                                    1-  121     ;--------------------------------------------------------
                                    1-  122     ; global definitions
                                    1-  123     ;--------------------------------------------------------
                                    1-  124     ;--------------------------------------------------------
                                    1-  125     ; absolute symbol definitions
                                    1-  126     ;--------------------------------------------------------
                                    1-  127     ;--------------------------------------------------------
                                    1-  128     ; compiler-defined variables
                                    1-  129     ;--------------------------------------------------------
                                    1-  130     .segment "uninit"
     0000                           1-  131     r0x1013:
                                    1-  132     	.res	1
                                    1-  133     .segment "uninit"
     0000                           1-  134     r0x1014:
                                    1-  135     	.res	1
                                    1-  136     .segment "uninit"
     0000                           1-  137     r0x1012:
                                    1-  138     	.res	1
                                    1-  139     .segment "uninit"
     0000                           1-  140     r0x100E:
                                    1-  141     	.res	1
                                    1-  142     .segment "uninit"
     0000                           1-  143     r0x1011:
                                    1-  144     	.res	1
                                    1-  145     .segment "uninit"
     0000                           1-  146     r0x1010:
                                    1-  147     	.res	1
                                    1-  148     .segment "uninit"
     0000                           1-  149     r0x100F:
                                    1-  150     	.res	1
                                    1-  151     ;--------------------------------------------------------
                                    1-  152     ; initialized data
                                    1-  153     ;--------------------------------------------------------
                                    1-  155     .segment "idata"
     0000                           1-  156     _pwmFlag:
     0000 0000                      1-  157     	dw	0x00
                                    1-  161     .segment "idata"
     0000                           1-  162     _pwKeyCount:
     0000 0000                      1-  163     	dw	0x00
                                    1-  167     .segment "idata"
     0000                           1-  168     _addKeyCount:
     0000 0000                      1-  169     	dw	0x00
                                    1-  173     .segment "idata"
     0000                           1-  174     _subKeyCount:
     0000 0000                      1-  175     	dw	0x00
                                    1-  179     .segment "idata"
     0000                           1-  180     _workStep:
     0000 0000                      1-  181     	dw	0x00
                                    1-  185     .segment "idata"
     0000                           1-  186     _intCount:
     0000 0000                      1-  187     	dw	0x00
                                    1-  191     .segment "idata"
     0000                           1-  192     _IntFlag:
     0000 0000                      1-  193     	dw	0x00
                                    1-  197     .segment "idata"
     0000                           1-  198     _longFlag:
     0000 0000                      1-  199     	dw	0x00
                                    1-  203     .segment "idata"
     0000                           1-  204     _fullCount:
     0000 0000                      1-  205     	dw	0x00
                                    1-  209     .segment "idata"
     0000                           1-  210     _sleepTime:
     0000 0000                      1-  211     	dw	0x00
                                    1-  215     .segment "idata"
     0000                           1-  216     _fullFlag:
     0000 0000                      1-  217     	dw	0x00
                                    1-  220     ;--------------------------------------------------------
                                    1-  221     ; overlayable items in internal ram 
                                    1-  222     ;--------------------------------------------------------
                                    1-  223     ;	udata_ovr
                                    1-  224     ;--------------------------------------------------------
                                    1-  225     ; reset vector 
                                    1-  226     ;--------------------------------------------------------
                                    1-  227     ORG	0x0000
     0000 3rrr                      1-  228     	LGOTO	__nyc_ny8_startup
                                    1-  229     ;--------------------------------------------------------
                                    1-  230     ; interrupt and initialization code
                                    1-  231     ;--------------------------------------------------------
                                    1-  232     ORG 0x0008
                                    1-  233     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  235     .segment "code"
     0000                           1-  236     __sdcc_interrupt:
                                    1-  237     ;***
                                    1-  238     ;  pBlock Stats: dbName = I
                                    1-  239     ;***
                                    1-  240     ;2 compiler assigned registers:
                                    1-  241     ;   STK00
                                    1-  242     ;   STK01
                                    1-  243     ;; Starting pCode block
     0000                           1-  244     _isr:
                                    1-  245     ; 0 exit points
                                    1-  246     	.line	46, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  247     	MOVAR	WSAVE
     0001 1503                      1-  248     	SWAPR	STATUS,W
     0002 0283                      1-  249     	CLRR	STATUS
     0003 00rr                      1-  250     	MOVAR	SSAVE
     0004 010A                      1-  251     	MOVR	PCHBUF,W
     0005 028A                      1-  252     	CLRR	PCHBUF
     0006 00rr                      1-  253     	MOVAR	PSAVE
     0007 0104                      1-  254     	MOVR	FSR,W
                                    1-  255     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  256     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  257     	MOVR	STK00,W
                                    1-  258     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  259     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  260     	MOVR	STK01,W
                                    1-  261     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  262     	MOVAR	___sdcc_saved_stk01
                                    1-  263     	.line	48, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  264     	BTRSS	_INTFbits,0
                                    1-  265     	MGOTO	_00108_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  266     	.line	50, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  267     	MOVIA	0x37
     0013 03rr                      1-  268     	ADDAR	_TMR0,F
                                    1-  269     	.line	51, "main.c"; 	intCount++;
                                    1-  270     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  271     	INCR	_intCount,F
                                    1-  272     	.line	52, "main.c"; 	if(intCount == 100)
     0016 01rr                      1-  273     	MOVR	_intCount,W
     0017 2464                      1-  274     	XORIA	0x64
     0018 0903                      1-  275     	BTRSS	STATUS,2
                                    1-  276     	MGOTO	_00108_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  277     	.line	54, "main.c"; 	intCount = 0;
     001A 02rr                      1-  278     	CLRR	_intCount
                                    1-  279     	.line	55, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  280     	MOVIA	0x01
                                    1-  281     	BANKSEL	_IntFlag
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 00rr                      1-  282     	MOVAR	_IntFlag
     001E                           1-  283     _00108_DS_:
                                    1-  284     	.line	59, "main.c"; 	if(INTFbits.PBIF)
     001E 08rr                      1-  285     	BTRSS	_INTFbits,1
                                    1-  286     	MGOTO	_00110_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  287     	.line	61, "main.c"; 	INTF= (unsigned char)~(C_INT_PBKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     0020 21FD                      1-  288     	MOVIA	0xfd
     0021 00rr                      1-  289     	MOVAR	_INTF
     0022                           1-  290     _00110_DS_:
                                    1-  291     	.line	64, "main.c"; 	INTF = 0;
     0022 02rr                      1-  292     	CLRR	_INTF
                                    1-  293     	.line	66, "main.c"; 	}
                                    1-  294     	BANKSEL	___sdcc_saved_stk01
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 01rr                      1-  295     	MOVR	___sdcc_saved_stk01,W
     0025 00rr                      1-  296     	MOVAR	STK01
                                    1-  297     	BANKSEL	___sdcc_saved_stk00
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1-  298     	MOVR	___sdcc_saved_stk00,W
     0028 00rr                      1-  299     	MOVAR	STK00
                                    1-  300     	BANKSEL	___sdcc_saved_fsr
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 01rr                      1-  301     	MOVR	___sdcc_saved_fsr,W
     002B 0084                      1-  302     	MOVAR	FSR
     002C 01rr                      1-  303     	MOVR	PSAVE,W
     002D 008A                      1-  304     	MOVAR	PCHBUF
     002E 0283                      1-  305     	CLRR	STATUS
     002F 15rr                      1-  306     	SWAPR	SSAVE,W
     0030 0083                      1-  307     	MOVAR	STATUS
     0031 15rr                      1-  308     	SWAPR	WSAVE,F
     0032 15rr                      1-  309     	SWAPR	WSAVE,W
     0033                           1-  310     END_OF_INTERRUPT:
     0033 0011                      1-  311     	RETIE	
                                    1-  313     ;--------------------------------------------------------
                                    1-  314     ; code
                                    1-  315     ;--------------------------------------------------------
                                    1-  316     ;***
                                    1-  317     ;  pBlock Stats: dbName = M
                                    1-  318     ;***
                                    1-  319     ;has an exit
                                    1-  320     ;functions called:
                                    1-  321     ;   _initSys
                                    1-  322     ;   _chrgCon
                                    1-  323     ;   _keyCon
                                    1-  324     ;   _initSys
                                    1-  325     ;   _chrgCon
                                    1-  326     ;   _keyCon
                                    1-  327     ;; Starting pCode block
                                    1-  328     .segment "code"; module=main, function=_main
     0000                           1-  330     _main:
                                    1-  331     ; 2 exit points
                                    1-  332     	.line	71, "main.c"; 	DISI();
     0000 0013                      1-  333     	DISI
                                    1-  334     	.line	72, "main.c"; 	initSys();
                                    1-  335     	MCALL	_initSys
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  336     _00118_DS_:
                                    1-  337     	.line	76, "main.c"; 	CLRWDT();							// Clear WatchDog
     0002 0002                      1-  338     	clrwdt
                                    1-  339     	.line	77, "main.c"; 	if(!IntFlag)
                                    1-  340     	BANKSEL	_IntFlag
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 01rr                      1-  341     	MOVR	_IntFlag,W
     0005 0D03                      1-  342     	BTRSC	STATUS,2
                                    1-  343     	MGOTO	_00118_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  344     	.line	79, "main.c"; 	IntFlag = 0;
     0007 02rr                      1-  345     	CLRR	_IntFlag
                                    1-  346     	.line	80, "main.c"; 	chrgCon();
                                    1-  347     	MCALL	_chrgCon
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  348     	.line	81, "main.c"; 	keyCon();
                                    1-  349     	MCALL	_keyCon
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  350     	MGOTO	_00118_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  351     	.line	87, "main.c"; 	}
                                    1-  352     	RETURN	
     000B 0010                      3-   40 m1      ret
                                    1-  353     ; exit point of _main
                                    1-  355     ;***
                                    1-  356     ;  pBlock Stats: dbName = C
                                    1-  357     ;***
                                    1-  358     ;has an exit
                                    1-  359     ;functions called:
                                    1-  360     ;   _stopPWM
                                    1-  361     ;   _ledOff
                                    1-  362     ;   _stopPWM
                                    1-  363     ;   _ledOff
                                    1-  364     ;; Starting pCode block
                                    1-  365     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  367     _gotoSleep:
                                    1-  368     ; 2 exit points
                                    1-  369     	.line	290, "main.c"; 	stopPWM();
                                    1-  370     	MCALL	_stopPWM
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  371     	.line	291, "main.c"; 	ledOff();
                                    1-  372     	MCALL	_ledOff
     0001 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  373     	.line	292, "main.c"; 	sleepTime = 0;
                                    1-  374     	BANKSEL	_sleepTime
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  375     	CLRR	_sleepTime
                                    1-  376     	.line	293, "main.c"; 	workStep = 0;
                                    1-  377     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1-  378     	CLRR	_workStep
                                    1-  379     	.line	294, "main.c"; 	BWUCON = 0xC0;
     0006 21C0                      1-  380     	MOVIA	0xc0
     0007 00rr                      1-  381     	MOVAR	_BWUCON
                                    1-  382     	.line	295, "main.c"; 	INTE =  C_INT_PBKey;
     0008 2102                      1-  383     	MOVIA	0x02
     0009 00rr                      1-  384     	MOVAR	_INTE
                                    1-  385     	.line	296, "main.c"; 	PCON =  C_LVR_En;	
     000A 2108                      1-  386     	MOVIA	0x08
     000B 00rr                      1-  387     	MOVAR	_PCON
                                    1-  388     	.line	297, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     000C 02rr                      1-  389     	CLRR	_INTF
                                    1-  390     	.line	298, "main.c"; 	CLRWDT();
     000D 0002                      1-  391     	clrwdt
                                    1-  392     	.line	299, "main.c"; 	SLEEP();
     000E 0001                      1-  393     	sleep
                                    1-  394     	.line	300, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     000F 2101                      1-  395     	MOVIA	0x01
     0010 00rr                      1-  396     	MOVAR	_INTE
                                    1-  397     	.line	301, "main.c"; 	INTF = 0;
     0011 02rr                      1-  398     	CLRR	_INTF
                                    1-  399     	.line	303, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT ,  Enable LVR
     0012 21A8                      1-  400     	MOVIA	0xa8
     0013 00rr                      1-  401     	MOVAR	_PCON
                                    1-  402     	.line	304, "main.c"; 	}
                                    1-  403     	RETURN	
     0014 0010                      3-   40 m1      ret
                                    1-  404     ; exit point of _gotoSleep
                                    1-  406     ;***
                                    1-  407     ;  pBlock Stats: dbName = C
                                    1-  408     ;***
                                    1-  409     ;has an exit
                                    1-  410     ;functions called:
                                    1-  411     ;   __gptrget1
                                    1-  412     ;   __gptrput1
                                    1-  413     ;   __gptrput1
                                    1-  414     ;   __gptrget1
                                    1-  415     ;   __gptrput1
                                    1-  416     ;   __gptrput1
                                    1-  417     ;   __gptrget1
                                    1-  418     ;   __gptrput1
                                    1-  419     ;   __gptrput1
                                    1-  420     ;   __gptrget1
                                    1-  421     ;   __gptrput1
                                    1-  422     ;   __gptrput1
                                    1-  423     ;7 compiler assigned registers:
                                    1-  424     ;   r0x100E
                                    1-  425     ;   STK00
                                    1-  426     ;   r0x100F
                                    1-  427     ;   STK01
                                    1-  428     ;   r0x1010
                                    1-  429     ;   STK02
                                    1-  430     ;   r0x1011
                                    1-  431     ;; Starting pCode block
                                    1-  432     .segment "code"; module=main, function=_keyRead
                                    1-  434     ;local variable name mapping:
     0000                           1-  439     _keyRead:
                                    1-  440     ; 2 exit points
                                    1-  441     	.line	257, "main.c"; 	char keyRead(char keyStatus,char *keyCount)	
                                    1-  442     	BANKSEL	r0x100E
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  443     	MOVAR	r0x100E
     0002 01rr                      1-  444     	MOVR	STK00,W
                                    1-  445     	BANKSEL	r0x100F
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1-  446     	MOVAR	r0x100F
     0005 01rr                      1-  447     	MOVR	STK01,W
                                    1-  448     	BANKSEL	r0x1010
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1-  449     	MOVAR	r0x1010
     0008 01rr                      1-  450     	MOVR	STK02,W
                                    1-  451     	BANKSEL	r0x1011
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 00rr                      1-  452     	MOVAR	r0x1011
                                    1-  453     	.line	259, "main.c"; 	if(keyStatus)
                                    1-  454     	BANKSEL	r0x100E
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 01rr                      1-  455     	MOVR	r0x100E,W
     000D 0D03                      1-  456     	BTRSC	STATUS,2
                                    1-  457     	MGOTO	_00243_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  458     	.line	261, "main.c"; 	(*keyCount)++;
                                    1-  459     	BANKSEL	r0x1011
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1-  460     	MOVR	r0x1011,W
     0011 00rr                      1-  461     	MOVAR	STK01
                                    1-  462     	BANKSEL	r0x1010
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1-  463     	MOVR	r0x1010,W
     0014 00rr                      1-  464     	MOVAR	STK00
                                    1-  465     	BANKSEL	r0x100F
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 01rr                      1-  466     	MOVR	r0x100F,W
                                    1-  467     	MCALL	__gptrget1
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  468     	BANKSEL	r0x100E
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 00rr                      1-  469     	MOVAR	r0x100E
     001A 05rr                      1-  470     	INCR	r0x100E,F
     001B 01rr                      1-  471     	MOVR	r0x100E,W
     001C 00rr                      1-  472     	MOVAR	STK02
                                    1-  473     	BANKSEL	r0x1011
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1-  474     	MOVR	r0x1011,W
     001F 00rr                      1-  475     	MOVAR	STK01
                                    1-  476     	BANKSEL	r0x1010
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1-  477     	MOVR	r0x1010,W
     0022 00rr                      1-  478     	MOVAR	STK00
                                    1-  479     	BANKSEL	r0x100F
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 01rr                      1-  480     	MOVR	r0x100F,W
                                    1-  481     	MCALL	__gptrput1
     0025 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  482     ;;unsigned compare: left < lit (0x14=20), size=1
                                    1-  483     	.line	262, "main.c"; 	if((*keyCount) >= 20)
     0026 2114                      1-  484     	MOVIA	0x14
                                    1-  485     	BANKSEL	r0x100E
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 04rr                      1-  486     	SUBAR	r0x100E,W
     0029 0803                      1-  487     	BTRSS	STATUS,0
                                    1-  488     	MGOTO	_00244_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  489     	.line	264, "main.c"; 	(*keyCount) = 20;
     002B 2114                      1-  490     	MOVIA	0x14
     002C 00rr                      1-  491     	MOVAR	STK02
                                    1-  492     	BANKSEL	r0x1011
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 01rr                      1-  493     	MOVR	r0x1011,W
     002F 00rr                      1-  494     	MOVAR	STK01
                                    1-  495     	BANKSEL	r0x1010
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 01rr                      1-  496     	MOVR	r0x1010,W
     0032 00rr                      1-  497     	MOVAR	STK00
                                    1-  498     	BANKSEL	r0x100F
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1-  499     	MOVR	r0x100F,W
                                    1-  500     	MCALL	__gptrput1
     0035 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  501     	.line	265, "main.c"; 	if(longFlag == 0)
                                    1-  502     	BANKSEL	_longFlag
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 01rr                      1-  503     	MOVR	_longFlag,W
     0038 0903                      1-  504     	BTRSS	STATUS,2
                                    1-  505     	MGOTO	_00244_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  506     	.line	267, "main.c"; 	longFlag = 1;
     003A 2101                      1-  507     	MOVIA	0x01
     003B 00rr                      1-  508     	MOVAR	_longFlag
                                    1-  509     	.line	268, "main.c"; 	return 2;
     003C 2102                      1-  510     	MOVIA	0x02
                                    1-  511     	MGOTO	_00245_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
     003E                           1-  512     _00243_DS_:
                                    1-  513     	.line	274, "main.c"; 	if((*keyCount) >= 20)
                                    1-  514     	BANKSEL	r0x1011
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 01rr                      1-  515     	MOVR	r0x1011,W
     0040 00rr                      1-  516     	MOVAR	STK01
                                    1-  517     	BANKSEL	r0x1010
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 01rr                      1-  518     	MOVR	r0x1010,W
     0043 00rr                      1-  519     	MOVAR	STK00
                                    1-  520     	BANKSEL	r0x100F
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 01rr                      1-  521     	MOVR	r0x100F,W
                                    1-  522     	MCALL	__gptrget1
     0046 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  523     	BANKSEL	r0x100E
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 00rr                      1-  524     	MOVAR	r0x100E
                                    1-  525     ;;unsigned compare: left < lit (0x14=20), size=1
     0049 2114                      1-  526     	MOVIA	0x14
     004A 04rr                      1-  527     	SUBAR	r0x100E,W
     004B 0803                      1-  528     	BTRSS	STATUS,0
                                    1-  529     	MGOTO	_00240_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  530     	.line	275, "main.c"; 	longFlag = 0;
                                    1-  531     	BANKSEL	_longFlag
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 02rr                      1-  532     	CLRR	_longFlag
                                    1-  533     	MGOTO	_00241_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  534     ;;unsigned compare: left < lit (0x4=4), size=1
     0050                           1-  535     _00240_DS_:
                                    1-  536     	.line	276, "main.c"; 	else if((*keyCount) >= 4)
     0050 2104                      1-  537     	MOVIA	0x04
                                    1-  538     	BANKSEL	r0x100E
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 04rr                      1-  539     	SUBAR	r0x100E,W
     0053 0803                      1-  540     	BTRSS	STATUS,0
                                    1-  541     	MGOTO	_00241_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  542     	.line	278, "main.c"; 	(*keyCount) = 0;
     0055 2100                      1-  543     	MOVIA	0x00
     0056 00rr                      1-  544     	MOVAR	STK02
                                    1-  545     	BANKSEL	r0x1011
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 01rr                      1-  546     	MOVR	r0x1011,W
     0059 00rr                      1-  547     	MOVAR	STK01
                                    1-  548     	BANKSEL	r0x1010
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 01rr                      1-  549     	MOVR	r0x1010,W
     005C 00rr                      1-  550     	MOVAR	STK00
                                    1-  551     	BANKSEL	r0x100F
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 01rr                      1-  552     	MOVR	r0x100F,W
                                    1-  553     	MCALL	__gptrput1
     005F 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  554     	.line	279, "main.c"; 	return	1;
     0060 2101                      1-  555     	MOVIA	0x01
                                    1-  556     	MGOTO	_00245_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
     0062                           1-  557     _00241_DS_:
                                    1-  558     	.line	281, "main.c"; 	(*keyCount) = 0;
     0062 2100                      1-  559     	MOVIA	0x00
     0063 00rr                      1-  560     	MOVAR	STK02
                                    1-  561     	BANKSEL	r0x1011
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1-  562     	MOVR	r0x1011,W
     0066 00rr                      1-  563     	MOVAR	STK01
                                    1-  564     	BANKSEL	r0x1010
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 01rr                      1-  565     	MOVR	r0x1010,W
     0069 00rr                      1-  566     	MOVAR	STK00
                                    1-  567     	BANKSEL	r0x100F
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 01rr                      1-  568     	MOVR	r0x100F,W
                                    1-  569     	MCALL	__gptrput1
     006C 2rrr                      3-   66 m1      LCALL rom_address
     006D                           1-  570     _00244_DS_:
                                    1-  571     	.line	283, "main.c"; 	return 0;
     006D 2100                      1-  572     	MOVIA	0x00
     006E                           1-  573     _00245_DS_:
                                    1-  574     	.line	284, "main.c"; 	}
                                    1-  575     	RETURN	
     006E 0010                      3-   40 m1      ret
                                    1-  576     ; exit point of _keyRead
                                    1-  578     ;***
                                    1-  579     ;  pBlock Stats: dbName = C
                                    1-  580     ;***
                                    1-  581     ;has an exit
                                    1-  582     ;; Starting pCode block
                                    1-  583     .segment "code"; module=main, function=_stopPWM
     0000                           1-  585     _stopPWM:
                                    1-  586     ; 2 exit points
                                    1-  587     	.line	252, "main.c"; 	T1CR1 = 0x00;
     0000 0200                      1-  588     	CLRA	
     0001 00rr                      1-  589     	SFUN	_T1CR1
                                    1-  590     	.line	253, "main.c"; 	pwmFlag = 0;
                                    1-  591     	BANKSEL	_pwmFlag
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  592     	CLRR	_pwmFlag
                                    1-  593     	.line	254, "main.c"; 	}
                                    1-  594     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1-  595     ; exit point of _stopPWM
                                    1-  597     ;***
                                    1-  598     ;  pBlock Stats: dbName = C
                                    1-  599     ;***
                                    1-  600     ;has an exit
                                    1-  601     ;; Starting pCode block
                                    1-  602     .segment "code"; module=main, function=_startPWM
     0000                           1-  604     _startPWM:
                                    1-  605     ; 2 exit points
                                    1-  606     	.line	240, "main.c"; 	if(pwmFlag)
                                    1-  607     	BANKSEL	_pwmFlag
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1-  608     	MOVR	_pwmFlag,W
     0002 0903                      1-  609     	BTRSS	STATUS,2
                                    1-  610     	.line	241, "main.c"; 	return;
                                    1-  611     	MGOTO	_00224_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  612     	.line	242, "main.c"; 	pwmFlag = 1;
     0004 2101                      1-  613     	MOVIA	0x01
     0005 00rr                      1-  614     	MOVAR	_pwmFlag
                                    1-  615     	.line	243, "main.c"; 	TMRH  = 0x00;
     0006 0200                      1-  616     	CLRA	
     0007 00rr                      1-  617     	SFUN	_TMRH
                                    1-  618     	.line	244, "main.c"; 	TMR1  = 100;							
     0008 2164                      1-  619     	MOVIA	0x64
     0009 00rr                      1-  620     	SFUN	_TMR1
                                    1-  621     	.line	245, "main.c"; 	T1CR2	 = C_PS1_EN | C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Prescaler 1:1 , Timer1 clock source is instruction clock
     000A 0200                      1-  622     	CLRA	
     000B 00rr                      1-  623     	SFUN	_T1CR2
                                    1-  624     	.line	246, "main.c"; 	T1CR1	 = C_PWM1_En | C_PWM1_Active_Hi | C_TMR1_Reload | C_TMR1_En;	// Enable PWM1 , Active_High , Non-Stop mode ,reloaded from TMR1[9:0] , enable Timer1
     000C 2183                      1-  625     	MOVIA	0x83
     000D 00rr                      1-  626     	SFUN	_T1CR1
     000E                           1-  627     _00224_DS_:
                                    1-  628     	.line	247, "main.c"; 	}
                                    1-  629     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1-  630     ; exit point of _startPWM
                                    1-  632     ;***
                                    1-  633     ;  pBlock Stats: dbName = C
                                    1-  634     ;***
                                    1-  635     ;has an exit
                                    1-  636     ;; Starting pCode block
                                    1-  637     .segment "code"; module=main, function=_initSys
     0000                           1-  639     _initSys:
                                    1-  640     ; 2 exit points
                                    1-  641     	.line	213, "main.c"; 	DISI();
     0000 0013                      1-  642     	DISI
                                    1-  643     	.line	214, "main.c"; 	IOSTA = 0x00;
     0001 0200                      1-  644     	CLRA	
     0002 000r                      1-  645     	IOST	_IOSTA
                                    1-  646     	.line	215, "main.c"; 	IOSTB = 0xF2;
     0003 21F2                      1-  647     	MOVIA	0xf2
     0004 000r                      1-  648     	IOST	_IOSTB
                                    1-  649     	.line	216, "main.c"; 	PORTB = 0x08;
     0005 2108                      1-  650     	MOVIA	0x08
     0006 00rr                      1-  651     	MOVAR	_PORTB
                                    1-  652     	.line	217, "main.c"; 	PORTA = 0x0E;
     0007 210E                      1-  653     	MOVIA	0x0e
                                    1-  654     	BANKSEL	_PORTA
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  655     	MOVAR	_PORTA
                                    1-  656     	.line	218, "main.c"; 	BPHCON = 0x8D;
     000A 218D                      1-  657     	MOVIA	0x8d
     000B 00rr                      1-  658     	MOVAR	_BPHCON
                                    1-  659     	.line	219, "main.c"; 	ABPLCON = 0xFF;
     000C 21FF                      1-  660     	MOVIA	0xff
     000D 00rr                      1-  661     	MOVAR	_ABPLCON
                                    1-  662     	.line	221, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1-  663     	MOVIA	0x01
     000F 00rr                      1-  664     	MOVAR	_INTE
                                    1-  665     	.line	223, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1-  666     	CLRA	
     0011 000r                      1-  667     	IOST	_PCON1
                                    1-  668     	.line	225, "main.c"; 	TMR0 = 55;
     0012 2137                      1-  669     	MOVIA	0x37
     0013 00rr                      1-  670     	MOVAR	_TMR0
                                    1-  671     	.line	226, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0014 0200                      1-  672     	CLRA	
     0015 0003                      1-  673     	T0MD	
                                    1-  674     	.line	228, "main.c"; 	PCON1 = C_TMR0_En;
     0016 2101                      1-  675     	MOVIA	0x01
     0017 000r                      1-  676     	IOST	_PCON1
                                    1-  677     	.line	231, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0018 2188                      1-  678     	MOVIA	0x88
     0019 00rr                      1-  679     	MOVAR	_PCON
                                    1-  680     	.line	234, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001A 2101                      1-  681     	MOVIA	0x01
     001B 000r                      1-  682     	IOST	_PCON1
                                    1-  683     	.line	235, "main.c"; 	ENI();
     001C 0004                      1-  684     	ENI
                                    1-  685     	.line	236, "main.c"; 	}
                                    1-  686     	RETURN	
     001D 0010                      3-   40 m1      ret
                                    1-  687     ; exit point of _initSys
                                    1-  689     ;***
                                    1-  690     ;  pBlock Stats: dbName = C
                                    1-  691     ;***
                                    1-  692     ;has an exit
                                    1-  693     ;; Starting pCode block
                                    1-  694     .segment "code"; module=main, function=_ledOff
     0000                           1-  696     _ledOff:
                                    1-  697     ; 2 exit points
                                    1-  698     	.line	207, "main.c"; 	PORTA |= 0x0E;
     0000 210E                      1-  699     	MOVIA	0x0e
                                    1-  700     	BANKSEL	_PORTA
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 11rr                      1-  701     	IORAR	_PORTA,F
                                    1-  702     	.line	208, "main.c"; 	PORTB |= 0x08;
     0003 19rr                      1-  703     	BSR	_PORTB,3
                                    1-  704     	.line	209, "main.c"; 	}
                                    1-  705     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1-  706     ; exit point of _ledOff
                                    1-  708     ;***
                                    1-  709     ;  pBlock Stats: dbName = C
                                    1-  710     ;***
                                    1-  711     ;has an exit
                                    1-  712     ;; Starting pCode block
                                    1-  713     .segment "code"; module=main, function=_ledBlue
     0000                           1-  715     _ledBlue:
                                    1-  716     ; 2 exit points
                                    1-  717     	.line	200, "main.c"; 	PORTA &= 0xF5;
     0000 21F5                      1-  718     	MOVIA	0xf5
                                    1-  719     	BANKSEL	_PORTA
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 10rr                      1-  720     	ANDAR	_PORTA,F
                                    1-  721     	.line	201, "main.c"; 	PORTA |= 0x04;
     0003 19rr                      1-  722     	BSR	_PORTA,2
                                    1-  723     	.line	202, "main.c"; 	PORTB |= 0x08;
     0004 19rr                      1-  724     	BSR	_PORTB,3
                                    1-  725     	.line	203, "main.c"; 	}
                                    1-  726     	RETURN	
     0005 0010                      3-   40 m1      ret
                                    1-  727     ; exit point of _ledBlue
                                    1-  729     ;***
                                    1-  730     ;  pBlock Stats: dbName = C
                                    1-  731     ;***
                                    1-  732     ;has an exit
                                    1-  733     ;; Starting pCode block
                                    1-  734     .segment "code"; module=main, function=_ledRed
     0000                           1-  736     _ledRed:
                                    1-  737     ; 2 exit points
                                    1-  738     	.line	192, "main.c"; 	PORTA &= 0xFB;
                                    1-  739     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 1Drr                      1-  740     	BCR	_PORTA,2
                                    1-  741     	.line	193, "main.c"; 	PORTB &= 0xF7;
     0002 1Drr                      1-  742     	BCR	_PORTB,3
                                    1-  743     	.line	194, "main.c"; 	PORTA |= 0x0A;
     0003 210A                      1-  744     	MOVIA	0x0a
     0004 11rr                      1-  745     	IORAR	_PORTA,F
                                    1-  746     	.line	195, "main.c"; 	}
                                    1-  747     	RETURN	
     0005 0010                      3-   40 m1      ret
                                    1-  748     ; exit point of _ledRed
                                    1-  750     ;***
                                    1-  751     ;  pBlock Stats: dbName = C
                                    1-  752     ;***
                                    1-  753     ;has an exit
                                    1-  754     ;functions called:
                                    1-  755     ;   _ledBlue
                                    1-  756     ;   _ledRed
                                    1-  757     ;   _stopPWM
                                    1-  758     ;   _ledOff
                                    1-  759     ;   _ledBlue
                                    1-  760     ;   _startPWM
                                    1-  761     ;   _gotoSleep
                                    1-  762     ;   _ledBlue
                                    1-  763     ;   _ledRed
                                    1-  764     ;   _stopPWM
                                    1-  765     ;   _ledOff
                                    1-  766     ;   _ledBlue
                                    1-  767     ;   _startPWM
                                    1-  768     ;   _gotoSleep
                                    1-  769     ;1 compiler assigned register :
                                    1-  770     ;   r0x1012
                                    1-  771     ;; Starting pCode block
                                    1-  772     .segment "code"; module=main, function=_chrgCon
     0000                           1-  774     _chrgCon:
                                    1-  775     ; 2 exit points
                                    1-  776     	.line	127, "main.c"; 	if(0x80&PORTB)
     0000 0Brr                      1-  777     	BTRSS	_PORTB,7
                                    1-  778     	MGOTO	_00167_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  779     	.line	130, "main.c"; 	if((0x02&PORTB) || fullFlag)
     0002 0Crr                      1-  780     	BTRSC	_PORTB,1
                                    1-  781     	MGOTO	_00147_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  782     	BANKSEL	_fullFlag
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  783     	MOVR	_fullFlag,W
     0006 0D03                      1-  784     	BTRSC	STATUS,2
                                    1-  785     	MGOTO	_00148_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
     0008                           1-  786     _00147_DS_:
                                    1-  787     	.line	133, "main.c"; 	if(++fullCount >= 200)
                                    1-  788     	BANKSEL	_fullCount
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 05rr                      1-  789     	INCR	_fullCount,F
                                    1-  790     ;;unsigned compare: left < lit (0xC8=200), size=1
     000A 21C8                      1-  791     	MOVIA	0xc8
     000B 04rr                      1-  792     	SUBAR	_fullCount,W
     000C 0803                      1-  793     	BTRSS	STATUS,0
                                    1-  794     	MGOTO	_00169_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  795     	.line	135, "main.c"; 	ledBlue();
                                    1-  796     	MCALL	_ledBlue
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  797     	.line	136, "main.c"; 	fullFlag = 1;
     000F 2101                      1-  798     	MOVIA	0x01
                                    1-  799     	BANKSEL	_fullFlag
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1-  800     	MOVAR	_fullFlag
                                    1-  801     	MGOTO	_00169_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
     0013                           1-  802     _00148_DS_:
                                    1-  803     	.line	141, "main.c"; 	fullCount = 0;
                                    1-  804     	BANKSEL	_fullCount
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 02rr                      1-  805     	CLRR	_fullCount
                                    1-  806     	.line	143, "main.c"; 	ledRed();
                                    1-  807     	MCALL	_ledRed
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  808     	MGOTO	_00169_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
     0017                           1-  809     _00167_DS_:
                                    1-  810     	.line	149, "main.c"; 	fullCount = 0;
                                    1-  811     	BANKSEL	_fullCount
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 02rr                      1-  812     	CLRR	_fullCount
                                    1-  813     	.line	150, "main.c"; 	fullFlag = 0;
                                    1-  814     	BANKSEL	_fullFlag
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 02rr                      1-  815     	CLRR	_fullFlag
                                    1-  816     	.line	151, "main.c"; 	if(workStep == 0)
                                    1-  817     	BANKSEL	_workStep
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1-  818     	MOVR	_workStep,W
     001D 0903                      1-  819     	BTRSS	STATUS,2
                                    1-  820     	MGOTO	_00158_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  821     	.line	153, "main.c"; 	stopPWM();
                                    1-  822     	MCALL	_stopPWM
     001F 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  823     	.line	154, "main.c"; 	ledOff();
                                    1-  824     	MCALL	_ledOff
     0020 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  825     	MGOTO	_00159_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
     0022                           1-  826     _00158_DS_:
                                    1-  827     	.line	158, "main.c"; 	ledBlue();
                                    1-  828     	MCALL	_ledBlue
     0022 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  829     ;;unsigned compare: left < lit (0x1=1), size=1
                                    1-  830     	.line	159, "main.c"; 	switch(workStep)
     0023 2101                      1-  831     	MOVIA	0x01
                                    1-  832     	BANKSEL	_workStep
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 04rr                      1-  833     	SUBAR	_workStep,W
     0026 0803                      1-  834     	BTRSS	STATUS,0
                                    1-  835     	MGOTO	_00156_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  836     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  837     ;;unsigned compare: left >= lit (0x6=6), size=1
     0028 2106                      1-  838     	MOVIA	0x06
     0029 04rr                      1-  839     	SUBAR	_workStep,W
     002A 0C03                      1-  840     	BTRSC	STATUS,0
                                    1-  841     	MGOTO	_00156_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C 06rr                      1-  842     	DECR	_workStep,W
                                    1-  843     	BANKSEL	r0x1012
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 00rr                      1-  844     	MOVAR	r0x1012
     002F 21rr                      1-  845     	MOVIA	((_00201_DS_ >> 8) & 0xff)
     0030 008A                      1-  846     	MOVAR	PCHBUF
     0031 01rr                      1-  847     	MOVR	r0x1012,W
     0032 25rr                      1-  848     	ADDIA	_00201_DS_
     0033 0C03                      1-  849     	BTRSC	STATUS,0
     0034 058A                      1-  850     	INCR	PCHBUF,F
     0035 0082                      1-  851     	MOVAR	PCL
     0036                           1-  852     _00201_DS_:
                                    1-  853     	MGOTO	_00151_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  854     	MGOTO	_00152_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  855     	MGOTO	_00153_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  856     	MGOTO	_00154_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  857     	MGOTO	_00155_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
     003B                           1-  858     _00151_DS_:
                                    1-  859     	.line	162, "main.c"; 	PWM1DUTY = 54;
     003B 2136                      1-  860     	MOVIA	0x36
     003C 00rr                      1-  861     	SFUN	_PWM1DUTY
                                    1-  862     	.line	163, "main.c"; 	break;
                                    1-  863     	MGOTO	_00156_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
     003E                           1-  864     _00152_DS_:
                                    1-  865     	.line	165, "main.c"; 	PWM1DUTY = 69;
     003E 2145                      1-  866     	MOVIA	0x45
     003F 00rr                      1-  867     	SFUN	_PWM1DUTY
                                    1-  868     	.line	166, "main.c"; 	break;
                                    1-  869     	MGOTO	_00156_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041                           1-  870     _00153_DS_:
                                    1-  871     	.line	168, "main.c"; 	PWM1DUTY = 77;
     0041 214D                      1-  872     	MOVIA	0x4d
     0042 00rr                      1-  873     	SFUN	_PWM1DUTY
                                    1-  874     	.line	169, "main.c"; 	break;
                                    1-  875     	MGOTO	_00156_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
     0044                           1-  876     _00154_DS_:
                                    1-  877     	.line	171, "main.c"; 	PWM1DUTY = 84;
     0044 2154                      1-  878     	MOVIA	0x54
     0045 00rr                      1-  879     	SFUN	_PWM1DUTY
                                    1-  880     	.line	172, "main.c"; 	break;
                                    1-  881     	MGOTO	_00156_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
     0047                           1-  882     _00155_DS_:
                                    1-  883     	.line	174, "main.c"; 	PWM1DUTY = 100;
     0047 2164                      1-  884     	MOVIA	0x64
     0048 00rr                      1-  885     	SFUN	_PWM1DUTY
     0049                           1-  886     _00156_DS_:
                                    1-  887     	.line	177, "main.c"; 	startPWM();
                                    1-  888     	MCALL	_startPWM
     0049 2rrr                      3-   66 m1      LCALL rom_address
     004A                           1-  889     _00159_DS_:
                                    1-  890     	.line	179, "main.c"; 	if(workStep == 0 && pwKeyCount == 0)
                                    1-  891     	BANKSEL	_workStep
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1-  892     	MOVR	_workStep,W
     004C 0903                      1-  893     	BTRSS	STATUS,2
                                    1-  894     	MGOTO	_00163_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  895     	BANKSEL	_pwKeyCount
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1-  896     	MOVR	_pwKeyCount,W
     0050 0903                      1-  897     	BTRSS	STATUS,2
                                    1-  898     	MGOTO	_00163_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  899     	.line	181, "main.c"; 	if(++sleepTime > 100)
                                    1-  900     	BANKSEL	_sleepTime
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 05rr                      1-  901     	INCR	_sleepTime,F
                                    1-  902     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  903     ;;unsigned compare: left >= lit (0x65=101), size=1
     0054 2165                      1-  904     	MOVIA	0x65
     0055 04rr                      1-  905     	SUBAR	_sleepTime,W
     0056 0803                      1-  906     	BTRSS	STATUS,0
                                    1-  907     	MGOTO	_00169_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  908     	.line	182, "main.c"; 	gotoSleep();
                                    1-  909     	MCALL	_gotoSleep
     0058 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  910     	MGOTO	_00169_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
     005A                           1-  911     _00163_DS_:
                                    1-  912     	.line	185, "main.c"; 	sleepTime = 0;
                                    1-  913     	BANKSEL	_sleepTime
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 02rr                      1-  914     	CLRR	_sleepTime
     005C                           1-  915     _00169_DS_:
                                    1-  916     	.line	187, "main.c"; 	}
                                    1-  917     	RETURN	
     005C 0010                      3-   40 m1      ret
                                    1-  918     ; exit point of _chrgCon
                                    1-  920     ;***
                                    1-  921     ;  pBlock Stats: dbName = C
                                    1-  922     ;***
                                    1-  923     ;has an exit
                                    1-  924     ;functions called:
                                    1-  925     ;   _keyRead
                                    1-  926     ;   _keyRead
                                    1-  927     ;   _keyRead
                                    1-  928     ;   _keyRead
                                    1-  929     ;   _keyRead
                                    1-  930     ;   _keyRead
                                    1-  931     ;7 compiler assigned registers:
                                    1-  932     ;   r0x1013
                                    1-  933     ;   r0x1014
                                    1-  934     ;   r0x1015
                                    1-  935     ;   r0x1016
                                    1-  936     ;   STK02
                                    1-  937     ;   STK01
                                    1-  938     ;   STK00
                                    1-  939     ;; Starting pCode block
                                    1-  940     .segment "code"; module=main, function=_keyCon
     0000                           1-  942     _keyCon:
                                    1-  943     ; 2 exit points
                                    1-  944     	.line	92, "main.c"; 	if(keyRead(0x40&(~PORTB),&pwKeyCount))
     0000 07rr                      1-  945     	COMR	_PORTB,W
                                    1-  946     	BANKSEL	r0x1013
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1-  947     	MOVAR	r0x1013
     0003 2140                      1-  948     	MOVIA	0x40
     0004 10rr                      1-  949     	ANDAR	r0x1013,F
     0005 21rr                      1-  950     	MOVIA	((_pwKeyCount + 0) >> 8) & 0xff
                                    1-  951     	BANKSEL	r0x1014
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1-  952     	MOVAR	r0x1014
     0008 21rr                      1-  953     	MOVIA	(_pwKeyCount + 0)
                                    1-  954     ;;102	BANKSEL	r0x1015
                                    1-  955     ;;101	MOVAR	r0x1015
     0009 00rr                      1-  956     	MOVAR	STK02
                                    1-  957     	BANKSEL	r0x1014
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1-  958     	MOVR	r0x1014,W
     000C 00rr                      1-  959     	MOVAR	STK01
     000D 2100                      1-  960     	MOVIA	0x00
     000E 00rr                      1-  961     	MOVAR	STK00
                                    1-  962     	BANKSEL	r0x1013
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1-  963     	MOVR	r0x1013,W
                                    1-  964     	MCALL	_keyRead
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  965     	BANKSEL	r0x1013
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 00rr                      1-  966     	MOVAR	r0x1013
     0014 01rr                      1-  967     	MOVR	r0x1013,W
     0015 0D03                      1-  968     	BTRSC	STATUS,2
                                    1-  969     	MGOTO	_00127_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  970     	.line	94, "main.c"; 	if(workStep)
                                    1-  971     	BANKSEL	_workStep
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 01rr                      1-  972     	MOVR	_workStep,W
     0019 0D03                      1-  973     	BTRSC	STATUS,2
                                    1-  974     	MGOTO	_00124_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  975     	.line	96, "main.c"; 	workStep = 0;
     001B 02rr                      1-  976     	CLRR	_workStep
                                    1-  977     	MGOTO	_00127_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
     001D                           1-  978     _00124_DS_:
                                    1-  979     	.line	100, "main.c"; 	workStep = 3;
     001D 2103                      1-  980     	MOVIA	0x03
                                    1-  981     	BANKSEL	_workStep
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1-  982     	MOVAR	_workStep
     0020                           1-  983     _00127_DS_:
                                    1-  984     	.line	104, "main.c"; 	if(keyRead(0x20&(~PORTB),&addKeyCount))
     0020 07rr                      1-  985     	COMR	_PORTB,W
                                    1-  986     	BANKSEL	r0x1013
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 00rr                      1-  987     	MOVAR	r0x1013
     0023 2120                      1-  988     	MOVIA	0x20
     0024 10rr                      1-  989     	ANDAR	r0x1013,F
     0025 21rr                      1-  990     	MOVIA	((_addKeyCount + 0) >> 8) & 0xff
                                    1-  991     	BANKSEL	r0x1014
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 00rr                      1-  992     	MOVAR	r0x1014
     0028 21rr                      1-  993     	MOVIA	(_addKeyCount + 0)
                                    1-  994     ;;2	BANKSEL	r0x1015
                                    1-  995     ;;2	MOVAR	r0x1015
     0029 00rr                      1-  996     	MOVAR	STK02
                                    1-  997     	BANKSEL	r0x1014
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1-  998     	MOVR	r0x1014,W
     002C 00rr                      1-  999     	MOVAR	STK01
     002D 2100                      1- 1000     	MOVIA	0x00
     002E 00rr                      1- 1001     	MOVAR	STK00
                                    1- 1002     	BANKSEL	r0x1013
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1003     	MOVR	r0x1013,W
                                    1- 1004     	MCALL	_keyRead
     0031 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1005     	BANKSEL	r0x1013
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 00rr                      1- 1006     	MOVAR	r0x1013
     0034 01rr                      1- 1007     	MOVR	r0x1013,W
     0035 0D03                      1- 1008     	BTRSC	STATUS,2
                                    1- 1009     	MGOTO	_00133_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1010     	.line	106, "main.c"; 	if(workStep)
                                    1- 1011     	BANKSEL	_workStep
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 01rr                      1- 1012     	MOVR	_workStep,W
     0039 0D03                      1- 1013     	BTRSC	STATUS,2
                                    1- 1014     	MGOTO	_00133_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1015     	.line	108, "main.c"; 	if(++workStep > 5)
     003B 05rr                      1- 1016     	INCR	_workStep,F
                                    1- 1017     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1018     ;;unsigned compare: left >= lit (0x6=6), size=1
     003C 2106                      1- 1019     	MOVIA	0x06
     003D 04rr                      1- 1020     	SUBAR	_workStep,W
     003E 0803                      1- 1021     	BTRSS	STATUS,0
                                    1- 1022     	MGOTO	_00133_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1023     	.line	109, "main.c"; 	workStep = 5;
     0040 2105                      1- 1024     	MOVIA	0x05
     0041 00rr                      1- 1025     	MOVAR	_workStep
     0042                           1- 1026     _00133_DS_:
                                    1- 1027     	.line	114, "main.c"; 	if(keyRead(0x10&(~PORTB),&subKeyCount))
     0042 07rr                      1- 1028     	COMR	_PORTB,W
                                    1- 1029     	BANKSEL	r0x1013
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 00rr                      1- 1030     	MOVAR	r0x1013
     0045 2110                      1- 1031     	MOVIA	0x10
     0046 10rr                      1- 1032     	ANDAR	r0x1013,F
     0047 21rr                      1- 1033     	MOVIA	((_subKeyCount + 0) >> 8) & 0xff
                                    1- 1034     	BANKSEL	r0x1014
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1- 1035     	MOVAR	r0x1014
     004A 21rr                      1- 1036     	MOVIA	(_subKeyCount + 0)
                                    1- 1037     ;;2	BANKSEL	r0x1015
                                    1- 1038     ;;2	MOVAR	r0x1015
     004B 00rr                      1- 1039     	MOVAR	STK02
                                    1- 1040     	BANKSEL	r0x1014
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 01rr                      1- 1041     	MOVR	r0x1014,W
     004E 00rr                      1- 1042     	MOVAR	STK01
     004F 2100                      1- 1043     	MOVIA	0x00
     0050 00rr                      1- 1044     	MOVAR	STK00
                                    1- 1045     	BANKSEL	r0x1013
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 01rr                      1- 1046     	MOVR	r0x1013,W
                                    1- 1047     	MCALL	_keyRead
     0053 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1048     	BANKSEL	r0x1013
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 00rr                      1- 1049     	MOVAR	r0x1013
     0056 01rr                      1- 1050     	MOVR	r0x1013,W
     0057 0D03                      1- 1051     	BTRSC	STATUS,2
                                    1- 1052     	MGOTO	_00140_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1053     	.line	116, "main.c"; 	if(workStep)
                                    1- 1054     	BANKSEL	_workStep
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 01rr                      1- 1055     	MOVR	_workStep,W
     005B 0D03                      1- 1056     	BTRSC	STATUS,2
                                    1- 1057     	MGOTO	_00140_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1058     	.line	118, "main.c"; 	if(--workStep == 0)
     005D 17rr                      1- 1059     	DECRSZ	_workStep,F
                                    1- 1060     	MGOTO	_00140_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1061     	.line	119, "main.c"; 	workStep = 1;
     005F 2101                      1- 1062     	MOVIA	0x01
     0060 00rr                      1- 1063     	MOVAR	_workStep
     0061                           1- 1064     _00140_DS_:
                                    1- 1065     	.line	122, "main.c"; 	}
                                    1- 1066     	RETURN	
     0061 0010                      3-   40 m1      ret
                                    1- 1067     ; exit point of _keyCon
                                    1- 1070     ;	code size estimation:
                                    1- 1071     ;	  370+   78 =   448 instructions ( 1052 byte)
                                    1- 1073     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000C
__PROCESSOR__           Constant 00800534
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8a053e.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A053E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000003FF
DATA ROM     = 0x00000000 - 0x000003FF
RESERVED MEM = 0x00000400 - 0x00000410
SRAM / SFR   = 0x00000000 - 0x00000000
