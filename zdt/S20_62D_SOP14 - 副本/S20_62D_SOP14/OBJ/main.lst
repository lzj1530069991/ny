
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_fgCtr
                                    1-   18     	extern	_LedCtr2
                                    1-   19     	extern	_checkOutA
                                    1-   20     	extern	_F_AIN3_Convert
                                    1-   21     	extern	_PORTAbits
                                    1-   22     	extern	_PORTBbits
                                    1-   23     	extern	_PCONbits
                                    1-   24     	extern	_BWUCONbits
                                    1-   25     	extern	_ABPLCONbits
                                    1-   26     	extern	_BPHCONbits
                                    1-   27     	extern	_INTEbits
                                    1-   28     	extern	_INTFbits
                                    1-   29     	extern	_ADMDbits
                                    1-   30     	extern	_ADRbits
                                    1-   31     	extern	_ADVREFHbits
                                    1-   32     	extern	_ADCRbits
                                    1-   33     	extern	_AWUCONbits
                                    1-   34     	extern	_PACONbits
                                    1-   35     	extern	_INTEDGbits
                                    1-   36     	extern	_ANAENbits
                                    1-   37     	extern	_RFCbits
                                    1-   38     	extern	_INTE2bits
                                    1-   39     	extern	_INDF
                                    1-   40     	extern	_TMR0
                                    1-   41     	extern	_PCL
                                    1-   42     	extern	_STATUS
                                    1-   43     	extern	_FSR
                                    1-   44     	extern	_PORTA
                                    1-   45     	extern	_PORTB
                                    1-   46     	extern	_PCON
                                    1-   47     	extern	_BWUCON
                                    1-   48     	extern	_PCHBUF
                                    1-   49     	extern	_ABPLCON
                                    1-   50     	extern	_BPHCON
                                    1-   51     	extern	_INTE
                                    1-   52     	extern	_INTF
                                    1-   53     	extern	_ADMD
                                    1-   54     	extern	_ADR
                                    1-   55     	extern	_ADD
                                    1-   56     	extern	_ADVREFH
                                    1-   57     	extern	_ADCR
                                    1-   58     	extern	_AWUCON
                                    1-   59     	extern	_PACON
                                    1-   60     	extern	_INTEDG
                                    1-   61     	extern	_TMRH
                                    1-   62     	extern	_ANAEN
                                    1-   63     	extern	_RFC
                                    1-   64     	extern	_TM3RH
                                    1-   65     	extern	_INTE2
                                    1-   66     	extern	_TMR1
                                    1-   67     	extern	_T1CR1
                                    1-   68     	extern	_T1CR2
                                    1-   69     	extern	_PWM1DUTY
                                    1-   70     	extern	_PS1CV
                                    1-   71     	extern	_BZ1CR
                                    1-   72     	extern	_IRCR
                                    1-   73     	extern	_TBHP
                                    1-   74     	extern	_TBHD
                                    1-   75     	extern	_TMR2
                                    1-   76     	extern	_T2CR1
                                    1-   77     	extern	_T2CR2
                                    1-   78     	extern	_PWM2DUTY
                                    1-   79     	extern	_PS2CV
                                    1-   80     	extern	_BZ2CR
                                    1-   81     	extern	_OSCCR
                                    1-   82     	extern	_TMR3
                                    1-   83     	extern	_T3CR1
                                    1-   84     	extern	_T3CR2
                                    1-   85     	extern	_PWM3DUTY
                                    1-   86     	extern	_PS3CV
                                    1-   87     	extern	_BZ3CR
                                    1-   88     	extern	_IOSTA
                                    1-   89     	extern	_IOSTB
                                    1-   90     	extern	_APHCON
                                    1-   91     	extern	_PS0CV
                                    1-   92     	extern	_BODCON
                                    1-   93     	extern	_CMPCR
                                    1-   94     	extern	_PCON1
                                    1-   95     	extern	_T0MD
                                    1-   96     	extern	___sdcc_saved_fsr
                                    1-   97     	extern	___sdcc_saved_stk00
                                    1-   98     	extern	___sdcc_saved_stk01
                                    1-   99     	extern	__nyc_ny8_startup
                                    1-  100     ;--------------------------------------------------------
                                    1-  101     ; global declarations
                                    1-  102     ;--------------------------------------------------------
                                    1-  103     	extern	_F_wait_eoc
                                    1-  104     	extern	_F_AIN4_Convert
                                    1-  105     	extern	_checkBatAD
                                    1-  106     	extern	_initAD
                                    1-  107     	extern	_delay
                                    1-  108     	extern	_chrgCtr
                                    1-  109     	extern	_keyRead
                                    1-  110     	extern	_gotoSleep
                                    1-  111     	extern	_pwmStop
                                    1-  112     	extern	_pwmInit
                                    1-  113     	extern	_LED4ON
                                    1-  114     	extern	_LED3ON
                                    1-  115     	extern	_LED2ON
                                    1-  116     	extern	_LED1ON
                                    1-  117     	extern	_LedInput
                                    1-  118     	extern	_ledShow
                                    1-  119     	extern	_initSys
                                    1-  120     	extern	_powerOff
                                    1-  121     	extern	_keyCtr
                                    1-  122     	extern	_isr
                                    1-  123     	extern	_main
                                    1-  124     	extern	_Status
                                    1-  125     	extern	_duty
                                    1-  126     	extern	_intCount
                                    1-  127     	extern	_count500ms
                                    1-  128     	extern	_keyCount
                                    1-  129     	extern	_workStep
                                    1-  130     	extern	_ledStep
                                    1-  131     	extern	_fgCount
                                    1-  132     	extern	_fgPRD
                                    1-  133     	extern	_preFG
                                    1-  134     	extern	_maxDuty
                                    1-  135     	extern	_pwStep
                                    1-  136     	extern	_R_AIN4_DATA
                                    1-  137     	extern	_R_AIN4_DATA_LB
                                    1-  138     	extern	_R_AIN3_DATA
                                    1-  139     	extern	_R_AIN3_DATA_LB
                                    1-  140     	extern	_chrgTime
                                    1-  141     	extern	_startStep
                                    1-  142     	extern	_sleepTime
                                    1-  143     	extern	_count200ms
                                    1-  144     	extern	_count1s
                                    1-  145     	extern	_count900s
                                    1-  146     	extern	_lowBatTime
                                    1-  147     	extern	_ledTime
                                    1-  148     	extern	_overCount
                                    1-  149     	extern	_debug
                                    1-  150     	extern	_lowBat
                                    1-  151     	extern	_currentDuty
                                    1-  152     	extern	_firstTime
                                    1-  153     	extern	_lowCount
                                    1-  154     	extern	_shanshuoTime
                                    1-  155     	extern	_fullCount
                                    1-  156     	extern	_closeCount
                                    1-  157     	extern	_shandengTime
                                    1-  158     	extern	_lowBatLock
                                    1-  159     	extern	_workStartFlag
                                    1-  161     	extern PSAVE
                                    1-  162     	extern SSAVE
                                    1-  163     	extern WSAVE
                                    1-  164     	extern STK02
                                    1-  165     	extern STK01
                                    1-  166     	extern STK00
                                    1-  168     .segment "uninit", 0x20000040
 20000040                           1-  169     PSAVE:
                                    1-  170     	.res 1
 20000041                           1-  171     SSAVE:
                                    1-  172     	.res 1
 20000042                           1-  173     WSAVE:
                                    1-  174     	.res 1
 20000043                           1-  175     STK02:
                                    1-  176     	.res 1
 20000044                           1-  177     STK01:
                                    1-  178     	.res 1
 20000045                           1-  179     STK00:
                                    1-  180     	.res 1
                                    1-  182     ;--------------------------------------------------------
                                    1-  183     ; global definitions
                                    1-  184     ;--------------------------------------------------------
                                    1-  185     .segment "uninit"
     0000                           1-  186     _R_AIN4_DATA:
                                    1-  187     	.res	2
                                    1-  190     .segment "uninit"
     0000                           1-  191     _R_AIN4_DATA_LB:
                                    1-  192     	.res	1
                                    1-  195     .segment "uninit"
     0000                           1-  196     _R_AIN3_DATA:
                                    1-  197     	.res	2
                                    1-  200     .segment "uninit"
     0000                           1-  201     _R_AIN3_DATA_LB:
                                    1-  202     	.res	1
                                    1-  205     ;--------------------------------------------------------
                                    1-  206     ; absolute symbol definitions
                                    1-  207     ;--------------------------------------------------------
                                    1-  208     ;--------------------------------------------------------
                                    1-  209     ; compiler-defined variables
                                    1-  210     ;--------------------------------------------------------
                                    1-  211     .segment "uninit"
     0000                           1-  212     r0x1036:
                                    1-  213     	.res	1
                                    1-  214     .segment "uninit"
     0000                           1-  215     r0x1030:
                                    1-  216     	.res	1
                                    1-  217     .segment "uninit"
     0000                           1-  218     r0x1035:
                                    1-  219     	.res	1
                                    1-  220     .segment "uninit"
     0000                           1-  221     r0x1034:
                                    1-  222     	.res	1
                                    1-  223     .segment "uninit"
     0000                           1-  224     r0x1033:
                                    1-  225     	.res	1
                                    1-  226     .segment "uninit"
     0000                           1-  227     r0x1032:
                                    1-  228     	.res	1
                                    1-  229     .segment "uninit"
     0000                           1-  230     r0x1031:
                                    1-  231     	.res	1
                                    1-  232     .segment "uninit"
     0000                           1-  233     r0x102F:
                                    1-  234     	.res	1
                                    1-  235     .segment "uninit"
     0000                           1-  236     r0x1023:
                                    1-  237     	.res	1
                                    1-  238     .segment "uninit"
     0000                           1-  239     r0x1024:
                                    1-  240     	.res	1
                                    1-  241     .segment "uninit"
     0000                           1-  242     r0x102D:
                                    1-  243     	.res	1
                                    1-  244     .segment "uninit"
     0000                           1-  245     r0x102E:
                                    1-  246     	.res	1
                                    1-  247     .segment "uninit"
     0000                           1-  248     r0x1025:
                                    1-  249     	.res	1
                                    1-  250     .segment "uninit"
     0000                           1-  251     r0x1026:
                                    1-  252     	.res	1
                                    1-  253     .segment "uninit"
     0000                           1-  254     r0x1027:
                                    1-  255     	.res	1
                                    1-  256     .segment "uninit"
     0000                           1-  257     r0x102A:
                                    1-  258     	.res	1
                                    1-  259     ;--------------------------------------------------------
                                    1-  260     ; initialized data
                                    1-  261     ;--------------------------------------------------------
                                    1-  263     .segment "idata"
     0000                           1-  264     _Status:
     0000 0000                      1-  265     	dw	0x00
                                    1-  269     .segment "idata"
     0000                           1-  270     _duty:
     0000 0000 0000                 1-  271     	dw	0x00, 0x00
                                    1-  275     .segment "idata"
     0000                           1-  276     _intCount:
     0000 0000                      1-  277     	dw	0x00
                                    1-  281     .segment "idata"
     0000                           1-  282     _count500ms:
     0000 0000                      1-  283     	dw	0x00
                                    1-  287     .segment "idata"
     0000                           1-  288     _keyCount:
     0000 0000                      1-  289     	dw	0x00
                                    1-  293     .segment "idata"
     0000                           1-  294     _workStep:
     0000 0000                      1-  295     	dw	0x00
                                    1-  299     .segment "idata"
     0000                           1-  300     _ledStep:
     0000 0000                      1-  301     	dw	0x00
                                    1-  305     .segment "idata"
     0000                           1-  306     _fgCount:
     0000 0000 0000                 1-  307     	dw	0x00, 0x00
                                    1-  311     .segment "idata"
     0000                           1-  312     _fgPRD:
     0000 0000 0000                 1-  313     	dw	0x00, 0x00
                                    1-  317     .segment "idata"
     0000                           1-  318     _preFG:
     0000 0000                      1-  319     	dw	0x00
                                    1-  323     .segment "idata"
     0000                           1-  324     _maxDuty:
     0000 0000                      1-  325     	dw	0x00
                                    1-  329     .segment "idata"
     0000                           1-  330     _pwStep:
     0000 0000                      1-  331     	dw	0x00
                                    1-  335     .segment "idata"
     0000                           1-  336     _chrgTime:
     0000 0000 0000                 1-  337     	dw	0x00, 0x00
                                    1-  341     .segment "idata"
     0000                           1-  342     _startStep:
     0000 0000                      1-  343     	dw	0x00
                                    1-  347     .segment "idata"
     0000                           1-  348     _sleepTime:
     0000 0000 0000                 1-  349     	dw	0x00, 0x00
                                    1-  353     .segment "idata"
     0000                           1-  354     _count200ms:
     0000 0000                      1-  355     	dw	0x00
                                    1-  359     .segment "idata"
     0000                           1-  360     _count1s:
     0000 0000                      1-  361     	dw	0x00
                                    1-  365     .segment "idata"
     0000                           1-  366     _count900s:
     0000 0000 0000                 1-  367     	dw	0x00, 0x00
                                    1-  371     .segment "idata"
     0000                           1-  372     _lowBatTime:
     0000 0000                      1-  373     	dw	0x00
                                    1-  377     .segment "idata"
     0000                           1-  378     _ledTime:
     0000 0000                      1-  379     	dw	0x00
                                    1-  383     .segment "idata"
     0000                           1-  384     _overCount:
     0000 0000                      1-  385     	dw	0x00
                                    1-  389     .segment "idata"
     0000                           1-  390     _debug:
     0000 0000                      1-  391     	dw	0x00
                                    1-  395     .segment "idata"
     0000                           1-  396     _lowBat:
     0000 0000                      1-  397     	dw	0x00
                                    1-  401     .segment "idata"
     0000                           1-  402     _currentDuty:
     0000 0000                      1-  403     	dw	0x00
                                    1-  407     .segment "idata"
     0000                           1-  408     _firstTime:
     0000 0000                      1-  409     	dw	0x00
                                    1-  413     .segment "idata"
     0000                           1-  414     _lowCount:
     0000 0000                      1-  415     	dw	0x00
                                    1-  419     .segment "idata"
     0000                           1-  420     _shanshuoTime:
     0000 0000                      1-  421     	dw	0x00
                                    1-  425     .segment "idata"
     0000                           1-  426     _fullCount:
     0000 0000                      1-  427     	dw	0x00
                                    1-  431     .segment "idata"
     0000                           1-  432     _closeCount:
     0000 0000 0000                 1-  433     	dw	0x00, 0x00
                                    1-  437     .segment "idata"
     0000                           1-  438     _shandengTime:
     0000 0000                      1-  439     	dw	0x00
                                    1-  443     .segment "idata"
     0000                           1-  444     _lowBatLock:
     0000 0000                      1-  445     	dw	0x00
                                    1-  449     .segment "idata"
     0000                           1-  450     _workStartFlag:
     0000 0000                      1-  451     	dw	0x00
                                    1-  454     ;--------------------------------------------------------
                                    1-  455     ; overlayable items in internal ram 
                                    1-  456     ;--------------------------------------------------------
                                    1-  457     ;	udata_ovr
                                    1-  458     ;--------------------------------------------------------
                                    1-  459     ; reset vector 
                                    1-  460     ;--------------------------------------------------------
                                    1-  461     ORG	0x0000
     0000 3rrr                      1-  462     	LGOTO	__nyc_ny8_startup
                                    1-  463     ;--------------------------------------------------------
                                    1-  464     ; interrupt and initialization code
                                    1-  465     ;--------------------------------------------------------
                                    1-  466     ORG 0x0008
                                    1-  467     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  469     .segment "code"
     0000                           1-  470     __sdcc_interrupt:
                                    1-  471     ;***
                                    1-  472     ;  pBlock Stats: dbName = I
                                    1-  473     ;***
                                    1-  474     ;2 compiler assigned registers:
                                    1-  475     ;   STK00
                                    1-  476     ;   STK01
                                    1-  477     ;; Starting pCode block
     0000                           1-  478     _isr:
                                    1-  479     ; 0 exit points
                                    1-  480     	.line	84, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  481     	MOVAR	WSAVE
     0001 1503                      1-  482     	SWAPR	STATUS,W
     0002 0283                      1-  483     	CLRR	STATUS
     0003 00rr                      1-  484     	MOVAR	SSAVE
     0004 010A                      1-  485     	MOVR	PCHBUF,W
     0005 028A                      1-  486     	CLRR	PCHBUF
     0006 00rr                      1-  487     	MOVAR	PSAVE
     0007 0104                      1-  488     	MOVR	FSR,W
                                    1-  489     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  490     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  491     	MOVR	STK00,W
                                    1-  492     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  493     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  494     	MOVR	STK01,W
                                    1-  495     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  496     	MOVAR	___sdcc_saved_stk01
                                    1-  497     	.line	86, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  498     	BTRSS	_INTFbits,0
                                    1-  499     	MGOTO	_00121_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  500     	.line	88, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  501     	MOVIA	0x37
     0013 03rr                      1-  502     	ADDAR	_TMR0,F
                                    1-  503     	.line	90, "main.c"; 	if(++intCount >= 100)
                                    1-  504     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  505     	INCR	_intCount,F
                                    1-  506     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  507     	MOVIA	0x64
     0017 04rr                      1-  508     	SUBAR	_intCount,W
     0018 0803                      1-  509     	BTRSS	STATUS,0
                                    1-  510     	MGOTO	_00121_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  511     	.line	92, "main.c"; 	IntFlag = 1;
                                    1-  512     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  513     	BSR	_Status,0
                                    1-  514     	.line	93, "main.c"; 	intCount = 0;
                                    1-  515     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  516     	CLRR	_intCount
                                    1-  517     	.line	94, "main.c"; 	if(workStep)
                                    1-  518     	BANKSEL	_workStep
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 01rr                      1-  519     	MOVR	_workStep,W
     0020 0D03                      1-  520     	BTRSC	STATUS,2
                                    1-  521     	MGOTO	_00106_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  522     	.line	95, "main.c"; 	++fgCount;
                                    1-  523     	BANKSEL	_fgCount
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 05rr                      1-  524     	INCR	_fgCount,F
     0024 0D03                      1-  525     	BTRSC	STATUS,2
     0025 05rr                      1-  526     	INCR	(_fgCount + 1),F
     0026                           1-  527     _00106_DS_:
                                    1-  528     	.line	96, "main.c"; 	if(++count500ms >= 40)
                                    1-  529     	BANKSEL	_count500ms
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 05rr                      1-  530     	INCR	_count500ms,F
                                    1-  531     ;;unsigned compare: left < lit (0x28=40), size=1
     0028 2128                      1-  532     	MOVIA	0x28
     0029 04rr                      1-  533     	SUBAR	_count500ms,W
     002A 0C03                      1-  534     	BTRSC	STATUS,0
                                    1-  535     	.line	97, "main.c"; 	count500ms = 0;
     002B 02rr                      1-  536     	CLRR	_count500ms
                                    1-  537     	.line	98, "main.c"; 	if(++count200ms >= 20)
                                    1-  538     	BANKSEL	_count200ms
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1-  539     	INCR	_count200ms,F
     002E 2114                      1-  540     	MOVIA	0x14
     002F 04rr                      1-  541     	SUBAR	_count200ms,W
     0030 0803                      1-  542     	BTRSS	STATUS,0
                                    1-  543     	MGOTO	_00112_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  544     	.line	100, "main.c"; 	count200ms = 0;
     0032 02rr                      1-  545     	CLRR	_count200ms
                                    1-  546     	.line	101, "main.c"; 	if(shandengTime > 0)
                                    1-  547     	BANKSEL	_shandengTime
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1-  548     	MOVR	_shandengTime,W
     0035 0903                      1-  549     	BTRSS	STATUS,2
                                    1-  550     	.line	102, "main.c"; 	--shandengTime;
     0036 06rr                      1-  551     	DECR	_shandengTime,F
     0037                           1-  552     _00112_DS_:
                                    1-  553     	.line	104, "main.c"; 	if(++count1s >= 100)
                                    1-  554     	BANKSEL	_count1s
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 05rr                      1-  555     	INCR	_count1s,F
     0039 2164                      1-  556     	MOVIA	0x64
     003A 04rr                      1-  557     	SUBAR	_count1s,W
     003B 0803                      1-  558     	BTRSS	STATUS,0
                                    1-  559     	MGOTO	_00121_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  560     	.line	106, "main.c"; 	count1s = 0;
     003D 02rr                      1-  561     	CLRR	_count1s
                                    1-  562     	.line	107, "main.c"; 	if(workStep)
                                    1-  563     	BANKSEL	_workStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 01rr                      1-  564     	MOVR	_workStep,W
     0040 0D03                      1-  565     	BTRSC	STATUS,2
                                    1-  566     	MGOTO	_00114_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  567     	.line	109, "main.c"; 	++count900s;
                                    1-  568     	BANKSEL	_count900s
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 05rr                      1-  569     	INCR	_count900s,F
     0044 0D03                      1-  570     	BTRSC	STATUS,2
     0045 05rr                      1-  571     	INCR	(_count900s + 1),F
                                    1-  572     	MGOTO	_00121_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
     0047                           1-  573     _00114_DS_:
                                    1-  574     	.line	113, "main.c"; 	count900s = 0;
                                    1-  575     	BANKSEL	_count900s
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 02rr                      1-  576     	CLRR	_count900s
     0049 02rr                      1-  577     	CLRR	(_count900s + 1)
     004A                           1-  578     _00121_DS_:
                                    1-  579     	.line	122, "main.c"; 	if(INTFbits.PABIF)
     004A 08rr                      1-  580     	BTRSS	_INTFbits,1
                                    1-  581     	MGOTO	_00123_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  582     	.line	124, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     004C 21FD                      1-  583     	MOVIA	0xfd
     004D 00rr                      1-  584     	MOVAR	_INTF
     004E                           1-  585     _00123_DS_:
                                    1-  586     	.line	127, "main.c"; 	INTF = 0;
     004E 02rr                      1-  587     	CLRR	_INTF
                                    1-  588     	.line	129, "main.c"; 	}
                                    1-  589     	BANKSEL	___sdcc_saved_stk01
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 01rr                      1-  590     	MOVR	___sdcc_saved_stk01,W
     0051 00rr                      1-  591     	MOVAR	STK01
                                    1-  592     	BANKSEL	___sdcc_saved_stk00
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1-  593     	MOVR	___sdcc_saved_stk00,W
     0054 00rr                      1-  594     	MOVAR	STK00
                                    1-  595     	BANKSEL	___sdcc_saved_fsr
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 01rr                      1-  596     	MOVR	___sdcc_saved_fsr,W
     0057 0084                      1-  597     	MOVAR	FSR
     0058 01rr                      1-  598     	MOVR	PSAVE,W
     0059 008A                      1-  599     	MOVAR	PCHBUF
     005A 0283                      1-  600     	CLRR	STATUS
     005B 15rr                      1-  601     	SWAPR	SSAVE,W
     005C 0083                      1-  602     	MOVAR	STATUS
     005D 15rr                      1-  603     	SWAPR	WSAVE,F
     005E 15rr                      1-  604     	SWAPR	WSAVE,W
     005F                           1-  605     END_OF_INTERRUPT:
     005F 0011                      1-  606     	RETIE	
                                    1-  608     ;--------------------------------------------------------
                                    1-  609     ; code
                                    1-  610     ;--------------------------------------------------------
                                    1-  611     ;***
                                    1-  612     ;  pBlock Stats: dbName = M
                                    1-  613     ;***
                                    1-  614     ;has an exit
                                    1-  615     ;functions called:
                                    1-  616     ;   _initSys
                                    1-  617     ;   _initAD
                                    1-  618     ;   _ledShow
                                    1-  619     ;   _powerOff
                                    1-  620     ;   _ledShow
                                    1-  621     ;   _keyCtr
                                    1-  622     ;   _checkBatAD
                                    1-  623     ;   _chrgCtr
                                    1-  624     ;   _gotoSleep
                                    1-  625     ;   _powerOff
                                    1-  626     ;   _initSys
                                    1-  627     ;   _initAD
                                    1-  628     ;   _ledShow
                                    1-  629     ;   _powerOff
                                    1-  630     ;   _ledShow
                                    1-  631     ;   _keyCtr
                                    1-  632     ;   _checkBatAD
                                    1-  633     ;   _chrgCtr
                                    1-  634     ;   _gotoSleep
                                    1-  635     ;   _powerOff
                                    1-  636     ;; Starting pCode block
                                    1-  637     .segment "code"; module=main, function=_main
     0000                           1-  639     _main:
                                    1-  640     ; 2 exit points
                                    1-  641     	.line	133, "main.c"; 	initSys();
                                    1-  642     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  643     	.line	134, "main.c"; 	initAD();
                                    1-  644     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  645     _00154_DS_:
                                    1-  646     	.line	137, "main.c"; 	ledShow();
                                    1-  647     	MCALL	_ledShow
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  648     	.line	138, "main.c"; 	CLRWDT();
     0003 0002                      1-  649     	clrwdt
                                    1-  650     	.line	139, "main.c"; 	if(!IntFlag)
                                    1-  651     	BANKSEL	_Status
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 08rr                      1-  652     	BTRSS	_Status,0
                                    1-  653     	MGOTO	_00154_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  654     	.line	141, "main.c"; 	IntFlag = 0;
     0007 1Crr                      1-  655     	BCR	_Status,0
                                    1-  656     ;;unsigned compare: left < lit (0x1E=30), size=2
                                    1-  657     	.line	143, "main.c"; 	if(R_AIN4_DATA < 30 && workStep > 0)
     0008 2100                      1-  658     	MOVIA	0x00
                                    1-  659     	BANKSEL	_R_AIN4_DATA
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1-  660     	SUBAR	(_R_AIN4_DATA + 1),W
     000B 0903                      1-  661     	BTRSS	STATUS,2
                                    1-  662     	MGOTO	_00203_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
     000D 211E                      1-  663     	MOVIA	0x1e
     000E 04rr                      1-  664     	SUBAR	_R_AIN4_DATA,W
     000F                           1-  665     _00203_DS_:
     000F 0C03                      1-  666     	BTRSC	STATUS,0
                                    1-  667     	MGOTO	_00133_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  668     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1-  669     	MOVR	_workStep,W
     0013 0D03                      1-  670     	BTRSC	STATUS,2
                                    1-  671     	MGOTO	_00133_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  672     	.line	145, "main.c"; 	if(++closeCount >= 6000)
                                    1-  673     	BANKSEL	_closeCount
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 05rr                      1-  674     	INCR	_closeCount,F
     0017 0D03                      1-  675     	BTRSC	STATUS,2
     0018 05rr                      1-  676     	INCR	(_closeCount + 1),F
                                    1-  677     ;;unsigned compare: left < lit (0x1770=6000), size=2
     0019 2117                      1-  678     	MOVIA	0x17
     001A 04rr                      1-  679     	SUBAR	(_closeCount + 1),W
     001B 0903                      1-  680     	BTRSS	STATUS,2
                                    1-  681     	MGOTO	_00204_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
     001D 2170                      1-  682     	MOVIA	0x70
     001E 04rr                      1-  683     	SUBAR	_closeCount,W
     001F                           1-  684     _00204_DS_:
     001F 0803                      1-  685     	BTRSS	STATUS,0
                                    1-  686     	MGOTO	_00134_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  687     	.line	147, "main.c"; 	closeCount = 0;
                                    1-  688     	BANKSEL	_closeCount
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 02rr                      1-  689     	CLRR	_closeCount
     0023 02rr                      1-  690     	CLRR	(_closeCount + 1)
                                    1-  691     	.line	148, "main.c"; 	workStep = 0;
                                    1-  692     	BANKSEL	_workStep
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 02rr                      1-  693     	CLRR	_workStep
                                    1-  694     	.line	149, "main.c"; 	ledStep = 0;
                                    1-  695     	BANKSEL	_ledStep
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 02rr                      1-  696     	CLRR	_ledStep
                                    1-  697     	.line	150, "main.c"; 	powerOff();
                                    1-  698     	MCALL	_powerOff
     0028 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  699     	.line	151, "main.c"; 	shandengTime = 6;
     0029 2106                      1-  700     	MOVIA	0x06
                                    1-  701     	BANKSEL	_shandengTime
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1-  702     	MOVAR	_shandengTime
                                    1-  703     	MGOTO	_00134_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
     002D                           1-  704     _00133_DS_:
                                    1-  705     	.line	156, "main.c"; 	closeCount = 0;
                                    1-  706     	BANKSEL	_closeCount
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 02rr                      1-  707     	CLRR	_closeCount
     002F 02rr                      1-  708     	CLRR	(_closeCount + 1)
     0030                           1-  709     _00134_DS_:
                                    1-  710     	.line	158, "main.c"; 	ledShow();
                                    1-  711     	MCALL	_ledShow
     0030 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  712     	.line	159, "main.c"; 	if(chrgFlag == 0)
                                    1-  713     	BANKSEL	_Status
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 09rr                      1-  714     	BTRSS	_Status,3
                                    1-  715     	.line	160, "main.c"; 	keyCtr();
                                    1-  716     	MCALL	_keyCtr
     0033 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  717     	.line	161, "main.c"; 	if(count200ms < 5)
     0034 2105                      1-  718     	MOVIA	0x05
                                    1-  719     	BANKSEL	_count200ms
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 04rr                      1-  720     	SUBAR	_count200ms,W
     0037 0803                      1-  721     	BTRSS	STATUS,0
                                    1-  722     	.line	163, "main.c"; 	checkBatAD();
                                    1-  723     	MCALL	_checkBatAD
     0038 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  724     	.line	169, "main.c"; 	if(workStep > 0)
                                    1-  725     	BANKSEL	_workStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1-  726     	MOVR	_workStep,W
     003B 0D03                      1-  727     	BTRSC	STATUS,2
                                    1-  728     	MGOTO	_00143_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  729     	.line	171, "main.c"; 	if(currentDuty > maxDuty)
                                    1-  730     	BANKSEL	_currentDuty
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 01rr                      1-  731     	MOVR	_currentDuty,W
                                    1-  732     	BANKSEL	_maxDuty
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 04rr                      1-  733     	SUBAR	_maxDuty,W
     0041 0C03                      1-  734     	BTRSC	STATUS,0
                                    1-  735     	MGOTO	_00004_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  736     	.line	173, "main.c"; 	currentDuty = currentDuty - 1;
                                    1-  737     	BANKSEL	_currentDuty
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 06rr                      1-  738     	DECR	_currentDuty,F
     0045                           1-  739     _00004_DS_:
                                    1-  740     	.line	175, "main.c"; 	PWM2DUTY = maxDuty;
                                    1-  741     	BANKSEL	_maxDuty
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1-  742     	MOVR	_maxDuty,W
     0047 00rr                      1-  743     	SFUN	_PWM2DUTY
     0048                           1-  744     _00143_DS_:
                                    1-  745     	.line	177, "main.c"; 	chrgCtr();
                                    1-  746     	MCALL	_chrgCtr
     0048 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  747     	.line	178, "main.c"; 	if(workStep == 0 && keyCount == 0 && ((PORTA & 0x20) == 0) && shandengTime == 0)
                                    1-  748     	BANKSEL	_workStep
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 01rr                      1-  749     	MOVR	_workStep,W
     004B 0903                      1-  750     	BTRSS	STATUS,2
                                    1-  751     	MGOTO	_00147_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  752     	BANKSEL	_keyCount
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 01rr                      1-  753     	MOVR	_keyCount,W
     004F 0903                      1-  754     	BTRSS	STATUS,2
                                    1-  755     	MGOTO	_00147_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  756     	BANKSEL	_PORTA
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 0Err                      1-  757     	BTRSC	_PORTA,5
                                    1-  758     	MGOTO	_00147_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  759     	BANKSEL	_shandengTime
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 01rr                      1-  760     	MOVR	_shandengTime,W
     0056 0903                      1-  761     	BTRSS	STATUS,2
                                    1-  762     	MGOTO	_00147_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  763     	.line	180, "main.c"; 	if(++sleepTime > 40)
                                    1-  764     	BANKSEL	_sleepTime
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 05rr                      1-  765     	INCR	_sleepTime,F
     005A 0D03                      1-  766     	BTRSC	STATUS,2
     005B 05rr                      1-  767     	INCR	(_sleepTime + 1),F
                                    1-  768     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  769     ;;unsigned compare: left >= lit (0x29=41), size=2
     005C 2100                      1-  770     	MOVIA	0x00
     005D 04rr                      1-  771     	SUBAR	(_sleepTime + 1),W
     005E 0903                      1-  772     	BTRSS	STATUS,2
                                    1-  773     	MGOTO	_00207_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
     0060 2129                      1-  774     	MOVIA	0x29
     0061 04rr                      1-  775     	SUBAR	_sleepTime,W
     0062                           1-  776     _00207_DS_:
     0062 0803                      1-  777     	BTRSS	STATUS,0
                                    1-  778     	MGOTO	_00147_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  779     	.line	182, "main.c"; 	gotoSleep();
                                    1-  780     	MCALL	_gotoSleep
     0064 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  781     ;;unsigned compare: left < lit (0x384=900), size=2
     0065                           1-  782     _00147_DS_:
                                    1-  783     	.line	186, "main.c"; 	if(count900s >= 900)
     0065 2103                      1-  784     	MOVIA	0x03
                                    1-  785     	BANKSEL	_count900s
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 04rr                      1-  786     	SUBAR	(_count900s + 1),W
     0068 0903                      1-  787     	BTRSS	STATUS,2
                                    1-  788     	MGOTO	_00208_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
     006A 2184                      1-  789     	MOVIA	0x84
     006B 04rr                      1-  790     	SUBAR	_count900s,W
     006C                           1-  791     _00208_DS_:
     006C 0803                      1-  792     	BTRSS	STATUS,0
                                    1-  793     	MGOTO	_00154_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  794     	.line	188, "main.c"; 	powerOff();
                                    1-  795     	MCALL	_powerOff
     006E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  796     	MGOTO	_00154_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  797     	.line	192, "main.c"; 	}
                                    1-  798     	RETURN	
     0070 0010                      3-   40 m1      ret
                                    1-  799     ; exit point of _main
                                    1-  801     ;***
                                    1-  802     ;  pBlock Stats: dbName = C
                                    1-  803     ;***
                                    1-  804     ;has an exit
                                    1-  805     ;; Starting pCode block
                                    1-  806     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  808     _F_wait_eoc:
                                    1-  809     ; 2 exit points
     0000                           1-  810     _00596_DS_:
                                    1-  811     	.line	684, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  812     	BTRSS	_ADMDbits,5
                                    1-  813     	MGOTO	_00596_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  814     	.line	686, "main.c"; 	}
                                    1-  815     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1-  816     ; exit point of _F_wait_eoc
                                    1-  818     ;***
                                    1-  819     ;  pBlock Stats: dbName = C
                                    1-  820     ;***
                                    1-  821     ;has an exit
                                    1-  822     ;functions called:
                                    1-  823     ;   _delay
                                    1-  824     ;   _F_wait_eoc
                                    1-  825     ;   _delay
                                    1-  826     ;   _F_wait_eoc
                                    1-  827     ;6 compiler assigned registers:
                                    1-  828     ;   r0x1025
                                    1-  829     ;   r0x1026
                                    1-  830     ;   r0x1027
                                    1-  831     ;   r0x1028
                                    1-  832     ;   r0x1029
                                    1-  833     ;   r0x102A
                                    1-  834     ;; Starting pCode block
                                    1-  835     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1-  837     ;local variable name mapping:
     0000                           1-  840     _F_AIN4_Convert:
                                    1-  841     ; 2 exit points
                                    1-  842     	.line	666, "main.c"; 	void F_AIN4_Convert(char count)
                                    1-  843     	BANKSEL	r0x1025
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  844     	MOVAR	r0x1025
                                    1-  845     	.line	668, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1-  846     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  847     	CLRR	_R_AIN4_DATA_LB
                                    1-  848     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1-  849     	CLRR	_R_AIN4_DATA
     0006 02rr                      1-  850     	CLRR	(_R_AIN4_DATA + 1)
                                    1-  851     	.line	670, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1-  852     	MOVIA	0x94
     0008 00rr                      1-  853     	MOVAR	_ADMD
                                    1-  854     	.line	671, "main.c"; 	delay(200);	
     0009 21C8                      1-  855     	MOVIA	0xc8
                                    1-  856     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  857     	.line	672, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1-  858     	MOVIA	0x01
                                    1-  859     	BANKSEL	r0x1026
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1-  860     	MOVAR	r0x1026
     000E                           1-  861     _00589_DS_:
                                    1-  862     	BANKSEL	r0x1026
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1-  863     	MOVR	r0x1026,W
                                    1-  864     	BANKSEL	r0x1025
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1-  865     	SUBAR	r0x1025,W
     0012 0803                      1-  866     	BTRSS	STATUS,0
                                    1-  867     	MGOTO	_00591_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  868     	.line	674, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1-  869     	BSR	_ADMDbits,6
                                    1-  870     	.line	675, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1-  871     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  872     	.line	676, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1-  873     	MOVIA	0x0f
     0017 10rr                      1-  874     	ANDAR	_ADR,W
                                    1-  875     ;;3	MOVAR	r0x1027
                                    1-  876     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1-  877     	ADDAR	_R_AIN4_DATA_LB,F
                                    1-  878     	.line	677, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1-  879     	MOVR	_ADD,W
                                    1-  880     	BANKSEL	r0x1027
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  881     	MOVAR	r0x1027
                                    1-  882     ;;1	CLRR	r0x1028
                                    1-  883     ;;102	MOVR	r0x1027,W
                                    1-  884     ;;100	MOVAR	r0x1029
     001D 2100                      1-  885     	MOVIA	0x00
                                    1-  886     	BANKSEL	r0x102A
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1-  887     	MOVAR	r0x102A
                                    1-  888     ;;101	MOVR	r0x1029,W
                                    1-  889     	BANKSEL	r0x1027
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1-  890     	MOVR	r0x1027,W
                                    1-  891     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1-  892     	ADDAR	_R_AIN4_DATA,F
                                    1-  893     	BANKSEL	r0x102A
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1-  894     	MOVR	r0x102A,W
     0026 0C03                      1-  895     	BTRSC	STATUS,0
     0027 05rr                      1-  896     	INCR	r0x102A,W
     0028 0D03                      1-  897     	BTRSC	STATUS,2
                                    1-  898     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  899     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1-  900     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1-  901     _00001_DS_:
                                    1-  902     	.line	672, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  903     	BANKSEL	r0x1026
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1-  904     	INCR	r0x1026,F
                                    1-  905     	MGOTO	_00589_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1-  906     _00591_DS_:
                                    1-  907     	.line	679, "main.c"; 	}
                                    1-  908     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1-  909     ; exit point of _F_AIN4_Convert
                                    1-  911     ;***
                                    1-  912     ;  pBlock Stats: dbName = C
                                    1-  913     ;***
                                    1-  914     ;has an exit
                                    1-  915     ;functions called:
                                    1-  916     ;   _F_AIN4_Convert
                                    1-  917     ;   _F_AIN4_Convert
                                    1-  918     ;4 compiler assigned registers:
                                    1-  919     ;   r0x102B
                                    1-  920     ;   r0x102C
                                    1-  921     ;   r0x102D
                                    1-  922     ;   r0x102E
                                    1-  923     ;; Starting pCode block
                                    1-  924     .segment "code"; module=main, function=_checkBatAD
     0000                           1-  926     _checkBatAD:
                                    1-  927     ; 2 exit points
                                    1-  928     	.line	557, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1-  929     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1-  930     	CLRR	_R_AIN4_DATA_LB
                                    1-  931     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  932     	CLRR	_R_AIN4_DATA
     0004 02rr                      1-  933     	CLRR	(_R_AIN4_DATA + 1)
                                    1-  934     	.line	558, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1-  935     	MOVIA	0x08
                                    1-  936     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  937     	.line	559, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1-  938     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1-  939     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1-  940     	ANDIA	0xf0
     000A 00rr                      1-  941     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1-  942     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1-  943     	MOVAR	_R_AIN4_DATA
     000D 220F                      1-  944     	ANDIA	0x0f
     000E 11rr                      1-  945     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1-  946     	XORAR	_R_AIN4_DATA,F
                                    1-  947     	.line	560, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1-  948     	MOVIA	0xf0
                                    1-  949     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1-  950     	ANDAR	_R_AIN4_DATA_LB,F
                                    1-  951     	.line	561, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1-  952     	MOVR	_R_AIN4_DATA_LB,W
                                    1-  953     	BANKSEL	r0x102D
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1-  954     	MOVAR	r0x102D
                                    1-  955     ;;1	MOVAR	r0x102B
                                    1-  956     ;;1	CLRR	r0x102C
                                    1-  957     ;;99	MOVR	r0x102B,W
     0016 2100                      1-  958     	MOVIA	0x00
                                    1-  959     	BANKSEL	r0x102E
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1-  960     	MOVAR	r0x102E
                                    1-  961     	BANKSEL	r0x102D
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1-  962     	MOVR	r0x102D,W
                                    1-  963     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1-  964     	ADDAR	_R_AIN4_DATA,F
                                    1-  965     	BANKSEL	r0x102E
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1-  966     	MOVR	r0x102E,W
     001F 0C03                      1-  967     	BTRSC	STATUS,0
     0020 05rr                      1-  968     	INCR	r0x102E,W
     0021 0D03                      1-  969     	BTRSC	STATUS,2
                                    1-  970     	MGOTO	_00002_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  971     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1-  972     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1-  973     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1-  974     _00002_DS_:
                                    1-  975     	.line	562, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1-  976     	BCR	STATUS,0
                                    1-  977     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1-  978     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1-  979     	RRR	_R_AIN4_DATA,F
                                    1-  980     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1-  981     	BCR	STATUS,0
     002A 13rr                      1-  982     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1-  983     	RRR	_R_AIN4_DATA,F
                                    1-  984     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1-  985     	BCR	STATUS,0
     002D 13rr                      1-  986     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1-  987     	RRR	_R_AIN4_DATA,F
                                    1-  988     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  989     ;;unsigned compare: left >= lit (0x60F=1551), size=2
                                    1-  990     	.line	563, "main.c"; 	if(R_AIN4_DATA > 1550)
     002F 2106                      1-  991     	MOVIA	0x06
     0030 04rr                      1-  992     	SUBAR	(_R_AIN4_DATA + 1),W
     0031 0903                      1-  993     	BTRSS	STATUS,2
                                    1-  994     	MGOTO	_00562_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033 210F                      1-  995     	MOVIA	0x0f
     0034 04rr                      1-  996     	SUBAR	_R_AIN4_DATA,W
     0035                           1-  997     _00562_DS_:
     0035 0803                      1-  998     	BTRSS	STATUS,0
                                    1-  999     	MGOTO	_00425_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1000     	.line	566, "main.c"; 	lowCount = 0;
                                    1- 1001     	BANKSEL	_lowCount
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 02rr                      1- 1002     	CLRR	_lowCount
                                    1- 1003     	MGOTO	_00426_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1004     ;;unsigned compare: left < lit (0x456=1110), size=2
     003A                           1- 1005     _00425_DS_:
                                    1- 1006     	.line	568, "main.c"; 	else if(R_AIN4_DATA < 1110)
     003A 2104                      1- 1007     	MOVIA	0x04
                                    1- 1008     	BANKSEL	_R_AIN4_DATA
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 04rr                      1- 1009     	SUBAR	(_R_AIN4_DATA + 1),W
     003D 0903                      1- 1010     	BTRSS	STATUS,2
                                    1- 1011     	MGOTO	_00563_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
     003F 2156                      1- 1012     	MOVIA	0x56
     0040 04rr                      1- 1013     	SUBAR	_R_AIN4_DATA,W
     0041                           1- 1014     _00563_DS_:
     0041 0C03                      1- 1015     	BTRSC	STATUS,0
                                    1- 1016     	MGOTO	_00422_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1017     	.line	570, "main.c"; 	if(++lowCount < 10)
                                    1- 1018     	BANKSEL	_lowCount
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 05rr                      1- 1019     	INCR	_lowCount,F
                                    1- 1020     ;;unsigned compare: left < lit (0xA=10), size=1
     0045 210A                      1- 1021     	MOVIA	0x0a
     0046 04rr                      1- 1022     	SUBAR	_lowCount,W
     0047 0803                      1- 1023     	BTRSS	STATUS,0
                                    1- 1024     	.line	571, "main.c"; 	return;
                                    1- 1025     	MGOTO	_00476_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1026     	.line	572, "main.c"; 	lowCount = 10;
     0049 210A                      1- 1027     	MOVIA	0x0a
     004A 00rr                      1- 1028     	MOVAR	_lowCount
                                    1- 1029     	.line	573, "main.c"; 	pwStep = 0;
                                    1- 1030     	BANKSEL	_pwStep
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 02rr                      1- 1031     	CLRR	_pwStep
                                    1- 1032     	.line	574, "main.c"; 	R_AIN4_DATA = 1110;
     004D 2156                      1- 1033     	MOVIA	0x56
                                    1- 1034     	BANKSEL	_R_AIN4_DATA
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 00rr                      1- 1035     	MOVAR	_R_AIN4_DATA
     0050 2104                      1- 1036     	MOVIA	0x04
     0051 00rr                      1- 1037     	MOVAR	(_R_AIN4_DATA + 1)
                                    1- 1038     	.line	576, "main.c"; 	if(workStep > 0 && ++firstTime == 10)
                                    1- 1039     	BANKSEL	_workStep
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1- 1040     	MOVR	_workStep,W
     0054 0D03                      1- 1041     	BTRSC	STATUS,2
                                    1- 1042     	MGOTO	_00417_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1043     	BANKSEL	_firstTime
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 05rr                      1- 1044     	INCR	_firstTime,F
     0058 01rr                      1- 1045     	MOVR	_firstTime,W
     0059 240A                      1- 1046     	XORIA	0x0a
     005A 0903                      1- 1047     	BTRSS	STATUS,2
                                    1- 1048     	MGOTO	_00417_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1049     	.line	578, "main.c"; 	shanshuoTime = 16;
     005C 2110                      1- 1050     	MOVIA	0x10
                                    1- 1051     	BANKSEL	_shanshuoTime
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 00rr                      1- 1052     	MOVAR	_shanshuoTime
                                    1- 1053     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1054     ;;unsigned compare: left >= lit (0xC=12), size=1
     005F                           1- 1055     _00417_DS_:
                                    1- 1056     	.line	581, "main.c"; 	if(firstTime > 11)
     005F 210C                      1- 1057     	MOVIA	0x0c
                                    1- 1058     	BANKSEL	_firstTime
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 04rr                      1- 1059     	SUBAR	_firstTime,W
     0062 0803                      1- 1060     	BTRSS	STATUS,0
                                    1- 1061     	MGOTO	_00426_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1062     	.line	582, "main.c"; 	firstTime = 11;
     0064 210B                      1- 1063     	MOVIA	0x0b
     0065 00rr                      1- 1064     	MOVAR	_firstTime
                                    1- 1065     	MGOTO	_00426_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
     0067                           1- 1066     _00422_DS_:
                                    1- 1067     	.line	586, "main.c"; 	lowCount = 0;
                                    1- 1068     	BANKSEL	_lowCount
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 02rr                      1- 1069     	CLRR	_lowCount
                                    1- 1070     	.line	587, "main.c"; 	firstTime = 0;
                                    1- 1071     	BANKSEL	_firstTime
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 02rr                      1- 1072     	CLRR	_firstTime
     006B                           1- 1073     _00426_DS_:
                                    1- 1074     	.line	589, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA - 1110;
     006B 21AA                      1- 1075     	MOVIA	0xaa
                                    1- 1076     	BANKSEL	_R_AIN4_DATA
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 03rr                      1- 1077     	ADDAR	_R_AIN4_DATA,F
     006E 21FB                      1- 1078     	MOVIA	0xfb
     006F 0C03                      1- 1079     	BTRSC	STATUS,0
     0070 21FC                      1- 1080     	MOVIA	0xfc
     0071 03rr                      1- 1081     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1082     ;;unsigned compare: left < lit (0x1B8=440), size=2
                                    1- 1083     	.line	591, "main.c"; 	if(R_AIN4_DATA >= 440)
     0072 2101                      1- 1084     	MOVIA	0x01
     0073 04rr                      1- 1085     	SUBAR	(_R_AIN4_DATA + 1),W
     0074 0903                      1- 1086     	BTRSS	STATUS,2
                                    1- 1087     	MGOTO	_00566_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
     0076 21B8                      1- 1088     	MOVIA	0xb8
     0077 04rr                      1- 1089     	SUBAR	_R_AIN4_DATA,W
     0078                           1- 1090     _00566_DS_:
     0078 0803                      1- 1091     	BTRSS	STATUS,0
                                    1- 1092     	MGOTO	_00474_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1093     	.line	593, "main.c"; 	pwStep = 5;
     007A 2105                      1- 1094     	MOVIA	0x05
                                    1- 1095     	BANKSEL	_pwStep
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 00rr                      1- 1096     	MOVAR	_pwStep
                                    1- 1097     	MGOTO	_00476_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1098     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1099     ;;unsigned compare: left >= lit (0x164=356), size=2
     007E                           1- 1100     _00474_DS_:
                                    1- 1101     	.line	595, "main.c"; 	else if(R_AIN4_DATA > 355)
     007E 2101                      1- 1102     	MOVIA	0x01
                                    1- 1103     	BANKSEL	_R_AIN4_DATA
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 04rr                      1- 1104     	SUBAR	(_R_AIN4_DATA + 1),W
     0081 0903                      1- 1105     	BTRSS	STATUS,2
                                    1- 1106     	MGOTO	_00567_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
     0083 2164                      1- 1107     	MOVIA	0x64
     0084 04rr                      1- 1108     	SUBAR	_R_AIN4_DATA,W
     0085                           1- 1109     _00567_DS_:
     0085 0803                      1- 1110     	BTRSS	STATUS,0
                                    1- 1111     	MGOTO	_00471_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1112     	.line	597, "main.c"; 	fullCount = 0;
                                    1- 1113     	BANKSEL	_fullCount
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 02rr                      1- 1114     	CLRR	_fullCount
                                    1- 1115     ;;unsigned compare: left < lit (0x4=4), size=1
                                    1- 1116     	.line	598, "main.c"; 	if(pwStep < 4)
     0089 2104                      1- 1117     	MOVIA	0x04
                                    1- 1118     	BANKSEL	_pwStep
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 04rr                      1- 1119     	SUBAR	_pwStep,W
     008C 0C03                      1- 1120     	BTRSC	STATUS,0
                                    1- 1121     	MGOTO	_00433_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1122     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1123     ;;unsigned compare: left >= lit (0x15F=351), size=2
                                    1- 1124     	.line	600, "main.c"; 	if(R_AIN4_DATA > 350)
     008E 2101                      1- 1125     	MOVIA	0x01
                                    1- 1126     	BANKSEL	_R_AIN4_DATA
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 04rr                      1- 1127     	SUBAR	(_R_AIN4_DATA + 1),W
     0091 0903                      1- 1128     	BTRSS	STATUS,2
                                    1- 1129     	MGOTO	_00569_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
     0093 215F                      1- 1130     	MOVIA	0x5f
     0094 04rr                      1- 1131     	SUBAR	_R_AIN4_DATA,W
     0095                           1- 1132     _00569_DS_:
     0095 0803                      1- 1133     	BTRSS	STATUS,0
                                    1- 1134     	MGOTO	_00434_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1135     	.line	601, "main.c"; 	pwStep = 4;
     0097 2104                      1- 1136     	MOVIA	0x04
                                    1- 1137     	BANKSEL	_pwStep
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 00rr                      1- 1138     	MOVAR	_pwStep
                                    1- 1139     	MGOTO	_00434_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
     009B                           1- 1140     _00433_DS_:
                                    1- 1141     	.line	603, "main.c"; 	else if(chrgTime == 0 && R_AIN4_DATA < 400)
                                    1- 1142     	BANKSEL	_chrgTime
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 01rr                      1- 1143     	MOVR	_chrgTime,W
     009D 11rr                      1- 1144     	IORAR	(_chrgTime + 1),W
     009E 0903                      1- 1145     	BTRSS	STATUS,2
                                    1- 1146     	MGOTO	_00434_DS_
     009F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1147     ;;unsigned compare: left < lit (0x190=400), size=2
     00A0 2101                      1- 1148     	MOVIA	0x01
                                    1- 1149     	BANKSEL	_R_AIN4_DATA
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 04rr                      1- 1150     	SUBAR	(_R_AIN4_DATA + 1),W
     00A3 0903                      1- 1151     	BTRSS	STATUS,2
                                    1- 1152     	MGOTO	_00570_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
     00A5 2190                      1- 1153     	MOVIA	0x90
     00A6 04rr                      1- 1154     	SUBAR	_R_AIN4_DATA,W
     00A7                           1- 1155     _00570_DS_:
     00A7 0C03                      1- 1156     	BTRSC	STATUS,0
                                    1- 1157     	MGOTO	_00434_DS_
     00A8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1158     	.line	605, "main.c"; 	pwStep = 4;
     00A9 2104                      1- 1159     	MOVIA	0x04
                                    1- 1160     	BANKSEL	_pwStep
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 00rr                      1- 1161     	MOVAR	_pwStep
     00AC                           1- 1162     _00434_DS_:
                                    1- 1163     	.line	609, "main.c"; 	if(chrgTime > 0 && R_AIN4_DATA > 430 && chrgTime > 600)
                                    1- 1164     	BANKSEL	_chrgTime
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 01rr                      1- 1165     	MOVR	_chrgTime,W
     00AE 11rr                      1- 1166     	IORAR	(_chrgTime + 1),W
     00AF 0D03                      1- 1167     	BTRSC	STATUS,2
                                    1- 1168     	MGOTO	_00476_DS_
     00B0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1169     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1170     ;;unsigned compare: left >= lit (0x1AF=431), size=2
     00B1 2101                      1- 1171     	MOVIA	0x01
                                    1- 1172     	BANKSEL	_R_AIN4_DATA
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 04rr                      1- 1173     	SUBAR	(_R_AIN4_DATA + 1),W
     00B4 0903                      1- 1174     	BTRSS	STATUS,2
                                    1- 1175     	MGOTO	_00571_DS_
     00B5 3rrr                      3-   63 m1      LGOTO rom_address
     00B6 21AF                      1- 1176     	MOVIA	0xaf
     00B7 04rr                      1- 1177     	SUBAR	_R_AIN4_DATA,W
     00B8                           1- 1178     _00571_DS_:
     00B8 0803                      1- 1179     	BTRSS	STATUS,0
                                    1- 1180     	MGOTO	_00476_DS_
     00B9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1181     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1182     ;;unsigned compare: left >= lit (0x259=601), size=2
     00BA 2102                      1- 1183     	MOVIA	0x02
                                    1- 1184     	BANKSEL	_chrgTime
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 04rr                      1- 1185     	SUBAR	(_chrgTime + 1),W
     00BD 0903                      1- 1186     	BTRSS	STATUS,2
                                    1- 1187     	MGOTO	_00572_DS_
     00BE 3rrr                      3-   63 m1      LGOTO rom_address
     00BF 2159                      1- 1188     	MOVIA	0x59
     00C0 04rr                      1- 1189     	SUBAR	_chrgTime,W
     00C1                           1- 1190     _00572_DS_:
     00C1 0803                      1- 1191     	BTRSS	STATUS,0
                                    1- 1192     	MGOTO	_00476_DS_
     00C2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1193     	.line	611, "main.c"; 	chrgTime = 600;
     00C3 2158                      1- 1194     	MOVIA	0x58
                                    1- 1195     	BANKSEL	_chrgTime
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 00rr                      1- 1196     	MOVAR	_chrgTime
     00C6 2102                      1- 1197     	MOVIA	0x02
     00C7 00rr                      1- 1198     	MOVAR	(_chrgTime + 1)
                                    1- 1199     	.line	612, "main.c"; 	pwStep = 5;
     00C8 2105                      1- 1200     	MOVIA	0x05
                                    1- 1201     	BANKSEL	_pwStep
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 00rr                      1- 1202     	MOVAR	_pwStep
                                    1- 1203     	MGOTO	_00476_DS_
     00CB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1204     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1205     ;;unsigned compare: left >= lit (0xC9=201), size=2
     00CC                           1- 1206     _00471_DS_:
                                    1- 1207     	.line	615, "main.c"; 	else if(R_AIN4_DATA > 200)
     00CC 2100                      1- 1208     	MOVIA	0x00
                                    1- 1209     	BANKSEL	_R_AIN4_DATA
     00CD rrrr                      3-  110 m1      .banksel ram_address
     00CE 04rr                      1- 1210     	SUBAR	(_R_AIN4_DATA + 1),W
     00CF 0903                      1- 1211     	BTRSS	STATUS,2
                                    1- 1212     	MGOTO	_00573_DS_
     00D0 3rrr                      3-   63 m1      LGOTO rom_address
     00D1 21C9                      1- 1213     	MOVIA	0xc9
     00D2 04rr                      1- 1214     	SUBAR	_R_AIN4_DATA,W
     00D3                           1- 1215     _00573_DS_:
     00D3 0803                      1- 1216     	BTRSS	STATUS,0
                                    1- 1217     	MGOTO	_00468_DS_
     00D4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1218     	.line	617, "main.c"; 	if(pwStep == 2)
                                    1- 1219     	BANKSEL	_pwStep
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 01rr                      1- 1220     	MOVR	_pwStep,W
     00D7 2402                      1- 1221     	XORIA	0x02
     00D8 0903                      1- 1222     	BTRSS	STATUS,2
                                    1- 1223     	MGOTO	_00442_DS_
     00D9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1224     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1225     ;;unsigned compare: left >= lit (0xD3=211), size=2
                                    1- 1226     	.line	619, "main.c"; 	if(R_AIN4_DATA > 210)
     00DA 2100                      1- 1227     	MOVIA	0x00
                                    1- 1228     	BANKSEL	_R_AIN4_DATA
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 04rr                      1- 1229     	SUBAR	(_R_AIN4_DATA + 1),W
     00DD 0903                      1- 1230     	BTRSS	STATUS,2
                                    1- 1231     	MGOTO	_00574_DS_
     00DE 3rrr                      3-   63 m1      LGOTO rom_address
     00DF 21D3                      1- 1232     	MOVIA	0xd3
     00E0 04rr                      1- 1233     	SUBAR	_R_AIN4_DATA,W
     00E1                           1- 1234     _00574_DS_:
     00E1 0803                      1- 1235     	BTRSS	STATUS,0
                                    1- 1236     	MGOTO	_00442_DS_
     00E2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1237     	.line	620, "main.c"; 	pwStep = 3;
     00E3 2103                      1- 1238     	MOVIA	0x03
                                    1- 1239     	BANKSEL	_pwStep
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 00rr                      1- 1240     	MOVAR	_pwStep
                                    1- 1241     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1242     ;;unsigned compare: left >= lit (0x4=4), size=1
     00E6                           1- 1243     _00442_DS_:
                                    1- 1244     	.line	622, "main.c"; 	if(pwStep > 3)
     00E6 2104                      1- 1245     	MOVIA	0x04
                                    1- 1246     	BANKSEL	_pwStep
     00E7 rrrr                      3-  110 m1      .banksel ram_address
     00E8 04rr                      1- 1247     	SUBAR	_pwStep,W
     00E9 0803                      1- 1248     	BTRSS	STATUS,0
                                    1- 1249     	MGOTO	_00446_DS_
     00EA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1250     ;;unsigned compare: left < lit (0x104=260), size=2
                                    1- 1251     	.line	624, "main.c"; 	if(R_AIN4_DATA < 260)
     00EB 2101                      1- 1252     	MOVIA	0x01
                                    1- 1253     	BANKSEL	_R_AIN4_DATA
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 04rr                      1- 1254     	SUBAR	(_R_AIN4_DATA + 1),W
     00EE 0903                      1- 1255     	BTRSS	STATUS,2
                                    1- 1256     	MGOTO	_00576_DS_
     00EF 3rrr                      3-   63 m1      LGOTO rom_address
     00F0 2104                      1- 1257     	MOVIA	0x04
     00F1 04rr                      1- 1258     	SUBAR	_R_AIN4_DATA,W
     00F2                           1- 1259     _00576_DS_:
     00F2 0C03                      1- 1260     	BTRSC	STATUS,0
                                    1- 1261     	MGOTO	_00447_DS_
     00F3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1262     	.line	625, "main.c"; 	pwStep = 3;
     00F4 2103                      1- 1263     	MOVIA	0x03
                                    1- 1264     	BANKSEL	_pwStep
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 00rr                      1- 1265     	MOVAR	_pwStep
                                    1- 1266     	MGOTO	_00447_DS_
     00F7 3rrr                      3-   63 m1      LGOTO rom_address
     00F8                           1- 1267     _00446_DS_:
                                    1- 1268     	.line	628, "main.c"; 	pwStep = 3;
     00F8 2103                      1- 1269     	MOVIA	0x03
                                    1- 1270     	BANKSEL	_pwStep
     00F9 rrrr                      3-  110 m1      .banksel ram_address
     00FA 00rr                      1- 1271     	MOVAR	_pwStep
     00FB                           1- 1272     _00447_DS_:
                                    1- 1273     	.line	629, "main.c"; 	chrgTime = 0;
                                    1- 1274     	BANKSEL	_chrgTime
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 02rr                      1- 1275     	CLRR	_chrgTime
     00FD 02rr                      1- 1276     	CLRR	(_chrgTime + 1)
                                    1- 1277     	MGOTO	_00476_DS_
     00FE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1278     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1279     ;;unsigned compare: left >= lit (0x65=101), size=2
     00FF                           1- 1280     _00468_DS_:
                                    1- 1281     	.line	631, "main.c"; 	else if(R_AIN4_DATA > 100)
     00FF 2100                      1- 1282     	MOVIA	0x00
                                    1- 1283     	BANKSEL	_R_AIN4_DATA
     0100 rrrr                      3-  110 m1      .banksel ram_address
     0101 04rr                      1- 1284     	SUBAR	(_R_AIN4_DATA + 1),W
     0102 0903                      1- 1285     	BTRSS	STATUS,2
                                    1- 1286     	MGOTO	_00577_DS_
     0103 3rrr                      3-   63 m1      LGOTO rom_address
     0104 2165                      1- 1287     	MOVIA	0x65
     0105 04rr                      1- 1288     	SUBAR	_R_AIN4_DATA,W
     0106                           1- 1289     _00577_DS_:
     0106 0803                      1- 1290     	BTRSS	STATUS,0
                                    1- 1291     	MGOTO	_00465_DS_
     0107 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1292     	.line	634, "main.c"; 	if(pwStep == 1)
                                    1- 1293     	BANKSEL	_pwStep
     0108 rrrr                      3-  110 m1      .banksel ram_address
     0109 01rr                      1- 1294     	MOVR	_pwStep,W
     010A 2401                      1- 1295     	XORIA	0x01
     010B 0903                      1- 1296     	BTRSS	STATUS,2
                                    1- 1297     	MGOTO	_00451_DS_
     010C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1298     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1299     ;;unsigned compare: left >= lit (0x6F=111), size=2
                                    1- 1300     	.line	636, "main.c"; 	if(R_AIN4_DATA > 110)
     010D 2100                      1- 1301     	MOVIA	0x00
                                    1- 1302     	BANKSEL	_R_AIN4_DATA
     010E rrrr                      3-  110 m1      .banksel ram_address
     010F 04rr                      1- 1303     	SUBAR	(_R_AIN4_DATA + 1),W
     0110 0903                      1- 1304     	BTRSS	STATUS,2
                                    1- 1305     	MGOTO	_00578_DS_
     0111 3rrr                      3-   63 m1      LGOTO rom_address
     0112 216F                      1- 1306     	MOVIA	0x6f
     0113 04rr                      1- 1307     	SUBAR	_R_AIN4_DATA,W
     0114                           1- 1308     _00578_DS_:
     0114 0803                      1- 1309     	BTRSS	STATUS,0
                                    1- 1310     	MGOTO	_00451_DS_
     0115 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1311     	.line	637, "main.c"; 	pwStep = 2;
     0116 2102                      1- 1312     	MOVIA	0x02
                                    1- 1313     	BANKSEL	_pwStep
     0117 rrrr                      3-  110 m1      .banksel ram_address
     0118 00rr                      1- 1314     	MOVAR	_pwStep
                                    1- 1315     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1316     ;;unsigned compare: left >= lit (0x3=3), size=1
     0119                           1- 1317     _00451_DS_:
                                    1- 1318     	.line	639, "main.c"; 	if(pwStep > 2)
     0119 2103                      1- 1319     	MOVIA	0x03
                                    1- 1320     	BANKSEL	_pwStep
     011A rrrr                      3-  110 m1      .banksel ram_address
     011B 04rr                      1- 1321     	SUBAR	_pwStep,W
     011C 0803                      1- 1322     	BTRSS	STATUS,0
                                    1- 1323     	MGOTO	_00455_DS_
     011D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1324     ;;unsigned compare: left < lit (0xBE=190), size=2
                                    1- 1325     	.line	641, "main.c"; 	if(R_AIN4_DATA < 190)
     011E 2100                      1- 1326     	MOVIA	0x00
                                    1- 1327     	BANKSEL	_R_AIN4_DATA
     011F rrrr                      3-  110 m1      .banksel ram_address
     0120 04rr                      1- 1328     	SUBAR	(_R_AIN4_DATA + 1),W
     0121 0903                      1- 1329     	BTRSS	STATUS,2
                                    1- 1330     	MGOTO	_00580_DS_
     0122 3rrr                      3-   63 m1      LGOTO rom_address
     0123 21BE                      1- 1331     	MOVIA	0xbe
     0124 04rr                      1- 1332     	SUBAR	_R_AIN4_DATA,W
     0125                           1- 1333     _00580_DS_:
     0125 0C03                      1- 1334     	BTRSC	STATUS,0
                                    1- 1335     	MGOTO	_00456_DS_
     0126 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1336     	.line	642, "main.c"; 	pwStep = 2;
     0127 2102                      1- 1337     	MOVIA	0x02
                                    1- 1338     	BANKSEL	_pwStep
     0128 rrrr                      3-  110 m1      .banksel ram_address
     0129 00rr                      1- 1339     	MOVAR	_pwStep
                                    1- 1340     	MGOTO	_00456_DS_
     012A 3rrr                      3-   63 m1      LGOTO rom_address
     012B                           1- 1341     _00455_DS_:
                                    1- 1342     	.line	645, "main.c"; 	pwStep = 2;
     012B 2102                      1- 1343     	MOVIA	0x02
                                    1- 1344     	BANKSEL	_pwStep
     012C rrrr                      3-  110 m1      .banksel ram_address
     012D 00rr                      1- 1345     	MOVAR	_pwStep
     012E                           1- 1346     _00456_DS_:
                                    1- 1347     	.line	646, "main.c"; 	chrgTime = 0;
                                    1- 1348     	BANKSEL	_chrgTime
     012E rrrr                      3-  110 m1      .banksel ram_address
     012F 02rr                      1- 1349     	CLRR	_chrgTime
     0130 02rr                      1- 1350     	CLRR	(_chrgTime + 1)
                                    1- 1351     	MGOTO	_00476_DS_
     0131 3rrr                      3-   63 m1      LGOTO rom_address
     0132                           1- 1352     _00465_DS_:
                                    1- 1353     	.line	648, "main.c"; 	else  if(R_AIN4_DATA > 0)
                                    1- 1354     	BANKSEL	_R_AIN4_DATA
     0132 rrrr                      3-  110 m1      .banksel ram_address
     0133 01rr                      1- 1355     	MOVR	_R_AIN4_DATA,W
     0134 11rr                      1- 1356     	IORAR	(_R_AIN4_DATA + 1),W
     0135 0D03                      1- 1357     	BTRSC	STATUS,2
                                    1- 1358     	MGOTO	_00476_DS_
     0136 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1359     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1360     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 1361     	.line	651, "main.c"; 	if(pwStep > 1)
     0137 2102                      1- 1362     	MOVIA	0x02
                                    1- 1363     	BANKSEL	_pwStep
     0138 rrrr                      3-  110 m1      .banksel ram_address
     0139 04rr                      1- 1364     	SUBAR	_pwStep,W
     013A 0803                      1- 1365     	BTRSS	STATUS,0
                                    1- 1366     	MGOTO	_00460_DS_
     013B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1367     ;;unsigned compare: left < lit (0x5A=90), size=2
                                    1- 1368     	.line	653, "main.c"; 	if(R_AIN4_DATA < 90)
     013C 2100                      1- 1369     	MOVIA	0x00
                                    1- 1370     	BANKSEL	_R_AIN4_DATA
     013D rrrr                      3-  110 m1      .banksel ram_address
     013E 04rr                      1- 1371     	SUBAR	(_R_AIN4_DATA + 1),W
     013F 0903                      1- 1372     	BTRSS	STATUS,2
                                    1- 1373     	MGOTO	_00582_DS_
     0140 3rrr                      3-   63 m1      LGOTO rom_address
     0141 215A                      1- 1374     	MOVIA	0x5a
     0142 04rr                      1- 1375     	SUBAR	_R_AIN4_DATA,W
     0143                           1- 1376     _00582_DS_:
     0143 0C03                      1- 1377     	BTRSC	STATUS,0
                                    1- 1378     	MGOTO	_00461_DS_
     0144 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1379     	.line	654, "main.c"; 	pwStep = 1;
     0145 2101                      1- 1380     	MOVIA	0x01
                                    1- 1381     	BANKSEL	_pwStep
     0146 rrrr                      3-  110 m1      .banksel ram_address
     0147 00rr                      1- 1382     	MOVAR	_pwStep
                                    1- 1383     	MGOTO	_00461_DS_
     0148 3rrr                      3-   63 m1      LGOTO rom_address
     0149                           1- 1384     _00460_DS_:
                                    1- 1385     	.line	657, "main.c"; 	pwStep = 1;
     0149 2101                      1- 1386     	MOVIA	0x01
                                    1- 1387     	BANKSEL	_pwStep
     014A rrrr                      3-  110 m1      .banksel ram_address
     014B 00rr                      1- 1388     	MOVAR	_pwStep
     014C                           1- 1389     _00461_DS_:
                                    1- 1390     	.line	658, "main.c"; 	chrgTime = 0;
                                    1- 1391     	BANKSEL	_chrgTime
     014C rrrr                      3-  110 m1      .banksel ram_address
     014D 02rr                      1- 1392     	CLRR	_chrgTime
     014E 02rr                      1- 1393     	CLRR	(_chrgTime + 1)
     014F                           1- 1394     _00476_DS_:
                                    1- 1395     	.line	662, "main.c"; 	}
                                    1- 1396     	RETURN	
     014F 0010                      3-   40 m1      ret
                                    1- 1397     ; exit point of _checkBatAD
                                    1- 1399     ;***
                                    1- 1400     ;  pBlock Stats: dbName = C
                                    1- 1401     ;***
                                    1- 1402     ;has an exit
                                    1- 1403     ;functions called:
                                    1- 1404     ;   _delay
                                    1- 1405     ;   _delay
                                    1- 1406     ;; Starting pCode block
                                    1- 1407     .segment "code"; module=main, function=_initAD
     0000                           1- 1409     _initAD:
                                    1- 1410     ; 2 exit points
                                    1- 1411     	.line	533, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1412     	MOVIA	0x84
     0001 00rr                      1- 1413     	MOVAR	_ADMD
                                    1- 1414     	.line	538, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1415     	CLRR	_ADVREFH
                                    1- 1416     	.line	543, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1417     	MOVIA	0x10
     0004 00rr                      1- 1418     	MOVAR	_ADR
                                    1- 1419     	.line	545, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1420     	MOVIA	0x03
     0006 00rr                      1- 1421     	MOVAR	_ADCR
                                    1- 1422     	.line	548, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1423     	BSR	_ADMDbits,4
                                    1- 1424     	.line	549, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1425     	MOVIA	0x64
                                    1- 1426     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1427     	.line	552, "main.c"; 	}
                                    1- 1428     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1429     ; exit point of _initAD
                                    1- 1431     ;***
                                    1- 1432     ;  pBlock Stats: dbName = C
                                    1- 1433     ;***
                                    1- 1434     ;has an exit
                                    1- 1435     ;2 compiler assigned registers:
                                    1- 1436     ;   r0x1023
                                    1- 1437     ;   r0x1024
                                    1- 1438     ;; Starting pCode block
                                    1- 1439     .segment "code"; module=main, function=_delay
                                    1- 1441     ;local variable name mapping:
     0000                           1- 1444     _delay:
                                    1- 1445     ; 2 exit points
                                    1- 1446     	.line	523, "main.c"; 	void delay(u8t time)
                                    1- 1447     	BANKSEL	r0x1023
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1448     	MOVAR	r0x1023
                                    1- 1449     	.line	525, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1450     	BANKSEL	r0x1024
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1451     	CLRR	r0x1024
     0004                           1- 1452     _00403_DS_:
                                    1- 1453     	BANKSEL	r0x1023
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 1454     	MOVR	r0x1023,W
                                    1- 1455     	BANKSEL	r0x1024
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1- 1456     	SUBAR	r0x1024,W
     0008 0C03                      1- 1457     	BTRSC	STATUS,0
                                    1- 1458     	MGOTO	_00405_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1459     	.line	526, "main.c"; 	NOP();
     000A 0000                      1- 1460     	nop
                                    1- 1461     	.line	525, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1462     	BANKSEL	r0x1024
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 1463     	INCR	r0x1024,F
                                    1- 1464     	MGOTO	_00403_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 1465     _00405_DS_:
                                    1- 1466     	.line	527, "main.c"; 	}
                                    1- 1467     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 1468     ; exit point of _delay
                                    1- 1470     ;***
                                    1- 1471     ;  pBlock Stats: dbName = C
                                    1- 1472     ;***
                                    1- 1473     ;has an exit
                                    1- 1474     ;functions called:
                                    1- 1475     ;   _pwmStop
                                    1- 1476     ;   _pwmStop
                                    1- 1477     ;; Starting pCode block
                                    1- 1478     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1480     _chrgCtr:
                                    1- 1481     ; 2 exit points
                                    1- 1482     	.line	489, "main.c"; 	if(PORTA & 0x20)
                                    1- 1483     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Arr                      1- 1484     	BTRSS	_PORTA,5
                                    1- 1485     	MGOTO	_00394_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1486     	.line	492, "main.c"; 	chrgFlag = 1;
                                    1- 1487     	BANKSEL	_Status
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 19rr                      1- 1488     	BSR	_Status,3
                                    1- 1489     	.line	493, "main.c"; 	workStep = 0;
                                    1- 1490     	BANKSEL	_workStep
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1- 1491     	CLRR	_workStep
                                    1- 1492     	.line	494, "main.c"; 	pwmStop();
                                    1- 1493     	MCALL	_pwmStop
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1494     	.line	495, "main.c"; 	if(pwStep == 5)
                                    1- 1495     	BANKSEL	_pwStep
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 01rr                      1- 1496     	MOVR	_pwStep,W
     000A 2405                      1- 1497     	XORIA	0x05
     000B 0903                      1- 1498     	BTRSS	STATUS,2
                                    1- 1499     	MGOTO	_00389_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1500     	.line	498, "main.c"; 	ledStep = 4;
     000D 2104                      1- 1501     	MOVIA	0x04
                                    1- 1502     	BANKSEL	_ledStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1- 1503     	MOVAR	_ledStep
                                    1- 1504     	MGOTO	_00396_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
     0011                           1- 1505     _00389_DS_:
                                    1- 1506     	.line	502, "main.c"; 	if(count500ms == 0)
                                    1- 1507     	BANKSEL	_count500ms
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 1508     	MOVR	_count500ms,W
     0013 0903                      1- 1509     	BTRSS	STATUS,2
                                    1- 1510     	MGOTO	_00396_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1511     	.line	504, "main.c"; 	if(++ledStep > 4)
                                    1- 1512     	BANKSEL	_ledStep
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 05rr                      1- 1513     	INCR	_ledStep,F
                                    1- 1514     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1515     ;;unsigned compare: left >= lit (0x5=5), size=1
     0017 2105                      1- 1516     	MOVIA	0x05
     0018 04rr                      1- 1517     	SUBAR	_ledStep,W
     0019 0803                      1- 1518     	BTRSS	STATUS,0
                                    1- 1519     	MGOTO	_00396_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1520     	.line	505, "main.c"; 	ledStep = pwStep - 1;
                                    1- 1521     	BANKSEL	_pwStep
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 06rr                      1- 1522     	DECR	_pwStep,W
                                    1- 1523     	BANKSEL	_ledStep
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 00rr                      1- 1524     	MOVAR	_ledStep
                                    1- 1525     	MGOTO	_00396_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1- 1526     _00394_DS_:
                                    1- 1527     	.line	514, "main.c"; 	if(workStep == 0)
                                    1- 1528     	BANKSEL	_workStep
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1529     	MOVR	_workStep,W
     0022 0903                      1- 1530     	BTRSS	STATUS,2
                                    1- 1531     	MGOTO	_00003_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1532     	.line	515, "main.c"; 	ledStep = 0;
                                    1- 1533     	BANKSEL	_ledStep
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 02rr                      1- 1534     	CLRR	_ledStep
     0026                           1- 1535     _00003_DS_:
                                    1- 1536     	.line	516, "main.c"; 	chrgFlag = 0;
                                    1- 1537     	BANKSEL	_Status
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 1Drr                      1- 1538     	BCR	_Status,3
                                    1- 1539     	.line	517, "main.c"; 	chrgTime = 0;	//���ó�����
                                    1- 1540     	BANKSEL	_chrgTime
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 02rr                      1- 1541     	CLRR	_chrgTime
     002A 02rr                      1- 1542     	CLRR	(_chrgTime + 1)
     002B                           1- 1543     _00396_DS_:
                                    1- 1544     	.line	520, "main.c"; 	}
                                    1- 1545     	RETURN	
     002B 0010                      3-   40 m1      ret
                                    1- 1546     ; exit point of _chrgCtr
                                    1- 1548     ;***
                                    1- 1549     ;  pBlock Stats: dbName = C
                                    1- 1550     ;***
                                    1- 1551     ;has an exit
                                    1- 1552     ;1 compiler assigned register :
                                    1- 1553     ;   r0x102F
                                    1- 1554     ;; Starting pCode block
                                    1- 1555     .segment "code"; module=main, function=_keyRead
                                    1- 1557     ;local variable name mapping:
     0000                           1- 1559     _keyRead:
                                    1- 1560     ; 2 exit points
                                    1- 1561     	.line	452, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1562     	BANKSEL	r0x102F
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1563     	MOVAR	r0x102F
                                    1- 1564     	.line	454, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 1565     	MOVR	r0x102F,W
     0003 0D03                      1- 1566     	BTRSC	STATUS,2
                                    1- 1567     	MGOTO	_00377_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1568     	.line	456, "main.c"; 	keyCount++;
                                    1- 1569     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 1570     	INCR	_keyCount,F
                                    1- 1571     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 1572     	.line	457, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 1573     	MOVIA	0x64
     0008 04rr                      1- 1574     	SUBAR	_keyCount,W
     0009 0803                      1- 1575     	BTRSS	STATUS,0
                                    1- 1576     	MGOTO	_00378_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1577     	.line	459, "main.c"; 	keyCount = 100;
     000B 2164                      1- 1578     	MOVIA	0x64
     000C 00rr                      1- 1579     	MOVAR	_keyCount
                                    1- 1580     	.line	460, "main.c"; 	if(!longPressFlag)
                                    1- 1581     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Crr                      1- 1582     	BTRSC	_Status,1
                                    1- 1583     	MGOTO	_00378_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1584     	.line	462, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 1585     	BSR	_Status,1
                                    1- 1586     	.line	463, "main.c"; 	return 2;
     0011 2102                      1- 1587     	MOVIA	0x02
                                    1- 1588     	MGOTO	_00379_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1589     ;;unsigned compare: left < lit (0x64=100), size=1
     0013                           1- 1590     _00377_DS_:
                                    1- 1591     	.line	469, "main.c"; 	if(keyCount >= 100)
     0013 2164                      1- 1592     	MOVIA	0x64
                                    1- 1593     	BANKSEL	_keyCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 1594     	SUBAR	_keyCount,W
     0016 0803                      1- 1595     	BTRSS	STATUS,0
                                    1- 1596     	MGOTO	_00374_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1597     	.line	471, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 1598     	CLRR	_keyCount
                                    1- 1599     	.line	472, "main.c"; 	longPressFlag = 0;
                                    1- 1600     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Crr                      1- 1601     	BCR	_Status,1
                                    1- 1602     	.line	473, "main.c"; 	return	0;
     001B 2100                      1- 1603     	MOVIA	0x00
                                    1- 1604     	MGOTO	_00379_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1605     ;;unsigned compare: left < lit (0x4=4), size=1
     001D                           1- 1606     _00374_DS_:
                                    1- 1607     	.line	475, "main.c"; 	else if(keyCount >= 4)
     001D 2104                      1- 1608     	MOVIA	0x04
                                    1- 1609     	BANKSEL	_keyCount
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 1610     	SUBAR	_keyCount,W
     0020 0803                      1- 1611     	BTRSS	STATUS,0
                                    1- 1612     	MGOTO	_00375_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1613     	.line	477, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 1614     	CLRR	_keyCount
                                    1- 1615     	.line	478, "main.c"; 	return	1;
     0023 2101                      1- 1616     	MOVIA	0x01
                                    1- 1617     	MGOTO	_00379_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 1618     _00375_DS_:
                                    1- 1619     	.line	480, "main.c"; 	keyCount = 0;
                                    1- 1620     	BANKSEL	_keyCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 1621     	CLRR	_keyCount
     0027                           1- 1622     _00378_DS_:
                                    1- 1623     	.line	482, "main.c"; 	return 0;
     0027 2100                      1- 1624     	MOVIA	0x00
     0028                           1- 1625     _00379_DS_:
                                    1- 1626     	.line	483, "main.c"; 	}
                                    1- 1627     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 1628     ; exit point of _keyRead
                                    1- 1630     ;***
                                    1- 1631     ;  pBlock Stats: dbName = C
                                    1- 1632     ;***
                                    1- 1633     ;has an exit
                                    1- 1634     ;functions called:
                                    1- 1635     ;   _LedInput
                                    1- 1636     ;   _pwmStop
                                    1- 1637     ;   _LedInput
                                    1- 1638     ;   _pwmStop
                                    1- 1639     ;; Starting pCode block
                                    1- 1640     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1642     _gotoSleep:
                                    1- 1643     ; 2 exit points
                                    1- 1644     	.line	421, "main.c"; 	count900s = 0;
                                    1- 1645     	BANKSEL	_count900s
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1646     	CLRR	_count900s
     0002 02rr                      1- 1647     	CLRR	(_count900s + 1)
                                    1- 1648     	.line	422, "main.c"; 	LedInput();
                                    1- 1649     	MCALL	_LedInput
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1650     	.line	423, "main.c"; 	sleepTime = 0;
                                    1- 1651     	BANKSEL	_sleepTime
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1652     	CLRR	_sleepTime
     0006 02rr                      1- 1653     	CLRR	(_sleepTime + 1)
                                    1- 1654     	.line	425, "main.c"; 	pwmStop();
                                    1- 1655     	MCALL	_pwmStop
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1656     	.line	426, "main.c"; 	workStep = 0;
                                    1- 1657     	BANKSEL	_workStep
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 1658     	CLRR	_workStep
                                    1- 1659     	.line	427, "main.c"; 	IOSTA = 0x70;
     000A 2170                      1- 1660     	MOVIA	0x70
     000B 000r                      1- 1661     	IOST	_IOSTA
                                    1- 1662     	.line	428, "main.c"; 	IOSTB = 0x00;
     000C 0200                      1- 1663     	CLRA	
     000D 000r                      1- 1664     	IOST	_IOSTB
                                    1- 1665     	.line	429, "main.c"; 	PORTA = 0x00;
                                    1- 1666     	BANKSEL	_PORTA
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1- 1667     	CLRR	_PORTA
                                    1- 1668     	.line	430, "main.c"; 	PORTB = 0x00;
     0010 02rr                      1- 1669     	CLRR	_PORTB
                                    1- 1670     	.line	432, "main.c"; 	AWUCON = 0x60;
     0011 2160                      1- 1671     	MOVIA	0x60
     0012 00rr                      1- 1672     	MOVAR	_AWUCON
                                    1- 1673     	.line	433, "main.c"; 	fgPRD = 0;
                                    1- 1674     	BANKSEL	_fgPRD
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 02rr                      1- 1675     	CLRR	_fgPRD
     0015 02rr                      1- 1676     	CLRR	(_fgPRD + 1)
                                    1- 1677     	.line	434, "main.c"; 	fgCount = 0;
                                    1- 1678     	BANKSEL	_fgCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 02rr                      1- 1679     	CLRR	_fgCount
     0018 02rr                      1- 1680     	CLRR	(_fgCount + 1)
                                    1- 1681     	.line	435, "main.c"; 	redLedFlag = 0;
                                    1- 1682     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Drr                      1- 1683     	BCR	_Status,2
                                    1- 1684     	.line	436, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     001B 210B                      1- 1685     	MOVIA	0x0b
     001C 00rr                      1- 1686     	MOVAR	_INTE
                                    1- 1687     	.line	437, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     001D 2118                      1- 1688     	MOVIA	0x18
     001E 00rr                      1- 1689     	MOVAR	_PCON
                                    1- 1690     	.line	438, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     001F 02rr                      1- 1691     	CLRR	_INTF
                                    1- 1692     	.line	439, "main.c"; 	CLRWDT();
     0020 0002                      1- 1693     	clrwdt
                                    1- 1694     	.line	440, "main.c"; 	ENI();
     0021 0004                      1- 1695     	ENI
                                    1- 1696     	.line	441, "main.c"; 	SLEEP();
     0022 0001                      1- 1697     	sleep
                                    1- 1698     	.line	442, "main.c"; 	AWUCON = 0x00;
     0023 02rr                      1- 1699     	CLRR	_AWUCON
                                    1- 1700     	.line	444, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0��Timer1��WDT overflow interrupt
     0024 2101                      1- 1701     	MOVIA	0x01
     0025 00rr                      1- 1702     	MOVAR	_INTE
                                    1- 1703     	.line	445, "main.c"; 	INTF = 0;
     0026 02rr                      1- 1704     	CLRR	_INTF
                                    1- 1705     	.line	447, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0027 21B8                      1- 1706     	MOVIA	0xb8
     0028 00rr                      1- 1707     	MOVAR	_PCON
                                    1- 1708     	.line	449, "main.c"; 	}
                                    1- 1709     	RETURN	
     0029 0010                      3-   40 m1      ret
                                    1- 1710     ; exit point of _gotoSleep
                                    1- 1712     ;***
                                    1- 1713     ;  pBlock Stats: dbName = C
                                    1- 1714     ;***
                                    1- 1715     ;has an exit
                                    1- 1716     ;; Starting pCode block
                                    1- 1717     .segment "code"; module=main, function=_pwmStop
     0000                           1- 1719     _pwmStop:
                                    1- 1720     ; 2 exit points
                                    1- 1721     	.line	415, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 1722     	CLRA	
     0001 00rr                      1- 1723     	SFUN	_T2CR1
                                    1- 1724     	.line	416, "main.c"; 	}
                                    1- 1725     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1726     ; exit point of _pwmStop
                                    1- 1728     ;***
                                    1- 1729     ;  pBlock Stats: dbName = C
                                    1- 1730     ;***
                                    1- 1731     ;has an exit
                                    1- 1732     ;1 compiler assigned register :
                                    1- 1733     ;   r0x1031
                                    1- 1734     ;; Starting pCode block
                                    1- 1735     .segment "code"; module=main, function=_pwmInit
     0000                           1- 1737     _pwmInit:
                                    1- 1738     ; 2 exit points
                                    1- 1739     	.line	403, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 1740     	SFUNR	_T2CR1
                                    1- 1741     	BANKSEL	r0x1031
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1742     	MOVAR	r0x1031
     0003 0Frr                      1- 1743     	BTRSC	r0x1031,7
                                    1- 1744     	.line	404, "main.c"; 	return;
                                    1- 1745     	MGOTO	_00354_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1746     	.line	405, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 1747     	CLRR	_TMRH
                                    1- 1748     	.line	406, "main.c"; 	TMR2 = 128;							//Ƶ��Ϊ110K
     0006 2180                      1- 1749     	MOVIA	0x80
     0007 00rr                      1- 1750     	SFUN	_TMR2
                                    1- 1751     	.line	409, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 1752     	CLRA	
     0009 00rr                      1- 1753     	SFUN	_T2CR2
                                    1- 1754     	.line	410, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 1755     	MOVIA	0x83
     000B 00rr                      1- 1756     	SFUN	_T2CR1
     000C                           1- 1757     _00354_DS_:
                                    1- 1758     	.line	411, "main.c"; 	}
                                    1- 1759     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 1760     ; exit point of _pwmInit
                                    1- 1762     ;***
                                    1- 1763     ;  pBlock Stats: dbName = C
                                    1- 1764     ;***
                                    1- 1765     ;has an exit
                                    1- 1766     ;functions called:
                                    1- 1767     ;   _delay
                                    1- 1768     ;   _LedInput
                                    1- 1769     ;   _delay
                                    1- 1770     ;   _LedInput
                                    1- 1771     ;1 compiler assigned register :
                                    1- 1772     ;   r0x1032
                                    1- 1773     ;; Starting pCode block
                                    1- 1774     .segment "code"; module=main, function=_LED4ON
     0000                           1- 1776     _LED4ON:
                                    1- 1777     ; 2 exit points
                                    1- 1778     	.line	394, "main.c"; 	IOSTB &= 0xF7;
     0000 001r                      1- 1779     	IOSTR	_IOSTB
                                    1- 1780     	BANKSEL	r0x1032
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1781     	MOVAR	r0x1032
     0003 1Drr                      1- 1782     	BCR	r0x1032,3
     0004 01rr                      1- 1783     	MOVR	r0x1032,W
     0005 000r                      1- 1784     	IOST	_IOSTB
                                    1- 1785     	.line	395, "main.c"; 	PORTB |= 0x08;
     0006 19rr                      1- 1786     	BSR	_PORTB,3
                                    1- 1787     	.line	396, "main.c"; 	delay(100);
     0007 2164                      1- 1788     	MOVIA	0x64
                                    1- 1789     	MCALL	_delay
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1790     	.line	397, "main.c"; 	LedInput();
                                    1- 1791     	MCALL	_LedInput
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1792     	.line	398, "main.c"; 	}
                                    1- 1793     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1794     ; exit point of _LED4ON
                                    1- 1796     ;***
                                    1- 1797     ;  pBlock Stats: dbName = C
                                    1- 1798     ;***
                                    1- 1799     ;has an exit
                                    1- 1800     ;functions called:
                                    1- 1801     ;   _delay
                                    1- 1802     ;   _LedInput
                                    1- 1803     ;   _delay
                                    1- 1804     ;   _LedInput
                                    1- 1805     ;1 compiler assigned register :
                                    1- 1806     ;   r0x1033
                                    1- 1807     ;; Starting pCode block
                                    1- 1808     .segment "code"; module=main, function=_LED3ON
     0000                           1- 1810     _LED3ON:
                                    1- 1811     ; 2 exit points
                                    1- 1812     	.line	384, "main.c"; 	IOSTA &= 0XFE;
     0000 001r                      1- 1813     	IOSTR	_IOSTA
                                    1- 1814     	BANKSEL	r0x1033
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1815     	MOVAR	r0x1033
     0003 1Crr                      1- 1816     	BCR	r0x1033,0
     0004 01rr                      1- 1817     	MOVR	r0x1033,W
     0005 000r                      1- 1818     	IOST	_IOSTA
                                    1- 1819     	.line	385, "main.c"; 	PORTA |= 0X01;
                                    1- 1820     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 18rr                      1- 1821     	BSR	_PORTA,0
                                    1- 1822     	.line	386, "main.c"; 	delay(100);
     0008 2164                      1- 1823     	MOVIA	0x64
                                    1- 1824     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1825     	.line	387, "main.c"; 	LedInput();
                                    1- 1826     	MCALL	_LedInput
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1827     	.line	388, "main.c"; 	}
                                    1- 1828     	RETURN	
     000B 0010                      3-   40 m1      ret
                                    1- 1829     ; exit point of _LED3ON
                                    1- 1831     ;***
                                    1- 1832     ;  pBlock Stats: dbName = C
                                    1- 1833     ;***
                                    1- 1834     ;has an exit
                                    1- 1835     ;functions called:
                                    1- 1836     ;   _delay
                                    1- 1837     ;   _LedInput
                                    1- 1838     ;   _delay
                                    1- 1839     ;   _LedInput
                                    1- 1840     ;1 compiler assigned register :
                                    1- 1841     ;   r0x1034
                                    1- 1842     ;; Starting pCode block
                                    1- 1843     .segment "code"; module=main, function=_LED2ON
     0000                           1- 1845     _LED2ON:
                                    1- 1846     ; 2 exit points
                                    1- 1847     	.line	375, "main.c"; 	IOSTA &= 0X7F;
     0000 001r                      1- 1848     	IOSTR	_IOSTA
                                    1- 1849     	BANKSEL	r0x1034
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1850     	MOVAR	r0x1034
     0003 1Frr                      1- 1851     	BCR	r0x1034,7
     0004 01rr                      1- 1852     	MOVR	r0x1034,W
     0005 000r                      1- 1853     	IOST	_IOSTA
                                    1- 1854     	.line	376, "main.c"; 	PORTA |= 0X80;
                                    1- 1855     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 1Brr                      1- 1856     	BSR	_PORTA,7
                                    1- 1857     	.line	377, "main.c"; 	delay(100);
     0008 2164                      1- 1858     	MOVIA	0x64
                                    1- 1859     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1860     	.line	378, "main.c"; 	LedInput();
                                    1- 1861     	MCALL	_LedInput
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1862     	.line	379, "main.c"; 	}
                                    1- 1863     	RETURN	
     000B 0010                      3-   40 m1      ret
                                    1- 1864     ; exit point of _LED2ON
                                    1- 1866     ;***
                                    1- 1867     ;  pBlock Stats: dbName = C
                                    1- 1868     ;***
                                    1- 1869     ;has an exit
                                    1- 1870     ;functions called:
                                    1- 1871     ;   _delay
                                    1- 1872     ;   _LedInput
                                    1- 1873     ;   _delay
                                    1- 1874     ;   _LedInput
                                    1- 1875     ;1 compiler assigned register :
                                    1- 1876     ;   r0x1035
                                    1- 1877     ;; Starting pCode block
                                    1- 1878     .segment "code"; module=main, function=_LED1ON
     0000                           1- 1880     _LED1ON:
                                    1- 1881     ; 2 exit points
                                    1- 1882     	.line	366, "main.c"; 	IOSTA &= 0XFD;
     0000 001r                      1- 1883     	IOSTR	_IOSTA
                                    1- 1884     	BANKSEL	r0x1035
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1885     	MOVAR	r0x1035
     0003 1Crr                      1- 1886     	BCR	r0x1035,1
     0004 01rr                      1- 1887     	MOVR	r0x1035,W
     0005 000r                      1- 1888     	IOST	_IOSTA
                                    1- 1889     	.line	367, "main.c"; 	PORTA |= 0X02;
                                    1- 1890     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 18rr                      1- 1891     	BSR	_PORTA,1
                                    1- 1892     	.line	368, "main.c"; 	delay(100);
     0008 2164                      1- 1893     	MOVIA	0x64
                                    1- 1894     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1895     	.line	369, "main.c"; 	LedInput();
                                    1- 1896     	MCALL	_LedInput
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1897     	.line	370, "main.c"; 	}
                                    1- 1898     	RETURN	
     000B 0010                      3-   40 m1      ret
                                    1- 1899     ; exit point of _LED1ON
                                    1- 1901     ;***
                                    1- 1902     ;  pBlock Stats: dbName = C
                                    1- 1903     ;***
                                    1- 1904     ;has an exit
                                    1- 1905     ;1 compiler assigned register :
                                    1- 1906     ;   r0x1030
                                    1- 1907     ;; Starting pCode block
                                    1- 1908     .segment "code"; module=main, function=_LedInput
     0000                           1- 1910     _LedInput:
                                    1- 1911     ; 2 exit points
                                    1- 1912     	.line	358, "main.c"; 	IOSTA |= 0x83;
     0000 001r                      1- 1913     	IOSTR	_IOSTA
                                    1- 1914     	BANKSEL	r0x1030
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1915     	MOVAR	r0x1030
     0003 2183                      1- 1916     	MOVIA	0x83
     0004 11rr                      1- 1917     	IORAR	r0x1030,F
     0005 01rr                      1- 1918     	MOVR	r0x1030,W
     0006 000r                      1- 1919     	IOST	_IOSTA
                                    1- 1920     	.line	359, "main.c"; 	IOSTB |= 0x08;
     0007 001r                      1- 1921     	IOSTR	_IOSTB
     0008 00rr                      1- 1922     	MOVAR	r0x1030
     0009 19rr                      1- 1923     	BSR	r0x1030,3
     000A 01rr                      1- 1924     	MOVR	r0x1030,W
     000B 000r                      1- 1925     	IOST	_IOSTB
                                    1- 1926     	.line	360, "main.c"; 	PORTA &= 0x7C;
     000C 217C                      1- 1927     	MOVIA	0x7c
                                    1- 1928     	BANKSEL	_PORTA
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 10rr                      1- 1929     	ANDAR	_PORTA,F
                                    1- 1930     	.line	361, "main.c"; 	PORTB &= 0xF7;
     000F 1Drr                      1- 1931     	BCR	_PORTB,3
                                    1- 1932     	.line	362, "main.c"; 	}
                                    1- 1933     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 1934     ; exit point of _LedInput
                                    1- 1936     ;***
                                    1- 1937     ;  pBlock Stats: dbName = C
                                    1- 1938     ;***
                                    1- 1939     ;has an exit
                                    1- 1940     ;functions called:
                                    1- 1941     ;   _LedInput
                                    1- 1942     ;   _LedInput
                                    1- 1943     ;   _LED4ON
                                    1- 1944     ;   _LED3ON
                                    1- 1945     ;   _LED2ON
                                    1- 1946     ;   _LED1ON
                                    1- 1947     ;   _LedInput
                                    1- 1948     ;   _LedInput
                                    1- 1949     ;   _LED4ON
                                    1- 1950     ;   _LED3ON
                                    1- 1951     ;   _LED2ON
                                    1- 1952     ;   _LED1ON
                                    1- 1953     ;; Starting pCode block
                                    1- 1954     .segment "code"; module=main, function=_ledShow
     0000                           1- 1956     _ledShow:
                                    1- 1957     ; 2 exit points
                                    1- 1958     	.line	325, "main.c"; 	if(shandengTime > 0)
                                    1- 1959     	BANKSEL	_shandengTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 1960     	MOVR	_shandengTime,W
     0002 0D03                      1- 1961     	BTRSC	STATUS,2
                                    1- 1962     	MGOTO	_00308_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1963     	.line	327, "main.c"; 	if(shandengTime % 2)
     0004 08rr                      1- 1964     	BTRSS	_shandengTime,0
                                    1- 1965     	MGOTO	_00305_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1966     	.line	329, "main.c"; 	ledStep = 4;
     0006 2104                      1- 1967     	MOVIA	0x04
                                    1- 1968     	BANKSEL	_ledStep
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 00rr                      1- 1969     	MOVAR	_ledStep
                                    1- 1970     	MGOTO	_00308_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
     000A                           1- 1971     _00305_DS_:
                                    1- 1972     	.line	333, "main.c"; 	ledStep = 0;
                                    1- 1973     	BANKSEL	_ledStep
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 02rr                      1- 1974     	CLRR	_ledStep
     000C                           1- 1975     _00308_DS_:
                                    1- 1976     	.line	336, "main.c"; 	LedInput();
                                    1- 1977     	MCALL	_LedInput
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1978     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1979     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 1980     	.line	337, "main.c"; 	switch(ledStep)
     000D 2105                      1- 1981     	MOVIA	0x05
                                    1- 1982     	BANKSEL	_ledStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 04rr                      1- 1983     	SUBAR	_ledStep,W
     0010 0C03                      1- 1984     	BTRSC	STATUS,0
                                    1- 1985     	MGOTO	_00315_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
     0012 21rr                      1- 1986     	MOVIA	((_00327_DS_ >> 8) & 0xff)
     0013 008A                      1- 1987     	MOVAR	PCHBUF
     0014 01rr                      1- 1988     	MOVR	_ledStep,W
     0015 25rr                      1- 1989     	ADDIA	_00327_DS_
     0016 0C03                      1- 1990     	BTRSC	STATUS,0
     0017 058A                      1- 1991     	INCR	PCHBUF,F
     0018 0082                      1- 1992     	MOVAR	PCL
     0019                           1- 1993     _00327_DS_:
                                    1- 1994     	MGOTO	_00309_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1995     	MGOTO	_00313_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1996     	MGOTO	_00312_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1997     	MGOTO	_00311_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1998     	MGOTO	_00310_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
     001E                           1- 1999     _00309_DS_:
                                    1- 2000     	.line	340, "main.c"; 	LedInput();
                                    1- 2001     	MCALL	_LedInput
     001E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2002     	.line	341, "main.c"; 	break;
                                    1- 2003     	MGOTO	_00315_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1- 2004     _00310_DS_:
                                    1- 2005     	.line	343, "main.c"; 	LED4ON();
                                    1- 2006     	MCALL	_LED4ON
     0020 2rrr                      3-   66 m1      LCALL rom_address
     0021                           1- 2007     _00311_DS_:
                                    1- 2008     	.line	345, "main.c"; 	LED3ON();
                                    1- 2009     	MCALL	_LED3ON
     0021 2rrr                      3-   66 m1      LCALL rom_address
     0022                           1- 2010     _00312_DS_:
                                    1- 2011     	.line	347, "main.c"; 	LED2ON();
                                    1- 2012     	MCALL	_LED2ON
     0022 2rrr                      3-   66 m1      LCALL rom_address
     0023                           1- 2013     _00313_DS_:
                                    1- 2014     	.line	349, "main.c"; 	LED1ON();
                                    1- 2015     	MCALL	_LED1ON
     0023 2rrr                      3-   66 m1      LCALL rom_address
     0024                           1- 2016     _00315_DS_:
                                    1- 2017     	.line	352, "main.c"; 	}
                                    1- 2018     	RETURN	
     0024 0010                      3-   40 m1      ret
                                    1- 2019     ; exit point of _ledShow
                                    1- 2021     ;***
                                    1- 2022     ;  pBlock Stats: dbName = C
                                    1- 2023     ;***
                                    1- 2024     ;has an exit
                                    1- 2025     ;; Starting pCode block
                                    1- 2026     .segment "code"; module=main, function=_initSys
     0000                           1- 2028     _initSys:
                                    1- 2029     ; 2 exit points
                                    1- 2030     	.line	287, "main.c"; 	DISI();
     0000 0013                      1- 2031     	DISI
                                    1- 2032     	.line	288, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input;
     0001 2178                      1- 2033     	MOVIA	0x78
     0002 000r                      1- 2034     	IOST	_IOSTA
                                    1- 2035     	.line	289, "main.c"; 	IOSTB = C_PB0_Input | C_PB1_Input;
     0003 2103                      1- 2036     	MOVIA	0x03
     0004 000r                      1- 2037     	IOST	_IOSTB
                                    1- 2038     	.line	290, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2039     	CLRR	_PORTB
                                    1- 2040     	.line	291, "main.c"; 	PORTA = 0x00;
                                    1- 2041     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2042     	CLRR	_PORTA
                                    1- 2043     	.line	292, "main.c"; 	APHCON = 0x9F;
     0008 219F                      1- 2044     	MOVIA	0x9f
     0009 000r                      1- 2045     	IOST	_APHCON
                                    1- 2046     	.line	293, "main.c"; 	BPHCON = 0xFF;
     000A 21FF                      1- 2047     	MOVIA	0xff
     000B 00rr                      1- 2048     	MOVAR	_BPHCON
                                    1- 2049     	.line	294, "main.c"; 	ABPLCON = 0xDF;
     000C 21DF                      1- 2050     	MOVIA	0xdf
     000D 00rr                      1- 2051     	MOVAR	_ABPLCON
                                    1- 2052     	.line	296, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0��Timer1��WDT overflow interrupt
     000E 2101                      1- 2053     	MOVIA	0x01
     000F 00rr                      1- 2054     	MOVAR	_INTE
                                    1- 2055     	.line	298, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 2056     	CLRA	
     0011 000r                      1- 2057     	IOST	_PCON1
                                    1- 2058     	.line	300, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 2059     	MOVIA	0x37
     0013 00rr                      1- 2060     	MOVAR	_TMR0
                                    1- 2061     	.line	301, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0014 0200                      1- 2062     	CLRA	
     0015 0003                      1- 2063     	T0MD	
                                    1- 2064     	.line	303, "main.c"; 	PCON1 = C_TMR0_En;
     0016 2101                      1- 2065     	MOVIA	0x01
     0017 000r                      1- 2066     	IOST	_PCON1
                                    1- 2067     	.line	306, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0018 2198                      1- 2068     	MOVIA	0x98
     0019 00rr                      1- 2069     	MOVAR	_PCON
                                    1- 2070     	.line	309, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001A 2101                      1- 2071     	MOVIA	0x01
     001B 000r                      1- 2072     	IOST	_PCON1
                                    1- 2073     	.line	310, "main.c"; 	ENI();
     001C 0004                      1- 2074     	ENI
                                    1- 2075     	.line	311, "main.c"; 	}
                                    1- 2076     	RETURN	
     001D 0010                      3-   40 m1      ret
                                    1- 2077     ; exit point of _initSys
                                    1- 2079     ;***
                                    1- 2080     ;  pBlock Stats: dbName = C
                                    1- 2081     ;***
                                    1- 2082     ;has an exit
                                    1- 2083     ;functions called:
                                    1- 2084     ;   _pwmStop
                                    1- 2085     ;   _pwmStop
                                    1- 2086     ;; Starting pCode block
                                    1- 2087     .segment "code"; module=main, function=_powerOff
     0000                           1- 2089     _powerOff:
                                    1- 2090     ; 2 exit points
                                    1- 2091     	.line	277, "main.c"; 	workStep = 0;
                                    1- 2092     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2093     	CLRR	_workStep
                                    1- 2094     	.line	278, "main.c"; 	pwmStop();
                                    1- 2095     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2096     	.line	279, "main.c"; 	ledStep = 5;
     0003 2105                      1- 2097     	MOVIA	0x05
                                    1- 2098     	BANKSEL	_ledStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 00rr                      1- 2099     	MOVAR	_ledStep
                                    1- 2100     	.line	280, "main.c"; 	workStartFlag = 2;
     0006 2102                      1- 2101     	MOVIA	0x02
                                    1- 2102     	BANKSEL	_workStartFlag
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 00rr                      1- 2103     	MOVAR	_workStartFlag
                                    1- 2104     	.line	281, "main.c"; 	}
                                    1- 2105     	RETURN	
     0009 0010                      3-   40 m1      ret
                                    1- 2106     ; exit point of _powerOff
                                    1- 2108     ;***
                                    1- 2109     ;  pBlock Stats: dbName = C
                                    1- 2110     ;***
                                    1- 2111     ;has an exit
                                    1- 2112     ;functions called:
                                    1- 2113     ;   _keyRead
                                    1- 2114     ;   _powerOff
                                    1- 2115     ;   _powerOff
                                    1- 2116     ;   _pwmInit
                                    1- 2117     ;   _powerOff
                                    1- 2118     ;   _powerOff
                                    1- 2119     ;   _pwmInit
                                    1- 2120     ;   _keyRead
                                    1- 2121     ;   _powerOff
                                    1- 2122     ;   _powerOff
                                    1- 2123     ;   _pwmInit
                                    1- 2124     ;   _powerOff
                                    1- 2125     ;   _powerOff
                                    1- 2126     ;   _pwmInit
                                    1- 2127     ;1 compiler assigned register :
                                    1- 2128     ;   r0x1036
                                    1- 2129     ;; Starting pCode block
                                    1- 2130     .segment "code"; module=main, function=_keyCtr
                                    1- 2132     ;local variable name mapping:
     0000                           1- 2134     _keyCtr:
                                    1- 2135     ; 2 exit points
                                    1- 2136     	.line	199, "main.c"; 	char kclick = keyRead(0x40 & (~PORTA));
                                    1- 2137     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 2138     	COMR	_PORTA,W
                                    1- 2139     	BANKSEL	r0x1036
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 2140     	MOVAR	r0x1036
     0004 2140                      1- 2141     	MOVIA	0x40
     0005 10rr                      1- 2142     	ANDAR	r0x1036,F
     0006 01rr                      1- 2143     	MOVR	r0x1036,W
                                    1- 2144     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2145     	BANKSEL	r0x1036
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2146     	MOVAR	r0x1036
                                    1- 2147     	.line	200, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 2148     	XORIA	0x01
     000B 0903                      1- 2149     	BTRSS	STATUS,2
                                    1- 2150     	MGOTO	_00246_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2151     	.line	202, "main.c"; 	count500ms = 0;
                                    1- 2152     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 2153     	CLRR	_count500ms
                                    1- 2154     	.line	204, "main.c"; 	ledTime = 0;
                                    1- 2155     	BANKSEL	_ledTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2156     	CLRR	_ledTime
                                    1- 2157     	.line	205, "main.c"; 	if(++workStep > 4)
                                    1- 2158     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 05rr                      1- 2159     	INCR	_workStep,F
                                    1- 2160     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2161     ;;unsigned compare: left >= lit (0x5=5), size=1
     0013 2105                      1- 2162     	MOVIA	0x05
     0014 04rr                      1- 2163     	SUBAR	_workStep,W
     0015 0C03                      1- 2164     	BTRSC	STATUS,0
                                    1- 2165     	.line	206, "main.c"; 	workStep = 0;
     0016 02rr                      1- 2166     	CLRR	_workStep
                                    1- 2167     	.line	208, "main.c"; 	if(workStep == 0)
     0017 01rr                      1- 2168     	MOVR	_workStep,W
     0018 0903                      1- 2169     	BTRSS	STATUS,2
                                    1- 2170     	MGOTO	_00227_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2171     	.line	210, "main.c"; 	powerOff();
                                    1- 2172     	MCALL	_powerOff
     001A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2173     	MGOTO	_00228_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
     001C                           1- 2174     _00227_DS_:
                                    1- 2175     	.line	212, "main.c"; 	else if(workStep == 1)
                                    1- 2176     	BANKSEL	_workStep
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 01rr                      1- 2177     	MOVR	_workStep,W
     001E 2401                      1- 2178     	XORIA	0x01
     001F 0903                      1- 2179     	BTRSS	STATUS,2
                                    1- 2180     	MGOTO	_00224_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2181     	.line	214, "main.c"; 	maxDuty = 99;
     0021 2163                      1- 2182     	MOVIA	0x63
                                    1- 2183     	BANKSEL	_maxDuty
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 00rr                      1- 2184     	MOVAR	_maxDuty
                                    1- 2185     	.line	215, "main.c"; 	currentDuty = 108;
     0024 216C                      1- 2186     	MOVIA	0x6c
                                    1- 2187     	BANKSEL	_currentDuty
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 00rr                      1- 2188     	MOVAR	_currentDuty
                                    1- 2189     	MGOTO	_00228_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 2190     _00224_DS_:
                                    1- 2191     	.line	217, "main.c"; 	else if(workStep == 2)
                                    1- 2192     	BANKSEL	_workStep
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 01rr                      1- 2193     	MOVR	_workStep,W
     002A 2402                      1- 2194     	XORIA	0x02
     002B 0903                      1- 2195     	BTRSS	STATUS,2
                                    1- 2196     	MGOTO	_00221_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2197     	.line	218, "main.c"; 	maxDuty = 109;
     002D 216D                      1- 2198     	MOVIA	0x6d
                                    1- 2199     	BANKSEL	_maxDuty
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1- 2200     	MOVAR	_maxDuty
                                    1- 2201     	MGOTO	_00228_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 2202     _00221_DS_:
                                    1- 2203     	.line	219, "main.c"; 	else if(workStep == 3)
                                    1- 2204     	BANKSEL	_workStep
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1- 2205     	MOVR	_workStep,W
     0033 2403                      1- 2206     	XORIA	0x03
     0034 0903                      1- 2207     	BTRSS	STATUS,2
                                    1- 2208     	MGOTO	_00218_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2209     	.line	220, "main.c"; 	maxDuty = 119;
     0036 2177                      1- 2210     	MOVIA	0x77
                                    1- 2211     	BANKSEL	_maxDuty
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 00rr                      1- 2212     	MOVAR	_maxDuty
                                    1- 2213     	MGOTO	_00228_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
     003A                           1- 2214     _00218_DS_:
                                    1- 2215     	.line	221, "main.c"; 	else if(workStep == 4)
                                    1- 2216     	BANKSEL	_workStep
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1- 2217     	MOVR	_workStep,W
     003C 2404                      1- 2218     	XORIA	0x04
     003D 0903                      1- 2219     	BTRSS	STATUS,2
                                    1- 2220     	MGOTO	_00228_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2221     	.line	222, "main.c"; 	maxDuty = 128;
     003F 2180                      1- 2222     	MOVIA	0x80
                                    1- 2223     	BANKSEL	_maxDuty
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 00rr                      1- 2224     	MOVAR	_maxDuty
     0042                           1- 2225     _00228_DS_:
                                    1- 2226     	.line	223, "main.c"; 	if(workStep > 0)
                                    1- 2227     	BANKSEL	_workStep
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1- 2228     	MOVR	_workStep,W
     0044 0D03                      1- 2229     	BTRSC	STATUS,2
                                    1- 2230     	MGOTO	_00236_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2231     	.line	225, "main.c"; 	if(workStep == 1)
     0046 01rr                      1- 2232     	MOVR	_workStep,W
     0047 2401                      1- 2233     	XORIA	0x01
     0048 0903                      1- 2234     	BTRSS	STATUS,2
                                    1- 2235     	MGOTO	_00233_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2236     	.line	227, "main.c"; 	PWM2DUTY = 108;
     004A 216C                      1- 2237     	MOVIA	0x6c
     004B 00rr                      1- 2238     	SFUN	_PWM2DUTY
                                    1- 2239     ;;unsigned compare: left < lit (0x46=70), size=2
                                    1- 2240     	.line	228, "main.c"; 	if(R_AIN4_DATA < 70)
     004C 2100                      1- 2241     	MOVIA	0x00
                                    1- 2242     	BANKSEL	_R_AIN4_DATA
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 04rr                      1- 2243     	SUBAR	(_R_AIN4_DATA + 1),W
     004F 0903                      1- 2244     	BTRSS	STATUS,2
                                    1- 2245     	MGOTO	_00290_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
     0051 2146                      1- 2246     	MOVIA	0x46
     0052 04rr                      1- 2247     	SUBAR	_R_AIN4_DATA,W
     0053                           1- 2248     _00290_DS_:
     0053 0C03                      1- 2249     	BTRSC	STATUS,0
                                    1- 2250     	MGOTO	_00230_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2251     	.line	230, "main.c"; 	closeCount = 0;
                                    1- 2252     	BANKSEL	_closeCount
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 02rr                      1- 2253     	CLRR	_closeCount
     0057 02rr                      1- 2254     	CLRR	(_closeCount + 1)
                                    1- 2255     	.line	231, "main.c"; 	workStep = 0;
                                    1- 2256     	BANKSEL	_workStep
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 02rr                      1- 2257     	CLRR	_workStep
                                    1- 2258     	.line	232, "main.c"; 	ledStep = 0;
                                    1- 2259     	BANKSEL	_ledStep
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 02rr                      1- 2260     	CLRR	_ledStep
                                    1- 2261     	.line	233, "main.c"; 	powerOff();
                                    1- 2262     	MCALL	_powerOff
     005C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2263     	.line	234, "main.c"; 	shandengTime = 6;
     005D 2106                      1- 2264     	MOVIA	0x06
                                    1- 2265     	BANKSEL	_shandengTime
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 00rr                      1- 2266     	MOVAR	_shandengTime
                                    1- 2267     	MGOTO	_00236_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
     0061                           1- 2268     _00230_DS_:
                                    1- 2269     	.line	237, "main.c"; 	pwmInit();
                                    1- 2270     	MCALL	_pwmInit
     0061 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2271     	MGOTO	_00236_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
     0063                           1- 2272     _00233_DS_:
                                    1- 2273     	.line	241, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 2274     	BANKSEL	_maxDuty
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 01rr                      1- 2275     	MOVR	_maxDuty,W
     0065 00rr                      1- 2276     	SFUN	_PWM2DUTY
     0066                           1- 2277     _00236_DS_:
                                    1- 2278     	.line	245, "main.c"; 	ledStep = workStep;
                                    1- 2279     	BANKSEL	_workStep
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 01rr                      1- 2280     	MOVR	_workStep,W
                                    1- 2281     	BANKSEL	_ledStep
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 00rr                      1- 2282     	MOVAR	_ledStep
                                    1- 2283     	MGOTO	_00248_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
     006B                           1- 2284     _00246_DS_:
                                    1- 2285     	.line	247, "main.c"; 	else if(kclick == 2)
                                    1- 2286     	BANKSEL	r0x1036
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 01rr                      1- 2287     	MOVR	r0x1036,W
     006D 2402                      1- 2288     	XORIA	0x02
     006E 0903                      1- 2289     	BTRSS	STATUS,2
                                    1- 2290     	MGOTO	_00248_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2291     	.line	249, "main.c"; 	if(workStep > 0)
                                    1- 2292     	BANKSEL	_workStep
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 01rr                      1- 2293     	MOVR	_workStep,W
     0072 0D03                      1- 2294     	BTRSC	STATUS,2
                                    1- 2295     	MGOTO	_00241_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2296     	.line	251, "main.c"; 	powerOff();
                                    1- 2297     	MCALL	_powerOff
     0074 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2298     	MGOTO	_00242_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
     0076                           1- 2299     _00241_DS_:
                                    1- 2300     	.line	255, "main.c"; 	workStep = 1;
     0076 2101                      1- 2301     	MOVIA	0x01
                                    1- 2302     	BANKSEL	_workStep
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 00rr                      1- 2303     	MOVAR	_workStep
                                    1- 2304     	.line	256, "main.c"; 	PWM2DUTY = 109;
     0079 216D                      1- 2305     	MOVIA	0x6d
     007A 00rr                      1- 2306     	SFUN	_PWM2DUTY
                                    1- 2307     	.line	257, "main.c"; 	maxDuty = 99;
     007B 2163                      1- 2308     	MOVIA	0x63
                                    1- 2309     	BANKSEL	_maxDuty
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 00rr                      1- 2310     	MOVAR	_maxDuty
                                    1- 2311     	.line	258, "main.c"; 	currentDuty = 109;
     007E 216D                      1- 2312     	MOVIA	0x6d
                                    1- 2313     	BANKSEL	_currentDuty
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 00rr                      1- 2314     	MOVAR	_currentDuty
                                    1- 2315     ;;unsigned compare: left < lit (0x46=70), size=2
                                    1- 2316     	.line	259, "main.c"; 	if(R_AIN4_DATA < 70)
     0081 2100                      1- 2317     	MOVIA	0x00
                                    1- 2318     	BANKSEL	_R_AIN4_DATA
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 04rr                      1- 2319     	SUBAR	(_R_AIN4_DATA + 1),W
     0084 0903                      1- 2320     	BTRSS	STATUS,2
                                    1- 2321     	MGOTO	_00291_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
     0086 2146                      1- 2322     	MOVIA	0x46
     0087 04rr                      1- 2323     	SUBAR	_R_AIN4_DATA,W
     0088                           1- 2324     _00291_DS_:
     0088 0C03                      1- 2325     	BTRSC	STATUS,0
                                    1- 2326     	MGOTO	_00238_DS_
     0089 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2327     	.line	261, "main.c"; 	closeCount = 0;
                                    1- 2328     	BANKSEL	_closeCount
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 02rr                      1- 2329     	CLRR	_closeCount
     008C 02rr                      1- 2330     	CLRR	(_closeCount + 1)
                                    1- 2331     	.line	262, "main.c"; 	workStep = 0;
                                    1- 2332     	BANKSEL	_workStep
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 02rr                      1- 2333     	CLRR	_workStep
                                    1- 2334     	.line	263, "main.c"; 	ledStep = 0;
                                    1- 2335     	BANKSEL	_ledStep
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 02rr                      1- 2336     	CLRR	_ledStep
                                    1- 2337     	.line	264, "main.c"; 	powerOff();
                                    1- 2338     	MCALL	_powerOff
     0091 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2339     	.line	265, "main.c"; 	shandengTime = 6;
     0092 2106                      1- 2340     	MOVIA	0x06
                                    1- 2341     	BANKSEL	_shandengTime
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 00rr                      1- 2342     	MOVAR	_shandengTime
                                    1- 2343     	MGOTO	_00242_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
     0096                           1- 2344     _00238_DS_:
                                    1- 2345     	.line	268, "main.c"; 	pwmInit();
                                    1- 2346     	MCALL	_pwmInit
     0096 2rrr                      3-   66 m1      LCALL rom_address
     0097                           1- 2347     _00242_DS_:
                                    1- 2348     	.line	270, "main.c"; 	ledStep = workStep;
                                    1- 2349     	BANKSEL	_workStep
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 01rr                      1- 2350     	MOVR	_workStep,W
                                    1- 2351     	BANKSEL	_ledStep
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 00rr                      1- 2352     	MOVAR	_ledStep
     009B                           1- 2353     _00248_DS_:
                                    1- 2354     	.line	272, "main.c"; 	}
                                    1- 2355     	RETURN	
     009B 0010                      3-   40 m1      ret
                                    1- 2356     ; exit point of _keyCtr
                                    1- 2359     ;	code size estimation:
                                    1- 2360     ;	  854+  201 =  1055 instructions ( 2512 byte)
                                    1- 2362     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
