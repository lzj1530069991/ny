
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubGewei
                                    1-   20     	extern	_showNubGewei2
                                    1-   21     	extern	_showNubShiwei
                                    1-   22     	extern	_showNubShiwei2
                                    1-   23     	extern	_showBaiwei
                                    1-   24     	extern	_showKeyLed
                                    1-   25     	extern	_B1
                                    1-   26     	extern	_C1
                                    1-   27     	extern	_A2
                                    1-   28     	extern	_B2
                                    1-   29     	extern	_C2
                                    1-   30     	extern	_D2
                                    1-   31     	extern	_E2
                                    1-   32     	extern	_F2
                                    1-   33     	extern	_G2
                                    1-   34     	extern	_A3
                                    1-   35     	extern	_B3
                                    1-   36     	extern	_C3
                                    1-   37     	extern	_D3
                                    1-   38     	extern	_E3
                                    1-   39     	extern	_F3
                                    1-   40     	extern	_G3
                                    1-   41     	extern	_delayms
                                    1-   42     	extern	_LedCtr2
                                    1-   43     	extern	_checkInAD
                                    1-   44     	extern	_fgCtr
                                    1-   45     	extern	_ledCtr
                                    1-   46     	extern	_workCtr
                                    1-   47     	extern	__divuchar
                                    1-   48     	extern	__moduchar
                                    1-   49     	extern	_PORTAbits
                                    1-   50     	extern	_PORTBbits
                                    1-   51     	extern	_PCONbits
                                    1-   52     	extern	_BWUCONbits
                                    1-   53     	extern	_ABPLCONbits
                                    1-   54     	extern	_BPHCONbits
                                    1-   55     	extern	_INTEbits
                                    1-   56     	extern	_INTFbits
                                    1-   57     	extern	_ADMDbits
                                    1-   58     	extern	_ADRbits
                                    1-   59     	extern	_ADVREFHbits
                                    1-   60     	extern	_ADCRbits
                                    1-   61     	extern	_AWUCONbits
                                    1-   62     	extern	_PACONbits
                                    1-   63     	extern	_INTEDGbits
                                    1-   64     	extern	_ANAENbits
                                    1-   65     	extern	_RFCbits
                                    1-   66     	extern	_INTE2bits
                                    1-   67     	extern	_INDF
                                    1-   68     	extern	_TMR0
                                    1-   69     	extern	_PCL
                                    1-   70     	extern	_STATUS
                                    1-   71     	extern	_FSR
                                    1-   72     	extern	_PORTA
                                    1-   73     	extern	_PORTB
                                    1-   74     	extern	_PCON
                                    1-   75     	extern	_BWUCON
                                    1-   76     	extern	_PCHBUF
                                    1-   77     	extern	_ABPLCON
                                    1-   78     	extern	_BPHCON
                                    1-   79     	extern	_INTE
                                    1-   80     	extern	_INTF
                                    1-   81     	extern	_ADMD
                                    1-   82     	extern	_ADR
                                    1-   83     	extern	_ADD
                                    1-   84     	extern	_ADVREFH
                                    1-   85     	extern	_ADCR
                                    1-   86     	extern	_AWUCON
                                    1-   87     	extern	_PACON
                                    1-   88     	extern	_INTEDG
                                    1-   89     	extern	_TMRH
                                    1-   90     	extern	_ANAEN
                                    1-   91     	extern	_RFC
                                    1-   92     	extern	_TM3RH
                                    1-   93     	extern	_INTE2
                                    1-   94     	extern	_TMR1
                                    1-   95     	extern	_T1CR1
                                    1-   96     	extern	_T1CR2
                                    1-   97     	extern	_PWM1DUTY
                                    1-   98     	extern	_PS1CV
                                    1-   99     	extern	_BZ1CR
                                    1-  100     	extern	_IRCR
                                    1-  101     	extern	_TBHP
                                    1-  102     	extern	_TBHD
                                    1-  103     	extern	_TMR2
                                    1-  104     	extern	_T2CR1
                                    1-  105     	extern	_T2CR2
                                    1-  106     	extern	_PWM2DUTY
                                    1-  107     	extern	_PS2CV
                                    1-  108     	extern	_BZ2CR
                                    1-  109     	extern	_OSCCR
                                    1-  110     	extern	_TMR3
                                    1-  111     	extern	_T3CR1
                                    1-  112     	extern	_T3CR2
                                    1-  113     	extern	_PWM3DUTY
                                    1-  114     	extern	_PS3CV
                                    1-  115     	extern	_BZ3CR
                                    1-  116     	extern	_IOSTA
                                    1-  117     	extern	_IOSTB
                                    1-  118     	extern	_APHCON
                                    1-  119     	extern	_PS0CV
                                    1-  120     	extern	_BODCON
                                    1-  121     	extern	_CMPCR
                                    1-  122     	extern	_PCON1
                                    1-  123     	extern	_T0MD
                                    1-  124     	extern	___sdcc_saved_fsr
                                    1-  125     	extern	___sdcc_saved_stk00
                                    1-  126     	extern	___sdcc_saved_stk01
                                    1-  127     	extern	__gptrget1
                                    1-  128     	extern	__mulchar
                                    1-  129     	extern	__nyc_ny8_startup
                                    1-  130     ;--------------------------------------------------------
                                    1-  131     ; global declarations
                                    1-  132     ;--------------------------------------------------------
                                    1-  133     	extern	_delay
                                    1-  134     	extern	_F_wait_eoc
                                    1-  135     	extern	_F_AIN2_Convert
                                    1-  136     	extern	_F_AIN3_Convert
                                    1-  137     	extern	_F_AIN4_Convert
                                    1-  138     	extern	_checkOutA
                                    1-  139     	extern	_checkBatAD
                                    1-  140     	extern	_initAD
                                    1-  141     	extern	_keyRead
                                    1-  142     	extern	_gotoSleep
                                    1-  143     	extern	_pwmStop
                                    1-  144     	extern	_pwmInit
                                    1-  145     	extern	_pwm1Stop
                                    1-  146     	extern	_pwm1Init
                                    1-  147     	extern	_powerOff
                                    1-  148     	extern	_initSys
                                    1-  149     	extern	_keyCtr
                                    1-  150     	extern	_refreshNub
                                    1-  151     	extern	_chrgCtr
                                    1-  152     	extern	_isr
                                    1-  153     	extern	_main
                                    1-  154     	extern	_debug
                                    1-  155     	extern	_Status
                                    1-  156     	extern	_R_AIN4_DATA
                                    1-  157     	extern	_R_AIN4_DATA_LB
                                    1-  158     	extern	_R_AIN3_DATA
                                    1-  159     	extern	_R_AIN3_DATA_LB
                                    1-  160     	extern	_R_AIN2_DATA
                                    1-  161     	extern	_R_AIN2_DATA_LB
                                    1-  162     	extern	_intCount
                                    1-  163     	extern	_sleepTime
                                    1-  164     	extern	_count200ms
                                    1-  165     	extern	_count500ms
                                    1-  166     	extern	_count1s
                                    1-  167     	extern	_count5s
                                    1-  168     	extern	_count900s
                                    1-  169     	extern	_workStep
                                    1-  170     	extern	_keyCount
                                    1-  171     	extern	_pwStep
                                    1-  172     	extern	_lowCount
                                    1-  173     	extern	_ledLightTime
                                    1-  174     	extern	_maxDuty
                                    1-  175     	extern	_currentDuty
                                    1-  176     	extern	_overCount
                                    1-  177     	extern	_tempDuty
                                    1-  178     	extern	_count5S
                                    1-  179     	extern	_ledDeadTime
                                    1-  180     	extern	_countFull
                                    1-  181     	extern	_tempshiweiNum
                                    1-  182     	extern	_tempgeweiNum
                                    1-  183     	extern	_refreshCount
                                    1-  184     	extern	_shiweiNum
                                    1-  185     	extern	_geweiNum
                                    1-  186     	extern	_batValue
                                    1-  187     	extern	_cDuty
                                    1-  188     	extern	_preBatValue
                                    1-  189     	extern	_showFlag
                                    1-  190     	extern	_chrgStep
                                    1-  191     	extern	_lightBat
                                    1-  192     	extern	_closeCount
                                    1-  194     	extern PSAVE
                                    1-  195     	extern SSAVE
                                    1-  196     	extern WSAVE
                                    1-  197     	extern STK02
                                    1-  198     	extern STK01
                                    1-  199     	extern STK00
                                    1-  201     .segment "uninit", 0x20000040
 20000040                           1-  202     PSAVE:
                                    1-  203     	.res 1
 20000041                           1-  204     SSAVE:
                                    1-  205     	.res 1
 20000042                           1-  206     WSAVE:
                                    1-  207     	.res 1
 20000043                           1-  208     STK02:
                                    1-  209     	.res 1
 20000044                           1-  210     STK01:
                                    1-  211     	.res 1
 20000045                           1-  212     STK00:
                                    1-  213     	.res 1
                                    1-  215     ;--------------------------------------------------------
                                    1-  216     ; global definitions
                                    1-  217     ;--------------------------------------------------------
                                    1-  218     .segment "uninit"
     0000                           1-  219     _R_AIN4_DATA:
                                    1-  220     	.res	2
                                    1-  223     .segment "uninit"
     0000                           1-  224     _R_AIN4_DATA_LB:
                                    1-  225     	.res	1
                                    1-  228     .segment "uninit"
     0000                           1-  229     _R_AIN3_DATA:
                                    1-  230     	.res	2
                                    1-  233     .segment "uninit"
     0000                           1-  234     _R_AIN3_DATA_LB:
                                    1-  235     	.res	1
                                    1-  238     .segment "uninit"
     0000                           1-  239     _R_AIN2_DATA:
                                    1-  240     	.res	2
                                    1-  243     .segment "uninit"
     0000                           1-  244     _R_AIN2_DATA_LB:
                                    1-  245     	.res	1
                                    1-  248     ;--------------------------------------------------------
                                    1-  249     ; absolute symbol definitions
                                    1-  250     ;--------------------------------------------------------
                                    1-  251     ;--------------------------------------------------------
                                    1-  252     ; compiler-defined variables
                                    1-  253     ;--------------------------------------------------------
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x1066:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x1067:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x1068:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x1069:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x106A:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x106B:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x106C:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1063:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x1064:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x1062:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x1061:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x1060:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x105F:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x1059:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x105A:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x105B:
                                    1-  301     	.res	1
                                    1-  302     .segment "uninit"
     0000                           1-  303     r0x105C:
                                    1-  304     	.res	1
                                    1-  305     .segment "uninit"
     0000                           1-  306     r0x105D:
                                    1-  307     	.res	1
                                    1-  308     .segment "uninit"
     0000                           1-  309     r0x105E:
                                    1-  310     	.res	1
                                    1-  311     .segment "uninit"
     0000                           1-  312     r0x1055:
                                    1-  313     	.res	1
                                    1-  314     .segment "uninit"
     0000                           1-  315     r0x1058:
                                    1-  316     	.res	1
                                    1-  317     .segment "uninit"
     0000                           1-  318     r0x104F:
                                    1-  319     	.res	1
                                    1-  320     .segment "uninit"
     0000                           1-  321     r0x1050:
                                    1-  322     	.res	1
                                    1-  323     .segment "uninit"
     0000                           1-  324     r0x1051:
                                    1-  325     	.res	1
                                    1-  326     .segment "uninit"
     0000                           1-  327     r0x1054:
                                    1-  328     	.res	1
                                    1-  329     .segment "uninit"
     0000                           1-  330     r0x1049:
                                    1-  331     	.res	1
                                    1-  332     .segment "uninit"
     0000                           1-  333     r0x104A:
                                    1-  334     	.res	1
                                    1-  335     .segment "uninit"
     0000                           1-  336     r0x104B:
                                    1-  337     	.res	1
                                    1-  338     .segment "uninit"
     0000                           1-  339     r0x104E:
                                    1-  340     	.res	1
                                    1-  341     .segment "uninit"
     0000                           1-  342     r0x1043:
                                    1-  343     	.res	1
                                    1-  344     .segment "uninit"
     0000                           1-  345     r0x1044:
                                    1-  346     	.res	1
                                    1-  347     .segment "uninit"
     0000                           1-  348     r0x1045:
                                    1-  349     	.res	1
                                    1-  350     .segment "uninit"
     0000                           1-  351     r0x1048:
                                    1-  352     	.res	1
                                    1-  353     .segment "uninit"
     0000                           1-  354     r0x103F:
                                    1-  355     	.res	1
                                    1-  356     .segment "uninit"
     0000                           1-  357     r0x103E:
                                    1-  358     	.res	1
                                    1-  359     .segment "uninit"
     0000                           1-  360     r0x1040:
                                    1-  361     	.res	1
                                    1-  362     .segment "uninit"
     0000                           1-  363     r0x1041:
                                    1-  364     	.res	1
                                    1-  365     .segment "uninit"
     0000                           1-  366     r0x1042:
                                    1-  367     	.res	1
                                    1-  368     ;--------------------------------------------------------
                                    1-  369     ; initialized data
                                    1-  370     ;--------------------------------------------------------
                                    1-  372     .segment "idata"
     0000                           1-  373     _debug:
     0000 0000                      1-  374     	dw	0x00
                                    1-  378     .segment "idata"
     0000                           1-  379     _numArray:
     0000 003F                      1-  380     	dw	0x3f
     0001 0006                      1-  381     	dw	0x06
     0002 005B                      1-  382     	dw	0x5b
     0003 004F                      1-  383     	dw	0x4f
     0004 0066                      1-  384     	dw	0x66
     0005 006D                      1-  385     	dw	0x6d
     0006 007D                      1-  386     	dw	0x7d
     0007 0007                      1-  387     	dw	0x07
     0008 007F                      1-  388     	dw	0x7f
     0009 006F                      1-  389     	dw	0x6f
     000A 0071                      1-  390     	dw	0x71
     000B 0079                      1-  391     	dw	0x79
     000C 0050                      1-  392     	dw	0x50
                                    1-  396     .segment "idata"
     0000                           1-  397     _Status:
     0000 0000                      1-  398     	dw	0x00
                                    1-  402     .segment "idata"
     0000                           1-  403     _intCount:
     0000 0000                      1-  404     	dw	0x00
                                    1-  408     .segment "idata"
     0000                           1-  409     _sleepTime:
     0000 0000 0000                 1-  410     	dw	0x00, 0x00
                                    1-  414     .segment "idata"
     0000                           1-  415     _count200ms:
     0000 0000                      1-  416     	dw	0x00
                                    1-  420     .segment "idata"
     0000                           1-  421     _count500ms:
     0000 0000                      1-  422     	dw	0x00
                                    1-  426     .segment "idata"
     0000                           1-  427     _count1s:
     0000 0000                      1-  428     	dw	0x00
                                    1-  432     .segment "idata"
     0000                           1-  433     _count5s:
     0000 0000 0000                 1-  434     	dw	0x00, 0x00
                                    1-  438     .segment "idata"
     0000                           1-  439     _count900s:
     0000 0000 0000                 1-  440     	dw	0x00, 0x00
                                    1-  444     .segment "idata"
     0000                           1-  445     _workStep:
     0000 0000                      1-  446     	dw	0x00
                                    1-  450     .segment "idata"
     0000                           1-  451     _keyCount:
     0000 0000                      1-  452     	dw	0x00
                                    1-  456     .segment "idata"
     0000                           1-  457     _pwStep:
     0000 0000                      1-  458     	dw	0x00
                                    1-  462     .segment "idata"
     0000                           1-  463     _lowCount:
     0000 0000                      1-  464     	dw	0x00
                                    1-  468     .segment "idata"
     0000                           1-  469     _ledLightTime:
     0000 0000                      1-  470     	dw	0x00
                                    1-  474     .segment "idata"
     0000                           1-  475     _maxDuty:
     0000 0000                      1-  476     	dw	0x00
                                    1-  480     .segment "idata"
     0000                           1-  481     _currentDuty:
     0000 0000                      1-  482     	dw	0x00
                                    1-  486     .segment "idata"
     0000                           1-  487     _overCount:
     0000 0000                      1-  488     	dw	0x00
                                    1-  492     .segment "idata"
     0000                           1-  493     _tempDuty:
     0000 0000                      1-  494     	dw	0x00
                                    1-  498     .segment "idata"
     0000                           1-  499     _count5S:
     0000 0000 0000                 1-  500     	dw	0x00, 0x00
                                    1-  504     .segment "idata"
     0000                           1-  505     _ledDeadTime:
     0000 0000                      1-  506     	dw	0x00
                                    1-  510     .segment "idata"
     0000                           1-  511     _countFull:
     0000 0000                      1-  512     	dw	0x00
                                    1-  516     .segment "idata"
     0000                           1-  517     _tempshiweiNum:
     0000 0000                      1-  518     	dw	0x00
                                    1-  522     .segment "idata"
     0000                           1-  523     _tempgeweiNum:
     0000 0000                      1-  524     	dw	0x00
                                    1-  528     .segment "idata"
     0000                           1-  529     _refreshCount:
     0000 0000 0000                 1-  530     	dw	0x00, 0x00
                                    1-  534     .segment "idata"
     0000                           1-  535     _shiweiNum:
     0000 0000                      1-  536     	dw	0x00
                                    1-  540     .segment "idata"
     0000                           1-  541     _geweiNum:
     0000 0000                      1-  542     	dw	0x00
                                    1-  546     .segment "idata"
     0000                           1-  547     _batValue:
     0000 0000                      1-  548     	dw	0x00
                                    1-  552     .segment "idata"
     0000                           1-  553     _cDuty:
     0000 0000                      1-  554     	dw	0x00
                                    1-  558     .segment "idata"
     0000                           1-  559     _preBatValue:
     0000 0000                      1-  560     	dw	0x00
                                    1-  564     .segment "idata"
     0000                           1-  565     _showFlag:
     0000 0000                      1-  566     	dw	0x00
                                    1-  570     .segment "idata"
     0000                           1-  571     _chrgStep:
     0000 0000                      1-  572     	dw	0x00
                                    1-  576     .segment "idata"
     0000                           1-  577     _lightBat:
     0000 0000                      1-  578     	dw	0x00
                                    1-  582     .segment "idata"
     0000                           1-  583     _closeCount:
     0000 0000 0000                 1-  584     	dw	0x00, 0x00
                                    1-  587     ;--------------------------------------------------------
                                    1-  588     ; overlayable items in internal ram 
                                    1-  589     ;--------------------------------------------------------
                                    1-  590     ;	udata_ovr
                                    1-  591     ;--------------------------------------------------------
                                    1-  592     ; reset vector 
                                    1-  593     ;--------------------------------------------------------
                                    1-  594     ORG	0x0000
     0000 3rrr                      1-  595     	LGOTO	__nyc_ny8_startup
                                    1-  596     ;--------------------------------------------------------
                                    1-  597     ; interrupt and initialization code
                                    1-  598     ;--------------------------------------------------------
                                    1-  599     ORG 0x0008
                                    1-  600     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  602     .segment "code"
     0000                           1-  603     __sdcc_interrupt:
                                    1-  604     ;***
                                    1-  605     ;  pBlock Stats: dbName = I
                                    1-  606     ;***
                                    1-  607     ;2 compiler assigned registers:
                                    1-  608     ;   STK00
                                    1-  609     ;   STK01
                                    1-  610     ;; Starting pCode block
     0000                           1-  611     _isr:
                                    1-  612     ; 0 exit points
                                    1-  613     	.line	89, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  614     	MOVAR	WSAVE
     0001 1503                      1-  615     	SWAPR	STATUS,W
     0002 0283                      1-  616     	CLRR	STATUS
     0003 00rr                      1-  617     	MOVAR	SSAVE
     0004 010A                      1-  618     	MOVR	PCHBUF,W
     0005 028A                      1-  619     	CLRR	PCHBUF
     0006 00rr                      1-  620     	MOVAR	PSAVE
     0007 0104                      1-  621     	MOVR	FSR,W
                                    1-  622     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  623     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  624     	MOVR	STK00,W
                                    1-  625     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  626     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  627     	MOVR	STK01,W
                                    1-  628     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  629     	MOVAR	___sdcc_saved_stk01
                                    1-  630     	.line	91, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  631     	BTRSS	_INTFbits,0
                                    1-  632     	MGOTO	_00123_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  633     	.line	93, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  634     	MOVIA	0x37
     0013 03rr                      1-  635     	ADDAR	_TMR0,F
                                    1-  636     	.line	95, "main.c"; 	if(++intCount >= 100)
                                    1-  637     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  638     	INCR	_intCount,F
                                    1-  639     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  640     	MOVIA	0x64
     0017 04rr                      1-  641     	SUBAR	_intCount,W
     0018 0803                      1-  642     	BTRSS	STATUS,0
                                    1-  643     	MGOTO	_00123_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  644     	.line	97, "main.c"; 	IntFlag = 1;
                                    1-  645     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  646     	BSR	_Status,0
                                    1-  647     	.line	98, "main.c"; 	intCount = 0;
                                    1-  648     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  649     	CLRR	_intCount
                                    1-  650     	.line	99, "main.c"; 	if(++count500ms >= 40)
                                    1-  651     	BANKSEL	_count500ms
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 05rr                      1-  652     	INCR	_count500ms,F
                                    1-  653     ;;unsigned compare: left < lit (0x28=40), size=1
     0020 2128                      1-  654     	MOVIA	0x28
     0021 04rr                      1-  655     	SUBAR	_count500ms,W
     0022 0C03                      1-  656     	BTRSC	STATUS,0
                                    1-  657     	.line	100, "main.c"; 	count500ms = 0;
     0023 02rr                      1-  658     	CLRR	_count500ms
                                    1-  659     	.line	101, "main.c"; 	if(++count200ms >= 20)
                                    1-  660     	BANKSEL	_count200ms
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 05rr                      1-  661     	INCR	_count200ms,F
     0026 2114                      1-  662     	MOVIA	0x14
     0027 04rr                      1-  663     	SUBAR	_count200ms,W
     0028 0803                      1-  664     	BTRSS	STATUS,0
                                    1-  665     	MGOTO	_00110_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  666     	.line	103, "main.c"; 	count200ms = 0;
     002A 02rr                      1-  667     	CLRR	_count200ms
                                    1-  668     	.line	104, "main.c"; 	if(ledDeadTime > 0)
                                    1-  669     	BANKSEL	_ledDeadTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1-  670     	MOVR	_ledDeadTime,W
     002D 0903                      1-  671     	BTRSS	STATUS,2
                                    1-  672     	.line	105, "main.c"; 	--ledDeadTime;
     002E 06rr                      1-  673     	DECR	_ledDeadTime,F
     002F                           1-  674     _00110_DS_:
                                    1-  675     	.line	107, "main.c"; 	if(++count5s >= 500)
                                    1-  676     	BANKSEL	_count5s
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 05rr                      1-  677     	INCR	_count5s,F
     0031 0D03                      1-  678     	BTRSC	STATUS,2
     0032 05rr                      1-  679     	INCR	(_count5s + 1),F
                                    1-  680     ;;unsigned compare: left < lit (0x1F4=500), size=2
     0033 2101                      1-  681     	MOVIA	0x01
     0034 04rr                      1-  682     	SUBAR	(_count5s + 1),W
     0035 0903                      1-  683     	BTRSS	STATUS,2
                                    1-  684     	MGOTO	_00161_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037 21F4                      1-  685     	MOVIA	0xf4
     0038 04rr                      1-  686     	SUBAR	_count5s,W
     0039                           1-  687     _00161_DS_:
     0039 0803                      1-  688     	BTRSS	STATUS,0
                                    1-  689     	MGOTO	_00112_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  690     	.line	108, "main.c"; 	count5s = 0;
                                    1-  691     	BANKSEL	_count5s
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 02rr                      1-  692     	CLRR	_count5s
     003D 02rr                      1-  693     	CLRR	(_count5s + 1)
     003E                           1-  694     _00112_DS_:
                                    1-  695     	.line	109, "main.c"; 	if(++count1s >= 100)
                                    1-  696     	BANKSEL	_count1s
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 05rr                      1-  697     	INCR	_count1s,F
                                    1-  698     ;;unsigned compare: left < lit (0x64=100), size=1
     0040 2164                      1-  699     	MOVIA	0x64
     0041 04rr                      1-  700     	SUBAR	_count1s,W
     0042 0803                      1-  701     	BTRSS	STATUS,0
                                    1-  702     	MGOTO	_00123_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  703     	.line	111, "main.c"; 	count1s = 0;
     0044 02rr                      1-  704     	CLRR	_count1s
                                    1-  705     	.line	112, "main.c"; 	if(ledLightTime > 0)
                                    1-  706     	BANKSEL	_ledLightTime
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1-  707     	MOVR	_ledLightTime,W
     0047 0903                      1-  708     	BTRSS	STATUS,2
                                    1-  709     	.line	113, "main.c"; 	ledLightTime--;
     0048 06rr                      1-  710     	DECR	_ledLightTime,F
                                    1-  711     	.line	114, "main.c"; 	if(workStep)
                                    1-  712     	BANKSEL	_workStep
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 01rr                      1-  713     	MOVR	_workStep,W
     004B 0D03                      1-  714     	BTRSC	STATUS,2
                                    1-  715     	MGOTO	_00116_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  716     	.line	116, "main.c"; 	++count900s;
                                    1-  717     	BANKSEL	_count900s
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 05rr                      1-  718     	INCR	_count900s,F
     004F 0D03                      1-  719     	BTRSC	STATUS,2
     0050 05rr                      1-  720     	INCR	(_count900s + 1),F
                                    1-  721     	MGOTO	_00123_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
     0052                           1-  722     _00116_DS_:
                                    1-  723     	.line	120, "main.c"; 	count900s = 0;
                                    1-  724     	BANKSEL	_count900s
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 02rr                      1-  725     	CLRR	_count900s
     0054 02rr                      1-  726     	CLRR	(_count900s + 1)
     0055                           1-  727     _00123_DS_:
                                    1-  728     	.line	129, "main.c"; 	if(INTFbits.PABIF)
     0055 08rr                      1-  729     	BTRSS	_INTFbits,1
                                    1-  730     	MGOTO	_00125_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  731     	.line	131, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0057 21FD                      1-  732     	MOVIA	0xfd
     0058 00rr                      1-  733     	MOVAR	_INTF
     0059                           1-  734     _00125_DS_:
                                    1-  735     	.line	134, "main.c"; 	INTF = 0;
     0059 02rr                      1-  736     	CLRR	_INTF
                                    1-  737     	.line	136, "main.c"; 	}
                                    1-  738     	BANKSEL	___sdcc_saved_stk01
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 01rr                      1-  739     	MOVR	___sdcc_saved_stk01,W
     005C 00rr                      1-  740     	MOVAR	STK01
                                    1-  741     	BANKSEL	___sdcc_saved_stk00
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 01rr                      1-  742     	MOVR	___sdcc_saved_stk00,W
     005F 00rr                      1-  743     	MOVAR	STK00
                                    1-  744     	BANKSEL	___sdcc_saved_fsr
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1-  745     	MOVR	___sdcc_saved_fsr,W
     0062 0084                      1-  746     	MOVAR	FSR
     0063 01rr                      1-  747     	MOVR	PSAVE,W
     0064 008A                      1-  748     	MOVAR	PCHBUF
     0065 0283                      1-  749     	CLRR	STATUS
     0066 15rr                      1-  750     	SWAPR	SSAVE,W
     0067 0083                      1-  751     	MOVAR	STATUS
     0068 15rr                      1-  752     	SWAPR	WSAVE,F
     0069 15rr                      1-  753     	SWAPR	WSAVE,W
     006A                           1-  754     END_OF_INTERRUPT:
     006A 0011                      1-  755     	RETIE	
                                    1-  757     ;--------------------------------------------------------
                                    1-  758     ; code
                                    1-  759     ;--------------------------------------------------------
                                    1-  760     ;***
                                    1-  761     ;  pBlock Stats: dbName = M
                                    1-  762     ;***
                                    1-  763     ;has an exit
                                    1-  764     ;functions called:
                                    1-  765     ;   _initSys
                                    1-  766     ;   _initAD
                                    1-  767     ;   _refreshNub
                                    1-  768     ;   _pwmStop
                                    1-  769     ;   _powerOff
                                    1-  770     ;   _checkBatAD
                                    1-  771     ;   _checkBatAD
                                    1-  772     ;   _checkOutA
                                    1-  773     ;   _chrgCtr
                                    1-  774     ;   _keyCtr
                                    1-  775     ;   _gotoSleep
                                    1-  776     ;   _powerOff
                                    1-  777     ;   _initSys
                                    1-  778     ;   _initAD
                                    1-  779     ;   _refreshNub
                                    1-  780     ;   _pwmStop
                                    1-  781     ;   _powerOff
                                    1-  782     ;   _checkBatAD
                                    1-  783     ;   _checkBatAD
                                    1-  784     ;   _checkOutA
                                    1-  785     ;   _chrgCtr
                                    1-  786     ;   _keyCtr
                                    1-  787     ;   _gotoSleep
                                    1-  788     ;   _powerOff
                                    1-  789     ;; Starting pCode block
                                    1-  790     .segment "code"; module=main, function=_main
     0000                           1-  792     _main:
                                    1-  793     ; 2 exit points
                                    1-  794     	.line	141, "main.c"; 	initSys();
                                    1-  795     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  796     	.line	142, "main.c"; 	initAD();
                                    1-  797     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  798     _00215_DS_:
                                    1-  799     	.line	145, "main.c"; 	CLRWDT();
     0002 0002                      1-  800     	clrwdt
                                    1-  801     	.line	146, "main.c"; 	if(showFlag)
                                    1-  802     	BANKSEL	_showFlag
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 01rr                      1-  803     	MOVR	_showFlag,W
     0005 0903                      1-  804     	BTRSS	STATUS,2
                                    1-  805     	.line	147, "main.c"; 	refreshNub();
                                    1-  806     	MCALL	_refreshNub
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  807     	.line	148, "main.c"; 	if(workStep > 0 && tempDuty >= 40)
                                    1-  808     	BANKSEL	_workStep
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 01rr                      1-  809     	MOVR	_workStep,W
     0009 0D03                      1-  810     	BTRSC	STATUS,2
                                    1-  811     	MGOTO	_00174_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  812     ;;unsigned compare: left < lit (0x28=40), size=1
     000B 2128                      1-  813     	MOVIA	0x28
                                    1-  814     	BANKSEL	_tempDuty
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 04rr                      1-  815     	SUBAR	_tempDuty,W
     000E 0803                      1-  816     	BTRSS	STATUS,0
                                    1-  817     	MGOTO	_00174_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  818     	.line	150, "main.c"; 	if(cDuty > tempDuty)
                                    1-  819     	BANKSEL	_cDuty
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1-  820     	MOVR	_cDuty,W
                                    1-  821     	BANKSEL	_tempDuty
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1-  822     	SUBAR	_tempDuty,W
     0014 0C03                      1-  823     	BTRSC	STATUS,0
                                    1-  824     	MGOTO	_00171_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  825     	.line	152, "main.c"; 	cDuty--;
                                    1-  826     	BANKSEL	_cDuty
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 06rr                      1-  827     	DECR	_cDuty,F
                                    1-  828     	.line	153, "main.c"; 	PWM2DUTY = cDuty;
     0018 01rr                      1-  829     	MOVR	_cDuty,W
     0019 00rr                      1-  830     	SFUN	_PWM2DUTY
                                    1-  831     	MGOTO	_00174_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
     001B                           1-  832     _00171_DS_:
                                    1-  833     	.line	155, "main.c"; 	else if(cDuty < tempDuty)
                                    1-  834     	BANKSEL	_tempDuty
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 01rr                      1-  835     	MOVR	_tempDuty,W
                                    1-  836     	BANKSEL	_cDuty
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 04rr                      1-  837     	SUBAR	_cDuty,W
     001F 0C03                      1-  838     	BTRSC	STATUS,0
                                    1-  839     	MGOTO	_00174_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  840     	.line	157, "main.c"; 	cDuty++;
     0021 05rr                      1-  841     	INCR	_cDuty,F
                                    1-  842     	.line	158, "main.c"; 	PWM2DUTY = cDuty;
     0022 01rr                      1-  843     	MOVR	_cDuty,W
     0023 00rr                      1-  844     	SFUN	_PWM2DUTY
     0024                           1-  845     _00174_DS_:
                                    1-  846     	.line	161, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  847     	BANKSEL	_workStep
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1-  848     	MOVR	_workStep,W
     0026 0D03                      1-  849     	BTRSC	STATUS,2
                                    1-  850     	MGOTO	_00177_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  851     	BANKSEL	_currentDuty
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 01rr                      1-  852     	MOVR	_currentDuty,W
                                    1-  853     	BANKSEL	_maxDuty
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 04rr                      1-  854     	SUBAR	_maxDuty,W
     002C 0C03                      1-  855     	BTRSC	STATUS,0
                                    1-  856     	MGOTO	_00177_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  857     	.line	163, "main.c"; 	currentDuty = currentDuty - 1;
                                    1-  858     	BANKSEL	_currentDuty
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 06rr                      1-  859     	DECR	_currentDuty,F
                                    1-  860     	.line	164, "main.c"; 	PWM2DUTY = currentDuty;
     0030 01rr                      1-  861     	MOVR	_currentDuty,W
     0031 00rr                      1-  862     	SFUN	_PWM2DUTY
                                    1-  863     	.line	165, "main.c"; 	cDuty = currentDuty;
     0032 01rr                      1-  864     	MOVR	_currentDuty,W
                                    1-  865     	BANKSEL	_cDuty
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 00rr                      1-  866     	MOVAR	_cDuty
     0035                           1-  867     _00177_DS_:
                                    1-  868     	.line	167, "main.c"; 	if(!IntFlag)
                                    1-  869     	BANKSEL	_Status
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 08rr                      1-  870     	BTRSS	_Status,0
                                    1-  871     	MGOTO	_00215_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  872     	.line	169, "main.c"; 	IntFlag = 0;
     0038 1Crr                      1-  873     	BCR	_Status,0
                                    1-  874     	.line	171, "main.c"; 	if(batValue == 0 && workStep > 0)
                                    1-  875     	BANKSEL	_batValue
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1-  876     	MOVR	_batValue,W
     003B 0903                      1-  877     	BTRSS	STATUS,2
                                    1-  878     	MGOTO	_00184_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  879     	BANKSEL	_workStep
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 01rr                      1-  880     	MOVR	_workStep,W
     003F 0D03                      1-  881     	BTRSC	STATUS,2
                                    1-  882     	MGOTO	_00184_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  883     	.line	173, "main.c"; 	if(++closeCount >= 1000)
                                    1-  884     	BANKSEL	_closeCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 05rr                      1-  885     	INCR	_closeCount,F
     0043 0D03                      1-  886     	BTRSC	STATUS,2
     0044 05rr                      1-  887     	INCR	(_closeCount + 1),F
                                    1-  888     ;;unsigned compare: left < lit (0x3E8=1000), size=2
     0045 2103                      1-  889     	MOVIA	0x03
     0046 04rr                      1-  890     	SUBAR	(_closeCount + 1),W
     0047 0903                      1-  891     	BTRSS	STATUS,2
                                    1-  892     	MGOTO	_00307_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 21E8                      1-  893     	MOVIA	0xe8
     004A 04rr                      1-  894     	SUBAR	_closeCount,W
     004B                           1-  895     _00307_DS_:
     004B 0803                      1-  896     	BTRSS	STATUS,0
                                    1-  897     	MGOTO	_00185_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  898     	.line	175, "main.c"; 	closeCount = 0;
                                    1-  899     	BANKSEL	_closeCount
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 02rr                      1-  900     	CLRR	_closeCount
     004F 02rr                      1-  901     	CLRR	(_closeCount + 1)
                                    1-  902     	.line	176, "main.c"; 	workStep = 0;
                                    1-  903     	BANKSEL	_workStep
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 02rr                      1-  904     	CLRR	_workStep
                                    1-  905     	.line	177, "main.c"; 	pwmStop();
                                    1-  906     	MCALL	_pwmStop
     0052 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  907     	MGOTO	_00185_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
     0054                           1-  908     _00184_DS_:
                                    1-  909     	.line	182, "main.c"; 	closeCount = 0;
                                    1-  910     	BANKSEL	_closeCount
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 02rr                      1-  911     	CLRR	_closeCount
     0056 02rr                      1-  912     	CLRR	(_closeCount + 1)
                                    1-  913     ;;unsigned compare: left < lit (0x5=5), size=1
     0057                           1-  914     _00185_DS_:
                                    1-  915     	.line	185, "main.c"; 	if(overCount >= 5 && workStep > 0)
     0057 2105                      1-  916     	MOVIA	0x05
                                    1-  917     	BANKSEL	_overCount
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 04rr                      1-  918     	SUBAR	_overCount,W
     005A 0803                      1-  919     	BTRSS	STATUS,0
                                    1-  920     	MGOTO	_00190_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  921     	BANKSEL	_workStep
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 01rr                      1-  922     	MOVR	_workStep,W
     005E 0D03                      1-  923     	BTRSC	STATUS,2
                                    1-  924     	MGOTO	_00190_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  925     	.line	187, "main.c"; 	if(++count5S > 250)
                                    1-  926     	BANKSEL	_count5S
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 05rr                      1-  927     	INCR	_count5S,F
     0062 0D03                      1-  928     	BTRSC	STATUS,2
     0063 05rr                      1-  929     	INCR	(_count5S + 1),F
                                    1-  930     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  931     ;;unsigned compare: left >= lit (0xFB=251), size=2
     0064 2100                      1-  932     	MOVIA	0x00
     0065 04rr                      1-  933     	SUBAR	(_count5S + 1),W
     0066 0903                      1-  934     	BTRSS	STATUS,2
                                    1-  935     	MGOTO	_00309_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
     0068 21FB                      1-  936     	MOVIA	0xfb
     0069 04rr                      1-  937     	SUBAR	_count5S,W
     006A                           1-  938     _00309_DS_:
     006A 0803                      1-  939     	BTRSS	STATUS,0
                                    1-  940     	MGOTO	_00191_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  941     	.line	189, "main.c"; 	overCount = 0;
                                    1-  942     	BANKSEL	_overCount
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 02rr                      1-  943     	CLRR	_overCount
                                    1-  944     	.line	190, "main.c"; 	count5S = 0;
                                    1-  945     	BANKSEL	_count5S
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 02rr                      1-  946     	CLRR	_count5S
     0070 02rr                      1-  947     	CLRR	(_count5S + 1)
                                    1-  948     	.line	191, "main.c"; 	ledDeadTime = 25;
     0071 2119                      1-  949     	MOVIA	0x19
                                    1-  950     	BANKSEL	_ledDeadTime
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 00rr                      1-  951     	MOVAR	_ledDeadTime
                                    1-  952     	.line	192, "main.c"; 	powerOff();
                                    1-  953     	MCALL	_powerOff
     0074 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  954     	MGOTO	_00191_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
     0076                           1-  955     _00190_DS_:
                                    1-  956     	.line	197, "main.c"; 	count5S = 0;
                                    1-  957     	BANKSEL	_count5S
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 02rr                      1-  958     	CLRR	_count5S
     0078 02rr                      1-  959     	CLRR	(_count5S + 1)
                                    1-  960     ;;unsigned compare: left < lit (0x5=5), size=1
     0079                           1-  961     _00191_DS_:
                                    1-  962     	.line	199, "main.c"; 	if(count200ms < 5)
     0079 2105                      1-  963     	MOVIA	0x05
                                    1-  964     	BANKSEL	_count200ms
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 04rr                      1-  965     	SUBAR	_count200ms,W
     007C 0C03                      1-  966     	BTRSC	STATUS,0
                                    1-  967     	MGOTO	_00202_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  968     	.line	201, "main.c"; 	if(workStep > 0 &&cDuty == tempDuty)
                                    1-  969     	BANKSEL	_workStep
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 01rr                      1-  970     	MOVR	_workStep,W
     0080 0D03                      1-  971     	BTRSC	STATUS,2
                                    1-  972     	MGOTO	_00194_DS_
     0081 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  973     	BANKSEL	_tempDuty
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 01rr                      1-  974     	MOVR	_tempDuty,W
                                    1-  975     	BANKSEL	_cDuty
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 12rr                      1-  976     	XORAR	_cDuty,W
     0086 0D03                      1-  977     	BTRSC	STATUS,2
                                    1-  978     	.line	202, "main.c"; 	checkBatAD();
                                    1-  979     	MCALL	_checkBatAD
     0087 2rrr                      3-   66 m1      LCALL rom_address
     0088                           1-  980     _00194_DS_:
                                    1-  981     	.line	203, "main.c"; 	if(workStep == 0)
                                    1-  982     	BANKSEL	_workStep
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 01rr                      1-  983     	MOVR	_workStep,W
     008A 0903                      1-  984     	BTRSS	STATUS,2
                                    1-  985     	MGOTO	_00203_DS_
     008B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  986     	.line	204, "main.c"; 	checkBatAD();
                                    1-  987     	MCALL	_checkBatAD
     008C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  988     	MGOTO	_00203_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  989     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  990     ;;unsigned compare: left >= lit (0x9=9), size=1
     008E                           1-  991     _00202_DS_:
                                    1-  992     	.line	206, "main.c"; 	else if(count200ms > 8 && count200ms < 11)
     008E 2109                      1-  993     	MOVIA	0x09
                                    1-  994     	BANKSEL	_count200ms
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 04rr                      1-  995     	SUBAR	_count200ms,W
     0091 0803                      1-  996     	BTRSS	STATUS,0
                                    1-  997     	MGOTO	_00203_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  998     ;;unsigned compare: left < lit (0xB=11), size=1
     0093 210B                      1-  999     	MOVIA	0x0b
     0094 04rr                      1- 1000     	SUBAR	_count200ms,W
     0095 0803                      1- 1001     	BTRSS	STATUS,0
                                    1- 1002     	.line	208, "main.c"; 	checkOutA();
                                    1- 1003     	MCALL	_checkOutA
     0096 2rrr                      3-   66 m1      LCALL rom_address
     0097                           1- 1004     _00203_DS_:
                                    1- 1005     	.line	210, "main.c"; 	chrgCtr();
                                    1- 1006     	MCALL	_chrgCtr
     0097 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1007     	.line	211, "main.c"; 	if(chrgFlag == 0)
                                    1- 1008     	BANKSEL	_Status
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 09rr                      1- 1009     	BTRSS	_Status,3
                                    1- 1010     	.line	212, "main.c"; 	keyCtr();
                                    1- 1011     	MCALL	_keyCtr
     009A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1012     	.line	213, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x08) == 0 && ledLightTime == 0 && ledDeadTime == 0)
                                    1- 1013     	BANKSEL	_workStep
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 01rr                      1- 1014     	MOVR	_workStep,W
     009D 0903                      1- 1015     	BTRSS	STATUS,2
                                    1- 1016     	MGOTO	_00207_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1017     	BANKSEL	_keyCount
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 01rr                      1- 1018     	MOVR	_keyCount,W
     00A1 0903                      1- 1019     	BTRSS	STATUS,2
                                    1- 1020     	MGOTO	_00207_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1021     	BANKSEL	_PORTA
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 0Drr                      1- 1022     	BTRSC	_PORTA,3
                                    1- 1023     	MGOTO	_00207_DS_
     00A5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1024     	BANKSEL	_ledLightTime
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 01rr                      1- 1025     	MOVR	_ledLightTime,W
     00A8 0903                      1- 1026     	BTRSS	STATUS,2
                                    1- 1027     	MGOTO	_00207_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1028     	BANKSEL	_ledDeadTime
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 01rr                      1- 1029     	MOVR	_ledDeadTime,W
     00AC 0D03                      1- 1030     	BTRSC	STATUS,2
                                    1- 1031     	.line	216, "main.c"; 	gotoSleep();
                                    1- 1032     	MCALL	_gotoSleep
     00AD 2rrr                      3-   66 m1      LCALL rom_address
     00AE                           1- 1033     _00207_DS_:
                                    1- 1034     	.line	220, "main.c"; 	if(count900s >= 900)
     00AE 2103                      1- 1035     	MOVIA	0x03
                                    1- 1036     	BANKSEL	_count900s
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 04rr                      1- 1037     	SUBAR	(_count900s + 1),W
     00B1 0903                      1- 1038     	BTRSS	STATUS,2
                                    1- 1039     	MGOTO	_00313_DS_
     00B2 3rrr                      3-   63 m1      LGOTO rom_address
     00B3 2184                      1- 1040     	MOVIA	0x84
     00B4 04rr                      1- 1041     	SUBAR	_count900s,W
     00B5                           1- 1042     _00313_DS_:
     00B5 0803                      1- 1043     	BTRSS	STATUS,0
                                    1- 1044     	MGOTO	_00215_DS_
     00B6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1045     	.line	222, "main.c"; 	powerOff();
                                    1- 1046     	MCALL	_powerOff
     00B7 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1047     	MGOTO	_00215_DS_
     00B8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1048     	.line	225, "main.c"; 	}
                                    1- 1049     	RETURN	
     00B9 0010                      3-   40 m1      ret
                                    1- 1050     ; exit point of _main
                                    1- 1052     ;***
                                    1- 1053     ;  pBlock Stats: dbName = C
                                    1- 1054     ;***
                                    1- 1055     ;has an exit
                                    1- 1056     ;6 compiler assigned registers:
                                    1- 1057     ;   r0x103E
                                    1- 1058     ;   STK00
                                    1- 1059     ;   r0x103F
                                    1- 1060     ;   r0x1040
                                    1- 1061     ;   r0x1041
                                    1- 1062     ;   r0x1042
                                    1- 1063     ;; Starting pCode block
                                    1- 1064     .segment "code"; module=main, function=_delay
                                    1- 1066     ;local variable name mapping:
     0000                           1- 1071     _delay:
                                    1- 1072     ; 2 exit points
                                    1- 1073     	.line	795, "main.c"; 	void delay(int count)
                                    1- 1074     	BANKSEL	r0x103E
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1075     	MOVAR	r0x103E
     0002 01rr                      1- 1076     	MOVR	STK00,W
                                    1- 1077     	BANKSEL	r0x103F
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1078     	MOVAR	r0x103F
                                    1- 1079     	.line	798, "main.c"; 	for(i=1;i<=count;i++)
     0005 2101                      1- 1080     	MOVIA	0x01
                                    1- 1081     	BANKSEL	r0x1040
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 1082     	MOVAR	r0x1040
                                    1- 1083     	BANKSEL	r0x1041
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 1084     	CLRR	r0x1041
     000A                           1- 1085     _00766_DS_:
                                    1- 1086     	BANKSEL	r0x103E
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1- 1087     	MOVR	r0x103E,W
     000C 2580                      1- 1088     	ADDIA	0x80
                                    1- 1089     	BANKSEL	r0x1042
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 1090     	MOVAR	r0x1042
                                    1- 1091     	BANKSEL	r0x1041
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 1092     	MOVR	r0x1041,W
     0011 2580                      1- 1093     	ADDIA	0x80
                                    1- 1094     	BANKSEL	r0x1042
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1095     	SUBAR	r0x1042,W
     0014 0903                      1- 1096     	BTRSS	STATUS,2
                                    1- 1097     	MGOTO	_00777_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1098     	BANKSEL	r0x1040
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 1099     	MOVR	r0x1040,W
                                    1- 1100     	BANKSEL	r0x103F
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 04rr                      1- 1101     	SUBAR	r0x103F,W
     001A                           1- 1102     _00777_DS_:
     001A 0803                      1- 1103     	BTRSS	STATUS,0
                                    1- 1104     	MGOTO	_00768_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1105     	BANKSEL	r0x1040
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 05rr                      1- 1106     	INCR	r0x1040,F
     001E 0903                      1- 1107     	BTRSS	STATUS,2
                                    1- 1108     	MGOTO	_00001_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1109     	BANKSEL	r0x1041
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 05rr                      1- 1110     	INCR	r0x1041,F
     0022                           1- 1111     _00001_DS_:
                                    1- 1112     	MGOTO	_00766_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023                           1- 1113     _00768_DS_:
                                    1- 1114     	.line	800, "main.c"; 	}
                                    1- 1115     	RETURN	
     0023 0010                      3-   40 m1      ret
                                    1- 1116     ; exit point of _delay
                                    1- 1118     ;***
                                    1- 1119     ;  pBlock Stats: dbName = C
                                    1- 1120     ;***
                                    1- 1121     ;has an exit
                                    1- 1122     ;; Starting pCode block
                                    1- 1123     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1125     _F_wait_eoc:
                                    1- 1126     ; 2 exit points
     0000                           1- 1127     _00759_DS_:
                                    1- 1128     	.line	790, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1129     	BTRSS	_ADMDbits,5
                                    1- 1130     	MGOTO	_00759_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1131     	.line	792, "main.c"; 	}
                                    1- 1132     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1133     ; exit point of _F_wait_eoc
                                    1- 1135     ;***
                                    1- 1136     ;  pBlock Stats: dbName = C
                                    1- 1137     ;***
                                    1- 1138     ;has an exit
                                    1- 1139     ;functions called:
                                    1- 1140     ;   _delay
                                    1- 1141     ;   _F_wait_eoc
                                    1- 1142     ;   _delay
                                    1- 1143     ;   _F_wait_eoc
                                    1- 1144     ;7 compiler assigned registers:
                                    1- 1145     ;   r0x1043
                                    1- 1146     ;   STK00
                                    1- 1147     ;   r0x1044
                                    1- 1148     ;   r0x1045
                                    1- 1149     ;   r0x1046
                                    1- 1150     ;   r0x1047
                                    1- 1151     ;   r0x1048
                                    1- 1152     ;; Starting pCode block
                                    1- 1153     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1155     ;local variable name mapping:
     0000                           1- 1158     _F_AIN2_Convert:
                                    1- 1159     ; 2 exit points
                                    1- 1160     	.line	773, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1161     	BANKSEL	r0x1043
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1162     	MOVAR	r0x1043
                                    1- 1163     	.line	775, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1164     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1165     	CLRR	_R_AIN2_DATA_LB
                                    1- 1166     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1167     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1168     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1169     	.line	777, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1170     	MOVIA	0x92
     0008 00rr                      1- 1171     	MOVAR	_ADMD
                                    1- 1172     	.line	778, "main.c"; 	delay(200);	
     0009 21C8                      1- 1173     	MOVIA	0xc8
     000A 00rr                      1- 1174     	MOVAR	STK00
     000B 2100                      1- 1175     	MOVIA	0x00
                                    1- 1176     	MCALL	_delay
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1177     	.line	779, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1178     	MOVIA	0x01
                                    1- 1179     	BANKSEL	r0x1044
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1- 1180     	MOVAR	r0x1044
     0010                           1- 1181     _00752_DS_:
                                    1- 1182     	BANKSEL	r0x1044
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 1183     	MOVR	r0x1044,W
                                    1- 1184     	BANKSEL	r0x1043
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1185     	SUBAR	r0x1043,W
     0014 0803                      1- 1186     	BTRSS	STATUS,0
                                    1- 1187     	MGOTO	_00754_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1188     	.line	781, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1189     	BSR	_ADMDbits,6
                                    1- 1190     	.line	782, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1191     	MCALL	_F_wait_eoc
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1192     	.line	783, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1193     	MOVIA	0x0f
     0019 10rr                      1- 1194     	ANDAR	_ADR,W
                                    1- 1195     ;;3	MOVAR	r0x1045
                                    1- 1196     	BANKSEL	_R_AIN2_DATA_LB
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 03rr                      1- 1197     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1198     	.line	784, "main.c"; 	R_AIN2_DATA    += ADD; 
     001C 01rr                      1- 1199     	MOVR	_ADD,W
                                    1- 1200     	BANKSEL	r0x1045
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 00rr                      1- 1201     	MOVAR	r0x1045
                                    1- 1202     ;;1	CLRR	r0x1046
                                    1- 1203     ;;112	MOVR	r0x1045,W
                                    1- 1204     ;;110	MOVAR	r0x1047
     001F 2100                      1- 1205     	MOVIA	0x00
                                    1- 1206     	BANKSEL	r0x1048
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 1207     	MOVAR	r0x1048
                                    1- 1208     ;;111	MOVR	r0x1047,W
                                    1- 1209     	BANKSEL	r0x1045
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 1210     	MOVR	r0x1045,W
                                    1- 1211     	BANKSEL	_R_AIN2_DATA
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 03rr                      1- 1212     	ADDAR	_R_AIN2_DATA,F
                                    1- 1213     	BANKSEL	r0x1048
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 1214     	MOVR	r0x1048,W
     0028 0C03                      1- 1215     	BTRSC	STATUS,0
     0029 05rr                      1- 1216     	INCR	r0x1048,W
     002A 0D03                      1- 1217     	BTRSC	STATUS,2
                                    1- 1218     	MGOTO	_00002_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1219     	BANKSEL	_R_AIN2_DATA
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 03rr                      1- 1220     	ADDAR	(_R_AIN2_DATA + 1),F
     002E                           1- 1221     _00002_DS_:
                                    1- 1222     	.line	779, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1223     	BANKSEL	r0x1044
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 05rr                      1- 1224     	INCR	r0x1044,F
                                    1- 1225     	MGOTO	_00752_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 1226     _00754_DS_:
                                    1- 1227     	.line	786, "main.c"; 	}
                                    1- 1228     	RETURN	
     0031 0010                      3-   40 m1      ret
                                    1- 1229     ; exit point of _F_AIN2_Convert
                                    1- 1231     ;***
                                    1- 1232     ;  pBlock Stats: dbName = C
                                    1- 1233     ;***
                                    1- 1234     ;has an exit
                                    1- 1235     ;functions called:
                                    1- 1236     ;   _delay
                                    1- 1237     ;   _F_wait_eoc
                                    1- 1238     ;   _delay
                                    1- 1239     ;   _F_wait_eoc
                                    1- 1240     ;7 compiler assigned registers:
                                    1- 1241     ;   r0x1049
                                    1- 1242     ;   STK00
                                    1- 1243     ;   r0x104A
                                    1- 1244     ;   r0x104B
                                    1- 1245     ;   r0x104C
                                    1- 1246     ;   r0x104D
                                    1- 1247     ;   r0x104E
                                    1- 1248     ;; Starting pCode block
                                    1- 1249     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1- 1251     ;local variable name mapping:
     0000                           1- 1254     _F_AIN3_Convert:
                                    1- 1255     ; 2 exit points
                                    1- 1256     	.line	758, "main.c"; 	void F_AIN3_Convert(char count)
                                    1- 1257     	BANKSEL	r0x1049
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1258     	MOVAR	r0x1049
                                    1- 1259     	.line	760, "main.c"; 	R_AIN3_DATA=R_AIN3_DATA_LB=0x00;   
                                    1- 1260     	BANKSEL	_R_AIN3_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1261     	CLRR	_R_AIN3_DATA_LB
                                    1- 1262     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1263     	CLRR	_R_AIN3_DATA
     0006 02rr                      1- 1264     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1265     	.line	762, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0007 2193                      1- 1266     	MOVIA	0x93
     0008 00rr                      1- 1267     	MOVAR	_ADMD
                                    1- 1268     	.line	763, "main.c"; 	delay(200);	
     0009 21C8                      1- 1269     	MOVIA	0xc8
     000A 00rr                      1- 1270     	MOVAR	STK00
     000B 2100                      1- 1271     	MOVIA	0x00
                                    1- 1272     	MCALL	_delay
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1273     	.line	764, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1274     	MOVIA	0x01
                                    1- 1275     	BANKSEL	r0x104A
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1- 1276     	MOVAR	r0x104A
     0010                           1- 1277     _00743_DS_:
                                    1- 1278     	BANKSEL	r0x104A
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 1279     	MOVR	r0x104A,W
                                    1- 1280     	BANKSEL	r0x1049
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1281     	SUBAR	r0x1049,W
     0014 0803                      1- 1282     	BTRSS	STATUS,0
                                    1- 1283     	MGOTO	_00745_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1284     	.line	766, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1285     	BSR	_ADMDbits,6
                                    1- 1286     	.line	767, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1287     	MCALL	_F_wait_eoc
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1288     	.line	768, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1289     	MOVIA	0x0f
     0019 10rr                      1- 1290     	ANDAR	_ADR,W
                                    1- 1291     ;;3	MOVAR	r0x104B
                                    1- 1292     	BANKSEL	_R_AIN3_DATA_LB
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 03rr                      1- 1293     	ADDAR	_R_AIN3_DATA_LB,F
                                    1- 1294     	.line	769, "main.c"; 	R_AIN3_DATA    += ADD; 
     001C 01rr                      1- 1295     	MOVR	_ADD,W
                                    1- 1296     	BANKSEL	r0x104B
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 00rr                      1- 1297     	MOVAR	r0x104B
                                    1- 1298     ;;1	CLRR	r0x104C
                                    1- 1299     ;;109	MOVR	r0x104B,W
                                    1- 1300     ;;107	MOVAR	r0x104D
     001F 2100                      1- 1301     	MOVIA	0x00
                                    1- 1302     	BANKSEL	r0x104E
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 1303     	MOVAR	r0x104E
                                    1- 1304     ;;108	MOVR	r0x104D,W
                                    1- 1305     	BANKSEL	r0x104B
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 1306     	MOVR	r0x104B,W
                                    1- 1307     	BANKSEL	_R_AIN3_DATA
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 03rr                      1- 1308     	ADDAR	_R_AIN3_DATA,F
                                    1- 1309     	BANKSEL	r0x104E
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 1310     	MOVR	r0x104E,W
     0028 0C03                      1- 1311     	BTRSC	STATUS,0
     0029 05rr                      1- 1312     	INCR	r0x104E,W
     002A 0D03                      1- 1313     	BTRSC	STATUS,2
                                    1- 1314     	MGOTO	_00003_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1315     	BANKSEL	_R_AIN3_DATA
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 03rr                      1- 1316     	ADDAR	(_R_AIN3_DATA + 1),F
     002E                           1- 1317     _00003_DS_:
                                    1- 1318     	.line	764, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1319     	BANKSEL	r0x104A
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 05rr                      1- 1320     	INCR	r0x104A,F
                                    1- 1321     	MGOTO	_00743_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 1322     _00745_DS_:
                                    1- 1323     	.line	771, "main.c"; 	}
                                    1- 1324     	RETURN	
     0031 0010                      3-   40 m1      ret
                                    1- 1325     ; exit point of _F_AIN3_Convert
                                    1- 1327     ;***
                                    1- 1328     ;  pBlock Stats: dbName = C
                                    1- 1329     ;***
                                    1- 1330     ;has an exit
                                    1- 1331     ;functions called:
                                    1- 1332     ;   _delay
                                    1- 1333     ;   _F_wait_eoc
                                    1- 1334     ;   _delay
                                    1- 1335     ;   _F_wait_eoc
                                    1- 1336     ;7 compiler assigned registers:
                                    1- 1337     ;   r0x104F
                                    1- 1338     ;   STK00
                                    1- 1339     ;   r0x1050
                                    1- 1340     ;   r0x1051
                                    1- 1341     ;   r0x1052
                                    1- 1342     ;   r0x1053
                                    1- 1343     ;   r0x1054
                                    1- 1344     ;; Starting pCode block
                                    1- 1345     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1347     ;local variable name mapping:
     0000                           1- 1350     _F_AIN4_Convert:
                                    1- 1351     ; 2 exit points
                                    1- 1352     	.line	743, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1353     	BANKSEL	r0x104F
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1354     	MOVAR	r0x104F
                                    1- 1355     	.line	745, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1356     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1357     	CLRR	_R_AIN4_DATA_LB
                                    1- 1358     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1359     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1360     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1361     	.line	747, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1362     	MOVIA	0x94
     0008 00rr                      1- 1363     	MOVAR	_ADMD
                                    1- 1364     	.line	748, "main.c"; 	delay(200);	
     0009 21C8                      1- 1365     	MOVIA	0xc8
     000A 00rr                      1- 1366     	MOVAR	STK00
     000B 2100                      1- 1367     	MOVIA	0x00
                                    1- 1368     	MCALL	_delay
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1369     	.line	749, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1370     	MOVIA	0x01
                                    1- 1371     	BANKSEL	r0x1050
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1- 1372     	MOVAR	r0x1050
     0010                           1- 1373     _00734_DS_:
                                    1- 1374     	BANKSEL	r0x1050
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 1375     	MOVR	r0x1050,W
                                    1- 1376     	BANKSEL	r0x104F
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1377     	SUBAR	r0x104F,W
     0014 0803                      1- 1378     	BTRSS	STATUS,0
                                    1- 1379     	MGOTO	_00736_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1380     	.line	751, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1381     	BSR	_ADMDbits,6
                                    1- 1382     	.line	752, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1383     	MCALL	_F_wait_eoc
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1384     	.line	753, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1385     	MOVIA	0x0f
     0019 10rr                      1- 1386     	ANDAR	_ADR,W
                                    1- 1387     ;;3	MOVAR	r0x1051
                                    1- 1388     	BANKSEL	_R_AIN4_DATA_LB
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 03rr                      1- 1389     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1390     	.line	754, "main.c"; 	R_AIN4_DATA    += ADD; 
     001C 01rr                      1- 1391     	MOVR	_ADD,W
                                    1- 1392     	BANKSEL	r0x1051
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 00rr                      1- 1393     	MOVAR	r0x1051
                                    1- 1394     ;;1	CLRR	r0x1052
                                    1- 1395     ;;106	MOVR	r0x1051,W
                                    1- 1396     ;;104	MOVAR	r0x1053
     001F 2100                      1- 1397     	MOVIA	0x00
                                    1- 1398     	BANKSEL	r0x1054
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 1399     	MOVAR	r0x1054
                                    1- 1400     ;;105	MOVR	r0x1053,W
                                    1- 1401     	BANKSEL	r0x1051
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 1402     	MOVR	r0x1051,W
                                    1- 1403     	BANKSEL	_R_AIN4_DATA
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 03rr                      1- 1404     	ADDAR	_R_AIN4_DATA,F
                                    1- 1405     	BANKSEL	r0x1054
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 1406     	MOVR	r0x1054,W
     0028 0C03                      1- 1407     	BTRSC	STATUS,0
     0029 05rr                      1- 1408     	INCR	r0x1054,W
     002A 0D03                      1- 1409     	BTRSC	STATUS,2
                                    1- 1410     	MGOTO	_00004_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1411     	BANKSEL	_R_AIN4_DATA
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 03rr                      1- 1412     	ADDAR	(_R_AIN4_DATA + 1),F
     002E                           1- 1413     _00004_DS_:
                                    1- 1414     	.line	749, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1415     	BANKSEL	r0x1050
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 05rr                      1- 1416     	INCR	r0x1050,F
                                    1- 1417     	MGOTO	_00734_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 1418     _00736_DS_:
                                    1- 1419     	.line	756, "main.c"; 	}
                                    1- 1420     	RETURN	
     0031 0010                      3-   40 m1      ret
                                    1- 1421     ; exit point of _F_AIN4_Convert
                                    1- 1423     ;***
                                    1- 1424     ;  pBlock Stats: dbName = C
                                    1- 1425     ;***
                                    1- 1426     ;has an exit
                                    1- 1427     ;functions called:
                                    1- 1428     ;   _F_AIN4_Convert
                                    1- 1429     ;   __mulchar
                                    1- 1430     ;   __mulchar
                                    1- 1431     ;   _F_AIN4_Convert
                                    1- 1432     ;   __mulchar
                                    1- 1433     ;   __mulchar
                                    1- 1434     ;5 compiler assigned registers:
                                    1- 1435     ;   r0x1055
                                    1- 1436     ;   r0x1056
                                    1- 1437     ;   r0x1057
                                    1- 1438     ;   r0x1058
                                    1- 1439     ;   STK00
                                    1- 1440     ;; Starting pCode block
                                    1- 1441     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1443     _checkOutA:
                                    1- 1444     ; 2 exit points
                                    1- 1445     	.line	673, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1446     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1447     	CLRR	_R_AIN4_DATA_LB
                                    1- 1448     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1449     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1450     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1451     	.line	674, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1452     	MOVIA	0x08
                                    1- 1453     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1454     	.line	675, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1455     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1456     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1457     	ANDIA	0xf0
     000A 00rr                      1- 1458     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1459     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1460     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1461     	ANDIA	0x0f
     000E 11rr                      1- 1462     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1463     	XORAR	_R_AIN4_DATA,F
                                    1- 1464     	.line	676, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1465     	MOVIA	0xf0
                                    1- 1466     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1467     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1468     	.line	677, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1469     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1470     	BANKSEL	r0x1055
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1471     	MOVAR	r0x1055
                                    1- 1472     ;;1	CLRR	r0x1056
                                    1- 1473     ;;103	MOVR	r0x1055,W
                                    1- 1474     ;;101	MOVAR	r0x1057
     0016 2100                      1- 1475     	MOVIA	0x00
                                    1- 1476     	BANKSEL	r0x1058
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1477     	MOVAR	r0x1058
                                    1- 1478     ;;102	MOVR	r0x1057,W
                                    1- 1479     	BANKSEL	r0x1055
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1480     	MOVR	r0x1055,W
                                    1- 1481     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1482     	ADDAR	_R_AIN4_DATA,F
                                    1- 1483     	BANKSEL	r0x1058
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1484     	MOVR	r0x1058,W
     001F 0C03                      1- 1485     	BTRSC	STATUS,0
     0020 05rr                      1- 1486     	INCR	r0x1058,W
     0021 0D03                      1- 1487     	BTRSC	STATUS,2
                                    1- 1488     	MGOTO	_00005_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1489     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1490     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1491     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1492     _00005_DS_:
                                    1- 1493     	.line	678, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1494     	BCR	STATUS,0
                                    1- 1495     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1496     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1497     	RRR	_R_AIN4_DATA,F
                                    1- 1498     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1499     	BCR	STATUS,0
     002A 13rr                      1- 1500     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1501     	RRR	_R_AIN4_DATA,F
                                    1- 1502     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1503     	BCR	STATUS,0
     002D 13rr                      1- 1504     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1505     	RRR	_R_AIN4_DATA,F
                                    1- 1506     	.line	679, "main.c"; 	if(debug)
                                    1- 1507     	BANKSEL	_debug
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1508     	MOVR	_debug,W
     0031 0D03                      1- 1509     	BTRSC	STATUS,2
                                    1- 1510     	MGOTO	_00645_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1511     	.line	680, "main.c"; 	R_AIN4_DATA = OUTA;
     0033 212D                      1- 1512     	MOVIA	0x2d
                                    1- 1513     	BANKSEL	_R_AIN4_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1514     	MOVAR	_R_AIN4_DATA
     0036 2101                      1- 1515     	MOVIA	0x01
     0037 00rr                      1- 1516     	MOVAR	(_R_AIN4_DATA + 1)
                                    1- 1517     ;;unsigned compare: left < lit (0x6=6), size=1
     0038                           1- 1518     _00645_DS_:
                                    1- 1519     	.line	681, "main.c"; 	if(workStep < 6 && R_AIN4_DATA > 200)
     0038 2106                      1- 1520     	MOVIA	0x06
                                    1- 1521     	BANKSEL	_workStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1522     	SUBAR	_workStep,W
     003B 0C03                      1- 1523     	BTRSC	STATUS,0
                                    1- 1524     	MGOTO	_00672_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1525     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1526     ;;unsigned compare: left >= lit (0xC9=201), size=2
     003D 2100                      1- 1527     	MOVIA	0x00
                                    1- 1528     	BANKSEL	_R_AIN4_DATA
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 04rr                      1- 1529     	SUBAR	(_R_AIN4_DATA + 1),W
     0040 0903                      1- 1530     	BTRSS	STATUS,2
                                    1- 1531     	MGOTO	_00720_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042 21C9                      1- 1532     	MOVIA	0xc9
     0043 04rr                      1- 1533     	SUBAR	_R_AIN4_DATA,W
     0044                           1- 1534     _00720_DS_:
     0044 0803                      1- 1535     	BTRSS	STATUS,0
                                    1- 1536     	MGOTO	_00672_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1537     	.line	683, "main.c"; 	if(++overCount > 5)
                                    1- 1538     	BANKSEL	_overCount
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 05rr                      1- 1539     	INCR	_overCount,F
                                    1- 1540     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1541     ;;unsigned compare: left >= lit (0x6=6), size=1
     0048 2106                      1- 1542     	MOVIA	0x06
     0049 04rr                      1- 1543     	SUBAR	_overCount,W
     004A 0803                      1- 1544     	BTRSS	STATUS,0
                                    1- 1545     	MGOTO	_00675_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1546     	.line	685, "main.c"; 	overCount = 5;
     004C 2105                      1- 1547     	MOVIA	0x05
     004D 00rr                      1- 1548     	MOVAR	_overCount
                                    1- 1549     	MGOTO	_00675_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1550     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1551     ;;unsigned compare: left >= lit (0x191=401), size=2
     004F                           1- 1552     _00672_DS_:
                                    1- 1553     	.line	688, "main.c"; 	else if(R_AIN4_DATA > 400)
     004F 2101                      1- 1554     	MOVIA	0x01
                                    1- 1555     	BANKSEL	_R_AIN4_DATA
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 04rr                      1- 1556     	SUBAR	(_R_AIN4_DATA + 1),W
     0052 0903                      1- 1557     	BTRSS	STATUS,2
                                    1- 1558     	MGOTO	_00722_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
     0054 2191                      1- 1559     	MOVIA	0x91
     0055 04rr                      1- 1560     	SUBAR	_R_AIN4_DATA,W
     0056                           1- 1561     _00722_DS_:
     0056 0803                      1- 1562     	BTRSS	STATUS,0
                                    1- 1563     	MGOTO	_00669_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1564     	.line	690, "main.c"; 	if(++overCount > 5)
                                    1- 1565     	BANKSEL	_overCount
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 05rr                      1- 1566     	INCR	_overCount,F
                                    1- 1567     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1568     ;;unsigned compare: left >= lit (0x6=6), size=1
     005A 2106                      1- 1569     	MOVIA	0x06
     005B 04rr                      1- 1570     	SUBAR	_overCount,W
     005C 0803                      1- 1571     	BTRSS	STATUS,0
                                    1- 1572     	MGOTO	_00675_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1573     	.line	692, "main.c"; 	overCount = 5;
     005E 2105                      1- 1574     	MOVIA	0x05
     005F 00rr                      1- 1575     	MOVAR	_overCount
                                    1- 1576     	MGOTO	_00675_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1577     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1578     ;;unsigned compare: left >= lit (0x2E=46), size=2
     0061                           1- 1579     _00669_DS_:
                                    1- 1580     	.line	700, "main.c"; 	else if(R_AIN4_DATA > 45)
     0061 2100                      1- 1581     	MOVIA	0x00
                                    1- 1582     	BANKSEL	_R_AIN4_DATA
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 04rr                      1- 1583     	SUBAR	(_R_AIN4_DATA + 1),W
     0064 0903                      1- 1584     	BTRSS	STATUS,2
                                    1- 1585     	MGOTO	_00724_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
     0066 212E                      1- 1586     	MOVIA	0x2e
     0067 04rr                      1- 1587     	SUBAR	_R_AIN4_DATA,W
     0068                           1- 1588     _00724_DS_:
     0068 0803                      1- 1589     	BTRSS	STATUS,0
                                    1- 1590     	MGOTO	_00666_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1591     	.line	702, "main.c"; 	if(overCount > 0)
                                    1- 1592     	BANKSEL	_overCount
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 01rr                      1- 1593     	MOVR	_overCount,W
     006C 0903                      1- 1594     	BTRSS	STATUS,2
                                    1- 1595     	.line	704, "main.c"; 	overCount--;
     006D 06rr                      1- 1596     	DECR	_overCount,F
                                    1- 1597     	.line	707, "main.c"; 	tempDuty = 70 + workStep*5;
     006E 2105                      1- 1598     	MOVIA	0x05
     006F 00rr                      1- 1599     	MOVAR	STK00
                                    1- 1600     	BANKSEL	_workStep
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 01rr                      1- 1601     	MOVR	_workStep,W
                                    1- 1602     	MCALL	__mulchar
     0072 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1603     	BANKSEL	r0x1055
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 00rr                      1- 1604     	MOVAR	r0x1055
     0075 2146                      1- 1605     	MOVIA	0x46
     0076 03rr                      1- 1606     	ADDAR	r0x1055,W
                                    1- 1607     	BANKSEL	_tempDuty
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 00rr                      1- 1608     	MOVAR	_tempDuty
                                    1- 1609     	.line	710, "main.c"; 	if(workStep == 1)
                                    1- 1610     	BANKSEL	_workStep
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 01rr                      1- 1611     	MOVR	_workStep,W
     007B 2401                      1- 1612     	XORIA	0x01
     007C 0903                      1- 1613     	BTRSS	STATUS,2
                                    1- 1614     	MGOTO	_00655_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1615     	.line	711, "main.c"; 	tempDuty = tempDuty + 2;
                                    1- 1616     	BANKSEL	_tempDuty
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 05rr                      1- 1617     	INCR	_tempDuty,F
     0080 05rr                      1- 1618     	INCR	_tempDuty,F
                                    1- 1619     	MGOTO	_00675_DS_
     0081 3rrr                      3-   63 m1      LGOTO rom_address
     0082                           1- 1620     _00655_DS_:
                                    1- 1621     	.line	712, "main.c"; 	else if(workStep == 2)
                                    1- 1622     	BANKSEL	_workStep
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 01rr                      1- 1623     	MOVR	_workStep,W
     0084 2402                      1- 1624     	XORIA	0x02
     0085 0903                      1- 1625     	BTRSS	STATUS,2
                                    1- 1626     	MGOTO	_00675_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1627     	.line	713, "main.c"; 	tempDuty = tempDuty + 1;
                                    1- 1628     	BANKSEL	_tempDuty
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 05rr                      1- 1629     	INCR	_tempDuty,F
                                    1- 1630     	MGOTO	_00675_DS_
     0089 3rrr                      3-   63 m1      LGOTO rom_address
     008A                           1- 1631     _00666_DS_:
                                    1- 1632     	.line	717, "main.c"; 	if(overCount > 0)
                                    1- 1633     	BANKSEL	_overCount
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 01rr                      1- 1634     	MOVR	_overCount,W
     008C 0903                      1- 1635     	BTRSS	STATUS,2
                                    1- 1636     	.line	719, "main.c"; 	overCount--;
     008D 06rr                      1- 1637     	DECR	_overCount,F
                                    1- 1638     	.line	721, "main.c"; 	if(R_AIN4_DATA > 40 && workStep < 4)
     008E 2100                      1- 1639     	MOVIA	0x00
                                    1- 1640     	BANKSEL	_R_AIN4_DATA
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 04rr                      1- 1641     	SUBAR	(_R_AIN4_DATA + 1),W
     0091 0903                      1- 1642     	BTRSS	STATUS,2
                                    1- 1643     	MGOTO	_00725_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
     0093 2129                      1- 1644     	MOVIA	0x29
     0094 04rr                      1- 1645     	SUBAR	_R_AIN4_DATA,W
     0095                           1- 1646     _00725_DS_:
     0095 0803                      1- 1647     	BTRSS	STATUS,0
                                    1- 1648     	MGOTO	_00662_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1649     ;;unsigned compare: left < lit (0x4=4), size=1
     0097 2104                      1- 1650     	MOVIA	0x04
                                    1- 1651     	BANKSEL	_workStep
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 04rr                      1- 1652     	SUBAR	_workStep,W
     009A 0C03                      1- 1653     	BTRSC	STATUS,0
                                    1- 1654     	MGOTO	_00662_DS_
     009B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1655     	.line	723, "main.c"; 	tempDuty = 70 + workStep*5;
     009C 2105                      1- 1656     	MOVIA	0x05
     009D 00rr                      1- 1657     	MOVAR	STK00
     009E 01rr                      1- 1658     	MOVR	_workStep,W
                                    1- 1659     	MCALL	__mulchar
     009F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1660     	BANKSEL	r0x1055
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 00rr                      1- 1661     	MOVAR	r0x1055
     00A2 2146                      1- 1662     	MOVIA	0x46
     00A3 03rr                      1- 1663     	ADDAR	r0x1055,W
                                    1- 1664     	BANKSEL	_tempDuty
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 00rr                      1- 1665     	MOVAR	_tempDuty
                                    1- 1666     	MGOTO	_00675_DS_
     00A6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1667     ;;unsigned compare: left < lit (0x44=68), size=2
     00A7                           1- 1668     _00662_DS_:
                                    1- 1669     	.line	726, "main.c"; 	else if(R_AIN4_DATA < 68)
     00A7 2100                      1- 1670     	MOVIA	0x00
                                    1- 1671     	BANKSEL	_R_AIN4_DATA
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 04rr                      1- 1672     	SUBAR	(_R_AIN4_DATA + 1),W
     00AA 0903                      1- 1673     	BTRSS	STATUS,2
                                    1- 1674     	MGOTO	_00727_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
     00AC 2144                      1- 1675     	MOVIA	0x44
     00AD 04rr                      1- 1676     	SUBAR	_R_AIN4_DATA,W
     00AE                           1- 1677     _00727_DS_:
     00AE 0C03                      1- 1678     	BTRSC	STATUS,0
                                    1- 1679     	MGOTO	_00675_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1680     	.line	729, "main.c"; 	tempDuty = maxDuty;
                                    1- 1681     	BANKSEL	_maxDuty
     00B0 rrrr                      3-  110 m1      .banksel ram_address
     00B1 01rr                      1- 1682     	MOVR	_maxDuty,W
                                    1- 1683     	BANKSEL	_tempDuty
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 00rr                      1- 1684     	MOVAR	_tempDuty
     00B4                           1- 1685     _00675_DS_:
                                    1- 1686     	.line	737, "main.c"; 	}
                                    1- 1687     	RETURN	
     00B4 0010                      3-   40 m1      ret
                                    1- 1688     ; exit point of _checkOutA
                                    1- 1690     ;***
                                    1- 1691     ;  pBlock Stats: dbName = C
                                    1- 1692     ;***
                                    1- 1693     ;has an exit
                                    1- 1694     ;functions called:
                                    1- 1695     ;   _F_AIN2_Convert
                                    1- 1696     ;   _F_AIN2_Convert
                                    1- 1697     ;6 compiler assigned registers:
                                    1- 1698     ;   r0x1059
                                    1- 1699     ;   r0x105A
                                    1- 1700     ;   r0x105B
                                    1- 1701     ;   r0x105C
                                    1- 1702     ;   r0x105D
                                    1- 1703     ;   r0x105E
                                    1- 1704     ;; Starting pCode block
                                    1- 1705     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1707     _checkBatAD:
                                    1- 1708     ; 2 exit points
                                    1- 1709     	.line	621, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1710     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1711     	CLRR	_R_AIN2_DATA_LB
                                    1- 1712     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1713     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1714     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1715     	.line	622, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1716     	MOVIA	0x08
                                    1- 1717     	MCALL	_F_AIN2_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1718     	.line	623, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1719     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1720     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1721     	ANDIA	0xf0
     000A 00rr                      1- 1722     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1723     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1724     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1725     	ANDIA	0x0f
     000E 11rr                      1- 1726     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1727     	XORAR	_R_AIN2_DATA,F
                                    1- 1728     	.line	624, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1729     	MOVIA	0xf0
                                    1- 1730     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1731     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1732     	.line	625, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1733     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1734     	BANKSEL	r0x105B
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1735     	MOVAR	r0x105B
                                    1- 1736     	BANKSEL	r0x1059
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1737     	MOVAR	r0x1059
                                    1- 1738     	BANKSEL	r0x105A
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 1739     	CLRR	r0x105A
                                    1- 1740     ;;113	MOVR	r0x1059,W
     001A 2100                      1- 1741     	MOVIA	0x00
                                    1- 1742     	BANKSEL	r0x105C
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1743     	MOVAR	r0x105C
                                    1- 1744     	BANKSEL	r0x105B
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1745     	MOVR	r0x105B,W
                                    1- 1746     	BANKSEL	_R_AIN2_DATA
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 03rr                      1- 1747     	ADDAR	_R_AIN2_DATA,F
                                    1- 1748     	BANKSEL	r0x105C
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1749     	MOVR	r0x105C,W
     0023 0C03                      1- 1750     	BTRSC	STATUS,0
     0024 05rr                      1- 1751     	INCR	r0x105C,W
     0025 0D03                      1- 1752     	BTRSC	STATUS,2
                                    1- 1753     	MGOTO	_00006_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1754     	BANKSEL	_R_AIN2_DATA
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 03rr                      1- 1755     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1756     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029                           1- 1757     _00006_DS_:
                                    1- 1758     	.line	626, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0029 1C03                      1- 1759     	BCR	STATUS,0
                                    1- 1760     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 13rr                      1- 1761     	RRR	(_R_AIN2_DATA + 1),F
     002C 13rr                      1- 1762     	RRR	_R_AIN2_DATA,F
                                    1- 1763     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002D 1C03                      1- 1764     	BCR	STATUS,0
     002E 13rr                      1- 1765     	RRR	(_R_AIN2_DATA + 1),F
     002F 13rr                      1- 1766     	RRR	_R_AIN2_DATA,F
                                    1- 1767     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0030 1C03                      1- 1768     	BCR	STATUS,0
     0031 13rr                      1- 1769     	RRR	(_R_AIN2_DATA + 1),F
     0032 13rr                      1- 1770     	RRR	_R_AIN2_DATA,F
                                    1- 1771     	.line	627, "main.c"; 	if(debug)
                                    1- 1772     	BANKSEL	_debug
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 1773     	MOVR	_debug,W
     0035 0D03                      1- 1774     	BTRSC	STATUS,2
                                    1- 1775     	MGOTO	_00583_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1776     	.line	628, "main.c"; 	R_AIN2_DATA = BATTLE;
     0037 210E                      1- 1777     	MOVIA	0x0e
                                    1- 1778     	BANKSEL	_R_AIN2_DATA
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 00rr                      1- 1779     	MOVAR	_R_AIN2_DATA
     003A 2106                      1- 1780     	MOVIA	0x06
     003B 00rr                      1- 1781     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1782     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1783     ;;unsigned compare: left >= lit (0x614=1556), size=2
     003C                           1- 1784     _00583_DS_:
                                    1- 1785     	.line	630, "main.c"; 	if(R_AIN2_DATA > 1555)
     003C 2106                      1- 1786     	MOVIA	0x06
                                    1- 1787     	BANKSEL	_R_AIN2_DATA
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 04rr                      1- 1788     	SUBAR	(_R_AIN2_DATA + 1),W
     003F 0903                      1- 1789     	BTRSS	STATUS,2
                                    1- 1790     	MGOTO	_00634_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041 2114                      1- 1791     	MOVIA	0x14
     0042 04rr                      1- 1792     	SUBAR	_R_AIN2_DATA,W
     0043                           1- 1793     _00634_DS_:
     0043 0803                      1- 1794     	BTRSS	STATUS,0
                                    1- 1795     	MGOTO	_00589_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1796     	.line	633, "main.c"; 	lowCount = 0;
                                    1- 1797     	BANKSEL	_lowCount
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 02rr                      1- 1798     	CLRR	_lowCount
                                    1- 1799     	MGOTO	_00590_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1800     ;;unsigned compare: left < lit (0x483=1155), size=2
     0048                           1- 1801     _00589_DS_:
                                    1- 1802     	.line	635, "main.c"; 	else if(R_AIN2_DATA < 1155)
     0048 2104                      1- 1803     	MOVIA	0x04
                                    1- 1804     	BANKSEL	_R_AIN2_DATA
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 04rr                      1- 1805     	SUBAR	(_R_AIN2_DATA + 1),W
     004B 0903                      1- 1806     	BTRSS	STATUS,2
                                    1- 1807     	MGOTO	_00635_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
     004D 2183                      1- 1808     	MOVIA	0x83
     004E 04rr                      1- 1809     	SUBAR	_R_AIN2_DATA,W
     004F                           1- 1810     _00635_DS_:
     004F 0C03                      1- 1811     	BTRSC	STATUS,0
                                    1- 1812     	MGOTO	_00590_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1813     	.line	637, "main.c"; 	if(++lowCount < 10)
                                    1- 1814     	BANKSEL	_lowCount
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 05rr                      1- 1815     	INCR	_lowCount,F
                                    1- 1816     ;;unsigned compare: left < lit (0xA=10), size=1
     0053 210A                      1- 1817     	MOVIA	0x0a
     0054 04rr                      1- 1818     	SUBAR	_lowCount,W
     0055 0803                      1- 1819     	BTRSS	STATUS,0
                                    1- 1820     	.line	638, "main.c"; 	return;
                                    1- 1821     	MGOTO	_00605_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1822     	.line	639, "main.c"; 	lowCount = 10;
     0057 210A                      1- 1823     	MOVIA	0x0a
     0058 00rr                      1- 1824     	MOVAR	_lowCount
                                    1- 1825     	.line	640, "main.c"; 	pwStep = 0;
                                    1- 1826     	BANKSEL	_pwStep
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 02rr                      1- 1827     	CLRR	_pwStep
                                    1- 1828     	.line	641, "main.c"; 	R_AIN2_DATA = 1155;
     005B 2183                      1- 1829     	MOVIA	0x83
                                    1- 1830     	BANKSEL	_R_AIN2_DATA
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 00rr                      1- 1831     	MOVAR	_R_AIN2_DATA
     005E 2104                      1- 1832     	MOVIA	0x04
     005F 00rr                      1- 1833     	MOVAR	(_R_AIN2_DATA + 1)
     0060                           1- 1834     _00590_DS_:
                                    1- 1835     	.line	644, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA - 1155;
     0060 217D                      1- 1836     	MOVIA	0x7d
                                    1- 1837     	BANKSEL	_R_AIN2_DATA
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 03rr                      1- 1838     	ADDAR	_R_AIN2_DATA,F
     0063 21FB                      1- 1839     	MOVIA	0xfb
     0064 0C03                      1- 1840     	BTRSC	STATUS,0
     0065 21FC                      1- 1841     	MOVIA	0xfc
     0066 03rr                      1- 1842     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1843     ;;unsigned compare: left < lit (0x190=400), size=2
                                    1- 1844     	.line	645, "main.c"; 	if(R_AIN2_DATA >= 400)
     0067 2101                      1- 1845     	MOVIA	0x01
     0068 04rr                      1- 1846     	SUBAR	(_R_AIN2_DATA + 1),W
     0069 0903                      1- 1847     	BTRSS	STATUS,2
                                    1- 1848     	MGOTO	_00637_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
     006B 2190                      1- 1849     	MOVIA	0x90
     006C 04rr                      1- 1850     	SUBAR	_R_AIN2_DATA,W
     006D                           1- 1851     _00637_DS_:
     006D 0803                      1- 1852     	BTRSS	STATUS,0
                                    1- 1853     	MGOTO	_00598_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1854     	.line	648, "main.c"; 	batValue = 75+(R_AIN2_DATA-300)/4;
     006F 21D4                      1- 1855     	MOVIA	0xd4
                                    1- 1856     	BANKSEL	_R_AIN2_DATA
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 03rr                      1- 1857     	ADDAR	_R_AIN2_DATA,W
                                    1- 1858     	BANKSEL	r0x1059
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 00rr                      1- 1859     	MOVAR	r0x1059
     0074 21FE                      1- 1860     	MOVIA	0xfe
                                    1- 1861     	BANKSEL	r0x105A
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 00rr                      1- 1862     	MOVAR	r0x105A
                                    1- 1863     	BANKSEL	_R_AIN2_DATA
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 01rr                      1- 1864     	MOVR	(_R_AIN2_DATA + 1),W
     0079 0C03                      1- 1865     	BTRSC	STATUS,0
     007A 05rr                      1- 1866     	INCR	(_R_AIN2_DATA + 1),W
     007B 0D03                      1- 1867     	BTRSC	STATUS,2
                                    1- 1868     	MGOTO	_00007_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1869     	BANKSEL	r0x105A
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 03rr                      1- 1870     	ADDAR	r0x105A,F
                                    1- 1871     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     007F                           1- 1872     _00007_DS_:
     007F 1C03                      1- 1873     	BCR	STATUS,0
                                    1- 1874     	BANKSEL	r0x105A
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 13rr                      1- 1875     	RRR	r0x105A,W
                                    1- 1876     	BANKSEL	r0x105C
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 00rr                      1- 1877     	MOVAR	r0x105C
                                    1- 1878     	BANKSEL	r0x1059
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 13rr                      1- 1879     	RRR	r0x1059,W
                                    1- 1880     	BANKSEL	r0x105B
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 00rr                      1- 1881     	MOVAR	r0x105B
                                    1- 1882     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0088 1C03                      1- 1883     	BCR	STATUS,0
                                    1- 1884     	BANKSEL	r0x105C
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 13rr                      1- 1885     	RRR	r0x105C,F
                                    1- 1886     	BANKSEL	r0x105B
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 13rr                      1- 1887     	RRR	r0x105B,F
     008D 01rr                      1- 1888     	MOVR	r0x105B,W
                                    1- 1889     	BANKSEL	r0x1059
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 00rr                      1- 1890     	MOVAR	r0x1059
     0090 214B                      1- 1891     	MOVIA	0x4b
     0091 03rr                      1- 1892     	ADDAR	r0x1059,W
                                    1- 1893     	BANKSEL	_batValue
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 00rr                      1- 1894     	MOVAR	_batValue
                                    1- 1895     	MGOTO	_00599_DS_
     0094 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1896     ;;unsigned compare: left < lit (0x12C=300), size=2
     0095                           1- 1897     _00598_DS_:
                                    1- 1898     	.line	650, "main.c"; 	else if(R_AIN2_DATA >= 300)
     0095 2101                      1- 1899     	MOVIA	0x01
                                    1- 1900     	BANKSEL	_R_AIN2_DATA
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 04rr                      1- 1901     	SUBAR	(_R_AIN2_DATA + 1),W
     0098 0903                      1- 1902     	BTRSS	STATUS,2
                                    1- 1903     	MGOTO	_00638_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
     009A 212C                      1- 1904     	MOVIA	0x2c
     009B 04rr                      1- 1905     	SUBAR	_R_AIN2_DATA,W
     009C                           1- 1906     _00638_DS_:
     009C 0803                      1- 1907     	BTRSS	STATUS,0
                                    1- 1908     	MGOTO	_00595_DS_
     009D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1909     	.line	652, "main.c"; 	batValue = 50+(R_AIN2_DATA-300)/2;
     009E 21D4                      1- 1910     	MOVIA	0xd4
                                    1- 1911     	BANKSEL	_R_AIN2_DATA
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 03rr                      1- 1912     	ADDAR	_R_AIN2_DATA,W
                                    1- 1913     	BANKSEL	r0x1059
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 00rr                      1- 1914     	MOVAR	r0x1059
     00A3 21FE                      1- 1915     	MOVIA	0xfe
                                    1- 1916     	BANKSEL	r0x105B
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 00rr                      1- 1917     	MOVAR	r0x105B
                                    1- 1918     	BANKSEL	_R_AIN2_DATA
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 01rr                      1- 1919     	MOVR	(_R_AIN2_DATA + 1),W
     00A8 0C03                      1- 1920     	BTRSC	STATUS,0
     00A9 05rr                      1- 1921     	INCR	(_R_AIN2_DATA + 1),W
     00AA 0D03                      1- 1922     	BTRSC	STATUS,2
                                    1- 1923     	MGOTO	_00008_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1924     	BANKSEL	r0x105B
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 03rr                      1- 1925     	ADDAR	r0x105B,F
                                    1- 1926     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     00AE                           1- 1927     _00008_DS_:
     00AE 1C03                      1- 1928     	BCR	STATUS,0
                                    1- 1929     	BANKSEL	r0x105B
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 13rr                      1- 1930     	RRR	r0x105B,W
                                    1- 1931     	BANKSEL	r0x105D
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 00rr                      1- 1932     	MOVAR	r0x105D
                                    1- 1933     	BANKSEL	r0x1059
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 13rr                      1- 1934     	RRR	r0x1059,W
                                    1- 1935     	BANKSEL	r0x105C
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 00rr                      1- 1936     	MOVAR	r0x105C
                                    1- 1937     	BANKSEL	r0x1059
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 00rr                      1- 1938     	MOVAR	r0x1059
     00B9 2132                      1- 1939     	MOVIA	0x32
     00BA 03rr                      1- 1940     	ADDAR	r0x1059,W
                                    1- 1941     	BANKSEL	_batValue
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 00rr                      1- 1942     	MOVAR	_batValue
                                    1- 1943     	MGOTO	_00599_DS_
     00BD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1944     ;;unsigned compare: left < lit (0xC8=200), size=2
     00BE                           1- 1945     _00595_DS_:
                                    1- 1946     	.line	655, "main.c"; 	else if(R_AIN2_DATA >= 200)
     00BE 2100                      1- 1947     	MOVIA	0x00
                                    1- 1948     	BANKSEL	_R_AIN2_DATA
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 04rr                      1- 1949     	SUBAR	(_R_AIN2_DATA + 1),W
     00C1 0903                      1- 1950     	BTRSS	STATUS,2
                                    1- 1951     	MGOTO	_00639_DS_
     00C2 3rrr                      3-   63 m1      LGOTO rom_address
     00C3 21C8                      1- 1952     	MOVIA	0xc8
     00C4 04rr                      1- 1953     	SUBAR	_R_AIN2_DATA,W
     00C5                           1- 1954     _00639_DS_:
     00C5 0803                      1- 1955     	BTRSS	STATUS,0
                                    1- 1956     	MGOTO	_00592_DS_
     00C6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1957     	.line	657, "main.c"; 	batValue = 25+(R_AIN2_DATA-200)/4;
     00C7 2138                      1- 1958     	MOVIA	0x38
                                    1- 1959     	BANKSEL	_R_AIN2_DATA
     00C8 rrrr                      3-  110 m1      .banksel ram_address
     00C9 03rr                      1- 1960     	ADDAR	_R_AIN2_DATA,W
                                    1- 1961     	BANKSEL	r0x1059
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 00rr                      1- 1962     	MOVAR	r0x1059
     00CC 21FF                      1- 1963     	MOVIA	0xff
                                    1- 1964     	BANKSEL	r0x105C
     00CD rrrr                      3-  110 m1      .banksel ram_address
     00CE 00rr                      1- 1965     	MOVAR	r0x105C
                                    1- 1966     	BANKSEL	_R_AIN2_DATA
     00CF rrrr                      3-  110 m1      .banksel ram_address
     00D0 01rr                      1- 1967     	MOVR	(_R_AIN2_DATA + 1),W
     00D1 0C03                      1- 1968     	BTRSC	STATUS,0
     00D2 05rr                      1- 1969     	INCR	(_R_AIN2_DATA + 1),W
     00D3 0D03                      1- 1970     	BTRSC	STATUS,2
                                    1- 1971     	MGOTO	_00009_DS_
     00D4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1972     	BANKSEL	r0x105C
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 03rr                      1- 1973     	ADDAR	r0x105C,F
                                    1- 1974     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     00D7                           1- 1975     _00009_DS_:
     00D7 1C03                      1- 1976     	BCR	STATUS,0
                                    1- 1977     	BANKSEL	r0x105C
     00D8 rrrr                      3-  110 m1      .banksel ram_address
     00D9 13rr                      1- 1978     	RRR	r0x105C,W
                                    1- 1979     	BANKSEL	r0x105E
     00DA rrrr                      3-  110 m1      .banksel ram_address
     00DB 00rr                      1- 1980     	MOVAR	r0x105E
                                    1- 1981     	BANKSEL	r0x1059
     00DC rrrr                      3-  110 m1      .banksel ram_address
     00DD 13rr                      1- 1982     	RRR	r0x1059,W
                                    1- 1983     	BANKSEL	r0x105D
     00DE rrrr                      3-  110 m1      .banksel ram_address
     00DF 00rr                      1- 1984     	MOVAR	r0x105D
                                    1- 1985     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00E0 1C03                      1- 1986     	BCR	STATUS,0
                                    1- 1987     	BANKSEL	r0x105E
     00E1 rrrr                      3-  110 m1      .banksel ram_address
     00E2 13rr                      1- 1988     	RRR	r0x105E,F
                                    1- 1989     	BANKSEL	r0x105D
     00E3 rrrr                      3-  110 m1      .banksel ram_address
     00E4 13rr                      1- 1990     	RRR	r0x105D,F
     00E5 01rr                      1- 1991     	MOVR	r0x105D,W
                                    1- 1992     	BANKSEL	r0x1059
     00E6 rrrr                      3-  110 m1      .banksel ram_address
     00E7 00rr                      1- 1993     	MOVAR	r0x1059
     00E8 2119                      1- 1994     	MOVIA	0x19
     00E9 03rr                      1- 1995     	ADDAR	r0x1059,W
                                    1- 1996     	BANKSEL	_batValue
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 00rr                      1- 1997     	MOVAR	_batValue
                                    1- 1998     	MGOTO	_00599_DS_
     00EC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1999     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=0, offr=0
     00ED                           1- 2000     _00592_DS_:
                                    1- 2001     	.line	661, "main.c"; 	batValue = R_AIN2_DATA/8;
     00ED 1C03                      1- 2002     	BCR	STATUS,0
                                    1- 2003     	BANKSEL	_R_AIN2_DATA
     00EE rrrr                      3-  110 m1      .banksel ram_address
     00EF 13rr                      1- 2004     	RRR	(_R_AIN2_DATA + 1),W
                                    1- 2005     	BANKSEL	r0x105D
     00F0 rrrr                      3-  110 m1      .banksel ram_address
     00F1 00rr                      1- 2006     	MOVAR	r0x105D
                                    1- 2007     	BANKSEL	_R_AIN2_DATA
     00F2 rrrr                      3-  110 m1      .banksel ram_address
     00F3 13rr                      1- 2008     	RRR	_R_AIN2_DATA,W
                                    1- 2009     	BANKSEL	r0x1059
     00F4 rrrr                      3-  110 m1      .banksel ram_address
     00F5 00rr                      1- 2010     	MOVAR	r0x1059
                                    1- 2011     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00F6 1C03                      1- 2012     	BCR	STATUS,0
                                    1- 2013     	BANKSEL	r0x105D
     00F7 rrrr                      3-  110 m1      .banksel ram_address
     00F8 13rr                      1- 2014     	RRR	r0x105D,F
                                    1- 2015     	BANKSEL	r0x1059
     00F9 rrrr                      3-  110 m1      .banksel ram_address
     00FA 13rr                      1- 2016     	RRR	r0x1059,F
                                    1- 2017     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     00FB 1C03                      1- 2018     	BCR	STATUS,0
                                    1- 2019     	BANKSEL	r0x105D
     00FC rrrr                      3-  110 m1      .banksel ram_address
     00FD 13rr                      1- 2020     	RRR	r0x105D,F
                                    1- 2021     	BANKSEL	r0x1059
     00FE rrrr                      3-  110 m1      .banksel ram_address
     00FF 13rr                      1- 2022     	RRR	r0x1059,F
     0100 01rr                      1- 2023     	MOVR	r0x1059,W
                                    1- 2024     	BANKSEL	_batValue
     0101 rrrr                      3-  110 m1      .banksel ram_address
     0102 00rr                      1- 2025     	MOVAR	_batValue
     0103                           1- 2026     _00599_DS_:
                                    1- 2027     	.line	663, "main.c"; 	if(0x08 & PORTA)
                                    1- 2028     	BANKSEL	_PORTA
     0103 rrrr                      3-  110 m1      .banksel ram_address
     0104 09rr                      1- 2029     	BTRSS	_PORTA,3
                                    1- 2030     	MGOTO	_00603_DS_
     0105 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2031     	.line	664, "main.c"; 	batValue = batValue - 11 +  shiweiNum;
     0106 21F5                      1- 2032     	MOVIA	0xf5
                                    1- 2033     	BANKSEL	_batValue
     0107 rrrr                      3-  110 m1      .banksel ram_address
     0108 03rr                      1- 2034     	ADDAR	_batValue,W
                                    1- 2035     	BANKSEL	r0x1059
     0109 rrrr                      3-  110 m1      .banksel ram_address
     010A 00rr                      1- 2036     	MOVAR	r0x1059
                                    1- 2037     	BANKSEL	_shiweiNum
     010B rrrr                      3-  110 m1      .banksel ram_address
     010C 01rr                      1- 2038     	MOVR	_shiweiNum,W
                                    1- 2039     	BANKSEL	r0x1059
     010D rrrr                      3-  110 m1      .banksel ram_address
     010E 03rr                      1- 2040     	ADDAR	r0x1059,W
                                    1- 2041     	BANKSEL	_batValue
     010F rrrr                      3-  110 m1      .banksel ram_address
     0110 00rr                      1- 2042     	MOVAR	_batValue
                                    1- 2043     	MGOTO	_00605_DS_
     0111 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2044     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2045     ;;unsigned compare: left >= lit (0x2=2), size=1
     0112                           1- 2046     _00603_DS_:
                                    1- 2047     	.line	665, "main.c"; 	else if(batValue > 1)
     0112 2102                      1- 2048     	MOVIA	0x02
                                    1- 2049     	BANKSEL	_batValue
     0113 rrrr                      3-  110 m1      .banksel ram_address
     0114 04rr                      1- 2050     	SUBAR	_batValue,W
     0115 0803                      1- 2051     	BTRSS	STATUS,0
                                    1- 2052     	MGOTO	_00605_DS_
     0116 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2053     	.line	666, "main.c"; 	batValue = batValue + 5 +  shiweiNum;
     0117 2105                      1- 2054     	MOVIA	0x05
     0118 03rr                      1- 2055     	ADDAR	_batValue,W
                                    1- 2056     	BANKSEL	r0x1059
     0119 rrrr                      3-  110 m1      .banksel ram_address
     011A 00rr                      1- 2057     	MOVAR	r0x1059
                                    1- 2058     	BANKSEL	_shiweiNum
     011B rrrr                      3-  110 m1      .banksel ram_address
     011C 01rr                      1- 2059     	MOVR	_shiweiNum,W
                                    1- 2060     	BANKSEL	r0x1059
     011D rrrr                      3-  110 m1      .banksel ram_address
     011E 03rr                      1- 2061     	ADDAR	r0x1059,W
                                    1- 2062     	BANKSEL	_batValue
     011F rrrr                      3-  110 m1      .banksel ram_address
     0120 00rr                      1- 2063     	MOVAR	_batValue
     0121                           1- 2064     _00605_DS_:
                                    1- 2065     	.line	667, "main.c"; 	}
                                    1- 2066     	RETURN	
     0121 0010                      3-   40 m1      ret
                                    1- 2067     ; exit point of _checkBatAD
                                    1- 2069     ;***
                                    1- 2070     ;  pBlock Stats: dbName = C
                                    1- 2071     ;***
                                    1- 2072     ;has an exit
                                    1- 2073     ;functions called:
                                    1- 2074     ;   _delay
                                    1- 2075     ;   _delay
                                    1- 2076     ;1 compiler assigned register :
                                    1- 2077     ;   STK00
                                    1- 2078     ;; Starting pCode block
                                    1- 2079     .segment "code"; module=main, function=_initAD
     0000                           1- 2081     _initAD:
                                    1- 2082     ; 2 exit points
                                    1- 2083     	.line	597, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 2084     	MOVIA	0x84
     0001 00rr                      1- 2085     	MOVAR	_ADMD
                                    1- 2086     	.line	602, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 2087     	CLRR	_ADVREFH
                                    1- 2088     	.line	607, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 2089     	MOVIA	0x10
     0004 00rr                      1- 2090     	MOVAR	_ADR
                                    1- 2091     	.line	609, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 2092     	MOVIA	0x03
     0006 00rr                      1- 2093     	MOVAR	_ADCR
                                    1- 2094     	.line	611, "main.c"; 	PACON = C_PA2_AIN2 | C_PA1_AIN1 | C_PA4_AIN4;						// Set AIN0(PA0) as pure ADC input for reduce power consumption (SFR "PACON")
     0007 2116                      1- 2095     	MOVIA	0x16
     0008 00rr                      1- 2096     	MOVAR	_PACON
                                    1- 2097     	.line	612, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0009 1Arr                      1- 2098     	BSR	_ADMDbits,4
                                    1- 2099     	.line	613, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     000A 2164                      1- 2100     	MOVIA	0x64
     000B 00rr                      1- 2101     	MOVAR	STK00
     000C 2100                      1- 2102     	MOVIA	0x00
                                    1- 2103     	MCALL	_delay
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2104     	.line	616, "main.c"; 	}
                                    1- 2105     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2106     ; exit point of _initAD
                                    1- 2108     ;***
                                    1- 2109     ;  pBlock Stats: dbName = C
                                    1- 2110     ;***
                                    1- 2111     ;has an exit
                                    1- 2112     ;1 compiler assigned register :
                                    1- 2113     ;   r0x105F
                                    1- 2114     ;; Starting pCode block
                                    1- 2115     .segment "code"; module=main, function=_keyRead
                                    1- 2117     ;local variable name mapping:
     0000                           1- 2119     _keyRead:
                                    1- 2120     ; 2 exit points
                                    1- 2121     	.line	560, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2122     	BANKSEL	r0x105F
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2123     	MOVAR	r0x105F
                                    1- 2124     	.line	562, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2125     	MOVR	r0x105F,W
     0003 0D03                      1- 2126     	BTRSC	STATUS,2
                                    1- 2127     	MGOTO	_00571_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2128     	.line	564, "main.c"; 	keyCount++;
                                    1- 2129     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2130     	INCR	_keyCount,F
                                    1- 2131     ;;unsigned compare: left < lit (0xC8=200), size=1
                                    1- 2132     	.line	565, "main.c"; 	if(keyCount >= 200)
     0007 21C8                      1- 2133     	MOVIA	0xc8
     0008 04rr                      1- 2134     	SUBAR	_keyCount,W
     0009 0803                      1- 2135     	BTRSS	STATUS,0
                                    1- 2136     	MGOTO	_00572_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2137     	.line	567, "main.c"; 	keyCount = 200;
     000B 21C8                      1- 2138     	MOVIA	0xc8
     000C 00rr                      1- 2139     	MOVAR	_keyCount
                                    1- 2140     	.line	568, "main.c"; 	if(!longPressFlag)
                                    1- 2141     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Crr                      1- 2142     	BTRSC	_Status,1
                                    1- 2143     	MGOTO	_00572_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2144     	.line	570, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 2145     	BSR	_Status,1
                                    1- 2146     	.line	571, "main.c"; 	return 2;
     0011 2102                      1- 2147     	MOVIA	0x02
                                    1- 2148     	MGOTO	_00573_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2149     ;;unsigned compare: left < lit (0xC8=200), size=1
     0013                           1- 2150     _00571_DS_:
                                    1- 2151     	.line	577, "main.c"; 	if(keyCount >= 200)
     0013 21C8                      1- 2152     	MOVIA	0xc8
                                    1- 2153     	BANKSEL	_keyCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 2154     	SUBAR	_keyCount,W
     0016 0803                      1- 2155     	BTRSS	STATUS,0
                                    1- 2156     	MGOTO	_00568_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2157     	.line	579, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 2158     	CLRR	_keyCount
                                    1- 2159     	.line	580, "main.c"; 	longPressFlag = 0;
                                    1- 2160     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Crr                      1- 2161     	BCR	_Status,1
                                    1- 2162     	.line	581, "main.c"; 	return	0;
     001B 2100                      1- 2163     	MOVIA	0x00
                                    1- 2164     	MGOTO	_00573_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2165     ;;unsigned compare: left < lit (0x4=4), size=1
     001D                           1- 2166     _00568_DS_:
                                    1- 2167     	.line	583, "main.c"; 	else if(keyCount >= 4)
     001D 2104                      1- 2168     	MOVIA	0x04
                                    1- 2169     	BANKSEL	_keyCount
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 2170     	SUBAR	_keyCount,W
     0020 0803                      1- 2171     	BTRSS	STATUS,0
                                    1- 2172     	MGOTO	_00569_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2173     	.line	585, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 2174     	CLRR	_keyCount
                                    1- 2175     	.line	586, "main.c"; 	return	1;
     0023 2101                      1- 2176     	MOVIA	0x01
                                    1- 2177     	MGOTO	_00573_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 2178     _00569_DS_:
                                    1- 2179     	.line	588, "main.c"; 	keyCount = 0;
                                    1- 2180     	BANKSEL	_keyCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 2181     	CLRR	_keyCount
     0027                           1- 2182     _00572_DS_:
                                    1- 2183     	.line	590, "main.c"; 	return 0;
     0027 2100                      1- 2184     	MOVIA	0x00
     0028                           1- 2185     _00573_DS_:
                                    1- 2186     	.line	591, "main.c"; 	}
                                    1- 2187     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 2188     ; exit point of _keyRead
                                    1- 2190     ;***
                                    1- 2191     ;  pBlock Stats: dbName = C
                                    1- 2192     ;***
                                    1- 2193     ;has an exit
                                    1- 2194     ;functions called:
                                    1- 2195     ;   _setInput
                                    1- 2196     ;   _pwmStop
                                    1- 2197     ;   _pwm1Stop
                                    1- 2198     ;   _setInput
                                    1- 2199     ;   _pwmStop
                                    1- 2200     ;   _pwm1Stop
                                    1- 2201     ;; Starting pCode block
                                    1- 2202     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2204     _gotoSleep:
                                    1- 2205     ; 2 exit points
                                    1- 2206     	.line	529, "main.c"; 	setInput();
                                    1- 2207     	MCALL	_setInput
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2208     	.line	530, "main.c"; 	count5s = 0;
                                    1- 2209     	BANKSEL	_count5s
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 02rr                      1- 2210     	CLRR	_count5s
     0003 02rr                      1- 2211     	CLRR	(_count5s + 1)
                                    1- 2212     	.line	531, "main.c"; 	showFlag = 0;
                                    1- 2213     	BANKSEL	_showFlag
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 2214     	CLRR	_showFlag
                                    1- 2215     	.line	532, "main.c"; 	IOSTA = C_PA5_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0006 212E                      1- 2216     	MOVIA	0x2e
     0007 000r                      1- 2217     	IOST	_IOSTA
                                    1- 2218     	.line	534, "main.c"; 	IOSTB = 0x00;
     0008 0200                      1- 2219     	CLRA	
     0009 000r                      1- 2220     	IOST	_IOSTB
                                    1- 2221     	.line	535, "main.c"; 	PORTB = 0x00;
     000A 02rr                      1- 2222     	CLRR	_PORTB
                                    1- 2223     	.line	536, "main.c"; 	PORTA = 0x00;
                                    1- 2224     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 02rr                      1- 2225     	CLRR	_PORTA
                                    1- 2226     	.line	537, "main.c"; 	sleepTime = 0;
                                    1- 2227     	BANKSEL	_sleepTime
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 2228     	CLRR	_sleepTime
     000F 02rr                      1- 2229     	CLRR	(_sleepTime + 1)
                                    1- 2230     	.line	539, "main.c"; 	pwmStop();
                                    1- 2231     	MCALL	_pwmStop
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2232     	.line	540, "main.c"; 	pwm1Stop();
                                    1- 2233     	MCALL	_pwm1Stop
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2234     	.line	541, "main.c"; 	workStep = 0;
                                    1- 2235     	BANKSEL	_workStep
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 02rr                      1- 2236     	CLRR	_workStep
                                    1- 2237     	.line	542, "main.c"; 	AWUCON = 0x28;
     0014 2128                      1- 2238     	MOVIA	0x28
     0015 00rr                      1- 2239     	MOVAR	_AWUCON
                                    1- 2240     	.line	543, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0016 210B                      1- 2241     	MOVIA	0x0b
     0017 00rr                      1- 2242     	MOVAR	_INTE
                                    1- 2243     	.line	544, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0018 2118                      1- 2244     	MOVIA	0x18
     0019 00rr                      1- 2245     	MOVAR	_PCON
                                    1- 2246     	.line	545, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     001A 02rr                      1- 2247     	CLRR	_INTF
                                    1- 2248     	.line	546, "main.c"; 	CLRWDT();
     001B 0002                      1- 2249     	clrwdt
                                    1- 2250     	.line	547, "main.c"; 	ENI();
     001C 0004                      1- 2251     	ENI
                                    1- 2252     	.line	548, "main.c"; 	SLEEP();
     001D 0001                      1- 2253     	sleep
                                    1- 2254     	.line	549, "main.c"; 	AWUCON = 0x00;
     001E 02rr                      1- 2255     	CLRR	_AWUCON
                                    1- 2256     	.line	551, "main.c"; 	IOSTA =  C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     001F 213E                      1- 2257     	MOVIA	0x3e
     0020 000r                      1- 2258     	IOST	_IOSTA
                                    1- 2259     	.line	552, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0021 2101                      1- 2260     	MOVIA	0x01
     0022 00rr                      1- 2261     	MOVAR	_INTE
                                    1- 2262     	.line	553, "main.c"; 	INTF = 0;
     0023 02rr                      1- 2263     	CLRR	_INTF
                                    1- 2264     	.line	555, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En ;				// Enable WDT ,  Enable LVR
     0024 21A8                      1- 2265     	MOVIA	0xa8
     0025 00rr                      1- 2266     	MOVAR	_PCON
                                    1- 2267     	.line	557, "main.c"; 	}
                                    1- 2268     	RETURN	
     0026 0010                      3-   40 m1      ret
                                    1- 2269     ; exit point of _gotoSleep
                                    1- 2271     ;***
                                    1- 2272     ;  pBlock Stats: dbName = C
                                    1- 2273     ;***
                                    1- 2274     ;has an exit
                                    1- 2275     ;; Starting pCode block
                                    1- 2276     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2278     _pwmStop:
                                    1- 2279     ; 2 exit points
                                    1- 2280     	.line	523, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2281     	CLRA	
     0001 00rr                      1- 2282     	SFUN	_T2CR1
                                    1- 2283     	.line	524, "main.c"; 	}
                                    1- 2284     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2285     ; exit point of _pwmStop
                                    1- 2287     ;***
                                    1- 2288     ;  pBlock Stats: dbName = C
                                    1- 2289     ;***
                                    1- 2290     ;has an exit
                                    1- 2291     ;1 compiler assigned register :
                                    1- 2292     ;   r0x1060
                                    1- 2293     ;; Starting pCode block
                                    1- 2294     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2296     _pwmInit:
                                    1- 2297     ; 2 exit points
                                    1- 2298     	.line	511, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2299     	SFUNR	_T2CR1
                                    1- 2300     	BANKSEL	r0x1060
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2301     	MOVAR	r0x1060
     0003 0Frr                      1- 2302     	BTRSC	r0x1060,7
                                    1- 2303     	.line	512, "main.c"; 	return;
                                    1- 2304     	MGOTO	_00548_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2305     	.line	513, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2306     	CLRR	_TMRH
                                    1- 2307     	.line	514, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 2308     	MOVIA	0x64
     0007 00rr                      1- 2309     	SFUN	_TMR2
                                    1- 2310     	.line	517, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2101                      1- 2311     	MOVIA	0x01
     0009 00rr                      1- 2312     	SFUN	_T2CR2
                                    1- 2313     	.line	518, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2314     	MOVIA	0x83
     000B 00rr                      1- 2315     	SFUN	_T2CR1
     000C                           1- 2316     _00548_DS_:
                                    1- 2317     	.line	519, "main.c"; 	}
                                    1- 2318     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2319     ; exit point of _pwmInit
                                    1- 2321     ;***
                                    1- 2322     ;  pBlock Stats: dbName = C
                                    1- 2323     ;***
                                    1- 2324     ;has an exit
                                    1- 2325     ;; Starting pCode block
                                    1- 2326     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2328     _pwm1Stop:
                                    1- 2329     ; 2 exit points
                                    1- 2330     	.line	504, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2331     	CLRA	
     0001 00rr                      1- 2332     	SFUN	_T1CR1
                                    1- 2333     	.line	505, "main.c"; 	}
                                    1- 2334     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2335     ; exit point of _pwm1Stop
                                    1- 2337     ;***
                                    1- 2338     ;  pBlock Stats: dbName = C
                                    1- 2339     ;***
                                    1- 2340     ;has an exit
                                    1- 2341     ;1 compiler assigned register :
                                    1- 2342     ;   r0x1061
                                    1- 2343     ;; Starting pCode block
                                    1- 2344     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2346     _pwm1Init:
                                    1- 2347     ; 2 exit points
                                    1- 2348     	.line	492, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2349     	SFUNR	_T1CR1
                                    1- 2350     	BANKSEL	r0x1061
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2351     	MOVAR	r0x1061
     0003 0Frr                      1- 2352     	BTRSC	r0x1061,7
                                    1- 2353     	.line	493, "main.c"; 	return;
                                    1- 2354     	MGOTO	_00537_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2355     	.line	494, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2356     	CLRR	_TMRH
                                    1- 2357     	.line	495, "main.c"; 	TMR1 = 24;							//频率为110K
     0006 2118                      1- 2358     	MOVIA	0x18
     0007 00rr                      1- 2359     	SFUN	_TMR1
                                    1- 2360     	.line	498, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2361     	CLRA	
     0009 00rr                      1- 2362     	SFUN	_T1CR2
                                    1- 2363     	.line	499, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2364     	MOVIA	0x83
     000B 00rr                      1- 2365     	SFUN	_T1CR1
     000C                           1- 2366     _00537_DS_:
                                    1- 2367     	.line	500, "main.c"; 	}
                                    1- 2368     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2369     ; exit point of _pwm1Init
                                    1- 2371     ;***
                                    1- 2372     ;  pBlock Stats: dbName = C
                                    1- 2373     ;***
                                    1- 2374     ;has an exit
                                    1- 2375     ;functions called:
                                    1- 2376     ;   _pwmStop
                                    1- 2377     ;   _pwmStop
                                    1- 2378     ;; Starting pCode block
                                    1- 2379     .segment "code"; module=main, function=_powerOff
     0000                           1- 2381     _powerOff:
                                    1- 2382     ; 2 exit points
                                    1- 2383     	.line	485, "main.c"; 	workStep = 0;
                                    1- 2384     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2385     	CLRR	_workStep
                                    1- 2386     	.line	486, "main.c"; 	pwmStop();
                                    1- 2387     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2388     	.line	487, "main.c"; 	}
                                    1- 2389     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 2390     ; exit point of _powerOff
                                    1- 2392     ;***
                                    1- 2393     ;  pBlock Stats: dbName = C
                                    1- 2394     ;***
                                    1- 2395     ;has an exit
                                    1- 2396     ;; Starting pCode block
                                    1- 2397     .segment "code"; module=main, function=_initSys
     0000                           1- 2399     _initSys:
                                    1- 2400     ; 2 exit points
                                    1- 2401     	.line	457, "main.c"; 	DISI();
     0000 0013                      1- 2402     	DISI
                                    1- 2403     	.line	458, "main.c"; 	IOSTA = C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0001 213E                      1- 2404     	MOVIA	0x3e
     0002 000r                      1- 2405     	IOST	_IOSTA
                                    1- 2406     	.line	459, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 2407     	CLRA	
     0004 000r                      1- 2408     	IOST	_IOSTB
                                    1- 2409     	.line	460, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2410     	CLRR	_PORTB
                                    1- 2411     	.line	461, "main.c"; 	PORTA = 0x00;
                                    1- 2412     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2413     	CLRR	_PORTA
                                    1- 2414     	.line	462, "main.c"; 	APHCON = 0xFF;
     0008 21FF                      1- 2415     	MOVIA	0xff
     0009 000r                      1- 2416     	IOST	_APHCON
                                    1- 2417     	.line	463, "main.c"; 	BPHCON = 0xFF;
     000A 00rr                      1- 2418     	MOVAR	_BPHCON
                                    1- 2419     	.line	464, "main.c"; 	ABPLCON = 0xFF;
     000B 00rr                      1- 2420     	MOVAR	_ABPLCON
                                    1- 2421     	.line	466, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000C 2101                      1- 2422     	MOVIA	0x01
     000D 00rr                      1- 2423     	MOVAR	_INTE
                                    1- 2424     	.line	468, "main.c"; 	PCON1 = C_TMR0_Dis;
     000E 0200                      1- 2425     	CLRA	
     000F 000r                      1- 2426     	IOST	_PCON1
                                    1- 2427     	.line	470, "main.c"; 	TMR0 = 55;
     0010 2137                      1- 2428     	MOVIA	0x37
     0011 00rr                      1- 2429     	MOVAR	_TMR0
                                    1- 2430     	.line	471, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0012 2101                      1- 2431     	MOVIA	0x01
     0013 0003                      1- 2432     	T0MD	
                                    1- 2433     	.line	473, "main.c"; 	PCON1 = C_TMR0_En;
     0014 000r                      1- 2434     	IOST	_PCON1
                                    1- 2435     	.line	476, "main.c"; 	PCON = C_WDT_En | C_LVR_En;				// Enable WDT ,  Enable LVR
     0015 2188                      1- 2436     	MOVIA	0x88
     0016 00rr                      1- 2437     	MOVAR	_PCON
                                    1- 2438     	.line	479, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0017 2101                      1- 2439     	MOVIA	0x01
     0018 000r                      1- 2440     	IOST	_PCON1
                                    1- 2441     	.line	480, "main.c"; 	ENI();
     0019 0004                      1- 2442     	ENI
                                    1- 2443     	.line	481, "main.c"; 	}
                                    1- 2444     	RETURN	
     001A 0010                      3-   40 m1      ret
                                    1- 2445     ; exit point of _initSys
                                    1- 2447     ;***
                                    1- 2448     ;  pBlock Stats: dbName = C
                                    1- 2449     ;***
                                    1- 2450     ;has an exit
                                    1- 2451     ;functions called:
                                    1- 2452     ;   _keyRead
                                    1- 2453     ;   _pwmInit
                                    1- 2454     ;   _powerOff
                                    1- 2455     ;   _pwmInit
                                    1- 2456     ;   _keyRead
                                    1- 2457     ;   _pwmInit
                                    1- 2458     ;   _powerOff
                                    1- 2459     ;   _pwmInit
                                    1- 2460     ;1 compiler assigned register :
                                    1- 2461     ;   r0x1062
                                    1- 2462     ;; Starting pCode block
                                    1- 2463     .segment "code"; module=main, function=_keyCtr
                                    1- 2465     ;local variable name mapping:
     0000                           1- 2467     _keyCtr:
                                    1- 2468     ; 2 exit points
                                    1- 2469     	.line	387, "main.c"; 	char kclick = keyRead(0x20 & (~PORTA));
                                    1- 2470     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 2471     	COMR	_PORTA,W
                                    1- 2472     	BANKSEL	r0x1062
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 2473     	MOVAR	r0x1062
     0004 2120                      1- 2474     	MOVIA	0x20
     0005 10rr                      1- 2475     	ANDAR	r0x1062,F
     0006 01rr                      1- 2476     	MOVR	r0x1062,W
                                    1- 2477     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2478     	BANKSEL	r0x1062
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2479     	MOVAR	r0x1062
                                    1- 2480     	.line	388, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 2481     	XORIA	0x01
     000B 0903                      1- 2482     	BTRSS	STATUS,2
                                    1- 2483     	MGOTO	_00520_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2484     	.line	390, "main.c"; 	count500ms = 0;
                                    1- 2485     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 2486     	CLRR	_count500ms
                                    1- 2487     	.line	391, "main.c"; 	ledLightTime = 0;
                                    1- 2488     	BANKSEL	_ledLightTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2489     	CLRR	_ledLightTime
                                    1- 2490     	.line	392, "main.c"; 	count5S = 0;
                                    1- 2491     	BANKSEL	_count5S
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 02rr                      1- 2492     	CLRR	_count5S
     0013 02rr                      1- 2493     	CLRR	(_count5S + 1)
                                    1- 2494     	.line	393, "main.c"; 	if(workStep == 0)
                                    1- 2495     	BANKSEL	_workStep
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 01rr                      1- 2496     	MOVR	_workStep,W
     0016 0903                      1- 2497     	BTRSS	STATUS,2
                                    1- 2498     	MGOTO	_00490_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2499     	.line	395, "main.c"; 	count1s = 0;
                                    1- 2500     	BANKSEL	_count1s
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 2501     	CLRR	_count1s
                                    1- 2502     	.line	396, "main.c"; 	ledLightTime = 3;
     001A 2103                      1- 2503     	MOVIA	0x03
                                    1- 2504     	BANKSEL	_ledLightTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 2505     	MOVAR	_ledLightTime
                                    1- 2506     	.line	397, "main.c"; 	if(preBatValue < batValue)
                                    1- 2507     	BANKSEL	_batValue
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 2508     	MOVR	_batValue,W
                                    1- 2509     	BANKSEL	_preBatValue
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 04rr                      1- 2510     	SUBAR	_preBatValue,W
     0021 0C03                      1- 2511     	BTRSC	STATUS,0
                                    1- 2512     	MGOTO	_00488_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2513     	.line	399, "main.c"; 	preBatValue = batValue;
                                    1- 2514     	BANKSEL	_batValue
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 01rr                      1- 2515     	MOVR	_batValue,W
                                    1- 2516     	BANKSEL	_preBatValue
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 00rr                      1- 2517     	MOVAR	_preBatValue
                                    1- 2518     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2519     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1- 2520     	.line	400, "main.c"; 	if(preBatValue > 99)
     0027 2164                      1- 2521     	MOVIA	0x64
     0028 04rr                      1- 2522     	SUBAR	_preBatValue,W
     0029 0803                      1- 2523     	BTRSS	STATUS,0
                                    1- 2524     	MGOTO	_00488_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2525     	.line	401, "main.c"; 	preBatValue = 99;
     002B 2163                      1- 2526     	MOVIA	0x63
     002C 00rr                      1- 2527     	MOVAR	_preBatValue
     002D                           1- 2528     _00488_DS_:
                                    1- 2529     	.line	403, "main.c"; 	showFlag = 1;
     002D 2101                      1- 2530     	MOVIA	0x01
                                    1- 2531     	BANKSEL	_showFlag
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1- 2532     	MOVAR	_showFlag
                                    1- 2533     	.line	404, "main.c"; 	return;
                                    1- 2534     	MGOTO	_00522_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 2535     _00490_DS_:
                                    1- 2536     	.line	406, "main.c"; 	if(++workStep > 6)
                                    1- 2537     	BANKSEL	_workStep
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 05rr                      1- 2538     	INCR	_workStep,F
                                    1- 2539     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2540     ;;unsigned compare: left >= lit (0x7=7), size=1
     0033 2107                      1- 2541     	MOVIA	0x07
     0034 04rr                      1- 2542     	SUBAR	_workStep,W
     0035 0803                      1- 2543     	BTRSS	STATUS,0
                                    1- 2544     	MGOTO	_00492_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2545     	.line	407, "main.c"; 	workStep = 1;
     0037 2101                      1- 2546     	MOVIA	0x01
     0038 00rr                      1- 2547     	MOVAR	_workStep
     0039                           1- 2548     _00492_DS_:
                                    1- 2549     	.line	408, "main.c"; 	if(workStep == 1)
                                    1- 2550     	BANKSEL	_workStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1- 2551     	MOVR	_workStep,W
     003B 2401                      1- 2552     	XORIA	0x01
     003C 0903                      1- 2553     	BTRSS	STATUS,2
                                    1- 2554     	MGOTO	_00508_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2555     	.line	409, "main.c"; 	maxDuty = 40;
     003E 2128                      1- 2556     	MOVIA	0x28
                                    1- 2557     	BANKSEL	_maxDuty
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 00rr                      1- 2558     	MOVAR	_maxDuty
                                    1- 2559     	MGOTO	_00509_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042                           1- 2560     _00508_DS_:
                                    1- 2561     	.line	410, "main.c"; 	else if(workStep == 2)
                                    1- 2562     	BANKSEL	_workStep
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1- 2563     	MOVR	_workStep,W
     0044 2402                      1- 2564     	XORIA	0x02
     0045 0903                      1- 2565     	BTRSS	STATUS,2
                                    1- 2566     	MGOTO	_00505_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2567     	.line	411, "main.c"; 	maxDuty = 42;
     0047 212A                      1- 2568     	MOVIA	0x2a
                                    1- 2569     	BANKSEL	_maxDuty
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1- 2570     	MOVAR	_maxDuty
                                    1- 2571     	MGOTO	_00509_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
     004B                           1- 2572     _00505_DS_:
                                    1- 2573     	.line	412, "main.c"; 	else if(workStep == 3)
                                    1- 2574     	BANKSEL	_workStep
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 01rr                      1- 2575     	MOVR	_workStep,W
     004D 2403                      1- 2576     	XORIA	0x03
     004E 0903                      1- 2577     	BTRSS	STATUS,2
                                    1- 2578     	MGOTO	_00502_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2579     	.line	413, "main.c"; 	maxDuty = 44;
     0050 212C                      1- 2580     	MOVIA	0x2c
                                    1- 2581     	BANKSEL	_maxDuty
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 00rr                      1- 2582     	MOVAR	_maxDuty
                                    1- 2583     	MGOTO	_00509_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
     0054                           1- 2584     _00502_DS_:
                                    1- 2585     	.line	414, "main.c"; 	else if(workStep == 4)
                                    1- 2586     	BANKSEL	_workStep
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 01rr                      1- 2587     	MOVR	_workStep,W
     0056 2404                      1- 2588     	XORIA	0x04
     0057 0903                      1- 2589     	BTRSS	STATUS,2
                                    1- 2590     	MGOTO	_00499_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2591     	.line	415, "main.c"; 	maxDuty = 46;
     0059 212E                      1- 2592     	MOVIA	0x2e
                                    1- 2593     	BANKSEL	_maxDuty
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 00rr                      1- 2594     	MOVAR	_maxDuty
                                    1- 2595     	MGOTO	_00509_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
     005D                           1- 2596     _00499_DS_:
                                    1- 2597     	.line	416, "main.c"; 	else if(workStep == 5)
                                    1- 2598     	BANKSEL	_workStep
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 01rr                      1- 2599     	MOVR	_workStep,W
     005F 2405                      1- 2600     	XORIA	0x05
     0060 0903                      1- 2601     	BTRSS	STATUS,2
                                    1- 2602     	MGOTO	_00496_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2603     	.line	417, "main.c"; 	maxDuty = 48;
     0062 2130                      1- 2604     	MOVIA	0x30
                                    1- 2605     	BANKSEL	_maxDuty
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 00rr                      1- 2606     	MOVAR	_maxDuty
                                    1- 2607     	MGOTO	_00509_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
     0066                           1- 2608     _00496_DS_:
                                    1- 2609     	.line	418, "main.c"; 	else if(workStep == 6)
                                    1- 2610     	BANKSEL	_workStep
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 01rr                      1- 2611     	MOVR	_workStep,W
     0068 2406                      1- 2612     	XORIA	0x06
     0069 0903                      1- 2613     	BTRSS	STATUS,2
                                    1- 2614     	MGOTO	_00509_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2615     	.line	419, "main.c"; 	maxDuty = 50;
     006B 2132                      1- 2616     	MOVIA	0x32
                                    1- 2617     	BANKSEL	_maxDuty
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 00rr                      1- 2618     	MOVAR	_maxDuty
     006E                           1- 2619     _00509_DS_:
                                    1- 2620     	.line	420, "main.c"; 	if(workStep > 0)
                                    1- 2621     	BANKSEL	_workStep
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 01rr                      1- 2622     	MOVR	_workStep,W
     0070 0D03                      1- 2623     	BTRSC	STATUS,2
                                    1- 2624     	MGOTO	_00522_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2625     	.line	422, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 2626     	BANKSEL	_maxDuty
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 01rr                      1- 2627     	MOVR	_maxDuty,W
     0074 00rr                      1- 2628     	SFUN	_PWM2DUTY
                                    1- 2629     	.line	423, "main.c"; 	pwmInit();
                                    1- 2630     	MCALL	_pwmInit
     0075 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2631     	MGOTO	_00522_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
     0077                           1- 2632     _00520_DS_:
                                    1- 2633     	.line	426, "main.c"; 	else if(kclick == 2)
                                    1- 2634     	BANKSEL	r0x1062
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 01rr                      1- 2635     	MOVR	r0x1062,W
     0079 2402                      1- 2636     	XORIA	0x02
     007A 0903                      1- 2637     	BTRSS	STATUS,2
                                    1- 2638     	MGOTO	_00522_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2639     	.line	428, "main.c"; 	if(workStep > 0)
                                    1- 2640     	BANKSEL	_workStep
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 01rr                      1- 2641     	MOVR	_workStep,W
     007E 0D03                      1- 2642     	BTRSC	STATUS,2
                                    1- 2643     	MGOTO	_00515_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2644     	.line	430, "main.c"; 	workStep = 0;
     0080 02rr                      1- 2645     	CLRR	_workStep
                                    1- 2646     	.line	431, "main.c"; 	powerOff();
                                    1- 2647     	MCALL	_powerOff
     0081 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2648     	.line	432, "main.c"; 	showFlag = 0;
                                    1- 2649     	BANKSEL	_showFlag
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 02rr                      1- 2650     	CLRR	_showFlag
                                    1- 2651     	MGOTO	_00522_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
     0085                           1- 2652     _00515_DS_:
                                    1- 2653     	.line	436, "main.c"; 	if(pwStep == 10)
                                    1- 2654     	BANKSEL	_pwStep
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 01rr                      1- 2655     	MOVR	_pwStep,W
     0087 240A                      1- 2656     	XORIA	0x0a
     0088 0903                      1- 2657     	BTRSS	STATUS,2
                                    1- 2658     	MGOTO	_00513_DS_
     0089 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2659     	.line	438, "main.c"; 	sleepTime = 0;
                                    1- 2660     	BANKSEL	_sleepTime
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 02rr                      1- 2661     	CLRR	_sleepTime
     008C 02rr                      1- 2662     	CLRR	(_sleepTime + 1)
                                    1- 2663     	.line	439, "main.c"; 	return;
                                    1- 2664     	MGOTO	_00522_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
     008E                           1- 2665     _00513_DS_:
                                    1- 2666     	.line	441, "main.c"; 	workStep = 1;
     008E 2101                      1- 2667     	MOVIA	0x01
                                    1- 2668     	BANKSEL	_workStep
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 00rr                      1- 2669     	MOVAR	_workStep
                                    1- 2670     	.line	442, "main.c"; 	PWM2DUTY = 70;
     0091 2146                      1- 2671     	MOVIA	0x46
     0092 00rr                      1- 2672     	SFUN	_PWM2DUTY
                                    1- 2673     	.line	443, "main.c"; 	currentDuty = 70;
                                    1- 2674     	BANKSEL	_currentDuty
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 00rr                      1- 2675     	MOVAR	_currentDuty
                                    1- 2676     	.line	444, "main.c"; 	maxDuty = 40;
     0095 2128                      1- 2677     	MOVIA	0x28
                                    1- 2678     	BANKSEL	_maxDuty
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 00rr                      1- 2679     	MOVAR	_maxDuty
                                    1- 2680     	.line	445, "main.c"; 	pwmInit();
                                    1- 2681     	MCALL	_pwmInit
     0098 2rrr                      3-   66 m1      LCALL rom_address
     0099                           1- 2682     _00522_DS_:
                                    1- 2683     	.line	450, "main.c"; 	}
                                    1- 2684     	RETURN	
     0099 0010                      3-   40 m1      ret
                                    1- 2685     ; exit point of _keyCtr
                                    1- 2687     ;***
                                    1- 2688     ;  pBlock Stats: dbName = C
                                    1- 2689     ;***
                                    1- 2690     ;has an exit
                                    1- 2691     ;functions called:
                                    1- 2692     ;   _setInput
                                    1- 2693     ;   _showKeyLed
                                    1- 2694     ;   __gptrget1
                                    1- 2695     ;   _showNubShiwei
                                    1- 2696     ;   __gptrget1
                                    1- 2697     ;   _showNubGewei
                                    1- 2698     ;   _setInput
                                    1- 2699     ;   _showKeyLed
                                    1- 2700     ;   __gptrget1
                                    1- 2701     ;   _showNubShiwei
                                    1- 2702     ;   __gptrget1
                                    1- 2703     ;   _showNubGewei
                                    1- 2704     ;5 compiler assigned registers:
                                    1- 2705     ;   r0x1063
                                    1- 2706     ;   r0x1064
                                    1- 2707     ;   STK01
                                    1- 2708     ;   STK00
                                    1- 2709     ;   r0x1065
                                    1- 2710     ;; Starting pCode block
                                    1- 2711     .segment "code"; module=main, function=_refreshNub
     0000                           1- 2713     _refreshNub:
                                    1- 2714     ; 2 exit points
                                    1- 2715     ;;unsigned compare: left < lit (0x384=900), size=2
                                    1- 2716     	.line	337, "main.c"; 	if(count900s >= 900)
     0000 2103                      1- 2717     	MOVIA	0x03
                                    1- 2718     	BANKSEL	_count900s
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 2719     	SUBAR	(_count900s + 1),W
     0003 0903                      1- 2720     	BTRSS	STATUS,2
                                    1- 2721     	MGOTO	_00477_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
     0005 2184                      1- 2722     	MOVIA	0x84
     0006 04rr                      1- 2723     	SUBAR	_count900s,W
     0007                           1- 2724     _00477_DS_:
     0007 0803                      1- 2725     	BTRSS	STATUS,0
                                    1- 2726     	MGOTO	_00437_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2727     	.line	339, "main.c"; 	setInput();
                                    1- 2728     	MCALL	_setInput
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2729     	.line	340, "main.c"; 	return;
                                    1- 2730     	MGOTO	_00454_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
     000B                           1- 2731     _00437_DS_:
                                    1- 2732     	.line	342, "main.c"; 	if(tempshiweiNum != shiweiNum || tempgeweiNum != geweiNum)
                                    1- 2733     	BANKSEL	_shiweiNum
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 01rr                      1- 2734     	MOVR	_shiweiNum,W
                                    1- 2735     	BANKSEL	_tempshiweiNum
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 12rr                      1- 2736     	XORAR	_tempshiweiNum,W
     000F 0903                      1- 2737     	BTRSS	STATUS,2
                                    1- 2738     	MGOTO	_00445_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2739     	BANKSEL	_geweiNum
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 2740     	MOVR	_geweiNum,W
                                    1- 2741     	BANKSEL	_tempgeweiNum
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 12rr                      1- 2742     	XORAR	_tempgeweiNum,W
     0015 0D03                      1- 2743     	BTRSC	STATUS,2
                                    1- 2744     	MGOTO	_00446_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
     0017                           1- 2745     _00445_DS_:
                                    1- 2746     	.line	345, "main.c"; 	if(workStep == 0)
                                    1- 2747     	BANKSEL	_workStep
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 01rr                      1- 2748     	MOVR	_workStep,W
     0019 0903                      1- 2749     	BTRSS	STATUS,2
                                    1- 2750     	MGOTO	_00443_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2751     	.line	347, "main.c"; 	if(++refreshCount >= 20)
                                    1- 2752     	BANKSEL	_refreshCount
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 05rr                      1- 2753     	INCR	_refreshCount,F
     001D 0D03                      1- 2754     	BTRSC	STATUS,2
     001E 05rr                      1- 2755     	INCR	(_refreshCount + 1),F
                                    1- 2756     ;;unsigned compare: left < lit (0x14=20), size=2
     001F 2100                      1- 2757     	MOVIA	0x00
     0020 04rr                      1- 2758     	SUBAR	(_refreshCount + 1),W
     0021 0903                      1- 2759     	BTRSS	STATUS,2
                                    1- 2760     	MGOTO	_00479_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023 2114                      1- 2761     	MOVIA	0x14
     0024 04rr                      1- 2762     	SUBAR	_refreshCount,W
     0025                           1- 2763     _00479_DS_:
     0025 0803                      1- 2764     	BTRSS	STATUS,0
                                    1- 2765     	MGOTO	_00447_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2766     	.line	349, "main.c"; 	refreshCount = 0;
                                    1- 2767     	BANKSEL	_refreshCount
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 02rr                      1- 2768     	CLRR	_refreshCount
     0029 02rr                      1- 2769     	CLRR	(_refreshCount + 1)
                                    1- 2770     	.line	350, "main.c"; 	tempshiweiNum = shiweiNum;
                                    1- 2771     	BANKSEL	_shiweiNum
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1- 2772     	MOVR	_shiweiNum,W
                                    1- 2773     	BANKSEL	_tempshiweiNum
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1- 2774     	MOVAR	_tempshiweiNum
                                    1- 2775     	.line	351, "main.c"; 	tempgeweiNum = geweiNum;
                                    1- 2776     	BANKSEL	_geweiNum
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 2777     	MOVR	_geweiNum,W
                                    1- 2778     	BANKSEL	_tempgeweiNum
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 00rr                      1- 2779     	MOVAR	_tempgeweiNum
                                    1- 2780     	MGOTO	_00447_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033                           1- 2781     _00443_DS_:
                                    1- 2782     	.line	356, "main.c"; 	if(++refreshCount >= 20)
                                    1- 2783     	BANKSEL	_refreshCount
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 05rr                      1- 2784     	INCR	_refreshCount,F
     0035 0D03                      1- 2785     	BTRSC	STATUS,2
     0036 05rr                      1- 2786     	INCR	(_refreshCount + 1),F
                                    1- 2787     ;;unsigned compare: left < lit (0x14=20), size=2
     0037 2100                      1- 2788     	MOVIA	0x00
     0038 04rr                      1- 2789     	SUBAR	(_refreshCount + 1),W
     0039 0903                      1- 2790     	BTRSS	STATUS,2
                                    1- 2791     	MGOTO	_00480_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
     003B 2114                      1- 2792     	MOVIA	0x14
     003C 04rr                      1- 2793     	SUBAR	_refreshCount,W
     003D                           1- 2794     _00480_DS_:
     003D 0803                      1- 2795     	BTRSS	STATUS,0
                                    1- 2796     	MGOTO	_00447_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2797     	.line	358, "main.c"; 	refreshCount = 0;
                                    1- 2798     	BANKSEL	_refreshCount
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 02rr                      1- 2799     	CLRR	_refreshCount
     0041 02rr                      1- 2800     	CLRR	(_refreshCount + 1)
                                    1- 2801     	.line	359, "main.c"; 	tempshiweiNum = shiweiNum;
                                    1- 2802     	BANKSEL	_shiweiNum
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1- 2803     	MOVR	_shiweiNum,W
                                    1- 2804     	BANKSEL	_tempshiweiNum
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 2805     	MOVAR	_tempshiweiNum
                                    1- 2806     	.line	360, "main.c"; 	tempgeweiNum = geweiNum;
                                    1- 2807     	BANKSEL	_geweiNum
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 01rr                      1- 2808     	MOVR	_geweiNum,W
                                    1- 2809     	BANKSEL	_tempgeweiNum
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1- 2810     	MOVAR	_tempgeweiNum
                                    1- 2811     	MGOTO	_00447_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
     004B                           1- 2812     _00446_DS_:
                                    1- 2813     	.line	366, "main.c"; 	refreshCount = 0;
                                    1- 2814     	BANKSEL	_refreshCount
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 02rr                      1- 2815     	CLRR	_refreshCount
     004D 02rr                      1- 2816     	CLRR	(_refreshCount + 1)
     004E                           1- 2817     _00447_DS_:
                                    1- 2818     	.line	368, "main.c"; 	if(workStep > 0 || ledLightTime > 0)
                                    1- 2819     	BANKSEL	_workStep
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1- 2820     	MOVR	_workStep,W
     0050 0903                      1- 2821     	BTRSS	STATUS,2
                                    1- 2822     	MGOTO	_00449_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2823     	BANKSEL	_ledLightTime
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1- 2824     	MOVR	_ledLightTime,W
     0054 0903                      1- 2825     	BTRSS	STATUS,2
     0055                           1- 2826     _00449_DS_:
                                    1- 2827     	.line	370, "main.c"; 	showKeyLed();
                                    1- 2828     	MCALL	_showKeyLed
     0055 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2829     	.line	373, "main.c"; 	if(ledDeadTime > 0)
                                    1- 2830     	BANKSEL	_ledDeadTime
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 01rr                      1- 2831     	MOVR	_ledDeadTime,W
     0058 0D03                      1- 2832     	BTRSC	STATUS,2
                                    1- 2833     	MGOTO	_00453_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2834     	.line	375, "main.c"; 	tempshiweiNum = 11;
     005A 210B                      1- 2835     	MOVIA	0x0b
                                    1- 2836     	BANKSEL	_tempshiweiNum
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 00rr                      1- 2837     	MOVAR	_tempshiweiNum
                                    1- 2838     	.line	376, "main.c"; 	tempgeweiNum = 12;
     005D 210C                      1- 2839     	MOVIA	0x0c
                                    1- 2840     	BANKSEL	_tempgeweiNum
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 00rr                      1- 2841     	MOVAR	_tempgeweiNum
     0060                           1- 2842     _00453_DS_:
                                    1- 2843     	.line	379, "main.c"; 	showNubShiwei(numArray[tempshiweiNum]);
                                    1- 2844     	BANKSEL	_tempshiweiNum
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1- 2845     	MOVR	_tempshiweiNum,W
     0062 25rr                      1- 2846     	ADDIA	(_numArray + 0)
                                    1- 2847     	BANKSEL	r0x1063
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 00rr                      1- 2848     	MOVAR	r0x1063
     0065 21rr                      1- 2849     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0066 0C03                      1- 2850     	BTRSC	STATUS,0
     0067 2501                      1- 2851     	ADDIA	0x01
                                    1- 2852     	BANKSEL	r0x1064
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 00rr                      1- 2853     	MOVAR	r0x1064
                                    1- 2854     	BANKSEL	r0x1063
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 01rr                      1- 2855     	MOVR	r0x1063,W
     006C 00rr                      1- 2856     	MOVAR	STK01
                                    1- 2857     	BANKSEL	r0x1064
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 01rr                      1- 2858     	MOVR	r0x1064,W
     006F 00rr                      1- 2859     	MOVAR	STK00
     0070 2100                      1- 2860     	MOVIA	0x00
                                    1- 2861     	MCALL	__gptrget1
     0071 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2862     ;;100	MOVAR	r0x1065
                                    1- 2863     	MCALL	_showNubShiwei
     0072 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2864     	.line	380, "main.c"; 	showNubGewei(numArray[tempgeweiNum]);
                                    1- 2865     	BANKSEL	_tempgeweiNum
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 01rr                      1- 2866     	MOVR	_tempgeweiNum,W
     0075 25rr                      1- 2867     	ADDIA	(_numArray + 0)
                                    1- 2868     	BANKSEL	r0x1063
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 00rr                      1- 2869     	MOVAR	r0x1063
     0078 21rr                      1- 2870     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0079 0C03                      1- 2871     	BTRSC	STATUS,0
     007A 2501                      1- 2872     	ADDIA	0x01
                                    1- 2873     	BANKSEL	r0x1064
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 00rr                      1- 2874     	MOVAR	r0x1064
                                    1- 2875     	BANKSEL	r0x1063
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 01rr                      1- 2876     	MOVR	r0x1063,W
     007F 00rr                      1- 2877     	MOVAR	STK01
                                    1- 2878     	BANKSEL	r0x1064
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 01rr                      1- 2879     	MOVR	r0x1064,W
     0082 00rr                      1- 2880     	MOVAR	STK00
     0083 2100                      1- 2881     	MOVIA	0x00
                                    1- 2882     	MCALL	__gptrget1
     0084 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2883     ;;99	MOVAR	r0x1065
                                    1- 2884     	MCALL	_showNubGewei
     0085 2rrr                      3-   66 m1      LCALL rom_address
     0086                           1- 2885     _00454_DS_:
                                    1- 2886     	.line	381, "main.c"; 	}
                                    1- 2887     	RETURN	
     0086 0010                      3-   40 m1      ret
                                    1- 2888     ; exit point of _refreshNub
                                    1- 2890     ;***
                                    1- 2891     ;  pBlock Stats: dbName = C
                                    1- 2892     ;***
                                    1- 2893     ;has an exit
                                    1- 2894     ;functions called:
                                    1- 2895     ;   _pwmStop
                                    1- 2896     ;   _pwm1Stop
                                    1- 2897     ;   __divuchar
                                    1- 2898     ;   __moduchar
                                    1- 2899     ;   _pwm1Init
                                    1- 2900     ;   _pwm1Init
                                    1- 2901     ;   _pwm1Init
                                    1- 2902     ;   _pwm1Stop
                                    1- 2903     ;   __divuchar
                                    1- 2904     ;   __moduchar
                                    1- 2905     ;   _pwmStop
                                    1- 2906     ;   _pwm1Stop
                                    1- 2907     ;   __divuchar
                                    1- 2908     ;   __moduchar
                                    1- 2909     ;   _pwm1Init
                                    1- 2910     ;   _pwm1Init
                                    1- 2911     ;   _pwm1Init
                                    1- 2912     ;   _pwm1Stop
                                    1- 2913     ;   __divuchar
                                    1- 2914     ;   __moduchar
                                    1- 2915     ;8 compiler assigned registers:
                                    1- 2916     ;   r0x1066
                                    1- 2917     ;   STK00
                                    1- 2918     ;   r0x1067
                                    1- 2919     ;   r0x1068
                                    1- 2920     ;   r0x1069
                                    1- 2921     ;   r0x106A
                                    1- 2922     ;   r0x106B
                                    1- 2923     ;   r0x106C
                                    1- 2924     ;; Starting pCode block
                                    1- 2925     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2927     _chrgCtr:
                                    1- 2928     ; 2 exit points
                                    1- 2929     	.line	230, "main.c"; 	if(0x08 & PORTA)
                                    1- 2930     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 09rr                      1- 2931     	BTRSS	_PORTA,3
                                    1- 2932     	MGOTO	_00357_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2933     	.line	233, "main.c"; 	chrgFlag = 1;
                                    1- 2934     	BANKSEL	_Status
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 19rr                      1- 2935     	BSR	_Status,3
                                    1- 2936     	.line	234, "main.c"; 	showFlag = 1;
     0005 2101                      1- 2937     	MOVIA	0x01
                                    1- 2938     	BANKSEL	_showFlag
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 2939     	MOVAR	_showFlag
                                    1- 2940     	.line	235, "main.c"; 	workStep = 0;
                                    1- 2941     	BANKSEL	_workStep
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1- 2942     	CLRR	_workStep
                                    1- 2943     	.line	236, "main.c"; 	ledLightTime = 0;
                                    1- 2944     	BANKSEL	_ledLightTime
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 02rr                      1- 2945     	CLRR	_ledLightTime
                                    1- 2946     	.line	237, "main.c"; 	pwmStop();
                                    1- 2947     	MCALL	_pwmStop
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2948     ;;unsigned compare: left < lit (0x63=99), size=1
                                    1- 2949     	.line	239, "main.c"; 	if(batValue >= 99)
     000D 2163                      1- 2950     	MOVIA	0x63
                                    1- 2951     	BANKSEL	_batValue
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 04rr                      1- 2952     	SUBAR	_batValue,W
     0010 0803                      1- 2953     	BTRSS	STATUS,0
                                    1- 2954     	MGOTO	_00339_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2955     	.line	241, "main.c"; 	chrgStep = 4;
     0012 2104                      1- 2956     	MOVIA	0x04
                                    1- 2957     	BANKSEL	_chrgStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 00rr                      1- 2958     	MOVAR	_chrgStep
                                    1- 2959     	.line	242, "main.c"; 	shiweiNum = 9;
     0015 2109                      1- 2960     	MOVIA	0x09
                                    1- 2961     	BANKSEL	_shiweiNum
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 2962     	MOVAR	_shiweiNum
                                    1- 2963     	.line	243, "main.c"; 	geweiNum = 9;
                                    1- 2964     	BANKSEL	_geweiNum
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 00rr                      1- 2965     	MOVAR	_geweiNum
                                    1- 2966     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2967     ;;unsigned compare: left >= lit (0x64=100), size=1
                                    1- 2968     	.line	245, "main.c"; 	if(batValue > 99 && ++countFull > 200)
     001A 2164                      1- 2969     	MOVIA	0x64
                                    1- 2970     	BANKSEL	_batValue
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 04rr                      1- 2971     	SUBAR	_batValue,W
     001D 0803                      1- 2972     	BTRSS	STATUS,0
                                    1- 2973     	MGOTO	_00319_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2974     	BANKSEL	_countFull
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1- 2975     	INCR	_countFull,F
                                    1- 2976     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2977     ;;unsigned compare: left >= lit (0xC9=201), size=1
     0021 21C9                      1- 2978     	MOVIA	0xc9
     0022 04rr                      1- 2979     	SUBAR	_countFull,W
     0023 0C03                      1- 2980     	BTRSC	STATUS,0
                                    1- 2981     	.line	246, "main.c"; 	pwm1Stop();
                                    1- 2982     	MCALL	_pwm1Stop
     0024 2rrr                      3-   66 m1      LCALL rom_address
     0025                           1- 2983     _00319_DS_:
                                    1- 2984     	.line	248, "main.c"; 	PORTB &= 0xF7;
     0025 1Drr                      1- 2985     	BCR	_PORTB,3
                                    1- 2986     	.line	249, "main.c"; 	IOSTB |= 0X08;
     0026 001r                      1- 2987     	IOSTR	_IOSTB
                                    1- 2988     	BANKSEL	r0x1066
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 00rr                      1- 2989     	MOVAR	r0x1066
     0029 19rr                      1- 2990     	BSR	r0x1066,3
     002A 01rr                      1- 2991     	MOVR	r0x1066,W
     002B 000r                      1- 2992     	IOST	_IOSTB
                                    1- 2993     	MGOTO	_00359_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
     002D                           1- 2994     _00339_DS_:
                                    1- 2995     	.line	253, "main.c"; 	countFull = 0;
                                    1- 2996     	BANKSEL	_countFull
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 02rr                      1- 2997     	CLRR	_countFull
                                    1- 2998     	.line	254, "main.c"; 	IOSTB &= 0xF7;
     002F 001r                      1- 2999     	IOSTR	_IOSTB
                                    1- 3000     	BANKSEL	r0x1066
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 00rr                      1- 3001     	MOVAR	r0x1066
     0032 1Drr                      1- 3002     	BCR	r0x1066,3
     0033 01rr                      1- 3003     	MOVR	r0x1066,W
     0034 000r                      1- 3004     	IOST	_IOSTB
                                    1- 3005     	.line	255, "main.c"; 	shiweiNum = preBatValue/10;
     0035 210A                      1- 3006     	MOVIA	0x0a
     0036 00rr                      1- 3007     	MOVAR	STK00
                                    1- 3008     	BANKSEL	_preBatValue
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 01rr                      1- 3009     	MOVR	_preBatValue,W
                                    1- 3010     	MCALL	__divuchar
     0039 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3011     	BANKSEL	_shiweiNum
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 00rr                      1- 3012     	MOVAR	_shiweiNum
                                    1- 3013     	.line	256, "main.c"; 	geweiNum = preBatValue%10;
     003C 210A                      1- 3014     	MOVIA	0x0a
     003D 00rr                      1- 3015     	MOVAR	STK00
                                    1- 3016     	BANKSEL	_preBatValue
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 01rr                      1- 3017     	MOVR	_preBatValue,W
                                    1- 3018     	MCALL	__moduchar
     0040 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3019     	BANKSEL	_geweiNum
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 00rr                      1- 3020     	MOVAR	_geweiNum
                                    1- 3021     ;;unsigned compare: left < lit (0x63=99), size=1
                                    1- 3022     	.line	257, "main.c"; 	if(preBatValue < 99 && batValue >= preBatValue && count5s == 1)
     0043 2163                      1- 3023     	MOVIA	0x63
                                    1- 3024     	BANKSEL	_preBatValue
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 04rr                      1- 3025     	SUBAR	_preBatValue,W
     0046 0C03                      1- 3026     	BTRSC	STATUS,0
                                    1- 3027     	MGOTO	_00010_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
     0048 01rr                      1- 3028     	MOVR	_preBatValue,W
                                    1- 3029     	BANKSEL	_batValue
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 04rr                      1- 3030     	SUBAR	_batValue,W
     004B 0803                      1- 3031     	BTRSS	STATUS,0
                                    1- 3032     	MGOTO	_00010_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3033     	BANKSEL	_count5s
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 01rr                      1- 3034     	MOVR	_count5s,W
     004F 2401                      1- 3035     	XORIA	0x01
     0050 0903                      1- 3036     	BTRSS	STATUS,2
                                    1- 3037     	MGOTO	_00010_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
     0052 01rr                      1- 3038     	MOVR	(_count5s + 1),W
     0053 2400                      1- 3039     	XORIA	0x00
     0054 0903                      1- 3040     	BTRSS	STATUS,2
                                    1- 3041     	MGOTO	_00010_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3042     	.line	259, "main.c"; 	preBatValue = preBatValue+1;
                                    1- 3043     	BANKSEL	_preBatValue
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 05rr                      1- 3044     	INCR	_preBatValue,F
     0058                           1- 3045     _00010_DS_:
                                    1- 3046     	.line	261, "main.c"; 	if(shiweiNum < 2)
     0058 2102                      1- 3047     	MOVIA	0x02
                                    1- 3048     	BANKSEL	_shiweiNum
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 04rr                      1- 3049     	SUBAR	_shiweiNum,W
     005B 0C03                      1- 3050     	BTRSC	STATUS,0
                                    1- 3051     	MGOTO	_00336_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3052     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3053     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 3054     	.line	263, "main.c"; 	if(chrgStep <= 1)
     005D 2102                      1- 3055     	MOVIA	0x02
                                    1- 3056     	BANKSEL	_chrgStep
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 04rr                      1- 3057     	SUBAR	_chrgStep,W
     0060 0C03                      1- 3058     	BTRSC	STATUS,0
                                    1- 3059     	MGOTO	_00359_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3060     	.line	265, "main.c"; 	PWM1DUTY = 8;
     0062 2108                      1- 3061     	MOVIA	0x08
     0063 00rr                      1- 3062     	SFUN	_PWM1DUTY
                                    1- 3063     	.line	266, "main.c"; 	chrgStep = 1;
     0064 2101                      1- 3064     	MOVIA	0x01
     0065 00rr                      1- 3065     	MOVAR	_chrgStep
                                    1- 3066     	.line	267, "main.c"; 	pwm1Init();
                                    1- 3067     	MCALL	_pwm1Init
     0066 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3068     	MGOTO	_00359_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3069     ;;unsigned compare: left < lit (0x9=9), size=1
     0068                           1- 3070     _00336_DS_:
                                    1- 3071     	.line	270, "main.c"; 	else if(shiweiNum < 9 && geweiNum < 8)
     0068 2109                      1- 3072     	MOVIA	0x09
                                    1- 3073     	BANKSEL	_shiweiNum
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 04rr                      1- 3074     	SUBAR	_shiweiNum,W
     006B 0C03                      1- 3075     	BTRSC	STATUS,0
                                    1- 3076     	MGOTO	_00332_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3077     ;;unsigned compare: left < lit (0x8=8), size=1
     006D 2108                      1- 3078     	MOVIA	0x08
                                    1- 3079     	BANKSEL	_geweiNum
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 04rr                      1- 3080     	SUBAR	_geweiNum,W
     0070 0C03                      1- 3081     	BTRSC	STATUS,0
                                    1- 3082     	MGOTO	_00332_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3083     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3084     ;;unsigned compare: left >= lit (0x3=3), size=1
                                    1- 3085     	.line	272, "main.c"; 	if(chrgStep <= 2)
     0072 2103                      1- 3086     	MOVIA	0x03
                                    1- 3087     	BANKSEL	_chrgStep
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 04rr                      1- 3088     	SUBAR	_chrgStep,W
     0075 0C03                      1- 3089     	BTRSC	STATUS,0
                                    1- 3090     	MGOTO	_00359_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3091     	.line	274, "main.c"; 	chrgStep = 2;
     0077 2102                      1- 3092     	MOVIA	0x02
     0078 00rr                      1- 3093     	MOVAR	_chrgStep
                                    1- 3094     	.line	275, "main.c"; 	PWM1DUTY = 13;
     0079 210D                      1- 3095     	MOVIA	0x0d
     007A 00rr                      1- 3096     	SFUN	_PWM1DUTY
                                    1- 3097     	.line	276, "main.c"; 	pwm1Init();
                                    1- 3098     	MCALL	_pwm1Init
     007B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3099     	MGOTO	_00359_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3100     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3101     ;;unsigned compare: left >= lit (0x4=4), size=1
     007D                           1- 3102     _00332_DS_:
                                    1- 3103     	.line	281, "main.c"; 	if(chrgStep <= 3)
     007D 2104                      1- 3104     	MOVIA	0x04
                                    1- 3105     	BANKSEL	_chrgStep
     007E rrrr                      3-  110 m1      .banksel ram_address
     007F 04rr                      1- 3106     	SUBAR	_chrgStep,W
     0080 0C03                      1- 3107     	BTRSC	STATUS,0
                                    1- 3108     	MGOTO	_00359_DS_
     0081 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3109     	.line	283, "main.c"; 	PWM1DUTY = 12;
     0082 210C                      1- 3110     	MOVIA	0x0c
     0083 00rr                      1- 3111     	SFUN	_PWM1DUTY
                                    1- 3112     	.line	284, "main.c"; 	chrgStep = 3;
     0084 2103                      1- 3113     	MOVIA	0x03
     0085 00rr                      1- 3114     	MOVAR	_chrgStep
                                    1- 3115     	.line	285, "main.c"; 	pwm1Init();
                                    1- 3116     	MCALL	_pwm1Init
     0086 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3117     	MGOTO	_00359_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
     0088                           1- 3118     _00357_DS_:
                                    1- 3119     	.line	293, "main.c"; 	chrgStep = 0;
                                    1- 3120     	BANKSEL	_chrgStep
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 02rr                      1- 3121     	CLRR	_chrgStep
                                    1- 3122     	.line	294, "main.c"; 	countFull = 0;
                                    1- 3123     	BANKSEL	_countFull
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 02rr                      1- 3124     	CLRR	_countFull
                                    1- 3125     	.line	295, "main.c"; 	pwm1Stop();
                                    1- 3126     	MCALL	_pwm1Stop
     008C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3127     	.line	296, "main.c"; 	chrgFlag = 0;
                                    1- 3128     	BANKSEL	_Status
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 1Drr                      1- 3129     	BCR	_Status,3
                                    1- 3130     	.line	298, "main.c"; 	if(workStep > 0)
                                    1- 3131     	BANKSEL	_workStep
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 01rr                      1- 3132     	MOVR	_workStep,W
     0091 0D03                      1- 3133     	BTRSC	STATUS,2
                                    1- 3134     	MGOTO	_00354_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3135     	.line	300, "main.c"; 	showFlag = 1;
     0093 2101                      1- 3136     	MOVIA	0x01
                                    1- 3137     	BANKSEL	_showFlag
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 00rr                      1- 3138     	MOVAR	_showFlag
                                    1- 3139     	.line	301, "main.c"; 	shiweiNum = 0;
                                    1- 3140     	BANKSEL	_shiweiNum
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 02rr                      1- 3141     	CLRR	_shiweiNum
                                    1- 3142     	.line	302, "main.c"; 	geweiNum = workStep;
                                    1- 3143     	BANKSEL	_workStep
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 01rr                      1- 3144     	MOVR	_workStep,W
                                    1- 3145     	BANKSEL	_geweiNum
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 00rr                      1- 3146     	MOVAR	_geweiNum
                                    1- 3147     	MGOTO	_00359_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3148     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3149     ;;unsigned compare: left >= lit (0x64=100), size=1
     009D                           1- 3150     _00354_DS_:
                                    1- 3151     	.line	306, "main.c"; 	if(batValue > 99)
     009D 2164                      1- 3152     	MOVIA	0x64
                                    1- 3153     	BANKSEL	_batValue
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 04rr                      1- 3154     	SUBAR	_batValue,W
     00A0 0803                      1- 3155     	BTRSS	STATUS,0
                                    1- 3156     	MGOTO	_00344_DS_
     00A1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3157     	.line	308, "main.c"; 	shiweiNum = 9;
     00A2 2109                      1- 3158     	MOVIA	0x09
                                    1- 3159     	BANKSEL	_shiweiNum
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 00rr                      1- 3160     	MOVAR	_shiweiNum
                                    1- 3161     	.line	309, "main.c"; 	geweiNum = 9;
                                    1- 3162     	BANKSEL	_geweiNum
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 00rr                      1- 3163     	MOVAR	_geweiNum
                                    1- 3164     	MGOTO	_00345_DS_
     00A7 3rrr                      3-   63 m1      LGOTO rom_address
     00A8                           1- 3165     _00344_DS_:
                                    1- 3166     	.line	311, "main.c"; 	else if(ledLightTime > 0)
                                    1- 3167     	BANKSEL	_ledLightTime
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 01rr                      1- 3168     	MOVR	_ledLightTime,W
     00AA 0D03                      1- 3169     	BTRSC	STATUS,2
                                    1- 3170     	MGOTO	_00345_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3171     	.line	314, "main.c"; 	shiweiNum = preBatValue/10;
     00AC 210A                      1- 3172     	MOVIA	0x0a
     00AD 00rr                      1- 3173     	MOVAR	STK00
                                    1- 3174     	BANKSEL	_preBatValue
     00AE rrrr                      3-  110 m1      .banksel ram_address
     00AF 01rr                      1- 3175     	MOVR	_preBatValue,W
                                    1- 3176     	MCALL	__divuchar
     00B0 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3177     	BANKSEL	_shiweiNum
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 00rr                      1- 3178     	MOVAR	_shiweiNum
                                    1- 3179     	.line	315, "main.c"; 	geweiNum = preBatValue%10;
     00B3 210A                      1- 3180     	MOVIA	0x0a
     00B4 00rr                      1- 3181     	MOVAR	STK00
                                    1- 3182     	BANKSEL	_preBatValue
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 01rr                      1- 3183     	MOVR	_preBatValue,W
                                    1- 3184     	MCALL	__moduchar
     00B7 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3185     	BANKSEL	_geweiNum
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 00rr                      1- 3186     	MOVAR	_geweiNum
     00BA                           1- 3187     _00345_DS_:
                                    1- 3188     	.line	317, "main.c"; 	if(count5s == 1)
                                    1- 3189     	BANKSEL	_count5s
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 01rr                      1- 3190     	MOVR	_count5s,W
     00BC 2401                      1- 3191     	XORIA	0x01
     00BD 0903                      1- 3192     	BTRSS	STATUS,2
                                    1- 3193     	MGOTO	_00359_DS_
     00BE 3rrr                      3-   63 m1      LGOTO rom_address
     00BF 01rr                      1- 3194     	MOVR	(_count5s + 1),W
     00C0 2400                      1- 3195     	XORIA	0x00
     00C1 0903                      1- 3196     	BTRSS	STATUS,2
                                    1- 3197     	MGOTO	_00359_DS_
     00C2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3198     	.line	319, "main.c"; 	if(preBatValue > batValue + 1)
                                    1- 3199     	BANKSEL	_batValue
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 01rr                      1- 3200     	MOVR	_batValue,W
                                    1- 3201     	BANKSEL	r0x1066
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 00rr                      1- 3202     	MOVAR	r0x1066
                                    1- 3203     	BANKSEL	r0x1067
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 02rr                      1- 3204     	CLRR	r0x1067
     00C9 2101                      1- 3205     	MOVIA	0x01
                                    1- 3206     	BANKSEL	r0x1066
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 03rr                      1- 3207     	ADDAR	r0x1066,W
                                    1- 3208     	BANKSEL	r0x1068
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 00rr                      1- 3209     	MOVAR	r0x1068
                                    1- 3210     	BANKSEL	r0x1069
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 02rr                      1- 3211     	CLRR	r0x1069
     00D0 14rr                      1- 3212     	RLR	r0x1069,F
     00D1 2100                      1- 3213     	MOVIA	0x00
     00D2 03rr                      1- 3214     	ADDAR	r0x1069,F
                                    1- 3215     	BANKSEL	_preBatValue
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 01rr                      1- 3216     	MOVR	_preBatValue,W
                                    1- 3217     	BANKSEL	r0x106A
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 00rr                      1- 3218     	MOVAR	r0x106A
                                    1- 3219     	BANKSEL	r0x106B
     00D7 rrrr                      3-  110 m1      .banksel ram_address
     00D8 02rr                      1- 3220     	CLRR	r0x106B
                                    1- 3221     	BANKSEL	r0x1069
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 01rr                      1- 3222     	MOVR	r0x1069,W
     00DB 2580                      1- 3223     	ADDIA	0x80
                                    1- 3224     	BANKSEL	r0x106C
     00DC rrrr                      3-  110 m1      .banksel ram_address
     00DD 00rr                      1- 3225     	MOVAR	r0x106C
     00DE 2100                      1- 3226     	MOVIA	0x00
     00DF 2580                      1- 3227     	ADDIA	0x80
     00E0 04rr                      1- 3228     	SUBAR	r0x106C,W
     00E1 0903                      1- 3229     	BTRSS	STATUS,2
                                    1- 3230     	MGOTO	_00430_DS_
     00E2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3231     	BANKSEL	r0x106A
     00E3 rrrr                      3-  110 m1      .banksel ram_address
     00E4 01rr                      1- 3232     	MOVR	r0x106A,W
                                    1- 3233     	BANKSEL	r0x1068
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 04rr                      1- 3234     	SUBAR	r0x1068,W
     00E7                           1- 3235     _00430_DS_:
     00E7 0C03                      1- 3236     	BTRSC	STATUS,0
                                    1- 3237     	MGOTO	_00359_DS_
     00E8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3238     	.line	321, "main.c"; 	if(preBatValue < (batValue + 15))
     00E9 210F                      1- 3239     	MOVIA	0x0f
                                    1- 3240     	BANKSEL	r0x1066
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 03rr                      1- 3241     	ADDAR	r0x1066,F
     00EC 0803                      1- 3242     	BTRSS	STATUS,0
                                    1- 3243     	MGOTO	_00011_DS_
     00ED 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3244     	BANKSEL	r0x1067
     00EE rrrr                      3-  110 m1      .banksel ram_address
     00EF 05rr                      1- 3245     	INCR	r0x1067,F
     00F0                           1- 3246     _00011_DS_:
                                    1- 3247     	BANKSEL	r0x106B
     00F0 rrrr                      3-  110 m1      .banksel ram_address
     00F1 01rr                      1- 3248     	MOVR	r0x106B,W
     00F2 2580                      1- 3249     	ADDIA	0x80
                                    1- 3250     	BANKSEL	r0x106C
     00F3 rrrr                      3-  110 m1      .banksel ram_address
     00F4 00rr                      1- 3251     	MOVAR	r0x106C
                                    1- 3252     	BANKSEL	r0x1067
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 01rr                      1- 3253     	MOVR	r0x1067,W
     00F7 2580                      1- 3254     	ADDIA	0x80
                                    1- 3255     	BANKSEL	r0x106C
     00F8 rrrr                      3-  110 m1      .banksel ram_address
     00F9 04rr                      1- 3256     	SUBAR	r0x106C,W
     00FA 0903                      1- 3257     	BTRSS	STATUS,2
                                    1- 3258     	MGOTO	_00431_DS_
     00FB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3259     	BANKSEL	r0x1066
     00FC rrrr                      3-  110 m1      .banksel ram_address
     00FD 01rr                      1- 3260     	MOVR	r0x1066,W
                                    1- 3261     	BANKSEL	r0x106A
     00FE rrrr                      3-  110 m1      .banksel ram_address
     00FF 04rr                      1- 3262     	SUBAR	r0x106A,W
     0100                           1- 3263     _00431_DS_:
     0100 0C03                      1- 3264     	BTRSC	STATUS,0
                                    1- 3265     	MGOTO	_00347_DS_
     0101 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3266     	.line	322, "main.c"; 	preBatValue = preBatValue-1;
                                    1- 3267     	BANKSEL	_preBatValue
     0102 rrrr                      3-  110 m1      .banksel ram_address
     0103 06rr                      1- 3268     	DECR	_preBatValue,F
                                    1- 3269     	MGOTO	_00359_DS_
     0104 3rrr                      3-   63 m1      LGOTO rom_address
     0105                           1- 3270     _00347_DS_:
                                    1- 3271     	.line	324, "main.c"; 	preBatValue = batValue;
                                    1- 3272     	BANKSEL	_batValue
     0105 rrrr                      3-  110 m1      .banksel ram_address
     0106 01rr                      1- 3273     	MOVR	_batValue,W
                                    1- 3274     	BANKSEL	_preBatValue
     0107 rrrr                      3-  110 m1      .banksel ram_address
     0108 00rr                      1- 3275     	MOVAR	_preBatValue
     0109                           1- 3276     _00359_DS_:
                                    1- 3277     	.line	330, "main.c"; 	}
                                    1- 3278     	RETURN	
     0109 0010                      3-   40 m1      ret
                                    1- 3279     ; exit point of _chrgCtr
                                    1- 3282     ;	code size estimation:
                                    1- 3283     ;	 1275+  385 =  1660 instructions ( 4090 byte)
                                    1- 3285     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
