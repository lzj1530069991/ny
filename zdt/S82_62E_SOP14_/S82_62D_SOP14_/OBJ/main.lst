
                    Nyquest Technology Co., Ltd.

NYASM 2.30

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062E,c=on
                                    1-    9     	#include "ny8b062e.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_fgCtr
                                    1-   18     	extern	_LedCtr2
                                    1-   19     	extern	_checkInAD
                                    1-   20     	extern	_F_AIN3_Convert
                                    1-   21     	extern	__divuint
                                    1-   22     	extern	_PORTAbits
                                    1-   23     	extern	_PORTBbits
                                    1-   24     	extern	_PCONbits
                                    1-   25     	extern	_BWUCONbits
                                    1-   26     	extern	_ABPLCONbits
                                    1-   27     	extern	_BPHCONbits
                                    1-   28     	extern	_INTEbits
                                    1-   29     	extern	_INTFbits
                                    1-   30     	extern	_ADMDbits
                                    1-   31     	extern	_ADRbits
                                    1-   32     	extern	_ADVREFHbits
                                    1-   33     	extern	_ADCRbits
                                    1-   34     	extern	_AWUCONbits
                                    1-   35     	extern	_PACONbits
                                    1-   36     	extern	_ADJMDbits
                                    1-   37     	extern	_INTEDGbits
                                    1-   38     	extern	_ANAENbits
                                    1-   39     	extern	_RFCbits
                                    1-   40     	extern	_INTE2bits
                                    1-   41     	extern	_INDF
                                    1-   42     	extern	_TMR0
                                    1-   43     	extern	_PCL
                                    1-   44     	extern	_STATUS
                                    1-   45     	extern	_FSR
                                    1-   46     	extern	_PORTA
                                    1-   47     	extern	_PORTB
                                    1-   48     	extern	_PCON
                                    1-   49     	extern	_BWUCON
                                    1-   50     	extern	_PCHBUF
                                    1-   51     	extern	_ABPLCON
                                    1-   52     	extern	_BPHCON
                                    1-   53     	extern	_INTE
                                    1-   54     	extern	_INTF
                                    1-   55     	extern	_ADMD
                                    1-   56     	extern	_ADR
                                    1-   57     	extern	_ADD
                                    1-   58     	extern	_ADVREFH
                                    1-   59     	extern	_ADCR
                                    1-   60     	extern	_AWUCON
                                    1-   61     	extern	_PACON
                                    1-   62     	extern	_ADJMD
                                    1-   63     	extern	_INTEDG
                                    1-   64     	extern	_TMRH
                                    1-   65     	extern	_ANAEN
                                    1-   66     	extern	_RFC
                                    1-   67     	extern	_TM3RH
                                    1-   68     	extern	_INTE2
                                    1-   69     	extern	_TMR1
                                    1-   70     	extern	_T1CR1
                                    1-   71     	extern	_T1CR2
                                    1-   72     	extern	_PWM1DUTY
                                    1-   73     	extern	_PS1CV
                                    1-   74     	extern	_BZ1CR
                                    1-   75     	extern	_IRCR
                                    1-   76     	extern	_TBHP
                                    1-   77     	extern	_TBHD
                                    1-   78     	extern	_TMR2
                                    1-   79     	extern	_T2CR1
                                    1-   80     	extern	_T2CR2
                                    1-   81     	extern	_PWM2DUTY
                                    1-   82     	extern	_PS2CV
                                    1-   83     	extern	_BZ2CR
                                    1-   84     	extern	_OSCCR
                                    1-   85     	extern	_TMR3
                                    1-   86     	extern	_T3CR1
                                    1-   87     	extern	_T3CR2
                                    1-   88     	extern	_PWM3DUTY
                                    1-   89     	extern	_PS3CV
                                    1-   90     	extern	_BZ3CR
                                    1-   91     	extern	_P4CR1
                                    1-   92     	extern	_PWM4DUTY
                                    1-   93     	extern	_IOSTA
                                    1-   94     	extern	_IOSTB
                                    1-   95     	extern	_APHCON
                                    1-   96     	extern	_PS0CV
                                    1-   97     	extern	_BODCON
                                    1-   98     	extern	_CMPCR
                                    1-   99     	extern	_PCON1
                                    1-  100     	extern	_T0MD
                                    1-  101     	extern	___sdcc_saved_fsr
                                    1-  102     	extern	___sdcc_saved_stk00
                                    1-  103     	extern	___sdcc_saved_stk01
                                    1-  104     	extern	__nyc_ny8_startup
                                    1-  105     ;--------------------------------------------------------
                                    1-  106     ; global declarations
                                    1-  107     ;--------------------------------------------------------
                                    1-  108     	extern	_F_wait_eoc
                                    1-  109     	extern	_F_AIN2_Convert
                                    1-  110     	extern	_F_AIN4_Convert
                                    1-  111     	extern	_checkOutA
                                    1-  112     	extern	_checkBatAD
                                    1-  113     	extern	_initAD
                                    1-  114     	extern	_ledOff
                                    1-  115     	extern	_ledRed
                                    1-  116     	extern	_ledGreen
                                    1-  117     	extern	_delay
                                    1-  118     	extern	_chrgCtr
                                    1-  119     	extern	_keyRead
                                    1-  120     	extern	_gotoSleep
                                    1-  121     	extern	_pwmStop
                                    1-  122     	extern	_pwmInit
                                    1-  123     	extern	_pwm1Stop
                                    1-  124     	extern	_pwm1Init
                                    1-  125     	extern	_LED6ON
                                    1-  126     	extern	_LED5ON
                                    1-  127     	extern	_LED4ON
                                    1-  128     	extern	_LED3ON
                                    1-  129     	extern	_LED2ON
                                    1-  130     	extern	_LED1ON
                                    1-  131     	extern	_LedInput
                                    1-  132     	extern	_ledShow
                                    1-  133     	extern	_initSys
                                    1-  134     	extern	_powerOff
                                    1-  135     	extern	_keyCtr
                                    1-  136     	extern	_isr
                                    1-  137     	extern	_main
                                    1-  138     	extern	_Status
                                    1-  139     	extern	_intCount
                                    1-  140     	extern	_count500ms
                                    1-  141     	extern	_keyCount
                                    1-  142     	extern	_workStep
                                    1-  143     	extern	_ledStep
                                    1-  144     	extern	_maxDuty
                                    1-  145     	extern	_pwStep
                                    1-  146     	extern	_R_AIN4_DATA
                                    1-  147     	extern	_R_AIN4_DATA_LB
                                    1-  148     	extern	_R_AIN2_DATA
                                    1-  149     	extern	_R_AIN2_DATA_LB
                                    1-  150     	extern	_chrgTime
                                    1-  151     	extern	_startStep
                                    1-  152     	extern	_sleepTime
                                    1-  153     	extern	_count200ms
                                    1-  154     	extern	_count1s
                                    1-  155     	extern	_count900s
                                    1-  156     	extern	_lowBatTime
                                    1-  157     	extern	_ledTime
                                    1-  158     	extern	_overCount
                                    1-  159     	extern	_chrgCount
                                    1-  160     	extern	_ledLightTime
                                    1-  161     	extern	_currentDuty
                                    1-  162     	extern	_fullCount
                                    1-  163     	extern	_shanshuoTime
                                    1-  164     	extern	_firstTime
                                    1-  165     	extern	_tempDuty
                                    1-  166     	extern	_lowCount
                                    1-  167     	extern	_cDuty
                                    1-  168     	extern	_tempLedStep
                                    1-  169     	extern	_count5S
                                    1-  170     	extern	_ledDeadTime
                                    1-  171     	extern	_lockLedStep
                                    1-  172     	extern	_closeCount
                                    1-  173     	extern	_chrgStep
                                    1-  174     	extern	_prePwStep
                                    1-  175     	extern	_chrgduty
                                    1-  176     	extern	_maxduty
                                    1-  177     	extern	_count50ms
                                    1-  178     	extern	_chrgFullFlag
                                    1-  179     	extern	_ledCount
                                    1-  180     	extern	_addTime
                                    1-  181     	extern	_subTime
                                    1-  182     	extern	_subMin
                                    1-  183     	extern	_chrgWaitTime
                                    1-  184     	extern	_tempSum
                                    1-  185     	extern	_count100
                                    1-  186     	extern	_tempResult
                                    1-  187     	extern	_addFlag
                                    1-  188     	extern	_closeFlag
                                    1-  189     	extern	_firstChrgCount
                                    1-  190     	extern	_chrgmaxduty
                                    1-  191     	extern	_count10s
                                    1-  192     	extern	_debug
                                    1-  194     	extern PSAVE
                                    1-  195     	extern SSAVE
                                    1-  196     	extern WSAVE
                                    1-  197     	extern STK04
                                    1-  198     	extern STK03
                                    1-  199     	extern STK02
                                    1-  200     	extern STK01
                                    1-  201     	extern STK00
                                    1-  203     .segment "uninit", 0x20000040
 20000040                           1-  204     PSAVE:
                                    1-  205     	.res 1
 20000041                           1-  206     SSAVE:
                                    1-  207     	.res 1
 20000042                           1-  208     WSAVE:
                                    1-  209     	.res 1
 20000043                           1-  210     STK04:
                                    1-  211     	.res 1
 20000044                           1-  212     STK03:
                                    1-  213     	.res 1
 20000045                           1-  214     STK02:
                                    1-  215     	.res 1
 20000046                           1-  216     STK01:
                                    1-  217     	.res 1
 20000047                           1-  218     STK00:
                                    1-  219     	.res 1
                                    1-  221     ;--------------------------------------------------------
                                    1-  222     ; global definitions
                                    1-  223     ;--------------------------------------------------------
                                    1-  224     .segment "uninit"
     0000                           1-  225     _R_AIN4_DATA:
                                    1-  226     	.res	2
                                    1-  229     .segment "uninit"
     0000                           1-  230     _R_AIN4_DATA_LB:
                                    1-  231     	.res	1
                                    1-  234     .segment "uninit"
     0000                           1-  235     _R_AIN2_DATA:
                                    1-  236     	.res	2
                                    1-  239     .segment "uninit"
     0000                           1-  240     _R_AIN2_DATA_LB:
                                    1-  241     	.res	1
                                    1-  244     ;--------------------------------------------------------
                                    1-  245     ; absolute symbol definitions
                                    1-  246     ;--------------------------------------------------------
                                    1-  247     ;--------------------------------------------------------
                                    1-  248     ; compiler-defined variables
                                    1-  249     ;--------------------------------------------------------
                                    1-  250     .segment "uninit"
     0000                           1-  251     r0x1064:
                                    1-  252     	.res	1
                                    1-  253     .segment "uninit"
     0000                           1-  254     r0x105C:
                                    1-  255     	.res	1
                                    1-  256     .segment "uninit"
     0000                           1-  257     r0x1063:
                                    1-  258     	.res	1
                                    1-  259     .segment "uninit"
     0000                           1-  260     r0x1062:
                                    1-  261     	.res	1
                                    1-  262     .segment "uninit"
     0000                           1-  263     r0x1061:
                                    1-  264     	.res	1
                                    1-  265     .segment "uninit"
     0000                           1-  266     r0x1060:
                                    1-  267     	.res	1
                                    1-  268     .segment "uninit"
     0000                           1-  269     r0x105F:
                                    1-  270     	.res	1
                                    1-  271     .segment "uninit"
     0000                           1-  272     r0x105E:
                                    1-  273     	.res	1
                                    1-  274     .segment "uninit"
     0000                           1-  275     r0x1055:
                                    1-  276     	.res	1
                                    1-  277     .segment "uninit"
     0000                           1-  278     r0x105D:
                                    1-  279     	.res	1
                                    1-  280     .segment "uninit"
     0000                           1-  281     r0x105B:
                                    1-  282     	.res	1
                                    1-  283     .segment "uninit"
     0000                           1-  284     r0x1056:
                                    1-  285     	.res	1
                                    1-  286     .segment "uninit"
     0000                           1-  287     r0x1057:
                                    1-  288     	.res	1
                                    1-  289     .segment "uninit"
     0000                           1-  290     r0x1058:
                                    1-  291     	.res	1
                                    1-  292     .segment "uninit"
     0000                           1-  293     r0x105A:
                                    1-  294     	.res	1
                                    1-  295     .segment "uninit"
     0000                           1-  296     r0x103F:
                                    1-  297     	.res	1
                                    1-  298     .segment "uninit"
     0000                           1-  299     r0x1040:
                                    1-  300     	.res	1
                                    1-  301     .segment "uninit"
     0000                           1-  302     r0x1053:
                                    1-  303     	.res	1
                                    1-  304     .segment "uninit"
     0000                           1-  305     r0x1054:
                                    1-  306     	.res	1
                                    1-  307     .segment "uninit"
     0000                           1-  308     r0x104F:
                                    1-  309     	.res	1
                                    1-  310     .segment "uninit"
     0000                           1-  311     r0x1050:
                                    1-  312     	.res	1
                                    1-  313     .segment "uninit"
     0000                           1-  314     r0x1047:
                                    1-  315     	.res	1
                                    1-  316     .segment "uninit"
     0000                           1-  317     r0x1048:
                                    1-  318     	.res	1
                                    1-  319     .segment "uninit"
     0000                           1-  320     r0x1049:
                                    1-  321     	.res	1
                                    1-  322     .segment "uninit"
     0000                           1-  323     r0x104C:
                                    1-  324     	.res	1
                                    1-  325     .segment "uninit"
     0000                           1-  326     r0x1041:
                                    1-  327     	.res	1
                                    1-  328     .segment "uninit"
     0000                           1-  329     r0x1042:
                                    1-  330     	.res	1
                                    1-  331     .segment "uninit"
     0000                           1-  332     r0x1043:
                                    1-  333     	.res	1
                                    1-  334     .segment "uninit"
     0000                           1-  335     r0x1046:
                                    1-  336     	.res	1
                                    1-  337     ;--------------------------------------------------------
                                    1-  338     ; initialized data
                                    1-  339     ;--------------------------------------------------------
                                    1-  341     .segment "idata"
     0000                           1-  342     _Status:
     0000 0000                      1-  343     	dw	0x00
                                    1-  347     .segment "idata"
     0000                           1-  348     _intCount:
     0000 0000                      1-  349     	dw	0x00
                                    1-  353     .segment "idata"
     0000                           1-  354     _count500ms:
     0000 0000                      1-  355     	dw	0x00
                                    1-  359     .segment "idata"
     0000                           1-  360     _keyCount:
     0000 0000                      1-  361     	dw	0x00
                                    1-  365     .segment "idata"
     0000                           1-  366     _workStep:
     0000 0000                      1-  367     	dw	0x00
                                    1-  371     .segment "idata"
     0000                           1-  372     _ledStep:
     0000 0000                      1-  373     	dw	0x00
                                    1-  377     .segment "idata"
     0000                           1-  378     _maxDuty:
     0000 0000                      1-  379     	dw	0x00
                                    1-  383     .segment "idata"
     0000                           1-  384     _pwStep:
     0000 0000                      1-  385     	dw	0x00
                                    1-  389     .segment "idata"
     0000                           1-  390     _chrgTime:
     0000 0000 0000                 1-  391     	dw	0x00, 0x00
                                    1-  395     .segment "idata"
     0000                           1-  396     _startStep:
     0000 0000                      1-  397     	dw	0x00
                                    1-  401     .segment "idata"
     0000                           1-  402     _sleepTime:
     0000 0000 0000                 1-  403     	dw	0x00, 0x00
                                    1-  407     .segment "idata"
     0000                           1-  408     _count200ms:
     0000 0000                      1-  409     	dw	0x00
                                    1-  413     .segment "idata"
     0000                           1-  414     _count1s:
     0000 0000                      1-  415     	dw	0x00
                                    1-  419     .segment "idata"
     0000                           1-  420     _count900s:
     0000 0000 0000                 1-  421     	dw	0x00, 0x00
                                    1-  425     .segment "idata"
     0000                           1-  426     _lowBatTime:
     0000 0000                      1-  427     	dw	0x00
                                    1-  431     .segment "idata"
     0000                           1-  432     _ledTime:
     0000 0000                      1-  433     	dw	0x00
                                    1-  437     .segment "idata"
     0000                           1-  438     _overCount:
     0000 0000                      1-  439     	dw	0x00
                                    1-  443     .segment "idata"
     0000                           1-  444     _chrgCount:
     0000 0000                      1-  445     	dw	0x00
                                    1-  449     .segment "idata"
     0000                           1-  450     _ledLightTime:
     0000 0000                      1-  451     	dw	0x00
                                    1-  455     .segment "idata"
     0000                           1-  456     _currentDuty:
     0000 0000                      1-  457     	dw	0x00
                                    1-  461     .segment "idata"
     0000                           1-  462     _fullCount:
     0000 0000 0000                 1-  463     	dw	0x00, 0x00
                                    1-  467     .segment "idata"
     0000                           1-  468     _shanshuoTime:
     0000 0000                      1-  469     	dw	0x00
                                    1-  473     .segment "idata"
     0000                           1-  474     _firstTime:
     0000 0000                      1-  475     	dw	0x00
                                    1-  479     .segment "idata"
     0000                           1-  480     _tempDuty:
     0000 0000                      1-  481     	dw	0x00
                                    1-  485     .segment "idata"
     0000                           1-  486     _lowCount:
     0000 0000                      1-  487     	dw	0x00
                                    1-  491     .segment "idata"
     0000                           1-  492     _cDuty:
     0000 0000                      1-  493     	dw	0x00
                                    1-  497     .segment "idata"
     0000                           1-  498     _tempLedStep:
     0000 0000                      1-  499     	dw	0x00
                                    1-  503     .segment "idata"
     0000                           1-  504     _count5S:
     0000 0000 0000                 1-  505     	dw	0x00, 0x00
                                    1-  509     .segment "idata"
     0000                           1-  510     _ledDeadTime:
     0000 0000                      1-  511     	dw	0x00
                                    1-  515     .segment "idata"
     0000                           1-  516     _lockLedStep:
     0000 0000                      1-  517     	dw	0x00
                                    1-  521     .segment "idata"
     0000                           1-  522     _closeCount:
     0000 0000 0000                 1-  523     	dw	0x00, 0x00
                                    1-  527     .segment "idata"
     0000                           1-  528     _chrgStep:
     0000 0000                      1-  529     	dw	0x00
                                    1-  533     .segment "idata"
     0000                           1-  534     _prePwStep:
     0000 0000                      1-  535     	dw	0x00
                                    1-  539     .segment "idata"
     0000                           1-  540     _chrgduty:
     0000 0000                      1-  541     	dw	0x00
                                    1-  545     .segment "idata"
     0000                           1-  546     _maxduty:
     0000 0000                      1-  547     	dw	0x00
                                    1-  551     .segment "idata"
     0000                           1-  552     _count50ms:
     0000 0000                      1-  553     	dw	0x00
                                    1-  557     .segment "idata"
     0000                           1-  558     _chrgFullFlag:
     0000 0000                      1-  559     	dw	0x00
                                    1-  563     .segment "idata"
     0000                           1-  564     _ledCount:
     0000 0000                      1-  565     	dw	0x00
                                    1-  569     .segment "idata"
     0000                           1-  570     _addTime:
     0000 0000                      1-  571     	dw	0x00
                                    1-  575     .segment "idata"
     0000                           1-  576     _subTime:
     0000 0000                      1-  577     	dw	0x00
                                    1-  581     .segment "idata"
     0000                           1-  582     _subMin:
     0000 0000                      1-  583     	dw	0x00
                                    1-  587     .segment "idata"
     0000                           1-  588     _chrgWaitTime:
     0000 0000                      1-  589     	dw	0x00
                                    1-  593     .segment "idata"
     0000                           1-  594     _tempSum:
     0000 0000 0000                 1-  595     	dw	0x00, 0x00
                                    1-  599     .segment "idata"
     0000                           1-  600     _count100:
     0000 0000                      1-  601     	dw	0x00
                                    1-  605     .segment "idata"
     0000                           1-  606     _tempResult:
     0000 0000 0000                 1-  607     	dw	0x00, 0x00
                                    1-  611     .segment "idata"
     0000                           1-  612     _addFlag:
     0000 0000                      1-  613     	dw	0x00
                                    1-  617     .segment "idata"
     0000                           1-  618     _closeFlag:
     0000 0000                      1-  619     	dw	0x00
                                    1-  623     .segment "idata"
     0000                           1-  624     _firstChrgCount:
     0000 0000 0000                 1-  625     	dw	0x00, 0x00
                                    1-  629     .segment "idata"
     0000                           1-  630     _chrgmaxduty:
     0000 0000                      1-  631     	dw	0x00
                                    1-  635     .segment "idata"
     0000                           1-  636     _count10s:
     0000 0000 0000                 1-  637     	dw	0x00, 0x00
                                    1-  641     .segment "idata"
     0000                           1-  642     _debug:
     0000 0000                      1-  643     	dw	0x00
                                    1-  646     ;--------------------------------------------------------
                                    1-  647     ; overlayable items in internal ram 
                                    1-  648     ;--------------------------------------------------------
                                    1-  649     ;	udata_ovr
                                    1-  650     ;--------------------------------------------------------
                                    1-  651     ; reset vector 
                                    1-  652     ;--------------------------------------------------------
                                    1-  653     ORG	0x0000
     0000 3rrr                      1-  654     	LGOTO	__nyc_ny8_startup
                                    1-  655     ;--------------------------------------------------------
                                    1-  656     ; interrupt and initialization code
                                    1-  657     ;--------------------------------------------------------
                                    1-  658     ORG 0x0008
                                    1-  659     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  661     .segment "code"
     0000                           1-  662     __sdcc_interrupt:
                                    1-  663     ;***
                                    1-  664     ;  pBlock Stats: dbName = I
                                    1-  665     ;***
                                    1-  666     ;2 compiler assigned registers:
                                    1-  667     ;   STK00
                                    1-  668     ;   STK01
                                    1-  669     ;; Starting pCode block
     0000                           1-  670     _isr:
                                    1-  671     ; 0 exit points
                                    1-  672     	.line	128, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  673     	MOVAR	WSAVE
     0001 1503                      1-  674     	SWAPR	STATUS,W
     0002 0283                      1-  675     	CLRR	STATUS
     0003 00rr                      1-  676     	MOVAR	SSAVE
     0004 010A                      1-  677     	MOVR	PCHBUF,W
     0005 028A                      1-  678     	CLRR	PCHBUF
     0006 00rr                      1-  679     	MOVAR	PSAVE
     0007 0104                      1-  680     	MOVR	FSR,W
                                    1-  681     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  682     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  683     	MOVR	STK00,W
                                    1-  684     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  685     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  686     	MOVR	STK01,W
                                    1-  687     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  688     	MOVAR	___sdcc_saved_stk01
                                    1-  689     	.line	130, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  690     	BTRSS	_INTFbits,0
                                    1-  691     	MGOTO	_00126_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  692     	.line	132, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  693     	MOVIA	0x37
     0013 03rr                      1-  694     	ADDAR	_TMR0,F
                                    1-  695     	.line	134, "main.c"; 	if(++intCount >= 125)
                                    1-  696     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  697     	INCR	_intCount,F
                                    1-  698     ;;unsigned compare: left < lit (0x7D=125), size=1
     0016 217D                      1-  699     	MOVIA	0x7d
     0017 04rr                      1-  700     	SUBAR	_intCount,W
     0018 0803                      1-  701     	BTRSS	STATUS,0
                                    1-  702     	MGOTO	_00126_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  703     	.line	136, "main.c"; 	IntFlag = 1;
                                    1-  704     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  705     	BSR	_Status,0
                                    1-  706     	.line	137, "main.c"; 	intCount = 0;
                                    1-  707     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  708     	CLRR	_intCount
                                    1-  709     	.line	138, "main.c"; 	if(++count500ms >= 40)
                                    1-  710     	BANKSEL	_count500ms
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 05rr                      1-  711     	INCR	_count500ms,F
                                    1-  712     ;;unsigned compare: left < lit (0x28=40), size=1
     0020 2128                      1-  713     	MOVIA	0x28
     0021 04rr                      1-  714     	SUBAR	_count500ms,W
     0022 0C03                      1-  715     	BTRSC	STATUS,0
                                    1-  716     	.line	139, "main.c"; 	count500ms = 0;
     0023 02rr                      1-  717     	CLRR	_count500ms
                                    1-  718     	.line	140, "main.c"; 	if(++count200ms >= 20)
                                    1-  719     	BANKSEL	_count200ms
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 05rr                      1-  720     	INCR	_count200ms,F
     0026 2114                      1-  721     	MOVIA	0x14
     0027 04rr                      1-  722     	SUBAR	_count200ms,W
     0028 0803                      1-  723     	BTRSS	STATUS,0
                                    1-  724     	MGOTO	_00110_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  725     	.line	142, "main.c"; 	count200ms = 0;
     002A 02rr                      1-  726     	CLRR	_count200ms
                                    1-  727     	.line	143, "main.c"; 	if(ledDeadTime > 0)
                                    1-  728     	BANKSEL	_ledDeadTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1-  729     	MOVR	_ledDeadTime,W
     002D 0903                      1-  730     	BTRSS	STATUS,2
                                    1-  731     	.line	144, "main.c"; 	--ledDeadTime;
     002E 06rr                      1-  732     	DECR	_ledDeadTime,F
     002F                           1-  733     _00110_DS_:
                                    1-  734     	.line	146, "main.c"; 	if(++count1s >= 100)
                                    1-  735     	BANKSEL	_count1s
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 05rr                      1-  736     	INCR	_count1s,F
     0031 2164                      1-  737     	MOVIA	0x64
     0032 04rr                      1-  738     	SUBAR	_count1s,W
     0033 0803                      1-  739     	BTRSS	STATUS,0
                                    1-  740     	MGOTO	_00126_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  741     	.line	148, "main.c"; 	count1s = 0;
     0035 02rr                      1-  742     	CLRR	_count1s
                                    1-  743     	.line	149, "main.c"; 	if(chrgFlag == 1 && pwStep == 6)
                                    1-  744     	BANKSEL	_Status
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 09rr                      1-  745     	BTRSS	_Status,3
                                    1-  746     	MGOTO	_00112_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  747     	BANKSEL	_pwStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1-  748     	MOVR	_pwStep,W
     003B 2406                      1-  749     	XORIA	0x06
     003C 0903                      1-  750     	BTRSS	STATUS,2
                                    1-  751     	MGOTO	_00112_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  752     	.line	151, "main.c"; 	++chrgTime;
                                    1-  753     	BANKSEL	_chrgTime
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 05rr                      1-  754     	INCR	_chrgTime,F
     0040 0D03                      1-  755     	BTRSC	STATUS,2
     0041 05rr                      1-  756     	INCR	(_chrgTime + 1),F
     0042                           1-  757     _00112_DS_:
                                    1-  758     	.line	154, "main.c"; 	if(ledLightTime > 0)
                                    1-  759     	BANKSEL	_ledLightTime
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1-  760     	MOVR	_ledLightTime,W
     0044 0903                      1-  761     	BTRSS	STATUS,2
                                    1-  762     	.line	155, "main.c"; 	--ledLightTime;
     0045 06rr                      1-  763     	DECR	_ledLightTime,F
                                    1-  764     	.line	156, "main.c"; 	if(shanshuoTime > 0)
                                    1-  765     	BANKSEL	_shanshuoTime
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 01rr                      1-  766     	MOVR	_shanshuoTime,W
     0048 0903                      1-  767     	BTRSS	STATUS,2
                                    1-  768     	.line	157, "main.c"; 	--shanshuoTime;
     0049 06rr                      1-  769     	DECR	_shanshuoTime,F
                                    1-  770     	.line	158, "main.c"; 	if(workStep)
                                    1-  771     	BANKSEL	_workStep
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1-  772     	MOVR	_workStep,W
     004C 0D03                      1-  773     	BTRSC	STATUS,2
                                    1-  774     	MGOTO	_00119_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  775     	.line	160, "main.c"; 	++count900s;
                                    1-  776     	BANKSEL	_count900s
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 05rr                      1-  777     	INCR	_count900s,F
     0050 0D03                      1-  778     	BTRSC	STATUS,2
     0051 05rr                      1-  779     	INCR	(_count900s + 1),F
                                    1-  780     	MGOTO	_00126_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
     0053                           1-  781     _00119_DS_:
                                    1-  782     	.line	164, "main.c"; 	count900s = 0;
                                    1-  783     	BANKSEL	_count900s
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 02rr                      1-  784     	CLRR	_count900s
     0055 02rr                      1-  785     	CLRR	(_count900s + 1)
     0056                           1-  786     _00126_DS_:
                                    1-  787     	.line	173, "main.c"; 	if(INTFbits.PABIF)
     0056 08rr                      1-  788     	BTRSS	_INTFbits,1
                                    1-  789     	MGOTO	_00128_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  790     	.line	175, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0058 21FD                      1-  791     	MOVIA	0xfd
     0059 00rr                      1-  792     	MOVAR	_INTF
     005A                           1-  793     _00128_DS_:
                                    1-  794     	.line	178, "main.c"; 	INTF = 0;
     005A 02rr                      1-  795     	CLRR	_INTF
                                    1-  796     	.line	180, "main.c"; 	}
                                    1-  797     	BANKSEL	___sdcc_saved_stk01
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 01rr                      1-  798     	MOVR	___sdcc_saved_stk01,W
     005D 00rr                      1-  799     	MOVAR	STK01
                                    1-  800     	BANKSEL	___sdcc_saved_stk00
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 01rr                      1-  801     	MOVR	___sdcc_saved_stk00,W
     0060 00rr                      1-  802     	MOVAR	STK00
                                    1-  803     	BANKSEL	___sdcc_saved_fsr
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1-  804     	MOVR	___sdcc_saved_fsr,W
     0063 0084                      1-  805     	MOVAR	FSR
     0064 01rr                      1-  806     	MOVR	PSAVE,W
     0065 008A                      1-  807     	MOVAR	PCHBUF
     0066 0283                      1-  808     	CLRR	STATUS
     0067 15rr                      1-  809     	SWAPR	SSAVE,W
     0068 0083                      1-  810     	MOVAR	STATUS
     0069 15rr                      1-  811     	SWAPR	WSAVE,F
     006A 15rr                      1-  812     	SWAPR	WSAVE,W
     006B                           1-  813     END_OF_INTERRUPT:
     006B 0011                      1-  814     	RETIE	
                                    1-  816     ;--------------------------------------------------------
                                    1-  817     ; code
                                    1-  818     ;--------------------------------------------------------
                                    1-  819     ;***
                                    1-  820     ;  pBlock Stats: dbName = M
                                    1-  821     ;***
                                    1-  822     ;has an exit
                                    1-  823     ;functions called:
                                    1-  824     ;   _initSys
                                    1-  825     ;   _initAD
                                    1-  826     ;   _ledShow
                                    1-  827     ;   _pwmStop
                                    1-  828     ;   _powerOff
                                    1-  829     ;   _keyCtr
                                    1-  830     ;   _checkBatAD
                                    1-  831     ;   _checkOutA
                                    1-  832     ;   _chrgCtr
                                    1-  833     ;   _gotoSleep
                                    1-  834     ;   _powerOff
                                    1-  835     ;   _initSys
                                    1-  836     ;   _initAD
                                    1-  837     ;   _ledShow
                                    1-  838     ;   _pwmStop
                                    1-  839     ;   _powerOff
                                    1-  840     ;   _keyCtr
                                    1-  841     ;   _checkBatAD
                                    1-  842     ;   _checkOutA
                                    1-  843     ;   _chrgCtr
                                    1-  844     ;   _gotoSleep
                                    1-  845     ;   _powerOff
                                    1-  846     ;; Starting pCode block
                                    1-  847     .segment "code"; module=main, function=_main
     0000                           1-  849     _main:
                                    1-  850     ; 2 exit points
                                    1-  851     	.line	184, "main.c"; 	initSys();
                                    1-  852     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  853     	.line	185, "main.c"; 	initAD();
                                    1-  854     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  855     _00167_DS_:
                                    1-  856     	.line	188, "main.c"; 	CLRWDT();
     0002 0002                      1-  857     	clrwdt
                                    1-  858     	.line	189, "main.c"; 	ledShow();
                                    1-  859     	MCALL	_ledShow
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  860     	.line	203, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  861     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  862     	MOVR	_workStep,W
     0006 0D03                      1-  863     	BTRSC	STATUS,2
                                    1-  864     	MGOTO	_00134_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  865     	BANKSEL	_currentDuty
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 01rr                      1-  866     	MOVR	_currentDuty,W
                                    1-  867     	BANKSEL	_maxDuty
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 04rr                      1-  868     	SUBAR	_maxDuty,W
     000C 0C03                      1-  869     	BTRSC	STATUS,0
                                    1-  870     	MGOTO	_00134_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  871     	.line	206, "main.c"; 	currentDuty = currentDuty - 1;
                                    1-  872     	BANKSEL	_currentDuty
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 06rr                      1-  873     	DECR	_currentDuty,F
                                    1-  874     	.line	207, "main.c"; 	PWM2DUTY = currentDuty;
     0010 01rr                      1-  875     	MOVR	_currentDuty,W
     0011 00rr                      1-  876     	SFUN	_PWM2DUTY
                                    1-  877     	.line	208, "main.c"; 	cDuty = currentDuty;
     0012 01rr                      1-  878     	MOVR	_currentDuty,W
                                    1-  879     	BANKSEL	_cDuty
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 00rr                      1-  880     	MOVAR	_cDuty
     0015                           1-  881     _00134_DS_:
                                    1-  882     	.line	211, "main.c"; 	if(!IntFlag)
                                    1-  883     	BANKSEL	_Status
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 08rr                      1-  884     	BTRSS	_Status,0
                                    1-  885     	MGOTO	_00167_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  886     	.line	213, "main.c"; 	IntFlag = 0;
     0018 1Crr                      1-  887     	BCR	_Status,0
                                    1-  888     	.line	215, "main.c"; 	if(shanshuoTime == 0 && pwStep == 0 && workStep > 0)
                                    1-  889     	BANKSEL	_shanshuoTime
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1-  890     	MOVR	_shanshuoTime,W
     001B 0903                      1-  891     	BTRSS	STATUS,2
                                    1-  892     	MGOTO	_00141_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  893     	BANKSEL	_pwStep
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1-  894     	MOVR	_pwStep,W
     001F 0903                      1-  895     	BTRSS	STATUS,2
                                    1-  896     	MGOTO	_00141_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  897     	BANKSEL	_workStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1-  898     	MOVR	_workStep,W
     0023 0D03                      1-  899     	BTRSC	STATUS,2
                                    1-  900     	MGOTO	_00141_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  901     	.line	217, "main.c"; 	if(++closeCount > 100)
                                    1-  902     	BANKSEL	_closeCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 05rr                      1-  903     	INCR	_closeCount,F
     0027 0D03                      1-  904     	BTRSC	STATUS,2
     0028 05rr                      1-  905     	INCR	(_closeCount + 1),F
                                    1-  906     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  907     ;;unsigned compare: left >= lit (0x65=101), size=2
     0029 2100                      1-  908     	MOVIA	0x00
     002A 04rr                      1-  909     	SUBAR	(_closeCount + 1),W
     002B 0903                      1-  910     	BTRSS	STATUS,2
                                    1-  911     	MGOTO	_00235_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
     002D 2165                      1-  912     	MOVIA	0x65
     002E 04rr                      1-  913     	SUBAR	_closeCount,W
     002F                           1-  914     _00235_DS_:
     002F 0803                      1-  915     	BTRSS	STATUS,0
                                    1-  916     	MGOTO	_00142_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  917     	.line	219, "main.c"; 	closeFlag = 1;
     0031 2101                      1-  918     	MOVIA	0x01
                                    1-  919     	BANKSEL	_closeFlag
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 00rr                      1-  920     	MOVAR	_closeFlag
                                    1-  921     	.line	220, "main.c"; 	closeCount = 0;
                                    1-  922     	BANKSEL	_closeCount
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 02rr                      1-  923     	CLRR	_closeCount
     0036 02rr                      1-  924     	CLRR	(_closeCount + 1)
                                    1-  925     	.line	221, "main.c"; 	workStep = 0;
                                    1-  926     	BANKSEL	_workStep
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 02rr                      1-  927     	CLRR	_workStep
                                    1-  928     	.line	222, "main.c"; 	ledStep = 0;
                                    1-  929     	BANKSEL	_ledStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 02rr                      1-  930     	CLRR	_ledStep
                                    1-  931     	.line	223, "main.c"; 	pwmStop();
                                    1-  932     	MCALL	_pwmStop
     003B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  933     	MGOTO	_00142_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D                           1-  934     _00141_DS_:
                                    1-  935     	.line	228, "main.c"; 	closeCount = 0;
                                    1-  936     	BANKSEL	_closeCount
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 02rr                      1-  937     	CLRR	_closeCount
     003F 02rr                      1-  938     	CLRR	(_closeCount + 1)
                                    1-  939     ;;unsigned compare: left < lit (0x5=5), size=1
     0040                           1-  940     _00142_DS_:
                                    1-  941     	.line	231, "main.c"; 	if(overCount >= 5 && workStep > 0)
     0040 2105                      1-  942     	MOVIA	0x05
                                    1-  943     	BANKSEL	_overCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 04rr                      1-  944     	SUBAR	_overCount,W
     0043 0803                      1-  945     	BTRSS	STATUS,0
                                    1-  946     	MGOTO	_00148_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  947     	BANKSEL	_workStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1-  948     	MOVR	_workStep,W
     0047 0D03                      1-  949     	BTRSC	STATUS,2
                                    1-  950     	MGOTO	_00148_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  951     	.line	233, "main.c"; 	if(++count5S > 500)
                                    1-  952     	BANKSEL	_count5S
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 05rr                      1-  953     	INCR	_count5S,F
     004B 0D03                      1-  954     	BTRSC	STATUS,2
     004C 05rr                      1-  955     	INCR	(_count5S + 1),F
                                    1-  956     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  957     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     004D 2101                      1-  958     	MOVIA	0x01
     004E 04rr                      1-  959     	SUBAR	(_count5S + 1),W
     004F 0903                      1-  960     	BTRSS	STATUS,2
                                    1-  961     	MGOTO	_00237_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
     0051 21F5                      1-  962     	MOVIA	0xf5
     0052 04rr                      1-  963     	SUBAR	_count5S,W
     0053                           1-  964     _00237_DS_:
     0053 0803                      1-  965     	BTRSS	STATUS,0
                                    1-  966     	MGOTO	_00149_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  967     	.line	235, "main.c"; 	overCount = 0;
                                    1-  968     	BANKSEL	_overCount
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 02rr                      1-  969     	CLRR	_overCount
                                    1-  970     	.line	236, "main.c"; 	count5S = 0;
                                    1-  971     	BANKSEL	_count5S
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 02rr                      1-  972     	CLRR	_count5S
     0059 02rr                      1-  973     	CLRR	(_count5S + 1)
                                    1-  974     	.line	237, "main.c"; 	ledDeadTime = 25;
     005A 2119                      1-  975     	MOVIA	0x19
                                    1-  976     	BANKSEL	_ledDeadTime
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 00rr                      1-  977     	MOVAR	_ledDeadTime
                                    1-  978     	.line	238, "main.c"; 	powerOff();
                                    1-  979     	MCALL	_powerOff
     005D 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  980     	MGOTO	_00149_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
     005F                           1-  981     _00148_DS_:
                                    1-  982     	.line	243, "main.c"; 	count5S = 0;
                                    1-  983     	BANKSEL	_count5S
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 02rr                      1-  984     	CLRR	_count5S
     0061 02rr                      1-  985     	CLRR	(_count5S + 1)
     0062                           1-  986     _00149_DS_:
                                    1-  987     	.line	245, "main.c"; 	if(chrgFlag == 0)
                                    1-  988     	BANKSEL	_Status
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 09rr                      1-  989     	BTRSS	_Status,3
                                    1-  990     	.line	246, "main.c"; 	keyCtr();
                                    1-  991     	MCALL	_keyCtr
     0064 2rrr                      3-   66 m1      LCALL rom_address
     0065                           1-  992     _00152_DS_:
                                    1-  993     	.line	247, "main.c"; 	if(count200ms < 3)
     0065 2103                      1-  994     	MOVIA	0x03
                                    1-  995     	BANKSEL	_count200ms
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 04rr                      1-  996     	SUBAR	_count200ms,W
     0068 0803                      1-  997     	BTRSS	STATUS,0
                                    1-  998     	.line	249, "main.c"; 	checkBatAD();
                                    1-  999     	MCALL	_checkBatAD
     0069 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1000     	.line	251, "main.c"; 	checkOutA();
                                    1- 1001     	MCALL	_checkOutA
     006A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1002     	.line	252, "main.c"; 	chrgCtr();
                                    1- 1003     	MCALL	_chrgCtr
     006B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1004     	.line	260, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x08) == 0 && ledLightTime == 0 && ledDeadTime == 0 && shanshuoTime == 0)
                                    1- 1005     	BANKSEL	_workStep
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 01rr                      1- 1006     	MOVR	_workStep,W
     006E 0903                      1- 1007     	BTRSS	STATUS,2
                                    1- 1008     	MGOTO	_00158_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1009     	BANKSEL	_keyCount
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 01rr                      1- 1010     	MOVR	_keyCount,W
     0072 0903                      1- 1011     	BTRSS	STATUS,2
                                    1- 1012     	MGOTO	_00158_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1013     	BANKSEL	_PORTA
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 0Drr                      1- 1014     	BTRSC	_PORTA,3
                                    1- 1015     	MGOTO	_00158_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1016     	BANKSEL	_ledLightTime
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 01rr                      1- 1017     	MOVR	_ledLightTime,W
     0079 0903                      1- 1018     	BTRSS	STATUS,2
                                    1- 1019     	MGOTO	_00158_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1020     	BANKSEL	_ledDeadTime
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 01rr                      1- 1021     	MOVR	_ledDeadTime,W
     007D 0903                      1- 1022     	BTRSS	STATUS,2
                                    1- 1023     	MGOTO	_00158_DS_
     007E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1024     	BANKSEL	_shanshuoTime
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 01rr                      1- 1025     	MOVR	_shanshuoTime,W
     0081 0903                      1- 1026     	BTRSS	STATUS,2
                                    1- 1027     	MGOTO	_00158_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1028     	.line	262, "main.c"; 	if(++sleepTime > 20)
                                    1- 1029     	BANKSEL	_sleepTime
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 05rr                      1- 1030     	INCR	_sleepTime,F
     0085 0D03                      1- 1031     	BTRSC	STATUS,2
     0086 05rr                      1- 1032     	INCR	(_sleepTime + 1),F
                                    1- 1033     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1034     ;;unsigned compare: left >= lit (0x15=21), size=2
     0087 2100                      1- 1035     	MOVIA	0x00
     0088 04rr                      1- 1036     	SUBAR	(_sleepTime + 1),W
     0089 0903                      1- 1037     	BTRSS	STATUS,2
                                    1- 1038     	MGOTO	_00239_DS_
     008A 3rrr                      3-   63 m1      LGOTO rom_address
     008B 2115                      1- 1039     	MOVIA	0x15
     008C 04rr                      1- 1040     	SUBAR	_sleepTime,W
     008D                           1- 1041     _00239_DS_:
     008D 0803                      1- 1042     	BTRSS	STATUS,0
                                    1- 1043     	MGOTO	_00158_DS_
     008E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1044     	.line	264, "main.c"; 	gotoSleep();
                                    1- 1045     	MCALL	_gotoSleep
     008F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1046     ;;unsigned compare: left < lit (0x384=900), size=2
     0090                           1- 1047     _00158_DS_:
                                    1- 1048     	.line	268, "main.c"; 	if(count900s >= 900)
     0090 2103                      1- 1049     	MOVIA	0x03
                                    1- 1050     	BANKSEL	_count900s
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 04rr                      1- 1051     	SUBAR	(_count900s + 1),W
     0093 0903                      1- 1052     	BTRSS	STATUS,2
                                    1- 1053     	MGOTO	_00240_DS_
     0094 3rrr                      3-   63 m1      LGOTO rom_address
     0095 2184                      1- 1054     	MOVIA	0x84
     0096 04rr                      1- 1055     	SUBAR	_count900s,W
     0097                           1- 1056     _00240_DS_:
     0097 0803                      1- 1057     	BTRSS	STATUS,0
                                    1- 1058     	MGOTO	_00167_DS_
     0098 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1059     	.line	270, "main.c"; 	powerOff();
                                    1- 1060     	MCALL	_powerOff
     0099 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1061     	MGOTO	_00167_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1062     	.line	274, "main.c"; 	}
                                    1- 1063     	RETURN	
     009B 0010                      3-   40 m1      ret
                                    1- 1064     ; exit point of _main
                                    1- 1066     ;***
                                    1- 1067     ;  pBlock Stats: dbName = C
                                    1- 1068     ;***
                                    1- 1069     ;has an exit
                                    1- 1070     ;; Starting pCode block
                                    1- 1071     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1073     _F_wait_eoc:
                                    1- 1074     ; 2 exit points
     0000                           1- 1075     _00723_DS_:
                                    1- 1076     	.line	1029, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1077     	BTRSS	_ADMDbits,5
                                    1- 1078     	MGOTO	_00723_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1079     	.line	1031, "main.c"; 	}
                                    1- 1080     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1081     ; exit point of _F_wait_eoc
                                    1- 1083     ;***
                                    1- 1084     ;  pBlock Stats: dbName = C
                                    1- 1085     ;***
                                    1- 1086     ;has an exit
                                    1- 1087     ;functions called:
                                    1- 1088     ;   _delay
                                    1- 1089     ;   _F_wait_eoc
                                    1- 1090     ;   _delay
                                    1- 1091     ;   _F_wait_eoc
                                    1- 1092     ;6 compiler assigned registers:
                                    1- 1093     ;   r0x1041
                                    1- 1094     ;   r0x1042
                                    1- 1095     ;   r0x1043
                                    1- 1096     ;   r0x1044
                                    1- 1097     ;   r0x1045
                                    1- 1098     ;   r0x1046
                                    1- 1099     ;; Starting pCode block
                                    1- 1100     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1102     ;local variable name mapping:
     0000                           1- 1105     _F_AIN2_Convert:
                                    1- 1106     ; 2 exit points
                                    1- 1107     	.line	1012, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1108     	BANKSEL	r0x1041
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1109     	MOVAR	r0x1041
                                    1- 1110     	.line	1014, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1111     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1112     	CLRR	_R_AIN2_DATA_LB
                                    1- 1113     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1114     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1115     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1116     	.line	1016, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1117     	MOVIA	0x94
     0008 00rr                      1- 1118     	MOVAR	_ADMD
                                    1- 1119     	.line	1017, "main.c"; 	delay(200);	
     0009 21C8                      1- 1120     	MOVIA	0xc8
                                    1- 1121     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1122     	.line	1018, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1123     	MOVIA	0x01
                                    1- 1124     	BANKSEL	r0x1042
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1125     	MOVAR	r0x1042
     000E                           1- 1126     _00716_DS_:
                                    1- 1127     	BANKSEL	r0x1042
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1128     	MOVR	r0x1042,W
                                    1- 1129     	BANKSEL	r0x1041
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1130     	SUBAR	r0x1041,W
     0012 0803                      1- 1131     	BTRSS	STATUS,0
                                    1- 1132     	MGOTO	_00718_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1133     	.line	1020, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1134     	BSR	_ADMDbits,6
                                    1- 1135     	.line	1021, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1136     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1137     	.line	1022, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1138     	MOVIA	0x0f
     0017 10rr                      1- 1139     	ANDAR	_ADR,W
                                    1- 1140     ;;3	MOVAR	r0x1043
                                    1- 1141     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1142     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1143     	.line	1023, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1- 1144     	MOVR	_ADD,W
                                    1- 1145     	BANKSEL	r0x1043
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1146     	MOVAR	r0x1043
                                    1- 1147     ;;1	CLRR	r0x1044
                                    1- 1148     ;;106	MOVR	r0x1043,W
                                    1- 1149     ;;104	MOVAR	r0x1045
     001D 2100                      1- 1150     	MOVIA	0x00
                                    1- 1151     	BANKSEL	r0x1046
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1152     	MOVAR	r0x1046
                                    1- 1153     ;;105	MOVR	r0x1045,W
                                    1- 1154     	BANKSEL	r0x1043
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1155     	MOVR	r0x1043,W
                                    1- 1156     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1157     	ADDAR	_R_AIN2_DATA,F
                                    1- 1158     	BANKSEL	r0x1046
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1159     	MOVR	r0x1046,W
     0026 0C03                      1- 1160     	BTRSC	STATUS,0
     0027 05rr                      1- 1161     	INCR	r0x1046,W
     0028 0D03                      1- 1162     	BTRSC	STATUS,2
                                    1- 1163     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1164     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1165     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1- 1166     _00001_DS_:
                                    1- 1167     	.line	1018, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1168     	BANKSEL	r0x1042
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1169     	INCR	r0x1042,F
                                    1- 1170     	MGOTO	_00716_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1171     _00718_DS_:
                                    1- 1172     	.line	1025, "main.c"; 	}
                                    1- 1173     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1174     ; exit point of _F_AIN2_Convert
                                    1- 1176     ;***
                                    1- 1177     ;  pBlock Stats: dbName = C
                                    1- 1178     ;***
                                    1- 1179     ;has an exit
                                    1- 1180     ;functions called:
                                    1- 1181     ;   _delay
                                    1- 1182     ;   _F_wait_eoc
                                    1- 1183     ;   _delay
                                    1- 1184     ;   _F_wait_eoc
                                    1- 1185     ;6 compiler assigned registers:
                                    1- 1186     ;   r0x1047
                                    1- 1187     ;   r0x1048
                                    1- 1188     ;   r0x1049
                                    1- 1189     ;   r0x104A
                                    1- 1190     ;   r0x104B
                                    1- 1191     ;   r0x104C
                                    1- 1192     ;; Starting pCode block
                                    1- 1193     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1195     ;local variable name mapping:
     0000                           1- 1198     _F_AIN4_Convert:
                                    1- 1199     ; 2 exit points
                                    1- 1200     	.line	997, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1201     	BANKSEL	r0x1047
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1202     	MOVAR	r0x1047
                                    1- 1203     	.line	999, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1204     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1205     	CLRR	_R_AIN4_DATA_LB
                                    1- 1206     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1207     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1208     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1209     	.line	1001, "main.c"; 	ADMD  = 0x90 | C_ADC_PB1;				// Select AIN6(PB1) pad as ADC input
     0007 2196                      1- 1210     	MOVIA	0x96
     0008 00rr                      1- 1211     	MOVAR	_ADMD
                                    1- 1212     	.line	1002, "main.c"; 	delay(200);	
     0009 21C8                      1- 1213     	MOVIA	0xc8
                                    1- 1214     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1215     	.line	1003, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1216     	MOVIA	0x01
                                    1- 1217     	BANKSEL	r0x1048
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1218     	MOVAR	r0x1048
     000E                           1- 1219     _00707_DS_:
                                    1- 1220     	BANKSEL	r0x1048
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1221     	MOVR	r0x1048,W
                                    1- 1222     	BANKSEL	r0x1047
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1223     	SUBAR	r0x1047,W
     0012 0803                      1- 1224     	BTRSS	STATUS,0
                                    1- 1225     	MGOTO	_00709_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1226     	.line	1005, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1227     	BSR	_ADMDbits,6
                                    1- 1228     	.line	1006, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1229     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1230     	.line	1007, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1231     	MOVIA	0x0f
     0017 10rr                      1- 1232     	ANDAR	_ADR,W
                                    1- 1233     ;;3	MOVAR	r0x1049
                                    1- 1234     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1235     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1236     	.line	1008, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1237     	MOVR	_ADD,W
                                    1- 1238     	BANKSEL	r0x1049
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1239     	MOVAR	r0x1049
                                    1- 1240     ;;1	CLRR	r0x104A
                                    1- 1241     ;;103	MOVR	r0x1049,W
                                    1- 1242     ;;101	MOVAR	r0x104B
     001D 2100                      1- 1243     	MOVIA	0x00
                                    1- 1244     	BANKSEL	r0x104C
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1245     	MOVAR	r0x104C
                                    1- 1246     ;;102	MOVR	r0x104B,W
                                    1- 1247     	BANKSEL	r0x1049
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1248     	MOVR	r0x1049,W
                                    1- 1249     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1250     	ADDAR	_R_AIN4_DATA,F
                                    1- 1251     	BANKSEL	r0x104C
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1252     	MOVR	r0x104C,W
     0026 0C03                      1- 1253     	BTRSC	STATUS,0
     0027 05rr                      1- 1254     	INCR	r0x104C,W
     0028 0D03                      1- 1255     	BTRSC	STATUS,2
                                    1- 1256     	MGOTO	_00002_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1257     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1258     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1259     _00002_DS_:
                                    1- 1260     	.line	1003, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1261     	BANKSEL	r0x1048
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1262     	INCR	r0x1048,F
                                    1- 1263     	MGOTO	_00707_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1264     _00709_DS_:
                                    1- 1265     	.line	1010, "main.c"; 	}
                                    1- 1266     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1267     ; exit point of _F_AIN4_Convert
                                    1- 1269     ;***
                                    1- 1270     ;  pBlock Stats: dbName = C
                                    1- 1271     ;***
                                    1- 1272     ;has an exit
                                    1- 1273     ;functions called:
                                    1- 1274     ;   _F_AIN4_Convert
                                    1- 1275     ;   __divuint
                                    1- 1276     ;   _F_AIN4_Convert
                                    1- 1277     ;   __divuint
                                    1- 1278     ;7 compiler assigned registers:
                                    1- 1279     ;   r0x104D
                                    1- 1280     ;   r0x104E
                                    1- 1281     ;   r0x104F
                                    1- 1282     ;   r0x1050
                                    1- 1283     ;   STK02
                                    1- 1284     ;   STK01
                                    1- 1285     ;   STK00
                                    1- 1286     ;; Starting pCode block
                                    1- 1287     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1289     _checkOutA:
                                    1- 1290     ; 2 exit points
                                    1- 1291     	.line	901, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1292     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1293     	CLRR	_R_AIN4_DATA_LB
                                    1- 1294     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1295     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1296     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1297     	.line	902, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1298     	MOVIA	0x08
                                    1- 1299     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1300     	.line	903, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1301     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1302     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1303     	ANDIA	0xf0
     000A 00rr                      1- 1304     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1305     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1306     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1307     	ANDIA	0x0f
     000E 11rr                      1- 1308     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1309     	XORAR	_R_AIN4_DATA,F
                                    1- 1310     	.line	904, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1311     	MOVIA	0xf0
                                    1- 1312     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1313     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1314     	.line	905, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1315     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1316     	BANKSEL	r0x104F
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1317     	MOVAR	r0x104F
                                    1- 1318     ;;1	MOVAR	r0x104D
                                    1- 1319     ;;1	CLRR	r0x104E
                                    1- 1320     ;;100	MOVR	r0x104D,W
     0016 2100                      1- 1321     	MOVIA	0x00
                                    1- 1322     	BANKSEL	r0x1050
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1323     	MOVAR	r0x1050
                                    1- 1324     	BANKSEL	r0x104F
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1325     	MOVR	r0x104F,W
                                    1- 1326     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1327     	ADDAR	_R_AIN4_DATA,F
                                    1- 1328     	BANKSEL	r0x1050
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1329     	MOVR	r0x1050,W
     001F 0C03                      1- 1330     	BTRSC	STATUS,0
     0020 05rr                      1- 1331     	INCR	r0x1050,W
     0021 0D03                      1- 1332     	BTRSC	STATUS,2
                                    1- 1333     	MGOTO	_00003_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1334     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1335     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1336     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1337     _00003_DS_:
                                    1- 1338     	.line	906, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1339     	BCR	STATUS,0
                                    1- 1340     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1341     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1342     	RRR	_R_AIN4_DATA,F
                                    1- 1343     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1344     	BCR	STATUS,0
     002A 13rr                      1- 1345     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1346     	RRR	_R_AIN4_DATA,F
                                    1- 1347     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1348     	BCR	STATUS,0
     002D 13rr                      1- 1349     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1350     	RRR	_R_AIN4_DATA,F
                                    1- 1351     	.line	907, "main.c"; 	tempSum += R_AIN4_DATA;
     002F 01rr                      1- 1352     	MOVR	_R_AIN4_DATA,W
                                    1- 1353     	BANKSEL	_tempSum
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 03rr                      1- 1354     	ADDAR	_tempSum,F
                                    1- 1355     	BANKSEL	_R_AIN4_DATA
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 01rr                      1- 1356     	MOVR	(_R_AIN4_DATA + 1),W
     0034 0C03                      1- 1357     	BTRSC	STATUS,0
     0035 05rr                      1- 1358     	INCR	(_R_AIN4_DATA + 1),W
     0036 0D03                      1- 1359     	BTRSC	STATUS,2
                                    1- 1360     	MGOTO	_00004_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1361     	BANKSEL	_tempSum
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 03rr                      1- 1362     	ADDAR	(_tempSum + 1),F
     003A                           1- 1363     _00004_DS_:
                                    1- 1364     	.line	908, "main.c"; 	if(++count100 >= 10)
                                    1- 1365     	BANKSEL	_count100
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 05rr                      1- 1366     	INCR	_count100,F
                                    1- 1367     ;;unsigned compare: left < lit (0xA=10), size=1
     003C 210A                      1- 1368     	MOVIA	0x0a
     003D 04rr                      1- 1369     	SUBAR	_count100,W
     003E 0803                      1- 1370     	BTRSS	STATUS,0
                                    1- 1371     	MGOTO	_00697_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1372     	.line	910, "main.c"; 	count100 = 0;
     0040 02rr                      1- 1373     	CLRR	_count100
                                    1- 1374     	.line	911, "main.c"; 	tempResult = tempSum/10;
     0041 210A                      1- 1375     	MOVIA	0x0a
     0042 00rr                      1- 1376     	MOVAR	STK02
     0043 2100                      1- 1377     	MOVIA	0x00
     0044 00rr                      1- 1378     	MOVAR	STK01
                                    1- 1379     	BANKSEL	_tempSum
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1- 1380     	MOVR	_tempSum,W
     0047 00rr                      1- 1381     	MOVAR	STK00
     0048 01rr                      1- 1382     	MOVR	(_tempSum + 1),W
                                    1- 1383     	MCALL	__divuint
     0049 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1384     	BANKSEL	_tempResult
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 00rr                      1- 1385     	MOVAR	(_tempResult + 1)
     004C 01rr                      1- 1386     	MOVR	STK00,W
     004D 00rr                      1- 1387     	MOVAR	_tempResult
                                    1- 1388     	.line	912, "main.c"; 	tempSum = 0;
                                    1- 1389     	BANKSEL	_tempSum
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 02rr                      1- 1390     	CLRR	_tempSum
     0050 02rr                      1- 1391     	CLRR	(_tempSum + 1)
     0051                           1- 1392     _00697_DS_:
                                    1- 1393     	.line	985, "main.c"; 	if(workStep > 0)
                                    1- 1394     	BANKSEL	_workStep
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 01rr                      1- 1395     	MOVR	_workStep,W
     0053 0D03                      1- 1396     	BTRSC	STATUS,2
                                    1- 1397     	MGOTO	_00700_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1398     	.line	986, "main.c"; 	ledStep = workStep;
     0055 01rr                      1- 1399     	MOVR	_workStep,W
                                    1- 1400     	BANKSEL	_ledStep
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 00rr                      1- 1401     	MOVAR	_ledStep
     0058                           1- 1402     _00700_DS_:
                                    1- 1403     	.line	990, "main.c"; 	}
                                    1- 1404     	RETURN	
     0058 0010                      3-   40 m1      ret
                                    1- 1405     ; exit point of _checkOutA
                                    1- 1407     ;***
                                    1- 1408     ;  pBlock Stats: dbName = C
                                    1- 1409     ;***
                                    1- 1410     ;has an exit
                                    1- 1411     ;functions called:
                                    1- 1412     ;   _F_AIN2_Convert
                                    1- 1413     ;   _F_AIN2_Convert
                                    1- 1414     ;4 compiler assigned registers:
                                    1- 1415     ;   r0x1051
                                    1- 1416     ;   r0x1052
                                    1- 1417     ;   r0x1053
                                    1- 1418     ;   r0x1054
                                    1- 1419     ;; Starting pCode block
                                    1- 1420     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1422     _checkBatAD:
                                    1- 1423     ; 2 exit points
                                    1- 1424     	.line	842, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1425     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1426     	CLRR	_R_AIN2_DATA_LB
                                    1- 1427     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1428     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1429     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1430     	.line	843, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1431     	MOVIA	0x08
                                    1- 1432     	MCALL	_F_AIN2_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1433     	.line	844, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1434     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1435     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1436     	ANDIA	0xf0
     000A 00rr                      1- 1437     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1438     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1439     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1440     	ANDIA	0x0f
     000E 11rr                      1- 1441     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1442     	XORAR	_R_AIN2_DATA,F
                                    1- 1443     	.line	845, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1444     	MOVIA	0xf0
                                    1- 1445     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1446     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1447     	.line	846, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1448     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1449     	BANKSEL	r0x1053
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1450     	MOVAR	r0x1053
                                    1- 1451     ;;1	MOVAR	r0x1051
                                    1- 1452     ;;1	CLRR	r0x1052
                                    1- 1453     ;;99	MOVR	r0x1051,W
     0016 2100                      1- 1454     	MOVIA	0x00
                                    1- 1455     	BANKSEL	r0x1054
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1456     	MOVAR	r0x1054
                                    1- 1457     	BANKSEL	r0x1053
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1458     	MOVR	r0x1053,W
                                    1- 1459     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1460     	ADDAR	_R_AIN2_DATA,F
                                    1- 1461     	BANKSEL	r0x1054
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1462     	MOVR	r0x1054,W
     001F 0C03                      1- 1463     	BTRSC	STATUS,0
     0020 05rr                      1- 1464     	INCR	r0x1054,W
     0021 0D03                      1- 1465     	BTRSC	STATUS,2
                                    1- 1466     	MGOTO	_00005_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1467     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1468     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1469     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1470     _00005_DS_:
                                    1- 1471     	.line	847, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0025 1C03                      1- 1472     	BCR	STATUS,0
                                    1- 1473     	BANKSEL	_R_AIN2_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1474     	RRR	(_R_AIN2_DATA + 1),F
     0028 13rr                      1- 1475     	RRR	_R_AIN2_DATA,F
                                    1- 1476     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1477     	BCR	STATUS,0
     002A 13rr                      1- 1478     	RRR	(_R_AIN2_DATA + 1),F
     002B 13rr                      1- 1479     	RRR	_R_AIN2_DATA,F
                                    1- 1480     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1481     	BCR	STATUS,0
     002D 13rr                      1- 1482     	RRR	(_R_AIN2_DATA + 1),F
     002E 13rr                      1- 1483     	RRR	_R_AIN2_DATA,F
                                    1- 1484     	.line	848, "main.c"; 	if(debug)
                                    1- 1485     	BANKSEL	_debug
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1486     	MOVR	_debug,W
     0031 0D03                      1- 1487     	BTRSC	STATUS,2
                                    1- 1488     	MGOTO	_00604_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1489     	.line	849, "main.c"; 	R_AIN2_DATA = BATTLE;
     0033 210E                      1- 1490     	MOVIA	0x0e
                                    1- 1491     	BANKSEL	_R_AIN2_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1492     	MOVAR	_R_AIN2_DATA
     0036 2106                      1- 1493     	MOVIA	0x06
     0037 00rr                      1- 1494     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1495     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1496     ;;unsigned compare: left >= lit (0x612=1554), size=2
     0038                           1- 1497     _00604_DS_:
                                    1- 1498     	.line	851, "main.c"; 	if(R_AIN2_DATA > 1553)
     0038 2106                      1- 1499     	MOVIA	0x06
                                    1- 1500     	BANKSEL	_R_AIN2_DATA
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1501     	SUBAR	(_R_AIN2_DATA + 1),W
     003B 0903                      1- 1502     	BTRSS	STATUS,2
                                    1- 1503     	MGOTO	_00683_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 2112                      1- 1504     	MOVIA	0x12
     003E 04rr                      1- 1505     	SUBAR	_R_AIN2_DATA,W
     003F                           1- 1506     _00683_DS_:
     003F 0803                      1- 1507     	BTRSS	STATUS,0
                                    1- 1508     	MGOTO	_00629_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1509     	.line	854, "main.c"; 	lowCount = 0;
                                    1- 1510     	BANKSEL	_lowCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 1511     	CLRR	_lowCount
                                    1- 1512     	.line	855, "main.c"; 	pwStep = 8;
     0043 2108                      1- 1513     	MOVIA	0x08
                                    1- 1514     	BANKSEL	_pwStep
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 1515     	MOVAR	_pwStep
                                    1- 1516     	MGOTO	_00630_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1517     ;;unsigned compare: left < lit (0x474=1140), size=2
     0047                           1- 1518     _00629_DS_:
                                    1- 1519     	.line	857, "main.c"; 	else if(R_AIN2_DATA < 1140)
     0047 2104                      1- 1520     	MOVIA	0x04
                                    1- 1521     	BANKSEL	_R_AIN2_DATA
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 04rr                      1- 1522     	SUBAR	(_R_AIN2_DATA + 1),W
     004A 0903                      1- 1523     	BTRSS	STATUS,2
                                    1- 1524     	MGOTO	_00684_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C 2174                      1- 1525     	MOVIA	0x74
     004D 04rr                      1- 1526     	SUBAR	_R_AIN2_DATA,W
     004E                           1- 1527     _00684_DS_:
     004E 0C03                      1- 1528     	BTRSC	STATUS,0
                                    1- 1529     	MGOTO	_00626_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1530     	.line	859, "main.c"; 	pwStep = 0;
                                    1- 1531     	BANKSEL	_pwStep
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 02rr                      1- 1532     	CLRR	_pwStep
                                    1- 1533     	.line	860, "main.c"; 	if(++lowCount < 3)
                                    1- 1534     	BANKSEL	_lowCount
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 05rr                      1- 1535     	INCR	_lowCount,F
                                    1- 1536     ;;unsigned compare: left < lit (0x3=3), size=1
     0054 2103                      1- 1537     	MOVIA	0x03
     0055 04rr                      1- 1538     	SUBAR	_lowCount,W
     0056 0803                      1- 1539     	BTRSS	STATUS,0
                                    1- 1540     	.line	861, "main.c"; 	return;
                                    1- 1541     	MGOTO	_00639_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1542     	.line	862, "main.c"; 	lowCount = 10;
     0058 210A                      1- 1543     	MOVIA	0x0a
     0059 00rr                      1- 1544     	MOVAR	_lowCount
                                    1- 1545     	.line	863, "main.c"; 	pwStep = 0;
                                    1- 1546     	BANKSEL	_pwStep
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 02rr                      1- 1547     	CLRR	_pwStep
                                    1- 1548     	.line	864, "main.c"; 	R_AIN2_DATA = 1140;
     005C 2174                      1- 1549     	MOVIA	0x74
                                    1- 1550     	BANKSEL	_R_AIN2_DATA
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 00rr                      1- 1551     	MOVAR	_R_AIN2_DATA
     005F 2104                      1- 1552     	MOVIA	0x04
     0060 00rr                      1- 1553     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1554     	MGOTO	_00630_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
     0062                           1- 1555     _00626_DS_:
                                    1- 1556     	.line	869, "main.c"; 	lowCount = 0;
                                    1- 1557     	BANKSEL	_lowCount
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 02rr                      1- 1558     	CLRR	_lowCount
                                    1- 1559     	.line	870, "main.c"; 	firstTime = 0;
                                    1- 1560     	BANKSEL	_firstTime
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 02rr                      1- 1561     	CLRR	_firstTime
                                    1- 1562     ;;unsigned compare: left < lit (0x4F6=1270), size=2
                                    1- 1563     	.line	871, "main.c"; 	if(R_AIN2_DATA < 1270)
     0066 2104                      1- 1564     	MOVIA	0x04
                                    1- 1565     	BANKSEL	_R_AIN2_DATA
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 04rr                      1- 1566     	SUBAR	(_R_AIN2_DATA + 1),W
     0069 0903                      1- 1567     	BTRSS	STATUS,2
                                    1- 1568     	MGOTO	_00686_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
     006B 21F6                      1- 1569     	MOVIA	0xf6
     006C 04rr                      1- 1570     	SUBAR	_R_AIN2_DATA,W
     006D                           1- 1571     _00686_DS_:
     006D 0C03                      1- 1572     	BTRSC	STATUS,0
                                    1- 1573     	MGOTO	_00623_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1574     	.line	872, "main.c"; 	pwStep = 1;
     006F 2101                      1- 1575     	MOVIA	0x01
                                    1- 1576     	BANKSEL	_pwStep
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 00rr                      1- 1577     	MOVAR	_pwStep
                                    1- 1578     	MGOTO	_00630_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1579     ;;unsigned compare: left < lit (0x53C=1340), size=2
     0073                           1- 1580     _00623_DS_:
                                    1- 1581     	.line	873, "main.c"; 	else if(R_AIN2_DATA < 1340)
     0073 2105                      1- 1582     	MOVIA	0x05
                                    1- 1583     	BANKSEL	_R_AIN2_DATA
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 04rr                      1- 1584     	SUBAR	(_R_AIN2_DATA + 1),W
     0076 0903                      1- 1585     	BTRSS	STATUS,2
                                    1- 1586     	MGOTO	_00687_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
     0078 213C                      1- 1587     	MOVIA	0x3c
     0079 04rr                      1- 1588     	SUBAR	_R_AIN2_DATA,W
     007A                           1- 1589     _00687_DS_:
     007A 0C03                      1- 1590     	BTRSC	STATUS,0
                                    1- 1591     	MGOTO	_00620_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1592     	.line	874, "main.c"; 	pwStep = 2;
     007C 2102                      1- 1593     	MOVIA	0x02
                                    1- 1594     	BANKSEL	_pwStep
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 00rr                      1- 1595     	MOVAR	_pwStep
                                    1- 1596     	MGOTO	_00630_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1597     ;;unsigned compare: left < lit (0x56E=1390), size=2
     0080                           1- 1598     _00620_DS_:
                                    1- 1599     	.line	875, "main.c"; 	else if(R_AIN2_DATA < 1390)
     0080 2105                      1- 1600     	MOVIA	0x05
                                    1- 1601     	BANKSEL	_R_AIN2_DATA
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 04rr                      1- 1602     	SUBAR	(_R_AIN2_DATA + 1),W
     0083 0903                      1- 1603     	BTRSS	STATUS,2
                                    1- 1604     	MGOTO	_00688_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
     0085 216E                      1- 1605     	MOVIA	0x6e
     0086 04rr                      1- 1606     	SUBAR	_R_AIN2_DATA,W
     0087                           1- 1607     _00688_DS_:
     0087 0C03                      1- 1608     	BTRSC	STATUS,0
                                    1- 1609     	MGOTO	_00617_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1610     	.line	876, "main.c"; 	pwStep = 3;
     0089 2103                      1- 1611     	MOVIA	0x03
                                    1- 1612     	BANKSEL	_pwStep
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 00rr                      1- 1613     	MOVAR	_pwStep
                                    1- 1614     	MGOTO	_00630_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1615     ;;unsigned compare: left < lit (0x5AA=1450), size=2
     008D                           1- 1616     _00617_DS_:
                                    1- 1617     	.line	877, "main.c"; 	else if(R_AIN2_DATA < 1450)
     008D 2105                      1- 1618     	MOVIA	0x05
                                    1- 1619     	BANKSEL	_R_AIN2_DATA
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 04rr                      1- 1620     	SUBAR	(_R_AIN2_DATA + 1),W
     0090 0903                      1- 1621     	BTRSS	STATUS,2
                                    1- 1622     	MGOTO	_00689_DS_
     0091 3rrr                      3-   63 m1      LGOTO rom_address
     0092 21AA                      1- 1623     	MOVIA	0xaa
     0093 04rr                      1- 1624     	SUBAR	_R_AIN2_DATA,W
     0094                           1- 1625     _00689_DS_:
     0094 0C03                      1- 1626     	BTRSC	STATUS,0
                                    1- 1627     	MGOTO	_00614_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1628     	.line	878, "main.c"; 	pwStep = 4;
     0096 2104                      1- 1629     	MOVIA	0x04
                                    1- 1630     	BANKSEL	_pwStep
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 00rr                      1- 1631     	MOVAR	_pwStep
                                    1- 1632     	MGOTO	_00630_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1633     ;;unsigned compare: left < lit (0x5DC=1500), size=2
     009A                           1- 1634     _00614_DS_:
                                    1- 1635     	.line	879, "main.c"; 	else if(R_AIN2_DATA < 1500)
     009A 2105                      1- 1636     	MOVIA	0x05
                                    1- 1637     	BANKSEL	_R_AIN2_DATA
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 04rr                      1- 1638     	SUBAR	(_R_AIN2_DATA + 1),W
     009D 0903                      1- 1639     	BTRSS	STATUS,2
                                    1- 1640     	MGOTO	_00690_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
     009F 21DC                      1- 1641     	MOVIA	0xdc
     00A0 04rr                      1- 1642     	SUBAR	_R_AIN2_DATA,W
     00A1                           1- 1643     _00690_DS_:
     00A1 0C03                      1- 1644     	BTRSC	STATUS,0
                                    1- 1645     	MGOTO	_00611_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1646     	.line	880, "main.c"; 	pwStep = 5;
     00A3 2105                      1- 1647     	MOVIA	0x05
                                    1- 1648     	BANKSEL	_pwStep
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 00rr                      1- 1649     	MOVAR	_pwStep
                                    1- 1650     	MGOTO	_00630_DS_
     00A6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1651     ;;unsigned compare: left < lit (0x5FA=1530), size=2
     00A7                           1- 1652     _00611_DS_:
                                    1- 1653     	.line	881, "main.c"; 	else if(R_AIN2_DATA < 1530)
     00A7 2105                      1- 1654     	MOVIA	0x05
                                    1- 1655     	BANKSEL	_R_AIN2_DATA
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 04rr                      1- 1656     	SUBAR	(_R_AIN2_DATA + 1),W
     00AA 0903                      1- 1657     	BTRSS	STATUS,2
                                    1- 1658     	MGOTO	_00691_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
     00AC 21FA                      1- 1659     	MOVIA	0xfa
     00AD 04rr                      1- 1660     	SUBAR	_R_AIN2_DATA,W
     00AE                           1- 1661     _00691_DS_:
     00AE 0C03                      1- 1662     	BTRSC	STATUS,0
                                    1- 1663     	MGOTO	_00608_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1664     	.line	882, "main.c"; 	pwStep = 6;
     00B0 2106                      1- 1665     	MOVIA	0x06
                                    1- 1666     	BANKSEL	_pwStep
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 00rr                      1- 1667     	MOVAR	_pwStep
                                    1- 1668     	MGOTO	_00630_DS_
     00B3 3rrr                      3-   63 m1      LGOTO rom_address
     00B4                           1- 1669     _00608_DS_:
                                    1- 1670     	.line	884, "main.c"; 	pwStep = 7;
     00B4 2107                      1- 1671     	MOVIA	0x07
                                    1- 1672     	BANKSEL	_pwStep
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 00rr                      1- 1673     	MOVAR	_pwStep
                                    1- 1674     ;;unsigned compare: left < lit (0x7=7), size=1
     00B7                           1- 1675     _00630_DS_:
                                    1- 1676     	.line	886, "main.c"; 	if(pwStep < 7)
     00B7 2107                      1- 1677     	MOVIA	0x07
                                    1- 1678     	BANKSEL	_pwStep
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 04rr                      1- 1679     	SUBAR	_pwStep,W
     00BA 0C03                      1- 1680     	BTRSC	STATUS,0
                                    1- 1681     	MGOTO	_00006_DS_
     00BB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1682     	.line	887, "main.c"; 	chrgFullFlag = 0;
                                    1- 1683     	BANKSEL	_chrgFullFlag
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 02rr                      1- 1684     	CLRR	_chrgFullFlag
     00BE                           1- 1685     _00006_DS_:
                                    1- 1686     	.line	889, "main.c"; 	if(prePwStep == 0 || prePwStep < pwStep)
                                    1- 1687     	BANKSEL	_prePwStep
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 01rr                      1- 1688     	MOVR	_prePwStep,W
     00C0 0D03                      1- 1689     	BTRSC	STATUS,2
                                    1- 1690     	MGOTO	_00633_DS_
     00C1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1691     	BANKSEL	_pwStep
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 01rr                      1- 1692     	MOVR	_pwStep,W
                                    1- 1693     	BANKSEL	_prePwStep
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 04rr                      1- 1694     	SUBAR	_prePwStep,W
     00C6 0C03                      1- 1695     	BTRSC	STATUS,0
                                    1- 1696     	MGOTO	_00634_DS_
     00C7 3rrr                      3-   63 m1      LGOTO rom_address
     00C8                           1- 1697     _00633_DS_:
                                    1- 1698     	.line	890, "main.c"; 	prePwStep = pwStep;
                                    1- 1699     	BANKSEL	_pwStep
     00C8 rrrr                      3-  110 m1      .banksel ram_address
     00C9 01rr                      1- 1700     	MOVR	_pwStep,W
                                    1- 1701     	BANKSEL	_prePwStep
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 00rr                      1- 1702     	MOVAR	_prePwStep
     00CC                           1- 1703     _00634_DS_:
                                    1- 1704     	.line	892, "main.c"; 	if(ledLightTime > 0 && prePwStep > 0)
                                    1- 1705     	BANKSEL	_ledLightTime
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 01rr                      1- 1706     	MOVR	_ledLightTime,W
     00CE 0D03                      1- 1707     	BTRSC	STATUS,2
                                    1- 1708     	MGOTO	_00639_DS_
     00CF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1709     	BANKSEL	_prePwStep
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 01rr                      1- 1710     	MOVR	_prePwStep,W
     00D2 0D03                      1- 1711     	BTRSC	STATUS,2
                                    1- 1712     	MGOTO	_00639_DS_
     00D3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1713     	.line	893, "main.c"; 	pwStep = prePwStep;
     00D4 01rr                      1- 1714     	MOVR	_prePwStep,W
                                    1- 1715     	BANKSEL	_pwStep
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 00rr                      1- 1716     	MOVAR	_pwStep
     00D7                           1- 1717     _00639_DS_:
                                    1- 1718     	.line	895, "main.c"; 	}
                                    1- 1719     	RETURN	
     00D7 0010                      3-   40 m1      ret
                                    1- 1720     ; exit point of _checkBatAD
                                    1- 1722     ;***
                                    1- 1723     ;  pBlock Stats: dbName = C
                                    1- 1724     ;***
                                    1- 1725     ;has an exit
                                    1- 1726     ;functions called:
                                    1- 1727     ;   _delay
                                    1- 1728     ;   _delay
                                    1- 1729     ;; Starting pCode block
                                    1- 1730     .segment "code"; module=main, function=_initAD
     0000                           1- 1732     _initAD:
                                    1- 1733     ; 2 exit points
                                    1- 1734     	.line	818, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1735     	MOVIA	0x84
     0001 00rr                      1- 1736     	MOVAR	_ADMD
                                    1- 1737     	.line	823, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1738     	CLRR	_ADVREFH
                                    1- 1739     	.line	828, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1740     	MOVIA	0x10
     0004 00rr                      1- 1741     	MOVAR	_ADR
                                    1- 1742     	.line	830, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1743     	MOVIA	0x03
     0006 00rr                      1- 1744     	MOVAR	_ADCR
                                    1- 1745     	.line	833, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1746     	BSR	_ADMDbits,4
                                    1- 1747     	.line	834, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1748     	MOVIA	0x64
                                    1- 1749     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1750     	.line	837, "main.c"; 	}
                                    1- 1751     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1752     ; exit point of _initAD
                                    1- 1754     ;***
                                    1- 1755     ;  pBlock Stats: dbName = C
                                    1- 1756     ;***
                                    1- 1757     ;has an exit
                                    1- 1758     ;; Starting pCode block
                                    1- 1759     .segment "code"; module=main, function=_ledOff
     0000                           1- 1761     _ledOff:
                                    1- 1762     ; 2 exit points
                                    1- 1763     	.line	810, "main.c"; 	PORTA &= 0x5B;
     0000 215B                      1- 1764     	MOVIA	0x5b
                                    1- 1765     	BANKSEL	_PORTA
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 10rr                      1- 1766     	ANDAR	_PORTA,F
                                    1- 1767     	.line	811, "main.c"; 	PCON |= 0x10;
     0003 1Arr                      1- 1768     	BSR	_PCON,4
                                    1- 1769     	.line	812, "main.c"; 	}
                                    1- 1770     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1- 1771     ; exit point of _ledOff
                                    1- 1773     ;***
                                    1- 1774     ;  pBlock Stats: dbName = C
                                    1- 1775     ;***
                                    1- 1776     ;has an exit
                                    1- 1777     ;; Starting pCode block
                                    1- 1778     .segment "code"; module=main, function=_ledRed
     0000                           1- 1780     _ledRed:
                                    1- 1781     ; 2 exit points
                                    1- 1782     	.line	803, "main.c"; 	PCON &= 0xEF;
     0000 1Err                      1- 1783     	BCR	_PCON,4
                                    1- 1784     	.line	804, "main.c"; 	PORTA |= 0x24;
     0001 2124                      1- 1785     	MOVIA	0x24
                                    1- 1786     	BANKSEL	_PORTA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 11rr                      1- 1787     	IORAR	_PORTA,F
                                    1- 1788     	.line	805, "main.c"; 	PORTA &= 0x7F;
     0004 1Frr                      1- 1789     	BCR	_PORTA,7
                                    1- 1790     	.line	806, "main.c"; 	}
                                    1- 1791     	RETURN	
     0005 0010                      3-   40 m1      ret
                                    1- 1792     ; exit point of _ledRed
                                    1- 1794     ;***
                                    1- 1795     ;  pBlock Stats: dbName = C
                                    1- 1796     ;***
                                    1- 1797     ;has an exit
                                    1- 1798     ;; Starting pCode block
                                    1- 1799     .segment "code"; module=main, function=_ledGreen
     0000                           1- 1801     _ledGreen:
                                    1- 1802     ; 2 exit points
                                    1- 1803     	.line	796, "main.c"; 	PCON |= 0x10;
     0000 1Arr                      1- 1804     	BSR	_PCON,4
                                    1- 1805     	.line	797, "main.c"; 	PORTA |= 0x80;
                                    1- 1806     	BANKSEL	_PORTA
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 1Brr                      1- 1807     	BSR	_PORTA,7
                                    1- 1808     	.line	798, "main.c"; 	PORTA &= 0xDB;
     0003 21DB                      1- 1809     	MOVIA	0xdb
     0004 10rr                      1- 1810     	ANDAR	_PORTA,F
                                    1- 1811     	.line	799, "main.c"; 	}
                                    1- 1812     	RETURN	
     0005 0010                      3-   40 m1      ret
                                    1- 1813     ; exit point of _ledGreen
                                    1- 1815     ;***
                                    1- 1816     ;  pBlock Stats: dbName = C
                                    1- 1817     ;***
                                    1- 1818     ;has an exit
                                    1- 1819     ;2 compiler assigned registers:
                                    1- 1820     ;   r0x103F
                                    1- 1821     ;   r0x1040
                                    1- 1822     ;; Starting pCode block
                                    1- 1823     .segment "code"; module=main, function=_delay
                                    1- 1825     ;local variable name mapping:
     0000                           1- 1828     _delay:
                                    1- 1829     ; 2 exit points
                                    1- 1830     	.line	788, "main.c"; 	void delay(u8t time)
                                    1- 1831     	BANKSEL	r0x103F
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1832     	MOVAR	r0x103F
                                    1- 1833     	.line	790, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1834     	BANKSEL	r0x1040
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1835     	CLRR	r0x1040
     0004                           1- 1836     _00580_DS_:
                                    1- 1837     	BANKSEL	r0x103F
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 1838     	MOVR	r0x103F,W
                                    1- 1839     	BANKSEL	r0x1040
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1- 1840     	SUBAR	r0x1040,W
     0008 0C03                      1- 1841     	BTRSC	STATUS,0
                                    1- 1842     	MGOTO	_00582_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1843     	.line	791, "main.c"; 	NOP();
     000A 0000                      1- 1844     	nop
                                    1- 1845     	.line	790, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1846     	BANKSEL	r0x1040
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 1847     	INCR	r0x1040,F
                                    1- 1848     	MGOTO	_00580_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 1849     _00582_DS_:
                                    1- 1850     	.line	792, "main.c"; 	}
                                    1- 1851     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 1852     ; exit point of _delay
                                    1- 1854     ;***
                                    1- 1855     ;  pBlock Stats: dbName = C
                                    1- 1856     ;***
                                    1- 1857     ;has an exit
                                    1- 1858     ;functions called:
                                    1- 1859     ;   _pwmStop
                                    1- 1860     ;   _ledGreen
                                    1- 1861     ;   _pwm1Stop
                                    1- 1862     ;   _ledRed
                                    1- 1863     ;   _ledGreen
                                    1- 1864     ;   _pwm1Init
                                    1- 1865     ;   _ledOff
                                    1- 1866     ;   _pwm1Stop
                                    1- 1867     ;   _pwmStop
                                    1- 1868     ;   _ledGreen
                                    1- 1869     ;   _pwm1Stop
                                    1- 1870     ;   _ledRed
                                    1- 1871     ;   _ledGreen
                                    1- 1872     ;   _pwm1Init
                                    1- 1873     ;   _ledOff
                                    1- 1874     ;   _pwm1Stop
                                    1- 1875     ;5 compiler assigned registers:
                                    1- 1876     ;   r0x1056
                                    1- 1877     ;   r0x1057
                                    1- 1878     ;   r0x1058
                                    1- 1879     ;   r0x1059
                                    1- 1880     ;   r0x105A
                                    1- 1881     ;; Starting pCode block
                                    1- 1882     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1884     _chrgCtr:
                                    1- 1885     ; 2 exit points
                                    1- 1886     	.line	636, "main.c"; 	if(PORTA & 0x08)
                                    1- 1887     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 09rr                      1- 1888     	BTRSS	_PORTA,3
                                    1- 1889     	MGOTO	_00488_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1890     	.line	639, "main.c"; 	closeFlag = 0;
                                    1- 1891     	BANKSEL	_closeFlag
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 1892     	CLRR	_closeFlag
                                    1- 1893     	.line	640, "main.c"; 	chrgFlag = 1;
                                    1- 1894     	BANKSEL	_Status
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 19rr                      1- 1895     	BSR	_Status,3
                                    1- 1896     	.line	641, "main.c"; 	workStep = 0;
                                    1- 1897     	BANKSEL	_workStep
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1- 1898     	CLRR	_workStep
                                    1- 1899     	.line	642, "main.c"; 	ledLightTime = 0;
                                    1- 1900     	BANKSEL	_ledLightTime
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 02rr                      1- 1901     	CLRR	_ledLightTime
                                    1- 1902     	.line	643, "main.c"; 	pwmStop();
                                    1- 1903     	MCALL	_pwmStop
     000B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1904     	.line	645, "main.c"; 	if(pwStep == 8 || chrgFullFlag)
                                    1- 1905     	BANKSEL	_pwStep
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1- 1906     	MOVR	_pwStep,W
     000E 2408                      1- 1907     	XORIA	0x08
     000F 0D03                      1- 1908     	BTRSC	STATUS,2
                                    1- 1909     	MGOTO	_00481_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1910     	BANKSEL	_chrgFullFlag
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 1911     	MOVR	_chrgFullFlag,W
     0013 0D03                      1- 1912     	BTRSC	STATUS,2
                                    1- 1913     	MGOTO	_00482_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
     0015                           1- 1914     _00481_DS_:
                                    1- 1915     	.line	647, "main.c"; 	chrgStep = 6;
     0015 2106                      1- 1916     	MOVIA	0x06
                                    1- 1917     	BANKSEL	_chrgStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1918     	MOVAR	_chrgStep
                                    1- 1919     	.line	649, "main.c"; 	ledStep = 6;
                                    1- 1920     	BANKSEL	_ledStep
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 00rr                      1- 1921     	MOVAR	_ledStep
                                    1- 1922     	.line	650, "main.c"; 	ledGreen();
                                    1- 1923     	MCALL	_ledGreen
     001A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1924     	.line	651, "main.c"; 	if(++fullCount >= 2000)
                                    1- 1925     	BANKSEL	_fullCount
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 05rr                      1- 1926     	INCR	_fullCount,F
     001D 0D03                      1- 1927     	BTRSC	STATUS,2
     001E 05rr                      1- 1928     	INCR	(_fullCount + 1),F
                                    1- 1929     ;;unsigned compare: left < lit (0x7D0=2000), size=2
     001F 2107                      1- 1930     	MOVIA	0x07
     0020 04rr                      1- 1931     	SUBAR	(_fullCount + 1),W
     0021 0903                      1- 1932     	BTRSS	STATUS,2
                                    1- 1933     	MGOTO	_00559_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023 21D0                      1- 1934     	MOVIA	0xd0
     0024 04rr                      1- 1935     	SUBAR	_fullCount,W
     0025                           1- 1936     _00559_DS_:
     0025 0803                      1- 1937     	BTRSS	STATUS,0
                                    1- 1938     	MGOTO	_00490_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1939     	.line	653, "main.c"; 	fullCount = 2000;
     0027 21D0                      1- 1940     	MOVIA	0xd0
                                    1- 1941     	BANKSEL	_fullCount
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 00rr                      1- 1942     	MOVAR	_fullCount
     002A 2107                      1- 1943     	MOVIA	0x07
     002B 00rr                      1- 1944     	MOVAR	(_fullCount + 1)
                                    1- 1945     	.line	654, "main.c"; 	chrgFullFlag = 1;
     002C 2101                      1- 1946     	MOVIA	0x01
                                    1- 1947     	BANKSEL	_chrgFullFlag
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 00rr                      1- 1948     	MOVAR	_chrgFullFlag
                                    1- 1949     	.line	655, "main.c"; 	pwm1Stop();
                                    1- 1950     	MCALL	_pwm1Stop
     002F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1951     	.line	656, "main.c"; 	PORTB &= 0xF7;
     0030 1Drr                      1- 1952     	BCR	_PORTB,3
                                    1- 1953     	.line	657, "main.c"; 	IOSTB |= 0X08;
     0031 001r                      1- 1954     	IOSTR	_IOSTB
                                    1- 1955     	BANKSEL	r0x1056
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 00rr                      1- 1956     	MOVAR	r0x1056
     0034 19rr                      1- 1957     	BSR	r0x1056,3
     0035 01rr                      1- 1958     	MOVR	r0x1056,W
     0036 000r                      1- 1959     	IOST	_IOSTB
                                    1- 1960     	.line	657, "main.c"; 	}
                                    1- 1961     	MGOTO	_00490_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
     0038                           1- 1962     _00482_DS_:
                                    1- 1963     	.line	665, "main.c"; 	IOSTB &= 0xF7;
     0038 001r                      1- 1964     	IOSTR	_IOSTB
                                    1- 1965     	BANKSEL	r0x1056
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 00rr                      1- 1966     	MOVAR	r0x1056
     003B 1Drr                      1- 1967     	BCR	r0x1056,3
     003C 01rr                      1- 1968     	MOVR	r0x1056,W
     003D 000r                      1- 1969     	IOST	_IOSTB
                                    1- 1970     	.line	666, "main.c"; 	fullCount = 0;
                                    1- 1971     	BANKSEL	_fullCount
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 02rr                      1- 1972     	CLRR	_fullCount
     0040 02rr                      1- 1973     	CLRR	(_fullCount + 1)
                                    1- 1974     	.line	667, "main.c"; 	if(count500ms == 0 && pwStep <= 7 && lockLedStep < 6)
                                    1- 1975     	BANKSEL	_count500ms
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 01rr                      1- 1976     	MOVR	_count500ms,W
     0043 0903                      1- 1977     	BTRSS	STATUS,2
                                    1- 1978     	MGOTO	_00455_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1979     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1980     ;;unsigned compare: left >= lit (0x8=8), size=1
     0045 2108                      1- 1981     	MOVIA	0x08
                                    1- 1982     	BANKSEL	_pwStep
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 04rr                      1- 1983     	SUBAR	_pwStep,W
     0048 0C03                      1- 1984     	BTRSC	STATUS,0
                                    1- 1985     	MGOTO	_00455_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1986     ;;unsigned compare: left < lit (0x6=6), size=1
     004A 2106                      1- 1987     	MOVIA	0x06
                                    1- 1988     	BANKSEL	_lockLedStep
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 04rr                      1- 1989     	SUBAR	_lockLedStep,W
     004D 0C03                      1- 1990     	BTRSC	STATUS,0
                                    1- 1991     	MGOTO	_00455_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1992     	.line	669, "main.c"; 	ledRed();
                                    1- 1993     	MCALL	_ledRed
     004F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1994     	.line	670, "main.c"; 	if(lockLedStep < pwStep - 1)
                                    1- 1995     	BANKSEL	_pwStep
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 01rr                      1- 1996     	MOVR	_pwStep,W
                                    1- 1997     	BANKSEL	r0x1056
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 00rr                      1- 1998     	MOVAR	r0x1056
                                    1- 1999     	BANKSEL	r0x1057
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 02rr                      1- 2000     	CLRR	r0x1057
     0056 21FF                      1- 2001     	MOVIA	0xff
                                    1- 2002     	BANKSEL	r0x1056
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 03rr                      1- 2003     	ADDAR	r0x1056,F
     0059 0C03                      1- 2004     	BTRSC	STATUS,0
                                    1- 2005     	MGOTO	_00007_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2006     	BANKSEL	r0x1057
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 06rr                      1- 2007     	DECR	r0x1057,F
     005D                           1- 2008     _00007_DS_:
                                    1- 2009     	BANKSEL	_lockLedStep
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 01rr                      1- 2010     	MOVR	_lockLedStep,W
                                    1- 2011     	BANKSEL	r0x1058
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 00rr                      1- 2012     	MOVAR	r0x1058
                                    1- 2013     ;;1	CLRR	r0x1059
     0061 2100                      1- 2014     	MOVIA	0x00
     0062 2580                      1- 2015     	ADDIA	0x80
                                    1- 2016     	BANKSEL	r0x105A
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 00rr                      1- 2017     	MOVAR	r0x105A
                                    1- 2018     	BANKSEL	r0x1057
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 01rr                      1- 2019     	MOVR	r0x1057,W
     0067 2580                      1- 2020     	ADDIA	0x80
                                    1- 2021     	BANKSEL	r0x105A
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 04rr                      1- 2022     	SUBAR	r0x105A,W
     006A 0903                      1- 2023     	BTRSS	STATUS,2
                                    1- 2024     	MGOTO	_00562_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2025     	BANKSEL	r0x1056
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 01rr                      1- 2026     	MOVR	r0x1056,W
                                    1- 2027     	BANKSEL	r0x1058
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 04rr                      1- 2028     	SUBAR	r0x1058,W
     0070                           1- 2029     _00562_DS_:
     0070 0C03                      1- 2030     	BTRSC	STATUS,0
                                    1- 2031     	MGOTO	_00450_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2032     	.line	672, "main.c"; 	if(lockLedStep == 0)
                                    1- 2033     	BANKSEL	_lockLedStep
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 01rr                      1- 2034     	MOVR	_lockLedStep,W
     0074 0903                      1- 2035     	BTRSS	STATUS,2
                                    1- 2036     	MGOTO	_00446_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2037     	.line	673, "main.c"; 	lockLedStep = pwStep - 1;
                                    1- 2038     	BANKSEL	_pwStep
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 06rr                      1- 2039     	DECR	_pwStep,W
                                    1- 2040     	BANKSEL	_lockLedStep
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 00rr                      1- 2041     	MOVAR	_lockLedStep
     007A                           1- 2042     _00446_DS_:
                                    1- 2043     	.line	674, "main.c"; 	if(++ledCount > 100)
                                    1- 2044     	BANKSEL	_ledCount
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 05rr                      1- 2045     	INCR	_ledCount,F
                                    1- 2046     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2047     ;;unsigned compare: left >= lit (0x65=101), size=1
     007C 2165                      1- 2048     	MOVIA	0x65
     007D 04rr                      1- 2049     	SUBAR	_ledCount,W
     007E 0803                      1- 2050     	BTRSS	STATUS,0
                                    1- 2051     	MGOTO	_00451_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2052     	.line	675, "main.c"; 	lockLedStep = pwStep - 1;
                                    1- 2053     	BANKSEL	_pwStep
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 06rr                      1- 2054     	DECR	_pwStep,W
                                    1- 2055     	BANKSEL	_lockLedStep
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 00rr                      1- 2056     	MOVAR	_lockLedStep
                                    1- 2057     	MGOTO	_00451_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
     0085                           1- 2058     _00450_DS_:
                                    1- 2059     	.line	680, "main.c"; 	ledCount = 0;
                                    1- 2060     	BANKSEL	_ledCount
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 02rr                      1- 2061     	CLRR	_ledCount
     0087                           1- 2062     _00451_DS_:
                                    1- 2063     	.line	682, "main.c"; 	if(++ledStep > 6)
                                    1- 2064     	BANKSEL	_ledStep
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 05rr                      1- 2065     	INCR	_ledStep,F
                                    1- 2066     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2067     ;;unsigned compare: left >= lit (0x7=7), size=1
     0089 2107                      1- 2068     	MOVIA	0x07
     008A 04rr                      1- 2069     	SUBAR	_ledStep,W
     008B 0803                      1- 2070     	BTRSS	STATUS,0
                                    1- 2071     	MGOTO	_00455_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2072     	.line	683, "main.c"; 	ledStep = lockLedStep;
                                    1- 2073     	BANKSEL	_lockLedStep
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 01rr                      1- 2074     	MOVR	_lockLedStep,W
                                    1- 2075     	BANKSEL	_ledStep
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 00rr                      1- 2076     	MOVAR	_ledStep
                                    1- 2077     ;;unsigned compare: left < lit (0x6=6), size=1
     0091                           1- 2078     _00455_DS_:
                                    1- 2079     	.line	685, "main.c"; 	if(lockLedStep >= 6)
     0091 2106                      1- 2080     	MOVIA	0x06
                                    1- 2081     	BANKSEL	_lockLedStep
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 04rr                      1- 2082     	SUBAR	_lockLedStep,W
     0094 0803                      1- 2083     	BTRSS	STATUS,0
                                    1- 2084     	MGOTO	_00459_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2085     	.line	687, "main.c"; 	ledStep = 6;	//亮灯不闪了
     0096 2106                      1- 2086     	MOVIA	0x06
                                    1- 2087     	BANKSEL	_ledStep
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 00rr                      1- 2088     	MOVAR	_ledStep
                                    1- 2089     	.line	688, "main.c"; 	ledGreen();
                                    1- 2090     	MCALL	_ledGreen
     0099 2rrr                      3-   66 m1      LCALL rom_address
     009A                           1- 2091     _00459_DS_:
                                    1- 2092     	.line	694, "main.c"; 	firstChrgCount = 1200;
     009A 21B0                      1- 2093     	MOVIA	0xb0
                                    1- 2094     	BANKSEL	_firstChrgCount
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 00rr                      1- 2095     	MOVAR	_firstChrgCount
     009D 2104                      1- 2096     	MOVIA	0x04
     009E 00rr                      1- 2097     	MOVAR	(_firstChrgCount + 1)
                                    1- 2098     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2099     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1- 2100     	.line	695, "main.c"; 	if(count200ms > 5)
     009F 2106                      1- 2101     	MOVIA	0x06
                                    1- 2102     	BANKSEL	_count200ms
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 04rr                      1- 2103     	SUBAR	_count200ms,W
     00A2 0803                      1- 2104     	BTRSS	STATUS,0
                                    1- 2105     	MGOTO	_00490_DS_
     00A3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2106     ;;unsigned compare: left < lit (0x3=3), size=1
                                    1- 2107     	.line	697, "main.c"; 	if(pwStep < 3)
     00A4 2103                      1- 2108     	MOVIA	0x03
                                    1- 2109     	BANKSEL	_pwStep
     00A5 rrrr                      3-  110 m1      .banksel ram_address
     00A6 04rr                      1- 2110     	SUBAR	_pwStep,W
     00A7 0C03                      1- 2111     	BTRSC	STATUS,0
                                    1- 2112     	MGOTO	_00463_DS_
     00A8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2113     	.line	699, "main.c"; 	if(++count10s >= 3000)
                                    1- 2114     	BANKSEL	_count10s
     00A9 rrrr                      3-  110 m1      .banksel ram_address
     00AA 05rr                      1- 2115     	INCR	_count10s,F
     00AB 0D03                      1- 2116     	BTRSC	STATUS,2
     00AC 05rr                      1- 2117     	INCR	(_count10s + 1),F
                                    1- 2118     ;;unsigned compare: left < lit (0xBB8=3000), size=2
     00AD 210B                      1- 2119     	MOVIA	0x0b
     00AE 04rr                      1- 2120     	SUBAR	(_count10s + 1),W
     00AF 0903                      1- 2121     	BTRSS	STATUS,2
                                    1- 2122     	MGOTO	_00568_DS_
     00B0 3rrr                      3-   63 m1      LGOTO rom_address
     00B1 21B8                      1- 2123     	MOVIA	0xb8
     00B2 04rr                      1- 2124     	SUBAR	_count10s,W
     00B3                           1- 2125     _00568_DS_:
     00B3 0803                      1- 2126     	BTRSS	STATUS,0
                                    1- 2127     	MGOTO	_00463_DS_
     00B4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2128     	.line	701, "main.c"; 	count10s = 0;
                                    1- 2129     	BANKSEL	_count10s
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 02rr                      1- 2130     	CLRR	_count10s
     00B7 02rr                      1- 2131     	CLRR	(_count10s + 1)
                                    1- 2132     	.line	702, "main.c"; 	chrgmaxduty = chrgmaxduty + 1;
                                    1- 2133     	BANKSEL	_chrgmaxduty
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 05rr                      1- 2134     	INCR	_chrgmaxduty,F
                                    1- 2135     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2136     ;;unsigned compare: left >= lit (0x28=40), size=2
     00BA                           1- 2137     _00463_DS_:
                                    1- 2138     	.line	706, "main.c"; 	if(R_AIN4_DATA <= 39 && R_AIN4_DATA >=subMin)
     00BA 2100                      1- 2139     	MOVIA	0x00
                                    1- 2140     	BANKSEL	_R_AIN4_DATA
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 04rr                      1- 2141     	SUBAR	(_R_AIN4_DATA + 1),W
     00BD 0903                      1- 2142     	BTRSS	STATUS,2
                                    1- 2143     	MGOTO	_00569_DS_
     00BE 3rrr                      3-   63 m1      LGOTO rom_address
     00BF 2128                      1- 2144     	MOVIA	0x28
     00C0 04rr                      1- 2145     	SUBAR	_R_AIN4_DATA,W
     00C1                           1- 2146     _00569_DS_:
     00C1 0C03                      1- 2147     	BTRSC	STATUS,0
                                    1- 2148     	MGOTO	_00465_DS_
     00C2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2149     	BANKSEL	_subMin
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 01rr                      1- 2150     	MOVR	_subMin,W
                                    1- 2151     	BANKSEL	r0x1056
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 00rr                      1- 2152     	MOVAR	r0x1056
                                    1- 2153     	BANKSEL	r0x1057
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 02rr                      1- 2154     	CLRR	r0x1057
     00C9 2100                      1- 2155     	MOVIA	0x00
                                    1- 2156     	BANKSEL	_R_AIN4_DATA
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 04rr                      1- 2157     	SUBAR	(_R_AIN4_DATA + 1),W
     00CC 0903                      1- 2158     	BTRSS	STATUS,2
                                    1- 2159     	MGOTO	_00570_DS_
     00CD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2160     	BANKSEL	r0x1056
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 01rr                      1- 2161     	MOVR	r0x1056,W
                                    1- 2162     	BANKSEL	_R_AIN4_DATA
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 04rr                      1- 2163     	SUBAR	_R_AIN4_DATA,W
     00D2                           1- 2164     _00570_DS_:
     00D2 0803                      1- 2165     	BTRSS	STATUS,0
                                    1- 2166     	MGOTO	_00465_DS_
     00D3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2167     	.line	708, "main.c"; 	addTime = subTime = 0;
                                    1- 2168     	BANKSEL	_subTime
     00D4 rrrr                      3-  110 m1      .banksel ram_address
     00D5 02rr                      1- 2169     	CLRR	_subTime
                                    1- 2170     	BANKSEL	_addTime
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 02rr                      1- 2171     	CLRR	_addTime
                                    1- 2172     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2173     ;;unsigned compare: left >= lit (0x28=40), size=2
     00D8                           1- 2174     _00465_DS_:
                                    1- 2175     	.line	713, "main.c"; 	if(R_AIN4_DATA > 39)
     00D8 2100                      1- 2176     	MOVIA	0x00
                                    1- 2177     	BANKSEL	_R_AIN4_DATA
     00D9 rrrr                      3-  110 m1      .banksel ram_address
     00DA 04rr                      1- 2178     	SUBAR	(_R_AIN4_DATA + 1),W
     00DB 0903                      1- 2179     	BTRSS	STATUS,2
                                    1- 2180     	MGOTO	_00571_DS_
     00DC 3rrr                      3-   63 m1      LGOTO rom_address
     00DD 2128                      1- 2181     	MOVIA	0x28
     00DE 04rr                      1- 2182     	SUBAR	_R_AIN4_DATA,W
     00DF                           1- 2183     _00571_DS_:
     00DF 0803                      1- 2184     	BTRSS	STATUS,0
                                    1- 2185     	MGOTO	_00475_DS_
     00E0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2186     	.line	715, "main.c"; 	if(++subTime > chrgWaitTime)
                                    1- 2187     	BANKSEL	_subTime
     00E1 rrrr                      3-  110 m1      .banksel ram_address
     00E2 05rr                      1- 2188     	INCR	_subTime,F
     00E3 01rr                      1- 2189     	MOVR	_subTime,W
                                    1- 2190     	BANKSEL	_chrgWaitTime
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 04rr                      1- 2191     	SUBAR	_chrgWaitTime,W
     00E6 0C03                      1- 2192     	BTRSC	STATUS,0
                                    1- 2193     	MGOTO	_00468_DS_
     00E7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2194     	.line	717, "main.c"; 	addFlag = 1;
     00E8 2101                      1- 2195     	MOVIA	0x01
                                    1- 2196     	BANKSEL	_addFlag
     00E9 rrrr                      3-  110 m1      .banksel ram_address
     00EA 00rr                      1- 2197     	MOVAR	_addFlag
                                    1- 2198     	.line	718, "main.c"; 	chrgmaxduty = chrgmaxduty - 1;
                                    1- 2199     	BANKSEL	_chrgmaxduty
     00EB rrrr                      3-  110 m1      .banksel ram_address
     00EC 06rr                      1- 2200     	DECR	_chrgmaxduty,F
                                    1- 2201     	.line	719, "main.c"; 	subTime = 0;
                                    1- 2202     	BANKSEL	_subTime
     00ED rrrr                      3-  110 m1      .banksel ram_address
     00EE 02rr                      1- 2203     	CLRR	_subTime
                                    1- 2204     	.line	720, "main.c"; 	subMin = 38;
     00EF 2126                      1- 2205     	MOVIA	0x26
                                    1- 2206     	BANKSEL	_subMin
     00F0 rrrr                      3-  110 m1      .banksel ram_address
     00F1 00rr                      1- 2207     	MOVAR	_subMin
                                    1- 2208     	.line	721, "main.c"; 	chrgWaitTime = 250;
     00F2 21FA                      1- 2209     	MOVIA	0xfa
                                    1- 2210     	BANKSEL	_chrgWaitTime
     00F3 rrrr                      3-  110 m1      .banksel ram_address
     00F4 00rr                      1- 2211     	MOVAR	_chrgWaitTime
     00F5                           1- 2212     _00468_DS_:
                                    1- 2213     	.line	723, "main.c"; 	addTime = 0;
                                    1- 2214     	BANKSEL	_addTime
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 02rr                      1- 2215     	CLRR	_addTime
                                    1- 2216     	MGOTO	_00476_DS_
     00F7 3rrr                      3-   63 m1      LGOTO rom_address
     00F8                           1- 2217     _00475_DS_:
                                    1- 2218     	.line	725, "main.c"; 	else if(R_AIN4_DATA < subMin || addFlag == 0)
                                    1- 2219     	BANKSEL	_subMin
     00F8 rrrr                      3-  110 m1      .banksel ram_address
     00F9 01rr                      1- 2220     	MOVR	_subMin,W
                                    1- 2221     	BANKSEL	r0x1056
     00FA rrrr                      3-  110 m1      .banksel ram_address
     00FB 00rr                      1- 2222     	MOVAR	r0x1056
                                    1- 2223     	BANKSEL	r0x1057
     00FC rrrr                      3-  110 m1      .banksel ram_address
     00FD 02rr                      1- 2224     	CLRR	r0x1057
     00FE 2100                      1- 2225     	MOVIA	0x00
                                    1- 2226     	BANKSEL	_R_AIN4_DATA
     00FF rrrr                      3-  110 m1      .banksel ram_address
     0100 04rr                      1- 2227     	SUBAR	(_R_AIN4_DATA + 1),W
     0101 0903                      1- 2228     	BTRSS	STATUS,2
                                    1- 2229     	MGOTO	_00573_DS_
     0102 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2230     	BANKSEL	r0x1056
     0103 rrrr                      3-  110 m1      .banksel ram_address
     0104 01rr                      1- 2231     	MOVR	r0x1056,W
                                    1- 2232     	BANKSEL	_R_AIN4_DATA
     0105 rrrr                      3-  110 m1      .banksel ram_address
     0106 04rr                      1- 2233     	SUBAR	_R_AIN4_DATA,W
     0107                           1- 2234     _00573_DS_:
     0107 0803                      1- 2235     	BTRSS	STATUS,0
                                    1- 2236     	MGOTO	_00471_DS_
     0108 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2237     	BANKSEL	_addFlag
     0109 rrrr                      3-  110 m1      .banksel ram_address
     010A 01rr                      1- 2238     	MOVR	_addFlag,W
     010B 0903                      1- 2239     	BTRSS	STATUS,2
                                    1- 2240     	MGOTO	_00476_DS_
     010C 3rrr                      3-   63 m1      LGOTO rom_address
     010D                           1- 2241     _00471_DS_:
                                    1- 2242     	.line	727, "main.c"; 	if(++addTime > chrgWaitTime)
                                    1- 2243     	BANKSEL	_addTime
     010D rrrr                      3-  110 m1      .banksel ram_address
     010E 05rr                      1- 2244     	INCR	_addTime,F
     010F 01rr                      1- 2245     	MOVR	_addTime,W
                                    1- 2246     	BANKSEL	_chrgWaitTime
     0110 rrrr                      3-  110 m1      .banksel ram_address
     0111 04rr                      1- 2247     	SUBAR	_chrgWaitTime,W
     0112 0C03                      1- 2248     	BTRSC	STATUS,0
                                    1- 2249     	MGOTO	_00470_DS_
     0113 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2250     	.line	729, "main.c"; 	chrgmaxduty = chrgmaxduty + 1;
                                    1- 2251     	BANKSEL	_chrgmaxduty
     0114 rrrr                      3-  110 m1      .banksel ram_address
     0115 05rr                      1- 2252     	INCR	_chrgmaxduty,F
                                    1- 2253     	.line	730, "main.c"; 	addTime = 0;
                                    1- 2254     	BANKSEL	_addTime
     0116 rrrr                      3-  110 m1      .banksel ram_address
     0117 02rr                      1- 2255     	CLRR	_addTime
     0118                           1- 2256     _00470_DS_:
                                    1- 2257     	.line	732, "main.c"; 	subTime = 0;
                                    1- 2258     	BANKSEL	_subTime
     0118 rrrr                      3-  110 m1      .banksel ram_address
     0119 02rr                      1- 2259     	CLRR	_subTime
                                    1- 2260     ;;unsigned compare: left < lit (0xA=10), size=1
     011A                           1- 2261     _00476_DS_:
                                    1- 2262     	.line	734, "main.c"; 	if(chrgmaxduty < 10)
     011A 210A                      1- 2263     	MOVIA	0x0a
                                    1- 2264     	BANKSEL	_chrgmaxduty
     011B rrrr                      3-  110 m1      .banksel ram_address
     011C 04rr                      1- 2265     	SUBAR	_chrgmaxduty,W
     011D 0C03                      1- 2266     	BTRSC	STATUS,0
                                    1- 2267     	MGOTO	_00478_DS_
     011E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2268     	.line	735, "main.c"; 	chrgmaxduty = 10;
     011F 210A                      1- 2269     	MOVIA	0x0a
     0120 00rr                      1- 2270     	MOVAR	_chrgmaxduty
     0121                           1- 2271     _00478_DS_:
                                    1- 2272     	.line	736, "main.c"; 	TMRH = 0x00;
     0121 02rr                      1- 2273     	CLRR	_TMRH
                                    1- 2274     	.line	737, "main.c"; 	PWM1DUTY = chrgmaxduty;
                                    1- 2275     	BANKSEL	_chrgmaxduty
     0122 rrrr                      3-  110 m1      .banksel ram_address
     0123 01rr                      1- 2276     	MOVR	_chrgmaxduty,W
     0124 00rr                      1- 2277     	SFUN	_PWM1DUTY
                                    1- 2278     	.line	738, "main.c"; 	pwm1Init();			
                                    1- 2279     	MCALL	_pwm1Init
     0125 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2280     	.line	738, "main.c"; 	}
                                    1- 2281     	MGOTO	_00490_DS_
     0126 3rrr                      3-   63 m1      LGOTO rom_address
     0127                           1- 2282     _00488_DS_:
                                    1- 2283     	.line	767, "main.c"; 	firstChrgCount = 0;
                                    1- 2284     	BANKSEL	_firstChrgCount
     0127 rrrr                      3-  110 m1      .banksel ram_address
     0128 02rr                      1- 2285     	CLRR	_firstChrgCount
     0129 02rr                      1- 2286     	CLRR	(_firstChrgCount + 1)
                                    1- 2287     	.line	768, "main.c"; 	addFlag = 0;
                                    1- 2288     	BANKSEL	_addFlag
     012A rrrr                      3-  110 m1      .banksel ram_address
     012B 02rr                      1- 2289     	CLRR	_addFlag
                                    1- 2290     	.line	769, "main.c"; 	ledOff();
                                    1- 2291     	MCALL	_ledOff
     012C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2292     	.line	770, "main.c"; 	chrgWaitTime = 5;
     012D 2105                      1- 2293     	MOVIA	0x05
                                    1- 2294     	BANKSEL	_chrgWaitTime
     012E rrrr                      3-  110 m1      .banksel ram_address
     012F 00rr                      1- 2295     	MOVAR	_chrgWaitTime
                                    1- 2296     	.line	771, "main.c"; 	subMin = 38;
     0130 2126                      1- 2297     	MOVIA	0x26
                                    1- 2298     	BANKSEL	_subMin
     0131 rrrr                      3-  110 m1      .banksel ram_address
     0132 00rr                      1- 2299     	MOVAR	_subMin
                                    1- 2300     	.line	772, "main.c"; 	chrgFullFlag = 0;
                                    1- 2301     	BANKSEL	_chrgFullFlag
     0133 rrrr                      3-  110 m1      .banksel ram_address
     0134 02rr                      1- 2302     	CLRR	_chrgFullFlag
                                    1- 2303     	.line	773, "main.c"; 	chrgduty = 0;
                                    1- 2304     	BANKSEL	_chrgduty
     0135 rrrr                      3-  110 m1      .banksel ram_address
     0136 02rr                      1- 2305     	CLRR	_chrgduty
                                    1- 2306     	.line	774, "main.c"; 	chrgmaxduty = 0;
                                    1- 2307     	BANKSEL	_chrgmaxduty
     0137 rrrr                      3-  110 m1      .banksel ram_address
     0138 02rr                      1- 2308     	CLRR	_chrgmaxduty
                                    1- 2309     	.line	775, "main.c"; 	chrgStep = 0;
                                    1- 2310     	BANKSEL	_chrgStep
     0139 rrrr                      3-  110 m1      .banksel ram_address
     013A 02rr                      1- 2311     	CLRR	_chrgStep
                                    1- 2312     	.line	776, "main.c"; 	lockLedStep = 0;
                                    1- 2313     	BANKSEL	_lockLedStep
     013B rrrr                      3-  110 m1      .banksel ram_address
     013C 02rr                      1- 2314     	CLRR	_lockLedStep
                                    1- 2315     	.line	777, "main.c"; 	chrgTime = 0;
                                    1- 2316     	BANKSEL	_chrgTime
     013D rrrr                      3-  110 m1      .banksel ram_address
     013E 02rr                      1- 2317     	CLRR	_chrgTime
     013F 02rr                      1- 2318     	CLRR	(_chrgTime + 1)
                                    1- 2319     	.line	778, "main.c"; 	pwm1Stop();
                                    1- 2320     	MCALL	_pwm1Stop
     0140 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2321     	.line	779, "main.c"; 	if(workStep == 0)
                                    1- 2322     	BANKSEL	_workStep
     0141 rrrr                      3-  110 m1      .banksel ram_address
     0142 01rr                      1- 2323     	MOVR	_workStep,W
     0143 0903                      1- 2324     	BTRSS	STATUS,2
                                    1- 2325     	MGOTO	_00008_DS_
     0144 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2326     	.line	780, "main.c"; 	ledStep = 0;
                                    1- 2327     	BANKSEL	_ledStep
     0145 rrrr                      3-  110 m1      .banksel ram_address
     0146 02rr                      1- 2328     	CLRR	_ledStep
     0147                           1- 2329     _00008_DS_:
                                    1- 2330     	.line	781, "main.c"; 	chrgFlag = 0;
                                    1- 2331     	BANKSEL	_Status
     0147 rrrr                      3-  110 m1      .banksel ram_address
     0148 1Drr                      1- 2332     	BCR	_Status,3
                                    1- 2333     	.line	782, "main.c"; 	chrgTime = 0;	//重置充电计数
                                    1- 2334     	BANKSEL	_chrgTime
     0149 rrrr                      3-  110 m1      .banksel ram_address
     014A 02rr                      1- 2335     	CLRR	_chrgTime
     014B 02rr                      1- 2336     	CLRR	(_chrgTime + 1)
     014C                           1- 2337     _00490_DS_:
                                    1- 2338     	.line	785, "main.c"; 	}
                                    1- 2339     	RETURN	
     014C 0010                      3-   40 m1      ret
                                    1- 2340     ; exit point of _chrgCtr
                                    1- 2342     ;***
                                    1- 2343     ;  pBlock Stats: dbName = C
                                    1- 2344     ;***
                                    1- 2345     ;has an exit
                                    1- 2346     ;1 compiler assigned register :
                                    1- 2347     ;   r0x105B
                                    1- 2348     ;; Starting pCode block
                                    1- 2349     .segment "code"; module=main, function=_keyRead
                                    1- 2351     ;local variable name mapping:
     0000                           1- 2353     _keyRead:
                                    1- 2354     ; 2 exit points
                                    1- 2355     	.line	599, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2356     	BANKSEL	r0x105B
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2357     	MOVAR	r0x105B
                                    1- 2358     	.line	601, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2359     	MOVR	r0x105B,W
     0003 0D03                      1- 2360     	BTRSC	STATUS,2
                                    1- 2361     	MGOTO	_00436_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2362     	.line	603, "main.c"; 	keyCount++;
                                    1- 2363     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2364     	INCR	_keyCount,F
                                    1- 2365     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 2366     	.line	604, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 2367     	MOVIA	0x64
     0008 04rr                      1- 2368     	SUBAR	_keyCount,W
     0009 0803                      1- 2369     	BTRSS	STATUS,0
                                    1- 2370     	MGOTO	_00437_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2371     	.line	606, "main.c"; 	keyCount = 100;
     000B 2164                      1- 2372     	MOVIA	0x64
     000C 00rr                      1- 2373     	MOVAR	_keyCount
                                    1- 2374     	.line	607, "main.c"; 	if(!longPressFlag)
                                    1- 2375     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Crr                      1- 2376     	BTRSC	_Status,1
                                    1- 2377     	MGOTO	_00437_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2378     	.line	609, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 2379     	BSR	_Status,1
                                    1- 2380     	.line	610, "main.c"; 	return 2;
     0011 2102                      1- 2381     	MOVIA	0x02
                                    1- 2382     	MGOTO	_00438_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2383     ;;unsigned compare: left < lit (0x64=100), size=1
     0013                           1- 2384     _00436_DS_:
                                    1- 2385     	.line	616, "main.c"; 	if(keyCount >= 100)
     0013 2164                      1- 2386     	MOVIA	0x64
                                    1- 2387     	BANKSEL	_keyCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 2388     	SUBAR	_keyCount,W
     0016 0803                      1- 2389     	BTRSS	STATUS,0
                                    1- 2390     	MGOTO	_00433_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2391     	.line	618, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 2392     	CLRR	_keyCount
                                    1- 2393     	.line	619, "main.c"; 	longPressFlag = 0;
                                    1- 2394     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Crr                      1- 2395     	BCR	_Status,1
                                    1- 2396     	.line	620, "main.c"; 	return	0;
     001B 2100                      1- 2397     	MOVIA	0x00
                                    1- 2398     	MGOTO	_00438_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2399     ;;unsigned compare: left < lit (0x4=4), size=1
     001D                           1- 2400     _00433_DS_:
                                    1- 2401     	.line	622, "main.c"; 	else if(keyCount >= 4)
     001D 2104                      1- 2402     	MOVIA	0x04
                                    1- 2403     	BANKSEL	_keyCount
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 2404     	SUBAR	_keyCount,W
     0020 0803                      1- 2405     	BTRSS	STATUS,0
                                    1- 2406     	MGOTO	_00434_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2407     	.line	624, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 2408     	CLRR	_keyCount
                                    1- 2409     	.line	625, "main.c"; 	return	1;
     0023 2101                      1- 2410     	MOVIA	0x01
                                    1- 2411     	MGOTO	_00438_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 2412     _00434_DS_:
                                    1- 2413     	.line	627, "main.c"; 	keyCount = 0;
                                    1- 2414     	BANKSEL	_keyCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 2415     	CLRR	_keyCount
     0027                           1- 2416     _00437_DS_:
                                    1- 2417     	.line	629, "main.c"; 	return 0;
     0027 2100                      1- 2418     	MOVIA	0x00
     0028                           1- 2419     _00438_DS_:
                                    1- 2420     	.line	630, "main.c"; 	}
                                    1- 2421     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 2422     ; exit point of _keyRead
                                    1- 2424     ;***
                                    1- 2425     ;  pBlock Stats: dbName = C
                                    1- 2426     ;***
                                    1- 2427     ;has an exit
                                    1- 2428     ;functions called:
                                    1- 2429     ;   _LedInput
                                    1- 2430     ;   _pwmStop
                                    1- 2431     ;   _pwm1Stop
                                    1- 2432     ;   _LedInput
                                    1- 2433     ;   _pwmStop
                                    1- 2434     ;   _pwm1Stop
                                    1- 2435     ;; Starting pCode block
                                    1- 2436     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2438     _gotoSleep:
                                    1- 2439     ; 2 exit points
                                    1- 2440     	.line	565, "main.c"; 	count900s = 0;
                                    1- 2441     	BANKSEL	_count900s
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2442     	CLRR	_count900s
     0002 02rr                      1- 2443     	CLRR	(_count900s + 1)
                                    1- 2444     	.line	566, "main.c"; 	LedInput();
                                    1- 2445     	MCALL	_LedInput
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2446     	.line	567, "main.c"; 	sleepTime = 0;
                                    1- 2447     	BANKSEL	_sleepTime
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 2448     	CLRR	_sleepTime
     0006 02rr                      1- 2449     	CLRR	(_sleepTime + 1)
                                    1- 2450     	.line	569, "main.c"; 	pwmStop();
                                    1- 2451     	MCALL	_pwmStop
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2452     	.line	570, "main.c"; 	pwm1Stop();
                                    1- 2453     	MCALL	_pwm1Stop
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2454     	.line	571, "main.c"; 	PORTA = 0x00;
                                    1- 2455     	BANKSEL	_PORTA
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 02rr                      1- 2456     	CLRR	_PORTA
                                    1- 2457     	.line	572, "main.c"; 	PORTB = 0x00;
     000B 02rr                      1- 2458     	CLRR	_PORTB
                                    1- 2459     	.line	573, "main.c"; 	workStep = 0;
                                    1- 2460     	BANKSEL	_workStep
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 02rr                      1- 2461     	CLRR	_workStep
                                    1- 2462     	.line	574, "main.c"; 	AWUCON = 0x48;
     000E 2148                      1- 2463     	MOVIA	0x48
     000F 00rr                      1- 2464     	MOVAR	_AWUCON
                                    1- 2465     	.line	575, "main.c"; 	BWUCON = 0x00;
     0010 02rr                      1- 2466     	CLRR	_BWUCON
                                    1- 2467     	.line	576, "main.c"; 	redLedFlag = 0;
                                    1- 2468     	BANKSEL	_Status
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 1Drr                      1- 2469     	BCR	_Status,2
                                    1- 2470     	.line	579, "main.c"; 	INTE =  C_INT_PABKey;
     0013 2102                      1- 2471     	MOVIA	0x02
     0014 00rr                      1- 2472     	MOVAR	_INTE
                                    1- 2473     	.line	580, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0015 2118                      1- 2474     	MOVIA	0x18
     0016 00rr                      1- 2475     	MOVAR	_PCON
                                    1- 2476     	.line	581, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0017 02rr                      1- 2477     	CLRR	_INTF
                                    1- 2478     	.line	582, "main.c"; 	CLRWDT();
     0018 0002                      1- 2479     	clrwdt
                                    1- 2480     	.line	583, "main.c"; 	ENI();
     0019 0004                      1- 2481     	ENI
                                    1- 2482     	.line	584, "main.c"; 	SLEEP();
     001A 0001                      1- 2483     	sleep
                                    1- 2484     	.line	585, "main.c"; 	AWUCON = 0x00;
     001B 02rr                      1- 2485     	CLRR	_AWUCON
                                    1- 2486     	.line	586, "main.c"; 	IOSTA = C_PA6_Input  | C_PA4_Input | C_PA3_Input ;
     001C 2158                      1- 2487     	MOVIA	0x58
     001D 000r                      1- 2488     	IOST	_IOSTA
                                    1- 2489     	.line	587, "main.c"; 	IOSTB = C_PB1_Input;
     001E 2102                      1- 2490     	MOVIA	0x02
     001F 000r                      1- 2491     	IOST	_IOSTB
                                    1- 2492     	.line	588, "main.c"; 	PORTA = 0x00;
                                    1- 2493     	BANKSEL	_PORTA
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 02rr                      1- 2494     	CLRR	_PORTA
                                    1- 2495     	.line	589, "main.c"; 	APHCON = 0xBF;
     0022 21BF                      1- 2496     	MOVIA	0xbf
     0023 000r                      1- 2497     	IOST	_APHCON
                                    1- 2498     	.line	590, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     0024 2101                      1- 2499     	MOVIA	0x01
     0025 00rr                      1- 2500     	MOVAR	_INTE
                                    1- 2501     	.line	591, "main.c"; 	INTF = 0;
     0026 02rr                      1- 2502     	CLRR	_INTF
                                    1- 2503     	.line	593, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0027 21B8                      1- 2504     	MOVIA	0xb8
     0028 00rr                      1- 2505     	MOVAR	_PCON
                                    1- 2506     	.line	596, "main.c"; 	}
                                    1- 2507     	RETURN	
     0029 0010                      3-   40 m1      ret
                                    1- 2508     ; exit point of _gotoSleep
                                    1- 2510     ;***
                                    1- 2511     ;  pBlock Stats: dbName = C
                                    1- 2512     ;***
                                    1- 2513     ;has an exit
                                    1- 2514     ;; Starting pCode block
                                    1- 2515     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2517     _pwmStop:
                                    1- 2518     ; 2 exit points
                                    1- 2519     	.line	558, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2520     	CLRA	
     0001 00rr                      1- 2521     	SFUN	_T2CR1
                                    1- 2522     	.line	559, "main.c"; 	}
                                    1- 2523     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2524     ; exit point of _pwmStop
                                    1- 2526     ;***
                                    1- 2527     ;  pBlock Stats: dbName = C
                                    1- 2528     ;***
                                    1- 2529     ;has an exit
                                    1- 2530     ;1 compiler assigned register :
                                    1- 2531     ;   r0x105D
                                    1- 2532     ;; Starting pCode block
                                    1- 2533     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2535     _pwmInit:
                                    1- 2536     ; 2 exit points
                                    1- 2537     	.line	546, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2538     	SFUNR	_T2CR1
                                    1- 2539     	BANKSEL	r0x105D
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2540     	MOVAR	r0x105D
     0003 0Frr                      1- 2541     	BTRSC	r0x105D,7
                                    1- 2542     	.line	547, "main.c"; 	return;
                                    1- 2543     	MGOTO	_00413_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2544     	.line	548, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2545     	CLRR	_TMRH
                                    1- 2546     	.line	549, "main.c"; 	TMR2 = 128;							//频率为110K
     0006 2180                      1- 2547     	MOVIA	0x80
     0007 00rr                      1- 2548     	SFUN	_TMR2
                                    1- 2549     	.line	552, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2101                      1- 2550     	MOVIA	0x01
     0009 00rr                      1- 2551     	SFUN	_T2CR2
                                    1- 2552     	.line	553, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2553     	MOVIA	0x83
     000B 00rr                      1- 2554     	SFUN	_T2CR1
     000C                           1- 2555     _00413_DS_:
                                    1- 2556     	.line	554, "main.c"; 	}
                                    1- 2557     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2558     ; exit point of _pwmInit
                                    1- 2560     ;***
                                    1- 2561     ;  pBlock Stats: dbName = C
                                    1- 2562     ;***
                                    1- 2563     ;has an exit
                                    1- 2564     ;; Starting pCode block
                                    1- 2565     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2567     _pwm1Stop:
                                    1- 2568     ; 2 exit points
                                    1- 2569     	.line	539, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2570     	CLRA	
     0001 00rr                      1- 2571     	SFUN	_T1CR1
                                    1- 2572     	.line	540, "main.c"; 	}
                                    1- 2573     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2574     ; exit point of _pwm1Stop
                                    1- 2576     ;***
                                    1- 2577     ;  pBlock Stats: dbName = C
                                    1- 2578     ;***
                                    1- 2579     ;has an exit
                                    1- 2580     ;1 compiler assigned register :
                                    1- 2581     ;   r0x1055
                                    1- 2582     ;; Starting pCode block
                                    1- 2583     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2585     _pwm1Init:
                                    1- 2586     ; 2 exit points
                                    1- 2587     	.line	526, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2588     	SFUNR	_T1CR1
                                    1- 2589     	BANKSEL	r0x1055
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2590     	MOVAR	r0x1055
     0003 0Frr                      1- 2591     	BTRSC	r0x1055,7
                                    1- 2592     	.line	527, "main.c"; 	return;
                                    1- 2593     	MGOTO	_00402_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2594     	.line	528, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2595     	CLRR	_TMRH
                                    1- 2596     	.line	529, "main.c"; 	TMR1 = 70;							//频率为110K
     0006 2146                      1- 2597     	MOVIA	0x46
     0007 00rr                      1- 2598     	SFUN	_TMR1
                                    1- 2599     	.line	532, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2600     	CLRA	
     0009 00rr                      1- 2601     	SFUN	_T1CR2
                                    1- 2602     	.line	533, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Dis;
     000A 2108                      1- 2603     	MOVIA	0x08
     000B 00rr                      1- 2604     	SFUN	_T1CR2
                                    1- 2605     	.line	534, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000C 2183                      1- 2606     	MOVIA	0x83
     000D 00rr                      1- 2607     	SFUN	_T1CR1
     000E                           1- 2608     _00402_DS_:
                                    1- 2609     	.line	535, "main.c"; 	}
                                    1- 2610     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2611     ; exit point of _pwm1Init
                                    1- 2613     ;***
                                    1- 2614     ;  pBlock Stats: dbName = C
                                    1- 2615     ;***
                                    1- 2616     ;has an exit
                                    1- 2617     ;functions called:
                                    1- 2618     ;   _delay
                                    1- 2619     ;   _LedInput
                                    1- 2620     ;   _delay
                                    1- 2621     ;   _LedInput
                                    1- 2622     ;1 compiler assigned register :
                                    1- 2623     ;   r0x105E
                                    1- 2624     ;; Starting pCode block
                                    1- 2625     .segment "code"; module=main, function=_LED6ON
     0000                           1- 2627     _LED6ON:
                                    1- 2628     ; 2 exit points
                                    1- 2629     	.line	516, "main.c"; 	L2OUT;
     0000 001r                      1- 2630     	IOSTR	_IOSTA
                                    1- 2631     	BANKSEL	r0x105E
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2632     	MOVAR	r0x105E
     0003 1Crr                      1- 2633     	BCR	r0x105E,0
     0004 01rr                      1- 2634     	MOVR	r0x105E,W
     0005 000r                      1- 2635     	IOST	_IOSTA
                                    1- 2636     	.line	517, "main.c"; 	L1OUT;
     0006 001r                      1- 2637     	IOSTR	_IOSTB
     0007 00rr                      1- 2638     	MOVAR	r0x105E
     0008 21DE                      1- 2639     	MOVIA	0xde
     0009 10rr                      1- 2640     	ANDAR	r0x105E,F
     000A 01rr                      1- 2641     	MOVR	r0x105E,W
     000B 000r                      1- 2642     	IOST	_IOSTB
                                    1- 2643     	.line	518, "main.c"; 	L1H;
     000C 2121                      1- 2644     	MOVIA	0x21
     000D 11rr                      1- 2645     	IORAR	_PORTB,F
                                    1- 2646     	.line	519, "main.c"; 	L2L;
                                    1- 2647     	BANKSEL	_PORTA
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 1Crr                      1- 2648     	BCR	_PORTA,0
                                    1- 2649     	.line	520, "main.c"; 	delay(100);
     0010 2164                      1- 2650     	MOVIA	0x64
                                    1- 2651     	MCALL	_delay
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2652     	.line	521, "main.c"; 	LedInput();
                                    1- 2653     	MCALL	_LedInput
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2654     	.line	522, "main.c"; 	}
                                    1- 2655     	RETURN	
     0013 0010                      3-   40 m1      ret
                                    1- 2656     ; exit point of _LED6ON
                                    1- 2658     ;***
                                    1- 2659     ;  pBlock Stats: dbName = C
                                    1- 2660     ;***
                                    1- 2661     ;has an exit
                                    1- 2662     ;functions called:
                                    1- 2663     ;   _delay
                                    1- 2664     ;   _LedInput
                                    1- 2665     ;   _delay
                                    1- 2666     ;   _LedInput
                                    1- 2667     ;1 compiler assigned register :
                                    1- 2668     ;   r0x105F
                                    1- 2669     ;; Starting pCode block
                                    1- 2670     .segment "code"; module=main, function=_LED5ON
     0000                           1- 2672     _LED5ON:
                                    1- 2673     ; 2 exit points
                                    1- 2674     	.line	505, "main.c"; 	L2OUT;
     0000 001r                      1- 2675     	IOSTR	_IOSTA
                                    1- 2676     	BANKSEL	r0x105F
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2677     	MOVAR	r0x105F
     0003 1Crr                      1- 2678     	BCR	r0x105F,0
     0004 01rr                      1- 2679     	MOVR	r0x105F,W
     0005 000r                      1- 2680     	IOST	_IOSTA
                                    1- 2681     	.line	506, "main.c"; 	L1OUT;
     0006 001r                      1- 2682     	IOSTR	_IOSTB
     0007 00rr                      1- 2683     	MOVAR	r0x105F
     0008 21DE                      1- 2684     	MOVIA	0xde
     0009 10rr                      1- 2685     	ANDAR	r0x105F,F
     000A 01rr                      1- 2686     	MOVR	r0x105F,W
     000B 000r                      1- 2687     	IOST	_IOSTB
                                    1- 2688     	.line	507, "main.c"; 	L2H;
                                    1- 2689     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 18rr                      1- 2690     	BSR	_PORTA,0
                                    1- 2691     	.line	508, "main.c"; 	L1L;
     000E 21DE                      1- 2692     	MOVIA	0xde
     000F 10rr                      1- 2693     	ANDAR	_PORTB,F
                                    1- 2694     	.line	509, "main.c"; 	delay(100);
     0010 2164                      1- 2695     	MOVIA	0x64
                                    1- 2696     	MCALL	_delay
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2697     	.line	510, "main.c"; 	LedInput();
                                    1- 2698     	MCALL	_LedInput
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2699     	.line	511, "main.c"; 	}
                                    1- 2700     	RETURN	
     0013 0010                      3-   40 m1      ret
                                    1- 2701     ; exit point of _LED5ON
                                    1- 2703     ;***
                                    1- 2704     ;  pBlock Stats: dbName = C
                                    1- 2705     ;***
                                    1- 2706     ;has an exit
                                    1- 2707     ;functions called:
                                    1- 2708     ;   _delay
                                    1- 2709     ;   _LedInput
                                    1- 2710     ;   _delay
                                    1- 2711     ;   _LedInput
                                    1- 2712     ;1 compiler assigned register :
                                    1- 2713     ;   r0x1060
                                    1- 2714     ;; Starting pCode block
                                    1- 2715     .segment "code"; module=main, function=_LED4ON
     0000                           1- 2717     _LED4ON:
                                    1- 2718     ; 2 exit points
                                    1- 2719     	.line	495, "main.c"; 	L3OUT;
     0000 001r                      1- 2720     	IOSTR	_IOSTA
                                    1- 2721     	BANKSEL	r0x1060
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2722     	MOVAR	r0x1060
     0003 1Crr                      1- 2723     	BCR	r0x1060,1
     0004 01rr                      1- 2724     	MOVR	r0x1060,W
     0005 000r                      1- 2725     	IOST	_IOSTA
                                    1- 2726     	.line	496, "main.c"; 	L2OUT;
     0006 001r                      1- 2727     	IOSTR	_IOSTA
     0007 00rr                      1- 2728     	MOVAR	r0x1060
     0008 1Crr                      1- 2729     	BCR	r0x1060,0
     0009 01rr                      1- 2730     	MOVR	r0x1060,W
     000A 000r                      1- 2731     	IOST	_IOSTA
                                    1- 2732     	.line	497, "main.c"; 	L3H;
                                    1- 2733     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 18rr                      1- 2734     	BSR	_PORTA,1
                                    1- 2735     	.line	498, "main.c"; 	L2L;
     000D 1Crr                      1- 2736     	BCR	_PORTA,0
                                    1- 2737     	.line	499, "main.c"; 	delay(100);
     000E 2164                      1- 2738     	MOVIA	0x64
                                    1- 2739     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2740     	.line	500, "main.c"; 	LedInput();
                                    1- 2741     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2742     	.line	501, "main.c"; 	}
                                    1- 2743     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2744     ; exit point of _LED4ON
                                    1- 2746     ;***
                                    1- 2747     ;  pBlock Stats: dbName = C
                                    1- 2748     ;***
                                    1- 2749     ;has an exit
                                    1- 2750     ;functions called:
                                    1- 2751     ;   _delay
                                    1- 2752     ;   _LedInput
                                    1- 2753     ;   _delay
                                    1- 2754     ;   _LedInput
                                    1- 2755     ;1 compiler assigned register :
                                    1- 2756     ;   r0x1061
                                    1- 2757     ;; Starting pCode block
                                    1- 2758     .segment "code"; module=main, function=_LED3ON
     0000                           1- 2760     _LED3ON:
                                    1- 2761     ; 2 exit points
                                    1- 2762     	.line	485, "main.c"; 	L3OUT;
     0000 001r                      1- 2763     	IOSTR	_IOSTA
                                    1- 2764     	BANKSEL	r0x1061
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2765     	MOVAR	r0x1061
     0003 1Crr                      1- 2766     	BCR	r0x1061,1
     0004 01rr                      1- 2767     	MOVR	r0x1061,W
     0005 000r                      1- 2768     	IOST	_IOSTA
                                    1- 2769     	.line	486, "main.c"; 	L1OUT;
     0006 001r                      1- 2770     	IOSTR	_IOSTB
     0007 00rr                      1- 2771     	MOVAR	r0x1061
     0008 21DE                      1- 2772     	MOVIA	0xde
     0009 10rr                      1- 2773     	ANDAR	r0x1061,F
     000A 01rr                      1- 2774     	MOVR	r0x1061,W
     000B 000r                      1- 2775     	IOST	_IOSTB
                                    1- 2776     	.line	487, "main.c"; 	L1H;
     000C 2121                      1- 2777     	MOVIA	0x21
     000D 11rr                      1- 2778     	IORAR	_PORTB,F
                                    1- 2779     	.line	488, "main.c"; 	L3L;
                                    1- 2780     	BANKSEL	_PORTA
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 1Crr                      1- 2781     	BCR	_PORTA,1
                                    1- 2782     	.line	489, "main.c"; 	delay(100);
     0010 2164                      1- 2783     	MOVIA	0x64
                                    1- 2784     	MCALL	_delay
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2785     	.line	490, "main.c"; 	LedInput();
                                    1- 2786     	MCALL	_LedInput
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2787     	.line	491, "main.c"; 	}
                                    1- 2788     	RETURN	
     0013 0010                      3-   40 m1      ret
                                    1- 2789     ; exit point of _LED3ON
                                    1- 2791     ;***
                                    1- 2792     ;  pBlock Stats: dbName = C
                                    1- 2793     ;***
                                    1- 2794     ;has an exit
                                    1- 2795     ;functions called:
                                    1- 2796     ;   _delay
                                    1- 2797     ;   _LedInput
                                    1- 2798     ;   _delay
                                    1- 2799     ;   _LedInput
                                    1- 2800     ;1 compiler assigned register :
                                    1- 2801     ;   r0x1062
                                    1- 2802     ;; Starting pCode block
                                    1- 2803     .segment "code"; module=main, function=_LED2ON
     0000                           1- 2805     _LED2ON:
                                    1- 2806     ; 2 exit points
                                    1- 2807     	.line	474, "main.c"; 	L2OUT;
     0000 001r                      1- 2808     	IOSTR	_IOSTA
                                    1- 2809     	BANKSEL	r0x1062
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2810     	MOVAR	r0x1062
     0003 1Crr                      1- 2811     	BCR	r0x1062,0
     0004 01rr                      1- 2812     	MOVR	r0x1062,W
     0005 000r                      1- 2813     	IOST	_IOSTA
                                    1- 2814     	.line	475, "main.c"; 	L3OUT;
     0006 001r                      1- 2815     	IOSTR	_IOSTA
     0007 00rr                      1- 2816     	MOVAR	r0x1062
     0008 1Crr                      1- 2817     	BCR	r0x1062,1
     0009 01rr                      1- 2818     	MOVR	r0x1062,W
     000A 000r                      1- 2819     	IOST	_IOSTA
                                    1- 2820     	.line	476, "main.c"; 	L1H;
     000B 2121                      1- 2821     	MOVIA	0x21
     000C 11rr                      1- 2822     	IORAR	_PORTB,F
                                    1- 2823     	.line	477, "main.c"; 	L2H;
                                    1- 2824     	BANKSEL	_PORTA
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 18rr                      1- 2825     	BSR	_PORTA,0
                                    1- 2826     	.line	478, "main.c"; 	L3L;
     000F 1Crr                      1- 2827     	BCR	_PORTA,1
                                    1- 2828     	.line	479, "main.c"; 	delay(100);
     0010 2164                      1- 2829     	MOVIA	0x64
                                    1- 2830     	MCALL	_delay
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2831     	.line	480, "main.c"; 	LedInput();
                                    1- 2832     	MCALL	_LedInput
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2833     	.line	481, "main.c"; 	}
                                    1- 2834     	RETURN	
     0013 0010                      3-   40 m1      ret
                                    1- 2835     ; exit point of _LED2ON
                                    1- 2837     ;***
                                    1- 2838     ;  pBlock Stats: dbName = C
                                    1- 2839     ;***
                                    1- 2840     ;has an exit
                                    1- 2841     ;functions called:
                                    1- 2842     ;   _delay
                                    1- 2843     ;   _LedInput
                                    1- 2844     ;   _delay
                                    1- 2845     ;   _LedInput
                                    1- 2846     ;1 compiler assigned register :
                                    1- 2847     ;   r0x1063
                                    1- 2848     ;; Starting pCode block
                                    1- 2849     .segment "code"; module=main, function=_LED1ON
     0000                           1- 2851     _LED1ON:
                                    1- 2852     ; 2 exit points
                                    1- 2853     	.line	464, "main.c"; 	L3OUT;
     0000 001r                      1- 2854     	IOSTR	_IOSTA
                                    1- 2855     	BANKSEL	r0x1063
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2856     	MOVAR	r0x1063
     0003 1Crr                      1- 2857     	BCR	r0x1063,1
     0004 01rr                      1- 2858     	MOVR	r0x1063,W
     0005 000r                      1- 2859     	IOST	_IOSTA
                                    1- 2860     	.line	465, "main.c"; 	L1OUT;
     0006 001r                      1- 2861     	IOSTR	_IOSTB
     0007 00rr                      1- 2862     	MOVAR	r0x1063
     0008 21DE                      1- 2863     	MOVIA	0xde
     0009 10rr                      1- 2864     	ANDAR	r0x1063,F
     000A 01rr                      1- 2865     	MOVR	r0x1063,W
     000B 000r                      1- 2866     	IOST	_IOSTB
                                    1- 2867     	.line	466, "main.c"; 	L3H;
                                    1- 2868     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 18rr                      1- 2869     	BSR	_PORTA,1
                                    1- 2870     	.line	467, "main.c"; 	L1L;
     000E 21DE                      1- 2871     	MOVIA	0xde
     000F 10rr                      1- 2872     	ANDAR	_PORTB,F
                                    1- 2873     	.line	468, "main.c"; 	delay(100);
     0010 2164                      1- 2874     	MOVIA	0x64
                                    1- 2875     	MCALL	_delay
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2876     	.line	469, "main.c"; 	LedInput();
                                    1- 2877     	MCALL	_LedInput
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2878     	.line	470, "main.c"; 	}
                                    1- 2879     	RETURN	
     0013 0010                      3-   40 m1      ret
                                    1- 2880     ; exit point of _LED1ON
                                    1- 2882     ;***
                                    1- 2883     ;  pBlock Stats: dbName = C
                                    1- 2884     ;***
                                    1- 2885     ;has an exit
                                    1- 2886     ;functions called:
                                    1- 2887     ;   _delay
                                    1- 2888     ;   _delay
                                    1- 2889     ;1 compiler assigned register :
                                    1- 2890     ;   r0x105C
                                    1- 2891     ;; Starting pCode block
                                    1- 2892     .segment "code"; module=main, function=_LedInput
     0000                           1- 2894     _LedInput:
                                    1- 2895     ; 2 exit points
                                    1- 2896     	.line	455, "main.c"; 	PORTA &= 0xFC;
     0000 21FC                      1- 2897     	MOVIA	0xfc
                                    1- 2898     	BANKSEL	_PORTA
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 10rr                      1- 2899     	ANDAR	_PORTA,F
                                    1- 2900     	.line	456, "main.c"; 	PORTB &= 0xDE;
     0003 21DE                      1- 2901     	MOVIA	0xde
     0004 10rr                      1- 2902     	ANDAR	_PORTB,F
                                    1- 2903     	.line	457, "main.c"; 	IOSTA |= 0x03;
     0005 001r                      1- 2904     	IOSTR	_IOSTA
                                    1- 2905     	BANKSEL	r0x105C
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 2906     	MOVAR	r0x105C
     0008 2103                      1- 2907     	MOVIA	0x03
     0009 11rr                      1- 2908     	IORAR	r0x105C,F
     000A 01rr                      1- 2909     	MOVR	r0x105C,W
     000B 000r                      1- 2910     	IOST	_IOSTA
                                    1- 2911     	.line	458, "main.c"; 	IOSTB |= 0x21;
     000C 001r                      1- 2912     	IOSTR	_IOSTB
     000D 00rr                      1- 2913     	MOVAR	r0x105C
     000E 2121                      1- 2914     	MOVIA	0x21
     000F 11rr                      1- 2915     	IORAR	r0x105C,F
     0010 01rr                      1- 2916     	MOVR	r0x105C,W
     0011 000r                      1- 2917     	IOST	_IOSTB
                                    1- 2918     	.line	459, "main.c"; 	delay(2);
     0012 2102                      1- 2919     	MOVIA	0x02
                                    1- 2920     	MCALL	_delay
     0013 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2921     	.line	460, "main.c"; 	}
                                    1- 2922     	RETURN	
     0014 0010                      3-   40 m1      ret
                                    1- 2923     ; exit point of _LedInput
                                    1- 2925     ;***
                                    1- 2926     ;  pBlock Stats: dbName = C
                                    1- 2927     ;***
                                    1- 2928     ;has an exit
                                    1- 2929     ;functions called:
                                    1- 2930     ;   _LedInput
                                    1- 2931     ;   _LedInput
                                    1- 2932     ;   _LED6ON
                                    1- 2933     ;   _LED5ON
                                    1- 2934     ;   _LED4ON
                                    1- 2935     ;   _LED3ON
                                    1- 2936     ;   _LED2ON
                                    1- 2937     ;   _LED1ON
                                    1- 2938     ;   _LedInput
                                    1- 2939     ;   _LedInput
                                    1- 2940     ;   _LED6ON
                                    1- 2941     ;   _LED5ON
                                    1- 2942     ;   _LED4ON
                                    1- 2943     ;   _LED3ON
                                    1- 2944     ;   _LED2ON
                                    1- 2945     ;   _LED1ON
                                    1- 2946     ;; Starting pCode block
                                    1- 2947     .segment "code"; module=main, function=_ledShow
     0000                           1- 2949     _ledShow:
                                    1- 2950     ; 2 exit points
                                    1- 2951     	.line	397, "main.c"; 	if(ledDeadTime > 0 && workStep == 0)
                                    1- 2952     	BANKSEL	_ledDeadTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2953     	MOVR	_ledDeadTime,W
     0002 0D03                      1- 2954     	BTRSC	STATUS,2
                                    1- 2955     	MGOTO	_00299_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2956     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 2957     	MOVR	_workStep,W
     0006 0903                      1- 2958     	BTRSS	STATUS,2
                                    1- 2959     	MGOTO	_00299_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2960     	.line	399, "main.c"; 	if(ledDeadTime % 2 == 0)
                                    1- 2961     	BANKSEL	_ledDeadTime
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 0Crr                      1- 2962     	BTRSC	_ledDeadTime,0
                                    1- 2963     	MGOTO	_00296_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2964     	.line	401, "main.c"; 	ledStep = 0;
                                    1- 2965     	BANKSEL	_ledStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 02rr                      1- 2966     	CLRR	_ledStep
                                    1- 2967     	MGOTO	_00299_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 2968     _00296_DS_:
                                    1- 2969     	.line	405, "main.c"; 	ledStep = tempLedStep;
                                    1- 2970     	BANKSEL	_tempLedStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 2971     	MOVR	_tempLedStep,W
                                    1- 2972     	BANKSEL	_ledStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 2973     	MOVAR	_ledStep
     0012                           1- 2974     _00299_DS_:
                                    1- 2975     	.line	409, "main.c"; 	if(ledLightTime > 0 && pwStep > 0)
                                    1- 2976     	BANKSEL	_ledLightTime
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 2977     	MOVR	_ledLightTime,W
     0014 0D03                      1- 2978     	BTRSC	STATUS,2
                                    1- 2979     	MGOTO	_00307_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2980     	BANKSEL	_pwStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 2981     	MOVR	_pwStep,W
     0018 0D03                      1- 2982     	BTRSC	STATUS,2
                                    1- 2983     	MGOTO	_00307_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2984     	.line	411, "main.c"; 	if(ledLightTime > 0)
                                    1- 2985     	BANKSEL	_ledLightTime
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 01rr                      1- 2986     	MOVR	_ledLightTime,W
     001C 0D03                      1- 2987     	BTRSC	STATUS,2
                                    1- 2988     	MGOTO	_00307_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2989     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2990     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 2991     	.line	413, "main.c"; 	if(pwStep > 6 )
     001E 2107                      1- 2992     	MOVIA	0x07
                                    1- 2993     	BANKSEL	_pwStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 04rr                      1- 2994     	SUBAR	_pwStep,W
     0021 0803                      1- 2995     	BTRSS	STATUS,0
                                    1- 2996     	MGOTO	_00302_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2997     	.line	414, "main.c"; 	ledStep = 6;
     0023 2106                      1- 2998     	MOVIA	0x06
                                    1- 2999     	BANKSEL	_ledStep
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 00rr                      1- 3000     	MOVAR	_ledStep
                                    1- 3001     	MGOTO	_00307_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 3002     _00302_DS_:
                                    1- 3003     	.line	416, "main.c"; 	ledStep = pwStep;
                                    1- 3004     	BANKSEL	_pwStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 3005     	MOVR	_pwStep,W
                                    1- 3006     	BANKSEL	_ledStep
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 3007     	MOVAR	_ledStep
     002B                           1- 3008     _00307_DS_:
                                    1- 3009     	.line	419, "main.c"; 	if(shanshuoTime > 0 && workStep > 0 && pwStep == 0)
                                    1- 3010     	BANKSEL	_shanshuoTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1- 3011     	MOVR	_shanshuoTime,W
     002D 0D03                      1- 3012     	BTRSC	STATUS,2
                                    1- 3013     	MGOTO	_00313_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3014     	BANKSEL	_workStep
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 3015     	MOVR	_workStep,W
     0031 0D03                      1- 3016     	BTRSC	STATUS,2
                                    1- 3017     	MGOTO	_00313_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3018     	BANKSEL	_pwStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 3019     	MOVR	_pwStep,W
     0035 0903                      1- 3020     	BTRSS	STATUS,2
                                    1- 3021     	MGOTO	_00313_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3022     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 3023     	.line	421, "main.c"; 	if(count1s < 50)
     0037 2132                      1- 3024     	MOVIA	0x32
                                    1- 3025     	BANKSEL	_count1s
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 04rr                      1- 3026     	SUBAR	_count1s,W
     003A 0C03                      1- 3027     	BTRSC	STATUS,0
                                    1- 3028     	MGOTO	_00310_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3029     	.line	422, "main.c"; 	ledStep = workStep;
                                    1- 3030     	BANKSEL	_workStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 3031     	MOVR	_workStep,W
                                    1- 3032     	BANKSEL	_ledStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 00rr                      1- 3033     	MOVAR	_ledStep
                                    1- 3034     	MGOTO	_00313_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041                           1- 3035     _00310_DS_:
                                    1- 3036     	.line	424, "main.c"; 	ledStep = 0;
                                    1- 3037     	BANKSEL	_ledStep
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 3038     	CLRR	_ledStep
     0043                           1- 3039     _00313_DS_:
                                    1- 3040     	.line	427, "main.c"; 	LedInput();
                                    1- 3041     	MCALL	_LedInput
     0043 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3042     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3043     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 3044     	.line	428, "main.c"; 	switch(ledStep)
     0044 2109                      1- 3045     	MOVIA	0x09
                                    1- 3046     	BANKSEL	_ledStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 04rr                      1- 3047     	SUBAR	_ledStep,W
     0047 0C03                      1- 3048     	BTRSC	STATUS,0
                                    1- 3049     	MGOTO	_00326_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 21rr                      1- 3050     	MOVIA	((_00367_DS_ >> 8) & 0xff)
     004A 008A                      1- 3051     	MOVAR	PCHBUF
     004B 01rr                      1- 3052     	MOVR	_ledStep,W
     004C 25rr                      1- 3053     	ADDIA	_00367_DS_
     004D 0C03                      1- 3054     	BTRSC	STATUS,0
     004E 058A                      1- 3055     	INCR	PCHBUF,F
     004F 0082                      1- 3056     	MOVAR	PCL
     0050                           1- 3057     _00367_DS_:
                                    1- 3058     	MGOTO	_00316_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3059     	MGOTO	_00324_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3060     	MGOTO	_00323_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3061     	MGOTO	_00322_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3062     	MGOTO	_00321_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3063     	MGOTO	_00320_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3064     	MGOTO	_00319_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3065     	MGOTO	_00319_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3066     	MGOTO	_00319_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
     0059                           1- 3067     _00316_DS_:
                                    1- 3068     	.line	431, "main.c"; 	LedInput();
                                    1- 3069     	MCALL	_LedInput
     0059 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3070     	.line	432, "main.c"; 	break;
                                    1- 3071     	MGOTO	_00326_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B                           1- 3072     _00319_DS_:
                                    1- 3073     	.line	436, "main.c"; 	LED6ON();
                                    1- 3074     	MCALL	_LED6ON
     005B 2rrr                      3-   66 m1      LCALL rom_address
     005C                           1- 3075     _00320_DS_:
                                    1- 3076     	.line	438, "main.c"; 	LED5ON();
                                    1- 3077     	MCALL	_LED5ON
     005C 2rrr                      3-   66 m1      LCALL rom_address
     005D                           1- 3078     _00321_DS_:
                                    1- 3079     	.line	440, "main.c"; 	LED4ON();
                                    1- 3080     	MCALL	_LED4ON
     005D 2rrr                      3-   66 m1      LCALL rom_address
     005E                           1- 3081     _00322_DS_:
                                    1- 3082     	.line	442, "main.c"; 	LED3ON();
                                    1- 3083     	MCALL	_LED3ON
     005E 2rrr                      3-   66 m1      LCALL rom_address
     005F                           1- 3084     _00323_DS_:
                                    1- 3085     	.line	444, "main.c"; 	LED2ON();
                                    1- 3086     	MCALL	_LED2ON
     005F 2rrr                      3-   66 m1      LCALL rom_address
     0060                           1- 3087     _00324_DS_:
                                    1- 3088     	.line	446, "main.c"; 	LED1ON();
                                    1- 3089     	MCALL	_LED1ON
     0060 2rrr                      3-   66 m1      LCALL rom_address
     0061                           1- 3090     _00326_DS_:
                                    1- 3091     	.line	449, "main.c"; 	}
                                    1- 3092     	RETURN	
     0061 0010                      3-   40 m1      ret
                                    1- 3093     ; exit point of _ledShow
                                    1- 3095     ;***
                                    1- 3096     ;  pBlock Stats: dbName = C
                                    1- 3097     ;***
                                    1- 3098     ;has an exit
                                    1- 3099     ;functions called:
                                    1- 3100     ;   _LedInput
                                    1- 3101     ;   _LedInput
                                    1- 3102     ;; Starting pCode block
                                    1- 3103     .segment "code"; module=main, function=_initSys
     0000                           1- 3105     _initSys:
                                    1- 3106     ; 2 exit points
                                    1- 3107     	.line	364, "main.c"; 	DISI();
     0000 0013                      1- 3108     	DISI
                                    1- 3109     	.line	365, "main.c"; 	IOSTA = C_PA6_Input  | C_PA4_Input | C_PA3_Input ;
     0001 2158                      1- 3110     	MOVIA	0x58
     0002 000r                      1- 3111     	IOST	_IOSTA
                                    1- 3112     	.line	366, "main.c"; 	IOSTB = C_PB1_Input;
     0003 2102                      1- 3113     	MOVIA	0x02
     0004 000r                      1- 3114     	IOST	_IOSTB
                                    1- 3115     	.line	367, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 3116     	CLRR	_PORTB
                                    1- 3117     	.line	368, "main.c"; 	PORTA = 0x00;
                                    1- 3118     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 3119     	CLRR	_PORTA
                                    1- 3120     	.line	369, "main.c"; 	LedInput();
                                    1- 3121     	MCALL	_LedInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3122     	.line	370, "main.c"; 	APHCON = 0xBF;
     0009 21BF                      1- 3123     	MOVIA	0xbf
     000A 000r                      1- 3124     	IOST	_APHCON
                                    1- 3125     	.line	371, "main.c"; 	BPHCON = 0xFF;
     000B 21FF                      1- 3126     	MOVIA	0xff
     000C 00rr                      1- 3127     	MOVAR	_BPHCON
                                    1- 3128     	.line	372, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 3129     	MOVAR	_ABPLCON
                                    1- 3130     	.line	374, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1- 3131     	MOVIA	0x01
     000F 00rr                      1- 3132     	MOVAR	_INTE
                                    1- 3133     	.line	376, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 3134     	CLRA	
     0011 000r                      1- 3135     	IOST	_PCON1
                                    1- 3136     	.line	378, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 3137     	MOVIA	0x37
     0013 00rr                      1- 3138     	MOVAR	_TMR0
                                    1- 3139     	.line	379, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0014 2101                      1- 3140     	MOVIA	0x01
     0015 0003                      1- 3141     	T0MD	
                                    1- 3142     	.line	381, "main.c"; 	PCON1 = C_TMR0_En;
     0016 000r                      1- 3143     	IOST	_PCON1
                                    1- 3144     	.line	384, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0017 2198                      1- 3145     	MOVIA	0x98
     0018 00rr                      1- 3146     	MOVAR	_PCON
                                    1- 3147     	.line	387, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0019 2101                      1- 3148     	MOVIA	0x01
     001A 000r                      1- 3149     	IOST	_PCON1
                                    1- 3150     	.line	388, "main.c"; 	ENI();
     001B 0004                      1- 3151     	ENI
                                    1- 3152     	.line	389, "main.c"; 	closeFlag = 0;
                                    1- 3153     	BANKSEL	_closeFlag
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1- 3154     	CLRR	_closeFlag
                                    1- 3155     	.line	390, "main.c"; 	}
                                    1- 3156     	RETURN	
     001E 0010                      3-   40 m1      ret
                                    1- 3157     ; exit point of _initSys
                                    1- 3159     ;***
                                    1- 3160     ;  pBlock Stats: dbName = C
                                    1- 3161     ;***
                                    1- 3162     ;has an exit
                                    1- 3163     ;functions called:
                                    1- 3164     ;   _pwmStop
                                    1- 3165     ;   _pwmStop
                                    1- 3166     ;; Starting pCode block
                                    1- 3167     .segment "code"; module=main, function=_powerOff
     0000                           1- 3169     _powerOff:
                                    1- 3170     ; 2 exit points
                                    1- 3171     	.line	355, "main.c"; 	workStep = 0;
                                    1- 3172     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 3173     	CLRR	_workStep
                                    1- 3174     	.line	356, "main.c"; 	pwmStop();
                                    1- 3175     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3176     	.line	358, "main.c"; 	}
                                    1- 3177     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 3178     ; exit point of _powerOff
                                    1- 3180     ;***
                                    1- 3181     ;  pBlock Stats: dbName = C
                                    1- 3182     ;***
                                    1- 3183     ;has an exit
                                    1- 3184     ;functions called:
                                    1- 3185     ;   _keyRead
                                    1- 3186     ;   _checkBatAD
                                    1- 3187     ;   _powerOff
                                    1- 3188     ;   _pwmInit
                                    1- 3189     ;   _pwmInit
                                    1- 3190     ;   _powerOff
                                    1- 3191     ;   _checkBatAD
                                    1- 3192     ;   _pwmInit
                                    1- 3193     ;   _keyRead
                                    1- 3194     ;   _checkBatAD
                                    1- 3195     ;   _powerOff
                                    1- 3196     ;   _pwmInit
                                    1- 3197     ;   _pwmInit
                                    1- 3198     ;   _powerOff
                                    1- 3199     ;   _checkBatAD
                                    1- 3200     ;   _pwmInit
                                    1- 3201     ;1 compiler assigned register :
                                    1- 3202     ;   r0x1064
                                    1- 3203     ;; Starting pCode block
                                    1- 3204     .segment "code"; module=main, function=_keyCtr
                                    1- 3206     ;local variable name mapping:
     0000                           1- 3208     _keyCtr:
                                    1- 3209     ; 2 exit points
                                    1- 3210     	.line	279, "main.c"; 	char kclick = keyRead(0x40 & (~PORTA));
                                    1- 3211     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 3212     	COMR	_PORTA,W
                                    1- 3213     	BANKSEL	r0x1064
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 3214     	MOVAR	r0x1064
     0004 2140                      1- 3215     	MOVIA	0x40
     0005 10rr                      1- 3216     	ANDAR	r0x1064,F
     0006 01rr                      1- 3217     	MOVR	r0x1064,W
                                    1- 3218     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3219     	BANKSEL	r0x1064
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 3220     	MOVAR	r0x1064
                                    1- 3221     	.line	280, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 3222     	XORIA	0x01
     000B 0903                      1- 3223     	BTRSS	STATUS,2
                                    1- 3224     	MGOTO	_00280_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3225     	.line	282, "main.c"; 	count500ms = 0;
                                    1- 3226     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 3227     	CLRR	_count500ms
                                    1- 3228     	.line	283, "main.c"; 	ledLightTime = 0;
                                    1- 3229     	BANKSEL	_ledLightTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 3230     	CLRR	_ledLightTime
                                    1- 3231     	.line	284, "main.c"; 	if((workStep == 0 && pwStep == 0) || closeFlag)
                                    1- 3232     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 3233     	MOVR	_workStep,W
     0013 0903                      1- 3234     	BTRSS	STATUS,2
                                    1- 3235     	MGOTO	_00248_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3236     	BANKSEL	_pwStep
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 01rr                      1- 3237     	MOVR	_pwStep,W
     0017 0D03                      1- 3238     	BTRSC	STATUS,2
                                    1- 3239     	MGOTO	_00245_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
     0019                           1- 3240     _00248_DS_:
                                    1- 3241     	BANKSEL	_closeFlag
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 3242     	MOVR	_closeFlag,W
     001B 0D03                      1- 3243     	BTRSC	STATUS,2
                                    1- 3244     	MGOTO	_00246_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
     001D                           1- 3245     _00245_DS_:
                                    1- 3246     	.line	286, "main.c"; 	checkBatAD();
                                    1- 3247     	MCALL	_checkBatAD
     001D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3248     	.line	287, "main.c"; 	return;
                                    1- 3249     	MGOTO	_00282_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
     001F                           1- 3250     _00246_DS_:
                                    1- 3251     	.line	289, "main.c"; 	ledTime = 0;
                                    1- 3252     	BANKSEL	_ledTime
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 02rr                      1- 3253     	CLRR	_ledTime
                                    1- 3254     	.line	290, "main.c"; 	if(++workStep > 6)
                                    1- 3255     	BANKSEL	_workStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 05rr                      1- 3256     	INCR	_workStep,F
                                    1- 3257     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3258     ;;unsigned compare: left >= lit (0x7=7), size=1
     0023 2107                      1- 3259     	MOVIA	0x07
     0024 04rr                      1- 3260     	SUBAR	_workStep,W
     0025 0803                      1- 3261     	BTRSS	STATUS,0
                                    1- 3262     	MGOTO	_00250_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3263     	.line	292, "main.c"; 	workStep = 0;
     0027 02rr                      1- 3264     	CLRR	_workStep
                                    1- 3265     	.line	293, "main.c"; 	powerOff();
                                    1- 3266     	MCALL	_powerOff
     0028 2rrr                      3-   66 m1      LCALL rom_address
     0029                           1- 3267     _00250_DS_:
                                    1- 3268     	.line	297, "main.c"; 	if(workStep == 1)
                                    1- 3269     	BANKSEL	_workStep
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 01rr                      1- 3270     	MOVR	_workStep,W
     002B 2401                      1- 3271     	XORIA	0x01
     002C 0903                      1- 3272     	BTRSS	STATUS,2
                                    1- 3273     	MGOTO	_00266_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3274     	.line	299, "main.c"; 	ledStep = 1;
     002E 2101                      1- 3275     	MOVIA	0x01
                                    1- 3276     	BANKSEL	_ledStep
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 00rr                      1- 3277     	MOVAR	_ledStep
                                    1- 3278     	.line	300, "main.c"; 	PWM2DUTY = 120;
     0031 2178                      1- 3279     	MOVIA	0x78
     0032 00rr                      1- 3280     	SFUN	_PWM2DUTY
                                    1- 3281     	.line	301, "main.c"; 	currentDuty = 120;
                                    1- 3282     	BANKSEL	_currentDuty
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 00rr                      1- 3283     	MOVAR	_currentDuty
                                    1- 3284     	.line	302, "main.c"; 	maxDuty = 99;
     0035 2163                      1- 3285     	MOVIA	0x63
                                    1- 3286     	BANKSEL	_maxDuty
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 00rr                      1- 3287     	MOVAR	_maxDuty
                                    1- 3288     	.line	303, "main.c"; 	ledLightTime = 0;
                                    1- 3289     	BANKSEL	_ledLightTime
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 02rr                      1- 3290     	CLRR	_ledLightTime
                                    1- 3291     	.line	304, "main.c"; 	pwmInit();
                                    1- 3292     	MCALL	_pwmInit
     003A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3293     	MGOTO	_00267_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
     003C                           1- 3294     _00266_DS_:
                                    1- 3295     	.line	306, "main.c"; 	else if(workStep == 2)
                                    1- 3296     	BANKSEL	_workStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 3297     	MOVR	_workStep,W
     003E 2402                      1- 3298     	XORIA	0x02
     003F 0903                      1- 3299     	BTRSS	STATUS,2
                                    1- 3300     	MGOTO	_00263_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3301     	.line	307, "main.c"; 	maxDuty = 107;
     0041 216B                      1- 3302     	MOVIA	0x6b
                                    1- 3303     	BANKSEL	_maxDuty
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1- 3304     	MOVAR	_maxDuty
                                    1- 3305     	MGOTO	_00267_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
     0045                           1- 3306     _00263_DS_:
                                    1- 3307     	.line	308, "main.c"; 	else if(workStep == 3)
                                    1- 3308     	BANKSEL	_workStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1- 3309     	MOVR	_workStep,W
     0047 2403                      1- 3310     	XORIA	0x03
     0048 0903                      1- 3311     	BTRSS	STATUS,2
                                    1- 3312     	MGOTO	_00260_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3313     	.line	309, "main.c"; 	maxDuty = 111;
     004A 216F                      1- 3314     	MOVIA	0x6f
                                    1- 3315     	BANKSEL	_maxDuty
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 00rr                      1- 3316     	MOVAR	_maxDuty
                                    1- 3317     	MGOTO	_00267_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
     004E                           1- 3318     _00260_DS_:
                                    1- 3319     	.line	310, "main.c"; 	else if(workStep == 4)
                                    1- 3320     	BANKSEL	_workStep
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1- 3321     	MOVR	_workStep,W
     0050 2404                      1- 3322     	XORIA	0x04
     0051 0903                      1- 3323     	BTRSS	STATUS,2
                                    1- 3324     	MGOTO	_00257_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3325     	.line	311, "main.c"; 	maxDuty = 115;
     0053 2173                      1- 3326     	MOVIA	0x73
                                    1- 3327     	BANKSEL	_maxDuty
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 00rr                      1- 3328     	MOVAR	_maxDuty
                                    1- 3329     	MGOTO	_00267_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
     0057                           1- 3330     _00257_DS_:
                                    1- 3331     	.line	312, "main.c"; 	else if(workStep == 5)
                                    1- 3332     	BANKSEL	_workStep
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 01rr                      1- 3333     	MOVR	_workStep,W
     0059 2405                      1- 3334     	XORIA	0x05
     005A 0903                      1- 3335     	BTRSS	STATUS,2
                                    1- 3336     	MGOTO	_00254_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3337     	.line	313, "main.c"; 	maxDuty = 119;
     005C 2177                      1- 3338     	MOVIA	0x77
                                    1- 3339     	BANKSEL	_maxDuty
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 00rr                      1- 3340     	MOVAR	_maxDuty
                                    1- 3341     	MGOTO	_00267_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
     0060                           1- 3342     _00254_DS_:
                                    1- 3343     	.line	314, "main.c"; 	else if(workStep == 6)
                                    1- 3344     	BANKSEL	_workStep
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1- 3345     	MOVR	_workStep,W
     0062 2406                      1- 3346     	XORIA	0x06
     0063 0903                      1- 3347     	BTRSS	STATUS,2
                                    1- 3348     	MGOTO	_00267_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3349     	.line	315, "main.c"; 	maxDuty = 124;
     0065 217C                      1- 3350     	MOVIA	0x7c
                                    1- 3351     	BANKSEL	_maxDuty
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 00rr                      1- 3352     	MOVAR	_maxDuty
     0068                           1- 3353     _00267_DS_:
                                    1- 3354     	.line	317, "main.c"; 	if(workStep > 0)
                                    1- 3355     	BANKSEL	_workStep
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 01rr                      1- 3356     	MOVR	_workStep,W
     006A 0D03                      1- 3357     	BTRSC	STATUS,2
                                    1- 3358     	MGOTO	_00269_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3359     	.line	319, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 3360     	BANKSEL	_maxDuty
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 01rr                      1- 3361     	MOVR	_maxDuty,W
     006E 00rr                      1- 3362     	SFUN	_PWM2DUTY
                                    1- 3363     	.line	320, "main.c"; 	pwmInit();
                                    1- 3364     	MCALL	_pwmInit
     006F 2rrr                      3-   66 m1      LCALL rom_address
     0070                           1- 3365     _00269_DS_:
                                    1- 3366     	.line	322, "main.c"; 	ledStep = workStep;
                                    1- 3367     	BANKSEL	_workStep
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 01rr                      1- 3368     	MOVR	_workStep,W
                                    1- 3369     	BANKSEL	_ledStep
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 00rr                      1- 3370     	MOVAR	_ledStep
                                    1- 3371     	MGOTO	_00282_DS_
     0074 3rrr                      3-   63 m1      LGOTO rom_address
     0075                           1- 3372     _00280_DS_:
                                    1- 3373     	.line	324, "main.c"; 	else if(kclick == 2)
                                    1- 3374     	BANKSEL	r0x1064
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 01rr                      1- 3375     	MOVR	r0x1064,W
     0077 2402                      1- 3376     	XORIA	0x02
     0078 0903                      1- 3377     	BTRSS	STATUS,2
                                    1- 3378     	MGOTO	_00282_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3379     	.line	326, "main.c"; 	if(workStep > 0)
                                    1- 3380     	BANKSEL	_workStep
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 01rr                      1- 3381     	MOVR	_workStep,W
     007C 0D03                      1- 3382     	BTRSC	STATUS,2
                                    1- 3383     	MGOTO	_00275_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3384     	.line	328, "main.c"; 	powerOff();
                                    1- 3385     	MCALL	_powerOff
     007E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3386     	MGOTO	_00276_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
     0080                           1- 3387     _00275_DS_:
                                    1- 3388     	.line	332, "main.c"; 	if((workStep == 0 && pwStep == 0) || closeFlag)
                                    1- 3389     	BANKSEL	_workStep
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 01rr                      1- 3390     	MOVR	_workStep,W
     0082 0903                      1- 3391     	BTRSS	STATUS,2
                                    1- 3392     	MGOTO	_00273_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3393     	BANKSEL	_pwStep
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 01rr                      1- 3394     	MOVR	_pwStep,W
     0086 0D03                      1- 3395     	BTRSC	STATUS,2
                                    1- 3396     	MGOTO	_00270_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
     0088                           1- 3397     _00273_DS_:
                                    1- 3398     	BANKSEL	_closeFlag
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 01rr                      1- 3399     	MOVR	_closeFlag,W
     008A 0D03                      1- 3400     	BTRSC	STATUS,2
                                    1- 3401     	MGOTO	_00271_DS_
     008B 3rrr                      3-   63 m1      LGOTO rom_address
     008C                           1- 3402     _00270_DS_:
                                    1- 3403     	.line	334, "main.c"; 	checkBatAD();
                                    1- 3404     	MCALL	_checkBatAD
     008C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3405     	.line	335, "main.c"; 	return;
                                    1- 3406     	MGOTO	_00282_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
     008E                           1- 3407     _00271_DS_:
                                    1- 3408     	.line	337, "main.c"; 	ledLightTime = 0;
                                    1- 3409     	BANKSEL	_ledLightTime
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 02rr                      1- 3410     	CLRR	_ledLightTime
                                    1- 3411     	.line	338, "main.c"; 	ledStep = 1;
     0090 2101                      1- 3412     	MOVIA	0x01
                                    1- 3413     	BANKSEL	_ledStep
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 00rr                      1- 3414     	MOVAR	_ledStep
                                    1- 3415     	.line	339, "main.c"; 	workStep = 1;
                                    1- 3416     	BANKSEL	_workStep
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 00rr                      1- 3417     	MOVAR	_workStep
                                    1- 3418     	.line	340, "main.c"; 	PWM2DUTY = 120;
     0095 2178                      1- 3419     	MOVIA	0x78
     0096 00rr                      1- 3420     	SFUN	_PWM2DUTY
                                    1- 3421     	.line	341, "main.c"; 	currentDuty = 120;
                                    1- 3422     	BANKSEL	_currentDuty
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 00rr                      1- 3423     	MOVAR	_currentDuty
                                    1- 3424     	.line	342, "main.c"; 	maxDuty = 99;
     0099 2163                      1- 3425     	MOVIA	0x63
                                    1- 3426     	BANKSEL	_maxDuty
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 00rr                      1- 3427     	MOVAR	_maxDuty
                                    1- 3428     	.line	343, "main.c"; 	pwmInit();
                                    1- 3429     	MCALL	_pwmInit
     009C 2rrr                      3-   66 m1      LCALL rom_address
     009D                           1- 3430     _00276_DS_:
                                    1- 3431     	.line	348, "main.c"; 	ledStep = workStep;
                                    1- 3432     	BANKSEL	_workStep
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 01rr                      1- 3433     	MOVR	_workStep,W
                                    1- 3434     	BANKSEL	_ledStep
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 00rr                      1- 3435     	MOVAR	_ledStep
     00A1                           1- 3436     _00282_DS_:
                                    1- 3437     	.line	350, "main.c"; 	}
                                    1- 3438     	RETURN	
     00A1 0010                      3-   40 m1      ret
                                    1- 3439     ; exit point of _keyCtr
                                    1- 3442     ;	code size estimation:
                                    1- 3443     ;	 1245+  343 =  1588 instructions ( 3862 byte)
                                    1- 3445     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810624
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062e.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
