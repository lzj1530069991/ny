
                    Nyquest Technology Co., Ltd.

NYASM 2.27

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	__divuint
                                    1-   15     	extern	_PORTAbits
                                    1-   16     	extern	_PORTBbits
                                    1-   17     	extern	_PCONbits
                                    1-   18     	extern	_BWUCONbits
                                    1-   19     	extern	_ABPLCONbits
                                    1-   20     	extern	_BPHCONbits
                                    1-   21     	extern	_INTEbits
                                    1-   22     	extern	_INTFbits
                                    1-   23     	extern	_ADMDbits
                                    1-   24     	extern	_ADRbits
                                    1-   25     	extern	_ADVREFHbits
                                    1-   26     	extern	_ADCRbits
                                    1-   27     	extern	_AWUCONbits
                                    1-   28     	extern	_PACONbits
                                    1-   29     	extern	_INTEDGbits
                                    1-   30     	extern	_ANAENbits
                                    1-   31     	extern	_RFCbits
                                    1-   32     	extern	_INTE2bits
                                    1-   33     	extern	_INDF
                                    1-   34     	extern	_TMR0
                                    1-   35     	extern	_PCL
                                    1-   36     	extern	_STATUS
                                    1-   37     	extern	_FSR
                                    1-   38     	extern	_PORTA
                                    1-   39     	extern	_PORTB
                                    1-   40     	extern	_PCON
                                    1-   41     	extern	_BWUCON
                                    1-   42     	extern	_PCHBUF
                                    1-   43     	extern	_ABPLCON
                                    1-   44     	extern	_BPHCON
                                    1-   45     	extern	_INTE
                                    1-   46     	extern	_INTF
                                    1-   47     	extern	_ADMD
                                    1-   48     	extern	_ADR
                                    1-   49     	extern	_ADD
                                    1-   50     	extern	_ADVREFH
                                    1-   51     	extern	_ADCR
                                    1-   52     	extern	_AWUCON
                                    1-   53     	extern	_PACON
                                    1-   54     	extern	_INTEDG
                                    1-   55     	extern	_TMRH
                                    1-   56     	extern	_ANAEN
                                    1-   57     	extern	_RFC
                                    1-   58     	extern	_TM3RH
                                    1-   59     	extern	_INTE2
                                    1-   60     	extern	_TMR1
                                    1-   61     	extern	_T1CR1
                                    1-   62     	extern	_T1CR2
                                    1-   63     	extern	_PWM1DUTY
                                    1-   64     	extern	_PS1CV
                                    1-   65     	extern	_BZ1CR
                                    1-   66     	extern	_IRCR
                                    1-   67     	extern	_TBHP
                                    1-   68     	extern	_TBHD
                                    1-   69     	extern	_TMR2
                                    1-   70     	extern	_T2CR1
                                    1-   71     	extern	_T2CR2
                                    1-   72     	extern	_PWM2DUTY
                                    1-   73     	extern	_PS2CV
                                    1-   74     	extern	_BZ2CR
                                    1-   75     	extern	_OSCCR
                                    1-   76     	extern	_TMR3
                                    1-   77     	extern	_T3CR1
                                    1-   78     	extern	_T3CR2
                                    1-   79     	extern	_PWM3DUTY
                                    1-   80     	extern	_PS3CV
                                    1-   81     	extern	_BZ3CR
                                    1-   82     	extern	_IOSTA
                                    1-   83     	extern	_IOSTB
                                    1-   84     	extern	_APHCON
                                    1-   85     	extern	_PS0CV
                                    1-   86     	extern	_BODCON
                                    1-   87     	extern	_CMPCR
                                    1-   88     	extern	_PCON1
                                    1-   89     	extern	_T0MD
                                    1-   90     	extern	___sdcc_saved_fsr
                                    1-   91     	extern	___sdcc_saved_stk00
                                    1-   92     	extern	___sdcc_saved_stk01
                                    1-   93     	extern	__nyc_ny8_startup
                                    1-   94     ;--------------------------------------------------------
                                    1-   95     ; global declarations
                                    1-   96     ;--------------------------------------------------------
                                    1-   97     	extern	_gotoSleep
                                    1-   98     	extern	_keyCtr
                                    1-   99     	extern	_keyRead
                                    1-  100     	extern	_chrgCtr
                                    1-  101     	extern	_setLed2PWM
                                    1-  102     	extern	_setLed1PWM
                                    1-  103     	extern	_motorPWM
                                    1-  104     	extern	_chrgPWM
                                    1-  105     	extern	_LEDOFF
                                    1-  106     	extern	_LED2ON
                                    1-  107     	extern	_LED1ON
                                    1-  108     	extern	_workCtr
                                    1-  109     	extern	_delay
                                    1-  110     	extern	_F_wait_eoc
                                    1-  111     	extern	_F_AIN2_Convert
                                    1-  112     	extern	_checkBat
                                    1-  113     	extern	_initAD
                                    1-  114     	extern	_isr
                                    1-  115     	extern	_main
                                    1-  116     	extern	_longPressFlag
                                    1-  117     	extern	_IntFlag
                                    1-  118     	extern	_chrgFlag
                                    1-  119     	extern	_doublePressFlag
                                    1-  120     	extern	_intCount
                                    1-  121     	extern	_count1s
                                    1-  122     	extern	_count900s
                                    1-  123     	extern	_keyCount
                                    1-  124     	extern	_sleepDelay
                                    1-  125     	extern	_workStep
                                    1-  126     	extern	_chrgCount
                                    1-  127     	extern	_duty
                                    1-  128     	extern	_led2count
                                    1-  129     	extern	_ledCount
                                    1-  130     	extern	_ledCount2
                                    1-  131     	extern	_duty1
                                    1-  132     	extern	_duty5
                                    1-  133     	extern	_duty7
                                    1-  134     	extern	_ledStep
                                    1-  135     	extern	_timeCountKey
                                    1-  136     	extern	_R_AIN2_DATA
                                    1-  137     	extern	_R_AIN2_DATA_LB
                                    1-  138     	extern	_ADC_work_value
                                    1-  139     	extern	_ADC_num_value
                                    1-  140     	extern	_sleepTime
                                    1-  141     	extern	_stopFlag
                                    1-  142     	extern	_chrgTime
                                    1-  143     	extern	_checkTime
                                    1-  144     	extern	_loadFlag
                                    1-  145     	extern	_resultTime
                                    1-  146     	extern	_motorCount
                                    1-  148     	extern PSAVE
                                    1-  149     	extern SSAVE
                                    1-  150     	extern WSAVE
                                    1-  151     	extern STK02
                                    1-  152     	extern STK01
                                    1-  153     	extern STK00
                                    1-  155     .segment "uninit", 0x20000040
 20000040                           1-  156     PSAVE:
                                    1-  157     	.res 1
 20000041                           1-  158     SSAVE:
                                    1-  159     	.res 1
 20000042                           1-  160     WSAVE:
                                    1-  161     	.res 1
 20000043                           1-  162     STK02:
                                    1-  163     	.res 1
 20000044                           1-  164     STK01:
                                    1-  165     	.res 1
 20000045                           1-  166     STK00:
                                    1-  167     	.res 1
                                    1-  169     ;--------------------------------------------------------
                                    1-  170     ; global definitions
                                    1-  171     ;--------------------------------------------------------
                                    1-  172     ;--------------------------------------------------------
                                    1-  173     ; absolute symbol definitions
                                    1-  174     ;--------------------------------------------------------
                                    1-  175     ;--------------------------------------------------------
                                    1-  176     ; compiler-defined variables
                                    1-  177     ;--------------------------------------------------------
                                    1-  178     .segment "uninit"
     0000                           1-  179     r0x103E:
                                    1-  180     	.res	1
                                    1-  181     .segment "uninit"
     0000                           1-  182     r0x1031:
                                    1-  183     	.res	1
                                    1-  184     .segment "uninit"
     0000                           1-  185     r0x1034:
                                    1-  186     	.res	1
                                    1-  187     .segment "uninit"
     0000                           1-  188     r0x102B:
                                    1-  189     	.res	1
                                    1-  190     .segment "uninit"
     0000                           1-  191     r0x102C:
                                    1-  192     	.res	1
                                    1-  193     .segment "uninit"
     0000                           1-  194     r0x102D:
                                    1-  195     	.res	1
                                    1-  196     .segment "uninit"
     0000                           1-  197     r0x1030:
                                    1-  198     	.res	1
                                    1-  199     .segment "uninit"
     0000                           1-  200     r0x1028:
                                    1-  201     	.res	1
                                    1-  202     .segment "uninit"
     0000                           1-  203     r0x1027:
                                    1-  204     	.res	1
                                    1-  205     .segment "uninit"
     0000                           1-  206     r0x1029:
                                    1-  207     	.res	1
                                    1-  208     .segment "uninit"
     0000                           1-  209     r0x102A:
                                    1-  210     	.res	1
                                    1-  211     .segment "uninit"
     0000                           1-  212     r0x103A:
                                    1-  213     	.res	1
                                    1-  214     .segment "uninit"
     0000                           1-  215     r0x103B:
                                    1-  216     	.res	1
                                    1-  217     .segment "uninit"
     0000                           1-  218     r0x103C:
                                    1-  219     	.res	1
                                    1-  220     .segment "uninit"
     0000                           1-  221     r0x103D:
                                    1-  222     	.res	1
                                    1-  223     .segment "uninit"
     0000                           1-  224     r0x1036:
                                    1-  225     	.res	1
                                    1-  226     .segment "uninit"
     0000                           1-  227     r0x1025:
                                    1-  228     	.res	1
                                    1-  229     .segment "uninit"
     0000                           1-  230     r0x1039:
                                    1-  231     	.res	1
                                    1-  232     .segment "uninit"
     0000                           1-  233     r0x1038:
                                    1-  234     	.res	1
                                    1-  235     .segment "uninit"
     0000                           1-  236     r0x1037:
                                    1-  237     	.res	1
                                    1-  238     .segment "uninit"
     0000                           1-  239     r0x1026:
                                    1-  240     	.res	1
                                    1-  241     ;--------------------------------------------------------
                                    1-  242     ; initialized data
                                    1-  243     ;--------------------------------------------------------
                                    1-  245     .segment "idata"
     0000                           1-  246     _longPressFlag:
     0000 0000                      1-  247     	dw	0x00
                                    1-  251     .segment "idata"
     0000                           1-  252     _IntFlag:
     0000 0000                      1-  253     	dw	0x00
                                    1-  257     .segment "idata"
     0000                           1-  258     _chrgFlag:
     0000 0000                      1-  259     	dw	0x00
                                    1-  263     .segment "idata"
     0000                           1-  264     _doublePressFlag:
     0000 0000                      1-  265     	dw	0x00
                                    1-  269     .segment "idata"
     0000                           1-  270     _intCount:
     0000 0000                      1-  271     	dw	0x00
                                    1-  275     .segment "idata"
     0000                           1-  276     _count1s:
     0000 0000                      1-  277     	dw	0x00
                                    1-  281     .segment "idata"
     0000                           1-  282     _count900s:
     0000 0000 0000                 1-  283     	dw	0x00, 0x00
                                    1-  287     .segment "idata"
     0000                           1-  288     _keyCount:
     0000 0000                      1-  289     	dw	0x00
                                    1-  293     .segment "idata"
     0000                           1-  294     _sleepDelay:
     0000 0000                      1-  295     	dw	0x00
                                    1-  299     .segment "idata"
     0000                           1-  300     _workStep:
     0000 0000                      1-  301     	dw	0x00
                                    1-  305     .segment "idata"
     0000                           1-  306     _chrgCount:
     0000 0000                      1-  307     	dw	0x00
                                    1-  311     .segment "idata"
     0000                           1-  312     _duty:
     0000 0000                      1-  313     	dw	0x00
                                    1-  317     .segment "idata"
     0000                           1-  318     _led2count:
     0000 0000 0000                 1-  319     	dw	0x00, 0x00
                                    1-  323     .segment "idata"
     0000                           1-  324     _ledCount:
     0000 0000                      1-  325     	dw	0x00
                                    1-  329     .segment "idata"
     0000                           1-  330     _ledCount2:
     0000 0000                      1-  331     	dw	0x00
                                    1-  335     .segment "idata"
     0000                           1-  336     _duty1:
     0000 0000                      1-  337     	dw	0x00
                                    1-  341     .segment "idata"
     0000                           1-  342     _duty5:
     0000 0000                      1-  343     	dw	0x00
                                    1-  347     .segment "idata"
     0000                           1-  348     _duty7:
     0000 0000                      1-  349     	dw	0x00
                                    1-  353     .segment "idata"
     0000                           1-  354     _ledStep:
     0000 0000                      1-  355     	dw	0x00
                                    1-  359     .segment "idata"
     0000                           1-  360     _timeCountKey:
     0000 0000 0000                 1-  361     	dw	0x00, 0x00
                                    1-  365     .segment "idata"
     0000                           1-  366     _R_AIN2_DATA:
     0000 0000 0000                 1-  367     	dw	0x00, 0x00
                                    1-  371     .segment "idata"
     0000                           1-  372     _R_AIN2_DATA_LB:
     0000 0000                      1-  373     	dw	0x00
                                    1-  377     .segment "idata"
     0000                           1-  378     _ADC_work_value:
     0000 0000 0000                 1-  379     	dw	0x00, 0x00
                                    1-  383     .segment "idata"
     0000                           1-  384     _ADC_num_value:
     0000 0000 0000                 1-  385     	dw	0x00, 0x00
                                    1-  389     .segment "idata"
     0000                           1-  390     _sleepTime:
     0000 0000                      1-  391     	dw	0x00
                                    1-  395     .segment "idata"
     0000                           1-  396     _stopFlag:
     0000 0000                      1-  397     	dw	0x00
                                    1-  401     .segment "idata"
     0000                           1-  402     _chrgTime:
     0000 0000                      1-  403     	dw	0x00
                                    1-  407     .segment "idata"
     0000                           1-  408     _checkTime:
     0000 0000                      1-  409     	dw	0x00
                                    1-  413     .segment "idata"
     0000                           1-  414     _loadFlag:
     0000 0000                      1-  415     	dw	0x00
                                    1-  419     .segment "idata"
     0000                           1-  420     _resultTime:
     0000 0000                      1-  421     	dw	0x00
                                    1-  425     .segment "idata"
     0000                           1-  426     _motorCount:
     0000 0000                      1-  427     	dw	0x00
                                    1-  430     ;--------------------------------------------------------
                                    1-  431     ; overlayable items in internal ram 
                                    1-  432     ;--------------------------------------------------------
                                    1-  433     ;	udata_ovr
                                    1-  434     ;--------------------------------------------------------
                                    1-  435     ; reset vector 
                                    1-  436     ;--------------------------------------------------------
                                    1-  437     ORG	0x0000
     0000 3rrr                      1-  438     	LGOTO	__nyc_ny8_startup
                                    1-  439     ;--------------------------------------------------------
                                    1-  440     ; interrupt and initialization code
                                    1-  441     ;--------------------------------------------------------
                                    1-  442     ORG 0x0008
     0008 3rrr                      1-  443     	lgoto	__sdcc_interrupt
                                    1-  445     .segment "code"
     0000                           1-  446     __sdcc_interrupt:
                                    1-  447     ;***
                                    1-  448     ;  pBlock Stats: dbName = I
                                    1-  449     ;***
                                    1-  450     ;functions called:
                                    1-  451     ;   _setLed2PWM
                                    1-  452     ;   _setLed1PWM
                                    1-  453     ;   _setLed2PWM
                                    1-  454     ;   _setLed1PWM
                                    1-  455     ;   _setLed2PWM
                                    1-  456     ;   _setLed1PWM
                                    1-  457     ;   _setLed2PWM
                                    1-  458     ;   _setLed1PWM
                                    1-  459     ;3 compiler assigned registers:
                                    1-  460     ;   STK00
                                    1-  461     ;   STK01
                                    1-  462     ;   r0x103E
                                    1-  463     ;; Starting pCode block
     0000                           1-  464     _isr:
                                    1-  465     ; 0 exit points
                                    1-  466     	.line	74, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  467     	MOVAR	WSAVE
     0001 1503                      1-  468     	SWAPR	STATUS,W
     0002 0283                      1-  469     	CLRR	STATUS
     0003 00rr                      1-  470     	MOVAR	SSAVE
     0004 010A                      1-  471     	MOVR	PCHBUF,W
     0005 028A                      1-  472     	CLRR	PCHBUF
     0006 00rr                      1-  473     	MOVAR	PSAVE
     0007 0104                      1-  474     	MOVR	FSR,W
                                    1-  475     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  476     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  477     	MOVR	STK00,W
                                    1-  478     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  479     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  480     	MOVR	STK01,W
                                    1-  481     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  482     	MOVAR	___sdcc_saved_stk01
                                    1-  483     	.line	76, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  484     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  485     	LGOTO	_00119_DS_
                                    1-  486     	.line	78, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  487     	MOVIA	0x37
     0013 03rr                      1-  488     	ADDAR	_TMR0,F
                                    1-  489     	.line	79, "main.c"; 	intCount++;
                                    1-  490     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  491     	INCR	_intCount,F
                                    1-  492     	.line	81, "main.c"; 	if(++intCount >= 100)
     0016 05rr                      1-  493     	INCR	_intCount,F
                                    1-  494     ;;unsigned compare: left < lit (0x64=100), size=1
     0017 2164                      1-  495     	MOVIA	0x64
     0018 04rr                      1-  496     	SUBAR	_intCount,W
     0019 0803                      1-  497     	BTRSS	STATUS,0
     001A 3rrr                      1-  498     	LGOTO	_00111_DS_
                                    1-  499     	.line	83, "main.c"; 	intCount = 0;
     001B 02rr                      1-  500     	CLRR	_intCount
                                    1-  501     	.line	84, "main.c"; 	IntFlag = 1;
     001C 2101                      1-  502     	MOVIA	0x01
                                    1-  503     	BANKSEL	_IntFlag
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1-  504     	MOVAR	_IntFlag
                                    1-  505     	.line	85, "main.c"; 	if(++count1s >= 100)
                                    1-  506     	BANKSEL	_count1s
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 05rr                      1-  507     	INCR	_count1s,F
                                    1-  508     ;;unsigned compare: left < lit (0x64=100), size=1
     0021 2164                      1-  509     	MOVIA	0x64
     0022 04rr                      1-  510     	SUBAR	_count1s,W
     0023 0803                      1-  511     	BTRSS	STATUS,0
     0024 3rrr                      1-  512     	LGOTO	_00111_DS_
                                    1-  513     	.line	87, "main.c"; 	count1s = 0;
     0025 02rr                      1-  514     	CLRR	_count1s
                                    1-  515     	.line	88, "main.c"; 	if(workStep)
                                    1-  516     	BANKSEL	_workStep
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  517     	MOVR	_workStep,W
     0028 0D03                      1-  518     	BTRSC	STATUS,2
     0029 3rrr                      1-  519     	LGOTO	_00106_DS_
                                    1-  520     	.line	90, "main.c"; 	++count900s;
                                    1-  521     	BANKSEL	_count900s
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 05rr                      1-  522     	INCR	_count900s,F
     002C 0D03                      1-  523     	BTRSC	STATUS,2
     002D 05rr                      1-  524     	INCR	(_count900s + 1),F
     002E 3rrr                      1-  525     	LGOTO	_00111_DS_
     002F                           1-  526     _00106_DS_:
                                    1-  527     	.line	94, "main.c"; 	count900s = 0;
                                    1-  528     	BANKSEL	_count900s
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 02rr                      1-  529     	CLRR	_count900s
     0031 02rr                      1-  530     	CLRR	(_count900s + 1)
     0032                           1-  531     _00111_DS_:
                                    1-  532     	.line	98, "main.c"; 	if(ledStep == 2)
                                    1-  533     	BANKSEL	_ledStep
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 01rr                      1-  534     	MOVR	_ledStep,W
     0034 2402                      1-  535     	XORIA	0x02
     0035 0903                      1-  536     	BTRSS	STATUS,2
     0036 3rrr                      1-  537     	LGOTO	_00116_DS_
                                    1-  538     	.line	101, "main.c"; 	setLed2PWM();
     0037 2rrr                      1-  539     	LCALL	_setLed2PWM
                                    1-  540     	.line	102, "main.c"; 	setLed1PWM();
     0038 2rrr                      1-  541     	LCALL	_setLed1PWM
     0039 3rrr                      1-  542     	LGOTO	_00119_DS_
     003A                           1-  543     _00116_DS_:
                                    1-  544     	.line	105, "main.c"; 	else if(ledStep == 1)
                                    1-  545     	BANKSEL	_ledStep
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 01rr                      1-  546     	MOVR	_ledStep,W
     003C 2401                      1-  547     	XORIA	0x01
     003D 0903                      1-  548     	BTRSS	STATUS,2
     003E 3rrr                      1-  549     	LGOTO	_00113_DS_
                                    1-  550     	.line	108, "main.c"; 	setLed2PWM();
     003F 2rrr                      1-  551     	LCALL	_setLed2PWM
                                    1-  552     	.line	109, "main.c"; 	setLed1PWM();
     0040 2rrr                      1-  553     	LCALL	_setLed1PWM
     0041 3rrr                      1-  554     	LGOTO	_00119_DS_
     0042                           1-  555     _00113_DS_:
                                    1-  556     	.line	113, "main.c"; 	PORTA &= 0xEA;
     0042 21EA                      1-  557     	MOVIA	0xea
     0043 10rr                      1-  558     	ANDAR	_PORTA,F
                                    1-  559     	.line	114, "main.c"; 	IOSTA |= 0x01;
     0044 001r                      1-  560     	IOSTR	_IOSTA
                                    1-  561     	BANKSEL	r0x103E
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 00rr                      1-  562     	MOVAR	r0x103E
     0047 18rr                      1-  563     	BSR	r0x103E,0
     0048 01rr                      1-  564     	MOVR	r0x103E,W
     0049 000r                      1-  565     	IOST	_IOSTA
     004A                           1-  566     _00119_DS_:
                                    1-  567     	.line	117, "main.c"; 	if(INTFbits.PABIF)
     004A 08rr                      1-  568     	BTRSS	_INTFbits,1
     004B 3rrr                      1-  569     	LGOTO	_00121_DS_
                                    1-  570     	.line	119, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     004C 21FD                      1-  571     	MOVIA	0xfd
     004D 00rr                      1-  572     	MOVAR	_INTF
     004E                           1-  573     _00121_DS_:
                                    1-  574     	.line	122, "main.c"; 	INTF = 0;
     004E 02rr                      1-  575     	CLRR	_INTF
                                    1-  576     	.line	123, "main.c"; 	}
                                    1-  577     	BANKSEL	___sdcc_saved_stk01
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 01rr                      1-  578     	MOVR	___sdcc_saved_stk01,W
     0051 00rr                      1-  579     	MOVAR	STK01
                                    1-  580     	BANKSEL	___sdcc_saved_stk00
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 01rr                      1-  581     	MOVR	___sdcc_saved_stk00,W
     0054 00rr                      1-  582     	MOVAR	STK00
                                    1-  583     	BANKSEL	___sdcc_saved_fsr
     0055 rrrr                      3-   71 m1      .banksel ram_address
     0056 01rr                      1-  584     	MOVR	___sdcc_saved_fsr,W
     0057 0084                      1-  585     	MOVAR	FSR
     0058 01rr                      1-  586     	MOVR	PSAVE,W
     0059 008A                      1-  587     	MOVAR	PCHBUF
     005A 0283                      1-  588     	CLRR	STATUS
     005B 15rr                      1-  589     	SWAPR	SSAVE,W
     005C 0083                      1-  590     	MOVAR	STATUS
     005D 15rr                      1-  591     	SWAPR	WSAVE,F
     005E 15rr                      1-  592     	SWAPR	WSAVE,W
     005F                           1-  593     END_OF_INTERRUPT:
     005F 0011                      1-  594     	RETIE	
                                    1-  596     ;--------------------------------------------------------
                                    1-  597     ; code
                                    1-  598     ;--------------------------------------------------------
                                    1-  599     ;***
                                    1-  600     ;  pBlock Stats: dbName = M
                                    1-  601     ;***
                                    1-  602     ;has an exit
                                    1-  603     ;functions called:
                                    1-  604     ;   _initAD
                                    1-  605     ;   _chrgPWM
                                    1-  606     ;   _chrgCtr
                                    1-  607     ;   _keyCtr
                                    1-  608     ;   _workCtr
                                    1-  609     ;   _initAD
                                    1-  610     ;   _chrgPWM
                                    1-  611     ;   _chrgCtr
                                    1-  612     ;   _keyCtr
                                    1-  613     ;   _workCtr
                                    1-  614     ;; Starting pCode block
                                    1-  615     .segment "code"; module=main, function=_main
     0000                           1-  617     _main:
                                    1-  618     ; 2 exit points
                                    1-  619     	.line	128, "main.c"; 	DISI();
     0000 0013                      1-  620     	DISI
                                    1-  621     	.line	129, "main.c"; 	IOSTA = C_PA5_Input | C_PA2_Input;
     0001 2124                      1-  622     	MOVIA	0x24
     0002 000r                      1-  623     	IOST	_IOSTA
                                    1-  624     	.line	130, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1-  625     	CLRA	
     0004 000r                      1-  626     	IOST	_IOSTB
                                    1-  627     	.line	131, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1-  628     	CLRR	_PORTB
                                    1-  629     	.line	132, "main.c"; 	PORTA = 0x00;
     0006 02rr                      1-  630     	CLRR	_PORTA
                                    1-  631     	.line	133, "main.c"; 	APHCON = 0xDF;
     0007 21DF                      1-  632     	MOVIA	0xdf
     0008 000r                      1-  633     	IOST	_APHCON
                                    1-  634     	.line	134, "main.c"; 	ABPLCON = 0xFF;
     0009 21FF                      1-  635     	MOVIA	0xff
     000A 00rr                      1-  636     	MOVAR	_ABPLCON
                                    1-  637     	.line	136, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000B 2101                      1-  638     	MOVIA	0x01
     000C 00rr                      1-  639     	MOVAR	_INTE
                                    1-  640     	.line	138, "main.c"; 	PCON1 = C_TMR0_Dis;
     000D 0200                      1-  641     	CLRA	
     000E 000r                      1-  642     	IOST	_PCON1
                                    1-  643     	.line	140, "main.c"; 	TMR0 = 55;
     000F 2137                      1-  644     	MOVIA	0x37
     0010 00rr                      1-  645     	MOVAR	_TMR0
                                    1-  646     	.line	141, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0011 2101                      1-  647     	MOVIA	0x01
     0012 0003                      1-  648     	T0MD	
                                    1-  649     	.line	143, "main.c"; 	PCON1 = C_TMR0_En;
     0013 000r                      1-  650     	IOST	_PCON1
                                    1-  651     	.line	145, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR,PA5关闭上拉
     0014 2198                      1-  652     	MOVIA	0x98
     0015 00rr                      1-  653     	MOVAR	_PCON
                                    1-  654     	.line	147, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0016 2101                      1-  655     	MOVIA	0x01
     0017 000r                      1-  656     	IOST	_PCON1
                                    1-  657     	.line	148, "main.c"; 	ENI();
     0018 0004                      1-  658     	ENI
                                    1-  659     	.line	149, "main.c"; 	initAD();						// PA3 & PA2 output high
     0019 2rrr                      1-  660     	LCALL	_initAD
     001A                           1-  661     _00136_DS_:
                                    1-  662     	.line	153, "main.c"; 	if(chrgFlag)
                                    1-  663     	BANKSEL	_chrgFlag
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 01rr                      1-  664     	MOVR	_chrgFlag,W
     001C 0D03                      1-  665     	BTRSC	STATUS,2
     001D 3rrr                      1-  666     	LGOTO	_00127_DS_
                                    1-  667     	.line	155, "main.c"; 	chrgPWM();
     001E 2rrr                      1-  668     	LCALL	_chrgPWM
                                    1-  669     	.line	157, "main.c"; 	workStep == 0;
     001F 3rrr                      1-  670     	LGOTO	_00128_DS_
     0020                           1-  671     _00127_DS_:
                                    1-  672     	.line	161, "main.c"; 	PORTB &= 0xF7;
     0020 1Drr                      1-  673     	BCR	_PORTB,3
     0021                           1-  674     _00128_DS_:
                                    1-  675     	.line	166, "main.c"; 	if(workStep == 1 && stopFlag == 0)
                                    1-  676     	BANKSEL	_workStep
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1-  677     	MOVR	_workStep,W
     0023 2401                      1-  678     	XORIA	0x01
     0024 0903                      1-  679     	BTRSS	STATUS,2
     0025 3rrr                      1-  680     	LGOTO	_00130_DS_
                                    1-  681     	BANKSEL	_stopFlag
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1-  682     	MOVR	_stopFlag,W
     0028 0903                      1-  683     	BTRSS	STATUS,2
     0029 3rrr                      1-  684     	LGOTO	_00130_DS_
                                    1-  685     	.line	168, "main.c"; 	PORTA |= 0x80;
     002A 1Brr                      1-  686     	BSR	_PORTA,7
     002B 3rrr                      1-  687     	LGOTO	_00131_DS_
     002C                           1-  688     _00130_DS_:
                                    1-  689     	.line	172, "main.c"; 	PORTA &= 0x7F;
     002C 1Frr                      1-  690     	BCR	_PORTA,7
     002D                           1-  691     _00131_DS_:
                                    1-  692     	.line	175, "main.c"; 	CLRWDT();
     002D 0002                      1-  693     	clrwdt
                                    1-  694     	.line	176, "main.c"; 	if(!IntFlag)
                                    1-  695     	BANKSEL	_IntFlag
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 01rr                      1-  696     	MOVR	_IntFlag,W
     0030 0D03                      1-  697     	BTRSC	STATUS,2
     0031 3rrr                      1-  698     	LGOTO	_00136_DS_
                                    1-  699     	.line	178, "main.c"; 	IntFlag = 0; 
     0032 02rr                      1-  700     	CLRR	_IntFlag
                                    1-  701     	.line	179, "main.c"; 	chrgCtr();
     0033 2rrr                      1-  702     	LCALL	_chrgCtr
                                    1-  703     	.line	180, "main.c"; 	keyCtr();
     0034 2rrr                      1-  704     	LCALL	_keyCtr
                                    1-  705     	.line	181, "main.c"; 	workCtr();
     0035 2rrr                      1-  706     	LCALL	_workCtr
     0036 3rrr                      1-  707     	LGOTO	_00136_DS_
                                    1-  708     	.line	183, "main.c"; 	}
                                    1-  709     	RETURN	
     0037 0010                      3-   26 m1      ret
                                    1-  710     ; exit point of _main
                                    1-  712     ;***
                                    1-  713     ;  pBlock Stats: dbName = C
                                    1-  714     ;***
                                    1-  715     ;has an exit
                                    1-  716     ;functions called:
                                    1-  717     ;   _LEDOFF
                                    1-  718     ;   _LEDOFF
                                    1-  719     ;1 compiler assigned register :
                                    1-  720     ;   r0x1026
                                    1-  721     ;; Starting pCode block
                                    1-  722     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  724     _gotoSleep:
                                    1-  725     ; 2 exit points
                                    1-  726     	.line	586, "main.c"; 	LEDOFF();
     0000 2rrr                      1-  727     	LCALL	_LEDOFF
                                    1-  728     	.line	587, "main.c"; 	duty1 = 0;
                                    1-  729     	BANKSEL	_duty1
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 02rr                      1-  730     	CLRR	_duty1
                                    1-  731     	.line	588, "main.c"; 	led2count = 0;
                                    1-  732     	BANKSEL	_led2count
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 02rr                      1-  733     	CLRR	_led2count
     0005 02rr                      1-  734     	CLRR	(_led2count + 1)
                                    1-  735     	.line	589, "main.c"; 	ADC_work_value = 0;
                                    1-  736     	BANKSEL	_ADC_work_value
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1-  737     	CLRR	_ADC_work_value
     0008 02rr                      1-  738     	CLRR	(_ADC_work_value + 1)
                                    1-  739     	.line	590, "main.c"; 	ADC_num_value = 0;
                                    1-  740     	BANKSEL	_ADC_num_value
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 02rr                      1-  741     	CLRR	_ADC_num_value
     000B 02rr                      1-  742     	CLRR	(_ADC_num_value + 1)
                                    1-  743     	.line	591, "main.c"; 	stopFlag = 0;
                                    1-  744     	BANKSEL	_stopFlag
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 02rr                      1-  745     	CLRR	_stopFlag
                                    1-  746     	.line	592, "main.c"; 	sleepTime = 0;
                                    1-  747     	BANKSEL	_sleepTime
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 02rr                      1-  748     	CLRR	_sleepTime
                                    1-  749     	.line	593, "main.c"; 	workStep = 0;
                                    1-  750     	BANKSEL	_workStep
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 02rr                      1-  751     	CLRR	_workStep
                                    1-  752     	.line	594, "main.c"; 	count900s = 0;
                                    1-  753     	BANKSEL	_count900s
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 02rr                      1-  754     	CLRR	_count900s
     0014 02rr                      1-  755     	CLRR	(_count900s + 1)
                                    1-  756     	.line	595, "main.c"; 	PORTA &= 0X6F;
     0015 216F                      1-  757     	MOVIA	0x6f
     0016 10rr                      1-  758     	ANDAR	_PORTA,F
                                    1-  759     	.line	596, "main.c"; 	IOSTA |= 0x05;
     0017 001r                      1-  760     	IOSTR	_IOSTA
                                    1-  761     	BANKSEL	r0x1026
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 00rr                      1-  762     	MOVAR	r0x1026
     001A 2105                      1-  763     	MOVIA	0x05
     001B 11rr                      1-  764     	IORAR	r0x1026,F
     001C 01rr                      1-  765     	MOVR	r0x1026,W
     001D 000r                      1-  766     	IOST	_IOSTA
                                    1-  767     	.line	597, "main.c"; 	AWUCON = 0x21;
     001E 2121                      1-  768     	MOVIA	0x21
     001F 00rr                      1-  769     	MOVAR	_AWUCON
                                    1-  770     	.line	598, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0020 210B                      1-  771     	MOVIA	0x0b
     0021 00rr                      1-  772     	MOVAR	_INTE
                                    1-  773     	.line	599, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0022 2118                      1-  774     	MOVIA	0x18
     0023 00rr                      1-  775     	MOVAR	_PCON
                                    1-  776     	.line	600, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0024 02rr                      1-  777     	CLRR	_INTF
                                    1-  778     	.line	601, "main.c"; 	CLRWDT();
     0025 0002                      1-  779     	clrwdt
                                    1-  780     	.line	602, "main.c"; 	SLEEP();
     0026 0001                      1-  781     	sleep
                                    1-  782     	.line	603, "main.c"; 	AWUCON = 0x00;
     0027 02rr                      1-  783     	CLRR	_AWUCON
                                    1-  784     	.line	604, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0028 2101                      1-  785     	MOVIA	0x01
     0029 00rr                      1-  786     	MOVAR	_INTE
                                    1-  787     	.line	605, "main.c"; 	INTF = 0;
     002A 02rr                      1-  788     	CLRR	_INTF
                                    1-  789     	.line	607, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     002B 21B8                      1-  790     	MOVIA	0xb8
     002C 00rr                      1-  791     	MOVAR	_PCON
                                    1-  792     	.line	609, "main.c"; 	}
                                    1-  793     	RETURN	
     002D 0010                      3-   26 m1      ret
                                    1-  794     ; exit point of _gotoSleep
                                    1-  796     ;***
                                    1-  797     ;  pBlock Stats: dbName = C
                                    1-  798     ;***
                                    1-  799     ;has an exit
                                    1-  800     ;functions called:
                                    1-  801     ;   _keyRead
                                    1-  802     ;   _LEDOFF
                                    1-  803     ;   _checkBat
                                    1-  804     ;   _keyRead
                                    1-  805     ;   _LEDOFF
                                    1-  806     ;   _checkBat
                                    1-  807     ;1 compiler assigned register :
                                    1-  808     ;   r0x1035
                                    1-  809     ;; Starting pCode block
                                    1-  810     .segment "code"; module=main, function=_keyCtr
                                    1-  812     ;local variable name mapping:
     0000                           1-  814     _keyCtr:
                                    1-  815     ; 2 exit points
                                    1-  816     	.line	535, "main.c"; 	char kclick = keyRead();
     0000 2rrr                      1-  817     	LCALL	_keyRead
                                    1-  818     ;;1	MOVAR	r0x1035
                                    1-  819     	.line	536, "main.c"; 	if(kclick == 1)
     0001 2401                      1-  820     	XORIA	0x01
     0002 0903                      1-  821     	BTRSS	STATUS,2
     0003 3rrr                      1-  822     	LGOTO	_00474_DS_
                                    1-  823     	.line	542, "main.c"; 	if(doublePressFlag == 1)
                                    1-  824     	BANKSEL	_doublePressFlag
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1-  825     	MOVR	_doublePressFlag,W
     0006 2401                      1-  826     	XORIA	0x01
     0007 0903                      1-  827     	BTRSS	STATUS,2
     0008 3rrr                      1-  828     	LGOTO	_00471_DS_
                                    1-  829     	.line	544, "main.c"; 	workStep = 1;
     0009 2101                      1-  830     	MOVIA	0x01
                                    1-  831     	BANKSEL	_workStep
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1-  832     	MOVAR	_workStep
                                    1-  833     	.line	545, "main.c"; 	duty1 = 20;
     000C 2114                      1-  834     	MOVIA	0x14
                                    1-  835     	BANKSEL	_duty1
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1-  836     	MOVAR	_duty1
                                    1-  837     	.line	546, "main.c"; 	doublePressFlag = 0;
                                    1-  838     	BANKSEL	_doublePressFlag
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 02rr                      1-  839     	CLRR	_doublePressFlag
                                    1-  840     	.line	547, "main.c"; 	stopFlag = 0;
                                    1-  841     	BANKSEL	_stopFlag
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 02rr                      1-  842     	CLRR	_stopFlag
                                    1-  843     	.line	548, "main.c"; 	LEDOFF();
     0013 2rrr                      1-  844     	LCALL	_LEDOFF
                                    1-  845     	.line	549, "main.c"; 	checkBat();
     0014 2rrr                      1-  846     	LCALL	_checkBat
                                    1-  847     	.line	550, "main.c"; 	ADC_num_value = R_AIN2_DATA;//未工作时候的电压
                                    1-  848     	BANKSEL	_R_AIN2_DATA
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1-  849     	MOVR	_R_AIN2_DATA,W
                                    1-  850     	BANKSEL	_ADC_num_value
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1-  851     	MOVAR	_ADC_num_value
                                    1-  852     	BANKSEL	_R_AIN2_DATA
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1-  853     	MOVR	(_R_AIN2_DATA + 1),W
                                    1-  854     	BANKSEL	_ADC_num_value
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1-  855     	MOVAR	(_ADC_num_value + 1)
                                    1-  856     	.line	551, "main.c"; 	checkTime = 250;
     001D 21FA                      1-  857     	MOVIA	0xfa
                                    1-  858     	BANKSEL	_checkTime
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1-  859     	MOVAR	_checkTime
     0020 3rrr                      1-  860     	LGOTO	_00472_DS_
     0021                           1-  861     _00471_DS_:
                                    1-  862     	.line	556, "main.c"; 	if(workStep)
                                    1-  863     	BANKSEL	_workStep
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1-  864     	MOVR	_workStep,W
     0023 0D03                      1-  865     	BTRSC	STATUS,2
     0024 3rrr                      1-  866     	LGOTO	_00468_DS_
                                    1-  867     	.line	558, "main.c"; 	workStep = 0;//停止工作
     0025 02rr                      1-  868     	CLRR	_workStep
                                    1-  869     	.line	559, "main.c"; 	doublePressFlag = 0;
                                    1-  870     	BANKSEL	_doublePressFlag
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 02rr                      1-  871     	CLRR	_doublePressFlag
     0028 3rrr                      1-  872     	LGOTO	_00472_DS_
     0029                           1-  873     _00468_DS_:
                                    1-  874     	.line	563, "main.c"; 	doublePressFlag = 1;
     0029 2101                      1-  875     	MOVIA	0x01
                                    1-  876     	BANKSEL	_doublePressFlag
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 00rr                      1-  877     	MOVAR	_doublePressFlag
     002C                           1-  878     _00472_DS_:
                                    1-  879     	.line	567, "main.c"; 	count1s = 0;
                                    1-  880     	BANKSEL	_count1s
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 02rr                      1-  881     	CLRR	_count1s
                                    1-  882     	.line	568, "main.c"; 	count900s = 0;
                                    1-  883     	BANKSEL	_count900s
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 02rr                      1-  884     	CLRR	_count900s
     0030 02rr                      1-  885     	CLRR	(_count900s + 1)
                                    1-  886     	.line	569, "main.c"; 	timeCountKey = 0;
                                    1-  887     	BANKSEL	_timeCountKey
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 02rr                      1-  888     	CLRR	_timeCountKey
     0033 02rr                      1-  889     	CLRR	(_timeCountKey + 1)
     0034                           1-  890     _00474_DS_:
                                    1-  891     	.line	574, "main.c"; 	if(keyCount == 0 && doublePressFlag && (++timeCountKey > 50))
                                    1-  892     	BANKSEL	_keyCount
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 01rr                      1-  893     	MOVR	_keyCount,W
     0036 0903                      1-  894     	BTRSS	STATUS,2
     0037 3rrr                      1-  895     	LGOTO	_00479_DS_
                                    1-  896     	BANKSEL	_doublePressFlag
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 01rr                      1-  897     	MOVR	_doublePressFlag,W
     003A 0D03                      1-  898     	BTRSC	STATUS,2
     003B 3rrr                      1-  899     	LGOTO	_00479_DS_
                                    1-  900     	BANKSEL	_timeCountKey
     003C rrrr                      3-   71 m1      .banksel ram_address
     003D 05rr                      1-  901     	INCR	_timeCountKey,F
     003E 0D03                      1-  902     	BTRSC	STATUS,2
     003F 05rr                      1-  903     	INCR	(_timeCountKey + 1),F
                                    1-  904     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  905     ;;unsigned compare: left >= lit (0x33=51), size=2
     0040 2100                      1-  906     	MOVIA	0x00
     0041 04rr                      1-  907     	SUBAR	(_timeCountKey + 1),W
     0042 0903                      1-  908     	BTRSS	STATUS,2
     0043 3rrr                      1-  909     	LGOTO	_00499_DS_
     0044 2133                      1-  910     	MOVIA	0x33
     0045 04rr                      1-  911     	SUBAR	_timeCountKey,W
     0046                           1-  912     _00499_DS_:
     0046 0803                      1-  913     	BTRSS	STATUS,0
     0047 3rrr                      1-  914     	LGOTO	_00479_DS_
                                    1-  915     	.line	576, "main.c"; 	doublePressFlag = 0;   	//1秒内未双击，重新计数
                                    1-  916     	BANKSEL	_doublePressFlag
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 02rr                      1-  917     	CLRR	_doublePressFlag
                                    1-  918     	.line	577, "main.c"; 	timeCountKey = 0;
                                    1-  919     	BANKSEL	_timeCountKey
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 02rr                      1-  920     	CLRR	_timeCountKey
     004C 02rr                      1-  921     	CLRR	(_timeCountKey + 1)
     004D                           1-  922     _00479_DS_:
                                    1-  923     	.line	580, "main.c"; 	}
                                    1-  924     	RETURN	
     004D 0010                      3-   26 m1      ret
                                    1-  925     ; exit point of _keyCtr
                                    1-  927     ;***
                                    1-  928     ;  pBlock Stats: dbName = C
                                    1-  929     ;***
                                    1-  930     ;has an exit
                                    1-  931     ;; Starting pCode block
                                    1-  932     .segment "code"; module=main, function=_keyRead
     0000                           1-  934     _keyRead:
                                    1-  935     ; 2 exit points
                                    1-  936     	.line	514, "main.c"; 	if (PORTA & 0x20)
     0000 0Arr                      1-  937     	BTRSS	_PORTA,5
     0001 3rrr                      1-  938     	LGOTO	_00460_DS_
                                    1-  939     	.line	516, "main.c"; 	if(++keyCount >= 200)
                                    1-  940     	BANKSEL	_keyCount
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 05rr                      1-  941     	INCR	_keyCount,F
                                    1-  942     ;;unsigned compare: left < lit (0xC8=200), size=1
     0004 21C8                      1-  943     	MOVIA	0xc8
     0005 04rr                      1-  944     	SUBAR	_keyCount,W
     0006 0803                      1-  945     	BTRSS	STATUS,0
     0007 3rrr                      1-  946     	LGOTO	_00461_DS_
                                    1-  947     	.line	518, "main.c"; 	keyCount = 200;
     0008 21C8                      1-  948     	MOVIA	0xc8
     0009 00rr                      1-  949     	MOVAR	_keyCount
     000A 3rrr                      1-  950     	LGOTO	_00461_DS_
                                    1-  951     ;;unsigned compare: left < lit (0x8=8), size=1
     000B                           1-  952     _00460_DS_:
                                    1-  953     	.line	523, "main.c"; 	if(keyCount >= 8)
     000B 2108                      1-  954     	MOVIA	0x08
                                    1-  955     	BANKSEL	_keyCount
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 04rr                      1-  956     	SUBAR	_keyCount,W
     000E 0803                      1-  957     	BTRSS	STATUS,0
     000F 3rrr                      1-  958     	LGOTO	_00458_DS_
                                    1-  959     	.line	525, "main.c"; 	keyCount = 0;
     0010 02rr                      1-  960     	CLRR	_keyCount
                                    1-  961     	.line	526, "main.c"; 	return 	1;
     0011 2101                      1-  962     	MOVIA	0x01
     0012 3rrr                      1-  963     	LGOTO	_00462_DS_
     0013                           1-  964     _00458_DS_:
                                    1-  965     	.line	528, "main.c"; 	keyCount = 0;
                                    1-  966     	BANKSEL	_keyCount
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 02rr                      1-  967     	CLRR	_keyCount
     0015                           1-  968     _00461_DS_:
                                    1-  969     	.line	530, "main.c"; 	return 0;
     0015 2100                      1-  970     	MOVIA	0x00
     0016                           1-  971     _00462_DS_:
                                    1-  972     	.line	531, "main.c"; 	}
                                    1-  973     	RETURN	
     0016 0010                      3-   26 m1      ret
                                    1-  974     ; exit point of _keyRead
                                    1-  976     ;***
                                    1-  977     ;  pBlock Stats: dbName = C
                                    1-  978     ;***
                                    1-  979     ;functions called:
                                    1-  980     ;   _delay
                                    1-  981     ;   _checkBat
                                    1-  982     ;   _LED1ON
                                    1-  983     ;   _LED2ON
                                    1-  984     ;   _LEDOFF
                                    1-  985     ;   _delay
                                    1-  986     ;   _checkBat
                                    1-  987     ;   _LED1ON
                                    1-  988     ;   _LED2ON
                                    1-  989     ;   _LEDOFF
                                    1-  990     ;2 compiler assigned registers:
                                    1-  991     ;   r0x1037
                                    1-  992     ;   STK00
                                    1-  993     ;; Starting pCode block
                                    1-  994     .segment "code"; module=main, function=_chrgCtr
     0000                           1-  996     _chrgCtr:
                                    1-  997     ; 0 exit points
                                    1-  998     	.line	470, "main.c"; 	if(ledCount > duty7 || ledStep == 0)
                                    1-  999     	BANKSEL	_ledCount
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1000     	MOVR	_ledCount,W
                                    1- 1001     	BANKSEL	_duty7
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 04rr                      1- 1002     	SUBAR	_duty7,W
     0004 0803                      1- 1003     	BTRSS	STATUS,0
     0005 3rrr                      1- 1004     	LGOTO	_00416_DS_
                                    1- 1005     	BANKSEL	_ledStep
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 01rr                      1- 1006     	MOVR	_ledStep,W
     0008 0903                      1- 1007     	BTRSS	STATUS,2
     0009 3rrr                      1- 1008     	LGOTO	_00419_DS_
     000A                           1- 1009     _00416_DS_:
                                    1- 1010     	.line	472, "main.c"; 	IOSTA |= 0x01;
     000A 001r                      1- 1011     	IOSTR	_IOSTA
                                    1- 1012     	BANKSEL	r0x1037
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1- 1013     	MOVAR	r0x1037
     000D 18rr                      1- 1014     	BSR	r0x1037,0
     000E 01rr                      1- 1015     	MOVR	r0x1037,W
     000F 000r                      1- 1016     	IOST	_IOSTA
                                    1- 1017     	.line	473, "main.c"; 	PORTA &= 0xFE;
     0010 1Crr                      1- 1018     	BCR	_PORTA,0
                                    1- 1019     	.line	474, "main.c"; 	delay(10);
     0011 210A                      1- 1020     	MOVIA	0x0a
     0012 00rr                      1- 1021     	MOVAR	STK00
     0013 2100                      1- 1022     	MOVIA	0x00
     0014 2rrr                      1- 1023     	LCALL	_delay
                                    1- 1024     	.line	475, "main.c"; 	if(PORTA & 0x01)
     0015 08rr                      1- 1025     	BTRSS	_PORTA,0
     0016 3rrr                      1- 1026     	LGOTO	_00414_DS_
                                    1- 1027     	.line	478, "main.c"; 	if(++chrgTime > 100)
                                    1- 1028     	BANKSEL	_chrgTime
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 05rr                      1- 1029     	INCR	_chrgTime,F
                                    1- 1030     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1031     ;;unsigned compare: left >= lit (0x65=101), size=1
     0019 2165                      1- 1032     	MOVIA	0x65
     001A 04rr                      1- 1033     	SUBAR	_chrgTime,W
     001B 0803                      1- 1034     	BTRSS	STATUS,0
     001C 3rrr                      1- 1035     	LGOTO	_00399_DS_
                                    1- 1036     	.line	479, "main.c"; 	chrgFlag = 1;
     001D 2101                      1- 1037     	MOVIA	0x01
                                    1- 1038     	BANKSEL	_chrgFlag
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1- 1039     	MOVAR	_chrgFlag
     0020                           1- 1040     _00399_DS_:
                                    1- 1041     	.line	481, "main.c"; 	checkBat();
     0020 2rrr                      1- 1042     	LCALL	_checkBat
                                    1- 1043     	.line	482, "main.c"; 	ADC_num_value = R_AIN2_DATA;
                                    1- 1044     	BANKSEL	_R_AIN2_DATA
     0021 rrrr                      3-   71 m1      .banksel ram_address
     0022 01rr                      1- 1045     	MOVR	_R_AIN2_DATA,W
                                    1- 1046     	BANKSEL	_ADC_num_value
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 00rr                      1- 1047     	MOVAR	_ADC_num_value
                                    1- 1048     	BANKSEL	_R_AIN2_DATA
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 01rr                      1- 1049     	MOVR	(_R_AIN2_DATA + 1),W
                                    1- 1050     	BANKSEL	_ADC_num_value
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 00rr                      1- 1051     	MOVAR	(_ADC_num_value + 1)
                                    1- 1052     ;;unsigned compare: left < lit (0xB36=2870), size=2
                                    1- 1053     	.line	483, "main.c"; 	if(ADC_num_value < 2870)
     0029 210B                      1- 1054     	MOVIA	0x0b
     002A 04rr                      1- 1055     	SUBAR	(_ADC_num_value + 1),W
     002B 0903                      1- 1056     	BTRSS	STATUS,2
     002C 3rrr                      1- 1057     	LGOTO	_00447_DS_
     002D 2136                      1- 1058     	MOVIA	0x36
     002E 04rr                      1- 1059     	SUBAR	_ADC_num_value,W
     002F                           1- 1060     _00447_DS_:
     002F 0C03                      1- 1061     	BTRSC	STATUS,0
     0030 3rrr                      1- 1062     	LGOTO	_00403_DS_
                                    1- 1063     	.line	484, "main.c"; 	LED1ON();
     0031 2rrr                      1- 1064     	LCALL	_LED1ON
     0032 3rrr                      1- 1065     	LGOTO	_00404_DS_
                                    1- 1066     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1067     ;;unsigned compare: left >= lit (0xB41=2881), size=2
     0033                           1- 1068     _00403_DS_:
                                    1- 1069     	.line	485, "main.c"; 	else if(ADC_num_value > 2880)
     0033 210B                      1- 1070     	MOVIA	0x0b
                                    1- 1071     	BANKSEL	_ADC_num_value
     0034 rrrr                      3-   71 m1      .banksel ram_address
     0035 04rr                      1- 1072     	SUBAR	(_ADC_num_value + 1),W
     0036 0903                      1- 1073     	BTRSS	STATUS,2
     0037 3rrr                      1- 1074     	LGOTO	_00448_DS_
     0038 2141                      1- 1075     	MOVIA	0x41
     0039 04rr                      1- 1076     	SUBAR	_ADC_num_value,W
     003A                           1- 1077     _00448_DS_:
     003A 0803                      1- 1078     	BTRSS	STATUS,0
     003B 3rrr                      1- 1079     	LGOTO	_00404_DS_
                                    1- 1080     	.line	486, "main.c"; 	LED2ON();
     003C 2rrr                      1- 1081     	LCALL	_LED2ON
                                    1- 1082     ;;unsigned compare: left < lit (0x6DB=1755), size=2
     003D                           1- 1083     _00404_DS_:
                                    1- 1084     	.line	488, "main.c"; 	if(ADC_num_value < 1755)
     003D 2106                      1- 1085     	MOVIA	0x06
                                    1- 1086     	BANKSEL	_ADC_num_value
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 04rr                      1- 1087     	SUBAR	(_ADC_num_value + 1),W
     0040 0903                      1- 1088     	BTRSS	STATUS,2
     0041 3rrr                      1- 1089     	LGOTO	_00449_DS_
     0042 21DB                      1- 1090     	MOVIA	0xdb
     0043 04rr                      1- 1091     	SUBAR	_ADC_num_value,W
     0044                           1- 1092     _00449_DS_:
     0044 0C03                      1- 1093     	BTRSC	STATUS,0
     0045 3rrr                      1- 1094     	LGOTO	_00409_DS_
                                    1- 1095     	.line	490, "main.c"; 	duty = 5;
     0046 2105                      1- 1096     	MOVIA	0x05
                                    1- 1097     	BANKSEL	_duty
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 00rr                      1- 1098     	MOVAR	_duty
     0049 3rrr                      1- 1099     	LGOTO	_00419_DS_
                                    1- 1100     ;;unsigned compare: left < lit (0x8DA=2266), size=2
     004A                           1- 1101     _00409_DS_:
                                    1- 1102     	.line	492, "main.c"; 	else if(ADC_num_value < 2266)
     004A 2108                      1- 1103     	MOVIA	0x08
                                    1- 1104     	BANKSEL	_ADC_num_value
     004B rrrr                      3-   71 m1      .banksel ram_address
     004C 04rr                      1- 1105     	SUBAR	(_ADC_num_value + 1),W
     004D 0903                      1- 1106     	BTRSS	STATUS,2
     004E 3rrr                      1- 1107     	LGOTO	_00450_DS_
     004F 21DA                      1- 1108     	MOVIA	0xda
     0050 04rr                      1- 1109     	SUBAR	_ADC_num_value,W
     0051                           1- 1110     _00450_DS_:
     0051 0C03                      1- 1111     	BTRSC	STATUS,0
     0052 3rrr                      1- 1112     	LGOTO	_00406_DS_
                                    1- 1113     	.line	494, "main.c"; 	duty = 75;
     0053 214B                      1- 1114     	MOVIA	0x4b
                                    1- 1115     	BANKSEL	_duty
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 00rr                      1- 1116     	MOVAR	_duty
     0056 3rrr                      1- 1117     	LGOTO	_00419_DS_
     0057                           1- 1118     _00406_DS_:
                                    1- 1119     	.line	498, "main.c"; 	duty = 5;
     0057 2105                      1- 1120     	MOVIA	0x05
                                    1- 1121     	BANKSEL	_duty
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 00rr                      1- 1122     	MOVAR	_duty
     005A 3rrr                      1- 1123     	LGOTO	_00419_DS_
     005B                           1- 1124     _00414_DS_:
                                    1- 1125     	.line	503, "main.c"; 	chrgTime = 0;
                                    1- 1126     	BANKSEL	_chrgTime
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 02rr                      1- 1127     	CLRR	_chrgTime
                                    1- 1128     	.line	504, "main.c"; 	chrgFlag = 0;
                                    1- 1129     	BANKSEL	_chrgFlag
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 02rr                      1- 1130     	CLRR	_chrgFlag
                                    1- 1131     	.line	505, "main.c"; 	if(workStep == 0)
                                    1- 1132     	BANKSEL	_workStep
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 01rr                      1- 1133     	MOVR	_workStep,W
     0061 0D03                      1- 1134     	BTRSC	STATUS,2
                                    1- 1135     	.line	506, "main.c"; 	LEDOFF();
     0062 2rrr                      1- 1136     	LCALL	_LEDOFF
     0063                           1- 1137     _00419_DS_:
                                    1- 1138     	.line	509, "main.c"; 	}
                                    1- 1139     	RETURN	
     0063 0010                      3-   26 m1      ret
                                    1- 1141     ;***
                                    1- 1142     ;  pBlock Stats: dbName = C
                                    1- 1143     ;***
                                    1- 1144     ;has an exit
                                    1- 1145     ;1 compiler assigned register :
                                    1- 1146     ;   r0x1038
                                    1- 1147     ;; Starting pCode block
                                    1- 1148     .segment "code"; module=main, function=_setLed2PWM
     0000                           1- 1150     _setLed2PWM:
                                    1- 1151     ; 2 exit points
                                    1- 1152     	.line	451, "main.c"; 	if(ledCount >= duty7)
                                    1- 1153     	BANKSEL	_duty7
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1154     	MOVR	_duty7,W
                                    1- 1155     	BANKSEL	_ledCount
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 04rr                      1- 1156     	SUBAR	_ledCount,W
     0004 0803                      1- 1157     	BTRSS	STATUS,0
     0005 3rrr                      1- 1158     	LGOTO	_00391_DS_
                                    1- 1159     	.line	453, "main.c"; 	PORTA &= 0xEB;
     0006 21EB                      1- 1160     	MOVIA	0xeb
     0007 10rr                      1- 1161     	ANDAR	_PORTA,F
                                    1- 1162     	.line	454, "main.c"; 	IOSTA |= 0x14;
     0008 001r                      1- 1163     	IOSTR	_IOSTA
                                    1- 1164     	BANKSEL	r0x1038
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 1165     	MOVAR	r0x1038
     000B 2114                      1- 1166     	MOVIA	0x14
     000C 11rr                      1- 1167     	IORAR	r0x1038,F
     000D 01rr                      1- 1168     	MOVR	r0x1038,W
     000E 000r                      1- 1169     	IOST	_IOSTA
     000F 3rrr                      1- 1170     	LGOTO	_00393_DS_
     0010                           1- 1171     _00391_DS_:
                                    1- 1172     	.line	458, "main.c"; 	IOSTA &= 0xEB;
     0010 001r                      1- 1173     	IOSTR	_IOSTA
                                    1- 1174     	BANKSEL	r0x1038
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 00rr                      1- 1175     	MOVAR	r0x1038
     0013 21EB                      1- 1176     	MOVIA	0xeb
     0014 10rr                      1- 1177     	ANDAR	r0x1038,F
     0015 01rr                      1- 1178     	MOVR	r0x1038,W
     0016 000r                      1- 1179     	IOST	_IOSTA
                                    1- 1180     	.line	459, "main.c"; 	PORTA |= 0x10;
     0017 1Arr                      1- 1181     	BSR	_PORTA,4
                                    1- 1182     	.line	460, "main.c"; 	PORTA &= 0xFB;
     0018 1Drr                      1- 1183     	BCR	_PORTA,2
     0019                           1- 1184     _00393_DS_:
                                    1- 1185     	.line	462, "main.c"; 	}
                                    1- 1186     	RETURN	
     0019 0010                      3-   26 m1      ret
                                    1- 1187     ; exit point of _setLed2PWM
                                    1- 1189     ;***
                                    1- 1190     ;  pBlock Stats: dbName = C
                                    1- 1191     ;***
                                    1- 1192     ;1 compiler assigned register :
                                    1- 1193     ;   r0x1039
                                    1- 1194     ;; Starting pCode block
                                    1- 1195     .segment "code"; module=main, function=_setLed1PWM
     0000                           1- 1197     _setLed1PWM:
                                    1- 1198     ; 0 exit points
                                    1- 1199     	.line	433, "main.c"; 	if(ledCount >= duty5)
                                    1- 1200     	BANKSEL	_duty5
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1201     	MOVR	_duty5,W
                                    1- 1202     	BANKSEL	_ledCount
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 04rr                      1- 1203     	SUBAR	_ledCount,W
     0004 0803                      1- 1204     	BTRSS	STATUS,0
     0005 3rrr                      1- 1205     	LGOTO	_00381_DS_
                                    1- 1206     	.line	435, "main.c"; 	PORTA &= 0xFE;
     0006 1Crr                      1- 1207     	BCR	_PORTA,0
                                    1- 1208     	.line	436, "main.c"; 	IOSTA |= 0x01;
     0007 001r                      1- 1209     	IOSTR	_IOSTA
                                    1- 1210     	BANKSEL	r0x1039
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1- 1211     	MOVAR	r0x1039
     000A 18rr                      1- 1212     	BSR	r0x1039,0
     000B 01rr                      1- 1213     	MOVR	r0x1039,W
     000C 000r                      1- 1214     	IOST	_IOSTA
     000D 3rrr                      1- 1215     	LGOTO	_00382_DS_
     000E                           1- 1216     _00381_DS_:
                                    1- 1217     	.line	440, "main.c"; 	IOSTA &= 0xFE;
     000E 001r                      1- 1218     	IOSTR	_IOSTA
                                    1- 1219     	BANKSEL	r0x1039
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 00rr                      1- 1220     	MOVAR	r0x1039
     0011 1Crr                      1- 1221     	BCR	r0x1039,0
     0012 01rr                      1- 1222     	MOVR	r0x1039,W
     0013 000r                      1- 1223     	IOST	_IOSTA
                                    1- 1224     	.line	441, "main.c"; 	PORTA |= 0x01;
     0014 18rr                      1- 1225     	BSR	_PORTA,0
     0015                           1- 1226     _00382_DS_:
                                    1- 1227     	.line	443, "main.c"; 	if(++ledCount >= 50)
                                    1- 1228     	BANKSEL	_ledCount
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1- 1229     	INCR	_ledCount,F
                                    1- 1230     ;;unsigned compare: left < lit (0x32=50), size=1
     0017 2132                      1- 1231     	MOVIA	0x32
     0018 04rr                      1- 1232     	SUBAR	_ledCount,W
     0019 0C03                      1- 1233     	BTRSC	STATUS,0
                                    1- 1234     	.line	445, "main.c"; 	ledCount = 0;
     001A 02rr                      1- 1235     	CLRR	_ledCount
                                    1- 1236     	.line	447, "main.c"; 	}
                                    1- 1237     	RETURN	
     001B 0010                      3-   26 m1      ret
                                    1- 1239     ;***
                                    1- 1240     ;  pBlock Stats: dbName = C
                                    1- 1241     ;***
                                    1- 1242     ;; Starting pCode block
                                    1- 1243     .segment "code"; module=main, function=_motorPWM
     0000                           1- 1245     _motorPWM:
                                    1- 1246     ; 0 exit points
                                    1- 1247     	.line	418, "main.c"; 	if(motorCount >= duty1)
                                    1- 1248     	BANKSEL	_duty1
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1249     	MOVR	_duty1,W
                                    1- 1250     	BANKSEL	_motorCount
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 04rr                      1- 1251     	SUBAR	_motorCount,W
     0004 0803                      1- 1252     	BTRSS	STATUS,0
     0005 3rrr                      1- 1253     	LGOTO	_00371_DS_
                                    1- 1254     	.line	420, "main.c"; 	PORTA &= 0x7F;
     0006 1Frr                      1- 1255     	BCR	_PORTA,7
     0007 3rrr                      1- 1256     	LGOTO	_00372_DS_
     0008                           1- 1257     _00371_DS_:
                                    1- 1258     	.line	424, "main.c"; 	PORTA |= 0x80;
     0008 1Brr                      1- 1259     	BSR	_PORTA,7
     0009                           1- 1260     _00372_DS_:
                                    1- 1261     	.line	426, "main.c"; 	if(++motorCount >= 50)
                                    1- 1262     	BANKSEL	_motorCount
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 05rr                      1- 1263     	INCR	_motorCount,F
                                    1- 1264     ;;unsigned compare: left < lit (0x32=50), size=1
     000B 2132                      1- 1265     	MOVIA	0x32
     000C 04rr                      1- 1266     	SUBAR	_motorCount,W
     000D 0C03                      1- 1267     	BTRSC	STATUS,0
                                    1- 1268     	.line	427, "main.c"; 	motorCount = 0;
     000E 02rr                      1- 1269     	CLRR	_motorCount
                                    1- 1270     	.line	428, "main.c"; 	}
                                    1- 1271     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 1273     ;***
                                    1- 1274     ;  pBlock Stats: dbName = C
                                    1- 1275     ;***
                                    1- 1276     ;; Starting pCode block
                                    1- 1277     .segment "code"; module=main, function=_chrgPWM
     0000                           1- 1279     _chrgPWM:
                                    1- 1280     ; 0 exit points
                                    1- 1281     	.line	404, "main.c"; 	if(chrgCount >= duty)
                                    1- 1282     	BANKSEL	_duty
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1283     	MOVR	_duty,W
                                    1- 1284     	BANKSEL	_chrgCount
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 04rr                      1- 1285     	SUBAR	_chrgCount,W
     0004 0803                      1- 1286     	BTRSS	STATUS,0
     0005 3rrr                      1- 1287     	LGOTO	_00361_DS_
                                    1- 1288     	.line	406, "main.c"; 	PORTB &= 0xF7;
     0006 1Drr                      1- 1289     	BCR	_PORTB,3
     0007 3rrr                      1- 1290     	LGOTO	_00362_DS_
     0008                           1- 1291     _00361_DS_:
                                    1- 1292     	.line	410, "main.c"; 	PORTB |= 0x08;
     0008 19rr                      1- 1293     	BSR	_PORTB,3
     0009                           1- 1294     _00362_DS_:
                                    1- 1295     	.line	412, "main.c"; 	if(++chrgCount >= 100)
                                    1- 1296     	BANKSEL	_chrgCount
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 05rr                      1- 1297     	INCR	_chrgCount,F
                                    1- 1298     ;;unsigned compare: left < lit (0x64=100), size=1
     000B 2164                      1- 1299     	MOVIA	0x64
     000C 04rr                      1- 1300     	SUBAR	_chrgCount,W
     000D 0C03                      1- 1301     	BTRSC	STATUS,0
                                    1- 1302     	.line	413, "main.c"; 	chrgCount = 0;
     000E 02rr                      1- 1303     	CLRR	_chrgCount
                                    1- 1304     	.line	414, "main.c"; 	}
                                    1- 1305     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 1307     ;***
                                    1- 1308     ;  pBlock Stats: dbName = C
                                    1- 1309     ;***
                                    1- 1310     ;has an exit
                                    1- 1311     ;1 compiler assigned register :
                                    1- 1312     ;   r0x1025
                                    1- 1313     ;; Starting pCode block
                                    1- 1314     .segment "code"; module=main, function=_LEDOFF
     0000                           1- 1316     _LEDOFF:
                                    1- 1317     ; 2 exit points
                                    1- 1318     	.line	394, "main.c"; 	IOSTA |= 0x05;
     0000 001r                      1- 1319     	IOSTR	_IOSTA
                                    1- 1320     	BANKSEL	r0x1025
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1321     	MOVAR	r0x1025
     0003 2105                      1- 1322     	MOVIA	0x05
     0004 11rr                      1- 1323     	IORAR	r0x1025,F
     0005 01rr                      1- 1324     	MOVR	r0x1025,W
     0006 000r                      1- 1325     	IOST	_IOSTA
                                    1- 1326     	.line	395, "main.c"; 	ledStep = 0;
                                    1- 1327     	BANKSEL	_ledStep
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1- 1328     	CLRR	_ledStep
                                    1- 1329     	.line	396, "main.c"; 	PORTA &= 0xF7;
     0009 1Drr                      1- 1330     	BCR	_PORTA,3
                                    1- 1331     	.line	397, "main.c"; 	}
                                    1- 1332     	RETURN	
     000A 0010                      3-   26 m1      ret
                                    1- 1333     ; exit point of _LEDOFF
                                    1- 1335     ;***
                                    1- 1336     ;  pBlock Stats: dbName = C
                                    1- 1337     ;***
                                    1- 1338     ;has an exit
                                    1- 1339     ;1 compiler assigned register :
                                    1- 1340     ;   r0x1036
                                    1- 1341     ;; Starting pCode block
                                    1- 1342     .segment "code"; module=main, function=_LED2ON
     0000                           1- 1344     _LED2ON:
                                    1- 1345     ; 2 exit points
                                    1- 1346     	.line	385, "main.c"; 	IOSTA &= 0xEF;
     0000 001r                      1- 1347     	IOSTR	_IOSTA
                                    1- 1348     	BANKSEL	r0x1036
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1349     	MOVAR	r0x1036
     0003 1Err                      1- 1350     	BCR	r0x1036,4
     0004 01rr                      1- 1351     	MOVR	r0x1036,W
     0005 000r                      1- 1352     	IOST	_IOSTA
                                    1- 1353     	.line	386, "main.c"; 	ledStep = 2;
     0006 2102                      1- 1354     	MOVIA	0x02
                                    1- 1355     	BANKSEL	_ledStep
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 00rr                      1- 1356     	MOVAR	_ledStep
                                    1- 1357     	.line	387, "main.c"; 	duty7 = 30;
     0009 211E                      1- 1358     	MOVIA	0x1e
                                    1- 1359     	BANKSEL	_duty7
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1- 1360     	MOVAR	_duty7
                                    1- 1361     	.line	388, "main.c"; 	duty5 = 40;
     000C 2128                      1- 1362     	MOVIA	0x28
                                    1- 1363     	BANKSEL	_duty5
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1- 1364     	MOVAR	_duty5
                                    1- 1365     	.line	389, "main.c"; 	}
                                    1- 1366     	RETURN	
     000F 0010                      3-   26 m1      ret
                                    1- 1367     ; exit point of _LED2ON
                                    1- 1369     ;***
                                    1- 1370     ;  pBlock Stats: dbName = C
                                    1- 1371     ;***
                                    1- 1372     ;has an exit
                                    1- 1373     ;1 compiler assigned register :
                                    1- 1374     ;   r0x1036
                                    1- 1375     ;; Starting pCode block
                                    1- 1376     .segment "code"; module=main, function=_LED1ON
     0000                           1- 1378     _LED1ON:
                                    1- 1379     ; 2 exit points
                                    1- 1380     	.line	376, "main.c"; 	ledStep = 1;
     0000 2101                      1- 1381     	MOVIA	0x01
                                    1- 1382     	BANKSEL	_ledStep
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 1383     	MOVAR	_ledStep
                                    1- 1384     	.line	377, "main.c"; 	IOSTA |= 0x04;
     0003 001r                      1- 1385     	IOSTR	_IOSTA
                                    1- 1386     	BANKSEL	r0x1036
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 00rr                      1- 1387     	MOVAR	r0x1036
     0006 19rr                      1- 1388     	BSR	r0x1036,2
     0007 01rr                      1- 1389     	MOVR	r0x1036,W
     0008 000r                      1- 1390     	IOST	_IOSTA
                                    1- 1391     	.line	378, "main.c"; 	IOSTA &= 0xEE;
     0009 001r                      1- 1392     	IOSTR	_IOSTA
     000A 00rr                      1- 1393     	MOVAR	r0x1036
     000B 21EE                      1- 1394     	MOVIA	0xee
     000C 10rr                      1- 1395     	ANDAR	r0x1036,F
     000D 01rr                      1- 1396     	MOVR	r0x1036,W
     000E 000r                      1- 1397     	IOST	_IOSTA
                                    1- 1398     	.line	379, "main.c"; 	duty7 = 15;
     000F 210F                      1- 1399     	MOVIA	0x0f
                                    1- 1400     	BANKSEL	_duty7
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 00rr                      1- 1401     	MOVAR	_duty7
                                    1- 1402     	.line	380, "main.c"; 	duty5 = 1;
     0012 2101                      1- 1403     	MOVIA	0x01
                                    1- 1404     	BANKSEL	_duty5
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 00rr                      1- 1405     	MOVAR	_duty5
                                    1- 1406     	.line	381, "main.c"; 	}
                                    1- 1407     	RETURN	
     0015 0010                      3-   26 m1      ret
                                    1- 1408     ; exit point of _LED1ON
                                    1- 1410     ;***
                                    1- 1411     ;  pBlock Stats: dbName = C
                                    1- 1412     ;***
                                    1- 1413     ;functions called:
                                    1- 1414     ;   _gotoSleep
                                    1- 1415     ;   _checkBat
                                    1- 1416     ;   __divuint
                                    1- 1417     ;   _LED2ON
                                    1- 1418     ;   _LED2ON
                                    1- 1419     ;   _LEDOFF
                                    1- 1420     ;   _LED2ON
                                    1- 1421     ;   _LEDOFF
                                    1- 1422     ;   _LED2ON
                                    1- 1423     ;   _LEDOFF
                                    1- 1424     ;   _LED2ON
                                    1- 1425     ;   _LEDOFF
                                    1- 1426     ;   _gotoSleep
                                    1- 1427     ;   _gotoSleep
                                    1- 1428     ;   _gotoSleep
                                    1- 1429     ;   _checkBat
                                    1- 1430     ;   __divuint
                                    1- 1431     ;   _LED2ON
                                    1- 1432     ;   _LED2ON
                                    1- 1433     ;   _LEDOFF
                                    1- 1434     ;   _LED2ON
                                    1- 1435     ;   _LEDOFF
                                    1- 1436     ;   _LED2ON
                                    1- 1437     ;   _LEDOFF
                                    1- 1438     ;   _LED2ON
                                    1- 1439     ;   _LEDOFF
                                    1- 1440     ;   _gotoSleep
                                    1- 1441     ;   _gotoSleep
                                    1- 1442     ;7 compiler assigned registers:
                                    1- 1443     ;   r0x103A
                                    1- 1444     ;   r0x103B
                                    1- 1445     ;   r0x103C
                                    1- 1446     ;   r0x103D
                                    1- 1447     ;   STK02
                                    1- 1448     ;   STK01
                                    1- 1449     ;   STK00
                                    1- 1450     ;; Starting pCode block
                                    1- 1451     .segment "code"; module=main, function=_workCtr
                                    1- 1453     ;local variable name mapping:
     0000                           1- 1458     _workCtr:
                                    1- 1459     ; 0 exit points
                                    1- 1460     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1461     ;;unsigned compare: left >= lit (0x29=41), size=2
                                    1- 1462     	.line	260, "main.c"; 	if(count900s > 40)
     0000 2100                      1- 1463     	MOVIA	0x00
                                    1- 1464     	BANKSEL	_count900s
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 1465     	SUBAR	(_count900s + 1),W
     0003 0903                      1- 1466     	BTRSS	STATUS,2
     0004 3rrr                      1- 1467     	LGOTO	_00327_DS_
     0005 2129                      1- 1468     	MOVIA	0x29
     0006 04rr                      1- 1469     	SUBAR	_count900s,W
     0007                           1- 1470     _00327_DS_:
     0007 0803                      1- 1471     	BTRSS	STATUS,0
     0008 3rrr                      1- 1472     	LGOTO	_00182_DS_
                                    1- 1473     	.line	262, "main.c"; 	gotoSleep();
     0009 2rrr                      1- 1474     	LCALL	_gotoSleep
     000A                           1- 1475     _00182_DS_:
                                    1- 1476     	.line	264, "main.c"; 	if(workStep == 1)
                                    1- 1477     	BANKSEL	_workStep
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1- 1478     	MOVR	_workStep,W
     000C 2401                      1- 1479     	XORIA	0x01
     000D 0903                      1- 1480     	BTRSS	STATUS,2
     000E 3rrr                      1- 1481     	LGOTO	_00245_DS_
                                    1- 1482     	.line	266, "main.c"; 	if(++duty1 > 100)
                                    1- 1483     	BANKSEL	_duty1
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 05rr                      1- 1484     	INCR	_duty1,F
                                    1- 1485     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1486     ;;unsigned compare: left >= lit (0x65=101), size=1
     0011 2165                      1- 1487     	MOVIA	0x65
     0012 04rr                      1- 1488     	SUBAR	_duty1,W
     0013 0803                      1- 1489     	BTRSS	STATUS,0
     0014 3rrr                      1- 1490     	LGOTO	_00184_DS_
                                    1- 1491     	.line	267, "main.c"; 	duty1 = 100;
     0015 2164                      1- 1492     	MOVIA	0x64
     0016 00rr                      1- 1493     	MOVAR	_duty1
     0017                           1- 1494     _00184_DS_:
                                    1- 1495     	.line	268, "main.c"; 	if(checkTime > 0)
                                    1- 1496     	BANKSEL	_checkTime
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 01rr                      1- 1497     	MOVR	_checkTime,W
     0019 0D03                      1- 1498     	BTRSC	STATUS,2
     001A 3rrr                      1- 1499     	LGOTO	_00201_DS_
                                    1- 1500     	.line	270, "main.c"; 	--checkTime;	//检测次数
     001B 06rr                      1- 1501     	DECR	_checkTime,F
                                    1- 1502     	.line	271, "main.c"; 	if(ledCount > duty)
                                    1- 1503     	BANKSEL	_ledCount
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 01rr                      1- 1504     	MOVR	_ledCount,W
                                    1- 1505     	BANKSEL	_duty
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 04rr                      1- 1506     	SUBAR	_duty,W
     0020 0803                      1- 1507     	BTRSS	STATUS,0
                                    1- 1508     	.line	272, "main.c"; 	checkBat();
     0021 2rrr                      1- 1509     	LCALL	_checkBat
                                    1- 1510     	.line	273, "main.c"; 	if(checkTime < 10)
     0022 210A                      1- 1511     	MOVIA	0x0a
                                    1- 1512     	BANKSEL	_checkTime
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 04rr                      1- 1513     	SUBAR	_checkTime,W
     0025 0C03                      1- 1514     	BTRSC	STATUS,0
     0026 3rrr                      1- 1515     	LGOTO	_00202_DS_
                                    1- 1516     	.line	275, "main.c"; 	ADC_work_value += R_AIN2_DATA;
                                    1- 1517     	BANKSEL	_R_AIN2_DATA
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1- 1518     	MOVR	_R_AIN2_DATA,W
                                    1- 1519     	BANKSEL	_ADC_work_value
     0029 rrrr                      3-   71 m1      .banksel ram_address
     002A 03rr                      1- 1520     	ADDAR	_ADC_work_value,F
                                    1- 1521     	BANKSEL	_R_AIN2_DATA
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1- 1522     	MOVR	(_R_AIN2_DATA + 1),W
     002D 0C03                      1- 1523     	BTRSC	STATUS,0
     002E 05rr                      1- 1524     	INCR	(_R_AIN2_DATA + 1),W
     002F 0D03                      1- 1525     	BTRSC	STATUS,2
     0030 3rrr                      1- 1526     	LGOTO	_00001_DS_
                                    1- 1527     	BANKSEL	_ADC_work_value
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 03rr                      1- 1528     	ADDAR	(_ADC_work_value + 1),F
     0033                           1- 1529     _00001_DS_:
                                    1- 1530     	.line	277, "main.c"; 	u16 ADC_work_AVG = ADC_work_value/(10-checkTime);
                                    1- 1531     	BANKSEL	_checkTime
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1- 1532     	MOVR	_checkTime,W
                                    1- 1533     	BANKSEL	r0x103A
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 00rr                      1- 1534     	MOVAR	r0x103A
                                    1- 1535     	BANKSEL	r0x103B
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 02rr                      1- 1536     	CLRR	r0x103B
                                    1- 1537     	BANKSEL	r0x103A
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1- 1538     	MOVR	r0x103A,W
     003B 270A                      1- 1539     	SUBIA	0x0a
     003C 00rr                      1- 1540     	MOVAR	r0x103A
     003D 2100                      1- 1541     	MOVIA	0x00
     003E 0C03                      1- 1542     	BTRSC	STATUS,0
     003F 3rrr                      1- 1543     	LGOTO	_00002_DS_
                                    1- 1544     	BANKSEL	r0x103B
     0040 rrrr                      3-   71 m1      .banksel ram_address
     0041 05rr                      1- 1545     	INCR	r0x103B,W
     0042                           1- 1546     _00002_DS_:
     0042 2700                      1- 1547     	SUBIA	0x00
                                    1- 1548     	BANKSEL	r0x103D
     0043 rrrr                      3-   71 m1      .banksel ram_address
     0044 00rr                      1- 1549     	MOVAR	r0x103D
                                    1- 1550     	BANKSEL	r0x103B
     0045 rrrr                      3-   71 m1      .banksel ram_address
     0046 00rr                      1- 1551     	MOVAR	r0x103B
                                    1- 1552     	BANKSEL	r0x103A
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 01rr                      1- 1553     	MOVR	r0x103A,W
                                    1- 1554     	BANKSEL	r0x103C
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 00rr                      1- 1555     	MOVAR	r0x103C
     004B 00rr                      1- 1556     	MOVAR	STK02
                                    1- 1557     	BANKSEL	r0x103D
     004C rrrr                      3-   71 m1      .banksel ram_address
     004D 01rr                      1- 1558     	MOVR	r0x103D,W
     004E 00rr                      1- 1559     	MOVAR	STK01
                                    1- 1560     	BANKSEL	_ADC_work_value
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 01rr                      1- 1561     	MOVR	_ADC_work_value,W
     0051 00rr                      1- 1562     	MOVAR	STK00
     0052 01rr                      1- 1563     	MOVR	(_ADC_work_value + 1),W
     0053 2rrr                      1- 1564     	LCALL	__divuint
                                    1- 1565     	BANKSEL	r0x103B
     0054 rrrr                      3-   71 m1      .banksel ram_address
     0055 00rr                      1- 1566     	MOVAR	r0x103B
     0056 01rr                      1- 1567     	MOVR	STK00,W
                                    1- 1568     	BANKSEL	r0x103A
     0057 rrrr                      3-   71 m1      .banksel ram_address
     0058 00rr                      1- 1569     	MOVAR	r0x103A
                                    1- 1570     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1571     ;;unsigned compare: left >= lit (0x8FD=2301), size=2
                                    1- 1572     	.line	278, "main.c"; 	if(ADC_num_value > 2300)
     0059 2108                      1- 1573     	MOVIA	0x08
                                    1- 1574     	BANKSEL	_ADC_num_value
     005A rrrr                      3-   71 m1      .banksel ram_address
     005B 04rr                      1- 1575     	SUBAR	(_ADC_num_value + 1),W
     005C 0903                      1- 1576     	BTRSS	STATUS,2
     005D 3rrr                      1- 1577     	LGOTO	_00331_DS_
     005E 21FD                      1- 1578     	MOVIA	0xfd
     005F 04rr                      1- 1579     	SUBAR	_ADC_num_value,W
     0060                           1- 1580     _00331_DS_:
     0060 0803                      1- 1581     	BTRSS	STATUS,0
     0061 3rrr                      1- 1582     	LGOTO	_00191_DS_
                                    1- 1583     	.line	279, "main.c"; 	tempVale = ADC_work_AVG + 110;
     0062 216E                      1- 1584     	MOVIA	0x6e
                                    1- 1585     	BANKSEL	r0x103A
     0063 rrrr                      3-   71 m1      .banksel ram_address
     0064 03rr                      1- 1586     	ADDAR	r0x103A,W
                                    1- 1587     	BANKSEL	r0x103C
     0065 rrrr                      3-   71 m1      .banksel ram_address
     0066 00rr                      1- 1588     	MOVAR	r0x103C
                                    1- 1589     	BANKSEL	r0x103D
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 02rr                      1- 1590     	CLRR	r0x103D
     0069 14rr                      1- 1591     	RLR	r0x103D,F
                                    1- 1592     	BANKSEL	r0x103B
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 01rr                      1- 1593     	MOVR	r0x103B,W
                                    1- 1594     	BANKSEL	r0x103D
     006C rrrr                      3-   71 m1      .banksel ram_address
     006D 03rr                      1- 1595     	ADDAR	r0x103D,F
     006E 3rrr                      1- 1596     	LGOTO	_00192_DS_
                                    1- 1597     ;;unsigned compare: left < lit (0x7D0=2000), size=2
     006F                           1- 1598     _00191_DS_:
                                    1- 1599     	.line	280, "main.c"; 	else if(ADC_num_value < 2000)
     006F 2107                      1- 1600     	MOVIA	0x07
                                    1- 1601     	BANKSEL	_ADC_num_value
     0070 rrrr                      3-   71 m1      .banksel ram_address
     0071 04rr                      1- 1602     	SUBAR	(_ADC_num_value + 1),W
     0072 0903                      1- 1603     	BTRSS	STATUS,2
     0073 3rrr                      1- 1604     	LGOTO	_00332_DS_
     0074 21D0                      1- 1605     	MOVIA	0xd0
     0075 04rr                      1- 1606     	SUBAR	_ADC_num_value,W
     0076                           1- 1607     _00332_DS_:
     0076 0C03                      1- 1608     	BTRSC	STATUS,0
     0077 3rrr                      1- 1609     	LGOTO	_00188_DS_
                                    1- 1610     	.line	281, "main.c"; 	tempVale = ADC_work_AVG + 120;
     0078 2178                      1- 1611     	MOVIA	0x78
                                    1- 1612     	BANKSEL	r0x103A
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 03rr                      1- 1613     	ADDAR	r0x103A,W
                                    1- 1614     	BANKSEL	r0x103C
     007B rrrr                      3-   71 m1      .banksel ram_address
     007C 00rr                      1- 1615     	MOVAR	r0x103C
                                    1- 1616     	BANKSEL	r0x103D
     007D rrrr                      3-   71 m1      .banksel ram_address
     007E 02rr                      1- 1617     	CLRR	r0x103D
     007F 14rr                      1- 1618     	RLR	r0x103D,F
                                    1- 1619     	BANKSEL	r0x103B
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 01rr                      1- 1620     	MOVR	r0x103B,W
                                    1- 1621     	BANKSEL	r0x103D
     0082 rrrr                      3-   71 m1      .banksel ram_address
     0083 03rr                      1- 1622     	ADDAR	r0x103D,F
     0084 3rrr                      1- 1623     	LGOTO	_00192_DS_
     0085                           1- 1624     _00188_DS_:
                                    1- 1625     	.line	283, "main.c"; 	tempVale = ADC_work_AVG + 115;
     0085 2173                      1- 1626     	MOVIA	0x73
                                    1- 1627     	BANKSEL	r0x103A
     0086 rrrr                      3-   71 m1      .banksel ram_address
     0087 03rr                      1- 1628     	ADDAR	r0x103A,W
                                    1- 1629     	BANKSEL	r0x103C
     0088 rrrr                      3-   71 m1      .banksel ram_address
     0089 00rr                      1- 1630     	MOVAR	r0x103C
                                    1- 1631     	BANKSEL	r0x103D
     008A rrrr                      3-   71 m1      .banksel ram_address
     008B 02rr                      1- 1632     	CLRR	r0x103D
     008C 14rr                      1- 1633     	RLR	r0x103D,F
                                    1- 1634     	BANKSEL	r0x103B
     008D rrrr                      3-   71 m1      .banksel ram_address
     008E 01rr                      1- 1635     	MOVR	r0x103B,W
                                    1- 1636     	BANKSEL	r0x103D
     008F rrrr                      3-   71 m1      .banksel ram_address
     0090 03rr                      1- 1637     	ADDAR	r0x103D,F
     0091                           1- 1638     _00192_DS_:
                                    1- 1639     	.line	284, "main.c"; 	if(ADC_num_value > tempVale)
                                    1- 1640     	BANKSEL	_ADC_num_value
     0091 rrrr                      3-   71 m1      .banksel ram_address
     0092 01rr                      1- 1641     	MOVR	(_ADC_num_value + 1),W
                                    1- 1642     	BANKSEL	r0x103D
     0093 rrrr                      3-   71 m1      .banksel ram_address
     0094 04rr                      1- 1643     	SUBAR	r0x103D,W
     0095 0903                      1- 1644     	BTRSS	STATUS,2
     0096 3rrr                      1- 1645     	LGOTO	_00333_DS_
                                    1- 1646     	BANKSEL	_ADC_num_value
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 01rr                      1- 1647     	MOVR	_ADC_num_value,W
                                    1- 1648     	BANKSEL	r0x103C
     0099 rrrr                      3-   71 m1      .banksel ram_address
     009A 04rr                      1- 1649     	SUBAR	r0x103C,W
     009B                           1- 1650     _00333_DS_:
     009B 0C03                      1- 1651     	BTRSC	STATUS,0
     009C 3rrr                      1- 1652     	LGOTO	_00196_DS_
                                    1- 1653     	.line	286, "main.c"; 	if(++resultTime > 4)
                                    1- 1654     	BANKSEL	_resultTime
     009D rrrr                      3-   71 m1      .banksel ram_address
     009E 05rr                      1- 1655     	INCR	_resultTime,F
                                    1- 1656     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1657     ;;unsigned compare: left >= lit (0x5=5), size=1
     009F 2105                      1- 1658     	MOVIA	0x05
     00A0 04rr                      1- 1659     	SUBAR	_resultTime,W
     00A1 0803                      1- 1660     	BTRSS	STATUS,0
     00A2 3rrr                      1- 1661     	LGOTO	_00202_DS_
                                    1- 1662     	.line	287, "main.c"; 	loadFlag = 1;//满载
     00A3 2101                      1- 1663     	MOVIA	0x01
                                    1- 1664     	BANKSEL	_loadFlag
     00A4 rrrr                      3-   71 m1      .banksel ram_address
     00A5 00rr                      1- 1665     	MOVAR	_loadFlag
     00A6 3rrr                      1- 1666     	LGOTO	_00202_DS_
     00A7                           1- 1667     _00196_DS_:
                                    1- 1668     	.line	291, "main.c"; 	loadFlag = 0;//空载
                                    1- 1669     	BANKSEL	_loadFlag
     00A7 rrrr                      3-   71 m1      .banksel ram_address
     00A8 02rr                      1- 1670     	CLRR	_loadFlag
     00A9 3rrr                      1- 1671     	LGOTO	_00202_DS_
     00AA                           1- 1672     _00201_DS_:
                                    1- 1673     	.line	297, "main.c"; 	resultTime = 0;
                                    1- 1674     	BANKSEL	_resultTime
     00AA rrrr                      3-   71 m1      .banksel ram_address
     00AB 02rr                      1- 1675     	CLRR	_resultTime
                                    1- 1676     	.line	298, "main.c"; 	ADC_work_value = 0;
                                    1- 1677     	BANKSEL	_ADC_work_value
     00AC rrrr                      3-   71 m1      .banksel ram_address
     00AD 02rr                      1- 1678     	CLRR	_ADC_work_value
     00AE 02rr                      1- 1679     	CLRR	(_ADC_work_value + 1)
     00AF                           1- 1680     _00202_DS_:
                                    1- 1681     	.line	300, "main.c"; 	if((loadFlag == 0 && count900s < 15) || stopFlag == 1)
                                    1- 1682     	BANKSEL	_loadFlag
     00AF rrrr                      3-   71 m1      .banksel ram_address
     00B0 01rr                      1- 1683     	MOVR	_loadFlag,W
     00B1 0903                      1- 1684     	BTRSS	STATUS,2
     00B2 3rrr                      1- 1685     	LGOTO	_00215_DS_
                                    1- 1686     ;;unsigned compare: left < lit (0xF=15), size=2
     00B3 2100                      1- 1687     	MOVIA	0x00
                                    1- 1688     	BANKSEL	_count900s
     00B4 rrrr                      3-   71 m1      .banksel ram_address
     00B5 04rr                      1- 1689     	SUBAR	(_count900s + 1),W
     00B6 0903                      1- 1690     	BTRSS	STATUS,2
     00B7 3rrr                      1- 1691     	LGOTO	_00335_DS_
     00B8 210F                      1- 1692     	MOVIA	0x0f
     00B9 04rr                      1- 1693     	SUBAR	_count900s,W
     00BA                           1- 1694     _00335_DS_:
     00BA 0803                      1- 1695     	BTRSS	STATUS,0
     00BB 3rrr                      1- 1696     	LGOTO	_00211_DS_
     00BC                           1- 1697     _00215_DS_:
                                    1- 1698     	BANKSEL	_stopFlag
     00BC rrrr                      3-   71 m1      .banksel ram_address
     00BD 01rr                      1- 1699     	MOVR	_stopFlag,W
     00BE 2401                      1- 1700     	XORIA	0x01
     00BF 0903                      1- 1701     	BTRSS	STATUS,2
     00C0 3rrr                      1- 1702     	LGOTO	_00212_DS_
                                    1- 1703     ;;unsigned compare: left < lit (0x6=6), size=2
     00C1                           1- 1704     _00211_DS_:
                                    1- 1705     	.line	303, "main.c"; 	if(count900s >= 6 || stopFlag == 1)
     00C1 2100                      1- 1706     	MOVIA	0x00
                                    1- 1707     	BANKSEL	_count900s
     00C2 rrrr                      3-   71 m1      .banksel ram_address
     00C3 04rr                      1- 1708     	SUBAR	(_count900s + 1),W
     00C4 0903                      1- 1709     	BTRSS	STATUS,2
     00C5 3rrr                      1- 1710     	LGOTO	_00336_DS_
     00C6 2106                      1- 1711     	MOVIA	0x06
     00C7 04rr                      1- 1712     	SUBAR	_count900s,W
     00C8                           1- 1713     _00336_DS_:
     00C8 0C03                      1- 1714     	BTRSC	STATUS,0
     00C9 3rrr                      1- 1715     	LGOTO	_00205_DS_
                                    1- 1716     	BANKSEL	_stopFlag
     00CA rrrr                      3-   71 m1      .banksel ram_address
     00CB 01rr                      1- 1717     	MOVR	_stopFlag,W
     00CC 2401                      1- 1718     	XORIA	0x01
     00CD 0903                      1- 1719     	BTRSS	STATUS,2
     00CE 3rrr                      1- 1720     	LGOTO	_00206_DS_
     00CF                           1- 1721     _00205_DS_:
                                    1- 1722     	.line	305, "main.c"; 	stopFlag = 1;
     00CF 2101                      1- 1723     	MOVIA	0x01
                                    1- 1724     	BANKSEL	_stopFlag
     00D0 rrrr                      3-   71 m1      .banksel ram_address
     00D1 00rr                      1- 1725     	MOVAR	_stopFlag
     00D2 3rrr                      1- 1726     	LGOTO	_00213_DS_
     00D3                           1- 1727     _00206_DS_:
                                    1- 1728     	.line	309, "main.c"; 	if(checkTime == 0)
                                    1- 1729     	BANKSEL	_checkTime
     00D3 rrrr                      3-   71 m1      .banksel ram_address
     00D4 01rr                      1- 1730     	MOVR	_checkTime,W
     00D5 0903                      1- 1731     	BTRSS	STATUS,2
     00D6 3rrr                      1- 1732     	LGOTO	_00213_DS_
                                    1- 1733     	.line	310, "main.c"; 	LED2ON();
     00D7 2rrr                      1- 1734     	LCALL	_LED2ON
     00D8 3rrr                      1- 1735     	LGOTO	_00213_DS_
     00D9                           1- 1736     _00212_DS_:
                                    1- 1737     	.line	316, "main.c"; 	if(checkTime == 0)
                                    1- 1738     	BANKSEL	_checkTime
     00D9 rrrr                      3-   71 m1      .banksel ram_address
     00DA 01rr                      1- 1739     	MOVR	_checkTime,W
     00DB 0D03                      1- 1740     	BTRSC	STATUS,2
                                    1- 1741     	.line	317, "main.c"; 	LED2ON();
     00DC 2rrr                      1- 1742     	LCALL	_LED2ON
     00DD                           1- 1743     _00213_DS_:
                                    1- 1744     	.line	321, "main.c"; 	if(stopFlag)
                                    1- 1745     	BANKSEL	_stopFlag
     00DD rrrr                      3-   71 m1      .banksel ram_address
     00DE 01rr                      1- 1746     	MOVR	_stopFlag,W
     00DF 0D03                      1- 1747     	BTRSC	STATUS,2
     00E0 3rrr                      1- 1748     	LGOTO	_00247_DS_
                                    1- 1749     ;;unsigned compare: left < lit (0x32=50), size=2
                                    1- 1750     	.line	323, "main.c"; 	if(led2count < 50)
     00E1 2100                      1- 1751     	MOVIA	0x00
                                    1- 1752     	BANKSEL	_led2count
     00E2 rrrr                      3-   71 m1      .banksel ram_address
     00E3 04rr                      1- 1753     	SUBAR	(_led2count + 1),W
     00E4 0903                      1- 1754     	BTRSS	STATUS,2
     00E5 3rrr                      1- 1755     	LGOTO	_00337_DS_
     00E6 2132                      1- 1756     	MOVIA	0x32
     00E7 04rr                      1- 1757     	SUBAR	_led2count,W
     00E8                           1- 1758     _00337_DS_:
     00E8 0C03                      1- 1759     	BTRSC	STATUS,0
     00E9 3rrr                      1- 1760     	LGOTO	_00232_DS_
                                    1- 1761     	.line	325, "main.c"; 	LEDOFF();
     00EA 2rrr                      1- 1762     	LCALL	_LEDOFF
     00EB 3rrr                      1- 1763     	LGOTO	_00233_DS_
                                    1- 1764     ;;unsigned compare: left < lit (0x64=100), size=2
     00EC                           1- 1765     _00232_DS_:
                                    1- 1766     	.line	327, "main.c"; 	else if(led2count < 100)
     00EC 2100                      1- 1767     	MOVIA	0x00
                                    1- 1768     	BANKSEL	_led2count
     00ED rrrr                      3-   71 m1      .banksel ram_address
     00EE 04rr                      1- 1769     	SUBAR	(_led2count + 1),W
     00EF 0903                      1- 1770     	BTRSS	STATUS,2
     00F0 3rrr                      1- 1771     	LGOTO	_00338_DS_
     00F1 2164                      1- 1772     	MOVIA	0x64
     00F2 04rr                      1- 1773     	SUBAR	_led2count,W
     00F3                           1- 1774     _00338_DS_:
     00F3 0C03                      1- 1775     	BTRSC	STATUS,0
     00F4 3rrr                      1- 1776     	LGOTO	_00229_DS_
                                    1- 1777     	.line	329, "main.c"; 	LED2ON();
     00F5 2rrr                      1- 1778     	LCALL	_LED2ON
     00F6 3rrr                      1- 1779     	LGOTO	_00233_DS_
                                    1- 1780     ;;unsigned compare: left < lit (0x96=150), size=2
     00F7                           1- 1781     _00229_DS_:
                                    1- 1782     	.line	331, "main.c"; 	else if(led2count < 150)
     00F7 2100                      1- 1783     	MOVIA	0x00
                                    1- 1784     	BANKSEL	_led2count
     00F8 rrrr                      3-   71 m1      .banksel ram_address
     00F9 04rr                      1- 1785     	SUBAR	(_led2count + 1),W
     00FA 0903                      1- 1786     	BTRSS	STATUS,2
     00FB 3rrr                      1- 1787     	LGOTO	_00339_DS_
     00FC 2196                      1- 1788     	MOVIA	0x96
     00FD 04rr                      1- 1789     	SUBAR	_led2count,W
     00FE                           1- 1790     _00339_DS_:
     00FE 0C03                      1- 1791     	BTRSC	STATUS,0
     00FF 3rrr                      1- 1792     	LGOTO	_00226_DS_
                                    1- 1793     	.line	333, "main.c"; 	LEDOFF();
     0100 2rrr                      1- 1794     	LCALL	_LEDOFF
     0101 3rrr                      1- 1795     	LGOTO	_00233_DS_
                                    1- 1796     ;;unsigned compare: left < lit (0xC8=200), size=2
     0102                           1- 1797     _00226_DS_:
                                    1- 1798     	.line	335, "main.c"; 	else if(led2count < 200)
     0102 2100                      1- 1799     	MOVIA	0x00
                                    1- 1800     	BANKSEL	_led2count
     0103 rrrr                      3-   71 m1      .banksel ram_address
     0104 04rr                      1- 1801     	SUBAR	(_led2count + 1),W
     0105 0903                      1- 1802     	BTRSS	STATUS,2
     0106 3rrr                      1- 1803     	LGOTO	_00340_DS_
     0107 21C8                      1- 1804     	MOVIA	0xc8
     0108 04rr                      1- 1805     	SUBAR	_led2count,W
     0109                           1- 1806     _00340_DS_:
     0109 0C03                      1- 1807     	BTRSC	STATUS,0
     010A 3rrr                      1- 1808     	LGOTO	_00223_DS_
                                    1- 1809     	.line	337, "main.c"; 	LED2ON();
     010B 2rrr                      1- 1810     	LCALL	_LED2ON
     010C 3rrr                      1- 1811     	LGOTO	_00233_DS_
                                    1- 1812     ;;unsigned compare: left < lit (0xFA=250), size=2
     010D                           1- 1813     _00223_DS_:
                                    1- 1814     	.line	339, "main.c"; 	else if(led2count < 250)
     010D 2100                      1- 1815     	MOVIA	0x00
                                    1- 1816     	BANKSEL	_led2count
     010E rrrr                      3-   71 m1      .banksel ram_address
     010F 04rr                      1- 1817     	SUBAR	(_led2count + 1),W
     0110 0903                      1- 1818     	BTRSS	STATUS,2
     0111 3rrr                      1- 1819     	LGOTO	_00341_DS_
     0112 21FA                      1- 1820     	MOVIA	0xfa
     0113 04rr                      1- 1821     	SUBAR	_led2count,W
     0114                           1- 1822     _00341_DS_:
     0114 0C03                      1- 1823     	BTRSC	STATUS,0
     0115 3rrr                      1- 1824     	LGOTO	_00220_DS_
                                    1- 1825     	.line	341, "main.c"; 	LEDOFF();
     0116 2rrr                      1- 1826     	LCALL	_LEDOFF
     0117 3rrr                      1- 1827     	LGOTO	_00233_DS_
                                    1- 1828     ;;unsigned compare: left < lit (0x12C=300), size=2
     0118                           1- 1829     _00220_DS_:
                                    1- 1830     	.line	343, "main.c"; 	else if(led2count < 300)
     0118 2101                      1- 1831     	MOVIA	0x01
                                    1- 1832     	BANKSEL	_led2count
     0119 rrrr                      3-   71 m1      .banksel ram_address
     011A 04rr                      1- 1833     	SUBAR	(_led2count + 1),W
     011B 0903                      1- 1834     	BTRSS	STATUS,2
     011C 3rrr                      1- 1835     	LGOTO	_00342_DS_
     011D 212C                      1- 1836     	MOVIA	0x2c
     011E 04rr                      1- 1837     	SUBAR	_led2count,W
     011F                           1- 1838     _00342_DS_:
     011F 0C03                      1- 1839     	BTRSC	STATUS,0
     0120 3rrr                      1- 1840     	LGOTO	_00217_DS_
                                    1- 1841     	.line	345, "main.c"; 	LED2ON();
     0121 2rrr                      1- 1842     	LCALL	_LED2ON
     0122 3rrr                      1- 1843     	LGOTO	_00233_DS_
     0123                           1- 1844     _00217_DS_:
                                    1- 1845     	.line	349, "main.c"; 	LEDOFF();
     0123 2rrr                      1- 1846     	LCALL	_LEDOFF
     0124                           1- 1847     _00233_DS_:
                                    1- 1848     	.line	351, "main.c"; 	if(++led2count > 350)
                                    1- 1849     	BANKSEL	_led2count
     0124 rrrr                      3-   71 m1      .banksel ram_address
     0125 05rr                      1- 1850     	INCR	_led2count,F
     0126 0D03                      1- 1851     	BTRSC	STATUS,2
     0127 05rr                      1- 1852     	INCR	(_led2count + 1),F
                                    1- 1853     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1854     ;;unsigned compare: left >= lit (0x15F=351), size=2
     0128 2101                      1- 1855     	MOVIA	0x01
     0129 04rr                      1- 1856     	SUBAR	(_led2count + 1),W
     012A 0903                      1- 1857     	BTRSS	STATUS,2
     012B 3rrr                      1- 1858     	LGOTO	_00343_DS_
     012C 215F                      1- 1859     	MOVIA	0x5f
     012D 04rr                      1- 1860     	SUBAR	_led2count,W
     012E                           1- 1861     _00343_DS_:
     012E 0803                      1- 1862     	BTRSS	STATUS,0
     012F 3rrr                      1- 1863     	LGOTO	_00247_DS_
                                    1- 1864     	.line	353, "main.c"; 	stopFlag = 0;
                                    1- 1865     	BANKSEL	_stopFlag
     0130 rrrr                      3-   71 m1      .banksel ram_address
     0131 02rr                      1- 1866     	CLRR	_stopFlag
                                    1- 1867     	.line	354, "main.c"; 	gotoSleep();
     0132 2rrr                      1- 1868     	LCALL	_gotoSleep
     0133 3rrr                      1- 1869     	LGOTO	_00247_DS_
     0134                           1- 1870     _00245_DS_:
                                    1- 1871     	.line	361, "main.c"; 	PORTA &= 0x6F;
     0134 216F                      1- 1872     	MOVIA	0x6f
     0135 10rr                      1- 1873     	ANDAR	_PORTA,F
                                    1- 1874     	.line	362, "main.c"; 	if(chrgFlag == 0 && doublePressFlag == 0 && keyCount == 0)
                                    1- 1875     	BANKSEL	_chrgFlag
     0136 rrrr                      3-   71 m1      .banksel ram_address
     0137 01rr                      1- 1876     	MOVR	_chrgFlag,W
     0138 0903                      1- 1877     	BTRSS	STATUS,2
     0139 3rrr                      1- 1878     	LGOTO	_00247_DS_
                                    1- 1879     	BANKSEL	_doublePressFlag
     013A rrrr                      3-   71 m1      .banksel ram_address
     013B 01rr                      1- 1880     	MOVR	_doublePressFlag,W
     013C 0903                      1- 1881     	BTRSS	STATUS,2
     013D 3rrr                      1- 1882     	LGOTO	_00247_DS_
                                    1- 1883     	BANKSEL	_keyCount
     013E rrrr                      3-   71 m1      .banksel ram_address
     013F 01rr                      1- 1884     	MOVR	_keyCount,W
     0140 0903                      1- 1885     	BTRSS	STATUS,2
     0141 3rrr                      1- 1886     	LGOTO	_00247_DS_
                                    1- 1887     	.line	364, "main.c"; 	if(++sleepTime > 200)
                                    1- 1888     	BANKSEL	_sleepTime
     0142 rrrr                      3-   71 m1      .banksel ram_address
     0143 05rr                      1- 1889     	INCR	_sleepTime,F
                                    1- 1890     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1891     ;;unsigned compare: left >= lit (0xC9=201), size=1
     0144 21C9                      1- 1892     	MOVIA	0xc9
     0145 04rr                      1- 1893     	SUBAR	_sleepTime,W
     0146 0C03                      1- 1894     	BTRSC	STATUS,0
                                    1- 1895     	.line	365, "main.c"; 	gotoSleep();
     0147 2rrr                      1- 1896     	LCALL	_gotoSleep
     0148                           1- 1897     _00247_DS_:
                                    1- 1898     	.line	369, "main.c"; 	}
                                    1- 1899     	RETURN	
     0148 0010                      3-   26 m1      ret
                                    1- 1901     ;***
                                    1- 1902     ;  pBlock Stats: dbName = C
                                    1- 1903     ;***
                                    1- 1904     ;has an exit
                                    1- 1905     ;5 compiler assigned registers:
                                    1- 1906     ;   r0x1027
                                    1- 1907     ;   STK00
                                    1- 1908     ;   r0x1028
                                    1- 1909     ;   r0x1029
                                    1- 1910     ;   r0x102A
                                    1- 1911     ;; Starting pCode block
                                    1- 1912     .segment "code"; module=main, function=_delay
                                    1- 1914     ;local variable name mapping:
     0000                           1- 1919     _delay:
                                    1- 1920     ; 2 exit points
                                    1- 1921     	.line	251, "main.c"; 	void delay(u16 time)
                                    1- 1922     	BANKSEL	r0x1027
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1923     	MOVAR	r0x1027
     0002 01rr                      1- 1924     	MOVR	STK00,W
                                    1- 1925     	BANKSEL	r0x1028
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 00rr                      1- 1926     	MOVAR	r0x1028
                                    1- 1927     	.line	253, "main.c"; 	for(u16 i=0;i<time;i++);
                                    1- 1928     	BANKSEL	r0x1029
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1- 1929     	CLRR	r0x1029
                                    1- 1930     	BANKSEL	r0x102A
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1- 1931     	CLRR	r0x102A
     0009                           1- 1932     _00165_DS_:
                                    1- 1933     	BANKSEL	r0x1027
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 01rr                      1- 1934     	MOVR	r0x1027,W
                                    1- 1935     	BANKSEL	r0x102A
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 04rr                      1- 1936     	SUBAR	r0x102A,W
     000D 0903                      1- 1937     	BTRSS	STATUS,2
     000E 3rrr                      1- 1938     	LGOTO	_00176_DS_
                                    1- 1939     	BANKSEL	r0x1028
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1- 1940     	MOVR	r0x1028,W
                                    1- 1941     	BANKSEL	r0x1029
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 04rr                      1- 1942     	SUBAR	r0x1029,W
     0013                           1- 1943     _00176_DS_:
     0013 0C03                      1- 1944     	BTRSC	STATUS,0
     0014 3rrr                      1- 1945     	LGOTO	_00167_DS_
                                    1- 1946     	BANKSEL	r0x1029
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 05rr                      1- 1947     	INCR	r0x1029,F
     0017 0903                      1- 1948     	BTRSS	STATUS,2
     0018 3rrr                      1- 1949     	LGOTO	_00003_DS_
                                    1- 1950     	BANKSEL	r0x102A
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 05rr                      1- 1951     	INCR	r0x102A,F
     001B                           1- 1952     _00003_DS_:
     001B 3rrr                      1- 1953     	LGOTO	_00165_DS_
     001C                           1- 1954     _00167_DS_:
                                    1- 1955     	.line	254, "main.c"; 	}
                                    1- 1956     	RETURN	
     001C 0010                      3-   26 m1      ret
                                    1- 1957     ; exit point of _delay
                                    1- 1959     ;***
                                    1- 1960     ;  pBlock Stats: dbName = C
                                    1- 1961     ;***
                                    1- 1962     ;has an exit
                                    1- 1963     ;; Starting pCode block
                                    1- 1964     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1966     _F_wait_eoc:
                                    1- 1967     ; 2 exit points
     0000                           1- 1968     _00158_DS_:
                                    1- 1969     	.line	245, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1970     	BTRSS	_ADMDbits,5
     0001 3rrr                      1- 1971     	LGOTO	_00158_DS_
                                    1- 1972     	.line	247, "main.c"; 	}
                                    1- 1973     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 1974     ; exit point of _F_wait_eoc
                                    1- 1976     ;***
                                    1- 1977     ;  pBlock Stats: dbName = C
                                    1- 1978     ;***
                                    1- 1979     ;has an exit
                                    1- 1980     ;functions called:
                                    1- 1981     ;   _delay
                                    1- 1982     ;   _F_wait_eoc
                                    1- 1983     ;   _delay
                                    1- 1984     ;   _F_wait_eoc
                                    1- 1985     ;7 compiler assigned registers:
                                    1- 1986     ;   r0x102B
                                    1- 1987     ;   STK00
                                    1- 1988     ;   r0x102C
                                    1- 1989     ;   r0x102D
                                    1- 1990     ;   r0x102E
                                    1- 1991     ;   r0x102F
                                    1- 1992     ;   r0x1030
                                    1- 1993     ;; Starting pCode block
                                    1- 1994     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1996     ;local variable name mapping:
     0000                           1- 1999     _F_AIN2_Convert:
                                    1- 2000     ; 2 exit points
                                    1- 2001     	.line	227, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 2002     	BANKSEL	r0x102B
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 2003     	MOVAR	r0x102B
                                    1- 2004     	.line	229, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 2005     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 2006     	CLRR	_R_AIN2_DATA_LB
                                    1- 2007     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1- 2008     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 2009     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 2010     	.line	231, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 2011     	MOVIA	0x92
     0008 00rr                      1- 2012     	MOVAR	_ADMD
                                    1- 2013     	.line	232, "main.c"; 	delay(200);	
     0009 21C8                      1- 2014     	MOVIA	0xc8
     000A 00rr                      1- 2015     	MOVAR	STK00
     000B 2100                      1- 2016     	MOVIA	0x00
     000C 2rrr                      1- 2017     	LCALL	_delay
                                    1- 2018     	.line	233, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 2019     	MOVIA	0x01
                                    1- 2020     	BANKSEL	r0x102C
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1- 2021     	MOVAR	r0x102C
     0010                           1- 2022     _00151_DS_:
                                    1- 2023     	BANKSEL	r0x102C
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 01rr                      1- 2024     	MOVR	r0x102C,W
                                    1- 2025     	BANKSEL	r0x102B
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 04rr                      1- 2026     	SUBAR	r0x102B,W
     0014 0803                      1- 2027     	BTRSS	STATUS,0
     0015 3rrr                      1- 2028     	LGOTO	_00153_DS_
                                    1- 2029     	.line	235, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 2030     	BSR	_ADMDbits,6
                                    1- 2031     	.line	236, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0017 2rrr                      1- 2032     	LCALL	_F_wait_eoc
                                    1- 2033     	.line	237, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 2034     	MOVIA	0x0f
     0019 10rr                      1- 2035     	ANDAR	_ADR,W
                                    1- 2036     ;;3	MOVAR	r0x102D
                                    1- 2037     	BANKSEL	_R_AIN2_DATA_LB
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 03rr                      1- 2038     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 2039     	.line	238, "main.c"; 	R_AIN2_DATA    += ADD; 
     001C 01rr                      1- 2040     	MOVR	_ADD,W
                                    1- 2041     	BANKSEL	r0x102D
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 00rr                      1- 2042     	MOVAR	r0x102D
                                    1- 2043     ;;1	CLRR	r0x102E
                                    1- 2044     ;;104	MOVR	r0x102D,W
                                    1- 2045     ;;102	MOVAR	r0x102F
     001F 2100                      1- 2046     	MOVIA	0x00
                                    1- 2047     	BANKSEL	r0x1030
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 00rr                      1- 2048     	MOVAR	r0x1030
                                    1- 2049     ;;103	MOVR	r0x102F,W
                                    1- 2050     	BANKSEL	r0x102D
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 01rr                      1- 2051     	MOVR	r0x102D,W
                                    1- 2052     	BANKSEL	_R_AIN2_DATA
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 03rr                      1- 2053     	ADDAR	_R_AIN2_DATA,F
                                    1- 2054     	BANKSEL	r0x1030
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 2055     	MOVR	r0x1030,W
     0028 0C03                      1- 2056     	BTRSC	STATUS,0
     0029 05rr                      1- 2057     	INCR	r0x1030,W
     002A 0D03                      1- 2058     	BTRSC	STATUS,2
     002B 3rrr                      1- 2059     	LGOTO	_00004_DS_
                                    1- 2060     	BANKSEL	_R_AIN2_DATA
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 03rr                      1- 2061     	ADDAR	(_R_AIN2_DATA + 1),F
     002E                           1- 2062     _00004_DS_:
                                    1- 2063     	.line	233, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 2064     	BANKSEL	r0x102C
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 05rr                      1- 2065     	INCR	r0x102C,F
     0030 3rrr                      1- 2066     	LGOTO	_00151_DS_
     0031                           1- 2067     _00153_DS_:
                                    1- 2068     	.line	240, "main.c"; 	}
                                    1- 2069     	RETURN	
     0031 0010                      3-   26 m1      ret
                                    1- 2070     ; exit point of _F_AIN2_Convert
                                    1- 2072     ;***
                                    1- 2073     ;  pBlock Stats: dbName = C
                                    1- 2074     ;***
                                    1- 2075     ;has an exit
                                    1- 2076     ;functions called:
                                    1- 2077     ;   _delay
                                    1- 2078     ;   _F_AIN2_Convert
                                    1- 2079     ;   _delay
                                    1- 2080     ;   _F_AIN2_Convert
                                    1- 2081     ;5 compiler assigned registers:
                                    1- 2082     ;   r0x1031
                                    1- 2083     ;   STK00
                                    1- 2084     ;   r0x1032
                                    1- 2085     ;   r0x1033
                                    1- 2086     ;   r0x1034
                                    1- 2087     ;; Starting pCode block
                                    1- 2088     .segment "code"; module=main, function=_checkBat
     0000                           1- 2090     _checkBat:
                                    1- 2091     ; 2 exit points
                                    1- 2092     	.line	214, "main.c"; 	PORTA &= 0xFB;
     0000 1Drr                      1- 2093     	BCR	_PORTA,2
                                    1- 2094     	.line	215, "main.c"; 	IOSTA |= 0x04;
     0001 001r                      1- 2095     	IOSTR	_IOSTA
                                    1- 2096     	BANKSEL	r0x1031
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 00rr                      1- 2097     	MOVAR	r0x1031
     0004 19rr                      1- 2098     	BSR	r0x1031,2
     0005 01rr                      1- 2099     	MOVR	r0x1031,W
     0006 000r                      1- 2100     	IOST	_IOSTA
                                    1- 2101     	.line	216, "main.c"; 	delay(100);
     0007 2164                      1- 2102     	MOVIA	0x64
     0008 00rr                      1- 2103     	MOVAR	STK00
     0009 2100                      1- 2104     	MOVIA	0x00
     000A 2rrr                      1- 2105     	LCALL	_delay
                                    1- 2106     	.line	217, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 2107     	BANKSEL	_R_AIN2_DATA_LB
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 02rr                      1- 2108     	CLRR	_R_AIN2_DATA_LB
                                    1- 2109     	BANKSEL	_R_AIN2_DATA
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 02rr                      1- 2110     	CLRR	_R_AIN2_DATA
     000F 02rr                      1- 2111     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 2112     	.line	218, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0010 2108                      1- 2113     	MOVIA	0x08
     0011 2rrr                      1- 2114     	LCALL	_F_AIN2_Convert
                                    1- 2115     	.line	219, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 2116     	BANKSEL	_R_AIN2_DATA
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 15rr                      1- 2117     	SWAPR	(_R_AIN2_DATA + 1),W
     0014 22F0                      1- 2118     	ANDIA	0xf0
     0015 00rr                      1- 2119     	MOVAR	(_R_AIN2_DATA + 1)
     0016 15rr                      1- 2120     	SWAPR	_R_AIN2_DATA,W
     0017 00rr                      1- 2121     	MOVAR	_R_AIN2_DATA
     0018 220F                      1- 2122     	ANDIA	0x0f
     0019 11rr                      1- 2123     	IORAR	(_R_AIN2_DATA + 1),F
     001A 12rr                      1- 2124     	XORAR	_R_AIN2_DATA,F
                                    1- 2125     	.line	220, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     001B 21F0                      1- 2126     	MOVIA	0xf0
                                    1- 2127     	BANKSEL	_R_AIN2_DATA_LB
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 10rr                      1- 2128     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 2129     	.line	221, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     001E 01rr                      1- 2130     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 2131     	BANKSEL	r0x1031
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 00rr                      1- 2132     	MOVAR	r0x1031
                                    1- 2133     ;;1	CLRR	r0x1032
                                    1- 2134     ;;101	MOVR	r0x1031,W
                                    1- 2135     ;;99	MOVAR	r0x1033
     0021 2100                      1- 2136     	MOVIA	0x00
                                    1- 2137     	BANKSEL	r0x1034
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 00rr                      1- 2138     	MOVAR	r0x1034
                                    1- 2139     ;;100	MOVR	r0x1033,W
                                    1- 2140     	BANKSEL	r0x1031
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1- 2141     	MOVR	r0x1031,W
                                    1- 2142     	BANKSEL	_R_AIN2_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 03rr                      1- 2143     	ADDAR	_R_AIN2_DATA,F
                                    1- 2144     	BANKSEL	r0x1034
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 01rr                      1- 2145     	MOVR	r0x1034,W
     002A 0C03                      1- 2146     	BTRSC	STATUS,0
     002B 05rr                      1- 2147     	INCR	r0x1034,W
     002C 0D03                      1- 2148     	BTRSC	STATUS,2
     002D 3rrr                      1- 2149     	LGOTO	_00005_DS_
                                    1- 2150     	BANKSEL	_R_AIN2_DATA
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 03rr                      1- 2151     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 2152     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0030                           1- 2153     _00005_DS_:
                                    1- 2154     	.line	222, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 8	
     0030 1C03                      1- 2155     	BCR	STATUS,0
                                    1- 2156     	BANKSEL	_R_AIN2_DATA
     0031 rrrr                      3-   71 m1      .banksel ram_address
     0032 13rr                      1- 2157     	RRR	(_R_AIN2_DATA + 1),F
     0033 13rr                      1- 2158     	RRR	_R_AIN2_DATA,F
                                    1- 2159     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0034 1C03                      1- 2160     	BCR	STATUS,0
     0035 13rr                      1- 2161     	RRR	(_R_AIN2_DATA + 1),F
     0036 13rr                      1- 2162     	RRR	_R_AIN2_DATA,F
                                    1- 2163     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0037 1C03                      1- 2164     	BCR	STATUS,0
     0038 13rr                      1- 2165     	RRR	(_R_AIN2_DATA + 1),F
     0039 13rr                      1- 2166     	RRR	_R_AIN2_DATA,F
                                    1- 2167     	.line	224, "main.c"; 	}
                                    1- 2168     	RETURN	
     003A 0010                      3-   26 m1      ret
                                    1- 2169     ; exit point of _checkBat
                                    1- 2171     ;***
                                    1- 2172     ;  pBlock Stats: dbName = C
                                    1- 2173     ;***
                                    1- 2174     ;has an exit
                                    1- 2175     ;functions called:
                                    1- 2176     ;   _delay
                                    1- 2177     ;   _delay
                                    1- 2178     ;1 compiler assigned register :
                                    1- 2179     ;   STK00
                                    1- 2180     ;; Starting pCode block
                                    1- 2181     .segment "code"; module=main, function=_initAD
     0000                           1- 2183     _initAD:
                                    1- 2184     ; 2 exit points
                                    1- 2185     	.line	190, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA2 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2182                      1- 2186     	MOVIA	0x82
     0001 00rr                      1- 2187     	MOVAR	_ADMD
                                    1- 2188     	.line	194, "main.c"; 	ADVREFH = C_Vrefh_3V;					// ADC reference high voltage is supplied by internal 3V  (Note: ADC clock freq. must be equal or less than 500KHz)
     0002 2101                      1- 2189     	MOVIA	0x01
     0003 00rr                      1- 2190     	MOVAR	_ADVREFH
                                    1- 2191     	.line	200, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0004 2110                      1- 2192     	MOVIA	0x10
     0005 00rr                      1- 2193     	MOVAR	_ADR
                                    1- 2194     	.line	202, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0006 2103                      1- 2195     	MOVIA	0x03
     0007 00rr                      1- 2196     	MOVAR	_ADCR
                                    1- 2197     	.line	205, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0008 1Arr                      1- 2198     	BSR	_ADMDbits,4
                                    1- 2199     	.line	206, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0009 2164                      1- 2200     	MOVIA	0x64
     000A 00rr                      1- 2201     	MOVAR	STK00
     000B 2100                      1- 2202     	MOVIA	0x00
     000C 2rrr                      1- 2203     	LCALL	_delay
                                    1- 2204     	.line	209, "main.c"; 	}
                                    1- 2205     	RETURN	
     000D 0010                      3-   26 m1      ret
                                    1- 2206     ; exit point of _initAD
                                    1- 2209     ;	code size estimation:
                                    1- 2210     ;	  810+  203 =  1013 instructions ( 2432 byte)
                                    1- 2212     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__divuint               Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    00000033
_00002_DS_              Label    00000042
_00003_DS_              Label    0000001B
_00004_DS_              Label    0000002E
_00005_DS_              Label    00000030
_00106_DS_              Label    0000002F
_00111_DS_              Label    00000032
_00113_DS_              Label    00000042
_00116_DS_              Label    0000003A
_00119_DS_              Label    0000004A
_00121_DS_              Label    0000004E
_00127_DS_              Label    00000020
_00128_DS_              Label    00000021
_00130_DS_              Label    0000002C
_00131_DS_              Label    0000002D
_00136_DS_              Label    0000001A
_00151_DS_              Label    00000010
_00153_DS_              Label    00000031
_00158_DS_              Label    00000000
_00165_DS_              Label    00000009
_00167_DS_              Label    0000001C
_00176_DS_              Label    00000013
_00182_DS_              Label    0000000A
_00184_DS_              Label    00000017
_00188_DS_              Label    00000085
_00191_DS_              Label    0000006F
_00192_DS_              Label    00000091
_00196_DS_              Label    000000A7
_00201_DS_              Label    000000AA
_00202_DS_              Label    000000AF
_00205_DS_              Label    000000CF
_00206_DS_              Label    000000D3
_00211_DS_              Label    000000C1
_00212_DS_              Label    000000D9
_00213_DS_              Label    000000DD
_00215_DS_              Label    000000BC
_00217_DS_              Label    00000123
_00220_DS_              Label    00000118
_00223_DS_              Label    0000010D
_00226_DS_              Label    00000102
_00229_DS_              Label    000000F7
_00232_DS_              Label    000000EC
_00233_DS_              Label    00000124
_00245_DS_              Label    00000134
_00247_DS_              Label    00000148
_00327_DS_              Label    00000007
_00331_DS_              Label    00000060
_00332_DS_              Label    00000076
_00333_DS_              Label    0000009B
_00335_DS_              Label    000000BA
_00336_DS_              Label    000000C8
_00337_DS_              Label    000000E8
_00338_DS_              Label    000000F3
_00339_DS_              Label    000000FE
_00340_DS_              Label    00000109
_00341_DS_              Label    00000114
_00342_DS_              Label    0000011F
_00343_DS_              Label    0000012E
_00361_DS_              Label    00000008
_00362_DS_              Label    00000009
_00371_DS_              Label    00000008
_00372_DS_              Label    00000009
_00381_DS_              Label    0000000E
_00382_DS_              Label    00000015
_00391_DS_              Label    00000010
_00393_DS_              Label    00000019
_00399_DS_              Label    00000020
_00403_DS_              Label    00000033
_00404_DS_              Label    0000003D
_00406_DS_              Label    00000057
_00409_DS_              Label    0000004A
_00414_DS_              Label    0000005B
_00416_DS_              Label    0000000A
_00419_DS_              Label    00000063
_00447_DS_              Label    0000002F
_00448_DS_              Label    0000003A
_00449_DS_              Label    00000044
_00450_DS_              Label    00000051
_00458_DS_              Label    00000013
_00460_DS_              Label    0000000B
_00461_DS_              Label    00000015
_00462_DS_              Label    00000016
_00468_DS_              Label    00000029
_00471_DS_              Label    00000021
_00472_DS_              Label    0000002C
_00474_DS_              Label    00000034
_00479_DS_              Label    0000004D
_00499_DS_              Label    00000046
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADC_num_value          Label    00000000
_ADC_work_value         Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkBat               Label    00000000
_checkTime              Label    00000000
_chrgCount              Label    00000000
_chrgCtr                Label    00000000
_chrgFlag               Label    00000000
_chrgPWM                Label    00000000
_chrgTime               Label    00000000
_CMPCR                  Label    00000000
_count1s                Label    00000000
_count900s              Label    00000000
_delay                  Label    00000000
_doublePressFlag        Label    00000000
_duty                   Label    00000000
_duty1                  Label    00000000
_duty5                  Label    00000000
_duty7                  Label    00000000
_F_AIN2_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IntFlag                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyCtr                 Label    00000000
_keyRead                Label    00000000
_LED1ON                 Label    00000000
_led2count              Label    00000000
_LED2ON                 Label    00000000
_ledCount               Label    00000000
_ledCount2              Label    00000000
_LEDOFF                 Label    00000000
_ledStep                Label    00000000
_loadFlag               Label    00000000
_longPressFlag          Label    00000000
_main                   Label    00000000
_motorCount             Label    00000000
_motorPWM               Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_R_AIN2_DATA            Label    00000000
_R_AIN2_DATA_LB         Label    00000000
_resultTime             Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_setLed1PWM             Label    00000000
_setLed2PWM             Label    00000000
_sleepDelay             Label    00000000
_sleepTime              Label    00000000
_STATUS                 Label    00000000
_stopFlag               Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_timeCountKey           Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    0000005F
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1025                 Label    00000000
r0x1026                 Label    00000000
r0x1027                 Label    00000000
r0x1028                 Label    00000000
r0x1029                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x1030                 Label    00000000
r0x1031                 Label    00000000
r0x1034                 Label    00000000
r0x1036                 Label    00000000
r0x1037                 Label    00000000
r0x1038                 Label    00000000
r0x1039                 Label    00000000
r0x103A                 Label    00000000
r0x103B                 Label    00000000
r0x103C                 Label    00000000
r0x103D                 Label    00000000
r0x103E                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
