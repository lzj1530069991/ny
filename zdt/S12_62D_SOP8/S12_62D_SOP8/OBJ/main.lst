
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_PORTAbits
                                    1-   15     	extern	_PORTBbits
                                    1-   16     	extern	_PCONbits
                                    1-   17     	extern	_BWUCONbits
                                    1-   18     	extern	_ABPLCONbits
                                    1-   19     	extern	_BPHCONbits
                                    1-   20     	extern	_INTEbits
                                    1-   21     	extern	_INTFbits
                                    1-   22     	extern	_ADMDbits
                                    1-   23     	extern	_ADRbits
                                    1-   24     	extern	_ADVREFHbits
                                    1-   25     	extern	_ADCRbits
                                    1-   26     	extern	_AWUCONbits
                                    1-   27     	extern	_PACONbits
                                    1-   28     	extern	_INTEDGbits
                                    1-   29     	extern	_ANAENbits
                                    1-   30     	extern	_RFCbits
                                    1-   31     	extern	_INTE2bits
                                    1-   32     	extern	_INDF
                                    1-   33     	extern	_TMR0
                                    1-   34     	extern	_PCL
                                    1-   35     	extern	_STATUS
                                    1-   36     	extern	_FSR
                                    1-   37     	extern	_PORTA
                                    1-   38     	extern	_PORTB
                                    1-   39     	extern	_PCON
                                    1-   40     	extern	_BWUCON
                                    1-   41     	extern	_PCHBUF
                                    1-   42     	extern	_ABPLCON
                                    1-   43     	extern	_BPHCON
                                    1-   44     	extern	_INTE
                                    1-   45     	extern	_INTF
                                    1-   46     	extern	_ADMD
                                    1-   47     	extern	_ADR
                                    1-   48     	extern	_ADD
                                    1-   49     	extern	_ADVREFH
                                    1-   50     	extern	_ADCR
                                    1-   51     	extern	_AWUCON
                                    1-   52     	extern	_PACON
                                    1-   53     	extern	_INTEDG
                                    1-   54     	extern	_TMRH
                                    1-   55     	extern	_ANAEN
                                    1-   56     	extern	_RFC
                                    1-   57     	extern	_TM3RH
                                    1-   58     	extern	_INTE2
                                    1-   59     	extern	_TMR1
                                    1-   60     	extern	_T1CR1
                                    1-   61     	extern	_T1CR2
                                    1-   62     	extern	_PWM1DUTY
                                    1-   63     	extern	_PS1CV
                                    1-   64     	extern	_BZ1CR
                                    1-   65     	extern	_IRCR
                                    1-   66     	extern	_TBHP
                                    1-   67     	extern	_TBHD
                                    1-   68     	extern	_TMR2
                                    1-   69     	extern	_T2CR1
                                    1-   70     	extern	_T2CR2
                                    1-   71     	extern	_PWM2DUTY
                                    1-   72     	extern	_PS2CV
                                    1-   73     	extern	_BZ2CR
                                    1-   74     	extern	_OSCCR
                                    1-   75     	extern	_TMR3
                                    1-   76     	extern	_T3CR1
                                    1-   77     	extern	_T3CR2
                                    1-   78     	extern	_PWM3DUTY
                                    1-   79     	extern	_PS3CV
                                    1-   80     	extern	_BZ3CR
                                    1-   81     	extern	_IOSTA
                                    1-   82     	extern	_IOSTB
                                    1-   83     	extern	_APHCON
                                    1-   84     	extern	_PS0CV
                                    1-   85     	extern	_BODCON
                                    1-   86     	extern	_CMPCR
                                    1-   87     	extern	_PCON1
                                    1-   88     	extern	_T0MD
                                    1-   89     	extern	___sdcc_saved_fsr
                                    1-   90     	extern	___sdcc_saved_stk00
                                    1-   91     	extern	___sdcc_saved_stk01
                                    1-   92     	extern	__nyc_ny8_startup
                                    1-   93     ;--------------------------------------------------------
                                    1-   94     ; global declarations
                                    1-   95     ;--------------------------------------------------------
                                    1-   96     	extern	_gotoSleep
                                    1-   97     	extern	_keyCtr
                                    1-   98     	extern	_keyRead
                                    1-   99     	extern	_chrgCtr
                                    1-  100     	extern	_setLed2PWM
                                    1-  101     	extern	_setLed1PWM
                                    1-  102     	extern	_motorPWM
                                    1-  103     	extern	_chrgPWM
                                    1-  104     	extern	_LEDOFF
                                    1-  105     	extern	_LED2ON
                                    1-  106     	extern	_LED1ON
                                    1-  107     	extern	_workCtr
                                    1-  108     	extern	_delay
                                    1-  109     	extern	_F_wait_eoc
                                    1-  110     	extern	_F_AIN2_Convert
                                    1-  111     	extern	_checkBat
                                    1-  112     	extern	_initAD
                                    1-  113     	extern	_isr
                                    1-  114     	extern	_main
                                    1-  115     	extern	_longPressFlag
                                    1-  116     	extern	_IntFlag
                                    1-  117     	extern	_chrgFlag
                                    1-  118     	extern	_doublePressFlag
                                    1-  119     	extern	_intCount
                                    1-  120     	extern	_count1s
                                    1-  121     	extern	_count900s
                                    1-  122     	extern	_keyCount
                                    1-  123     	extern	_sleepDelay
                                    1-  124     	extern	_workStep
                                    1-  125     	extern	_chrgCount
                                    1-  126     	extern	_duty
                                    1-  127     	extern	_led2count
                                    1-  128     	extern	_ledCount
                                    1-  129     	extern	_ledCount2
                                    1-  130     	extern	_duty1
                                    1-  131     	extern	_duty5
                                    1-  132     	extern	_duty7
                                    1-  133     	extern	_ledStep
                                    1-  134     	extern	_timeCountKey
                                    1-  135     	extern	_R_AIN2_DATA
                                    1-  136     	extern	_R_AIN2_DATA_LB
                                    1-  137     	extern	_ADC_work_value
                                    1-  138     	extern	_ADC_num_value
                                    1-  139     	extern	_sleepTime
                                    1-  140     	extern	_stopFlag
                                    1-  141     	extern	_chrgTime
                                    1-  142     	extern	_checkTime
                                    1-  143     	extern	_loadFlag
                                    1-  144     	extern	_resultTime
                                    1-  145     	extern	_motorCount
                                    1-  147     	extern PSAVE
                                    1-  148     	extern SSAVE
                                    1-  149     	extern WSAVE
                                    1-  150     	extern STK02
                                    1-  151     	extern STK01
                                    1-  152     	extern STK00
                                    1-  154     .segment "uninit", 0x20000040
 20000040                           1-  155     PSAVE:
                                    1-  156     	.res 1
 20000041                           1-  157     SSAVE:
                                    1-  158     	.res 1
 20000042                           1-  159     WSAVE:
                                    1-  160     	.res 1
 20000043                           1-  161     STK02:
                                    1-  162     	.res 1
 20000044                           1-  163     STK01:
                                    1-  164     	.res 1
 20000045                           1-  165     STK00:
                                    1-  166     	.res 1
                                    1-  168     ;--------------------------------------------------------
                                    1-  169     ; global definitions
                                    1-  170     ;--------------------------------------------------------
                                    1-  171     ;--------------------------------------------------------
                                    1-  172     ; absolute symbol definitions
                                    1-  173     ;--------------------------------------------------------
                                    1-  174     ;--------------------------------------------------------
                                    1-  175     ; compiler-defined variables
                                    1-  176     ;--------------------------------------------------------
                                    1-  177     .segment "uninit"
     0000                           1-  178     r0x103C:
                                    1-  179     	.res	1
                                    1-  180     .segment "uninit"
     0000                           1-  181     r0x1031:
                                    1-  182     	.res	1
                                    1-  183     .segment "uninit"
     0000                           1-  184     r0x1034:
                                    1-  185     	.res	1
                                    1-  186     .segment "uninit"
     0000                           1-  187     r0x102B:
                                    1-  188     	.res	1
                                    1-  189     .segment "uninit"
     0000                           1-  190     r0x102C:
                                    1-  191     	.res	1
                                    1-  192     .segment "uninit"
     0000                           1-  193     r0x102D:
                                    1-  194     	.res	1
                                    1-  195     .segment "uninit"
     0000                           1-  196     r0x1030:
                                    1-  197     	.res	1
                                    1-  198     .segment "uninit"
     0000                           1-  199     r0x1028:
                                    1-  200     	.res	1
                                    1-  201     .segment "uninit"
     0000                           1-  202     r0x1027:
                                    1-  203     	.res	1
                                    1-  204     .segment "uninit"
     0000                           1-  205     r0x1029:
                                    1-  206     	.res	1
                                    1-  207     .segment "uninit"
     0000                           1-  208     r0x102A:
                                    1-  209     	.res	1
                                    1-  210     .segment "uninit"
     0000                           1-  211     r0x103A:
                                    1-  212     	.res	1
                                    1-  213     .segment "uninit"
     0000                           1-  214     r0x103B:
                                    1-  215     	.res	1
                                    1-  216     .segment "uninit"
     0000                           1-  217     r0x1036:
                                    1-  218     	.res	1
                                    1-  219     .segment "uninit"
     0000                           1-  220     r0x1025:
                                    1-  221     	.res	1
                                    1-  222     .segment "uninit"
     0000                           1-  223     r0x1039:
                                    1-  224     	.res	1
                                    1-  225     .segment "uninit"
     0000                           1-  226     r0x1038:
                                    1-  227     	.res	1
                                    1-  228     .segment "uninit"
     0000                           1-  229     r0x1037:
                                    1-  230     	.res	1
                                    1-  231     .segment "uninit"
     0000                           1-  232     r0x1026:
                                    1-  233     	.res	1
                                    1-  234     ;--------------------------------------------------------
                                    1-  235     ; initialized data
                                    1-  236     ;--------------------------------------------------------
                                    1-  238     .segment "idata"
     0000                           1-  239     _longPressFlag:
     0000 0000                      1-  240     	dw	0x00
                                    1-  244     .segment "idata"
     0000                           1-  245     _IntFlag:
     0000 0000                      1-  246     	dw	0x00
                                    1-  250     .segment "idata"
     0000                           1-  251     _chrgFlag:
     0000 0000                      1-  252     	dw	0x00
                                    1-  256     .segment "idata"
     0000                           1-  257     _doublePressFlag:
     0000 0000                      1-  258     	dw	0x00
                                    1-  262     .segment "idata"
     0000                           1-  263     _intCount:
     0000 0000                      1-  264     	dw	0x00
                                    1-  268     .segment "idata"
     0000                           1-  269     _count1s:
     0000 0000                      1-  270     	dw	0x00
                                    1-  274     .segment "idata"
     0000                           1-  275     _count900s:
     0000 0000 0000                 1-  276     	dw	0x00, 0x00
                                    1-  280     .segment "idata"
     0000                           1-  281     _keyCount:
     0000 0000                      1-  282     	dw	0x00
                                    1-  286     .segment "idata"
     0000                           1-  287     _sleepDelay:
     0000 0000                      1-  288     	dw	0x00
                                    1-  292     .segment "idata"
     0000                           1-  293     _workStep:
     0000 0000                      1-  294     	dw	0x00
                                    1-  298     .segment "idata"
     0000                           1-  299     _chrgCount:
     0000 0000                      1-  300     	dw	0x00
                                    1-  304     .segment "idata"
     0000                           1-  305     _duty:
     0000 0000                      1-  306     	dw	0x00
                                    1-  310     .segment "idata"
     0000                           1-  311     _led2count:
     0000 0000 0000                 1-  312     	dw	0x00, 0x00
                                    1-  316     .segment "idata"
     0000                           1-  317     _ledCount:
     0000 0000                      1-  318     	dw	0x00
                                    1-  322     .segment "idata"
     0000                           1-  323     _ledCount2:
     0000 0000                      1-  324     	dw	0x00
                                    1-  328     .segment "idata"
     0000                           1-  329     _duty1:
     0000 0000                      1-  330     	dw	0x00
                                    1-  334     .segment "idata"
     0000                           1-  335     _duty5:
     0000 0000                      1-  336     	dw	0x00
                                    1-  340     .segment "idata"
     0000                           1-  341     _duty7:
     0000 0000                      1-  342     	dw	0x00
                                    1-  346     .segment "idata"
     0000                           1-  347     _ledStep:
     0000 0000                      1-  348     	dw	0x00
                                    1-  352     .segment "idata"
     0000                           1-  353     _timeCountKey:
     0000 0000 0000                 1-  354     	dw	0x00, 0x00
                                    1-  358     .segment "idata"
     0000                           1-  359     _R_AIN2_DATA:
     0000 0000 0000                 1-  360     	dw	0x00, 0x00
                                    1-  364     .segment "idata"
     0000                           1-  365     _R_AIN2_DATA_LB:
     0000 0000                      1-  366     	dw	0x00
                                    1-  370     .segment "idata"
     0000                           1-  371     _ADC_work_value:
     0000 0000 0000                 1-  372     	dw	0x00, 0x00
                                    1-  376     .segment "idata"
     0000                           1-  377     _ADC_num_value:
     0000 0000 0000                 1-  378     	dw	0x00, 0x00
                                    1-  382     .segment "idata"
     0000                           1-  383     _sleepTime:
     0000 0000                      1-  384     	dw	0x00
                                    1-  388     .segment "idata"
     0000                           1-  389     _stopFlag:
     0000 0000                      1-  390     	dw	0x00
                                    1-  394     .segment "idata"
     0000                           1-  395     _chrgTime:
     0000 0000                      1-  396     	dw	0x00
                                    1-  400     .segment "idata"
     0000                           1-  401     _checkTime:
     0000 0000                      1-  402     	dw	0x00
                                    1-  406     .segment "idata"
     0000                           1-  407     _loadFlag:
     0000 0000                      1-  408     	dw	0x00
                                    1-  412     .segment "idata"
     0000                           1-  413     _resultTime:
     0000 0000                      1-  414     	dw	0x00
                                    1-  418     .segment "idata"
     0000                           1-  419     _motorCount:
     0000 0000                      1-  420     	dw	0x00
                                    1-  423     ;--------------------------------------------------------
                                    1-  424     ; overlayable items in internal ram 
                                    1-  425     ;--------------------------------------------------------
                                    1-  426     ;	udata_ovr
                                    1-  427     ;--------------------------------------------------------
                                    1-  428     ; reset vector 
                                    1-  429     ;--------------------------------------------------------
                                    1-  430     ORG	0x0000
     0000 3rrr                      1-  431     	LGOTO	__nyc_ny8_startup
                                    1-  432     ;--------------------------------------------------------
                                    1-  433     ; interrupt and initialization code
                                    1-  434     ;--------------------------------------------------------
                                    1-  435     ORG 0x0008
                                    1-  436     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  438     .segment "code"
     0000                           1-  439     __sdcc_interrupt:
                                    1-  440     ;***
                                    1-  441     ;  pBlock Stats: dbName = I
                                    1-  442     ;***
                                    1-  443     ;functions called:
                                    1-  444     ;   _setLed2PWM
                                    1-  445     ;   _setLed1PWM
                                    1-  446     ;   _setLed2PWM
                                    1-  447     ;   _setLed1PWM
                                    1-  448     ;   _setLed2PWM
                                    1-  449     ;   _setLed1PWM
                                    1-  450     ;   _setLed2PWM
                                    1-  451     ;   _setLed1PWM
                                    1-  452     ;3 compiler assigned registers:
                                    1-  453     ;   STK00
                                    1-  454     ;   STK01
                                    1-  455     ;   r0x103C
                                    1-  456     ;; Starting pCode block
     0000                           1-  457     _isr:
                                    1-  458     ; 0 exit points
                                    1-  459     	.line	74, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  460     	MOVAR	WSAVE
     0001 1503                      1-  461     	SWAPR	STATUS,W
     0002 0283                      1-  462     	CLRR	STATUS
     0003 00rr                      1-  463     	MOVAR	SSAVE
     0004 010A                      1-  464     	MOVR	PCHBUF,W
     0005 028A                      1-  465     	CLRR	PCHBUF
     0006 00rr                      1-  466     	MOVAR	PSAVE
     0007 0104                      1-  467     	MOVR	FSR,W
                                    1-  468     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  469     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  470     	MOVR	STK00,W
                                    1-  471     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  472     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  473     	MOVR	STK01,W
                                    1-  474     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  475     	MOVAR	___sdcc_saved_stk01
                                    1-  476     	.line	76, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  477     	BTRSS	_INTFbits,0
                                    1-  478     	MGOTO	_00119_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  479     	.line	78, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  480     	MOVIA	0x37
     0013 03rr                      1-  481     	ADDAR	_TMR0,F
                                    1-  482     	.line	79, "main.c"; 	intCount++;
                                    1-  483     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  484     	INCR	_intCount,F
                                    1-  485     	.line	81, "main.c"; 	if(++intCount >= 100)
     0016 05rr                      1-  486     	INCR	_intCount,F
                                    1-  487     ;;unsigned compare: left < lit (0x64=100), size=1
     0017 2164                      1-  488     	MOVIA	0x64
     0018 04rr                      1-  489     	SUBAR	_intCount,W
     0019 0803                      1-  490     	BTRSS	STATUS,0
                                    1-  491     	MGOTO	_00111_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  492     	.line	83, "main.c"; 	intCount = 0;
     001B 02rr                      1-  493     	CLRR	_intCount
                                    1-  494     	.line	84, "main.c"; 	IntFlag = 1;
     001C 2101                      1-  495     	MOVIA	0x01
                                    1-  496     	BANKSEL	_IntFlag
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 00rr                      1-  497     	MOVAR	_IntFlag
                                    1-  498     	.line	85, "main.c"; 	if(++count1s >= 100)
                                    1-  499     	BANKSEL	_count1s
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1-  500     	INCR	_count1s,F
                                    1-  501     ;;unsigned compare: left < lit (0x64=100), size=1
     0021 2164                      1-  502     	MOVIA	0x64
     0022 04rr                      1-  503     	SUBAR	_count1s,W
     0023 0803                      1-  504     	BTRSS	STATUS,0
                                    1-  505     	MGOTO	_00111_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  506     	.line	87, "main.c"; 	count1s = 0;
     0025 02rr                      1-  507     	CLRR	_count1s
                                    1-  508     	.line	88, "main.c"; 	if(workStep)
                                    1-  509     	BANKSEL	_workStep
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1-  510     	MOVR	_workStep,W
     0028 0D03                      1-  511     	BTRSC	STATUS,2
                                    1-  512     	MGOTO	_00106_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  513     	.line	90, "main.c"; 	++count900s;
                                    1-  514     	BANKSEL	_count900s
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 05rr                      1-  515     	INCR	_count900s,F
     002C 0D03                      1-  516     	BTRSC	STATUS,2
     002D 05rr                      1-  517     	INCR	(_count900s + 1),F
                                    1-  518     	MGOTO	_00111_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1-  519     _00106_DS_:
                                    1-  520     	.line	94, "main.c"; 	count900s = 0;
                                    1-  521     	BANKSEL	_count900s
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 02rr                      1-  522     	CLRR	_count900s
     0031 02rr                      1-  523     	CLRR	(_count900s + 1)
     0032                           1-  524     _00111_DS_:
                                    1-  525     	.line	98, "main.c"; 	if(ledStep == 2)
                                    1-  526     	BANKSEL	_ledStep
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 01rr                      1-  527     	MOVR	_ledStep,W
     0034 2402                      1-  528     	XORIA	0x02
     0035 0903                      1-  529     	BTRSS	STATUS,2
                                    1-  530     	MGOTO	_00116_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  531     	.line	101, "main.c"; 	setLed2PWM();
                                    1-  532     	MCALL	_setLed2PWM
     0037 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  533     	.line	102, "main.c"; 	setLed1PWM();
                                    1-  534     	MCALL	_setLed1PWM
     0038 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  535     	MGOTO	_00119_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
     003A                           1-  536     _00116_DS_:
                                    1-  537     	.line	105, "main.c"; 	else if(ledStep == 1)
                                    1-  538     	BANKSEL	_ledStep
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1-  539     	MOVR	_ledStep,W
     003C 2401                      1-  540     	XORIA	0x01
     003D 0903                      1-  541     	BTRSS	STATUS,2
                                    1-  542     	MGOTO	_00113_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  543     	.line	108, "main.c"; 	setLed2PWM();
                                    1-  544     	MCALL	_setLed2PWM
     003F 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  545     	.line	109, "main.c"; 	setLed1PWM();
                                    1-  546     	MCALL	_setLed1PWM
     0040 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  547     	MGOTO	_00119_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042                           1-  548     _00113_DS_:
                                    1-  549     	.line	113, "main.c"; 	PORTA &= 0xEA;
     0042 21EA                      1-  550     	MOVIA	0xea
     0043 10rr                      1-  551     	ANDAR	_PORTA,F
                                    1-  552     	.line	114, "main.c"; 	IOSTA |= 0x01;
     0044 001r                      1-  553     	IOSTR	_IOSTA
                                    1-  554     	BANKSEL	r0x103C
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 00rr                      1-  555     	MOVAR	r0x103C
     0047 18rr                      1-  556     	BSR	r0x103C,0
     0048 01rr                      1-  557     	MOVR	r0x103C,W
     0049 000r                      1-  558     	IOST	_IOSTA
     004A                           1-  559     _00119_DS_:
                                    1-  560     	.line	117, "main.c"; 	if(INTFbits.PABIF)
     004A 08rr                      1-  561     	BTRSS	_INTFbits,1
                                    1-  562     	MGOTO	_00121_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  563     	.line	119, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     004C 21FD                      1-  564     	MOVIA	0xfd
     004D 00rr                      1-  565     	MOVAR	_INTF
     004E                           1-  566     _00121_DS_:
                                    1-  567     	.line	122, "main.c"; 	INTF = 0;
     004E 02rr                      1-  568     	CLRR	_INTF
                                    1-  569     	.line	123, "main.c"; 	}
                                    1-  570     	BANKSEL	___sdcc_saved_stk01
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 01rr                      1-  571     	MOVR	___sdcc_saved_stk01,W
     0051 00rr                      1-  572     	MOVAR	STK01
                                    1-  573     	BANKSEL	___sdcc_saved_stk00
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1-  574     	MOVR	___sdcc_saved_stk00,W
     0054 00rr                      1-  575     	MOVAR	STK00
                                    1-  576     	BANKSEL	___sdcc_saved_fsr
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 01rr                      1-  577     	MOVR	___sdcc_saved_fsr,W
     0057 0084                      1-  578     	MOVAR	FSR
     0058 01rr                      1-  579     	MOVR	PSAVE,W
     0059 008A                      1-  580     	MOVAR	PCHBUF
     005A 0283                      1-  581     	CLRR	STATUS
     005B 15rr                      1-  582     	SWAPR	SSAVE,W
     005C 0083                      1-  583     	MOVAR	STATUS
     005D 15rr                      1-  584     	SWAPR	WSAVE,F
     005E 15rr                      1-  585     	SWAPR	WSAVE,W
     005F                           1-  586     END_OF_INTERRUPT:
     005F 0011                      1-  587     	RETIE	
                                    1-  589     ;--------------------------------------------------------
                                    1-  590     ; code
                                    1-  591     ;--------------------------------------------------------
                                    1-  592     ;***
                                    1-  593     ;  pBlock Stats: dbName = M
                                    1-  594     ;***
                                    1-  595     ;has an exit
                                    1-  596     ;functions called:
                                    1-  597     ;   _initAD
                                    1-  598     ;   _chrgPWM
                                    1-  599     ;   _chrgCtr
                                    1-  600     ;   _keyCtr
                                    1-  601     ;   _workCtr
                                    1-  602     ;   _initAD
                                    1-  603     ;   _chrgPWM
                                    1-  604     ;   _chrgCtr
                                    1-  605     ;   _keyCtr
                                    1-  606     ;   _workCtr
                                    1-  607     ;; Starting pCode block
                                    1-  608     .segment "code"; module=main, function=_main
     0000                           1-  610     _main:
                                    1-  611     ; 2 exit points
                                    1-  612     	.line	128, "main.c"; 	DISI();
     0000 0013                      1-  613     	DISI
                                    1-  614     	.line	129, "main.c"; 	IOSTA = C_PA5_Input | C_PA2_Input;
     0001 2124                      1-  615     	MOVIA	0x24
     0002 000r                      1-  616     	IOST	_IOSTA
                                    1-  617     	.line	130, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1-  618     	CLRA	
     0004 000r                      1-  619     	IOST	_IOSTB
                                    1-  620     	.line	131, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1-  621     	CLRR	_PORTB
                                    1-  622     	.line	132, "main.c"; 	PORTA = 0x00;
     0006 02rr                      1-  623     	CLRR	_PORTA
                                    1-  624     	.line	133, "main.c"; 	APHCON = 0xDF;
     0007 21DF                      1-  625     	MOVIA	0xdf
     0008 000r                      1-  626     	IOST	_APHCON
                                    1-  627     	.line	134, "main.c"; 	ABPLCON = 0xFF;
     0009 21FF                      1-  628     	MOVIA	0xff
     000A 00rr                      1-  629     	MOVAR	_ABPLCON
                                    1-  630     	.line	136, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000B 2101                      1-  631     	MOVIA	0x01
     000C 00rr                      1-  632     	MOVAR	_INTE
                                    1-  633     	.line	138, "main.c"; 	PCON1 = C_TMR0_Dis;
     000D 0200                      1-  634     	CLRA	
     000E 000r                      1-  635     	IOST	_PCON1
                                    1-  636     	.line	140, "main.c"; 	TMR0 = 55;
     000F 2137                      1-  637     	MOVIA	0x37
     0010 00rr                      1-  638     	MOVAR	_TMR0
                                    1-  639     	.line	141, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0011 2101                      1-  640     	MOVIA	0x01
     0012 0003                      1-  641     	T0MD	
                                    1-  642     	.line	143, "main.c"; 	PCON1 = C_TMR0_En;
     0013 000r                      1-  643     	IOST	_PCON1
                                    1-  644     	.line	145, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR,PA5关闭上拉
     0014 2198                      1-  645     	MOVIA	0x98
     0015 00rr                      1-  646     	MOVAR	_PCON
                                    1-  647     	.line	147, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0016 2101                      1-  648     	MOVIA	0x01
     0017 000r                      1-  649     	IOST	_PCON1
                                    1-  650     	.line	148, "main.c"; 	ENI();
     0018 0004                      1-  651     	ENI
                                    1-  652     	.line	149, "main.c"; 	initAD();						// PA3 & PA2 output high
                                    1-  653     	MCALL	_initAD
     0019 2rrr                      3-   66 m1      LCALL rom_address
     001A                           1-  654     _00136_DS_:
                                    1-  655     	.line	153, "main.c"; 	if(chrgFlag)
                                    1-  656     	BANKSEL	_chrgFlag
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 01rr                      1-  657     	MOVR	_chrgFlag,W
     001C 0D03                      1-  658     	BTRSC	STATUS,2
                                    1-  659     	MGOTO	_00127_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  660     	.line	155, "main.c"; 	chrgPWM();
                                    1-  661     	MCALL	_chrgPWM
     001E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  662     	.line	157, "main.c"; 	workStep == 0;
                                    1-  663     	MGOTO	_00128_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1-  664     _00127_DS_:
                                    1-  665     	.line	161, "main.c"; 	PORTB &= 0xF7;
     0020 1Drr                      1-  666     	BCR	_PORTB,3
     0021                           1-  667     _00128_DS_:
                                    1-  668     	.line	166, "main.c"; 	if(workStep == 1 && stopFlag == 0)
                                    1-  669     	BANKSEL	_workStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1-  670     	MOVR	_workStep,W
     0023 2401                      1-  671     	XORIA	0x01
     0024 0903                      1-  672     	BTRSS	STATUS,2
                                    1-  673     	MGOTO	_00130_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  674     	BANKSEL	_stopFlag
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1-  675     	MOVR	_stopFlag,W
     0028 0903                      1-  676     	BTRSS	STATUS,2
                                    1-  677     	MGOTO	_00130_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  678     	.line	168, "main.c"; 	PORTA |= 0x80;
     002A 1Brr                      1-  679     	BSR	_PORTA,7
                                    1-  680     	MGOTO	_00131_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C                           1-  681     _00130_DS_:
                                    1-  682     	.line	172, "main.c"; 	PORTA &= 0x7F;
     002C 1Frr                      1-  683     	BCR	_PORTA,7
     002D                           1-  684     _00131_DS_:
                                    1-  685     	.line	175, "main.c"; 	CLRWDT();
     002D 0002                      1-  686     	clrwdt
                                    1-  687     	.line	176, "main.c"; 	if(!IntFlag)
                                    1-  688     	BANKSEL	_IntFlag
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1-  689     	MOVR	_IntFlag,W
     0030 0D03                      1-  690     	BTRSC	STATUS,2
                                    1-  691     	MGOTO	_00136_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  692     	.line	178, "main.c"; 	IntFlag = 0; 
     0032 02rr                      1-  693     	CLRR	_IntFlag
                                    1-  694     	.line	179, "main.c"; 	chrgCtr();
                                    1-  695     	MCALL	_chrgCtr
     0033 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  696     	.line	180, "main.c"; 	keyCtr();
                                    1-  697     	MCALL	_keyCtr
     0034 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  698     	.line	181, "main.c"; 	workCtr();
                                    1-  699     	MCALL	_workCtr
     0035 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  700     	MGOTO	_00136_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  701     	.line	183, "main.c"; 	}
                                    1-  702     	RETURN	
     0037 0010                      3-   40 m1      ret
                                    1-  703     ; exit point of _main
                                    1-  705     ;***
                                    1-  706     ;  pBlock Stats: dbName = C
                                    1-  707     ;***
                                    1-  708     ;has an exit
                                    1-  709     ;functions called:
                                    1-  710     ;   _LEDOFF
                                    1-  711     ;   _LEDOFF
                                    1-  712     ;1 compiler assigned register :
                                    1-  713     ;   r0x1026
                                    1-  714     ;; Starting pCode block
                                    1-  715     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  717     _gotoSleep:
                                    1-  718     ; 2 exit points
                                    1-  719     	.line	579, "main.c"; 	LEDOFF();
                                    1-  720     	MCALL	_LEDOFF
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  721     	.line	580, "main.c"; 	duty1 = 0;
                                    1-  722     	BANKSEL	_duty1
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 02rr                      1-  723     	CLRR	_duty1
                                    1-  724     	.line	581, "main.c"; 	led2count = 0;
                                    1-  725     	BANKSEL	_led2count
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1-  726     	CLRR	_led2count
     0005 02rr                      1-  727     	CLRR	(_led2count + 1)
                                    1-  728     	.line	582, "main.c"; 	ADC_work_value = 0;
                                    1-  729     	BANKSEL	_ADC_work_value
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1-  730     	CLRR	_ADC_work_value
     0008 02rr                      1-  731     	CLRR	(_ADC_work_value + 1)
                                    1-  732     	.line	583, "main.c"; 	ADC_num_value = 0;
                                    1-  733     	BANKSEL	_ADC_num_value
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 02rr                      1-  734     	CLRR	_ADC_num_value
     000B 02rr                      1-  735     	CLRR	(_ADC_num_value + 1)
                                    1-  736     	.line	584, "main.c"; 	stopFlag = 0;
                                    1-  737     	BANKSEL	_stopFlag
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 02rr                      1-  738     	CLRR	_stopFlag
                                    1-  739     	.line	585, "main.c"; 	sleepTime = 0;
                                    1-  740     	BANKSEL	_sleepTime
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1-  741     	CLRR	_sleepTime
                                    1-  742     	.line	586, "main.c"; 	workStep = 0;
                                    1-  743     	BANKSEL	_workStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 02rr                      1-  744     	CLRR	_workStep
                                    1-  745     	.line	587, "main.c"; 	count900s = 0;
                                    1-  746     	BANKSEL	_count900s
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 02rr                      1-  747     	CLRR	_count900s
     0014 02rr                      1-  748     	CLRR	(_count900s + 1)
                                    1-  749     	.line	588, "main.c"; 	PORTA &= 0X6F;
     0015 216F                      1-  750     	MOVIA	0x6f
     0016 10rr                      1-  751     	ANDAR	_PORTA,F
                                    1-  752     	.line	589, "main.c"; 	IOSTA |= 0x05;
     0017 001r                      1-  753     	IOSTR	_IOSTA
                                    1-  754     	BANKSEL	r0x1026
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 00rr                      1-  755     	MOVAR	r0x1026
     001A 2105                      1-  756     	MOVIA	0x05
     001B 11rr                      1-  757     	IORAR	r0x1026,F
     001C 01rr                      1-  758     	MOVR	r0x1026,W
     001D 000r                      1-  759     	IOST	_IOSTA
                                    1-  760     	.line	590, "main.c"; 	AWUCON = 0x21;
     001E 2121                      1-  761     	MOVIA	0x21
     001F 00rr                      1-  762     	MOVAR	_AWUCON
                                    1-  763     	.line	591, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0020 210B                      1-  764     	MOVIA	0x0b
     0021 00rr                      1-  765     	MOVAR	_INTE
                                    1-  766     	.line	592, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0022 2118                      1-  767     	MOVIA	0x18
     0023 00rr                      1-  768     	MOVAR	_PCON
                                    1-  769     	.line	593, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0024 02rr                      1-  770     	CLRR	_INTF
                                    1-  771     	.line	594, "main.c"; 	CLRWDT();
     0025 0002                      1-  772     	clrwdt
                                    1-  773     	.line	595, "main.c"; 	SLEEP();
     0026 0001                      1-  774     	sleep
                                    1-  775     	.line	596, "main.c"; 	AWUCON = 0x00;
     0027 02rr                      1-  776     	CLRR	_AWUCON
                                    1-  777     	.line	597, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0028 2101                      1-  778     	MOVIA	0x01
     0029 00rr                      1-  779     	MOVAR	_INTE
                                    1-  780     	.line	598, "main.c"; 	INTF = 0;
     002A 02rr                      1-  781     	CLRR	_INTF
                                    1-  782     	.line	600, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     002B 21B8                      1-  783     	MOVIA	0xb8
     002C 00rr                      1-  784     	MOVAR	_PCON
                                    1-  785     	.line	602, "main.c"; 	}
                                    1-  786     	RETURN	
     002D 0010                      3-   40 m1      ret
                                    1-  787     ; exit point of _gotoSleep
                                    1-  789     ;***
                                    1-  790     ;  pBlock Stats: dbName = C
                                    1-  791     ;***
                                    1-  792     ;has an exit
                                    1-  793     ;functions called:
                                    1-  794     ;   _keyRead
                                    1-  795     ;   _LEDOFF
                                    1-  796     ;   _checkBat
                                    1-  797     ;   _keyRead
                                    1-  798     ;   _LEDOFF
                                    1-  799     ;   _checkBat
                                    1-  800     ;1 compiler assigned register :
                                    1-  801     ;   r0x1035
                                    1-  802     ;; Starting pCode block
                                    1-  803     .segment "code"; module=main, function=_keyCtr
                                    1-  805     ;local variable name mapping:
     0000                           1-  807     _keyCtr:
                                    1-  808     ; 2 exit points
                                    1-  809     	.line	529, "main.c"; 	char kclick = keyRead();
                                    1-  810     	MCALL	_keyRead
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  811     ;;1	MOVAR	r0x1035
                                    1-  812     	.line	530, "main.c"; 	if(kclick == 1)
     0001 2401                      1-  813     	XORIA	0x01
     0002 0903                      1-  814     	BTRSS	STATUS,2
                                    1-  815     	MGOTO	_00460_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  816     	.line	536, "main.c"; 	if(doublePressFlag == 1)
                                    1-  817     	BANKSEL	_doublePressFlag
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  818     	MOVR	_doublePressFlag,W
     0006 2401                      1-  819     	XORIA	0x01
     0007 0903                      1-  820     	BTRSS	STATUS,2
                                    1-  821     	MGOTO	_00457_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  822     	.line	538, "main.c"; 	workStep = 1;
     0009 2101                      1-  823     	MOVIA	0x01
                                    1-  824     	BANKSEL	_workStep
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 00rr                      1-  825     	MOVAR	_workStep
                                    1-  826     	.line	539, "main.c"; 	duty1 = 20;
     000C 2114                      1-  827     	MOVIA	0x14
                                    1-  828     	BANKSEL	_duty1
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1-  829     	MOVAR	_duty1
                                    1-  830     	.line	540, "main.c"; 	doublePressFlag = 0;
                                    1-  831     	BANKSEL	_doublePressFlag
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1-  832     	CLRR	_doublePressFlag
                                    1-  833     	.line	541, "main.c"; 	stopFlag = 0;
                                    1-  834     	BANKSEL	_stopFlag
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 02rr                      1-  835     	CLRR	_stopFlag
                                    1-  836     	.line	542, "main.c"; 	LEDOFF();
                                    1-  837     	MCALL	_LEDOFF
     0013 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  838     	.line	543, "main.c"; 	checkBat();
                                    1-  839     	MCALL	_checkBat
     0014 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  840     	.line	544, "main.c"; 	ADC_num_value = R_AIN2_DATA;//未工作时候的电压
                                    1-  841     	BANKSEL	_R_AIN2_DATA
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 01rr                      1-  842     	MOVR	_R_AIN2_DATA,W
                                    1-  843     	BANKSEL	_ADC_num_value
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1-  844     	MOVAR	_ADC_num_value
                                    1-  845     	BANKSEL	_R_AIN2_DATA
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1-  846     	MOVR	(_R_AIN2_DATA + 1),W
                                    1-  847     	BANKSEL	_ADC_num_value
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  848     	MOVAR	(_ADC_num_value + 1)
                                    1-  849     	MGOTO	_00458_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
     001E                           1-  850     _00457_DS_:
                                    1-  851     	.line	549, "main.c"; 	if(workStep)
                                    1-  852     	BANKSEL	_workStep
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 01rr                      1-  853     	MOVR	_workStep,W
     0020 0D03                      1-  854     	BTRSC	STATUS,2
                                    1-  855     	MGOTO	_00454_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  856     	.line	551, "main.c"; 	workStep = 0;//停止工作
     0022 02rr                      1-  857     	CLRR	_workStep
                                    1-  858     	.line	552, "main.c"; 	doublePressFlag = 0;
                                    1-  859     	BANKSEL	_doublePressFlag
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 02rr                      1-  860     	CLRR	_doublePressFlag
                                    1-  861     	MGOTO	_00458_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
     0026                           1-  862     _00454_DS_:
                                    1-  863     	.line	556, "main.c"; 	doublePressFlag = 1;
     0026 2101                      1-  864     	MOVIA	0x01
                                    1-  865     	BANKSEL	_doublePressFlag
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 00rr                      1-  866     	MOVAR	_doublePressFlag
     0029                           1-  867     _00458_DS_:
                                    1-  868     	.line	560, "main.c"; 	count1s = 0;
                                    1-  869     	BANKSEL	_count1s
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 02rr                      1-  870     	CLRR	_count1s
                                    1-  871     	.line	561, "main.c"; 	count900s = 0;
                                    1-  872     	BANKSEL	_count900s
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 02rr                      1-  873     	CLRR	_count900s
     002D 02rr                      1-  874     	CLRR	(_count900s + 1)
                                    1-  875     	.line	562, "main.c"; 	timeCountKey = 0;
                                    1-  876     	BANKSEL	_timeCountKey
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 02rr                      1-  877     	CLRR	_timeCountKey
     0030 02rr                      1-  878     	CLRR	(_timeCountKey + 1)
     0031                           1-  879     _00460_DS_:
                                    1-  880     	.line	567, "main.c"; 	if(keyCount == 0 && doublePressFlag && (++timeCountKey > 50))
                                    1-  881     	BANKSEL	_keyCount
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1-  882     	MOVR	_keyCount,W
     0033 0903                      1-  883     	BTRSS	STATUS,2
                                    1-  884     	MGOTO	_00465_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  885     	BANKSEL	_doublePressFlag
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 01rr                      1-  886     	MOVR	_doublePressFlag,W
     0037 0D03                      1-  887     	BTRSC	STATUS,2
                                    1-  888     	MGOTO	_00465_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  889     	BANKSEL	_timeCountKey
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 05rr                      1-  890     	INCR	_timeCountKey,F
     003B 0D03                      1-  891     	BTRSC	STATUS,2
     003C 05rr                      1-  892     	INCR	(_timeCountKey + 1),F
                                    1-  893     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  894     ;;unsigned compare: left >= lit (0x33=51), size=2
     003D 2100                      1-  895     	MOVIA	0x00
     003E 04rr                      1-  896     	SUBAR	(_timeCountKey + 1),W
     003F 0903                      1-  897     	BTRSS	STATUS,2
                                    1-  898     	MGOTO	_00485_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041 2133                      1-  899     	MOVIA	0x33
     0042 04rr                      1-  900     	SUBAR	_timeCountKey,W
     0043                           1-  901     _00485_DS_:
     0043 0803                      1-  902     	BTRSS	STATUS,0
                                    1-  903     	MGOTO	_00465_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  904     	.line	569, "main.c"; 	doublePressFlag = 0;   	//1秒内未双击，重新计数
                                    1-  905     	BANKSEL	_doublePressFlag
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 02rr                      1-  906     	CLRR	_doublePressFlag
                                    1-  907     	.line	570, "main.c"; 	timeCountKey = 0;
                                    1-  908     	BANKSEL	_timeCountKey
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 02rr                      1-  909     	CLRR	_timeCountKey
     0049 02rr                      1-  910     	CLRR	(_timeCountKey + 1)
     004A                           1-  911     _00465_DS_:
                                    1-  912     	.line	573, "main.c"; 	}
                                    1-  913     	RETURN	
     004A 0010                      3-   40 m1      ret
                                    1-  914     ; exit point of _keyCtr
                                    1-  916     ;***
                                    1-  917     ;  pBlock Stats: dbName = C
                                    1-  918     ;***
                                    1-  919     ;has an exit
                                    1-  920     ;; Starting pCode block
                                    1-  921     .segment "code"; module=main, function=_keyRead
     0000                           1-  923     _keyRead:
                                    1-  924     ; 2 exit points
                                    1-  925     	.line	508, "main.c"; 	if (PORTA & 0x20)
     0000 0Arr                      1-  926     	BTRSS	_PORTA,5
                                    1-  927     	MGOTO	_00446_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  928     	.line	510, "main.c"; 	if(++keyCount >= 200)
                                    1-  929     	BANKSEL	_keyCount
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 05rr                      1-  930     	INCR	_keyCount,F
                                    1-  931     ;;unsigned compare: left < lit (0xC8=200), size=1
     0004 21C8                      1-  932     	MOVIA	0xc8
     0005 04rr                      1-  933     	SUBAR	_keyCount,W
     0006 0803                      1-  934     	BTRSS	STATUS,0
                                    1-  935     	MGOTO	_00447_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  936     	.line	512, "main.c"; 	keyCount = 200;
     0008 21C8                      1-  937     	MOVIA	0xc8
     0009 00rr                      1-  938     	MOVAR	_keyCount
                                    1-  939     	MGOTO	_00447_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  940     ;;unsigned compare: left < lit (0x8=8), size=1
     000B                           1-  941     _00446_DS_:
                                    1-  942     	.line	517, "main.c"; 	if(keyCount >= 8)
     000B 2108                      1-  943     	MOVIA	0x08
                                    1-  944     	BANKSEL	_keyCount
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 04rr                      1-  945     	SUBAR	_keyCount,W
     000E 0803                      1-  946     	BTRSS	STATUS,0
                                    1-  947     	MGOTO	_00444_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  948     	.line	519, "main.c"; 	keyCount = 0;
     0010 02rr                      1-  949     	CLRR	_keyCount
                                    1-  950     	.line	520, "main.c"; 	return 	1;
     0011 2101                      1-  951     	MOVIA	0x01
                                    1-  952     	MGOTO	_00448_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
     0013                           1-  953     _00444_DS_:
                                    1-  954     	.line	522, "main.c"; 	keyCount = 0;
                                    1-  955     	BANKSEL	_keyCount
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 02rr                      1-  956     	CLRR	_keyCount
     0015                           1-  957     _00447_DS_:
                                    1-  958     	.line	524, "main.c"; 	return 0;
     0015 2100                      1-  959     	MOVIA	0x00
     0016                           1-  960     _00448_DS_:
                                    1-  961     	.line	525, "main.c"; 	}
                                    1-  962     	RETURN	
     0016 0010                      3-   40 m1      ret
                                    1-  963     ; exit point of _keyRead
                                    1-  965     ;***
                                    1-  966     ;  pBlock Stats: dbName = C
                                    1-  967     ;***
                                    1-  968     ;functions called:
                                    1-  969     ;   _delay
                                    1-  970     ;   _checkBat
                                    1-  971     ;   _LED1ON
                                    1-  972     ;   _LED2ON
                                    1-  973     ;   _LEDOFF
                                    1-  974     ;   _delay
                                    1-  975     ;   _checkBat
                                    1-  976     ;   _LED1ON
                                    1-  977     ;   _LED2ON
                                    1-  978     ;   _LEDOFF
                                    1-  979     ;2 compiler assigned registers:
                                    1-  980     ;   r0x1037
                                    1-  981     ;   STK00
                                    1-  982     ;; Starting pCode block
                                    1-  983     .segment "code"; module=main, function=_chrgCtr
     0000                           1-  985     _chrgCtr:
                                    1-  986     ; 0 exit points
                                    1-  987     	.line	464, "main.c"; 	if(ledCount > duty7 || ledStep == 0)
                                    1-  988     	BANKSEL	_ledCount
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1-  989     	MOVR	_ledCount,W
                                    1-  990     	BANKSEL	_duty7
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 04rr                      1-  991     	SUBAR	_duty7,W
     0004 0803                      1-  992     	BTRSS	STATUS,0
                                    1-  993     	MGOTO	_00402_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  994     	BANKSEL	_ledStep
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 01rr                      1-  995     	MOVR	_ledStep,W
     0008 0903                      1-  996     	BTRSS	STATUS,2
                                    1-  997     	MGOTO	_00405_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
     000A                           1-  998     _00402_DS_:
                                    1-  999     	.line	466, "main.c"; 	IOSTA |= 0x01;
     000A 001r                      1- 1000     	IOSTR	_IOSTA
                                    1- 1001     	BANKSEL	r0x1037
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1- 1002     	MOVAR	r0x1037
     000D 18rr                      1- 1003     	BSR	r0x1037,0
     000E 01rr                      1- 1004     	MOVR	r0x1037,W
     000F 000r                      1- 1005     	IOST	_IOSTA
                                    1- 1006     	.line	467, "main.c"; 	PORTA &= 0xFE;
     0010 1Crr                      1- 1007     	BCR	_PORTA,0
                                    1- 1008     	.line	468, "main.c"; 	delay(10);
     0011 210A                      1- 1009     	MOVIA	0x0a
     0012 00rr                      1- 1010     	MOVAR	STK00
     0013 2100                      1- 1011     	MOVIA	0x00
                                    1- 1012     	MCALL	_delay
     0014 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1013     	.line	469, "main.c"; 	if(PORTA & 0x01)
     0015 08rr                      1- 1014     	BTRSS	_PORTA,0
                                    1- 1015     	MGOTO	_00400_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1016     	.line	472, "main.c"; 	if(++chrgTime > 100)
                                    1- 1017     	BANKSEL	_chrgTime
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 05rr                      1- 1018     	INCR	_chrgTime,F
                                    1- 1019     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1020     ;;unsigned compare: left >= lit (0x65=101), size=1
     0019 2165                      1- 1021     	MOVIA	0x65
     001A 04rr                      1- 1022     	SUBAR	_chrgTime,W
     001B 0803                      1- 1023     	BTRSS	STATUS,0
                                    1- 1024     	MGOTO	_00385_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1025     	.line	473, "main.c"; 	chrgFlag = 1;
     001D 2101                      1- 1026     	MOVIA	0x01
                                    1- 1027     	BANKSEL	_chrgFlag
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1028     	MOVAR	_chrgFlag
     0020                           1- 1029     _00385_DS_:
                                    1- 1030     	.line	475, "main.c"; 	checkBat();
                                    1- 1031     	MCALL	_checkBat
     0020 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1032     	.line	476, "main.c"; 	ADC_num_value = R_AIN2_DATA;
                                    1- 1033     	BANKSEL	_R_AIN2_DATA
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1- 1034     	MOVR	_R_AIN2_DATA,W
                                    1- 1035     	BANKSEL	_ADC_num_value
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 00rr                      1- 1036     	MOVAR	_ADC_num_value
                                    1- 1037     	BANKSEL	_R_AIN2_DATA
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1- 1038     	MOVR	(_R_AIN2_DATA + 1),W
                                    1- 1039     	BANKSEL	_ADC_num_value
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 00rr                      1- 1040     	MOVAR	(_ADC_num_value + 1)
                                    1- 1041     ;;unsigned compare: left < lit (0xB36=2870), size=2
                                    1- 1042     	.line	477, "main.c"; 	if(ADC_num_value < 2870)
     0029 210B                      1- 1043     	MOVIA	0x0b
     002A 04rr                      1- 1044     	SUBAR	(_ADC_num_value + 1),W
     002B 0903                      1- 1045     	BTRSS	STATUS,2
                                    1- 1046     	MGOTO	_00433_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
     002D 2136                      1- 1047     	MOVIA	0x36
     002E 04rr                      1- 1048     	SUBAR	_ADC_num_value,W
     002F                           1- 1049     _00433_DS_:
     002F 0C03                      1- 1050     	BTRSC	STATUS,0
                                    1- 1051     	MGOTO	_00389_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1052     	.line	478, "main.c"; 	LED1ON();
                                    1- 1053     	MCALL	_LED1ON
     0031 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1054     	MGOTO	_00390_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1055     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1056     ;;unsigned compare: left >= lit (0xB41=2881), size=2
     0033                           1- 1057     _00389_DS_:
                                    1- 1058     	.line	479, "main.c"; 	else if(ADC_num_value > 2880)
     0033 210B                      1- 1059     	MOVIA	0x0b
                                    1- 1060     	BANKSEL	_ADC_num_value
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 04rr                      1- 1061     	SUBAR	(_ADC_num_value + 1),W
     0036 0903                      1- 1062     	BTRSS	STATUS,2
                                    1- 1063     	MGOTO	_00434_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
     0038 2141                      1- 1064     	MOVIA	0x41
     0039 04rr                      1- 1065     	SUBAR	_ADC_num_value,W
     003A                           1- 1066     _00434_DS_:
     003A 0803                      1- 1067     	BTRSS	STATUS,0
                                    1- 1068     	MGOTO	_00390_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1069     	.line	480, "main.c"; 	LED2ON();
                                    1- 1070     	MCALL	_LED2ON
     003C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1071     ;;unsigned compare: left < lit (0x6DB=1755), size=2
     003D                           1- 1072     _00390_DS_:
                                    1- 1073     	.line	482, "main.c"; 	if(ADC_num_value < 1755)
     003D 2106                      1- 1074     	MOVIA	0x06
                                    1- 1075     	BANKSEL	_ADC_num_value
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 04rr                      1- 1076     	SUBAR	(_ADC_num_value + 1),W
     0040 0903                      1- 1077     	BTRSS	STATUS,2
                                    1- 1078     	MGOTO	_00435_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042 21DB                      1- 1079     	MOVIA	0xdb
     0043 04rr                      1- 1080     	SUBAR	_ADC_num_value,W
     0044                           1- 1081     _00435_DS_:
     0044 0C03                      1- 1082     	BTRSC	STATUS,0
                                    1- 1083     	MGOTO	_00395_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1084     	.line	484, "main.c"; 	duty = 5;
     0046 2105                      1- 1085     	MOVIA	0x05
                                    1- 1086     	BANKSEL	_duty
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 00rr                      1- 1087     	MOVAR	_duty
                                    1- 1088     	MGOTO	_00405_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1089     ;;unsigned compare: left < lit (0x8DA=2266), size=2
     004A                           1- 1090     _00395_DS_:
                                    1- 1091     	.line	486, "main.c"; 	else if(ADC_num_value < 2266)
     004A 2108                      1- 1092     	MOVIA	0x08
                                    1- 1093     	BANKSEL	_ADC_num_value
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 04rr                      1- 1094     	SUBAR	(_ADC_num_value + 1),W
     004D 0903                      1- 1095     	BTRSS	STATUS,2
                                    1- 1096     	MGOTO	_00436_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
     004F 21DA                      1- 1097     	MOVIA	0xda
     0050 04rr                      1- 1098     	SUBAR	_ADC_num_value,W
     0051                           1- 1099     _00436_DS_:
     0051 0C03                      1- 1100     	BTRSC	STATUS,0
                                    1- 1101     	MGOTO	_00392_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1102     	.line	488, "main.c"; 	duty = 75;
     0053 214B                      1- 1103     	MOVIA	0x4b
                                    1- 1104     	BANKSEL	_duty
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 00rr                      1- 1105     	MOVAR	_duty
                                    1- 1106     	MGOTO	_00405_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
     0057                           1- 1107     _00392_DS_:
                                    1- 1108     	.line	492, "main.c"; 	duty = 5;
     0057 2105                      1- 1109     	MOVIA	0x05
                                    1- 1110     	BANKSEL	_duty
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 00rr                      1- 1111     	MOVAR	_duty
                                    1- 1112     	MGOTO	_00405_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B                           1- 1113     _00400_DS_:
                                    1- 1114     	.line	497, "main.c"; 	chrgTime = 0;
                                    1- 1115     	BANKSEL	_chrgTime
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 02rr                      1- 1116     	CLRR	_chrgTime
                                    1- 1117     	.line	498, "main.c"; 	chrgFlag = 0;
                                    1- 1118     	BANKSEL	_chrgFlag
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 02rr                      1- 1119     	CLRR	_chrgFlag
                                    1- 1120     	.line	499, "main.c"; 	if(workStep == 0)
                                    1- 1121     	BANKSEL	_workStep
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 01rr                      1- 1122     	MOVR	_workStep,W
     0061 0D03                      1- 1123     	BTRSC	STATUS,2
                                    1- 1124     	.line	500, "main.c"; 	LEDOFF();
                                    1- 1125     	MCALL	_LEDOFF
     0062 2rrr                      3-   66 m1      LCALL rom_address
     0063                           1- 1126     _00405_DS_:
                                    1- 1127     	.line	503, "main.c"; 	}
                                    1- 1128     	RETURN	
     0063 0010                      3-   40 m1      ret
                                    1- 1130     ;***
                                    1- 1131     ;  pBlock Stats: dbName = C
                                    1- 1132     ;***
                                    1- 1133     ;has an exit
                                    1- 1134     ;1 compiler assigned register :
                                    1- 1135     ;   r0x1038
                                    1- 1136     ;; Starting pCode block
                                    1- 1137     .segment "code"; module=main, function=_setLed2PWM
     0000                           1- 1139     _setLed2PWM:
                                    1- 1140     ; 2 exit points
                                    1- 1141     	.line	445, "main.c"; 	if(ledCount >= duty7)
                                    1- 1142     	BANKSEL	_duty7
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 1143     	MOVR	_duty7,W
                                    1- 1144     	BANKSEL	_ledCount
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 04rr                      1- 1145     	SUBAR	_ledCount,W
     0004 0803                      1- 1146     	BTRSS	STATUS,0
                                    1- 1147     	MGOTO	_00377_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1148     	.line	447, "main.c"; 	PORTA &= 0xEB;
     0006 21EB                      1- 1149     	MOVIA	0xeb
     0007 10rr                      1- 1150     	ANDAR	_PORTA,F
                                    1- 1151     	.line	448, "main.c"; 	IOSTA |= 0x14;
     0008 001r                      1- 1152     	IOSTR	_IOSTA
                                    1- 1153     	BANKSEL	r0x1038
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 00rr                      1- 1154     	MOVAR	r0x1038
     000B 2114                      1- 1155     	MOVIA	0x14
     000C 11rr                      1- 1156     	IORAR	r0x1038,F
     000D 01rr                      1- 1157     	MOVR	r0x1038,W
     000E 000r                      1- 1158     	IOST	_IOSTA
                                    1- 1159     	MGOTO	_00379_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
     0010                           1- 1160     _00377_DS_:
                                    1- 1161     	.line	452, "main.c"; 	IOSTA &= 0xEB;
     0010 001r                      1- 1162     	IOSTR	_IOSTA
                                    1- 1163     	BANKSEL	r0x1038
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1- 1164     	MOVAR	r0x1038
     0013 21EB                      1- 1165     	MOVIA	0xeb
     0014 10rr                      1- 1166     	ANDAR	r0x1038,F
     0015 01rr                      1- 1167     	MOVR	r0x1038,W
     0016 000r                      1- 1168     	IOST	_IOSTA
                                    1- 1169     	.line	453, "main.c"; 	PORTA |= 0x10;
     0017 1Arr                      1- 1170     	BSR	_PORTA,4
                                    1- 1171     	.line	454, "main.c"; 	PORTA &= 0xFB;
     0018 1Drr                      1- 1172     	BCR	_PORTA,2
     0019                           1- 1173     _00379_DS_:
                                    1- 1174     	.line	456, "main.c"; 	}
                                    1- 1175     	RETURN	
     0019 0010                      3-   40 m1      ret
                                    1- 1176     ; exit point of _setLed2PWM
                                    1- 1178     ;***
                                    1- 1179     ;  pBlock Stats: dbName = C
                                    1- 1180     ;***
                                    1- 1181     ;1 compiler assigned register :
                                    1- 1182     ;   r0x1039
                                    1- 1183     ;; Starting pCode block
                                    1- 1184     .segment "code"; module=main, function=_setLed1PWM
     0000                           1- 1186     _setLed1PWM:
                                    1- 1187     ; 0 exit points
                                    1- 1188     	.line	427, "main.c"; 	if(ledCount >= duty5)
                                    1- 1189     	BANKSEL	_duty5
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 1190     	MOVR	_duty5,W
                                    1- 1191     	BANKSEL	_ledCount
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 04rr                      1- 1192     	SUBAR	_ledCount,W
     0004 0803                      1- 1193     	BTRSS	STATUS,0
                                    1- 1194     	MGOTO	_00367_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1195     	.line	429, "main.c"; 	PORTA &= 0xFE;
     0006 1Crr                      1- 1196     	BCR	_PORTA,0
                                    1- 1197     	.line	430, "main.c"; 	IOSTA |= 0x01;
     0007 001r                      1- 1198     	IOSTR	_IOSTA
                                    1- 1199     	BANKSEL	r0x1039
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 1200     	MOVAR	r0x1039
     000A 18rr                      1- 1201     	BSR	r0x1039,0
     000B 01rr                      1- 1202     	MOVR	r0x1039,W
     000C 000r                      1- 1203     	IOST	_IOSTA
                                    1- 1204     	MGOTO	_00368_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 1205     _00367_DS_:
                                    1- 1206     	.line	434, "main.c"; 	IOSTA &= 0xFE;
     000E 001r                      1- 1207     	IOSTR	_IOSTA
                                    1- 1208     	BANKSEL	r0x1039
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 00rr                      1- 1209     	MOVAR	r0x1039
     0011 1Crr                      1- 1210     	BCR	r0x1039,0
     0012 01rr                      1- 1211     	MOVR	r0x1039,W
     0013 000r                      1- 1212     	IOST	_IOSTA
                                    1- 1213     	.line	435, "main.c"; 	PORTA |= 0x01;
     0014 18rr                      1- 1214     	BSR	_PORTA,0
     0015                           1- 1215     _00368_DS_:
                                    1- 1216     	.line	437, "main.c"; 	if(++ledCount >= 50)
                                    1- 1217     	BANKSEL	_ledCount
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 05rr                      1- 1218     	INCR	_ledCount,F
                                    1- 1219     ;;unsigned compare: left < lit (0x32=50), size=1
     0017 2132                      1- 1220     	MOVIA	0x32
     0018 04rr                      1- 1221     	SUBAR	_ledCount,W
     0019 0C03                      1- 1222     	BTRSC	STATUS,0
                                    1- 1223     	.line	439, "main.c"; 	ledCount = 0;
     001A 02rr                      1- 1224     	CLRR	_ledCount
                                    1- 1225     	.line	441, "main.c"; 	}
                                    1- 1226     	RETURN	
     001B 0010                      3-   40 m1      ret
                                    1- 1228     ;***
                                    1- 1229     ;  pBlock Stats: dbName = C
                                    1- 1230     ;***
                                    1- 1231     ;; Starting pCode block
                                    1- 1232     .segment "code"; module=main, function=_motorPWM
     0000                           1- 1234     _motorPWM:
                                    1- 1235     ; 0 exit points
                                    1- 1236     	.line	412, "main.c"; 	if(motorCount >= duty1)
                                    1- 1237     	BANKSEL	_duty1
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 1238     	MOVR	_duty1,W
                                    1- 1239     	BANKSEL	_motorCount
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 04rr                      1- 1240     	SUBAR	_motorCount,W
     0004 0803                      1- 1241     	BTRSS	STATUS,0
                                    1- 1242     	MGOTO	_00357_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1243     	.line	414, "main.c"; 	PORTA &= 0x7F;
     0006 1Frr                      1- 1244     	BCR	_PORTA,7
                                    1- 1245     	MGOTO	_00358_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
     0008                           1- 1246     _00357_DS_:
                                    1- 1247     	.line	418, "main.c"; 	PORTA |= 0x80;
     0008 1Brr                      1- 1248     	BSR	_PORTA,7
     0009                           1- 1249     _00358_DS_:
                                    1- 1250     	.line	420, "main.c"; 	if(++motorCount >= 50)
                                    1- 1251     	BANKSEL	_motorCount
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 05rr                      1- 1252     	INCR	_motorCount,F
                                    1- 1253     ;;unsigned compare: left < lit (0x32=50), size=1
     000B 2132                      1- 1254     	MOVIA	0x32
     000C 04rr                      1- 1255     	SUBAR	_motorCount,W
     000D 0C03                      1- 1256     	BTRSC	STATUS,0
                                    1- 1257     	.line	421, "main.c"; 	motorCount = 0;
     000E 02rr                      1- 1258     	CLRR	_motorCount
                                    1- 1259     	.line	422, "main.c"; 	}
                                    1- 1260     	RETURN	
     000F 0010                      3-   40 m1      ret
                                    1- 1262     ;***
                                    1- 1263     ;  pBlock Stats: dbName = C
                                    1- 1264     ;***
                                    1- 1265     ;; Starting pCode block
                                    1- 1266     .segment "code"; module=main, function=_chrgPWM
     0000                           1- 1268     _chrgPWM:
                                    1- 1269     ; 0 exit points
                                    1- 1270     	.line	398, "main.c"; 	if(chrgCount >= duty)
                                    1- 1271     	BANKSEL	_duty
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 1272     	MOVR	_duty,W
                                    1- 1273     	BANKSEL	_chrgCount
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 04rr                      1- 1274     	SUBAR	_chrgCount,W
     0004 0803                      1- 1275     	BTRSS	STATUS,0
                                    1- 1276     	MGOTO	_00347_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1277     	.line	400, "main.c"; 	PORTB &= 0xF7;
     0006 1Drr                      1- 1278     	BCR	_PORTB,3
                                    1- 1279     	MGOTO	_00348_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
     0008                           1- 1280     _00347_DS_:
                                    1- 1281     	.line	404, "main.c"; 	PORTB |= 0x08;
     0008 19rr                      1- 1282     	BSR	_PORTB,3
     0009                           1- 1283     _00348_DS_:
                                    1- 1284     	.line	406, "main.c"; 	if(++chrgCount >= 100)
                                    1- 1285     	BANKSEL	_chrgCount
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 05rr                      1- 1286     	INCR	_chrgCount,F
                                    1- 1287     ;;unsigned compare: left < lit (0x64=100), size=1
     000B 2164                      1- 1288     	MOVIA	0x64
     000C 04rr                      1- 1289     	SUBAR	_chrgCount,W
     000D 0C03                      1- 1290     	BTRSC	STATUS,0
                                    1- 1291     	.line	407, "main.c"; 	chrgCount = 0;
     000E 02rr                      1- 1292     	CLRR	_chrgCount
                                    1- 1293     	.line	408, "main.c"; 	}
                                    1- 1294     	RETURN	
     000F 0010                      3-   40 m1      ret
                                    1- 1296     ;***
                                    1- 1297     ;  pBlock Stats: dbName = C
                                    1- 1298     ;***
                                    1- 1299     ;has an exit
                                    1- 1300     ;1 compiler assigned register :
                                    1- 1301     ;   r0x1025
                                    1- 1302     ;; Starting pCode block
                                    1- 1303     .segment "code"; module=main, function=_LEDOFF
     0000                           1- 1305     _LEDOFF:
                                    1- 1306     ; 2 exit points
                                    1- 1307     	.line	388, "main.c"; 	IOSTA |= 0x05;
     0000 001r                      1- 1308     	IOSTR	_IOSTA
                                    1- 1309     	BANKSEL	r0x1025
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1310     	MOVAR	r0x1025
     0003 2105                      1- 1311     	MOVIA	0x05
     0004 11rr                      1- 1312     	IORAR	r0x1025,F
     0005 01rr                      1- 1313     	MOVR	r0x1025,W
     0006 000r                      1- 1314     	IOST	_IOSTA
                                    1- 1315     	.line	389, "main.c"; 	ledStep = 0;
                                    1- 1316     	BANKSEL	_ledStep
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1- 1317     	CLRR	_ledStep
                                    1- 1318     	.line	390, "main.c"; 	PORTA &= 0xF7;
     0009 1Drr                      1- 1319     	BCR	_PORTA,3
                                    1- 1320     	.line	391, "main.c"; 	}
                                    1- 1321     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1322     ; exit point of _LEDOFF
                                    1- 1324     ;***
                                    1- 1325     ;  pBlock Stats: dbName = C
                                    1- 1326     ;***
                                    1- 1327     ;has an exit
                                    1- 1328     ;1 compiler assigned register :
                                    1- 1329     ;   r0x1036
                                    1- 1330     ;; Starting pCode block
                                    1- 1331     .segment "code"; module=main, function=_LED2ON
     0000                           1- 1333     _LED2ON:
                                    1- 1334     ; 2 exit points
                                    1- 1335     	.line	379, "main.c"; 	IOSTA &= 0xEF;
     0000 001r                      1- 1336     	IOSTR	_IOSTA
                                    1- 1337     	BANKSEL	r0x1036
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1338     	MOVAR	r0x1036
     0003 1Err                      1- 1339     	BCR	r0x1036,4
     0004 01rr                      1- 1340     	MOVR	r0x1036,W
     0005 000r                      1- 1341     	IOST	_IOSTA
                                    1- 1342     	.line	380, "main.c"; 	ledStep = 2;
     0006 2102                      1- 1343     	MOVIA	0x02
                                    1- 1344     	BANKSEL	_ledStep
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 00rr                      1- 1345     	MOVAR	_ledStep
                                    1- 1346     	.line	381, "main.c"; 	duty7 = 30;
     0009 211E                      1- 1347     	MOVIA	0x1e
                                    1- 1348     	BANKSEL	_duty7
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 00rr                      1- 1349     	MOVAR	_duty7
                                    1- 1350     	.line	382, "main.c"; 	duty5 = 40;
     000C 2128                      1- 1351     	MOVIA	0x28
                                    1- 1352     	BANKSEL	_duty5
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 00rr                      1- 1353     	MOVAR	_duty5
                                    1- 1354     	.line	383, "main.c"; 	}
                                    1- 1355     	RETURN	
     000F 0010                      3-   40 m1      ret
                                    1- 1356     ; exit point of _LED2ON
                                    1- 1358     ;***
                                    1- 1359     ;  pBlock Stats: dbName = C
                                    1- 1360     ;***
                                    1- 1361     ;has an exit
                                    1- 1362     ;1 compiler assigned register :
                                    1- 1363     ;   r0x1036
                                    1- 1364     ;; Starting pCode block
                                    1- 1365     .segment "code"; module=main, function=_LED1ON
     0000                           1- 1367     _LED1ON:
                                    1- 1368     ; 2 exit points
                                    1- 1369     	.line	370, "main.c"; 	ledStep = 1;
     0000 2101                      1- 1370     	MOVIA	0x01
                                    1- 1371     	BANKSEL	_ledStep
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1372     	MOVAR	_ledStep
                                    1- 1373     	.line	371, "main.c"; 	IOSTA |= 0x04;
     0003 001r                      1- 1374     	IOSTR	_IOSTA
                                    1- 1375     	BANKSEL	r0x1036
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 00rr                      1- 1376     	MOVAR	r0x1036
     0006 19rr                      1- 1377     	BSR	r0x1036,2
     0007 01rr                      1- 1378     	MOVR	r0x1036,W
     0008 000r                      1- 1379     	IOST	_IOSTA
                                    1- 1380     	.line	372, "main.c"; 	IOSTA &= 0xEE;
     0009 001r                      1- 1381     	IOSTR	_IOSTA
     000A 00rr                      1- 1382     	MOVAR	r0x1036
     000B 21EE                      1- 1383     	MOVIA	0xee
     000C 10rr                      1- 1384     	ANDAR	r0x1036,F
     000D 01rr                      1- 1385     	MOVR	r0x1036,W
     000E 000r                      1- 1386     	IOST	_IOSTA
                                    1- 1387     	.line	373, "main.c"; 	duty7 = 15;
     000F 210F                      1- 1388     	MOVIA	0x0f
                                    1- 1389     	BANKSEL	_duty7
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 1390     	MOVAR	_duty7
                                    1- 1391     	.line	374, "main.c"; 	duty5 = 1;
     0012 2101                      1- 1392     	MOVIA	0x01
                                    1- 1393     	BANKSEL	_duty5
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 00rr                      1- 1394     	MOVAR	_duty5
                                    1- 1395     	.line	375, "main.c"; 	}
                                    1- 1396     	RETURN	
     0015 0010                      3-   40 m1      ret
                                    1- 1397     ; exit point of _LED1ON
                                    1- 1399     ;***
                                    1- 1400     ;  pBlock Stats: dbName = C
                                    1- 1401     ;***
                                    1- 1402     ;functions called:
                                    1- 1403     ;   _gotoSleep
                                    1- 1404     ;   _checkBat
                                    1- 1405     ;   _LED2ON
                                    1- 1406     ;   _LED2ON
                                    1- 1407     ;   _LEDOFF
                                    1- 1408     ;   _LED2ON
                                    1- 1409     ;   _LEDOFF
                                    1- 1410     ;   _LED2ON
                                    1- 1411     ;   _LEDOFF
                                    1- 1412     ;   _LED2ON
                                    1- 1413     ;   _LEDOFF
                                    1- 1414     ;   _gotoSleep
                                    1- 1415     ;   _gotoSleep
                                    1- 1416     ;   _gotoSleep
                                    1- 1417     ;   _checkBat
                                    1- 1418     ;   _LED2ON
                                    1- 1419     ;   _LED2ON
                                    1- 1420     ;   _LEDOFF
                                    1- 1421     ;   _LED2ON
                                    1- 1422     ;   _LEDOFF
                                    1- 1423     ;   _LED2ON
                                    1- 1424     ;   _LEDOFF
                                    1- 1425     ;   _LED2ON
                                    1- 1426     ;   _LEDOFF
                                    1- 1427     ;   _gotoSleep
                                    1- 1428     ;   _gotoSleep
                                    1- 1429     ;2 compiler assigned registers:
                                    1- 1430     ;   r0x103A
                                    1- 1431     ;   r0x103B
                                    1- 1432     ;; Starting pCode block
                                    1- 1433     .segment "code"; module=main, function=_workCtr
     0000                           1- 1435     _workCtr:
                                    1- 1436     ; 0 exit points
                                    1- 1437     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1438     ;;unsigned compare: left >= lit (0x29=41), size=2
                                    1- 1439     	.line	262, "main.c"; 	if(count900s > 40)
     0000 2100                      1- 1440     	MOVIA	0x00
                                    1- 1441     	BANKSEL	_count900s
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1- 1442     	SUBAR	(_count900s + 1),W
     0003 0903                      1- 1443     	BTRSS	STATUS,2
                                    1- 1444     	MGOTO	_00314_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
     0005 2129                      1- 1445     	MOVIA	0x29
     0006 04rr                      1- 1446     	SUBAR	_count900s,W
     0007                           1- 1447     _00314_DS_:
     0007 0803                      1- 1448     	BTRSS	STATUS,0
                                    1- 1449     	MGOTO	_00182_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1450     	.line	264, "main.c"; 	gotoSleep();
                                    1- 1451     	MCALL	_gotoSleep
     0009 2rrr                      3-   66 m1      LCALL rom_address
     000A                           1- 1452     _00182_DS_:
                                    1- 1453     	.line	266, "main.c"; 	if(workStep == 1)
                                    1- 1454     	BANKSEL	_workStep
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1- 1455     	MOVR	_workStep,W
     000C 2401                      1- 1456     	XORIA	0x01
     000D 0903                      1- 1457     	BTRSS	STATUS,2
                                    1- 1458     	MGOTO	_00238_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1459     	.line	268, "main.c"; 	if(++duty1 > 100)
                                    1- 1460     	BANKSEL	_duty1
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 05rr                      1- 1461     	INCR	_duty1,F
                                    1- 1462     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1463     ;;unsigned compare: left >= lit (0x65=101), size=1
     0011 2165                      1- 1464     	MOVIA	0x65
     0012 04rr                      1- 1465     	SUBAR	_duty1,W
     0013 0803                      1- 1466     	BTRSS	STATUS,0
                                    1- 1467     	MGOTO	_00184_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1468     	.line	269, "main.c"; 	duty1 = 100;
     0015 2164                      1- 1469     	MOVIA	0x64
     0016 00rr                      1- 1470     	MOVAR	_duty1
     0017                           1- 1471     _00184_DS_:
                                    1- 1472     	.line	272, "main.c"; 	if(ledCount > duty)
                                    1- 1473     	BANKSEL	_ledCount
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 01rr                      1- 1474     	MOVR	_ledCount,W
                                    1- 1475     	BANKSEL	_duty
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 04rr                      1- 1476     	SUBAR	_duty,W
     001B 0803                      1- 1477     	BTRSS	STATUS,0
                                    1- 1478     	.line	273, "main.c"; 	checkBat();
                                    1- 1479     	MCALL	_checkBat
     001C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1480     	.line	274, "main.c"; 	if(count900s > 3 && count900s < 6)
     001D 2100                      1- 1481     	MOVIA	0x00
                                    1- 1482     	BANKSEL	_count900s
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 1483     	SUBAR	(_count900s + 1),W
     0020 0903                      1- 1484     	BTRSS	STATUS,2
                                    1- 1485     	MGOTO	_00317_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
     0022 2104                      1- 1486     	MOVIA	0x04
     0023 04rr                      1- 1487     	SUBAR	_count900s,W
     0024                           1- 1488     _00317_DS_:
     0024 0803                      1- 1489     	BTRSS	STATUS,0
                                    1- 1490     	MGOTO	_00193_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1491     ;;unsigned compare: left < lit (0x6=6), size=2
     0026 2100                      1- 1492     	MOVIA	0x00
                                    1- 1493     	BANKSEL	_count900s
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 04rr                      1- 1494     	SUBAR	(_count900s + 1),W
     0029 0903                      1- 1495     	BTRSS	STATUS,2
                                    1- 1496     	MGOTO	_00318_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
     002B 2106                      1- 1497     	MOVIA	0x06
     002C 04rr                      1- 1498     	SUBAR	_count900s,W
     002D                           1- 1499     _00318_DS_:
     002D 0C03                      1- 1500     	BTRSC	STATUS,0
                                    1- 1501     	MGOTO	_00193_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1502     	.line	276, "main.c"; 	ADC_work_value = R_AIN2_DATA;
                                    1- 1503     	BANKSEL	_R_AIN2_DATA
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1504     	MOVR	_R_AIN2_DATA,W
                                    1- 1505     	BANKSEL	_ADC_work_value
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 00rr                      1- 1506     	MOVAR	_ADC_work_value
                                    1- 1507     	BANKSEL	_R_AIN2_DATA
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 1508     	MOVR	(_R_AIN2_DATA + 1),W
                                    1- 1509     	BANKSEL	_ADC_work_value
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 00rr                      1- 1510     	MOVAR	(_ADC_work_value + 1)
                                    1- 1511     	.line	278, "main.c"; 	if(ADC_num_value > ADC_work_value + 300)
     0037 212C                      1- 1512     	MOVIA	0x2c
     0038 03rr                      1- 1513     	ADDAR	_ADC_work_value,W
                                    1- 1514     	BANKSEL	r0x103A
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 00rr                      1- 1515     	MOVAR	r0x103A
     003B 2101                      1- 1516     	MOVIA	0x01
                                    1- 1517     	BANKSEL	r0x103B
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 00rr                      1- 1518     	MOVAR	r0x103B
                                    1- 1519     	BANKSEL	_ADC_work_value
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 01rr                      1- 1520     	MOVR	(_ADC_work_value + 1),W
     0040 0C03                      1- 1521     	BTRSC	STATUS,0
     0041 05rr                      1- 1522     	INCR	(_ADC_work_value + 1),W
     0042 0D03                      1- 1523     	BTRSC	STATUS,2
                                    1- 1524     	MGOTO	_00001_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1525     	BANKSEL	r0x103B
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 03rr                      1- 1526     	ADDAR	r0x103B,F
     0046                           1- 1527     _00001_DS_:
                                    1- 1528     	BANKSEL	_ADC_num_value
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 01rr                      1- 1529     	MOVR	(_ADC_num_value + 1),W
                                    1- 1530     	BANKSEL	r0x103B
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 04rr                      1- 1531     	SUBAR	r0x103B,W
     004A 0903                      1- 1532     	BTRSS	STATUS,2
                                    1- 1533     	MGOTO	_00319_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1534     	BANKSEL	_ADC_num_value
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 01rr                      1- 1535     	MOVR	_ADC_num_value,W
                                    1- 1536     	BANKSEL	r0x103A
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 04rr                      1- 1537     	SUBAR	r0x103A,W
     0050                           1- 1538     _00319_DS_:
     0050 0C03                      1- 1539     	BTRSC	STATUS,0
                                    1- 1540     	MGOTO	_00190_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1541     	.line	280, "main.c"; 	if(++resultTime > 10)
                                    1- 1542     	BANKSEL	_resultTime
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 05rr                      1- 1543     	INCR	_resultTime,F
                                    1- 1544     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1545     ;;unsigned compare: left >= lit (0xB=11), size=1
     0054 210B                      1- 1546     	MOVIA	0x0b
     0055 04rr                      1- 1547     	SUBAR	_resultTime,W
     0056 0803                      1- 1548     	BTRSS	STATUS,0
                                    1- 1549     	MGOTO	_00194_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1550     	.line	281, "main.c"; 	loadFlag = 1;//满载
     0058 2101                      1- 1551     	MOVIA	0x01
                                    1- 1552     	BANKSEL	_loadFlag
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 00rr                      1- 1553     	MOVAR	_loadFlag
                                    1- 1554     	MGOTO	_00194_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
     005C                           1- 1555     _00190_DS_:
                                    1- 1556     	.line	285, "main.c"; 	loadFlag = 0;//空载
                                    1- 1557     	BANKSEL	_loadFlag
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 02rr                      1- 1558     	CLRR	_loadFlag
                                    1- 1559     	MGOTO	_00194_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
     005F                           1- 1560     _00193_DS_:
                                    1- 1561     	.line	290, "main.c"; 	resultTime = 0;
                                    1- 1562     	BANKSEL	_resultTime
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 02rr                      1- 1563     	CLRR	_resultTime
     0061                           1- 1564     _00194_DS_:
                                    1- 1565     	.line	294, "main.c"; 	if((loadFlag == 0 && count900s < 15) || stopFlag == 1)
                                    1- 1566     	BANKSEL	_loadFlag
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1- 1567     	MOVR	_loadFlag,W
     0063 0903                      1- 1568     	BTRSS	STATUS,2
                                    1- 1569     	MGOTO	_00208_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1570     ;;unsigned compare: left < lit (0xF=15), size=2
     0065 2100                      1- 1571     	MOVIA	0x00
                                    1- 1572     	BANKSEL	_count900s
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 04rr                      1- 1573     	SUBAR	(_count900s + 1),W
     0068 0903                      1- 1574     	BTRSS	STATUS,2
                                    1- 1575     	MGOTO	_00321_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
     006A 210F                      1- 1576     	MOVIA	0x0f
     006B 04rr                      1- 1577     	SUBAR	_count900s,W
     006C                           1- 1578     _00321_DS_:
     006C 0803                      1- 1579     	BTRSS	STATUS,0
                                    1- 1580     	MGOTO	_00204_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
     006E                           1- 1581     _00208_DS_:
                                    1- 1582     	BANKSEL	_stopFlag
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 01rr                      1- 1583     	MOVR	_stopFlag,W
     0070 2401                      1- 1584     	XORIA	0x01
     0071 0903                      1- 1585     	BTRSS	STATUS,2
                                    1- 1586     	MGOTO	_00205_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1587     ;;unsigned compare: left < lit (0x6=6), size=2
     0073                           1- 1588     _00204_DS_:
                                    1- 1589     	.line	297, "main.c"; 	if(count900s >= 6 || stopFlag == 1)
     0073 2100                      1- 1590     	MOVIA	0x00
                                    1- 1591     	BANKSEL	_count900s
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 04rr                      1- 1592     	SUBAR	(_count900s + 1),W
     0076 0903                      1- 1593     	BTRSS	STATUS,2
                                    1- 1594     	MGOTO	_00322_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
     0078 2106                      1- 1595     	MOVIA	0x06
     0079 04rr                      1- 1596     	SUBAR	_count900s,W
     007A                           1- 1597     _00322_DS_:
     007A 0C03                      1- 1598     	BTRSC	STATUS,0
                                    1- 1599     	MGOTO	_00198_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1600     	BANKSEL	_stopFlag
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 01rr                      1- 1601     	MOVR	_stopFlag,W
     007E 2401                      1- 1602     	XORIA	0x01
     007F 0903                      1- 1603     	BTRSS	STATUS,2
                                    1- 1604     	MGOTO	_00199_DS_
     0080 3rrr                      3-   63 m1      LGOTO rom_address
     0081                           1- 1605     _00198_DS_:
                                    1- 1606     	.line	299, "main.c"; 	stopFlag = 1;
     0081 2101                      1- 1607     	MOVIA	0x01
                                    1- 1608     	BANKSEL	_stopFlag
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 00rr                      1- 1609     	MOVAR	_stopFlag
                                    1- 1610     	MGOTO	_00206_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
     0085                           1- 1611     _00199_DS_:
                                    1- 1612     	.line	303, "main.c"; 	if(checkTime == 0)
                                    1- 1613     	BANKSEL	_checkTime
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 01rr                      1- 1614     	MOVR	_checkTime,W
     0087 0903                      1- 1615     	BTRSS	STATUS,2
                                    1- 1616     	MGOTO	_00206_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1617     	.line	304, "main.c"; 	LED2ON();
                                    1- 1618     	MCALL	_LED2ON
     0089 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1619     	MGOTO	_00206_DS_
     008A 3rrr                      3-   63 m1      LGOTO rom_address
     008B                           1- 1620     _00205_DS_:
                                    1- 1621     	.line	310, "main.c"; 	if(checkTime == 0)
                                    1- 1622     	BANKSEL	_checkTime
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 01rr                      1- 1623     	MOVR	_checkTime,W
     008D 0D03                      1- 1624     	BTRSC	STATUS,2
                                    1- 1625     	.line	311, "main.c"; 	LED2ON();
                                    1- 1626     	MCALL	_LED2ON
     008E 2rrr                      3-   66 m1      LCALL rom_address
     008F                           1- 1627     _00206_DS_:
                                    1- 1628     	.line	315, "main.c"; 	if(stopFlag)
                                    1- 1629     	BANKSEL	_stopFlag
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 01rr                      1- 1630     	MOVR	_stopFlag,W
     0091 0D03                      1- 1631     	BTRSC	STATUS,2
                                    1- 1632     	MGOTO	_00240_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1633     ;;unsigned compare: left < lit (0x32=50), size=2
                                    1- 1634     	.line	317, "main.c"; 	if(led2count < 50)
     0093 2100                      1- 1635     	MOVIA	0x00
                                    1- 1636     	BANKSEL	_led2count
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 04rr                      1- 1637     	SUBAR	(_led2count + 1),W
     0096 0903                      1- 1638     	BTRSS	STATUS,2
                                    1- 1639     	MGOTO	_00323_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
     0098 2132                      1- 1640     	MOVIA	0x32
     0099 04rr                      1- 1641     	SUBAR	_led2count,W
     009A                           1- 1642     _00323_DS_:
     009A 0C03                      1- 1643     	BTRSC	STATUS,0
                                    1- 1644     	MGOTO	_00225_DS_
     009B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1645     	.line	319, "main.c"; 	LEDOFF();
                                    1- 1646     	MCALL	_LEDOFF
     009C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1647     	MGOTO	_00226_DS_
     009D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1648     ;;unsigned compare: left < lit (0x64=100), size=2
     009E                           1- 1649     _00225_DS_:
                                    1- 1650     	.line	321, "main.c"; 	else if(led2count < 100)
     009E 2100                      1- 1651     	MOVIA	0x00
                                    1- 1652     	BANKSEL	_led2count
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 04rr                      1- 1653     	SUBAR	(_led2count + 1),W
     00A1 0903                      1- 1654     	BTRSS	STATUS,2
                                    1- 1655     	MGOTO	_00324_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
     00A3 2164                      1- 1656     	MOVIA	0x64
     00A4 04rr                      1- 1657     	SUBAR	_led2count,W
     00A5                           1- 1658     _00324_DS_:
     00A5 0C03                      1- 1659     	BTRSC	STATUS,0
                                    1- 1660     	MGOTO	_00222_DS_
     00A6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1661     	.line	323, "main.c"; 	LED2ON();
                                    1- 1662     	MCALL	_LED2ON
     00A7 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1663     	MGOTO	_00226_DS_
     00A8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1664     ;;unsigned compare: left < lit (0x96=150), size=2
     00A9                           1- 1665     _00222_DS_:
                                    1- 1666     	.line	325, "main.c"; 	else if(led2count < 150)
     00A9 2100                      1- 1667     	MOVIA	0x00
                                    1- 1668     	BANKSEL	_led2count
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 04rr                      1- 1669     	SUBAR	(_led2count + 1),W
     00AC 0903                      1- 1670     	BTRSS	STATUS,2
                                    1- 1671     	MGOTO	_00325_DS_
     00AD 3rrr                      3-   63 m1      LGOTO rom_address
     00AE 2196                      1- 1672     	MOVIA	0x96
     00AF 04rr                      1- 1673     	SUBAR	_led2count,W
     00B0                           1- 1674     _00325_DS_:
     00B0 0C03                      1- 1675     	BTRSC	STATUS,0
                                    1- 1676     	MGOTO	_00219_DS_
     00B1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1677     	.line	327, "main.c"; 	LEDOFF();
                                    1- 1678     	MCALL	_LEDOFF
     00B2 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1679     	MGOTO	_00226_DS_
     00B3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1680     ;;unsigned compare: left < lit (0xC8=200), size=2
     00B4                           1- 1681     _00219_DS_:
                                    1- 1682     	.line	329, "main.c"; 	else if(led2count < 200)
     00B4 2100                      1- 1683     	MOVIA	0x00
                                    1- 1684     	BANKSEL	_led2count
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 04rr                      1- 1685     	SUBAR	(_led2count + 1),W
     00B7 0903                      1- 1686     	BTRSS	STATUS,2
                                    1- 1687     	MGOTO	_00326_DS_
     00B8 3rrr                      3-   63 m1      LGOTO rom_address
     00B9 21C8                      1- 1688     	MOVIA	0xc8
     00BA 04rr                      1- 1689     	SUBAR	_led2count,W
     00BB                           1- 1690     _00326_DS_:
     00BB 0C03                      1- 1691     	BTRSC	STATUS,0
                                    1- 1692     	MGOTO	_00216_DS_
     00BC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1693     	.line	331, "main.c"; 	LED2ON();
                                    1- 1694     	MCALL	_LED2ON
     00BD 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1695     	MGOTO	_00226_DS_
     00BE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1696     ;;unsigned compare: left < lit (0xFA=250), size=2
     00BF                           1- 1697     _00216_DS_:
                                    1- 1698     	.line	333, "main.c"; 	else if(led2count < 250)
     00BF 2100                      1- 1699     	MOVIA	0x00
                                    1- 1700     	BANKSEL	_led2count
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 04rr                      1- 1701     	SUBAR	(_led2count + 1),W
     00C2 0903                      1- 1702     	BTRSS	STATUS,2
                                    1- 1703     	MGOTO	_00327_DS_
     00C3 3rrr                      3-   63 m1      LGOTO rom_address
     00C4 21FA                      1- 1704     	MOVIA	0xfa
     00C5 04rr                      1- 1705     	SUBAR	_led2count,W
     00C6                           1- 1706     _00327_DS_:
     00C6 0C03                      1- 1707     	BTRSC	STATUS,0
                                    1- 1708     	MGOTO	_00213_DS_
     00C7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1709     	.line	335, "main.c"; 	LEDOFF();
                                    1- 1710     	MCALL	_LEDOFF
     00C8 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1711     	MGOTO	_00226_DS_
     00C9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1712     ;;unsigned compare: left < lit (0x12C=300), size=2
     00CA                           1- 1713     _00213_DS_:
                                    1- 1714     	.line	337, "main.c"; 	else if(led2count < 300)
     00CA 2101                      1- 1715     	MOVIA	0x01
                                    1- 1716     	BANKSEL	_led2count
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 04rr                      1- 1717     	SUBAR	(_led2count + 1),W
     00CD 0903                      1- 1718     	BTRSS	STATUS,2
                                    1- 1719     	MGOTO	_00328_DS_
     00CE 3rrr                      3-   63 m1      LGOTO rom_address
     00CF 212C                      1- 1720     	MOVIA	0x2c
     00D0 04rr                      1- 1721     	SUBAR	_led2count,W
     00D1                           1- 1722     _00328_DS_:
     00D1 0C03                      1- 1723     	BTRSC	STATUS,0
                                    1- 1724     	MGOTO	_00210_DS_
     00D2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1725     	.line	339, "main.c"; 	LED2ON();
                                    1- 1726     	MCALL	_LED2ON
     00D3 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1727     	MGOTO	_00226_DS_
     00D4 3rrr                      3-   63 m1      LGOTO rom_address
     00D5                           1- 1728     _00210_DS_:
                                    1- 1729     	.line	343, "main.c"; 	LEDOFF();
                                    1- 1730     	MCALL	_LEDOFF
     00D5 2rrr                      3-   66 m1      LCALL rom_address
     00D6                           1- 1731     _00226_DS_:
                                    1- 1732     	.line	345, "main.c"; 	if(++led2count > 350)
                                    1- 1733     	BANKSEL	_led2count
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 05rr                      1- 1734     	INCR	_led2count,F
     00D8 0D03                      1- 1735     	BTRSC	STATUS,2
     00D9 05rr                      1- 1736     	INCR	(_led2count + 1),F
                                    1- 1737     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1738     ;;unsigned compare: left >= lit (0x15F=351), size=2
     00DA 2101                      1- 1739     	MOVIA	0x01
     00DB 04rr                      1- 1740     	SUBAR	(_led2count + 1),W
     00DC 0903                      1- 1741     	BTRSS	STATUS,2
                                    1- 1742     	MGOTO	_00329_DS_
     00DD 3rrr                      3-   63 m1      LGOTO rom_address
     00DE 215F                      1- 1743     	MOVIA	0x5f
     00DF 04rr                      1- 1744     	SUBAR	_led2count,W
     00E0                           1- 1745     _00329_DS_:
     00E0 0803                      1- 1746     	BTRSS	STATUS,0
                                    1- 1747     	MGOTO	_00240_DS_
     00E1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1748     	.line	347, "main.c"; 	stopFlag = 0;
                                    1- 1749     	BANKSEL	_stopFlag
     00E2 rrrr                      3-  110 m1      .banksel ram_address
     00E3 02rr                      1- 1750     	CLRR	_stopFlag
                                    1- 1751     	.line	348, "main.c"; 	gotoSleep();
                                    1- 1752     	MCALL	_gotoSleep
     00E4 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1753     	MGOTO	_00240_DS_
     00E5 3rrr                      3-   63 m1      LGOTO rom_address
     00E6                           1- 1754     _00238_DS_:
                                    1- 1755     	.line	355, "main.c"; 	PORTA &= 0x6F;
     00E6 216F                      1- 1756     	MOVIA	0x6f
     00E7 10rr                      1- 1757     	ANDAR	_PORTA,F
                                    1- 1758     	.line	356, "main.c"; 	if(chrgFlag == 0 && doublePressFlag == 0 && keyCount == 0)
                                    1- 1759     	BANKSEL	_chrgFlag
     00E8 rrrr                      3-  110 m1      .banksel ram_address
     00E9 01rr                      1- 1760     	MOVR	_chrgFlag,W
     00EA 0903                      1- 1761     	BTRSS	STATUS,2
                                    1- 1762     	MGOTO	_00240_DS_
     00EB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1763     	BANKSEL	_doublePressFlag
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 01rr                      1- 1764     	MOVR	_doublePressFlag,W
     00EE 0903                      1- 1765     	BTRSS	STATUS,2
                                    1- 1766     	MGOTO	_00240_DS_
     00EF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1767     	BANKSEL	_keyCount
     00F0 rrrr                      3-  110 m1      .banksel ram_address
     00F1 01rr                      1- 1768     	MOVR	_keyCount,W
     00F2 0903                      1- 1769     	BTRSS	STATUS,2
                                    1- 1770     	MGOTO	_00240_DS_
     00F3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1771     	.line	358, "main.c"; 	if(++sleepTime > 200)
                                    1- 1772     	BANKSEL	_sleepTime
     00F4 rrrr                      3-  110 m1      .banksel ram_address
     00F5 05rr                      1- 1773     	INCR	_sleepTime,F
                                    1- 1774     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1775     ;;unsigned compare: left >= lit (0xC9=201), size=1
     00F6 21C9                      1- 1776     	MOVIA	0xc9
     00F7 04rr                      1- 1777     	SUBAR	_sleepTime,W
     00F8 0C03                      1- 1778     	BTRSC	STATUS,0
                                    1- 1779     	.line	359, "main.c"; 	gotoSleep();
                                    1- 1780     	MCALL	_gotoSleep
     00F9 2rrr                      3-   66 m1      LCALL rom_address
     00FA                           1- 1781     _00240_DS_:
                                    1- 1782     	.line	363, "main.c"; 	}
                                    1- 1783     	RETURN	
     00FA 0010                      3-   40 m1      ret
                                    1- 1785     ;***
                                    1- 1786     ;  pBlock Stats: dbName = C
                                    1- 1787     ;***
                                    1- 1788     ;has an exit
                                    1- 1789     ;5 compiler assigned registers:
                                    1- 1790     ;   r0x1027
                                    1- 1791     ;   STK00
                                    1- 1792     ;   r0x1028
                                    1- 1793     ;   r0x1029
                                    1- 1794     ;   r0x102A
                                    1- 1795     ;; Starting pCode block
                                    1- 1796     .segment "code"; module=main, function=_delay
                                    1- 1798     ;local variable name mapping:
     0000                           1- 1803     _delay:
                                    1- 1804     ; 2 exit points
                                    1- 1805     	.line	253, "main.c"; 	void delay(u16 time)
                                    1- 1806     	BANKSEL	r0x1027
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1807     	MOVAR	r0x1027
     0002 01rr                      1- 1808     	MOVR	STK00,W
                                    1- 1809     	BANKSEL	r0x1028
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1810     	MOVAR	r0x1028
                                    1- 1811     	.line	255, "main.c"; 	for(u16 i=0;i<time;i++);
                                    1- 1812     	BANKSEL	r0x1029
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1- 1813     	CLRR	r0x1029
                                    1- 1814     	BANKSEL	r0x102A
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1- 1815     	CLRR	r0x102A
     0009                           1- 1816     _00165_DS_:
                                    1- 1817     	BANKSEL	r0x1027
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 01rr                      1- 1818     	MOVR	r0x1027,W
                                    1- 1819     	BANKSEL	r0x102A
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 04rr                      1- 1820     	SUBAR	r0x102A,W
     000D 0903                      1- 1821     	BTRSS	STATUS,2
                                    1- 1822     	MGOTO	_00176_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1823     	BANKSEL	r0x1028
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1- 1824     	MOVR	r0x1028,W
                                    1- 1825     	BANKSEL	r0x1029
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 04rr                      1- 1826     	SUBAR	r0x1029,W
     0013                           1- 1827     _00176_DS_:
     0013 0C03                      1- 1828     	BTRSC	STATUS,0
                                    1- 1829     	MGOTO	_00167_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1830     	BANKSEL	r0x1029
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 05rr                      1- 1831     	INCR	r0x1029,F
     0017 0903                      1- 1832     	BTRSS	STATUS,2
                                    1- 1833     	MGOTO	_00002_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1834     	BANKSEL	r0x102A
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 05rr                      1- 1835     	INCR	r0x102A,F
     001B                           1- 1836     _00002_DS_:
                                    1- 1837     	MGOTO	_00165_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
     001C                           1- 1838     _00167_DS_:
                                    1- 1839     	.line	256, "main.c"; 	}
                                    1- 1840     	RETURN	
     001C 0010                      3-   40 m1      ret
                                    1- 1841     ; exit point of _delay
                                    1- 1843     ;***
                                    1- 1844     ;  pBlock Stats: dbName = C
                                    1- 1845     ;***
                                    1- 1846     ;has an exit
                                    1- 1847     ;; Starting pCode block
                                    1- 1848     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1850     _F_wait_eoc:
                                    1- 1851     ; 2 exit points
     0000                           1- 1852     _00158_DS_:
                                    1- 1853     	.line	247, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1854     	BTRSS	_ADMDbits,5
                                    1- 1855     	MGOTO	_00158_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1856     	.line	249, "main.c"; 	}
                                    1- 1857     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1858     ; exit point of _F_wait_eoc
                                    1- 1860     ;***
                                    1- 1861     ;  pBlock Stats: dbName = C
                                    1- 1862     ;***
                                    1- 1863     ;has an exit
                                    1- 1864     ;functions called:
                                    1- 1865     ;   _delay
                                    1- 1866     ;   _F_wait_eoc
                                    1- 1867     ;   _delay
                                    1- 1868     ;   _F_wait_eoc
                                    1- 1869     ;7 compiler assigned registers:
                                    1- 1870     ;   r0x102B
                                    1- 1871     ;   STK00
                                    1- 1872     ;   r0x102C
                                    1- 1873     ;   r0x102D
                                    1- 1874     ;   r0x102E
                                    1- 1875     ;   r0x102F
                                    1- 1876     ;   r0x1030
                                    1- 1877     ;; Starting pCode block
                                    1- 1878     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1880     ;local variable name mapping:
     0000                           1- 1883     _F_AIN2_Convert:
                                    1- 1884     ; 2 exit points
                                    1- 1885     	.line	229, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1886     	BANKSEL	r0x102B
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1887     	MOVAR	r0x102B
                                    1- 1888     	.line	231, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1889     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1890     	CLRR	_R_AIN2_DATA_LB
                                    1- 1891     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1892     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1893     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1894     	.line	233, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1895     	MOVIA	0x92
     0008 00rr                      1- 1896     	MOVAR	_ADMD
                                    1- 1897     	.line	234, "main.c"; 	delay(200);	
     0009 21C8                      1- 1898     	MOVIA	0xc8
     000A 00rr                      1- 1899     	MOVAR	STK00
     000B 2100                      1- 1900     	MOVIA	0x00
                                    1- 1901     	MCALL	_delay
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1902     	.line	235, "main.c"; 	for(i=1;i<=count;i++)
     000D 2101                      1- 1903     	MOVIA	0x01
                                    1- 1904     	BANKSEL	r0x102C
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1- 1905     	MOVAR	r0x102C
     0010                           1- 1906     _00151_DS_:
                                    1- 1907     	BANKSEL	r0x102C
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1- 1908     	MOVR	r0x102C,W
                                    1- 1909     	BANKSEL	r0x102B
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 04rr                      1- 1910     	SUBAR	r0x102B,W
     0014 0803                      1- 1911     	BTRSS	STATUS,0
                                    1- 1912     	MGOTO	_00153_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1913     	.line	237, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0016 1Brr                      1- 1914     	BSR	_ADMDbits,6
                                    1- 1915     	.line	238, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1916     	MCALL	_F_wait_eoc
     0017 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1917     	.line	239, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0018 210F                      1- 1918     	MOVIA	0x0f
     0019 10rr                      1- 1919     	ANDAR	_ADR,W
                                    1- 1920     ;;3	MOVAR	r0x102D
                                    1- 1921     	BANKSEL	_R_AIN2_DATA_LB
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 03rr                      1- 1922     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1923     	.line	240, "main.c"; 	R_AIN2_DATA    += ADD; 
     001C 01rr                      1- 1924     	MOVR	_ADD,W
                                    1- 1925     	BANKSEL	r0x102D
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 00rr                      1- 1926     	MOVAR	r0x102D
                                    1- 1927     ;;1	CLRR	r0x102E
                                    1- 1928     ;;104	MOVR	r0x102D,W
                                    1- 1929     ;;102	MOVAR	r0x102F
     001F 2100                      1- 1930     	MOVIA	0x00
                                    1- 1931     	BANKSEL	r0x1030
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 00rr                      1- 1932     	MOVAR	r0x1030
                                    1- 1933     ;;103	MOVR	r0x102F,W
                                    1- 1934     	BANKSEL	r0x102D
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 1935     	MOVR	r0x102D,W
                                    1- 1936     	BANKSEL	_R_AIN2_DATA
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 03rr                      1- 1937     	ADDAR	_R_AIN2_DATA,F
                                    1- 1938     	BANKSEL	r0x1030
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 1939     	MOVR	r0x1030,W
     0028 0C03                      1- 1940     	BTRSC	STATUS,0
     0029 05rr                      1- 1941     	INCR	r0x1030,W
     002A 0D03                      1- 1942     	BTRSC	STATUS,2
                                    1- 1943     	MGOTO	_00003_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1944     	BANKSEL	_R_AIN2_DATA
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 03rr                      1- 1945     	ADDAR	(_R_AIN2_DATA + 1),F
     002E                           1- 1946     _00003_DS_:
                                    1- 1947     	.line	235, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1948     	BANKSEL	r0x102C
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 05rr                      1- 1949     	INCR	r0x102C,F
                                    1- 1950     	MGOTO	_00151_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 1951     _00153_DS_:
                                    1- 1952     	.line	242, "main.c"; 	}
                                    1- 1953     	RETURN	
     0031 0010                      3-   40 m1      ret
                                    1- 1954     ; exit point of _F_AIN2_Convert
                                    1- 1956     ;***
                                    1- 1957     ;  pBlock Stats: dbName = C
                                    1- 1958     ;***
                                    1- 1959     ;has an exit
                                    1- 1960     ;functions called:
                                    1- 1961     ;   _delay
                                    1- 1962     ;   _F_AIN2_Convert
                                    1- 1963     ;   _delay
                                    1- 1964     ;   _F_AIN2_Convert
                                    1- 1965     ;5 compiler assigned registers:
                                    1- 1966     ;   r0x1031
                                    1- 1967     ;   STK00
                                    1- 1968     ;   r0x1032
                                    1- 1969     ;   r0x1033
                                    1- 1970     ;   r0x1034
                                    1- 1971     ;; Starting pCode block
                                    1- 1972     .segment "code"; module=main, function=_checkBat
     0000                           1- 1974     _checkBat:
                                    1- 1975     ; 2 exit points
                                    1- 1976     	.line	215, "main.c"; 	PORTA &= 0xFB;
     0000 1Drr                      1- 1977     	BCR	_PORTA,2
                                    1- 1978     	.line	216, "main.c"; 	IOSTA |= 0x14;
     0001 001r                      1- 1979     	IOSTR	_IOSTA
                                    1- 1980     	BANKSEL	r0x1031
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 1981     	MOVAR	r0x1031
     0004 2114                      1- 1982     	MOVIA	0x14
     0005 11rr                      1- 1983     	IORAR	r0x1031,F
     0006 01rr                      1- 1984     	MOVR	r0x1031,W
     0007 000r                      1- 1985     	IOST	_IOSTA
                                    1- 1986     	.line	217, "main.c"; 	delay(100);
     0008 2164                      1- 1987     	MOVIA	0x64
     0009 00rr                      1- 1988     	MOVAR	STK00
     000A 2100                      1- 1989     	MOVIA	0x00
                                    1- 1990     	MCALL	_delay
     000B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1991     	.line	218, "main.c"; 	UPDATE_REG(PORTA);
     000C 01rr                      1- 1992     	MOVR	_PORTA,F
                                    1- 1993     	.line	219, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1994     	BANKSEL	_R_AIN2_DATA_LB
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 1995     	CLRR	_R_AIN2_DATA_LB
                                    1- 1996     	BANKSEL	_R_AIN2_DATA
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 1997     	CLRR	_R_AIN2_DATA
     0011 02rr                      1- 1998     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1999     	.line	220, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0012 2108                      1- 2000     	MOVIA	0x08
                                    1- 2001     	MCALL	_F_AIN2_Convert
     0013 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2002     	.line	221, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 2003     	BANKSEL	_R_AIN2_DATA
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 15rr                      1- 2004     	SWAPR	(_R_AIN2_DATA + 1),W
     0016 22F0                      1- 2005     	ANDIA	0xf0
     0017 00rr                      1- 2006     	MOVAR	(_R_AIN2_DATA + 1)
     0018 15rr                      1- 2007     	SWAPR	_R_AIN2_DATA,W
     0019 00rr                      1- 2008     	MOVAR	_R_AIN2_DATA
     001A 220F                      1- 2009     	ANDIA	0x0f
     001B 11rr                      1- 2010     	IORAR	(_R_AIN2_DATA + 1),F
     001C 12rr                      1- 2011     	XORAR	_R_AIN2_DATA,F
                                    1- 2012     	.line	222, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     001D 21F0                      1- 2013     	MOVIA	0xf0
                                    1- 2014     	BANKSEL	_R_AIN2_DATA_LB
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 10rr                      1- 2015     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 2016     	.line	223, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0020 01rr                      1- 2017     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 2018     	BANKSEL	r0x1031
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 00rr                      1- 2019     	MOVAR	r0x1031
                                    1- 2020     ;;1	CLRR	r0x1032
                                    1- 2021     ;;101	MOVR	r0x1031,W
                                    1- 2022     ;;99	MOVAR	r0x1033
     0023 2100                      1- 2023     	MOVIA	0x00
                                    1- 2024     	BANKSEL	r0x1034
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 00rr                      1- 2025     	MOVAR	r0x1034
                                    1- 2026     ;;100	MOVR	r0x1033,W
                                    1- 2027     	BANKSEL	r0x1031
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 01rr                      1- 2028     	MOVR	r0x1031,W
                                    1- 2029     	BANKSEL	_R_AIN2_DATA
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 03rr                      1- 2030     	ADDAR	_R_AIN2_DATA,F
                                    1- 2031     	BANKSEL	r0x1034
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 01rr                      1- 2032     	MOVR	r0x1034,W
     002C 0C03                      1- 2033     	BTRSC	STATUS,0
     002D 05rr                      1- 2034     	INCR	r0x1034,W
     002E 0D03                      1- 2035     	BTRSC	STATUS,2
                                    1- 2036     	MGOTO	_00004_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2037     	BANKSEL	_R_AIN2_DATA
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 03rr                      1- 2038     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 2039     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0032                           1- 2040     _00004_DS_:
                                    1- 2041     	.line	224, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 8	
     0032 1C03                      1- 2042     	BCR	STATUS,0
                                    1- 2043     	BANKSEL	_R_AIN2_DATA
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 13rr                      1- 2044     	RRR	(_R_AIN2_DATA + 1),F
     0035 13rr                      1- 2045     	RRR	_R_AIN2_DATA,F
                                    1- 2046     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0036 1C03                      1- 2047     	BCR	STATUS,0
     0037 13rr                      1- 2048     	RRR	(_R_AIN2_DATA + 1),F
     0038 13rr                      1- 2049     	RRR	_R_AIN2_DATA,F
                                    1- 2050     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0039 1C03                      1- 2051     	BCR	STATUS,0
     003A 13rr                      1- 2052     	RRR	(_R_AIN2_DATA + 1),F
     003B 13rr                      1- 2053     	RRR	_R_AIN2_DATA,F
                                    1- 2054     	.line	226, "main.c"; 	}
                                    1- 2055     	RETURN	
     003C 0010                      3-   40 m1      ret
                                    1- 2056     ; exit point of _checkBat
                                    1- 2058     ;***
                                    1- 2059     ;  pBlock Stats: dbName = C
                                    1- 2060     ;***
                                    1- 2061     ;has an exit
                                    1- 2062     ;functions called:
                                    1- 2063     ;   _delay
                                    1- 2064     ;   _delay
                                    1- 2065     ;1 compiler assigned register :
                                    1- 2066     ;   STK00
                                    1- 2067     ;; Starting pCode block
                                    1- 2068     .segment "code"; module=main, function=_initAD
     0000                           1- 2070     _initAD:
                                    1- 2071     ; 2 exit points
                                    1- 2072     	.line	190, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA2 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2182                      1- 2073     	MOVIA	0x82
     0001 00rr                      1- 2074     	MOVAR	_ADMD
                                    1- 2075     	.line	194, "main.c"; 	ADVREFH = C_Vrefh_3V;					// ADC reference high voltage is supplied by internal 3V  (Note: ADC clock freq. must be equal or less than 500KHz)
     0002 2101                      1- 2076     	MOVIA	0x01
     0003 00rr                      1- 2077     	MOVAR	_ADVREFH
                                    1- 2078     	.line	200, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0004 2110                      1- 2079     	MOVIA	0x10
     0005 00rr                      1- 2080     	MOVAR	_ADR
                                    1- 2081     	.line	202, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0006 2103                      1- 2082     	MOVIA	0x03
     0007 00rr                      1- 2083     	MOVAR	_ADCR
                                    1- 2084     	.line	205, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0008 1Arr                      1- 2085     	BSR	_ADMDbits,4
                                    1- 2086     	.line	206, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0009 2164                      1- 2087     	MOVIA	0x64
     000A 00rr                      1- 2088     	MOVAR	STK00
     000B 2100                      1- 2089     	MOVIA	0x00
                                    1- 2090     	MCALL	_delay
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2091     	.line	209, "main.c"; 	}
                                    1- 2092     	RETURN	
     000D 0010                      3-   40 m1      ret
                                    1- 2093     ; exit point of _initAD
                                    1- 2096     ;	code size estimation:
                                    1- 2097     ;	  758+  175 =   933 instructions ( 2216 byte)
                                    1- 2099     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
