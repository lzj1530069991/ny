
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8A053E,c=on
                                    1-    9     	#include "ny8a053e.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_showNub
                                    1-   15     	extern	_setHightOutput
                                    1-   16     	extern	_setlowOutput
                                    1-   17     	extern	_setOutput
                                    1-   18     	extern	_setInput
                                    1-   19     	extern	_showNubGewei
                                    1-   20     	extern	_showNubGewei2
                                    1-   21     	extern	_showNubShiwei
                                    1-   22     	extern	_showNubShiwei2
                                    1-   23     	extern	_A2
                                    1-   24     	extern	_B2
                                    1-   25     	extern	_C2
                                    1-   26     	extern	_D2
                                    1-   27     	extern	_E2
                                    1-   28     	extern	_F2
                                    1-   29     	extern	_G2
                                    1-   30     	extern	_A3
                                    1-   31     	extern	_B3
                                    1-   32     	extern	_C3
                                    1-   33     	extern	_D3
                                    1-   34     	extern	_E3
                                    1-   35     	extern	_F3
                                    1-   36     	extern	_G3
                                    1-   37     	extern	_delayms
                                    1-   38     	extern	_PORTAbits
                                    1-   39     	extern	_PORTBbits
                                    1-   40     	extern	_PCONbits
                                    1-   41     	extern	_BWUCONbits
                                    1-   42     	extern	_ABPLCONbits
                                    1-   43     	extern	_BPHCONbits
                                    1-   44     	extern	_INTEbits
                                    1-   45     	extern	_INTFbits
                                    1-   46     	extern	_INDF
                                    1-   47     	extern	_TMR0
                                    1-   48     	extern	_PCL
                                    1-   49     	extern	_STATUS
                                    1-   50     	extern	_FSR
                                    1-   51     	extern	_PORTA
                                    1-   52     	extern	_PORTB
                                    1-   53     	extern	_PCON
                                    1-   54     	extern	_BWUCON
                                    1-   55     	extern	_PCHBUF
                                    1-   56     	extern	_ABPLCON
                                    1-   57     	extern	_BPHCON
                                    1-   58     	extern	_INTE
                                    1-   59     	extern	_INTF
                                    1-   60     	extern	_TMR1
                                    1-   61     	extern	_T1CR1
                                    1-   62     	extern	_T1CR2
                                    1-   63     	extern	_PWM1DUTY
                                    1-   64     	extern	_PS1CV
                                    1-   65     	extern	_BZ1CR
                                    1-   66     	extern	_IRCR
                                    1-   67     	extern	_TBHP
                                    1-   68     	extern	_TBHD
                                    1-   69     	extern	_P2CR1
                                    1-   70     	extern	_PWM2DUTY
                                    1-   71     	extern	_TMRH
                                    1-   72     	extern	_TM34RH
                                    1-   73     	extern	_OSCCR
                                    1-   74     	extern	_P3CR1
                                    1-   75     	extern	_PWM3DUTY
                                    1-   76     	extern	_P4CR1
                                    1-   77     	extern	_PWM4DUTY
                                    1-   78     	extern	_IOSTA
                                    1-   79     	extern	_IOSTB
                                    1-   80     	extern	_PS0CV
                                    1-   81     	extern	_BODCON
                                    1-   82     	extern	_CMPCR
                                    1-   83     	extern	_PCON1
                                    1-   84     	extern	_T0MD
                                    1-   85     	extern	___sdcc_saved_fsr
                                    1-   86     	extern	___sdcc_saved_stk00
                                    1-   87     	extern	___sdcc_saved_stk01
                                    1-   88     	extern	__gptrget1
                                    1-   89     	extern	__nyc_ny8_startup
                                    1-   90     ;--------------------------------------------------------
                                    1-   91     ; global declarations
                                    1-   92     ;--------------------------------------------------------
                                    1-   93     	extern	_delay
                                    1-   94     	extern	_initSys
                                    1-   95     	extern	_gotoSleep
                                    1-   96     	extern	_keyCtr
                                    1-   97     	extern	_keyRead
                                    1-   98     	extern	_workCtr
                                    1-   99     	extern	_pwmStop
                                    1-  100     	extern	_pwmInit
                                    1-  101     	extern	_refreshNub
                                    1-  102     	extern	_isr
                                    1-  103     	extern	_main
                                    1-  104     	extern	_keyCount
                                    1-  105     	extern	_count1s
                                    1-  106     	extern	_count900s
                                    1-  107     	extern	_longPressFlag
                                    1-  108     	extern	_sleepDelay
                                    1-  109     	extern	_workStep
                                    1-  110     	extern	_duty
                                    1-  111     	extern	_lvdTime
                                    1-  112     	extern	_intCount
                                    1-  113     	extern	_IntFlag
                                    1-  114     	extern	_baiweiNum
                                    1-  115     	extern	_shiweiNum
                                    1-  116     	extern	_geweiNum
                                    1-  117     	extern	_showFlag
                                    1-  119     	extern PSAVE
                                    1-  120     	extern SSAVE
                                    1-  121     	extern WSAVE
                                    1-  122     	extern STK04
                                    1-  123     	extern STK03
                                    1-  124     	extern STK02
                                    1-  125     	extern STK01
                                    1-  126     	extern STK00
                                    1-  128     .segment "uninit", 0x20000020
 20000020                           1-  129     PSAVE:
                                    1-  130     	.res 1
 20000021                           1-  131     SSAVE:
                                    1-  132     	.res 1
 20000022                           1-  133     WSAVE:
                                    1-  134     	.res 1
 20000023                           1-  135     STK04:
                                    1-  136     	.res 1
 20000024                           1-  137     STK03:
                                    1-  138     	.res 1
 20000025                           1-  139     STK02:
                                    1-  140     	.res 1
 20000026                           1-  141     STK01:
                                    1-  142     	.res 1
 20000027                           1-  143     STK00:
                                    1-  144     	.res 1
                                    1-  146     ;--------------------------------------------------------
                                    1-  147     ; global definitions
                                    1-  148     ;--------------------------------------------------------
                                    1-  149     ;--------------------------------------------------------
                                    1-  150     ; absolute symbol definitions
                                    1-  151     ;--------------------------------------------------------
                                    1-  152     ;--------------------------------------------------------
                                    1-  153     ; compiler-defined variables
                                    1-  154     ;--------------------------------------------------------
                                    1-  155     .segment "uninit"
     0000                           1-  156     r0x1024:
                                    1-  157     	.res	1
                                    1-  158     .segment "uninit"
     0000                           1-  159     r0x1025:
                                    1-  160     	.res	1
                                    1-  161     .segment "uninit"
     0000                           1-  162     r0x1022:
                                    1-  163     	.res	1
                                    1-  164     .segment "uninit"
     0000                           1-  165     r0x1023:
                                    1-  166     	.res	1
                                    1-  167     .segment "uninit"
     0000                           1-  168     r0x1020:
                                    1-  169     	.res	1
                                    1-  170     .segment "uninit"
     0000                           1-  171     r0x1021:
                                    1-  172     	.res	1
                                    1-  173     ;--------------------------------------------------------
                                    1-  174     ; initialized data
                                    1-  175     ;--------------------------------------------------------
                                    1-  177     .segment "idata"
     0000                           1-  178     _numArray:
     0000 003F                      1-  179     	dw	0x3f
     0001 0006                      1-  180     	dw	0x06
     0002 005B                      1-  181     	dw	0x5b
     0003 004F                      1-  182     	dw	0x4f
     0004 0066                      1-  183     	dw	0x66
     0005 006D                      1-  184     	dw	0x6d
     0006 007D                      1-  185     	dw	0x7d
     0007 0007                      1-  186     	dw	0x07
     0008 007F                      1-  187     	dw	0x7f
     0009 006F                      1-  188     	dw	0x6f
     000A 0071                      1-  189     	dw	0x71
     000B 0079                      1-  190     	dw	0x79
     000C 0050                      1-  191     	dw	0x50
                                    1-  195     .segment "idata"
     0000                           1-  196     _keyCount:
     0000 0000 0000                 1-  197     	dw	0x00, 0x00
                                    1-  201     .segment "idata"
     0000                           1-  202     _count1s:
     0000 0000 0000                 1-  203     	dw	0x00, 0x00
                                    1-  207     .segment "idata"
     0000                           1-  208     _count900s:
     0000 0000 0000                 1-  209     	dw	0x00, 0x00
                                    1-  213     .segment "idata"
     0000                           1-  214     _longPressFlag:
     0000 0000                      1-  215     	dw	0x00
                                    1-  219     .segment "idata"
     0000                           1-  220     _sleepDelay:
     0000 0000                      1-  221     	dw	0x00
                                    1-  225     .segment "idata"
     0000                           1-  226     _workStep:
     0000 0000                      1-  227     	dw	0x00
                                    1-  231     .segment "idata"
     0000                           1-  232     _duty:
     0000 0064                      1-  233     	dw	0x64
                                    1-  237     .segment "idata"
     0000                           1-  238     _lvdTime:
     0000 0000                      1-  239     	dw	0x00
                                    1-  243     .segment "idata"
     0000                           1-  244     _intCount:
     0000 0000                      1-  245     	dw	0x00
                                    1-  249     .segment "idata"
     0000                           1-  250     _IntFlag:
     0000 0000                      1-  251     	dw	0x00
                                    1-  255     .segment "idata"
     0000                           1-  256     _baiweiNum:
     0000 0000                      1-  257     	dw	0x00
                                    1-  261     .segment "idata"
     0000                           1-  262     _shiweiNum:
     0000 0000                      1-  263     	dw	0x00
                                    1-  267     .segment "idata"
     0000                           1-  268     _geweiNum:
     0000 0000                      1-  269     	dw	0x00
                                    1-  273     .segment "idata"
     0000                           1-  274     _showFlag:
     0000 0000                      1-  275     	dw	0x00
                                    1-  278     ;--------------------------------------------------------
                                    1-  279     ; overlayable items in internal ram 
                                    1-  280     ;--------------------------------------------------------
                                    1-  281     ;	udata_ovr
                                    1-  282     ;--------------------------------------------------------
                                    1-  283     ; reset vector 
                                    1-  284     ;--------------------------------------------------------
                                    1-  285     ORG	0x0000
     0000 3rrr                      1-  286     	LGOTO	__nyc_ny8_startup
                                    1-  287     ;--------------------------------------------------------
                                    1-  288     ; interrupt and initialization code
                                    1-  289     ;--------------------------------------------------------
                                    1-  290     ORG 0x0008
                                    1-  291     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  293     .segment "code"
     0000                           1-  294     __sdcc_interrupt:
                                    1-  295     ;***
                                    1-  296     ;  pBlock Stats: dbName = I
                                    1-  297     ;***
                                    1-  298     ;2 compiler assigned registers:
                                    1-  299     ;   STK00
                                    1-  300     ;   STK01
                                    1-  301     ;; Starting pCode block
     0000                           1-  302     _isr:
                                    1-  303     ; 0 exit points
                                    1-  304     	.line	52, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  305     	MOVAR	WSAVE
     0001 1503                      1-  306     	SWAPR	STATUS,W
     0002 0283                      1-  307     	CLRR	STATUS
     0003 00rr                      1-  308     	MOVAR	SSAVE
     0004 010A                      1-  309     	MOVR	PCHBUF,W
     0005 028A                      1-  310     	CLRR	PCHBUF
     0006 00rr                      1-  311     	MOVAR	PSAVE
     0007 0104                      1-  312     	MOVR	FSR,W
                                    1-  313     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  314     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  315     	MOVR	STK00,W
                                    1-  316     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  317     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  318     	MOVR	STK01,W
                                    1-  319     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  320     	MOVAR	___sdcc_saved_stk01
                                    1-  321     	.line	54, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  322     	BTRSS	_INTFbits,0
                                    1-  323     	MGOTO	_00112_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  324     	.line	56, "main.c"; 	TMR0 += 57;
     0012 2139                      1-  325     	MOVIA	0x39
     0013 03rr                      1-  326     	ADDAR	_TMR0,F
                                    1-  327     	.line	57, "main.c"; 	if(++intCount >= 100)
                                    1-  328     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  329     	INCR	_intCount,F
                                    1-  330     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  331     	MOVIA	0x64
     0017 04rr                      1-  332     	SUBAR	_intCount,W
     0018 0803                      1-  333     	BTRSS	STATUS,0
                                    1-  334     	MGOTO	_00112_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  335     	.line	59, "main.c"; 	intCount = 0;
     001A 02rr                      1-  336     	CLRR	_intCount
                                    1-  337     	.line	60, "main.c"; 	IntFlag = 1;
     001B 2101                      1-  338     	MOVIA	0x01
                                    1-  339     	BANKSEL	_IntFlag
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 00rr                      1-  340     	MOVAR	_IntFlag
                                    1-  341     	.line	61, "main.c"; 	if(workStep)
                                    1-  342     	BANKSEL	_workStep
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 01rr                      1-  343     	MOVR	_workStep,W
     0020 0D03                      1-  344     	BTRSC	STATUS,2
                                    1-  345     	MGOTO	_00112_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  346     	.line	63, "main.c"; 	if(++count1s>= 99)
                                    1-  347     	BANKSEL	_count1s
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 05rr                      1-  348     	INCR	_count1s,F
     0024 0D03                      1-  349     	BTRSC	STATUS,2
     0025 05rr                      1-  350     	INCR	(_count1s + 1),F
                                    1-  351     ;;unsigned compare: left < lit (0x63=99), size=2
     0026 2100                      1-  352     	MOVIA	0x00
     0027 04rr                      1-  353     	SUBAR	(_count1s + 1),W
     0028 0903                      1-  354     	BTRSS	STATUS,2
                                    1-  355     	MGOTO	_00133_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
     002A 2163                      1-  356     	MOVIA	0x63
     002B 04rr                      1-  357     	SUBAR	_count1s,W
     002C                           1-  358     _00133_DS_:
     002C 0803                      1-  359     	BTRSS	STATUS,0
                                    1-  360     	MGOTO	_00112_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  361     	.line	65, "main.c"; 	count1s = 0;
                                    1-  362     	BANKSEL	_count1s
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 02rr                      1-  363     	CLRR	_count1s
     0030 02rr                      1-  364     	CLRR	(_count1s + 1)
                                    1-  365     	.line	66, "main.c"; 	count900s++;
                                    1-  366     	BANKSEL	_count900s
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 05rr                      1-  367     	INCR	_count900s,F
     0033 0D03                      1-  368     	BTRSC	STATUS,2
     0034 05rr                      1-  369     	INCR	(_count900s + 1),F
     0035                           1-  370     _00112_DS_:
                                    1-  371     	.line	71, "main.c"; 	if(INTFbits.PBIF)
     0035 08rr                      1-  372     	BTRSS	_INTFbits,1
                                    1-  373     	MGOTO	_00114_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  374     	.line	73, "main.c"; 	INTF= (unsigned char)~(C_INT_PBKey);	// Clear PABIF(PortB input change interrupt flag bit)		
     0037 21FD                      1-  375     	MOVIA	0xfd
     0038 00rr                      1-  376     	MOVAR	_INTF
     0039                           1-  377     _00114_DS_:
                                    1-  378     	.line	76, "main.c"; 	INTF = 0;
     0039 02rr                      1-  379     	CLRR	_INTF
                                    1-  380     	.line	78, "main.c"; 	}
                                    1-  381     	BANKSEL	___sdcc_saved_stk01
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1-  382     	MOVR	___sdcc_saved_stk01,W
     003C 00rr                      1-  383     	MOVAR	STK01
                                    1-  384     	BANKSEL	___sdcc_saved_stk00
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 01rr                      1-  385     	MOVR	___sdcc_saved_stk00,W
     003F 00rr                      1-  386     	MOVAR	STK00
                                    1-  387     	BANKSEL	___sdcc_saved_fsr
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 01rr                      1-  388     	MOVR	___sdcc_saved_fsr,W
     0042 0084                      1-  389     	MOVAR	FSR
     0043 01rr                      1-  390     	MOVR	PSAVE,W
     0044 008A                      1-  391     	MOVAR	PCHBUF
     0045 0283                      1-  392     	CLRR	STATUS
     0046 15rr                      1-  393     	SWAPR	SSAVE,W
     0047 0083                      1-  394     	MOVAR	STATUS
     0048 15rr                      1-  395     	SWAPR	WSAVE,F
     0049 15rr                      1-  396     	SWAPR	WSAVE,W
     004A                           1-  397     END_OF_INTERRUPT:
     004A 0011                      1-  398     	RETIE	
                                    1-  400     ;--------------------------------------------------------
                                    1-  401     ; code
                                    1-  402     ;--------------------------------------------------------
                                    1-  403     ;***
                                    1-  404     ;  pBlock Stats: dbName = M
                                    1-  405     ;***
                                    1-  406     ;has an exit
                                    1-  407     ;functions called:
                                    1-  408     ;   _initSys
                                    1-  409     ;   _refreshNub
                                    1-  410     ;   _setInput
                                    1-  411     ;   _keyCtr
                                    1-  412     ;   _workCtr
                                    1-  413     ;   _initSys
                                    1-  414     ;   _refreshNub
                                    1-  415     ;   _setInput
                                    1-  416     ;   _keyCtr
                                    1-  417     ;   _workCtr
                                    1-  418     ;; Starting pCode block
                                    1-  419     .segment "code"; module=main, function=_main
     0000                           1-  421     _main:
                                    1-  422     ; 2 exit points
                                    1-  423     	.line	83, "main.c"; 	initSys();
                                    1-  424     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
     0001                           1-  425     _00144_DS_:
                                    1-  426     	.line	86, "main.c"; 	CLRWDT();
     0001 0002                      1-  427     	clrwdt
                                    1-  428     	.line	87, "main.c"; 	if(showFlag)
                                    1-  429     	BANKSEL	_showFlag
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 01rr                      1-  430     	MOVR	_showFlag,W
     0004 0D03                      1-  431     	BTRSC	STATUS,2
                                    1-  432     	MGOTO	_00139_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  433     	.line	88, "main.c"; 	refreshNub();
                                    1-  434     	MCALL	_refreshNub
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  435     	MGOTO	_00140_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
     0008                           1-  436     _00139_DS_:
                                    1-  437     	.line	91, "main.c"; 	baiweiNum = shiweiNum = geweiNum = 0;
                                    1-  438     	BANKSEL	_geweiNum
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 02rr                      1-  439     	CLRR	_geweiNum
                                    1-  440     	BANKSEL	_shiweiNum
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 02rr                      1-  441     	CLRR	_shiweiNum
                                    1-  442     	BANKSEL	_baiweiNum
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 02rr                      1-  443     	CLRR	_baiweiNum
                                    1-  444     	.line	92, "main.c"; 	setInput();
                                    1-  445     	MCALL	_setInput
     000E 2rrr                      3-   66 m1      LCALL rom_address
     000F                           1-  446     _00140_DS_:
                                    1-  447     	.line	94, "main.c"; 	if(!IntFlag)
                                    1-  448     	BANKSEL	_IntFlag
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 01rr                      1-  449     	MOVR	_IntFlag,W
     0011 0D03                      1-  450     	BTRSC	STATUS,2
                                    1-  451     	MGOTO	_00144_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  452     	.line	96, "main.c"; 	IntFlag = 0;
     0013 02rr                      1-  453     	CLRR	_IntFlag
                                    1-  454     	.line	97, "main.c"; 	keyCtr();
                                    1-  455     	MCALL	_keyCtr
     0014 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  456     	.line	98, "main.c"; 	workCtr();
                                    1-  457     	MCALL	_workCtr
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  458     	MGOTO	_00144_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  459     	.line	102, "main.c"; 	}
                                    1-  460     	RETURN	
     0017 0010                      3-   40 m1      ret
                                    1-  461     ; exit point of _main
                                    1-  463     ;***
                                    1-  464     ;  pBlock Stats: dbName = C
                                    1-  465     ;***
                                    1-  466     ;has an exit
                                    1-  467     ;2 compiler assigned registers:
                                    1-  468     ;   r0x1020
                                    1-  469     ;   r0x1021
                                    1-  470     ;; Starting pCode block
                                    1-  471     .segment "code"; module=main, function=_delay
                                    1-  473     ;local variable name mapping:
     0000                           1-  476     _delay:
                                    1-  477     ; 2 exit points
                                    1-  478     	.line	278, "main.c"; 	void delay(u8t time)
                                    1-  479     	BANKSEL	r0x1020
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  480     	MOVAR	r0x1020
                                    1-  481     	.line	280, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1-  482     	BANKSEL	r0x1021
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  483     	CLRR	r0x1021
     0004                           1-  484     _00263_DS_:
                                    1-  485     	BANKSEL	r0x1020
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  486     	MOVR	r0x1020,W
                                    1-  487     	BANKSEL	r0x1021
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1-  488     	SUBAR	r0x1021,W
     0008 0C03                      1-  489     	BTRSC	STATUS,0
                                    1-  490     	MGOTO	_00265_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  491     	.line	282, "main.c"; 	NOP();
     000A 0000                      1-  492     	nop
                                    1-  493     	.line	280, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1-  494     	BANKSEL	r0x1021
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1-  495     	INCR	r0x1021,F
                                    1-  496     	MGOTO	_00263_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1-  497     _00265_DS_:
                                    1-  498     	.line	284, "main.c"; 	}
                                    1-  499     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1-  500     ; exit point of _delay
                                    1-  502     ;***
                                    1-  503     ;  pBlock Stats: dbName = C
                                    1-  504     ;***
                                    1-  505     ;has an exit
                                    1-  506     ;; Starting pCode block
                                    1-  507     .segment "code"; module=main, function=_initSys
     0000                           1-  509     _initSys:
                                    1-  510     ; 2 exit points
                                    1-  511     	.line	257, "main.c"; 	PORTA = 0x00;
     0000 02rr                      1-  512     	CLRR	_PORTA
                                    1-  513     	.line	258, "main.c"; 	PORTB = 0x00;
     0001 02rr                      1-  514     	CLRR	_PORTB
                                    1-  515     	.line	259, "main.c"; 	BPHCON = 0x7F;		//PA0上拉
     0002 217F                      1-  516     	MOVIA	0x7f
     0003 00rr                      1-  517     	MOVAR	_BPHCON
                                    1-  518     	.line	261, "main.c"; 	IOSTA =  0x00;					//PA0输入
     0004 0200                      1-  519     	CLRA	
     0005 000r                      1-  520     	IOST	_IOSTA
                                    1-  521     	.line	262, "main.c"; 	IOSTB = C_PB7_Input;
     0006 2180                      1-  522     	MOVIA	0x80
     0007 000r                      1-  523     	IOST	_IOSTB
                                    1-  524     	.line	263, "main.c"; 	PORTA = 0x00;
     0008 02rr                      1-  525     	CLRR	_PORTA
                                    1-  526     	.line	264, "main.c"; 	PORTB = 0x00;                       	
     0009 02rr                      1-  527     	CLRR	_PORTB
                                    1-  528     	.line	265, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT & LVR
     000A 21A8                      1-  529     	MOVIA	0xa8
     000B 00rr                      1-  530     	MOVAR	_PCON
                                    1-  531     	.line	267, "main.c"; 	PCON1 = C_TMR0_Dis;
     000C 0200                      1-  532     	CLRA	
     000D 000r                      1-  533     	IOST	_PCON1
                                    1-  534     	.line	269, "main.c"; 	TMR0 = 55;
     000E 2137                      1-  535     	MOVIA	0x37
     000F 00rr                      1-  536     	MOVAR	_TMR0
                                    1-  537     	.line	270, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0010 0200                      1-  538     	CLRA	
     0011 0003                      1-  539     	T0MD	
                                    1-  540     	.line	271, "main.c"; 	INTE =  C_INT_TMR0;
     0012 2101                      1-  541     	MOVIA	0x01
     0013 00rr                      1-  542     	MOVAR	_INTE
                                    1-  543     	.line	272, "main.c"; 	PCON1 = C_TMR0_En;
     0014 000r                      1-  544     	IOST	_PCON1
                                    1-  545     	.line	273, "main.c"; 	P2CR1 = 0x00;
     0015 0200                      1-  546     	CLRA	
     0016 00rr                      1-  547     	SFUN	_P2CR1
                                    1-  548     	.line	274, "main.c"; 	ENI();
     0017 0004                      1-  549     	ENI
                                    1-  550     	.line	275, "main.c"; 	}
                                    1-  551     	RETURN	
     0018 0010                      3-   40 m1      ret
                                    1-  552     ; exit point of _initSys
                                    1-  554     ;***
                                    1-  555     ;  pBlock Stats: dbName = C
                                    1-  556     ;***
                                    1-  557     ;has an exit
                                    1-  558     ;functions called:
                                    1-  559     ;   _pwmStop
                                    1-  560     ;   _pwmStop
                                    1-  561     ;; Starting pCode block
                                    1-  562     .segment "code"; module=main, function=_gotoSleep
     0000                           1-  564     _gotoSleep:
                                    1-  565     ; 2 exit points
                                    1-  566     	.line	235, "main.c"; 	pwmStop();
                                    1-  567     	MCALL	_pwmStop
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  568     	.line	236, "main.c"; 	count900s = 0;
                                    1-  569     	BANKSEL	_count900s
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 02rr                      1-  570     	CLRR	_count900s
     0003 02rr                      1-  571     	CLRR	(_count900s + 1)
                                    1-  572     	.line	237, "main.c"; 	sleepDelay = 0;
                                    1-  573     	BANKSEL	_sleepDelay
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1-  574     	CLRR	_sleepDelay
                                    1-  575     	.line	238, "main.c"; 	workStep = 0;
                                    1-  576     	BANKSEL	_workStep
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1-  577     	CLRR	_workStep
                                    1-  578     	.line	239, "main.c"; 	PORTA = 0x00;
     0008 02rr                      1-  579     	CLRR	_PORTA
                                    1-  580     	.line	240, "main.c"; 	PORTB = 0x00;
     0009 02rr                      1-  581     	CLRR	_PORTB
                                    1-  582     	.line	241, "main.c"; 	BWUCON = 0x80;
     000A 2180                      1-  583     	MOVIA	0x80
     000B 00rr                      1-  584     	MOVAR	_BWUCON
                                    1-  585     	.line	242, "main.c"; 	INTE =  C_INT_PBKey;
     000C 2102                      1-  586     	MOVIA	0x02
     000D 00rr                      1-  587     	MOVAR	_INTE
                                    1-  588     	.line	243, "main.c"; 	PCON =  C_LVR_En;	
     000E 2108                      1-  589     	MOVIA	0x08
     000F 00rr                      1-  590     	MOVAR	_PCON
                                    1-  591     	.line	244, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0010 02rr                      1-  592     	CLRR	_INTF
                                    1-  593     	.line	245, "main.c"; 	CLRWDT();
     0011 0002                      1-  594     	clrwdt
                                    1-  595     	.line	246, "main.c"; 	SLEEP();
     0012 0001                      1-  596     	sleep
                                    1-  597     	.line	247, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     0013 2101                      1-  598     	MOVIA	0x01
     0014 00rr                      1-  599     	MOVAR	_INTE
                                    1-  600     	.line	248, "main.c"; 	INTF = 0;
     0015 02rr                      1-  601     	CLRR	_INTF
                                    1-  602     	.line	250, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En;				// Enable WDT ,  Enable LVR
     0016 21A8                      1-  603     	MOVIA	0xa8
     0017 00rr                      1-  604     	MOVAR	_PCON
                                    1-  605     	.line	251, "main.c"; 	}
                                    1-  606     	RETURN	
     0018 0010                      3-   40 m1      ret
                                    1-  607     ; exit point of _gotoSleep
                                    1-  609     ;***
                                    1-  610     ;  pBlock Stats: dbName = C
                                    1-  611     ;***
                                    1-  612     ;functions called:
                                    1-  613     ;   _keyRead
                                    1-  614     ;   _pwmInit
                                    1-  615     ;   _keyRead
                                    1-  616     ;   _pwmInit
                                    1-  617     ;1 compiler assigned register :
                                    1-  618     ;   r0x1023
                                    1-  619     ;; Starting pCode block
                                    1-  620     .segment "code"; module=main, function=_keyCtr
                                    1-  622     ;local variable name mapping:
     0000                           1-  624     _keyCtr:
                                    1-  625     ; 0 exit points
                                    1-  626     	.line	210, "main.c"; 	char kclick = keyRead(0x80 & (~PORTB));
     0000 07rr                      1-  627     	COMR	_PORTB,W
                                    1-  628     	BANKSEL	r0x1023
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1-  629     	MOVAR	r0x1023
     0003 2180                      1-  630     	MOVIA	0x80
     0004 10rr                      1-  631     	ANDAR	r0x1023,F
     0005 01rr                      1-  632     	MOVR	r0x1023,W
                                    1-  633     	MCALL	_keyRead
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  634     	BANKSEL	r0x1023
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 00rr                      1-  635     	MOVAR	r0x1023
                                    1-  636     	.line	211, "main.c"; 	if(kclick == 1)
     0009 2401                      1-  637     	XORIA	0x01
     000A 0903                      1-  638     	BTRSS	STATUS,2
                                    1-  639     	MGOTO	_00246_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  640     	.line	213, "main.c"; 	if(++workStep >= 7)
                                    1-  641     	BANKSEL	_workStep
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 05rr                      1-  642     	INCR	_workStep,F
                                    1-  643     ;;unsigned compare: left < lit (0x7=7), size=1
     000E 2107                      1-  644     	MOVIA	0x07
     000F 04rr                      1-  645     	SUBAR	_workStep,W
     0010 0803                      1-  646     	BTRSS	STATUS,0
                                    1-  647     	MGOTO	_00238_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  648     	.line	215, "main.c"; 	workStep = 0;
     0012 02rr                      1-  649     	CLRR	_workStep
                                    1-  650     	.line	216, "main.c"; 	count900s = 0;
                                    1-  651     	BANKSEL	_count900s
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 02rr                      1-  652     	CLRR	_count900s
     0015 02rr                      1-  653     	CLRR	(_count900s + 1)
     0016                           1-  654     _00238_DS_:
                                    1-  655     	.line	218, "main.c"; 	if(workStep == 1)
                                    1-  656     	BANKSEL	_workStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1-  657     	MOVR	_workStep,W
     0018 2401                      1-  658     	XORIA	0x01
     0019 0903                      1-  659     	BTRSS	STATUS,2
                                    1-  660     	MGOTO	_00240_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  661     	.line	220, "main.c"; 	duty = 90;
     001B 215A                      1-  662     	MOVIA	0x5a
                                    1-  663     	BANKSEL	_duty
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 00rr                      1-  664     	MOVAR	_duty
                                    1-  665     	.line	221, "main.c"; 	PWM2DUTY = 90;
     001E 00rr                      1-  666     	SFUN	_PWM2DUTY
     001F                           1-  667     _00240_DS_:
                                    1-  668     	.line	223, "main.c"; 	if(workStep > 0)
                                    1-  669     	BANKSEL	_workStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 01rr                      1-  670     	MOVR	_workStep,W
     0021 0D03                      1-  671     	BTRSC	STATUS,2
                                    1-  672     	MGOTO	_00001_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  673     	.line	224, "main.c"; 	pwmInit();
                                    1-  674     	MCALL	_pwmInit
     0023 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  675     	MGOTO	_00001_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1-  676     _00246_DS_:
                                    1-  677     	.line	226, "main.c"; 	else if(kclick == 2)
                                    1-  678     	BANKSEL	r0x1023
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1-  679     	MOVR	r0x1023,W
     0027 2402                      1-  680     	XORIA	0x02
     0028 0903                      1-  681     	BTRSS	STATUS,2
                                    1-  682     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  683     	.line	228, "main.c"; 	workStep = 0;
                                    1-  684     	BANKSEL	_workStep
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 02rr                      1-  685     	CLRR	_workStep
     002C                           1-  686     _00001_DS_:
                                    1-  687     	.line	231, "main.c"; 	}
                                    1-  688     	RETURN	
     002C 0010                      3-   40 m1      ret
                                    1-  690     ;***
                                    1-  691     ;  pBlock Stats: dbName = C
                                    1-  692     ;***
                                    1-  693     ;has an exit
                                    1-  694     ;1 compiler assigned register :
                                    1-  695     ;   r0x1022
                                    1-  696     ;; Starting pCode block
                                    1-  697     .segment "code"; module=main, function=_keyRead
                                    1-  699     ;local variable name mapping:
     0000                           1-  701     _keyRead:
                                    1-  702     ; 2 exit points
                                    1-  703     	.line	174, "main.c"; 	char keyRead(char KeyStatus)	
                                    1-  704     	BANKSEL	r0x1022
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  705     	MOVAR	r0x1022
                                    1-  706     	.line	176, "main.c"; 	if (KeyStatus)
     0002 01rr                      1-  707     	MOVR	r0x1022,W
     0003 0D03                      1-  708     	BTRSC	STATUS,2
                                    1-  709     	MGOTO	_00211_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  710     	.line	178, "main.c"; 	if(++keyCount >= 200)
                                    1-  711     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1-  712     	INCR	_keyCount,F
     0007 0D03                      1-  713     	BTRSC	STATUS,2
     0008 05rr                      1-  714     	INCR	(_keyCount + 1),F
                                    1-  715     ;;unsigned compare: left < lit (0xC8=200), size=2
     0009 2100                      1-  716     	MOVIA	0x00
     000A 04rr                      1-  717     	SUBAR	(_keyCount + 1),W
     000B 0903                      1-  718     	BTRSS	STATUS,2
                                    1-  719     	MGOTO	_00230_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
     000D 21C8                      1-  720     	MOVIA	0xc8
     000E 04rr                      1-  721     	SUBAR	_keyCount,W
     000F                           1-  722     _00230_DS_:
     000F 0803                      1-  723     	BTRSS	STATUS,0
                                    1-  724     	MGOTO	_00212_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  725     	.line	180, "main.c"; 	keyCount = 200;
     0011 21C8                      1-  726     	MOVIA	0xc8
                                    1-  727     	BANKSEL	_keyCount
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 00rr                      1-  728     	MOVAR	_keyCount
     0014 02rr                      1-  729     	CLRR	(_keyCount + 1)
                                    1-  730     	.line	181, "main.c"; 	if(!longPressFlag)
                                    1-  731     	BANKSEL	_longPressFlag
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 01rr                      1-  732     	MOVR	_longPressFlag,W
     0017 0903                      1-  733     	BTRSS	STATUS,2
                                    1-  734     	MGOTO	_00212_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  735     	.line	183, "main.c"; 	longPressFlag = 1;
     0019 2101                      1-  736     	MOVIA	0x01
     001A 00rr                      1-  737     	MOVAR	_longPressFlag
                                    1-  738     	.line	184, "main.c"; 	return 2;
     001B 2102                      1-  739     	MOVIA	0x02
                                    1-  740     	MGOTO	_00213_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  741     ;;unsigned compare: left < lit (0xC8=200), size=2
     001D                           1-  742     _00211_DS_:
                                    1-  743     	.line	191, "main.c"; 	if(keyCount >= 200)
     001D 2100                      1-  744     	MOVIA	0x00
                                    1-  745     	BANKSEL	_keyCount
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1-  746     	SUBAR	(_keyCount + 1),W
     0020 0903                      1-  747     	BTRSS	STATUS,2
                                    1-  748     	MGOTO	_00231_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
     0022 21C8                      1-  749     	MOVIA	0xc8
     0023 04rr                      1-  750     	SUBAR	_keyCount,W
     0024                           1-  751     _00231_DS_:
     0024 0803                      1-  752     	BTRSS	STATUS,0
                                    1-  753     	MGOTO	_00208_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  754     	.line	193, "main.c"; 	keyCount = 0;
                                    1-  755     	BANKSEL	_keyCount
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 02rr                      1-  756     	CLRR	_keyCount
     0028 02rr                      1-  757     	CLRR	(_keyCount + 1)
                                    1-  758     	.line	194, "main.c"; 	longPressFlag = 0;
                                    1-  759     	BANKSEL	_longPressFlag
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 02rr                      1-  760     	CLRR	_longPressFlag
                                    1-  761     	.line	195, "main.c"; 	return	0;
     002B 2100                      1-  762     	MOVIA	0x00
                                    1-  763     	MGOTO	_00213_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  764     ;;unsigned compare: left < lit (0x5=5), size=2
     002D                           1-  765     _00208_DS_:
                                    1-  766     	.line	197, "main.c"; 	else if(keyCount >= 5)
     002D 2100                      1-  767     	MOVIA	0x00
                                    1-  768     	BANKSEL	_keyCount
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 04rr                      1-  769     	SUBAR	(_keyCount + 1),W
     0030 0903                      1-  770     	BTRSS	STATUS,2
                                    1-  771     	MGOTO	_00232_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
     0032 2105                      1-  772     	MOVIA	0x05
     0033 04rr                      1-  773     	SUBAR	_keyCount,W
     0034                           1-  774     _00232_DS_:
     0034 0803                      1-  775     	BTRSS	STATUS,0
                                    1-  776     	MGOTO	_00209_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  777     	.line	199, "main.c"; 	keyCount = 0;
                                    1-  778     	BANKSEL	_keyCount
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 02rr                      1-  779     	CLRR	_keyCount
     0038 02rr                      1-  780     	CLRR	(_keyCount + 1)
                                    1-  781     	.line	200, "main.c"; 	return	1;
     0039 2101                      1-  782     	MOVIA	0x01
                                    1-  783     	MGOTO	_00213_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
     003B                           1-  784     _00209_DS_:
                                    1-  785     	.line	202, "main.c"; 	keyCount = 0;
                                    1-  786     	BANKSEL	_keyCount
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 02rr                      1-  787     	CLRR	_keyCount
     003D 02rr                      1-  788     	CLRR	(_keyCount + 1)
     003E                           1-  789     _00212_DS_:
                                    1-  790     	.line	204, "main.c"; 	return 0;
     003E 2100                      1-  791     	MOVIA	0x00
     003F                           1-  792     _00213_DS_:
                                    1-  793     	.line	205, "main.c"; 	}
                                    1-  794     	RETURN	
     003F 0010                      3-   40 m1      ret
                                    1-  795     ; exit point of _keyRead
                                    1-  797     ;***
                                    1-  798     ;  pBlock Stats: dbName = C
                                    1-  799     ;***
                                    1-  800     ;has an exit
                                    1-  801     ;functions called:
                                    1-  802     ;   _pwmStop
                                    1-  803     ;   _gotoSleep
                                    1-  804     ;   _gotoSleep
                                    1-  805     ;   _pwmStop
                                    1-  806     ;   _gotoSleep
                                    1-  807     ;   _gotoSleep
                                    1-  808     ;; Starting pCode block
                                    1-  809     .segment "code"; module=main, function=_workCtr
     0000                           1-  811     _workCtr:
                                    1-  812     ; 2 exit points
                                    1-  813     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  814     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1-  815     	.line	134, "main.c"; 	switch(workStep)
     0000 2107                      1-  816     	MOVIA	0x07
                                    1-  817     	BANKSEL	_workStep
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 04rr                      1-  818     	SUBAR	_workStep,W
     0003 0C03                      1-  819     	BTRSC	STATUS,0
                                    1-  820     	MGOTO	_00176_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
     0005 21rr                      1-  821     	MOVIA	((_00194_DS_ >> 8) & 0xff)
     0006 008A                      1-  822     	MOVAR	PCHBUF
     0007 01rr                      1-  823     	MOVR	_workStep,W
     0008 25rr                      1-  824     	ADDIA	_00194_DS_
     0009 0C03                      1-  825     	BTRSC	STATUS,0
     000A 058A                      1-  826     	INCR	PCHBUF,F
     000B 0082                      1-  827     	MOVAR	PCL
     000C                           1-  828     _00194_DS_:
                                    1-  829     	MGOTO	_00164_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  830     	MGOTO	_00167_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  831     	MGOTO	_00171_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  832     	MGOTO	_00172_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  833     	MGOTO	_00173_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  834     	MGOTO	_00174_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  835     	MGOTO	_00175_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
     0013                           1-  836     _00164_DS_:
                                    1-  837     	.line	137, "main.c"; 	PWM2DUTY = 0;
     0013 0200                      1-  838     	CLRA	
     0014 00rr                      1-  839     	SFUN	_PWM2DUTY
                                    1-  840     	.line	138, "main.c"; 	pwmStop();
                                    1-  841     	MCALL	_pwmStop
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  842     	.line	139, "main.c"; 	if(keyCount == 0)
                                    1-  843     	BANKSEL	_keyCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1-  844     	MOVR	_keyCount,W
     0018 11rr                      1-  845     	IORAR	(_keyCount + 1),W
     0019 0903                      1-  846     	BTRSS	STATUS,2
                                    1-  847     	MGOTO	_00176_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  848     	.line	140, "main.c"; 	gotoSleep();
                                    1-  849     	MCALL	_gotoSleep
     001B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  850     	.line	141, "main.c"; 	break;
                                    1-  851     	MGOTO	_00176_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  852     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  853     ;;unsigned compare: left >= lit (0x4E=78), size=1
     001D                           1-  854     _00167_DS_:
                                    1-  855     	.line	143, "main.c"; 	if(duty > 77)
     001D 214E                      1-  856     	MOVIA	0x4e
                                    1-  857     	BANKSEL	_duty
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1-  858     	SUBAR	_duty,W
     0020 0803                      1-  859     	BTRSS	STATUS,0
                                    1-  860     	MGOTO	_00169_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  861     	.line	145, "main.c"; 	duty = duty - 2;
     0022 21FE                      1-  862     	MOVIA	0xfe
     0023 03rr                      1-  863     	ADDAR	_duty,F
                                    1-  864     	.line	146, "main.c"; 	PWM2DUTY = duty;
     0024 01rr                      1-  865     	MOVR	_duty,W
     0025 00rr                      1-  866     	SFUN	_PWM2DUTY
                                    1-  867     	MGOTO	_00176_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1-  868     _00169_DS_:
                                    1-  869     	.line	149, "main.c"; 	PWM2DUTY = 77;
     0027 214D                      1-  870     	MOVIA	0x4d
     0028 00rr                      1-  871     	SFUN	_PWM2DUTY
                                    1-  872     	.line	150, "main.c"; 	break;
                                    1-  873     	MGOTO	_00176_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
     002A                           1-  874     _00171_DS_:
                                    1-  875     	.line	152, "main.c"; 	PWM2DUTY = 81;
     002A 2151                      1-  876     	MOVIA	0x51
     002B 00rr                      1-  877     	SFUN	_PWM2DUTY
                                    1-  878     	.line	153, "main.c"; 	break;
                                    1-  879     	MGOTO	_00176_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
     002D                           1-  880     _00172_DS_:
                                    1-  881     	.line	155, "main.c"; 	PWM2DUTY = 85;
     002D 2155                      1-  882     	MOVIA	0x55
     002E 00rr                      1-  883     	SFUN	_PWM2DUTY
                                    1-  884     	.line	156, "main.c"; 	break;
                                    1-  885     	MGOTO	_00176_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
     0030                           1-  886     _00173_DS_:
                                    1-  887     	.line	158, "main.c"; 	PWM2DUTY = 90;
     0030 215A                      1-  888     	MOVIA	0x5a
     0031 00rr                      1-  889     	SFUN	_PWM2DUTY
                                    1-  890     	.line	159, "main.c"; 	break;
                                    1-  891     	MGOTO	_00176_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033                           1-  892     _00174_DS_:
                                    1-  893     	.line	161, "main.c"; 	PWM2DUTY = 93;
     0033 215D                      1-  894     	MOVIA	0x5d
     0034 00rr                      1-  895     	SFUN	_PWM2DUTY
                                    1-  896     	.line	162, "main.c"; 	break;
                                    1-  897     	MGOTO	_00176_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
     0036                           1-  898     _00175_DS_:
                                    1-  899     	.line	164, "main.c"; 	PWM2DUTY = 97;
     0036 2161                      1-  900     	MOVIA	0x61
     0037 00rr                      1-  901     	SFUN	_PWM2DUTY
                                    1-  902     ;;unsigned compare: left < lit (0x384=900), size=2
     0038                           1-  903     _00176_DS_:
                                    1-  904     	.line	168, "main.c"; 	if(count900s >= 900)
     0038 2103                      1-  905     	MOVIA	0x03
                                    1-  906     	BANKSEL	_count900s
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1-  907     	SUBAR	(_count900s + 1),W
     003B 0903                      1-  908     	BTRSS	STATUS,2
                                    1-  909     	MGOTO	_00196_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 2184                      1-  910     	MOVIA	0x84
     003E 04rr                      1-  911     	SUBAR	_count900s,W
     003F                           1-  912     _00196_DS_:
     003F 0803                      1-  913     	BTRSS	STATUS,0
                                    1-  914     	MGOTO	_00179_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  915     	.line	169, "main.c"; 	gotoSleep();
                                    1-  916     	MCALL	_gotoSleep
     0041 2rrr                      3-   66 m1      LCALL rom_address
     0042                           1-  917     _00179_DS_:
                                    1-  918     	.line	170, "main.c"; 	}
                                    1-  919     	RETURN	
     0042 0010                      3-   40 m1      ret
                                    1-  920     ; exit point of _workCtr
                                    1-  922     ;***
                                    1-  923     ;  pBlock Stats: dbName = C
                                    1-  924     ;***
                                    1-  925     ;has an exit
                                    1-  926     ;; Starting pCode block
                                    1-  927     .segment "code"; module=main, function=_pwmStop
     0000                           1-  929     _pwmStop:
                                    1-  930     ; 2 exit points
                                    1-  931     	.line	127, "main.c"; 	P2CR1 = 0x00;
     0000 0200                      1-  932     	CLRA	
     0001 00rr                      1-  933     	SFUN	_P2CR1
                                    1-  934     	.line	128, "main.c"; 	}
                                    1-  935     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1-  936     ; exit point of _pwmStop
                                    1-  938     ;***
                                    1-  939     ;  pBlock Stats: dbName = C
                                    1-  940     ;***
                                    1-  941     ;has an exit
                                    1-  942     ;1 compiler assigned register :
                                    1-  943     ;   r0x1022
                                    1-  944     ;; Starting pCode block
                                    1-  945     .segment "code"; module=main, function=_pwmInit
     0000                           1-  947     _pwmInit:
                                    1-  948     ; 2 exit points
                                    1-  949     	.line	115, "main.c"; 	if(0x80&P2CR1)
     0000 00rr                      1-  950     	SFUNR	_P2CR1
                                    1-  951     	BANKSEL	r0x1022
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1-  952     	MOVAR	r0x1022
     0003 0Frr                      1-  953     	BTRSC	r0x1022,7
                                    1-  954     	.line	116, "main.c"; 	return;
                                    1-  955     	MGOTO	_00155_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  956     	.line	117, "main.c"; 	TMRH = 0x00;
     0005 0200                      1-  957     	CLRA	
     0006 00rr                      1-  958     	SFUN	_TMRH
                                    1-  959     	.line	118, "main.c"; 	TMR1 = 100;							//频率为110K
     0007 2164                      1-  960     	MOVIA	0x64
     0008 00rr                      1-  961     	SFUN	_TMR1
                                    1-  962     	.line	120, "main.c"; 	T1CR2	 = C_PS1_Div2 | C_TMR1_ClkSrc_Inst;	// Prescaler 1:1 , Timer1 clock source is instruction clockF
     0009 0200                      1-  963     	CLRA	
     000A 00rr                      1-  964     	SFUN	_T1CR2
                                    1-  965     	.line	121, "main.c"; 	T1CR1	 = C_TMR1_Reload | C_TMR1_En;	// Enable PWM1 , Active_High , Non-Stop mode ,reloaded from TMR1[9:0] , enable Timer1
     000B 2103                      1-  966     	MOVIA	0x03
     000C 00rr                      1-  967     	SFUN	_T1CR1
                                    1-  968     	.line	122, "main.c"; 	P2CR1	 = C_PWM2_En | C_PWM2_Active_Hi | C_TMR1_Reload | C_TMR1_En;
     000D 2183                      1-  969     	MOVIA	0x83
     000E 00rr                      1-  970     	SFUN	_P2CR1
     000F                           1-  971     _00155_DS_:
                                    1-  972     	.line	123, "main.c"; 	}
                                    1-  973     	RETURN	
     000F 0010                      3-   40 m1      ret
                                    1-  974     ; exit point of _pwmInit
                                    1-  976     ;***
                                    1-  977     ;  pBlock Stats: dbName = C
                                    1-  978     ;***
                                    1-  979     ;has an exit
                                    1-  980     ;functions called:
                                    1-  981     ;   __gptrget1
                                    1-  982     ;   _showNubShiwei
                                    1-  983     ;   __gptrget1
                                    1-  984     ;   _showNubGewei
                                    1-  985     ;   __gptrget1
                                    1-  986     ;   _showNubShiwei
                                    1-  987     ;   __gptrget1
                                    1-  988     ;   _showNubGewei
                                    1-  989     ;5 compiler assigned registers:
                                    1-  990     ;   r0x1024
                                    1-  991     ;   r0x1025
                                    1-  992     ;   STK01
                                    1-  993     ;   STK00
                                    1-  994     ;   r0x1026
                                    1-  995     ;; Starting pCode block
                                    1-  996     .segment "code"; module=main, function=_refreshNub
     0000                           1-  998     _refreshNub:
                                    1-  999     ; 2 exit points
                                    1- 1000     	.line	108, "main.c"; 	showNubShiwei(numArray[shiweiNum]);
                                    1- 1001     	BANKSEL	_shiweiNum
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 1002     	MOVR	_shiweiNum,W
     0002 25rr                      1- 1003     	ADDIA	(_numArray + 0)
                                    1- 1004     	BANKSEL	r0x1024
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 00rr                      1- 1005     	MOVAR	r0x1024
     0005 21rr                      1- 1006     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0006 0C03                      1- 1007     	BTRSC	STATUS,0
     0007 2501                      1- 1008     	ADDIA	0x01
                                    1- 1009     	BANKSEL	r0x1025
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 1010     	MOVAR	r0x1025
                                    1- 1011     	BANKSEL	r0x1024
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 01rr                      1- 1012     	MOVR	r0x1024,W
     000C 00rr                      1- 1013     	MOVAR	STK01
                                    1- 1014     	BANKSEL	r0x1025
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1- 1015     	MOVR	r0x1025,W
     000F 00rr                      1- 1016     	MOVAR	STK00
     0010 2100                      1- 1017     	MOVIA	0x00
                                    1- 1018     	MCALL	__gptrget1
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1019     ;;100	MOVAR	r0x1026
                                    1- 1020     	MCALL	_showNubShiwei
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1021     	.line	109, "main.c"; 	showNubGewei(numArray[geweiNum]);
                                    1- 1022     	BANKSEL	_geweiNum
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 1023     	MOVR	_geweiNum,W
     0015 25rr                      1- 1024     	ADDIA	(_numArray + 0)
                                    1- 1025     	BANKSEL	r0x1024
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1026     	MOVAR	r0x1024
     0018 21rr                      1- 1027     	MOVIA	((_numArray + 0) >> 8) & 0xff
     0019 0C03                      1- 1028     	BTRSC	STATUS,0
     001A 2501                      1- 1029     	ADDIA	0x01
                                    1- 1030     	BANKSEL	r0x1025
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1031     	MOVAR	r0x1025
                                    1- 1032     	BANKSEL	r0x1024
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1033     	MOVR	r0x1024,W
     001F 00rr                      1- 1034     	MOVAR	STK01
                                    1- 1035     	BANKSEL	r0x1025
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1036     	MOVR	r0x1025,W
     0022 00rr                      1- 1037     	MOVAR	STK00
     0023 2100                      1- 1038     	MOVIA	0x00
                                    1- 1039     	MCALL	__gptrget1
     0024 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1040     ;;99	MOVAR	r0x1026
                                    1- 1041     	MCALL	_showNubGewei
     0025 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1042     	.line	110, "main.c"; 	}
                                    1- 1043     	RETURN	
     0026 0010                      3-   40 m1      ret
                                    1- 1044     ; exit point of _refreshNub
                                    1- 1047     ;	code size estimation:
                                    1- 1048     ;	  334+   59 =   393 instructions (  904 byte)
                                    1- 1050     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000C
__PROCESSOR__           Constant 00800534
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8a053e.inc
003 common.inc
004 main.c

PROCESSOR    = NY8A053E (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000003FF
DATA ROM     = 0x00000000 - 0x000003FF
RESERVED MEM = 0x00000400 - 0x00000410
SRAM / SFR   = 0x00000000 - 0x00000000
