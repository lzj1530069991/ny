
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_fgCtr
                                    1-   18     	extern	_LedCtr2
                                    1-   19     	extern	_checkInAD
                                    1-   20     	extern	_PORTAbits
                                    1-   21     	extern	_PORTBbits
                                    1-   22     	extern	_PCONbits
                                    1-   23     	extern	_BWUCONbits
                                    1-   24     	extern	_ABPLCONbits
                                    1-   25     	extern	_BPHCONbits
                                    1-   26     	extern	_INTEbits
                                    1-   27     	extern	_INTFbits
                                    1-   28     	extern	_ADMDbits
                                    1-   29     	extern	_ADRbits
                                    1-   30     	extern	_ADVREFHbits
                                    1-   31     	extern	_ADCRbits
                                    1-   32     	extern	_AWUCONbits
                                    1-   33     	extern	_PACONbits
                                    1-   34     	extern	_INTEDGbits
                                    1-   35     	extern	_ANAENbits
                                    1-   36     	extern	_RFCbits
                                    1-   37     	extern	_INTE2bits
                                    1-   38     	extern	_INDF
                                    1-   39     	extern	_TMR0
                                    1-   40     	extern	_PCL
                                    1-   41     	extern	_STATUS
                                    1-   42     	extern	_FSR
                                    1-   43     	extern	_PORTA
                                    1-   44     	extern	_PORTB
                                    1-   45     	extern	_PCON
                                    1-   46     	extern	_BWUCON
                                    1-   47     	extern	_PCHBUF
                                    1-   48     	extern	_ABPLCON
                                    1-   49     	extern	_BPHCON
                                    1-   50     	extern	_INTE
                                    1-   51     	extern	_INTF
                                    1-   52     	extern	_ADMD
                                    1-   53     	extern	_ADR
                                    1-   54     	extern	_ADD
                                    1-   55     	extern	_ADVREFH
                                    1-   56     	extern	_ADCR
                                    1-   57     	extern	_AWUCON
                                    1-   58     	extern	_PACON
                                    1-   59     	extern	_INTEDG
                                    1-   60     	extern	_TMRH
                                    1-   61     	extern	_ANAEN
                                    1-   62     	extern	_RFC
                                    1-   63     	extern	_TM3RH
                                    1-   64     	extern	_INTE2
                                    1-   65     	extern	_TMR1
                                    1-   66     	extern	_T1CR1
                                    1-   67     	extern	_T1CR2
                                    1-   68     	extern	_PWM1DUTY
                                    1-   69     	extern	_PS1CV
                                    1-   70     	extern	_BZ1CR
                                    1-   71     	extern	_IRCR
                                    1-   72     	extern	_TBHP
                                    1-   73     	extern	_TBHD
                                    1-   74     	extern	_TMR2
                                    1-   75     	extern	_T2CR1
                                    1-   76     	extern	_T2CR2
                                    1-   77     	extern	_PWM2DUTY
                                    1-   78     	extern	_PS2CV
                                    1-   79     	extern	_BZ2CR
                                    1-   80     	extern	_OSCCR
                                    1-   81     	extern	_TMR3
                                    1-   82     	extern	_T3CR1
                                    1-   83     	extern	_T3CR2
                                    1-   84     	extern	_PWM3DUTY
                                    1-   85     	extern	_PS3CV
                                    1-   86     	extern	_BZ3CR
                                    1-   87     	extern	_IOSTA
                                    1-   88     	extern	_IOSTB
                                    1-   89     	extern	_APHCON
                                    1-   90     	extern	_PS0CV
                                    1-   91     	extern	_BODCON
                                    1-   92     	extern	_CMPCR
                                    1-   93     	extern	_PCON1
                                    1-   94     	extern	_T0MD
                                    1-   95     	extern	___sdcc_saved_fsr
                                    1-   96     	extern	___sdcc_saved_stk00
                                    1-   97     	extern	___sdcc_saved_stk01
                                    1-   98     	extern	__nyc_ny8_startup
                                    1-   99     ;--------------------------------------------------------
                                    1-  100     ; global declarations
                                    1-  101     ;--------------------------------------------------------
                                    1-  102     	extern	_F_wait_eoc
                                    1-  103     	extern	_F_AIN2_Convert
                                    1-  104     	extern	_F_AIN3_Convert
                                    1-  105     	extern	_F_AIN4_Convert
                                    1-  106     	extern	_checkOutA
                                    1-  107     	extern	_checkChrgV
                                    1-  108     	extern	_checkBatAD
                                    1-  109     	extern	_initAD
                                    1-  110     	extern	_delay
                                    1-  111     	extern	_chrgCtr
                                    1-  112     	extern	_keyRead
                                    1-  113     	extern	_gotoSleep
                                    1-  114     	extern	_pwmStop
                                    1-  115     	extern	_pwmInit
                                    1-  116     	extern	_pwm1Stop
                                    1-  117     	extern	_pwm1Init
                                    1-  118     	extern	_LED6ON
                                    1-  119     	extern	_LED5ON
                                    1-  120     	extern	_LED4ON
                                    1-  121     	extern	_LED3ON
                                    1-  122     	extern	_LED2ON
                                    1-  123     	extern	_LED1ON
                                    1-  124     	extern	_LedInput
                                    1-  125     	extern	_ledShow
                                    1-  126     	extern	_initSys
                                    1-  127     	extern	_powerOff
                                    1-  128     	extern	_keyCtr
                                    1-  129     	extern	_isr
                                    1-  130     	extern	_main
                                    1-  131     	extern	_Status
                                    1-  132     	extern	_duty
                                    1-  133     	extern	_intCount
                                    1-  134     	extern	_count500ms
                                    1-  135     	extern	_keyCount
                                    1-  136     	extern	_workStep
                                    1-  137     	extern	_ledStep
                                    1-  138     	extern	_fgCount
                                    1-  139     	extern	_fgPRD
                                    1-  140     	extern	_preFG
                                    1-  141     	extern	_maxDuty
                                    1-  142     	extern	_pwStep
                                    1-  143     	extern	_R_AIN4_DATA
                                    1-  144     	extern	_R_AIN4_DATA_LB
                                    1-  145     	extern	_R_AIN3_DATA
                                    1-  146     	extern	_R_AIN3_DATA_LB
                                    1-  147     	extern	_R_AIN2_DATA
                                    1-  148     	extern	_R_AIN2_DATA_LB
                                    1-  149     	extern	_chrgTime
                                    1-  150     	extern	_startStep
                                    1-  151     	extern	_sleepTime
                                    1-  152     	extern	_count200ms
                                    1-  153     	extern	_count1s
                                    1-  154     	extern	_count900s
                                    1-  155     	extern	_lowBatTime
                                    1-  156     	extern	_ledTime
                                    1-  157     	extern	_overCount
                                    1-  158     	extern	_chrgCount
                                    1-  159     	extern	_ledLightTime
                                    1-  160     	extern	_currentDuty
                                    1-  161     	extern	_fullCount
                                    1-  162     	extern	_shanshuoTime
                                    1-  163     	extern	_firstTime
                                    1-  164     	extern	_tempDuty
                                    1-  165     	extern	_lowCount
                                    1-  166     	extern	_cDuty
                                    1-  167     	extern	_tempLedStep
                                    1-  168     	extern	_count5S
                                    1-  169     	extern	_ledDeadTime
                                    1-  170     	extern	_lockLedStep
                                    1-  171     	extern	_closeCount
                                    1-  172     	extern	_chrgStep
                                    1-  173     	extern	_prePwStep
                                    1-  174     	extern	_debug
                                    1-  176     	extern PSAVE
                                    1-  177     	extern SSAVE
                                    1-  178     	extern WSAVE
                                    1-  179     	extern STK04
                                    1-  180     	extern STK03
                                    1-  181     	extern STK02
                                    1-  182     	extern STK01
                                    1-  183     	extern STK00
                                    1-  185     .segment "uninit", 0x20000040
 20000040                           1-  186     PSAVE:
                                    1-  187     	.res 1
 20000041                           1-  188     SSAVE:
                                    1-  189     	.res 1
 20000042                           1-  190     WSAVE:
                                    1-  191     	.res 1
 20000043                           1-  192     STK04:
                                    1-  193     	.res 1
 20000044                           1-  194     STK03:
                                    1-  195     	.res 1
 20000045                           1-  196     STK02:
                                    1-  197     	.res 1
 20000046                           1-  198     STK01:
                                    1-  199     	.res 1
 20000047                           1-  200     STK00:
                                    1-  201     	.res 1
                                    1-  203     ;--------------------------------------------------------
                                    1-  204     ; global definitions
                                    1-  205     ;--------------------------------------------------------
                                    1-  206     .segment "uninit"
     0000                           1-  207     _R_AIN4_DATA:
                                    1-  208     	.res	2
                                    1-  211     .segment "uninit"
     0000                           1-  212     _R_AIN4_DATA_LB:
                                    1-  213     	.res	1
                                    1-  216     .segment "uninit"
     0000                           1-  217     _R_AIN3_DATA:
                                    1-  218     	.res	2
                                    1-  221     .segment "uninit"
     0000                           1-  222     _R_AIN3_DATA_LB:
                                    1-  223     	.res	1
                                    1-  226     .segment "uninit"
     0000                           1-  227     _R_AIN2_DATA:
                                    1-  228     	.res	2
                                    1-  231     .segment "uninit"
     0000                           1-  232     _R_AIN2_DATA_LB:
                                    1-  233     	.res	1
                                    1-  236     ;--------------------------------------------------------
                                    1-  237     ; absolute symbol definitions
                                    1-  238     ;--------------------------------------------------------
                                    1-  239     ;--------------------------------------------------------
                                    1-  240     ; compiler-defined variables
                                    1-  241     ;--------------------------------------------------------
                                    1-  242     .segment "uninit"
     0000                           1-  243     r0x1061:
                                    1-  244     	.res	1
                                    1-  245     .segment "uninit"
     0000                           1-  246     r0x1059:
                                    1-  247     	.res	1
                                    1-  248     .segment "uninit"
     0000                           1-  249     r0x1060:
                                    1-  250     	.res	1
                                    1-  251     .segment "uninit"
     0000                           1-  252     r0x105F:
                                    1-  253     	.res	1
                                    1-  254     .segment "uninit"
     0000                           1-  255     r0x105E:
                                    1-  256     	.res	1
                                    1-  257     .segment "uninit"
     0000                           1-  258     r0x105D:
                                    1-  259     	.res	1
                                    1-  260     .segment "uninit"
     0000                           1-  261     r0x105C:
                                    1-  262     	.res	1
                                    1-  263     .segment "uninit"
     0000                           1-  264     r0x105B:
                                    1-  265     	.res	1
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x1052:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x105A:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1058:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1053:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x1054:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x1055:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x1057:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x1032:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x1033:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x1050:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x1051:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x104C:
                                    1-  301     	.res	1
                                    1-  302     .segment "uninit"
     0000                           1-  303     r0x104D:
                                    1-  304     	.res	1
                                    1-  305     .segment "uninit"
     0000                           1-  306     r0x1048:
                                    1-  307     	.res	1
                                    1-  308     .segment "uninit"
     0000                           1-  309     r0x1049:
                                    1-  310     	.res	1
                                    1-  311     .segment "uninit"
     0000                           1-  312     r0x1040:
                                    1-  313     	.res	1
                                    1-  314     .segment "uninit"
     0000                           1-  315     r0x1041:
                                    1-  316     	.res	1
                                    1-  317     .segment "uninit"
     0000                           1-  318     r0x1042:
                                    1-  319     	.res	1
                                    1-  320     .segment "uninit"
     0000                           1-  321     r0x1045:
                                    1-  322     	.res	1
                                    1-  323     .segment "uninit"
     0000                           1-  324     r0x103A:
                                    1-  325     	.res	1
                                    1-  326     .segment "uninit"
     0000                           1-  327     r0x103B:
                                    1-  328     	.res	1
                                    1-  329     .segment "uninit"
     0000                           1-  330     r0x103C:
                                    1-  331     	.res	1
                                    1-  332     .segment "uninit"
     0000                           1-  333     r0x103F:
                                    1-  334     	.res	1
                                    1-  335     .segment "uninit"
     0000                           1-  336     r0x1034:
                                    1-  337     	.res	1
                                    1-  338     .segment "uninit"
     0000                           1-  339     r0x1035:
                                    1-  340     	.res	1
                                    1-  341     .segment "uninit"
     0000                           1-  342     r0x1036:
                                    1-  343     	.res	1
                                    1-  344     .segment "uninit"
     0000                           1-  345     r0x1039:
                                    1-  346     	.res	1
                                    1-  347     ;--------------------------------------------------------
                                    1-  348     ; initialized data
                                    1-  349     ;--------------------------------------------------------
                                    1-  351     .segment "idata"
     0000                           1-  352     _Status:
     0000 0000                      1-  353     	dw	0x00
                                    1-  357     .segment "idata"
     0000                           1-  358     _duty:
     0000 0000 0000                 1-  359     	dw	0x00, 0x00
                                    1-  363     .segment "idata"
     0000                           1-  364     _intCount:
     0000 0000                      1-  365     	dw	0x00
                                    1-  369     .segment "idata"
     0000                           1-  370     _count500ms:
     0000 0000                      1-  371     	dw	0x00
                                    1-  375     .segment "idata"
     0000                           1-  376     _keyCount:
     0000 0000                      1-  377     	dw	0x00
                                    1-  381     .segment "idata"
     0000                           1-  382     _workStep:
     0000 0000                      1-  383     	dw	0x00
                                    1-  387     .segment "idata"
     0000                           1-  388     _ledStep:
     0000 0000                      1-  389     	dw	0x00
                                    1-  393     .segment "idata"
     0000                           1-  394     _fgCount:
     0000 0000 0000                 1-  395     	dw	0x00, 0x00
                                    1-  399     .segment "idata"
     0000                           1-  400     _fgPRD:
     0000 0000 0000                 1-  401     	dw	0x00, 0x00
                                    1-  405     .segment "idata"
     0000                           1-  406     _preFG:
     0000 0000                      1-  407     	dw	0x00
                                    1-  411     .segment "idata"
     0000                           1-  412     _maxDuty:
     0000 0000                      1-  413     	dw	0x00
                                    1-  417     .segment "idata"
     0000                           1-  418     _pwStep:
     0000 0000                      1-  419     	dw	0x00
                                    1-  423     .segment "idata"
     0000                           1-  424     _chrgTime:
     0000 0000 0000                 1-  425     	dw	0x00, 0x00
                                    1-  429     .segment "idata"
     0000                           1-  430     _startStep:
     0000 0000                      1-  431     	dw	0x00
                                    1-  435     .segment "idata"
     0000                           1-  436     _sleepTime:
     0000 0000 0000                 1-  437     	dw	0x00, 0x00
                                    1-  441     .segment "idata"
     0000                           1-  442     _count200ms:
     0000 0000                      1-  443     	dw	0x00
                                    1-  447     .segment "idata"
     0000                           1-  448     _count1s:
     0000 0000                      1-  449     	dw	0x00
                                    1-  453     .segment "idata"
     0000                           1-  454     _count900s:
     0000 0000 0000                 1-  455     	dw	0x00, 0x00
                                    1-  459     .segment "idata"
     0000                           1-  460     _lowBatTime:
     0000 0000                      1-  461     	dw	0x00
                                    1-  465     .segment "idata"
     0000                           1-  466     _ledTime:
     0000 0000                      1-  467     	dw	0x00
                                    1-  471     .segment "idata"
     0000                           1-  472     _overCount:
     0000 0000                      1-  473     	dw	0x00
                                    1-  477     .segment "idata"
     0000                           1-  478     _chrgCount:
     0000 0000                      1-  479     	dw	0x00
                                    1-  483     .segment "idata"
     0000                           1-  484     _ledLightTime:
     0000 0000                      1-  485     	dw	0x00
                                    1-  489     .segment "idata"
     0000                           1-  490     _currentDuty:
     0000 0000                      1-  491     	dw	0x00
                                    1-  495     .segment "idata"
     0000                           1-  496     _fullCount:
     0000 0000 0000                 1-  497     	dw	0x00, 0x00
                                    1-  501     .segment "idata"
     0000                           1-  502     _shanshuoTime:
     0000 0000                      1-  503     	dw	0x00
                                    1-  507     .segment "idata"
     0000                           1-  508     _firstTime:
     0000 0000                      1-  509     	dw	0x00
                                    1-  513     .segment "idata"
     0000                           1-  514     _tempDuty:
     0000 0000                      1-  515     	dw	0x00
                                    1-  519     .segment "idata"
     0000                           1-  520     _lowCount:
     0000 0000                      1-  521     	dw	0x00
                                    1-  525     .segment "idata"
     0000                           1-  526     _cDuty:
     0000 0000                      1-  527     	dw	0x00
                                    1-  531     .segment "idata"
     0000                           1-  532     _tempLedStep:
     0000 0000                      1-  533     	dw	0x00
                                    1-  537     .segment "idata"
     0000                           1-  538     _count5S:
     0000 0000 0000                 1-  539     	dw	0x00, 0x00
                                    1-  543     .segment "idata"
     0000                           1-  544     _ledDeadTime:
     0000 0000                      1-  545     	dw	0x00
                                    1-  549     .segment "idata"
     0000                           1-  550     _lockLedStep:
     0000 0000                      1-  551     	dw	0x00
                                    1-  555     .segment "idata"
     0000                           1-  556     _closeCount:
     0000 0000 0000                 1-  557     	dw	0x00, 0x00
                                    1-  561     .segment "idata"
     0000                           1-  562     _chrgStep:
     0000 0000                      1-  563     	dw	0x00
                                    1-  567     .segment "idata"
     0000                           1-  568     _prePwStep:
     0000 0000                      1-  569     	dw	0x00
                                    1-  573     .segment "idata"
     0000                           1-  574     _debug:
     0000 0000                      1-  575     	dw	0x00
                                    1-  578     ;--------------------------------------------------------
                                    1-  579     ; overlayable items in internal ram 
                                    1-  580     ;--------------------------------------------------------
                                    1-  581     ;	udata_ovr
                                    1-  582     ;--------------------------------------------------------
                                    1-  583     ; reset vector 
                                    1-  584     ;--------------------------------------------------------
                                    1-  585     ORG	0x0000
     0000 3rrr                      1-  586     	LGOTO	__nyc_ny8_startup
                                    1-  587     ;--------------------------------------------------------
                                    1-  588     ; interrupt and initialization code
                                    1-  589     ;--------------------------------------------------------
                                    1-  590     ORG 0x0008
                                    1-  591     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  593     .segment "code"
     0000                           1-  594     __sdcc_interrupt:
                                    1-  595     ;***
                                    1-  596     ;  pBlock Stats: dbName = I
                                    1-  597     ;***
                                    1-  598     ;2 compiler assigned registers:
                                    1-  599     ;   STK00
                                    1-  600     ;   STK01
                                    1-  601     ;; Starting pCode block
     0000                           1-  602     _isr:
                                    1-  603     ; 0 exit points
                                    1-  604     	.line	115, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  605     	MOVAR	WSAVE
     0001 1503                      1-  606     	SWAPR	STATUS,W
     0002 0283                      1-  607     	CLRR	STATUS
     0003 00rr                      1-  608     	MOVAR	SSAVE
     0004 010A                      1-  609     	MOVR	PCHBUF,W
     0005 028A                      1-  610     	CLRR	PCHBUF
     0006 00rr                      1-  611     	MOVAR	PSAVE
     0007 0104                      1-  612     	MOVR	FSR,W
                                    1-  613     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  614     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  615     	MOVR	STK00,W
                                    1-  616     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  617     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  618     	MOVR	STK01,W
                                    1-  619     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  620     	MOVAR	___sdcc_saved_stk01
                                    1-  621     	.line	117, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  622     	BTRSS	_INTFbits,0
                                    1-  623     	MGOTO	_00128_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  624     	.line	119, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  625     	MOVIA	0x37
     0013 03rr                      1-  626     	ADDAR	_TMR0,F
                                    1-  627     	.line	121, "main.c"; 	if(++intCount >= 100)
                                    1-  628     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  629     	INCR	_intCount,F
                                    1-  630     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  631     	MOVIA	0x64
     0017 04rr                      1-  632     	SUBAR	_intCount,W
     0018 0803                      1-  633     	BTRSS	STATUS,0
                                    1-  634     	MGOTO	_00128_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  635     	.line	123, "main.c"; 	IntFlag = 1;
                                    1-  636     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  637     	BSR	_Status,0
                                    1-  638     	.line	124, "main.c"; 	intCount = 0;
                                    1-  639     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  640     	CLRR	_intCount
                                    1-  641     	.line	125, "main.c"; 	if(workStep)
                                    1-  642     	BANKSEL	_workStep
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 01rr                      1-  643     	MOVR	_workStep,W
     0020 0D03                      1-  644     	BTRSC	STATUS,2
                                    1-  645     	MGOTO	_00106_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  646     	.line	126, "main.c"; 	++fgCount;
                                    1-  647     	BANKSEL	_fgCount
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 05rr                      1-  648     	INCR	_fgCount,F
     0024 0D03                      1-  649     	BTRSC	STATUS,2
     0025 05rr                      1-  650     	INCR	(_fgCount + 1),F
     0026                           1-  651     _00106_DS_:
                                    1-  652     	.line	127, "main.c"; 	if(++count500ms >= 40)
                                    1-  653     	BANKSEL	_count500ms
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 05rr                      1-  654     	INCR	_count500ms,F
                                    1-  655     ;;unsigned compare: left < lit (0x28=40), size=1
     0028 2128                      1-  656     	MOVIA	0x28
     0029 04rr                      1-  657     	SUBAR	_count500ms,W
     002A 0C03                      1-  658     	BTRSC	STATUS,0
                                    1-  659     	.line	128, "main.c"; 	count500ms = 0;
     002B 02rr                      1-  660     	CLRR	_count500ms
                                    1-  661     	.line	129, "main.c"; 	if(++count200ms >= 20)
                                    1-  662     	BANKSEL	_count200ms
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1-  663     	INCR	_count200ms,F
     002E 2114                      1-  664     	MOVIA	0x14
     002F 04rr                      1-  665     	SUBAR	_count200ms,W
     0030 0803                      1-  666     	BTRSS	STATUS,0
                                    1-  667     	MGOTO	_00112_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  668     	.line	131, "main.c"; 	count200ms = 0;
     0032 02rr                      1-  669     	CLRR	_count200ms
                                    1-  670     	.line	132, "main.c"; 	if(ledDeadTime > 0)
                                    1-  671     	BANKSEL	_ledDeadTime
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1-  672     	MOVR	_ledDeadTime,W
     0035 0903                      1-  673     	BTRSS	STATUS,2
                                    1-  674     	.line	133, "main.c"; 	--ledDeadTime;
     0036 06rr                      1-  675     	DECR	_ledDeadTime,F
     0037                           1-  676     _00112_DS_:
                                    1-  677     	.line	135, "main.c"; 	if(++count1s >= 100)
                                    1-  678     	BANKSEL	_count1s
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 05rr                      1-  679     	INCR	_count1s,F
     0039 2164                      1-  680     	MOVIA	0x64
     003A 04rr                      1-  681     	SUBAR	_count1s,W
     003B 0803                      1-  682     	BTRSS	STATUS,0
                                    1-  683     	MGOTO	_00128_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  684     	.line	137, "main.c"; 	count1s = 0;
     003D 02rr                      1-  685     	CLRR	_count1s
                                    1-  686     	.line	138, "main.c"; 	if(chrgFlag == 1 && pwStep == 6)
                                    1-  687     	BANKSEL	_Status
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 09rr                      1-  688     	BTRSS	_Status,3
                                    1-  689     	MGOTO	_00114_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  690     	BANKSEL	_pwStep
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 01rr                      1-  691     	MOVR	_pwStep,W
     0043 2406                      1-  692     	XORIA	0x06
     0044 0903                      1-  693     	BTRSS	STATUS,2
                                    1-  694     	MGOTO	_00114_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  695     	.line	140, "main.c"; 	++chrgTime;
                                    1-  696     	BANKSEL	_chrgTime
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 05rr                      1-  697     	INCR	_chrgTime,F
     0048 0D03                      1-  698     	BTRSC	STATUS,2
     0049 05rr                      1-  699     	INCR	(_chrgTime + 1),F
     004A                           1-  700     _00114_DS_:
                                    1-  701     	.line	143, "main.c"; 	if(ledLightTime > 0)
                                    1-  702     	BANKSEL	_ledLightTime
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1-  703     	MOVR	_ledLightTime,W
     004C 0903                      1-  704     	BTRSS	STATUS,2
                                    1-  705     	.line	144, "main.c"; 	--ledLightTime;
     004D 06rr                      1-  706     	DECR	_ledLightTime,F
                                    1-  707     	.line	145, "main.c"; 	if(shanshuoTime > 0)
                                    1-  708     	BANKSEL	_shanshuoTime
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1-  709     	MOVR	_shanshuoTime,W
     0050 0903                      1-  710     	BTRSS	STATUS,2
                                    1-  711     	.line	146, "main.c"; 	--shanshuoTime;
     0051 06rr                      1-  712     	DECR	_shanshuoTime,F
                                    1-  713     	.line	147, "main.c"; 	if(workStep)
                                    1-  714     	BANKSEL	_workStep
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1-  715     	MOVR	_workStep,W
     0054 0D03                      1-  716     	BTRSC	STATUS,2
                                    1-  717     	MGOTO	_00121_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  718     	.line	149, "main.c"; 	++count900s;
                                    1-  719     	BANKSEL	_count900s
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 05rr                      1-  720     	INCR	_count900s,F
     0058 0D03                      1-  721     	BTRSC	STATUS,2
     0059 05rr                      1-  722     	INCR	(_count900s + 1),F
                                    1-  723     	MGOTO	_00128_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B                           1-  724     _00121_DS_:
                                    1-  725     	.line	153, "main.c"; 	count900s = 0;
                                    1-  726     	BANKSEL	_count900s
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 02rr                      1-  727     	CLRR	_count900s
     005D 02rr                      1-  728     	CLRR	(_count900s + 1)
     005E                           1-  729     _00128_DS_:
                                    1-  730     	.line	162, "main.c"; 	if(INTFbits.PABIF)
     005E 08rr                      1-  731     	BTRSS	_INTFbits,1
                                    1-  732     	MGOTO	_00130_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  733     	.line	164, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0060 21FD                      1-  734     	MOVIA	0xfd
     0061 00rr                      1-  735     	MOVAR	_INTF
     0062                           1-  736     _00130_DS_:
                                    1-  737     	.line	167, "main.c"; 	INTF = 0;
     0062 02rr                      1-  738     	CLRR	_INTF
                                    1-  739     	.line	169, "main.c"; 	}
                                    1-  740     	BANKSEL	___sdcc_saved_stk01
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 01rr                      1-  741     	MOVR	___sdcc_saved_stk01,W
     0065 00rr                      1-  742     	MOVAR	STK01
                                    1-  743     	BANKSEL	___sdcc_saved_stk00
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 01rr                      1-  744     	MOVR	___sdcc_saved_stk00,W
     0068 00rr                      1-  745     	MOVAR	STK00
                                    1-  746     	BANKSEL	___sdcc_saved_fsr
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 01rr                      1-  747     	MOVR	___sdcc_saved_fsr,W
     006B 0084                      1-  748     	MOVAR	FSR
     006C 01rr                      1-  749     	MOVR	PSAVE,W
     006D 008A                      1-  750     	MOVAR	PCHBUF
     006E 0283                      1-  751     	CLRR	STATUS
     006F 15rr                      1-  752     	SWAPR	SSAVE,W
     0070 0083                      1-  753     	MOVAR	STATUS
     0071 15rr                      1-  754     	SWAPR	WSAVE,F
     0072 15rr                      1-  755     	SWAPR	WSAVE,W
     0073                           1-  756     END_OF_INTERRUPT:
     0073 0011                      1-  757     	RETIE	
                                    1-  759     ;--------------------------------------------------------
                                    1-  760     ; code
                                    1-  761     ;--------------------------------------------------------
                                    1-  762     ;***
                                    1-  763     ;  pBlock Stats: dbName = M
                                    1-  764     ;***
                                    1-  765     ;has an exit
                                    1-  766     ;functions called:
                                    1-  767     ;   _initSys
                                    1-  768     ;   _initAD
                                    1-  769     ;   _ledShow
                                    1-  770     ;   _pwmStop
                                    1-  771     ;   _powerOff
                                    1-  772     ;   _keyCtr
                                    1-  773     ;   _checkBatAD
                                    1-  774     ;   _checkOutA
                                    1-  775     ;   _checkChrgV
                                    1-  776     ;   _chrgCtr
                                    1-  777     ;   _gotoSleep
                                    1-  778     ;   _powerOff
                                    1-  779     ;   _initSys
                                    1-  780     ;   _initAD
                                    1-  781     ;   _ledShow
                                    1-  782     ;   _pwmStop
                                    1-  783     ;   _powerOff
                                    1-  784     ;   _keyCtr
                                    1-  785     ;   _checkBatAD
                                    1-  786     ;   _checkOutA
                                    1-  787     ;   _checkChrgV
                                    1-  788     ;   _chrgCtr
                                    1-  789     ;   _gotoSleep
                                    1-  790     ;   _powerOff
                                    1-  791     ;; Starting pCode block
                                    1-  792     .segment "code"; module=main, function=_main
     0000                           1-  794     _main:
                                    1-  795     ; 2 exit points
                                    1-  796     	.line	173, "main.c"; 	initSys();
                                    1-  797     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  798     	.line	174, "main.c"; 	initAD();
                                    1-  799     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  800     _00174_DS_:
                                    1-  801     	.line	177, "main.c"; 	CLRWDT();
     0002 0002                      1-  802     	clrwdt
                                    1-  803     	.line	178, "main.c"; 	ledShow();
                                    1-  804     	MCALL	_ledShow
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  805     	.line	198, "main.c"; 	if(!IntFlag)
                                    1-  806     	BANKSEL	_Status
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 08rr                      1-  807     	BTRSS	_Status,0
                                    1-  808     	MGOTO	_00174_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  809     	.line	200, "main.c"; 	IntFlag = 0;
     0007 1Crr                      1-  810     	BCR	_Status,0
                                    1-  811     	.line	202, "main.c"; 	if(shanshuoTime == 0 && pwStep == 0 && workStep > 0)
                                    1-  812     	BANKSEL	_shanshuoTime
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 01rr                      1-  813     	MOVR	_shanshuoTime,W
     000A 0903                      1-  814     	BTRSS	STATUS,2
                                    1-  815     	MGOTO	_00140_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  816     	BANKSEL	_pwStep
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1-  817     	MOVR	_pwStep,W
     000E 0903                      1-  818     	BTRSS	STATUS,2
                                    1-  819     	MGOTO	_00140_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  820     	BANKSEL	_workStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 01rr                      1-  821     	MOVR	_workStep,W
     0012 0D03                      1-  822     	BTRSC	STATUS,2
                                    1-  823     	MGOTO	_00140_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  824     	.line	204, "main.c"; 	if(++closeCount >= 1000)
                                    1-  825     	BANKSEL	_closeCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  826     	INCR	_closeCount,F
     0016 0D03                      1-  827     	BTRSC	STATUS,2
     0017 05rr                      1-  828     	INCR	(_closeCount + 1),F
                                    1-  829     ;;unsigned compare: left < lit (0x3E8=1000), size=2
     0018 2103                      1-  830     	MOVIA	0x03
     0019 04rr                      1-  831     	SUBAR	(_closeCount + 1),W
     001A 0903                      1-  832     	BTRSS	STATUS,2
                                    1-  833     	MGOTO	_00247_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
     001C 21E8                      1-  834     	MOVIA	0xe8
     001D 04rr                      1-  835     	SUBAR	_closeCount,W
     001E                           1-  836     _00247_DS_:
     001E 0803                      1-  837     	BTRSS	STATUS,0
                                    1-  838     	MGOTO	_00141_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  839     	.line	206, "main.c"; 	closeCount = 0;
                                    1-  840     	BANKSEL	_closeCount
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 02rr                      1-  841     	CLRR	_closeCount
     0022 02rr                      1-  842     	CLRR	(_closeCount + 1)
                                    1-  843     	.line	207, "main.c"; 	workStep = 0;
                                    1-  844     	BANKSEL	_workStep
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 02rr                      1-  845     	CLRR	_workStep
                                    1-  846     	.line	208, "main.c"; 	ledStep = 0;
                                    1-  847     	BANKSEL	_ledStep
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1-  848     	CLRR	_ledStep
                                    1-  849     	.line	209, "main.c"; 	pwmStop();
                                    1-  850     	MCALL	_pwmStop
     0027 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  851     	MGOTO	_00141_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
     0029                           1-  852     _00140_DS_:
                                    1-  853     	.line	214, "main.c"; 	closeCount = 0;
                                    1-  854     	BANKSEL	_closeCount
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 02rr                      1-  855     	CLRR	_closeCount
     002B 02rr                      1-  856     	CLRR	(_closeCount + 1)
                                    1-  857     ;;unsigned compare: left < lit (0x5=5), size=1
     002C                           1-  858     _00141_DS_:
                                    1-  859     	.line	217, "main.c"; 	if(overCount >= 5 && workStep > 0)
     002C 2105                      1-  860     	MOVIA	0x05
                                    1-  861     	BANKSEL	_overCount
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 04rr                      1-  862     	SUBAR	_overCount,W
     002F 0803                      1-  863     	BTRSS	STATUS,0
                                    1-  864     	MGOTO	_00147_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  865     	BANKSEL	_workStep
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1-  866     	MOVR	_workStep,W
     0033 0D03                      1-  867     	BTRSC	STATUS,2
                                    1-  868     	MGOTO	_00147_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  869     	.line	219, "main.c"; 	if(++count5S > 500)
                                    1-  870     	BANKSEL	_count5S
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 05rr                      1-  871     	INCR	_count5S,F
     0037 0D03                      1-  872     	BTRSC	STATUS,2
     0038 05rr                      1-  873     	INCR	(_count5S + 1),F
                                    1-  874     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  875     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     0039 2101                      1-  876     	MOVIA	0x01
     003A 04rr                      1-  877     	SUBAR	(_count5S + 1),W
     003B 0903                      1-  878     	BTRSS	STATUS,2
                                    1-  879     	MGOTO	_00249_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 21F5                      1-  880     	MOVIA	0xf5
     003E 04rr                      1-  881     	SUBAR	_count5S,W
     003F                           1-  882     _00249_DS_:
     003F 0803                      1-  883     	BTRSS	STATUS,0
                                    1-  884     	MGOTO	_00148_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  885     	.line	221, "main.c"; 	overCount = 0;
                                    1-  886     	BANKSEL	_overCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1-  887     	CLRR	_overCount
                                    1-  888     	.line	222, "main.c"; 	count5S = 0;
                                    1-  889     	BANKSEL	_count5S
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 02rr                      1-  890     	CLRR	_count5S
     0045 02rr                      1-  891     	CLRR	(_count5S + 1)
                                    1-  892     	.line	223, "main.c"; 	ledDeadTime = 25;
     0046 2119                      1-  893     	MOVIA	0x19
                                    1-  894     	BANKSEL	_ledDeadTime
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 00rr                      1-  895     	MOVAR	_ledDeadTime
                                    1-  896     	.line	224, "main.c"; 	powerOff();
                                    1-  897     	MCALL	_powerOff
     0049 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  898     	MGOTO	_00148_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
     004B                           1-  899     _00147_DS_:
                                    1-  900     	.line	229, "main.c"; 	count5S = 0;
                                    1-  901     	BANKSEL	_count5S
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 02rr                      1-  902     	CLRR	_count5S
     004D 02rr                      1-  903     	CLRR	(_count5S + 1)
     004E                           1-  904     _00148_DS_:
                                    1-  905     	.line	231, "main.c"; 	if(chrgFlag == 0)
                                    1-  906     	BANKSEL	_Status
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 09rr                      1-  907     	BTRSS	_Status,3
                                    1-  908     	.line	232, "main.c"; 	keyCtr();
                                    1-  909     	MCALL	_keyCtr
     0050 2rrr                      3-   66 m1      LCALL rom_address
     0051                           1-  910     _00151_DS_:
                                    1-  911     	.line	233, "main.c"; 	if(count200ms < 5)
     0051 2105                      1-  912     	MOVIA	0x05
                                    1-  913     	BANKSEL	_count200ms
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 04rr                      1-  914     	SUBAR	_count200ms,W
     0054 0C03                      1-  915     	BTRSC	STATUS,0
                                    1-  916     	MGOTO	_00160_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  917     	.line	235, "main.c"; 	checkBatAD();
                                    1-  918     	MCALL	_checkBatAD
     0056 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  919     	MGOTO	_00161_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  920     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  921     ;;unsigned compare: left >= lit (0x9=9), size=1
     0058                           1-  922     _00160_DS_:
                                    1-  923     	.line	237, "main.c"; 	else if(count200ms > 8 && count200ms < 11)
     0058 2109                      1-  924     	MOVIA	0x09
                                    1-  925     	BANKSEL	_count200ms
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 04rr                      1-  926     	SUBAR	_count200ms,W
     005B 0803                      1-  927     	BTRSS	STATUS,0
                                    1-  928     	MGOTO	_00156_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  929     ;;unsigned compare: left < lit (0xB=11), size=1
     005D 210B                      1-  930     	MOVIA	0x0b
     005E 04rr                      1-  931     	SUBAR	_count200ms,W
     005F 0C03                      1-  932     	BTRSC	STATUS,0
                                    1-  933     	MGOTO	_00156_DS_
     0060 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  934     	.line	239, "main.c"; 	checkOutA();
                                    1-  935     	MCALL	_checkOutA
     0061 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  936     	MGOTO	_00161_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  937     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  938     ;;unsigned compare: left >= lit (0xE=14), size=1
     0063                           1-  939     _00156_DS_:
                                    1-  940     	.line	241, "main.c"; 	else if(count200ms > 13 && count200ms < 16)
     0063 210E                      1-  941     	MOVIA	0x0e
                                    1-  942     	BANKSEL	_count200ms
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 04rr                      1-  943     	SUBAR	_count200ms,W
     0066 0803                      1-  944     	BTRSS	STATUS,0
                                    1-  945     	MGOTO	_00161_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  946     ;;unsigned compare: left < lit (0x10=16), size=1
     0068 2110                      1-  947     	MOVIA	0x10
     0069 04rr                      1-  948     	SUBAR	_count200ms,W
     006A 0803                      1-  949     	BTRSS	STATUS,0
                                    1-  950     	.line	243, "main.c"; 	checkChrgV();
                                    1-  951     	MCALL	_checkChrgV
     006B 2rrr                      3-   66 m1      LCALL rom_address
     006C                           1-  952     _00161_DS_:
                                    1-  953     	.line	246, "main.c"; 	chrgCtr();
                                    1-  954     	MCALL	_chrgCtr
     006C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  955     	.line	249, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x08) == 0 && ledLightTime == 0 && ledDeadTime == 0 && shanshuoTime == 0)
                                    1-  956     	BANKSEL	_workStep
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 01rr                      1-  957     	MOVR	_workStep,W
     006F 0903                      1-  958     	BTRSS	STATUS,2
                                    1-  959     	MGOTO	_00165_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  960     	BANKSEL	_keyCount
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 01rr                      1-  961     	MOVR	_keyCount,W
     0073 0903                      1-  962     	BTRSS	STATUS,2
                                    1-  963     	MGOTO	_00165_DS_
     0074 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  964     	BANKSEL	_PORTA
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 0Drr                      1-  965     	BTRSC	_PORTA,3
                                    1-  966     	MGOTO	_00165_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  967     	BANKSEL	_ledLightTime
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 01rr                      1-  968     	MOVR	_ledLightTime,W
     007A 0903                      1-  969     	BTRSS	STATUS,2
                                    1-  970     	MGOTO	_00165_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  971     	BANKSEL	_ledDeadTime
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 01rr                      1-  972     	MOVR	_ledDeadTime,W
     007E 0903                      1-  973     	BTRSS	STATUS,2
                                    1-  974     	MGOTO	_00165_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  975     	BANKSEL	_shanshuoTime
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 01rr                      1-  976     	MOVR	_shanshuoTime,W
     0082 0903                      1-  977     	BTRSS	STATUS,2
                                    1-  978     	MGOTO	_00165_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  979     	.line	251, "main.c"; 	if(++sleepTime > 20)
                                    1-  980     	BANKSEL	_sleepTime
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 05rr                      1-  981     	INCR	_sleepTime,F
     0086 0D03                      1-  982     	BTRSC	STATUS,2
     0087 05rr                      1-  983     	INCR	(_sleepTime + 1),F
                                    1-  984     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  985     ;;unsigned compare: left >= lit (0x15=21), size=2
     0088 2100                      1-  986     	MOVIA	0x00
     0089 04rr                      1-  987     	SUBAR	(_sleepTime + 1),W
     008A 0903                      1-  988     	BTRSS	STATUS,2
                                    1-  989     	MGOTO	_00255_DS_
     008B 3rrr                      3-   63 m1      LGOTO rom_address
     008C 2115                      1-  990     	MOVIA	0x15
     008D 04rr                      1-  991     	SUBAR	_sleepTime,W
     008E                           1-  992     _00255_DS_:
     008E 0803                      1-  993     	BTRSS	STATUS,0
                                    1-  994     	MGOTO	_00165_DS_
     008F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  995     	.line	253, "main.c"; 	gotoSleep();
                                    1-  996     	MCALL	_gotoSleep
     0090 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  997     ;;unsigned compare: left < lit (0x384=900), size=2
     0091                           1-  998     _00165_DS_:
                                    1-  999     	.line	257, "main.c"; 	if(count900s >= 900)
     0091 2103                      1- 1000     	MOVIA	0x03
                                    1- 1001     	BANKSEL	_count900s
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 04rr                      1- 1002     	SUBAR	(_count900s + 1),W
     0094 0903                      1- 1003     	BTRSS	STATUS,2
                                    1- 1004     	MGOTO	_00256_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
     0096 2184                      1- 1005     	MOVIA	0x84
     0097 04rr                      1- 1006     	SUBAR	_count900s,W
     0098                           1- 1007     _00256_DS_:
     0098 0803                      1- 1008     	BTRSS	STATUS,0
                                    1- 1009     	MGOTO	_00174_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1010     	.line	259, "main.c"; 	powerOff();
                                    1- 1011     	MCALL	_powerOff
     009A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1012     	MGOTO	_00174_DS_
     009B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1013     	.line	263, "main.c"; 	}
                                    1- 1014     	RETURN	
     009C 0010                      3-   40 m1      ret
                                    1- 1015     ; exit point of _main
                                    1- 1017     ;***
                                    1- 1018     ;  pBlock Stats: dbName = C
                                    1- 1019     ;***
                                    1- 1020     ;has an exit
                                    1- 1021     ;; Starting pCode block
                                    1- 1022     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1024     _F_wait_eoc:
                                    1- 1025     ; 2 exit points
     0000                           1- 1026     _00918_DS_:
                                    1- 1027     	.line	1047, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1028     	BTRSS	_ADMDbits,5
                                    1- 1029     	MGOTO	_00918_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1030     	.line	1049, "main.c"; 	}
                                    1- 1031     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1032     ; exit point of _F_wait_eoc
                                    1- 1034     ;***
                                    1- 1035     ;  pBlock Stats: dbName = C
                                    1- 1036     ;***
                                    1- 1037     ;has an exit
                                    1- 1038     ;functions called:
                                    1- 1039     ;   _delay
                                    1- 1040     ;   _F_wait_eoc
                                    1- 1041     ;   _delay
                                    1- 1042     ;   _F_wait_eoc
                                    1- 1043     ;6 compiler assigned registers:
                                    1- 1044     ;   r0x1034
                                    1- 1045     ;   r0x1035
                                    1- 1046     ;   r0x1036
                                    1- 1047     ;   r0x1037
                                    1- 1048     ;   r0x1038
                                    1- 1049     ;   r0x1039
                                    1- 1050     ;; Starting pCode block
                                    1- 1051     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1053     ;local variable name mapping:
     0000                           1- 1056     _F_AIN2_Convert:
                                    1- 1057     ; 2 exit points
                                    1- 1058     	.line	1030, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1059     	BANKSEL	r0x1034
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1060     	MOVAR	r0x1034
                                    1- 1061     	.line	1032, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1062     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1063     	CLRR	_R_AIN2_DATA_LB
                                    1- 1064     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1065     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1066     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1067     	.line	1034, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1068     	MOVIA	0x92
     0008 00rr                      1- 1069     	MOVAR	_ADMD
                                    1- 1070     	.line	1035, "main.c"; 	delay(200);	
     0009 21C8                      1- 1071     	MOVIA	0xc8
                                    1- 1072     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1073     	.line	1036, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1074     	MOVIA	0x01
                                    1- 1075     	BANKSEL	r0x1035
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1076     	MOVAR	r0x1035
     000E                           1- 1077     _00911_DS_:
                                    1- 1078     	BANKSEL	r0x1035
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1079     	MOVR	r0x1035,W
                                    1- 1080     	BANKSEL	r0x1034
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1081     	SUBAR	r0x1034,W
     0012 0803                      1- 1082     	BTRSS	STATUS,0
                                    1- 1083     	MGOTO	_00913_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1084     	.line	1038, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1085     	BSR	_ADMDbits,6
                                    1- 1086     	.line	1039, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1087     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1088     	.line	1040, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1089     	MOVIA	0x0f
     0017 10rr                      1- 1090     	ANDAR	_ADR,W
                                    1- 1091     ;;3	MOVAR	r0x1036
                                    1- 1092     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1093     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1094     	.line	1041, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1- 1095     	MOVR	_ADD,W
                                    1- 1096     	BANKSEL	r0x1036
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1097     	MOVAR	r0x1036
                                    1- 1098     ;;1	CLRR	r0x1037
                                    1- 1099     ;;110	MOVR	r0x1036,W
                                    1- 1100     ;;108	MOVAR	r0x1038
     001D 2100                      1- 1101     	MOVIA	0x00
                                    1- 1102     	BANKSEL	r0x1039
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1103     	MOVAR	r0x1039
                                    1- 1104     ;;109	MOVR	r0x1038,W
                                    1- 1105     	BANKSEL	r0x1036
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1106     	MOVR	r0x1036,W
                                    1- 1107     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1108     	ADDAR	_R_AIN2_DATA,F
                                    1- 1109     	BANKSEL	r0x1039
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1110     	MOVR	r0x1039,W
     0026 0C03                      1- 1111     	BTRSC	STATUS,0
     0027 05rr                      1- 1112     	INCR	r0x1039,W
     0028 0D03                      1- 1113     	BTRSC	STATUS,2
                                    1- 1114     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1115     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1116     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1- 1117     _00001_DS_:
                                    1- 1118     	.line	1036, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1119     	BANKSEL	r0x1035
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1120     	INCR	r0x1035,F
                                    1- 1121     	MGOTO	_00911_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1122     _00913_DS_:
                                    1- 1123     	.line	1043, "main.c"; 	}
                                    1- 1124     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1125     ; exit point of _F_AIN2_Convert
                                    1- 1127     ;***
                                    1- 1128     ;  pBlock Stats: dbName = C
                                    1- 1129     ;***
                                    1- 1130     ;has an exit
                                    1- 1131     ;functions called:
                                    1- 1132     ;   _delay
                                    1- 1133     ;   _F_wait_eoc
                                    1- 1134     ;   _delay
                                    1- 1135     ;   _F_wait_eoc
                                    1- 1136     ;6 compiler assigned registers:
                                    1- 1137     ;   r0x103A
                                    1- 1138     ;   r0x103B
                                    1- 1139     ;   r0x103C
                                    1- 1140     ;   r0x103D
                                    1- 1141     ;   r0x103E
                                    1- 1142     ;   r0x103F
                                    1- 1143     ;; Starting pCode block
                                    1- 1144     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1- 1146     ;local variable name mapping:
     0000                           1- 1149     _F_AIN3_Convert:
                                    1- 1150     ; 2 exit points
                                    1- 1151     	.line	1015, "main.c"; 	void F_AIN3_Convert(char count)
                                    1- 1152     	BANKSEL	r0x103A
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1153     	MOVAR	r0x103A
                                    1- 1154     	.line	1017, "main.c"; 	R_AIN3_DATA=R_AIN3_DATA_LB=0x00;   
                                    1- 1155     	BANKSEL	_R_AIN3_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1156     	CLRR	_R_AIN3_DATA_LB
                                    1- 1157     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1158     	CLRR	_R_AIN3_DATA
     0006 02rr                      1- 1159     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1160     	.line	1019, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0007 2193                      1- 1161     	MOVIA	0x93
     0008 00rr                      1- 1162     	MOVAR	_ADMD
                                    1- 1163     	.line	1020, "main.c"; 	delay(200);	
     0009 21C8                      1- 1164     	MOVIA	0xc8
                                    1- 1165     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1166     	.line	1021, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1167     	MOVIA	0x01
                                    1- 1168     	BANKSEL	r0x103B
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1169     	MOVAR	r0x103B
     000E                           1- 1170     _00902_DS_:
                                    1- 1171     	BANKSEL	r0x103B
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1172     	MOVR	r0x103B,W
                                    1- 1173     	BANKSEL	r0x103A
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1174     	SUBAR	r0x103A,W
     0012 0803                      1- 1175     	BTRSS	STATUS,0
                                    1- 1176     	MGOTO	_00904_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1177     	.line	1023, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1178     	BSR	_ADMDbits,6
                                    1- 1179     	.line	1024, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1180     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1181     	.line	1025, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1182     	MOVIA	0x0f
     0017 10rr                      1- 1183     	ANDAR	_ADR,W
                                    1- 1184     ;;3	MOVAR	r0x103C
                                    1- 1185     	BANKSEL	_R_AIN3_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1186     	ADDAR	_R_AIN3_DATA_LB,F
                                    1- 1187     	.line	1026, "main.c"; 	R_AIN3_DATA    += ADD; 
     001A 01rr                      1- 1188     	MOVR	_ADD,W
                                    1- 1189     	BANKSEL	r0x103C
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1190     	MOVAR	r0x103C
                                    1- 1191     ;;1	CLRR	r0x103D
                                    1- 1192     ;;107	MOVR	r0x103C,W
                                    1- 1193     ;;105	MOVAR	r0x103E
     001D 2100                      1- 1194     	MOVIA	0x00
                                    1- 1195     	BANKSEL	r0x103F
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1196     	MOVAR	r0x103F
                                    1- 1197     ;;106	MOVR	r0x103E,W
                                    1- 1198     	BANKSEL	r0x103C
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1199     	MOVR	r0x103C,W
                                    1- 1200     	BANKSEL	_R_AIN3_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1201     	ADDAR	_R_AIN3_DATA,F
                                    1- 1202     	BANKSEL	r0x103F
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1203     	MOVR	r0x103F,W
     0026 0C03                      1- 1204     	BTRSC	STATUS,0
     0027 05rr                      1- 1205     	INCR	r0x103F,W
     0028 0D03                      1- 1206     	BTRSC	STATUS,2
                                    1- 1207     	MGOTO	_00002_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1208     	BANKSEL	_R_AIN3_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1209     	ADDAR	(_R_AIN3_DATA + 1),F
     002C                           1- 1210     _00002_DS_:
                                    1- 1211     	.line	1021, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1212     	BANKSEL	r0x103B
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1213     	INCR	r0x103B,F
                                    1- 1214     	MGOTO	_00902_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1215     _00904_DS_:
                                    1- 1216     	.line	1028, "main.c"; 	}
                                    1- 1217     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1218     ; exit point of _F_AIN3_Convert
                                    1- 1220     ;***
                                    1- 1221     ;  pBlock Stats: dbName = C
                                    1- 1222     ;***
                                    1- 1223     ;has an exit
                                    1- 1224     ;functions called:
                                    1- 1225     ;   _delay
                                    1- 1226     ;   _F_wait_eoc
                                    1- 1227     ;   _delay
                                    1- 1228     ;   _F_wait_eoc
                                    1- 1229     ;6 compiler assigned registers:
                                    1- 1230     ;   r0x1040
                                    1- 1231     ;   r0x1041
                                    1- 1232     ;   r0x1042
                                    1- 1233     ;   r0x1043
                                    1- 1234     ;   r0x1044
                                    1- 1235     ;   r0x1045
                                    1- 1236     ;; Starting pCode block
                                    1- 1237     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1239     ;local variable name mapping:
     0000                           1- 1242     _F_AIN4_Convert:
                                    1- 1243     ; 2 exit points
                                    1- 1244     	.line	1000, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1245     	BANKSEL	r0x1040
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1246     	MOVAR	r0x1040
                                    1- 1247     	.line	1002, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1248     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1249     	CLRR	_R_AIN4_DATA_LB
                                    1- 1250     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1251     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1252     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1253     	.line	1004, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1254     	MOVIA	0x94
     0008 00rr                      1- 1255     	MOVAR	_ADMD
                                    1- 1256     	.line	1005, "main.c"; 	delay(200);	
     0009 21C8                      1- 1257     	MOVIA	0xc8
                                    1- 1258     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1259     	.line	1006, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1260     	MOVIA	0x01
                                    1- 1261     	BANKSEL	r0x1041
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1262     	MOVAR	r0x1041
     000E                           1- 1263     _00893_DS_:
                                    1- 1264     	BANKSEL	r0x1041
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1265     	MOVR	r0x1041,W
                                    1- 1266     	BANKSEL	r0x1040
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1267     	SUBAR	r0x1040,W
     0012 0803                      1- 1268     	BTRSS	STATUS,0
                                    1- 1269     	MGOTO	_00895_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1270     	.line	1008, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1271     	BSR	_ADMDbits,6
                                    1- 1272     	.line	1009, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1273     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1274     	.line	1010, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1275     	MOVIA	0x0f
     0017 10rr                      1- 1276     	ANDAR	_ADR,W
                                    1- 1277     ;;3	MOVAR	r0x1042
                                    1- 1278     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1279     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1280     	.line	1011, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1281     	MOVR	_ADD,W
                                    1- 1282     	BANKSEL	r0x1042
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1283     	MOVAR	r0x1042
                                    1- 1284     ;;1	CLRR	r0x1043
                                    1- 1285     ;;104	MOVR	r0x1042,W
                                    1- 1286     ;;102	MOVAR	r0x1044
     001D 2100                      1- 1287     	MOVIA	0x00
                                    1- 1288     	BANKSEL	r0x1045
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1289     	MOVAR	r0x1045
                                    1- 1290     ;;103	MOVR	r0x1044,W
                                    1- 1291     	BANKSEL	r0x1042
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1292     	MOVR	r0x1042,W
                                    1- 1293     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1294     	ADDAR	_R_AIN4_DATA,F
                                    1- 1295     	BANKSEL	r0x1045
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1296     	MOVR	r0x1045,W
     0026 0C03                      1- 1297     	BTRSC	STATUS,0
     0027 05rr                      1- 1298     	INCR	r0x1045,W
     0028 0D03                      1- 1299     	BTRSC	STATUS,2
                                    1- 1300     	MGOTO	_00003_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1301     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1302     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1303     _00003_DS_:
                                    1- 1304     	.line	1006, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1305     	BANKSEL	r0x1041
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1306     	INCR	r0x1041,F
                                    1- 1307     	MGOTO	_00893_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1308     _00895_DS_:
                                    1- 1309     	.line	1013, "main.c"; 	}
                                    1- 1310     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1311     ; exit point of _F_AIN4_Convert
                                    1- 1313     ;***
                                    1- 1314     ;  pBlock Stats: dbName = C
                                    1- 1315     ;***
                                    1- 1316     ;has an exit
                                    1- 1317     ;functions called:
                                    1- 1318     ;   _F_AIN4_Convert
                                    1- 1319     ;   _F_AIN4_Convert
                                    1- 1320     ;4 compiler assigned registers:
                                    1- 1321     ;   r0x1046
                                    1- 1322     ;   r0x1047
                                    1- 1323     ;   r0x1048
                                    1- 1324     ;   r0x1049
                                    1- 1325     ;; Starting pCode block
                                    1- 1326     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1328     _checkOutA:
                                    1- 1329     ; 2 exit points
                                    1- 1330     	.line	925, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1331     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1332     	CLRR	_R_AIN4_DATA_LB
                                    1- 1333     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1334     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1335     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1336     	.line	926, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1337     	MOVIA	0x08
                                    1- 1338     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1339     	.line	927, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1340     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1341     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1342     	ANDIA	0xf0
     000A 00rr                      1- 1343     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1344     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1345     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1346     	ANDIA	0x0f
     000E 11rr                      1- 1347     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1348     	XORAR	_R_AIN4_DATA,F
                                    1- 1349     	.line	928, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1350     	MOVIA	0xf0
                                    1- 1351     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1352     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1353     	.line	929, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1354     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1355     	BANKSEL	r0x1048
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1356     	MOVAR	r0x1048
                                    1- 1357     ;;1	MOVAR	r0x1046
                                    1- 1358     ;;1	CLRR	r0x1047
                                    1- 1359     ;;101	MOVR	r0x1046,W
     0016 2100                      1- 1360     	MOVIA	0x00
                                    1- 1361     	BANKSEL	r0x1049
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1362     	MOVAR	r0x1049
                                    1- 1363     	BANKSEL	r0x1048
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1364     	MOVR	r0x1048,W
                                    1- 1365     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1366     	ADDAR	_R_AIN4_DATA,F
                                    1- 1367     	BANKSEL	r0x1049
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1368     	MOVR	r0x1049,W
     001F 0C03                      1- 1369     	BTRSC	STATUS,0
     0020 05rr                      1- 1370     	INCR	r0x1049,W
     0021 0D03                      1- 1371     	BTRSC	STATUS,2
                                    1- 1372     	MGOTO	_00004_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1373     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1374     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1375     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1376     _00004_DS_:
                                    1- 1377     	.line	930, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1378     	BCR	STATUS,0
                                    1- 1379     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1380     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1381     	RRR	_R_AIN4_DATA,F
                                    1- 1382     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1383     	BCR	STATUS,0
     002A 13rr                      1- 1384     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1385     	RRR	_R_AIN4_DATA,F
                                    1- 1386     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1387     	BCR	STATUS,0
     002D 13rr                      1- 1388     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1389     	RRR	_R_AIN4_DATA,F
                                    1- 1390     	.line	931, "main.c"; 	if(debug)
                                    1- 1391     	BANKSEL	_debug
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1392     	MOVR	_debug,W
     0031 0D03                      1- 1393     	BTRSC	STATUS,2
                                    1- 1394     	MGOTO	_00828_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1395     	.line	932, "main.c"; 	R_AIN4_DATA = OUTA;
     0033 212D                      1- 1396     	MOVIA	0x2d
                                    1- 1397     	BANKSEL	_R_AIN4_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1398     	MOVAR	_R_AIN4_DATA
     0036 2101                      1- 1399     	MOVIA	0x01
     0037 00rr                      1- 1400     	MOVAR	(_R_AIN4_DATA + 1)
                                    1- 1401     ;;unsigned compare: left < lit (0x6=6), size=1
     0038                           1- 1402     _00828_DS_:
                                    1- 1403     	.line	933, "main.c"; 	if(workStep < 6 && R_AIN4_DATA > 200)
     0038 2106                      1- 1404     	MOVIA	0x06
                                    1- 1405     	BANKSEL	_workStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1406     	SUBAR	_workStep,W
     003B 0C03                      1- 1407     	BTRSC	STATUS,0
                                    1- 1408     	MGOTO	_00846_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1409     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1410     ;;unsigned compare: left >= lit (0xC9=201), size=2
     003D 2100                      1- 1411     	MOVIA	0x00
                                    1- 1412     	BANKSEL	_R_AIN4_DATA
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 04rr                      1- 1413     	SUBAR	(_R_AIN4_DATA + 1),W
     0040 0903                      1- 1414     	BTRSS	STATUS,2
                                    1- 1415     	MGOTO	_00882_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042 21C9                      1- 1416     	MOVIA	0xc9
     0043 04rr                      1- 1417     	SUBAR	_R_AIN4_DATA,W
     0044                           1- 1418     _00882_DS_:
     0044 0803                      1- 1419     	BTRSS	STATUS,0
                                    1- 1420     	MGOTO	_00846_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1421     	.line	935, "main.c"; 	if(++overCount > 5)
                                    1- 1422     	BANKSEL	_overCount
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 05rr                      1- 1423     	INCR	_overCount,F
                                    1- 1424     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1425     ;;unsigned compare: left >= lit (0x6=6), size=1
     0048 2106                      1- 1426     	MOVIA	0x06
     0049 04rr                      1- 1427     	SUBAR	_overCount,W
     004A 0803                      1- 1428     	BTRSS	STATUS,0
                                    1- 1429     	MGOTO	_00849_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1430     	.line	937, "main.c"; 	overCount = 5;
     004C 2105                      1- 1431     	MOVIA	0x05
     004D 00rr                      1- 1432     	MOVAR	_overCount
                                    1- 1433     	.line	938, "main.c"; 	tempLedStep = workStep;
                                    1- 1434     	BANKSEL	_workStep
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1- 1435     	MOVR	_workStep,W
                                    1- 1436     	BANKSEL	_tempLedStep
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 00rr                      1- 1437     	MOVAR	_tempLedStep
                                    1- 1438     	.line	938, "main.c"; 	}
                                    1- 1439     	MGOTO	_00849_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1440     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1441     ;;unsigned compare: left >= lit (0x191=401), size=2
     0053                           1- 1442     _00846_DS_:
                                    1- 1443     	.line	941, "main.c"; 	else if(R_AIN4_DATA > 400)
     0053 2101                      1- 1444     	MOVIA	0x01
                                    1- 1445     	BANKSEL	_R_AIN4_DATA
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 04rr                      1- 1446     	SUBAR	(_R_AIN4_DATA + 1),W
     0056 0903                      1- 1447     	BTRSS	STATUS,2
                                    1- 1448     	MGOTO	_00884_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
     0058 2191                      1- 1449     	MOVIA	0x91
     0059 04rr                      1- 1450     	SUBAR	_R_AIN4_DATA,W
     005A                           1- 1451     _00884_DS_:
     005A 0803                      1- 1452     	BTRSS	STATUS,0
                                    1- 1453     	MGOTO	_00843_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1454     	.line	943, "main.c"; 	if(++overCount > 5)
                                    1- 1455     	BANKSEL	_overCount
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 05rr                      1- 1456     	INCR	_overCount,F
                                    1- 1457     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1458     ;;unsigned compare: left >= lit (0x6=6), size=1
     005E 2106                      1- 1459     	MOVIA	0x06
     005F 04rr                      1- 1460     	SUBAR	_overCount,W
     0060 0803                      1- 1461     	BTRSS	STATUS,0
                                    1- 1462     	MGOTO	_00849_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1463     	.line	945, "main.c"; 	overCount = 5;
     0062 2105                      1- 1464     	MOVIA	0x05
     0063 00rr                      1- 1465     	MOVAR	_overCount
                                    1- 1466     	.line	946, "main.c"; 	tempLedStep = workStep;
                                    1- 1467     	BANKSEL	_workStep
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1- 1468     	MOVR	_workStep,W
                                    1- 1469     	BANKSEL	_tempLedStep
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 00rr                      1- 1470     	MOVAR	_tempLedStep
                                    1- 1471     	.line	946, "main.c"; 	//        		if(tempDuty > 50)
                                    1- 1472     	MGOTO	_00849_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1473     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1474     ;;unsigned compare: left >= lit (0x2E=46), size=2
     0069                           1- 1475     _00843_DS_:
                                    1- 1476     	.line	954, "main.c"; 	else if(R_AIN4_DATA > 45)
     0069 2100                      1- 1477     	MOVIA	0x00
                                    1- 1478     	BANKSEL	_R_AIN4_DATA
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 04rr                      1- 1479     	SUBAR	(_R_AIN4_DATA + 1),W
     006C 0903                      1- 1480     	BTRSS	STATUS,2
                                    1- 1481     	MGOTO	_00886_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
     006E 212E                      1- 1482     	MOVIA	0x2e
     006F 04rr                      1- 1483     	SUBAR	_R_AIN4_DATA,W
     0070                           1- 1484     _00886_DS_:
     0070 0803                      1- 1485     	BTRSS	STATUS,0
                                    1- 1486     	MGOTO	_00840_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1487     	.line	956, "main.c"; 	if(overCount > 0)
                                    1- 1488     	BANKSEL	_overCount
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 01rr                      1- 1489     	MOVR	_overCount,W
     0074 0D03                      1- 1490     	BTRSC	STATUS,2
                                    1- 1491     	MGOTO	_00849_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1492     	.line	958, "main.c"; 	overCount--;
     0076 06rr                      1- 1493     	DECR	_overCount,F
                                    1- 1494     	.line	958, "main.c"; 	}
                                    1- 1495     	MGOTO	_00849_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
     0078                           1- 1496     _00840_DS_:
                                    1- 1497     	.line	975, "main.c"; 	if(overCount > 0)
                                    1- 1498     	BANKSEL	_overCount
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 01rr                      1- 1499     	MOVR	_overCount,W
     007A 0903                      1- 1500     	BTRSS	STATUS,2
                                    1- 1501     	.line	977, "main.c"; 	overCount--;
     007B 06rr                      1- 1502     	DECR	_overCount,F
                                    1- 1503     	.line	989, "main.c"; 	if(workStep > 0)
                                    1- 1504     	BANKSEL	_workStep
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 01rr                      1- 1505     	MOVR	_workStep,W
     007E 0D03                      1- 1506     	BTRSC	STATUS,2
                                    1- 1507     	MGOTO	_00849_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1508     	.line	990, "main.c"; 	ledStep = workStep;
     0080 01rr                      1- 1509     	MOVR	_workStep,W
                                    1- 1510     	BANKSEL	_ledStep
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 00rr                      1- 1511     	MOVAR	_ledStep
     0083                           1- 1512     _00849_DS_:
                                    1- 1513     	.line	994, "main.c"; 	}
                                    1- 1514     	RETURN	
     0083 0010                      3-   40 m1      ret
                                    1- 1515     ; exit point of _checkOutA
                                    1- 1517     ;***
                                    1- 1518     ;  pBlock Stats: dbName = C
                                    1- 1519     ;***
                                    1- 1520     ;has an exit
                                    1- 1521     ;functions called:
                                    1- 1522     ;   _F_AIN3_Convert
                                    1- 1523     ;   _F_AIN3_Convert
                                    1- 1524     ;4 compiler assigned registers:
                                    1- 1525     ;   r0x104A
                                    1- 1526     ;   r0x104B
                                    1- 1527     ;   r0x104C
                                    1- 1528     ;   r0x104D
                                    1- 1529     ;; Starting pCode block
                                    1- 1530     .segment "code"; module=main, function=_checkChrgV
     0000                           1- 1532     _checkChrgV:
                                    1- 1533     ; 2 exit points
                                    1- 1534     	.line	912, "main.c"; 	R_AIN3_DATA = R_AIN3_DATA_LB = 0x00;
                                    1- 1535     	BANKSEL	_R_AIN3_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1536     	CLRR	_R_AIN3_DATA_LB
                                    1- 1537     	BANKSEL	_R_AIN3_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1538     	CLRR	_R_AIN3_DATA
     0004 02rr                      1- 1539     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1540     	.line	913, "main.c"; 	F_AIN3_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1541     	MOVIA	0x08
                                    1- 1542     	MCALL	_F_AIN3_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1543     	.line	914, "main.c"; 	R_AIN3_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1544     	BANKSEL	_R_AIN3_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1545     	SWAPR	(_R_AIN3_DATA + 1),W
     0009 22F0                      1- 1546     	ANDIA	0xf0
     000A 00rr                      1- 1547     	MOVAR	(_R_AIN3_DATA + 1)
     000B 15rr                      1- 1548     	SWAPR	_R_AIN3_DATA,W
     000C 00rr                      1- 1549     	MOVAR	_R_AIN3_DATA
     000D 220F                      1- 1550     	ANDIA	0x0f
     000E 11rr                      1- 1551     	IORAR	(_R_AIN3_DATA + 1),F
     000F 12rr                      1- 1552     	XORAR	_R_AIN3_DATA,F
                                    1- 1553     	.line	915, "main.c"; 	R_AIN3_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1554     	MOVIA	0xf0
                                    1- 1555     	BANKSEL	_R_AIN3_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1556     	ANDAR	_R_AIN3_DATA_LB,F
                                    1- 1557     	.line	916, "main.c"; 	R_AIN3_DATA += R_AIN3_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1558     	MOVR	_R_AIN3_DATA_LB,W
                                    1- 1559     	BANKSEL	r0x104C
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1560     	MOVAR	r0x104C
                                    1- 1561     ;;1	MOVAR	r0x104A
                                    1- 1562     ;;1	CLRR	r0x104B
                                    1- 1563     ;;100	MOVR	r0x104A,W
     0016 2100                      1- 1564     	MOVIA	0x00
                                    1- 1565     	BANKSEL	r0x104D
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1566     	MOVAR	r0x104D
                                    1- 1567     	BANKSEL	r0x104C
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1568     	MOVR	r0x104C,W
                                    1- 1569     	BANKSEL	_R_AIN3_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1570     	ADDAR	_R_AIN3_DATA,F
                                    1- 1571     	BANKSEL	r0x104D
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1572     	MOVR	r0x104D,W
     001F 0C03                      1- 1573     	BTRSC	STATUS,0
     0020 05rr                      1- 1574     	INCR	r0x104D,W
     0021 0D03                      1- 1575     	BTRSC	STATUS,2
                                    1- 1576     	MGOTO	_00005_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1577     	BANKSEL	_R_AIN3_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1578     	ADDAR	(_R_AIN3_DATA + 1),F
                                    1- 1579     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1580     _00005_DS_:
                                    1- 1581     	.line	917, "main.c"; 	R_AIN3_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1582     	BCR	STATUS,0
                                    1- 1583     	BANKSEL	_R_AIN3_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1584     	RRR	(_R_AIN3_DATA + 1),F
     0028 13rr                      1- 1585     	RRR	_R_AIN3_DATA,F
                                    1- 1586     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1587     	BCR	STATUS,0
     002A 13rr                      1- 1588     	RRR	(_R_AIN3_DATA + 1),F
     002B 13rr                      1- 1589     	RRR	_R_AIN3_DATA,F
                                    1- 1590     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1591     	BCR	STATUS,0
     002D 13rr                      1- 1592     	RRR	(_R_AIN3_DATA + 1),F
     002E 13rr                      1- 1593     	RRR	_R_AIN3_DATA,F
                                    1- 1594     	.line	918, "main.c"; 	}
                                    1- 1595     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1596     ; exit point of _checkChrgV
                                    1- 1598     ;***
                                    1- 1599     ;  pBlock Stats: dbName = C
                                    1- 1600     ;***
                                    1- 1601     ;has an exit
                                    1- 1602     ;functions called:
                                    1- 1603     ;   _F_AIN2_Convert
                                    1- 1604     ;   _F_AIN2_Convert
                                    1- 1605     ;4 compiler assigned registers:
                                    1- 1606     ;   r0x104E
                                    1- 1607     ;   r0x104F
                                    1- 1608     ;   r0x1050
                                    1- 1609     ;   r0x1051
                                    1- 1610     ;; Starting pCode block
                                    1- 1611     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1613     _checkBatAD:
                                    1- 1614     ; 2 exit points
                                    1- 1615     	.line	758, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1616     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1617     	CLRR	_R_AIN2_DATA_LB
                                    1- 1618     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1619     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1620     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1621     	.line	759, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1622     	MOVIA	0x08
                                    1- 1623     	MCALL	_F_AIN2_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1624     	.line	760, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1625     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1626     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1627     	ANDIA	0xf0
     000A 00rr                      1- 1628     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1629     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1630     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1631     	ANDIA	0x0f
     000E 11rr                      1- 1632     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1633     	XORAR	_R_AIN2_DATA,F
                                    1- 1634     	.line	761, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1635     	MOVIA	0xf0
                                    1- 1636     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1637     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1638     	.line	762, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1639     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1640     	BANKSEL	r0x1050
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1641     	MOVAR	r0x1050
                                    1- 1642     ;;1	MOVAR	r0x104E
                                    1- 1643     ;;1	CLRR	r0x104F
                                    1- 1644     ;;99	MOVR	r0x104E,W
     0016 2100                      1- 1645     	MOVIA	0x00
                                    1- 1646     	BANKSEL	r0x1051
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1647     	MOVAR	r0x1051
                                    1- 1648     	BANKSEL	r0x1050
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1649     	MOVR	r0x1050,W
                                    1- 1650     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1651     	ADDAR	_R_AIN2_DATA,F
                                    1- 1652     	BANKSEL	r0x1051
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1653     	MOVR	r0x1051,W
     001F 0C03                      1- 1654     	BTRSC	STATUS,0
     0020 05rr                      1- 1655     	INCR	r0x1051,W
     0021 0D03                      1- 1656     	BTRSC	STATUS,2
                                    1- 1657     	MGOTO	_00006_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1658     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1659     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1660     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1661     _00006_DS_:
                                    1- 1662     	.line	763, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0025 1C03                      1- 1663     	BCR	STATUS,0
                                    1- 1664     	BANKSEL	_R_AIN2_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1665     	RRR	(_R_AIN2_DATA + 1),F
     0028 13rr                      1- 1666     	RRR	_R_AIN2_DATA,F
                                    1- 1667     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1668     	BCR	STATUS,0
     002A 13rr                      1- 1669     	RRR	(_R_AIN2_DATA + 1),F
     002B 13rr                      1- 1670     	RRR	_R_AIN2_DATA,F
                                    1- 1671     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1672     	BCR	STATUS,0
     002D 13rr                      1- 1673     	RRR	(_R_AIN2_DATA + 1),F
     002E 13rr                      1- 1674     	RRR	_R_AIN2_DATA,F
                                    1- 1675     	.line	764, "main.c"; 	if(debug)
                                    1- 1676     	BANKSEL	_debug
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1677     	MOVR	_debug,W
     0031 0D03                      1- 1678     	BTRSC	STATUS,2
                                    1- 1679     	MGOTO	_00579_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1680     	.line	765, "main.c"; 	R_AIN2_DATA = BATTLE;
     0033 210E                      1- 1681     	MOVIA	0x0e
                                    1- 1682     	BANKSEL	_R_AIN2_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1683     	MOVAR	_R_AIN2_DATA
     0036 2106                      1- 1684     	MOVIA	0x06
     0037 00rr                      1- 1685     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1686     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1687     ;;unsigned compare: left >= lit (0x60F=1551), size=2
     0038                           1- 1688     _00579_DS_:
                                    1- 1689     	.line	767, "main.c"; 	if(R_AIN2_DATA > 1550)
     0038 2106                      1- 1690     	MOVIA	0x06
                                    1- 1691     	BANKSEL	_R_AIN2_DATA
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1692     	SUBAR	(_R_AIN2_DATA + 1),W
     003B 0903                      1- 1693     	BTRSS	STATUS,2
                                    1- 1694     	MGOTO	_00790_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 210F                      1- 1695     	MOVIA	0x0f
     003E 04rr                      1- 1696     	SUBAR	_R_AIN2_DATA,W
     003F                           1- 1697     _00790_DS_:
     003F 0803                      1- 1698     	BTRSS	STATUS,0
                                    1- 1699     	MGOTO	_00586_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1700     	.line	770, "main.c"; 	lowCount = 0;
                                    1- 1701     	BANKSEL	_lowCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 1702     	CLRR	_lowCount
                                    1- 1703     	.line	770, "main.c"; 	}
                                    1- 1704     	MGOTO	_00587_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1705     ;;unsigned compare: left < lit (0x47E=1150), size=2
     0044                           1- 1706     _00586_DS_:
                                    1- 1707     	.line	772, "main.c"; 	else if(R_AIN2_DATA < 1150)
     0044 2104                      1- 1708     	MOVIA	0x04
                                    1- 1709     	BANKSEL	_R_AIN2_DATA
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 04rr                      1- 1710     	SUBAR	(_R_AIN2_DATA + 1),W
     0047 0903                      1- 1711     	BTRSS	STATUS,2
                                    1- 1712     	MGOTO	_00791_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 217E                      1- 1713     	MOVIA	0x7e
     004A 04rr                      1- 1714     	SUBAR	_R_AIN2_DATA,W
     004B                           1- 1715     _00791_DS_:
     004B 0C03                      1- 1716     	BTRSC	STATUS,0
                                    1- 1717     	MGOTO	_00583_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1718     	.line	774, "main.c"; 	if(++lowCount < 10)
                                    1- 1719     	BANKSEL	_lowCount
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 05rr                      1- 1720     	INCR	_lowCount,F
                                    1- 1721     ;;unsigned compare: left < lit (0xA=10), size=1
     004F 210A                      1- 1722     	MOVIA	0x0a
     0050 04rr                      1- 1723     	SUBAR	_lowCount,W
     0051 0803                      1- 1724     	BTRSS	STATUS,0
                                    1- 1725     	.line	775, "main.c"; 	return;
                                    1- 1726     	MGOTO	_00668_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1727     	.line	776, "main.c"; 	lowCount = 10;
     0053 210A                      1- 1728     	MOVIA	0x0a
     0054 00rr                      1- 1729     	MOVAR	_lowCount
                                    1- 1730     	.line	777, "main.c"; 	pwStep = 0;
                                    1- 1731     	BANKSEL	_pwStep
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 02rr                      1- 1732     	CLRR	_pwStep
                                    1- 1733     	.line	778, "main.c"; 	R_AIN2_DATA = 1150;
     0057 217E                      1- 1734     	MOVIA	0x7e
                                    1- 1735     	BANKSEL	_R_AIN2_DATA
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 00rr                      1- 1736     	MOVAR	_R_AIN2_DATA
     005A 2104                      1- 1737     	MOVIA	0x04
     005B 00rr                      1- 1738     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1739     	.line	778, "main.c"; 	R_AIN2_DATA = 1150;
                                    1- 1740     	MGOTO	_00587_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
     005D                           1- 1741     _00583_DS_:
                                    1- 1742     	.line	790, "main.c"; 	lowCount = 0;
                                    1- 1743     	BANKSEL	_lowCount
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 02rr                      1- 1744     	CLRR	_lowCount
                                    1- 1745     	.line	791, "main.c"; 	firstTime = 0;
                                    1- 1746     	BANKSEL	_firstTime
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 02rr                      1- 1747     	CLRR	_firstTime
     0061                           1- 1748     _00587_DS_:
                                    1- 1749     	.line	793, "main.c"; 	if(prePwStep == 0)
                                    1- 1750     	BANKSEL	_prePwStep
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1- 1751     	MOVR	_prePwStep,W
     0063 0903                      1- 1752     	BTRSS	STATUS,2
                                    1- 1753     	MGOTO	_00589_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1754     	.line	794, "main.c"; 	prePwStep = pwStep;
                                    1- 1755     	BANKSEL	_pwStep
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 01rr                      1- 1756     	MOVR	_pwStep,W
                                    1- 1757     	BANKSEL	_prePwStep
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 00rr                      1- 1758     	MOVAR	_prePwStep
     0069                           1- 1759     _00589_DS_:
                                    1- 1760     	.line	795, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA - 1150;
     0069 2182                      1- 1761     	MOVIA	0x82
                                    1- 1762     	BANKSEL	_R_AIN2_DATA
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 03rr                      1- 1763     	ADDAR	_R_AIN2_DATA,F
     006C 21FB                      1- 1764     	MOVIA	0xfb
     006D 0C03                      1- 1765     	BTRSC	STATUS,0
     006E 21FC                      1- 1766     	MOVIA	0xfc
     006F 03rr                      1- 1767     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1768     ;;unsigned compare: left < lit (0x195=405), size=2
                                    1- 1769     	.line	796, "main.c"; 	if(R_AIN2_DATA >= 405)
     0070 2101                      1- 1770     	MOVIA	0x01
     0071 04rr                      1- 1771     	SUBAR	(_R_AIN2_DATA + 1),W
     0072 0903                      1- 1772     	BTRSS	STATUS,2
                                    1- 1773     	MGOTO	_00793_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
     0074 2195                      1- 1774     	MOVIA	0x95
     0075 04rr                      1- 1775     	SUBAR	_R_AIN2_DATA,W
     0076                           1- 1776     _00793_DS_:
     0076 0803                      1- 1777     	BTRSS	STATUS,0
                                    1- 1778     	MGOTO	_00591_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1779     	.line	798, "main.c"; 	pwStep = 7;
     0078 2107                      1- 1780     	MOVIA	0x07
                                    1- 1781     	BANKSEL	_pwStep
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 00rr                      1- 1782     	MOVAR	_pwStep
                                    1- 1783     ;;unsigned compare: left < lit (0x19F=415), size=2
     007B                           1- 1784     _00591_DS_:
                                    1- 1785     	.line	800, "main.c"; 	if(R_AIN2_DATA >= 415)
     007B 2101                      1- 1786     	MOVIA	0x01
                                    1- 1787     	BANKSEL	_R_AIN2_DATA
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 04rr                      1- 1788     	SUBAR	(_R_AIN2_DATA + 1),W
     007E 0903                      1- 1789     	BTRSS	STATUS,2
                                    1- 1790     	MGOTO	_00794_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
     0080 219F                      1- 1791     	MOVIA	0x9f
     0081 04rr                      1- 1792     	SUBAR	_R_AIN2_DATA,W
     0082                           1- 1793     _00794_DS_:
     0082 0803                      1- 1794     	BTRSS	STATUS,0
                                    1- 1795     	MGOTO	_00663_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1796     	.line	802, "main.c"; 	pwStep = 8;
     0084 2108                      1- 1797     	MOVIA	0x08
                                    1- 1798     	BANKSEL	_pwStep
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 00rr                      1- 1799     	MOVAR	_pwStep
                                    1- 1800     	MGOTO	_00664_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1801     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1802     ;;unsigned compare: left >= lit (0x15F=351), size=2
     0088                           1- 1803     _00663_DS_:
                                    1- 1804     	.line	804, "main.c"; 	else if(R_AIN2_DATA > 350)
     0088 2101                      1- 1805     	MOVIA	0x01
                                    1- 1806     	BANKSEL	_R_AIN2_DATA
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 04rr                      1- 1807     	SUBAR	(_R_AIN2_DATA + 1),W
     008B 0903                      1- 1808     	BTRSS	STATUS,2
                                    1- 1809     	MGOTO	_00795_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
     008D 215F                      1- 1810     	MOVIA	0x5f
     008E 04rr                      1- 1811     	SUBAR	_R_AIN2_DATA,W
     008F                           1- 1812     _00795_DS_:
     008F 0803                      1- 1813     	BTRSS	STATUS,0
                                    1- 1814     	MGOTO	_00660_DS_
     0090 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1815     ;;unsigned compare: left < lit (0x6=6), size=1
                                    1- 1816     	.line	807, "main.c"; 	if(pwStep < 6)
     0091 2106                      1- 1817     	MOVIA	0x06
                                    1- 1818     	BANKSEL	_pwStep
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 04rr                      1- 1819     	SUBAR	_pwStep,W
     0094 0C03                      1- 1820     	BTRSC	STATUS,0
                                    1- 1821     	MGOTO	_00598_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1822     	.line	809, "main.c"; 	fullCount = 0;
                                    1- 1823     	BANKSEL	_fullCount
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 02rr                      1- 1824     	CLRR	_fullCount
     0098 02rr                      1- 1825     	CLRR	(_fullCount + 1)
                                    1- 1826     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1827     ;;unsigned compare: left >= lit (0x164=356), size=2
                                    1- 1828     	.line	810, "main.c"; 	if(R_AIN2_DATA > 355)
     0099 2101                      1- 1829     	MOVIA	0x01
                                    1- 1830     	BANKSEL	_R_AIN2_DATA
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 04rr                      1- 1831     	SUBAR	(_R_AIN2_DATA + 1),W
     009C 0903                      1- 1832     	BTRSS	STATUS,2
                                    1- 1833     	MGOTO	_00797_DS_
     009D 3rrr                      3-   63 m1      LGOTO rom_address
     009E 2164                      1- 1834     	MOVIA	0x64
     009F 04rr                      1- 1835     	SUBAR	_R_AIN2_DATA,W
     00A0                           1- 1836     _00797_DS_:
     00A0 0803                      1- 1837     	BTRSS	STATUS,0
                                    1- 1838     	MGOTO	_00599_DS_
     00A1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1839     	.line	811, "main.c"; 	pwStep = 6;
     00A2 2106                      1- 1840     	MOVIA	0x06
                                    1- 1841     	BANKSEL	_pwStep
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 00rr                      1- 1842     	MOVAR	_pwStep
                                    1- 1843     	MGOTO	_00599_DS_
     00A5 3rrr                      3-   63 m1      LGOTO rom_address
     00A6                           1- 1844     _00598_DS_:
                                    1- 1845     	.line	813, "main.c"; 	else if(chrgTime == 0 && R_AIN2_DATA < 396)
                                    1- 1846     	BANKSEL	_chrgTime
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 01rr                      1- 1847     	MOVR	_chrgTime,W
     00A8 11rr                      1- 1848     	IORAR	(_chrgTime + 1),W
     00A9 0903                      1- 1849     	BTRSS	STATUS,2
                                    1- 1850     	MGOTO	_00599_DS_
     00AA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1851     ;;unsigned compare: left < lit (0x18C=396), size=2
     00AB 2101                      1- 1852     	MOVIA	0x01
                                    1- 1853     	BANKSEL	_R_AIN2_DATA
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 04rr                      1- 1854     	SUBAR	(_R_AIN2_DATA + 1),W
     00AE 0903                      1- 1855     	BTRSS	STATUS,2
                                    1- 1856     	MGOTO	_00798_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
     00B0 218C                      1- 1857     	MOVIA	0x8c
     00B1 04rr                      1- 1858     	SUBAR	_R_AIN2_DATA,W
     00B2                           1- 1859     _00798_DS_:
     00B2 0C03                      1- 1860     	BTRSC	STATUS,0
                                    1- 1861     	MGOTO	_00599_DS_
     00B3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1862     	.line	815, "main.c"; 	pwStep = 6;
     00B4 2106                      1- 1863     	MOVIA	0x06
                                    1- 1864     	BANKSEL	_pwStep
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 00rr                      1- 1865     	MOVAR	_pwStep
                                    1- 1866     	.line	816, "main.c"; 	fullCount = 0;
                                    1- 1867     	BANKSEL	_fullCount
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 02rr                      1- 1868     	CLRR	_fullCount
     00B9 02rr                      1- 1869     	CLRR	(_fullCount + 1)
     00BA                           1- 1870     _00599_DS_:
                                    1- 1871     	.line	820, "main.c"; 	if(chrgTime > 0 && R_AIN2_DATA > 395 && chrgTime > 600)
                                    1- 1872     	BANKSEL	_chrgTime
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 01rr                      1- 1873     	MOVR	_chrgTime,W
     00BC 11rr                      1- 1874     	IORAR	(_chrgTime + 1),W
     00BD 0D03                      1- 1875     	BTRSC	STATUS,2
                                    1- 1876     	MGOTO	_00664_DS_
     00BE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1877     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1878     ;;unsigned compare: left >= lit (0x18C=396), size=2
     00BF 2101                      1- 1879     	MOVIA	0x01
                                    1- 1880     	BANKSEL	_R_AIN2_DATA
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 04rr                      1- 1881     	SUBAR	(_R_AIN2_DATA + 1),W
     00C2 0903                      1- 1882     	BTRSS	STATUS,2
                                    1- 1883     	MGOTO	_00799_DS_
     00C3 3rrr                      3-   63 m1      LGOTO rom_address
     00C4 218C                      1- 1884     	MOVIA	0x8c
     00C5 04rr                      1- 1885     	SUBAR	_R_AIN2_DATA,W
     00C6                           1- 1886     _00799_DS_:
     00C6 0803                      1- 1887     	BTRSS	STATUS,0
                                    1- 1888     	MGOTO	_00664_DS_
     00C7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1889     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1890     ;;unsigned compare: left >= lit (0x259=601), size=2
     00C8 2102                      1- 1891     	MOVIA	0x02
                                    1- 1892     	BANKSEL	_chrgTime
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 04rr                      1- 1893     	SUBAR	(_chrgTime + 1),W
     00CB 0903                      1- 1894     	BTRSS	STATUS,2
                                    1- 1895     	MGOTO	_00800_DS_
     00CC 3rrr                      3-   63 m1      LGOTO rom_address
     00CD 2159                      1- 1896     	MOVIA	0x59
     00CE 04rr                      1- 1897     	SUBAR	_chrgTime,W
     00CF                           1- 1898     _00800_DS_:
     00CF 0803                      1- 1899     	BTRSS	STATUS,0
                                    1- 1900     	MGOTO	_00664_DS_
     00D0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1901     	.line	822, "main.c"; 	chrgTime = 600;
     00D1 2158                      1- 1902     	MOVIA	0x58
                                    1- 1903     	BANKSEL	_chrgTime
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 00rr                      1- 1904     	MOVAR	_chrgTime
     00D4 2102                      1- 1905     	MOVIA	0x02
     00D5 00rr                      1- 1906     	MOVAR	(_chrgTime + 1)
                                    1- 1907     	.line	823, "main.c"; 	pwStep = 7;
     00D6 2107                      1- 1908     	MOVIA	0x07
                                    1- 1909     	BANKSEL	_pwStep
     00D7 rrrr                      3-  110 m1      .banksel ram_address
     00D8 00rr                      1- 1910     	MOVAR	_pwStep
                                    1- 1911     	MGOTO	_00664_DS_
     00D9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1912     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1913     ;;unsigned compare: left >= lit (0x146=326), size=2
     00DA                           1- 1914     _00660_DS_:
                                    1- 1915     	.line	826, "main.c"; 	else if(R_AIN2_DATA > 325)
     00DA 2101                      1- 1916     	MOVIA	0x01
                                    1- 1917     	BANKSEL	_R_AIN2_DATA
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 04rr                      1- 1918     	SUBAR	(_R_AIN2_DATA + 1),W
     00DD 0903                      1- 1919     	BTRSS	STATUS,2
                                    1- 1920     	MGOTO	_00801_DS_
     00DE 3rrr                      3-   63 m1      LGOTO rom_address
     00DF 2146                      1- 1921     	MOVIA	0x46
     00E0 04rr                      1- 1922     	SUBAR	_R_AIN2_DATA,W
     00E1                           1- 1923     _00801_DS_:
     00E1 0803                      1- 1924     	BTRSS	STATUS,0
                                    1- 1925     	MGOTO	_00657_DS_
     00E2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1926     	.line	829, "main.c"; 	if(pwStep == 4)
                                    1- 1927     	BANKSEL	_pwStep
     00E3 rrrr                      3-  110 m1      .banksel ram_address
     00E4 01rr                      1- 1928     	MOVR	_pwStep,W
     00E5 2404                      1- 1929     	XORIA	0x04
     00E6 0903                      1- 1930     	BTRSS	STATUS,2
                                    1- 1931     	MGOTO	_00607_DS_
     00E7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1932     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1933     ;;unsigned compare: left >= lit (0x14B=331), size=2
                                    1- 1934     	.line	831, "main.c"; 	if(R_AIN2_DATA > 330)
     00E8 2101                      1- 1935     	MOVIA	0x01
                                    1- 1936     	BANKSEL	_R_AIN2_DATA
     00E9 rrrr                      3-  110 m1      .banksel ram_address
     00EA 04rr                      1- 1937     	SUBAR	(_R_AIN2_DATA + 1),W
     00EB 0903                      1- 1938     	BTRSS	STATUS,2
                                    1- 1939     	MGOTO	_00802_DS_
     00EC 3rrr                      3-   63 m1      LGOTO rom_address
     00ED 214B                      1- 1940     	MOVIA	0x4b
     00EE 04rr                      1- 1941     	SUBAR	_R_AIN2_DATA,W
     00EF                           1- 1942     _00802_DS_:
     00EF 0803                      1- 1943     	BTRSS	STATUS,0
                                    1- 1944     	MGOTO	_00607_DS_
     00F0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1945     	.line	832, "main.c"; 	pwStep = 5;
     00F1 2105                      1- 1946     	MOVIA	0x05
                                    1- 1947     	BANKSEL	_pwStep
     00F2 rrrr                      3-  110 m1      .banksel ram_address
     00F3 00rr                      1- 1948     	MOVAR	_pwStep
                                    1- 1949     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1950     ;;unsigned compare: left >= lit (0x6=6), size=1
     00F4                           1- 1951     _00607_DS_:
                                    1- 1952     	.line	834, "main.c"; 	if(pwStep > 5)
     00F4 2106                      1- 1953     	MOVIA	0x06
                                    1- 1954     	BANKSEL	_pwStep
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 04rr                      1- 1955     	SUBAR	_pwStep,W
     00F7 0803                      1- 1956     	BTRSS	STATUS,0
                                    1- 1957     	MGOTO	_00611_DS_
     00F8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1958     ;;unsigned compare: left < lit (0x16D=365), size=2
                                    1- 1959     	.line	836, "main.c"; 	if(R_AIN2_DATA < 365)
     00F9 2101                      1- 1960     	MOVIA	0x01
                                    1- 1961     	BANKSEL	_R_AIN2_DATA
     00FA rrrr                      3-  110 m1      .banksel ram_address
     00FB 04rr                      1- 1962     	SUBAR	(_R_AIN2_DATA + 1),W
     00FC 0903                      1- 1963     	BTRSS	STATUS,2
                                    1- 1964     	MGOTO	_00804_DS_
     00FD 3rrr                      3-   63 m1      LGOTO rom_address
     00FE 216D                      1- 1965     	MOVIA	0x6d
     00FF 04rr                      1- 1966     	SUBAR	_R_AIN2_DATA,W
     0100                           1- 1967     _00804_DS_:
     0100 0C03                      1- 1968     	BTRSC	STATUS,0
                                    1- 1969     	MGOTO	_00612_DS_
     0101 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1970     	.line	837, "main.c"; 	pwStep = 5;
     0102 2105                      1- 1971     	MOVIA	0x05
                                    1- 1972     	BANKSEL	_pwStep
     0103 rrrr                      3-  110 m1      .banksel ram_address
     0104 00rr                      1- 1973     	MOVAR	_pwStep
                                    1- 1974     	MGOTO	_00612_DS_
     0105 3rrr                      3-   63 m1      LGOTO rom_address
     0106                           1- 1975     _00611_DS_:
                                    1- 1976     	.line	840, "main.c"; 	pwStep = 5;
     0106 2105                      1- 1977     	MOVIA	0x05
                                    1- 1978     	BANKSEL	_pwStep
     0107 rrrr                      3-  110 m1      .banksel ram_address
     0108 00rr                      1- 1979     	MOVAR	_pwStep
     0109                           1- 1980     _00612_DS_:
                                    1- 1981     	.line	841, "main.c"; 	chrgTime = 0;
                                    1- 1982     	BANKSEL	_chrgTime
     0109 rrrr                      3-  110 m1      .banksel ram_address
     010A 02rr                      1- 1983     	CLRR	_chrgTime
     010B 02rr                      1- 1984     	CLRR	(_chrgTime + 1)
                                    1- 1985     	MGOTO	_00664_DS_
     010C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1986     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1987     ;;unsigned compare: left >= lit (0x105=261), size=2
     010D                           1- 1988     _00657_DS_:
                                    1- 1989     	.line	843, "main.c"; 	else if(R_AIN2_DATA > 260)
     010D 2101                      1- 1990     	MOVIA	0x01
                                    1- 1991     	BANKSEL	_R_AIN2_DATA
     010E rrrr                      3-  110 m1      .banksel ram_address
     010F 04rr                      1- 1992     	SUBAR	(_R_AIN2_DATA + 1),W
     0110 0903                      1- 1993     	BTRSS	STATUS,2
                                    1- 1994     	MGOTO	_00805_DS_
     0111 3rrr                      3-   63 m1      LGOTO rom_address
     0112 2105                      1- 1995     	MOVIA	0x05
     0113 04rr                      1- 1996     	SUBAR	_R_AIN2_DATA,W
     0114                           1- 1997     _00805_DS_:
     0114 0803                      1- 1998     	BTRSS	STATUS,0
                                    1- 1999     	MGOTO	_00654_DS_
     0115 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2000     	.line	845, "main.c"; 	if(pwStep == 3)
                                    1- 2001     	BANKSEL	_pwStep
     0116 rrrr                      3-  110 m1      .banksel ram_address
     0117 01rr                      1- 2002     	MOVR	_pwStep,W
     0118 2403                      1- 2003     	XORIA	0x03
     0119 0903                      1- 2004     	BTRSS	STATUS,2
                                    1- 2005     	MGOTO	_00616_DS_
     011A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2006     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2007     ;;unsigned compare: left >= lit (0x10A=266), size=2
                                    1- 2008     	.line	847, "main.c"; 	if(R_AIN2_DATA > 265)
     011B 2101                      1- 2009     	MOVIA	0x01
                                    1- 2010     	BANKSEL	_R_AIN2_DATA
     011C rrrr                      3-  110 m1      .banksel ram_address
     011D 04rr                      1- 2011     	SUBAR	(_R_AIN2_DATA + 1),W
     011E 0903                      1- 2012     	BTRSS	STATUS,2
                                    1- 2013     	MGOTO	_00806_DS_
     011F 3rrr                      3-   63 m1      LGOTO rom_address
     0120 210A                      1- 2014     	MOVIA	0x0a
     0121 04rr                      1- 2015     	SUBAR	_R_AIN2_DATA,W
     0122                           1- 2016     _00806_DS_:
     0122 0803                      1- 2017     	BTRSS	STATUS,0
                                    1- 2018     	MGOTO	_00616_DS_
     0123 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2019     	.line	848, "main.c"; 	pwStep = 4;
     0124 2104                      1- 2020     	MOVIA	0x04
                                    1- 2021     	BANKSEL	_pwStep
     0125 rrrr                      3-  110 m1      .banksel ram_address
     0126 00rr                      1- 2022     	MOVAR	_pwStep
                                    1- 2023     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2024     ;;unsigned compare: left >= lit (0x5=5), size=1
     0127                           1- 2025     _00616_DS_:
                                    1- 2026     	.line	850, "main.c"; 	if(pwStep > 4)
     0127 2105                      1- 2027     	MOVIA	0x05
                                    1- 2028     	BANKSEL	_pwStep
     0128 rrrr                      3-  110 m1      .banksel ram_address
     0129 04rr                      1- 2029     	SUBAR	_pwStep,W
     012A 0803                      1- 2030     	BTRSS	STATUS,0
                                    1- 2031     	MGOTO	_00620_DS_
     012B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2032     ;;unsigned compare: left < lit (0x140=320), size=2
                                    1- 2033     	.line	852, "main.c"; 	if(R_AIN2_DATA < 320)
     012C 2101                      1- 2034     	MOVIA	0x01
                                    1- 2035     	BANKSEL	_R_AIN2_DATA
     012D rrrr                      3-  110 m1      .banksel ram_address
     012E 04rr                      1- 2036     	SUBAR	(_R_AIN2_DATA + 1),W
     012F 0903                      1- 2037     	BTRSS	STATUS,2
                                    1- 2038     	MGOTO	_00808_DS_
     0130 3rrr                      3-   63 m1      LGOTO rom_address
     0131 2140                      1- 2039     	MOVIA	0x40
     0132 04rr                      1- 2040     	SUBAR	_R_AIN2_DATA,W
     0133                           1- 2041     _00808_DS_:
     0133 0C03                      1- 2042     	BTRSC	STATUS,0
                                    1- 2043     	MGOTO	_00621_DS_
     0134 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2044     	.line	853, "main.c"; 	pwStep = 4;
     0135 2104                      1- 2045     	MOVIA	0x04
                                    1- 2046     	BANKSEL	_pwStep
     0136 rrrr                      3-  110 m1      .banksel ram_address
     0137 00rr                      1- 2047     	MOVAR	_pwStep
                                    1- 2048     	MGOTO	_00621_DS_
     0138 3rrr                      3-   63 m1      LGOTO rom_address
     0139                           1- 2049     _00620_DS_:
                                    1- 2050     	.line	856, "main.c"; 	pwStep = 4;
     0139 2104                      1- 2051     	MOVIA	0x04
                                    1- 2052     	BANKSEL	_pwStep
     013A rrrr                      3-  110 m1      .banksel ram_address
     013B 00rr                      1- 2053     	MOVAR	_pwStep
     013C                           1- 2054     _00621_DS_:
                                    1- 2055     	.line	857, "main.c"; 	chrgTime = 0;
                                    1- 2056     	BANKSEL	_chrgTime
     013C rrrr                      3-  110 m1      .banksel ram_address
     013D 02rr                      1- 2057     	CLRR	_chrgTime
     013E 02rr                      1- 2058     	CLRR	(_chrgTime + 1)
                                    1- 2059     	MGOTO	_00664_DS_
     013F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2060     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2061     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0140                           1- 2062     _00654_DS_:
                                    1- 2063     	.line	859, "main.c"; 	else if(R_AIN2_DATA > 200)
     0140 2100                      1- 2064     	MOVIA	0x00
                                    1- 2065     	BANKSEL	_R_AIN2_DATA
     0141 rrrr                      3-  110 m1      .banksel ram_address
     0142 04rr                      1- 2066     	SUBAR	(_R_AIN2_DATA + 1),W
     0143 0903                      1- 2067     	BTRSS	STATUS,2
                                    1- 2068     	MGOTO	_00809_DS_
     0144 3rrr                      3-   63 m1      LGOTO rom_address
     0145 21C9                      1- 2069     	MOVIA	0xc9
     0146 04rr                      1- 2070     	SUBAR	_R_AIN2_DATA,W
     0147                           1- 2071     _00809_DS_:
     0147 0803                      1- 2072     	BTRSS	STATUS,0
                                    1- 2073     	MGOTO	_00651_DS_
     0148 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2074     	.line	861, "main.c"; 	if(pwStep == 2)
                                    1- 2075     	BANKSEL	_pwStep
     0149 rrrr                      3-  110 m1      .banksel ram_address
     014A 01rr                      1- 2076     	MOVR	_pwStep,W
     014B 2402                      1- 2077     	XORIA	0x02
     014C 0903                      1- 2078     	BTRSS	STATUS,2
                                    1- 2079     	MGOTO	_00625_DS_
     014D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2080     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2081     ;;unsigned compare: left >= lit (0xD3=211), size=2
                                    1- 2082     	.line	863, "main.c"; 	if(R_AIN2_DATA > 210)
     014E 2100                      1- 2083     	MOVIA	0x00
                                    1- 2084     	BANKSEL	_R_AIN2_DATA
     014F rrrr                      3-  110 m1      .banksel ram_address
     0150 04rr                      1- 2085     	SUBAR	(_R_AIN2_DATA + 1),W
     0151 0903                      1- 2086     	BTRSS	STATUS,2
                                    1- 2087     	MGOTO	_00810_DS_
     0152 3rrr                      3-   63 m1      LGOTO rom_address
     0153 21D3                      1- 2088     	MOVIA	0xd3
     0154 04rr                      1- 2089     	SUBAR	_R_AIN2_DATA,W
     0155                           1- 2090     _00810_DS_:
     0155 0803                      1- 2091     	BTRSS	STATUS,0
                                    1- 2092     	MGOTO	_00625_DS_
     0156 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2093     	.line	864, "main.c"; 	pwStep = 3;
     0157 2103                      1- 2094     	MOVIA	0x03
                                    1- 2095     	BANKSEL	_pwStep
     0158 rrrr                      3-  110 m1      .banksel ram_address
     0159 00rr                      1- 2096     	MOVAR	_pwStep
                                    1- 2097     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2098     ;;unsigned compare: left >= lit (0x4=4), size=1
     015A                           1- 2099     _00625_DS_:
                                    1- 2100     	.line	866, "main.c"; 	if(pwStep > 3)
     015A 2104                      1- 2101     	MOVIA	0x04
                                    1- 2102     	BANKSEL	_pwStep
     015B rrrr                      3-  110 m1      .banksel ram_address
     015C 04rr                      1- 2103     	SUBAR	_pwStep,W
     015D 0803                      1- 2104     	BTRSS	STATUS,0
                                    1- 2105     	MGOTO	_00629_DS_
     015E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2106     ;;unsigned compare: left < lit (0x104=260), size=2
                                    1- 2107     	.line	868, "main.c"; 	if(R_AIN2_DATA < 260)
     015F 2101                      1- 2108     	MOVIA	0x01
                                    1- 2109     	BANKSEL	_R_AIN2_DATA
     0160 rrrr                      3-  110 m1      .banksel ram_address
     0161 04rr                      1- 2110     	SUBAR	(_R_AIN2_DATA + 1),W
     0162 0903                      1- 2111     	BTRSS	STATUS,2
                                    1- 2112     	MGOTO	_00812_DS_
     0163 3rrr                      3-   63 m1      LGOTO rom_address
     0164 2104                      1- 2113     	MOVIA	0x04
     0165 04rr                      1- 2114     	SUBAR	_R_AIN2_DATA,W
     0166                           1- 2115     _00812_DS_:
     0166 0C03                      1- 2116     	BTRSC	STATUS,0
                                    1- 2117     	MGOTO	_00630_DS_
     0167 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2118     	.line	869, "main.c"; 	pwStep = 3;
     0168 2103                      1- 2119     	MOVIA	0x03
                                    1- 2120     	BANKSEL	_pwStep
     0169 rrrr                      3-  110 m1      .banksel ram_address
     016A 00rr                      1- 2121     	MOVAR	_pwStep
                                    1- 2122     	MGOTO	_00630_DS_
     016B 3rrr                      3-   63 m1      LGOTO rom_address
     016C                           1- 2123     _00629_DS_:
                                    1- 2124     	.line	872, "main.c"; 	pwStep = 3;
     016C 2103                      1- 2125     	MOVIA	0x03
                                    1- 2126     	BANKSEL	_pwStep
     016D rrrr                      3-  110 m1      .banksel ram_address
     016E 00rr                      1- 2127     	MOVAR	_pwStep
     016F                           1- 2128     _00630_DS_:
                                    1- 2129     	.line	873, "main.c"; 	chrgTime = 0;
                                    1- 2130     	BANKSEL	_chrgTime
     016F rrrr                      3-  110 m1      .banksel ram_address
     0170 02rr                      1- 2131     	CLRR	_chrgTime
     0171 02rr                      1- 2132     	CLRR	(_chrgTime + 1)
                                    1- 2133     	MGOTO	_00664_DS_
     0172 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2134     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2135     ;;unsigned compare: left >= lit (0x65=101), size=2
     0173                           1- 2136     _00651_DS_:
                                    1- 2137     	.line	875, "main.c"; 	else if(R_AIN2_DATA > 100)
     0173 2100                      1- 2138     	MOVIA	0x00
                                    1- 2139     	BANKSEL	_R_AIN2_DATA
     0174 rrrr                      3-  110 m1      .banksel ram_address
     0175 04rr                      1- 2140     	SUBAR	(_R_AIN2_DATA + 1),W
     0176 0903                      1- 2141     	BTRSS	STATUS,2
                                    1- 2142     	MGOTO	_00813_DS_
     0177 3rrr                      3-   63 m1      LGOTO rom_address
     0178 2165                      1- 2143     	MOVIA	0x65
     0179 04rr                      1- 2144     	SUBAR	_R_AIN2_DATA,W
     017A                           1- 2145     _00813_DS_:
     017A 0803                      1- 2146     	BTRSS	STATUS,0
                                    1- 2147     	MGOTO	_00648_DS_
     017B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2148     	.line	878, "main.c"; 	if(pwStep == 1)
                                    1- 2149     	BANKSEL	_pwStep
     017C rrrr                      3-  110 m1      .banksel ram_address
     017D 01rr                      1- 2150     	MOVR	_pwStep,W
     017E 2401                      1- 2151     	XORIA	0x01
     017F 0903                      1- 2152     	BTRSS	STATUS,2
                                    1- 2153     	MGOTO	_00634_DS_
     0180 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2154     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2155     ;;unsigned compare: left >= lit (0x6F=111), size=2
                                    1- 2156     	.line	880, "main.c"; 	if(R_AIN2_DATA > 110)
     0181 2100                      1- 2157     	MOVIA	0x00
                                    1- 2158     	BANKSEL	_R_AIN2_DATA
     0182 rrrr                      3-  110 m1      .banksel ram_address
     0183 04rr                      1- 2159     	SUBAR	(_R_AIN2_DATA + 1),W
     0184 0903                      1- 2160     	BTRSS	STATUS,2
                                    1- 2161     	MGOTO	_00814_DS_
     0185 3rrr                      3-   63 m1      LGOTO rom_address
     0186 216F                      1- 2162     	MOVIA	0x6f
     0187 04rr                      1- 2163     	SUBAR	_R_AIN2_DATA,W
     0188                           1- 2164     _00814_DS_:
     0188 0803                      1- 2165     	BTRSS	STATUS,0
                                    1- 2166     	MGOTO	_00634_DS_
     0189 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2167     	.line	881, "main.c"; 	pwStep = 2;
     018A 2102                      1- 2168     	MOVIA	0x02
                                    1- 2169     	BANKSEL	_pwStep
     018B rrrr                      3-  110 m1      .banksel ram_address
     018C 00rr                      1- 2170     	MOVAR	_pwStep
                                    1- 2171     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2172     ;;unsigned compare: left >= lit (0x3=3), size=1
     018D                           1- 2173     _00634_DS_:
                                    1- 2174     	.line	883, "main.c"; 	if(pwStep > 2)
     018D 2103                      1- 2175     	MOVIA	0x03
                                    1- 2176     	BANKSEL	_pwStep
     018E rrrr                      3-  110 m1      .banksel ram_address
     018F 04rr                      1- 2177     	SUBAR	_pwStep,W
     0190 0803                      1- 2178     	BTRSS	STATUS,0
                                    1- 2179     	MGOTO	_00638_DS_
     0191 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2180     ;;unsigned compare: left < lit (0xBE=190), size=2
                                    1- 2181     	.line	885, "main.c"; 	if(R_AIN2_DATA < 190)
     0192 2100                      1- 2182     	MOVIA	0x00
                                    1- 2183     	BANKSEL	_R_AIN2_DATA
     0193 rrrr                      3-  110 m1      .banksel ram_address
     0194 04rr                      1- 2184     	SUBAR	(_R_AIN2_DATA + 1),W
     0195 0903                      1- 2185     	BTRSS	STATUS,2
                                    1- 2186     	MGOTO	_00816_DS_
     0196 3rrr                      3-   63 m1      LGOTO rom_address
     0197 21BE                      1- 2187     	MOVIA	0xbe
     0198 04rr                      1- 2188     	SUBAR	_R_AIN2_DATA,W
     0199                           1- 2189     _00816_DS_:
     0199 0C03                      1- 2190     	BTRSC	STATUS,0
                                    1- 2191     	MGOTO	_00639_DS_
     019A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2192     	.line	886, "main.c"; 	pwStep = 2;
     019B 2102                      1- 2193     	MOVIA	0x02
                                    1- 2194     	BANKSEL	_pwStep
     019C rrrr                      3-  110 m1      .banksel ram_address
     019D 00rr                      1- 2195     	MOVAR	_pwStep
                                    1- 2196     	MGOTO	_00639_DS_
     019E 3rrr                      3-   63 m1      LGOTO rom_address
     019F                           1- 2197     _00638_DS_:
                                    1- 2198     	.line	889, "main.c"; 	pwStep = 2;
     019F 2102                      1- 2199     	MOVIA	0x02
                                    1- 2200     	BANKSEL	_pwStep
     01A0 rrrr                      3-  110 m1      .banksel ram_address
     01A1 00rr                      1- 2201     	MOVAR	_pwStep
     01A2                           1- 2202     _00639_DS_:
                                    1- 2203     	.line	890, "main.c"; 	chrgTime = 0;
                                    1- 2204     	BANKSEL	_chrgTime
     01A2 rrrr                      3-  110 m1      .banksel ram_address
     01A3 02rr                      1- 2205     	CLRR	_chrgTime
     01A4 02rr                      1- 2206     	CLRR	(_chrgTime + 1)
                                    1- 2207     	MGOTO	_00664_DS_
     01A5 3rrr                      3-   63 m1      LGOTO rom_address
     01A6                           1- 2208     _00648_DS_:
                                    1- 2209     	.line	892, "main.c"; 	else  if(R_AIN2_DATA > 0)
                                    1- 2210     	BANKSEL	_R_AIN2_DATA
     01A6 rrrr                      3-  110 m1      .banksel ram_address
     01A7 01rr                      1- 2211     	MOVR	_R_AIN2_DATA,W
     01A8 11rr                      1- 2212     	IORAR	(_R_AIN2_DATA + 1),W
     01A9 0D03                      1- 2213     	BTRSC	STATUS,2
                                    1- 2214     	MGOTO	_00664_DS_
     01AA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2215     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2216     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 2217     	.line	895, "main.c"; 	if(pwStep > 1)
     01AB 2102                      1- 2218     	MOVIA	0x02
                                    1- 2219     	BANKSEL	_pwStep
     01AC rrrr                      3-  110 m1      .banksel ram_address
     01AD 04rr                      1- 2220     	SUBAR	_pwStep,W
     01AE 0803                      1- 2221     	BTRSS	STATUS,0
                                    1- 2222     	MGOTO	_00643_DS_
     01AF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2223     ;;unsigned compare: left < lit (0x5A=90), size=2
                                    1- 2224     	.line	897, "main.c"; 	if(R_AIN2_DATA < 90)
     01B0 2100                      1- 2225     	MOVIA	0x00
                                    1- 2226     	BANKSEL	_R_AIN2_DATA
     01B1 rrrr                      3-  110 m1      .banksel ram_address
     01B2 04rr                      1- 2227     	SUBAR	(_R_AIN2_DATA + 1),W
     01B3 0903                      1- 2228     	BTRSS	STATUS,2
                                    1- 2229     	MGOTO	_00818_DS_
     01B4 3rrr                      3-   63 m1      LGOTO rom_address
     01B5 215A                      1- 2230     	MOVIA	0x5a
     01B6 04rr                      1- 2231     	SUBAR	_R_AIN2_DATA,W
     01B7                           1- 2232     _00818_DS_:
     01B7 0C03                      1- 2233     	BTRSC	STATUS,0
                                    1- 2234     	MGOTO	_00644_DS_
     01B8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2235     	.line	898, "main.c"; 	pwStep = 1;
     01B9 2101                      1- 2236     	MOVIA	0x01
                                    1- 2237     	BANKSEL	_pwStep
     01BA rrrr                      3-  110 m1      .banksel ram_address
     01BB 00rr                      1- 2238     	MOVAR	_pwStep
                                    1- 2239     	MGOTO	_00644_DS_
     01BC 3rrr                      3-   63 m1      LGOTO rom_address
     01BD                           1- 2240     _00643_DS_:
                                    1- 2241     	.line	901, "main.c"; 	pwStep = 1;
     01BD 2101                      1- 2242     	MOVIA	0x01
                                    1- 2243     	BANKSEL	_pwStep
     01BE rrrr                      3-  110 m1      .banksel ram_address
     01BF 00rr                      1- 2244     	MOVAR	_pwStep
     01C0                           1- 2245     _00644_DS_:
                                    1- 2246     	.line	902, "main.c"; 	chrgTime = 0;
                                    1- 2247     	BANKSEL	_chrgTime
     01C0 rrrr                      3-  110 m1      .banksel ram_address
     01C1 02rr                      1- 2248     	CLRR	_chrgTime
     01C2 02rr                      1- 2249     	CLRR	(_chrgTime + 1)
     01C3                           1- 2250     _00664_DS_:
                                    1- 2251     	.line	904, "main.c"; 	if(ledLightTime > 0 && prePwStep > 0)
                                    1- 2252     	BANKSEL	_ledLightTime
     01C3 rrrr                      3-  110 m1      .banksel ram_address
     01C4 01rr                      1- 2253     	MOVR	_ledLightTime,W
     01C5 0D03                      1- 2254     	BTRSC	STATUS,2
                                    1- 2255     	MGOTO	_00668_DS_
     01C6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2256     	BANKSEL	_prePwStep
     01C7 rrrr                      3-  110 m1      .banksel ram_address
     01C8 01rr                      1- 2257     	MOVR	_prePwStep,W
     01C9 0D03                      1- 2258     	BTRSC	STATUS,2
                                    1- 2259     	MGOTO	_00668_DS_
     01CA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2260     	.line	905, "main.c"; 	pwStep = prePwStep;
     01CB 01rr                      1- 2261     	MOVR	_prePwStep,W
                                    1- 2262     	BANKSEL	_pwStep
     01CC rrrr                      3-  110 m1      .banksel ram_address
     01CD 00rr                      1- 2263     	MOVAR	_pwStep
     01CE                           1- 2264     _00668_DS_:
                                    1- 2265     	.line	907, "main.c"; 	}
                                    1- 2266     	RETURN	
     01CE 0010                      3-   40 m1      ret
                                    1- 2267     ; exit point of _checkBatAD
                                    1- 2269     ;***
                                    1- 2270     ;  pBlock Stats: dbName = C
                                    1- 2271     ;***
                                    1- 2272     ;has an exit
                                    1- 2273     ;functions called:
                                    1- 2274     ;   _delay
                                    1- 2275     ;   _delay
                                    1- 2276     ;; Starting pCode block
                                    1- 2277     .segment "code"; module=main, function=_initAD
     0000                           1- 2279     _initAD:
                                    1- 2280     ; 2 exit points
                                    1- 2281     	.line	734, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 2282     	MOVIA	0x84
     0001 00rr                      1- 2283     	MOVAR	_ADMD
                                    1- 2284     	.line	739, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 2285     	CLRR	_ADVREFH
                                    1- 2286     	.line	744, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 2287     	MOVIA	0x10
     0004 00rr                      1- 2288     	MOVAR	_ADR
                                    1- 2289     	.line	746, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 2290     	MOVIA	0x03
     0006 00rr                      1- 2291     	MOVAR	_ADCR
                                    1- 2292     	.line	749, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 2293     	BSR	_ADMDbits,4
                                    1- 2294     	.line	750, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 2295     	MOVIA	0x64
                                    1- 2296     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2297     	.line	753, "main.c"; 	}
                                    1- 2298     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 2299     ; exit point of _initAD
                                    1- 2301     ;***
                                    1- 2302     ;  pBlock Stats: dbName = C
                                    1- 2303     ;***
                                    1- 2304     ;has an exit
                                    1- 2305     ;2 compiler assigned registers:
                                    1- 2306     ;   r0x1032
                                    1- 2307     ;   r0x1033
                                    1- 2308     ;; Starting pCode block
                                    1- 2309     .segment "code"; module=main, function=_delay
                                    1- 2311     ;local variable name mapping:
     0000                           1- 2314     _delay:
                                    1- 2315     ; 2 exit points
                                    1- 2316     	.line	724, "main.c"; 	void delay(u8t time)
                                    1- 2317     	BANKSEL	r0x1032
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2318     	MOVAR	r0x1032
                                    1- 2319     	.line	726, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2320     	BANKSEL	r0x1033
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2321     	CLRR	r0x1033
     0004                           1- 2322     _00567_DS_:
                                    1- 2323     	BANKSEL	r0x1032
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 2324     	MOVR	r0x1032,W
                                    1- 2325     	BANKSEL	r0x1033
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1- 2326     	SUBAR	r0x1033,W
     0008 0C03                      1- 2327     	BTRSC	STATUS,0
                                    1- 2328     	MGOTO	_00569_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2329     	.line	727, "main.c"; 	NOP();
     000A 0000                      1- 2330     	nop
                                    1- 2331     	.line	726, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2332     	BANKSEL	r0x1033
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 2333     	INCR	r0x1033,F
                                    1- 2334     	MGOTO	_00567_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 2335     _00569_DS_:
                                    1- 2336     	.line	728, "main.c"; 	}
                                    1- 2337     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2338     ; exit point of _delay
                                    1- 2340     ;***
                                    1- 2341     ;  pBlock Stats: dbName = C
                                    1- 2342     ;***
                                    1- 2343     ;has an exit
                                    1- 2344     ;functions called:
                                    1- 2345     ;   _pwmStop
                                    1- 2346     ;   _pwm1Stop
                                    1- 2347     ;   _pwm1Init
                                    1- 2348     ;   _pwm1Stop
                                    1- 2349     ;   _pwmStop
                                    1- 2350     ;   _pwm1Stop
                                    1- 2351     ;   _pwm1Init
                                    1- 2352     ;   _pwm1Stop
                                    1- 2353     ;5 compiler assigned registers:
                                    1- 2354     ;   r0x1053
                                    1- 2355     ;   r0x1054
                                    1- 2356     ;   r0x1055
                                    1- 2357     ;   r0x1056
                                    1- 2358     ;   r0x1057
                                    1- 2359     ;; Starting pCode block
                                    1- 2360     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2362     _chrgCtr:
                                    1- 2363     ; 2 exit points
                                    1- 2364     	.line	626, "main.c"; 	if(PORTA & 0x08 || R_AIN3_DATA > 3000)
                                    1- 2365     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Drr                      1- 2366     	BTRSC	_PORTA,3
                                    1- 2367     	MGOTO	_00497_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2368     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2369     ;;unsigned compare: left >= lit (0xBB9=3001), size=2
     0003 210B                      1- 2370     	MOVIA	0x0b
                                    1- 2371     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 04rr                      1- 2372     	SUBAR	(_R_AIN3_DATA + 1),W
     0006 0903                      1- 2373     	BTRSS	STATUS,2
                                    1- 2374     	MGOTO	_00557_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
     0008 21B9                      1- 2375     	MOVIA	0xb9
     0009 04rr                      1- 2376     	SUBAR	_R_AIN3_DATA,W
     000A                           1- 2377     _00557_DS_:
     000A 0803                      1- 2378     	BTRSS	STATUS,0
                                    1- 2379     	MGOTO	_00498_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
     000C                           1- 2380     _00497_DS_:
                                    1- 2381     	.line	629, "main.c"; 	chrgFlag = 1;
                                    1- 2382     	BANKSEL	_Status
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 19rr                      1- 2383     	BSR	_Status,3
                                    1- 2384     	.line	630, "main.c"; 	workStep = 0;
                                    1- 2385     	BANKSEL	_workStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1- 2386     	CLRR	_workStep
                                    1- 2387     	.line	631, "main.c"; 	ledLightTime = 0;
                                    1- 2388     	BANKSEL	_ledLightTime
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 02rr                      1- 2389     	CLRR	_ledLightTime
                                    1- 2390     	.line	632, "main.c"; 	pwmStop();
                                    1- 2391     	MCALL	_pwmStop
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2392     	.line	634, "main.c"; 	if(pwStep == 8)
                                    1- 2393     	BANKSEL	_pwStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 2394     	MOVR	_pwStep,W
     0015 2408                      1- 2395     	XORIA	0x08
     0016 0903                      1- 2396     	BTRSS	STATUS,2
                                    1- 2397     	MGOTO	_00493_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2398     	.line	636, "main.c"; 	chrgStep = 6;
     0018 2106                      1- 2399     	MOVIA	0x06
                                    1- 2400     	BANKSEL	_chrgStep
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 00rr                      1- 2401     	MOVAR	_chrgStep
                                    1- 2402     	.line	638, "main.c"; 	ledStep = 6;
                                    1- 2403     	BANKSEL	_ledStep
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 2404     	MOVAR	_ledStep
                                    1- 2405     	.line	639, "main.c"; 	if(++fullCount >= 200)
                                    1- 2406     	BANKSEL	_fullCount
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 05rr                      1- 2407     	INCR	_fullCount,F
     001F 0D03                      1- 2408     	BTRSC	STATUS,2
     0020 05rr                      1- 2409     	INCR	(_fullCount + 1),F
                                    1- 2410     ;;unsigned compare: left < lit (0xC8=200), size=2
     0021 2100                      1- 2411     	MOVIA	0x00
     0022 04rr                      1- 2412     	SUBAR	(_fullCount + 1),W
     0023 0903                      1- 2413     	BTRSS	STATUS,2
                                    1- 2414     	MGOTO	_00558_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025 21C8                      1- 2415     	MOVIA	0xc8
     0026 04rr                      1- 2416     	SUBAR	_fullCount,W
     0027                           1- 2417     _00558_DS_:
     0027 0803                      1- 2418     	BTRSS	STATUS,0
                                    1- 2419     	MGOTO	_00501_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2420     	.line	641, "main.c"; 	fullCount = 200;
     0029 21C8                      1- 2421     	MOVIA	0xc8
                                    1- 2422     	BANKSEL	_fullCount
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1- 2423     	MOVAR	_fullCount
     002C 02rr                      1- 2424     	CLRR	(_fullCount + 1)
                                    1- 2425     	.line	642, "main.c"; 	pwm1Stop();
                                    1- 2426     	MCALL	_pwm1Stop
     002D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2427     	.line	643, "main.c"; 	PORTB &= 0xF7;
     002E 1Drr                      1- 2428     	BCR	_PORTB,3
                                    1- 2429     	.line	644, "main.c"; 	IOSTB |= 0X08;
     002F 001r                      1- 2430     	IOSTR	_IOSTB
                                    1- 2431     	BANKSEL	r0x1053
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 00rr                      1- 2432     	MOVAR	r0x1053
     0032 19rr                      1- 2433     	BSR	r0x1053,3
     0033 01rr                      1- 2434     	MOVR	r0x1053,W
     0034 000r                      1- 2435     	IOST	_IOSTB
                                    1- 2436     	MGOTO	_00501_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
     0036                           1- 2437     _00493_DS_:
                                    1- 2438     	.line	652, "main.c"; 	IOSTB &= 0xF7;
     0036 001r                      1- 2439     	IOSTR	_IOSTB
                                    1- 2440     	BANKSEL	r0x1053
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 00rr                      1- 2441     	MOVAR	r0x1053
     0039 1Drr                      1- 2442     	BCR	r0x1053,3
     003A 01rr                      1- 2443     	MOVR	r0x1053,W
     003B 000r                      1- 2444     	IOST	_IOSTB
                                    1- 2445     	.line	653, "main.c"; 	fullCount = 0;
                                    1- 2446     	BANKSEL	_fullCount
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 02rr                      1- 2447     	CLRR	_fullCount
     003E 02rr                      1- 2448     	CLRR	(_fullCount + 1)
                                    1- 2449     	.line	654, "main.c"; 	if(count500ms == 0 && pwStep < 7)
                                    1- 2450     	BANKSEL	_count500ms
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 01rr                      1- 2451     	MOVR	_count500ms,W
     0041 0903                      1- 2452     	BTRSS	STATUS,2
                                    1- 2453     	MGOTO	_00466_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2454     ;;unsigned compare: left < lit (0x7=7), size=1
     0043 2107                      1- 2455     	MOVIA	0x07
                                    1- 2456     	BANKSEL	_pwStep
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 04rr                      1- 2457     	SUBAR	_pwStep,W
     0046 0C03                      1- 2458     	BTRSC	STATUS,0
                                    1- 2459     	MGOTO	_00466_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2460     	.line	656, "main.c"; 	if(lockLedStep < pwStep - 1)
     0048 01rr                      1- 2461     	MOVR	_pwStep,W
                                    1- 2462     	BANKSEL	r0x1053
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 00rr                      1- 2463     	MOVAR	r0x1053
                                    1- 2464     	BANKSEL	r0x1054
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 02rr                      1- 2465     	CLRR	r0x1054
     004D 21FF                      1- 2466     	MOVIA	0xff
                                    1- 2467     	BANKSEL	r0x1053
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 03rr                      1- 2468     	ADDAR	r0x1053,F
     0050 0C03                      1- 2469     	BTRSC	STATUS,0
                                    1- 2470     	MGOTO	_00007_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2471     	BANKSEL	r0x1054
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 06rr                      1- 2472     	DECR	r0x1054,F
     0054                           1- 2473     _00007_DS_:
                                    1- 2474     	BANKSEL	_lockLedStep
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 01rr                      1- 2475     	MOVR	_lockLedStep,W
                                    1- 2476     	BANKSEL	r0x1055
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 00rr                      1- 2477     	MOVAR	r0x1055
                                    1- 2478     ;;1	CLRR	r0x1056
     0058 2100                      1- 2479     	MOVIA	0x00
     0059 2580                      1- 2480     	ADDIA	0x80
                                    1- 2481     	BANKSEL	r0x1057
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 00rr                      1- 2482     	MOVAR	r0x1057
                                    1- 2483     	BANKSEL	r0x1054
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 01rr                      1- 2484     	MOVR	r0x1054,W
     005E 2580                      1- 2485     	ADDIA	0x80
                                    1- 2486     	BANKSEL	r0x1057
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 04rr                      1- 2487     	SUBAR	r0x1057,W
     0061 0903                      1- 2488     	BTRSS	STATUS,2
                                    1- 2489     	MGOTO	_00560_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2490     	BANKSEL	r0x1053
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 01rr                      1- 2491     	MOVR	r0x1053,W
                                    1- 2492     	BANKSEL	r0x1055
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 04rr                      1- 2493     	SUBAR	r0x1055,W
     0067                           1- 2494     _00560_DS_:
     0067 0C03                      1- 2495     	BTRSC	STATUS,0
                                    1- 2496     	MGOTO	_00462_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2497     	.line	657, "main.c"; 	lockLedStep = pwStep - 1;
                                    1- 2498     	BANKSEL	_pwStep
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 06rr                      1- 2499     	DECR	_pwStep,W
                                    1- 2500     	BANKSEL	_lockLedStep
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 00rr                      1- 2501     	MOVAR	_lockLedStep
     006D                           1- 2502     _00462_DS_:
                                    1- 2503     	.line	658, "main.c"; 	if(++ledStep > 6)
                                    1- 2504     	BANKSEL	_ledStep
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 05rr                      1- 2505     	INCR	_ledStep,F
                                    1- 2506     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2507     ;;unsigned compare: left >= lit (0x7=7), size=1
     006F 2107                      1- 2508     	MOVIA	0x07
     0070 04rr                      1- 2509     	SUBAR	_ledStep,W
     0071 0803                      1- 2510     	BTRSS	STATUS,0
                                    1- 2511     	MGOTO	_00466_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2512     	.line	659, "main.c"; 	ledStep = lockLedStep;
                                    1- 2513     	BANKSEL	_lockLedStep
     0073 rrrr                      3-  110 m1      .banksel ram_address
     0074 01rr                      1- 2514     	MOVR	_lockLedStep,W
                                    1- 2515     	BANKSEL	_ledStep
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 00rr                      1- 2516     	MOVAR	_ledStep
     0077                           1- 2517     _00466_DS_:
                                    1- 2518     	.line	661, "main.c"; 	if(pwStep == 7)
                                    1- 2519     	BANKSEL	_pwStep
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 01rr                      1- 2520     	MOVR	_pwStep,W
     0079 2407                      1- 2521     	XORIA	0x07
     007A 0903                      1- 2522     	BTRSS	STATUS,2
                                    1- 2523     	MGOTO	_00469_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2524     	.line	663, "main.c"; 	ledStep = 6;	//亮灯不闪了
     007C 2106                      1- 2525     	MOVIA	0x06
                                    1- 2526     	BANKSEL	_ledStep
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 00rr                      1- 2527     	MOVAR	_ledStep
                                    1- 2528     ;;unsigned compare: left < lit (0x2=2), size=1
     007F                           1- 2529     _00469_DS_:
                                    1- 2530     	.line	665, "main.c"; 	if(pwStep < 2)
     007F 2102                      1- 2531     	MOVIA	0x02
                                    1- 2532     	BANKSEL	_pwStep
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 04rr                      1- 2533     	SUBAR	_pwStep,W
     0082 0C03                      1- 2534     	BTRSC	STATUS,0
                                    1- 2535     	MGOTO	_00490_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2536     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2537     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 2538     	.line	667, "main.c"; 	if(chrgStep <= 1)
     0084 2102                      1- 2539     	MOVIA	0x02
                                    1- 2540     	BANKSEL	_chrgStep
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 04rr                      1- 2541     	SUBAR	_chrgStep,W
     0087 0C03                      1- 2542     	BTRSC	STATUS,0
                                    1- 2543     	MGOTO	_00491_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2544     	.line	669, "main.c"; 	PWM1DUTY = 8;
     0089 2108                      1- 2545     	MOVIA	0x08
     008A 00rr                      1- 2546     	SFUN	_PWM1DUTY
                                    1- 2547     	.line	670, "main.c"; 	chrgStep = 1;
     008B 2101                      1- 2548     	MOVIA	0x01
     008C 00rr                      1- 2549     	MOVAR	_chrgStep
                                    1- 2550     	MGOTO	_00491_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2551     ;;unsigned compare: left < lit (0x3=3), size=1
     008E                           1- 2552     _00490_DS_:
                                    1- 2553     	.line	673, "main.c"; 	else if(pwStep < 3)
     008E 2103                      1- 2554     	MOVIA	0x03
                                    1- 2555     	BANKSEL	_pwStep
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 04rr                      1- 2556     	SUBAR	_pwStep,W
     0091 0C03                      1- 2557     	BTRSC	STATUS,0
                                    1- 2558     	MGOTO	_00487_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2559     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2560     ;;unsigned compare: left >= lit (0x3=3), size=1
                                    1- 2561     	.line	675, "main.c"; 	if(chrgStep <= 2)
     0093 2103                      1- 2562     	MOVIA	0x03
                                    1- 2563     	BANKSEL	_chrgStep
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 04rr                      1- 2564     	SUBAR	_chrgStep,W
     0096 0C03                      1- 2565     	BTRSC	STATUS,0
                                    1- 2566     	MGOTO	_00491_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2567     	.line	677, "main.c"; 	chrgStep = 2;
     0098 2102                      1- 2568     	MOVIA	0x02
     0099 00rr                      1- 2569     	MOVAR	_chrgStep
                                    1- 2570     	.line	678, "main.c"; 	PWM1DUTY = 9;
     009A 2109                      1- 2571     	MOVIA	0x09
     009B 00rr                      1- 2572     	SFUN	_PWM1DUTY
                                    1- 2573     	MGOTO	_00491_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2574     ;;unsigned compare: left < lit (0x4=4), size=1
     009D                           1- 2575     _00487_DS_:
                                    1- 2576     	.line	681, "main.c"; 	else if(pwStep < 4)
     009D 2104                      1- 2577     	MOVIA	0x04
                                    1- 2578     	BANKSEL	_pwStep
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 04rr                      1- 2579     	SUBAR	_pwStep,W
     00A0 0C03                      1- 2580     	BTRSC	STATUS,0
                                    1- 2581     	MGOTO	_00484_DS_
     00A1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2582     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2583     ;;unsigned compare: left >= lit (0x4=4), size=1
                                    1- 2584     	.line	683, "main.c"; 	if(chrgStep <= 3)
     00A2 2104                      1- 2585     	MOVIA	0x04
                                    1- 2586     	BANKSEL	_chrgStep
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 04rr                      1- 2587     	SUBAR	_chrgStep,W
     00A5 0C03                      1- 2588     	BTRSC	STATUS,0
                                    1- 2589     	MGOTO	_00491_DS_
     00A6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2590     	.line	685, "main.c"; 	chrgStep = 3;
     00A7 2103                      1- 2591     	MOVIA	0x03
     00A8 00rr                      1- 2592     	MOVAR	_chrgStep
                                    1- 2593     	.line	686, "main.c"; 	PWM1DUTY = 10;
     00A9 210A                      1- 2594     	MOVIA	0x0a
     00AA 00rr                      1- 2595     	SFUN	_PWM1DUTY
                                    1- 2596     	MGOTO	_00491_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2597     ;;unsigned compare: left < lit (0x7=7), size=1
     00AC                           1- 2598     _00484_DS_:
                                    1- 2599     	.line	689, "main.c"; 	else if(pwStep < 7)
     00AC 2107                      1- 2600     	MOVIA	0x07
                                    1- 2601     	BANKSEL	_pwStep
     00AD rrrr                      3-  110 m1      .banksel ram_address
     00AE 04rr                      1- 2602     	SUBAR	_pwStep,W
     00AF 0C03                      1- 2603     	BTRSC	STATUS,0
                                    1- 2604     	MGOTO	_00481_DS_
     00B0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2605     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2606     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 2607     	.line	691, "main.c"; 	if(chrgStep <= 4)
     00B1 2105                      1- 2608     	MOVIA	0x05
                                    1- 2609     	BANKSEL	_chrgStep
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 04rr                      1- 2610     	SUBAR	_chrgStep,W
     00B4 0C03                      1- 2611     	BTRSC	STATUS,0
                                    1- 2612     	MGOTO	_00491_DS_
     00B5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2613     	.line	693, "main.c"; 	chrgStep = 4;
     00B6 2104                      1- 2614     	MOVIA	0x04
     00B7 00rr                      1- 2615     	MOVAR	_chrgStep
                                    1- 2616     	.line	694, "main.c"; 	PWM1DUTY = 11;
     00B8 210B                      1- 2617     	MOVIA	0x0b
     00B9 00rr                      1- 2618     	SFUN	_PWM1DUTY
                                    1- 2619     	MGOTO	_00491_DS_
     00BA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2620     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2621     ;;unsigned compare: left >= lit (0x6=6), size=1
     00BB                           1- 2622     _00481_DS_:
                                    1- 2623     	.line	699, "main.c"; 	if(chrgStep <= 5)
     00BB 2106                      1- 2624     	MOVIA	0x06
                                    1- 2625     	BANKSEL	_chrgStep
     00BC rrrr                      3-  110 m1      .banksel ram_address
     00BD 04rr                      1- 2626     	SUBAR	_chrgStep,W
     00BE 0C03                      1- 2627     	BTRSC	STATUS,0
                                    1- 2628     	MGOTO	_00491_DS_
     00BF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2629     	.line	701, "main.c"; 	PWM1DUTY = 12;
     00C0 210C                      1- 2630     	MOVIA	0x0c
     00C1 00rr                      1- 2631     	SFUN	_PWM1DUTY
                                    1- 2632     	.line	702, "main.c"; 	chrgStep = 5;
     00C2 2105                      1- 2633     	MOVIA	0x05
     00C3 00rr                      1- 2634     	MOVAR	_chrgStep
     00C4                           1- 2635     _00491_DS_:
                                    1- 2636     	.line	705, "main.c"; 	pwm1Init();
                                    1- 2637     	MCALL	_pwm1Init
     00C4 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2638     	MGOTO	_00501_DS_
     00C5 3rrr                      3-   63 m1      LGOTO rom_address
     00C6                           1- 2639     _00498_DS_:
                                    1- 2640     	.line	711, "main.c"; 	chrgStep = 0;
                                    1- 2641     	BANKSEL	_chrgStep
     00C6 rrrr                      3-  110 m1      .banksel ram_address
     00C7 02rr                      1- 2642     	CLRR	_chrgStep
                                    1- 2643     	.line	712, "main.c"; 	lockLedStep = 0;
                                    1- 2644     	BANKSEL	_lockLedStep
     00C8 rrrr                      3-  110 m1      .banksel ram_address
     00C9 02rr                      1- 2645     	CLRR	_lockLedStep
                                    1- 2646     	.line	713, "main.c"; 	chrgTime = 0;
                                    1- 2647     	BANKSEL	_chrgTime
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 02rr                      1- 2648     	CLRR	_chrgTime
     00CC 02rr                      1- 2649     	CLRR	(_chrgTime + 1)
                                    1- 2650     	.line	714, "main.c"; 	pwm1Stop();
                                    1- 2651     	MCALL	_pwm1Stop
     00CD 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2652     	.line	715, "main.c"; 	if(workStep == 0)
                                    1- 2653     	BANKSEL	_workStep
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 01rr                      1- 2654     	MOVR	_workStep,W
     00D0 0903                      1- 2655     	BTRSS	STATUS,2
                                    1- 2656     	MGOTO	_00008_DS_
     00D1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2657     	.line	716, "main.c"; 	ledStep = 0;
                                    1- 2658     	BANKSEL	_ledStep
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 02rr                      1- 2659     	CLRR	_ledStep
     00D4                           1- 2660     _00008_DS_:
                                    1- 2661     	.line	717, "main.c"; 	chrgFlag = 0;
                                    1- 2662     	BANKSEL	_Status
     00D4 rrrr                      3-  110 m1      .banksel ram_address
     00D5 1Drr                      1- 2663     	BCR	_Status,3
                                    1- 2664     	.line	718, "main.c"; 	chrgTime = 0;	//重置充电计数
                                    1- 2665     	BANKSEL	_chrgTime
     00D6 rrrr                      3-  110 m1      .banksel ram_address
     00D7 02rr                      1- 2666     	CLRR	_chrgTime
     00D8 02rr                      1- 2667     	CLRR	(_chrgTime + 1)
     00D9                           1- 2668     _00501_DS_:
                                    1- 2669     	.line	721, "main.c"; 	}
                                    1- 2670     	RETURN	
     00D9 0010                      3-   40 m1      ret
                                    1- 2671     ; exit point of _chrgCtr
                                    1- 2673     ;***
                                    1- 2674     ;  pBlock Stats: dbName = C
                                    1- 2675     ;***
                                    1- 2676     ;has an exit
                                    1- 2677     ;1 compiler assigned register :
                                    1- 2678     ;   r0x1058
                                    1- 2679     ;; Starting pCode block
                                    1- 2680     .segment "code"; module=main, function=_keyRead
                                    1- 2682     ;local variable name mapping:
     0000                           1- 2684     _keyRead:
                                    1- 2685     ; 2 exit points
                                    1- 2686     	.line	589, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2687     	BANKSEL	r0x1058
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2688     	MOVAR	r0x1058
                                    1- 2689     	.line	591, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2690     	MOVR	r0x1058,W
     0003 0D03                      1- 2691     	BTRSC	STATUS,2
                                    1- 2692     	MGOTO	_00452_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2693     	.line	593, "main.c"; 	keyCount++;
                                    1- 2694     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2695     	INCR	_keyCount,F
                                    1- 2696     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 2697     	.line	594, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 2698     	MOVIA	0x64
     0008 04rr                      1- 2699     	SUBAR	_keyCount,W
     0009 0803                      1- 2700     	BTRSS	STATUS,0
                                    1- 2701     	MGOTO	_00453_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2702     	.line	596, "main.c"; 	keyCount = 100;
     000B 2164                      1- 2703     	MOVIA	0x64
     000C 00rr                      1- 2704     	MOVAR	_keyCount
                                    1- 2705     	.line	597, "main.c"; 	if(!longPressFlag)
                                    1- 2706     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Crr                      1- 2707     	BTRSC	_Status,1
                                    1- 2708     	MGOTO	_00453_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2709     	.line	599, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 2710     	BSR	_Status,1
                                    1- 2711     	.line	600, "main.c"; 	return 2;
     0011 2102                      1- 2712     	MOVIA	0x02
                                    1- 2713     	MGOTO	_00454_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2714     ;;unsigned compare: left < lit (0x64=100), size=1
     0013                           1- 2715     _00452_DS_:
                                    1- 2716     	.line	606, "main.c"; 	if(keyCount >= 100)
     0013 2164                      1- 2717     	MOVIA	0x64
                                    1- 2718     	BANKSEL	_keyCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 2719     	SUBAR	_keyCount,W
     0016 0803                      1- 2720     	BTRSS	STATUS,0
                                    1- 2721     	MGOTO	_00449_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2722     	.line	608, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 2723     	CLRR	_keyCount
                                    1- 2724     	.line	609, "main.c"; 	longPressFlag = 0;
                                    1- 2725     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Crr                      1- 2726     	BCR	_Status,1
                                    1- 2727     	.line	610, "main.c"; 	return	0;
     001B 2100                      1- 2728     	MOVIA	0x00
                                    1- 2729     	MGOTO	_00454_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2730     ;;unsigned compare: left < lit (0x4=4), size=1
     001D                           1- 2731     _00449_DS_:
                                    1- 2732     	.line	612, "main.c"; 	else if(keyCount >= 4)
     001D 2104                      1- 2733     	MOVIA	0x04
                                    1- 2734     	BANKSEL	_keyCount
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 2735     	SUBAR	_keyCount,W
     0020 0803                      1- 2736     	BTRSS	STATUS,0
                                    1- 2737     	MGOTO	_00450_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2738     	.line	614, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 2739     	CLRR	_keyCount
                                    1- 2740     	.line	615, "main.c"; 	return	1;
     0023 2101                      1- 2741     	MOVIA	0x01
                                    1- 2742     	MGOTO	_00454_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 2743     _00450_DS_:
                                    1- 2744     	.line	617, "main.c"; 	keyCount = 0;
                                    1- 2745     	BANKSEL	_keyCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 2746     	CLRR	_keyCount
     0027                           1- 2747     _00453_DS_:
                                    1- 2748     	.line	619, "main.c"; 	return 0;
     0027 2100                      1- 2749     	MOVIA	0x00
     0028                           1- 2750     _00454_DS_:
                                    1- 2751     	.line	620, "main.c"; 	}
                                    1- 2752     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 2753     ; exit point of _keyRead
                                    1- 2755     ;***
                                    1- 2756     ;  pBlock Stats: dbName = C
                                    1- 2757     ;***
                                    1- 2758     ;has an exit
                                    1- 2759     ;functions called:
                                    1- 2760     ;   _LedInput
                                    1- 2761     ;   _pwmStop
                                    1- 2762     ;   _pwm1Stop
                                    1- 2763     ;   _LedInput
                                    1- 2764     ;   _pwmStop
                                    1- 2765     ;   _pwm1Stop
                                    1- 2766     ;; Starting pCode block
                                    1- 2767     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2769     _gotoSleep:
                                    1- 2770     ; 2 exit points
                                    1- 2771     	.line	552, "main.c"; 	LedInput();
                                    1- 2772     	MCALL	_LedInput
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2773     	.line	553, "main.c"; 	sleepTime = 0;
                                    1- 2774     	BANKSEL	_sleepTime
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 02rr                      1- 2775     	CLRR	_sleepTime
     0003 02rr                      1- 2776     	CLRR	(_sleepTime + 1)
                                    1- 2777     	.line	555, "main.c"; 	pwmStop();
                                    1- 2778     	MCALL	_pwmStop
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2779     	.line	556, "main.c"; 	pwm1Stop();
                                    1- 2780     	MCALL	_pwm1Stop
     0005 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2781     	.line	557, "main.c"; 	IOSTA = 0xC8;
     0006 21C8                      1- 2782     	MOVIA	0xc8
     0007 000r                      1- 2783     	IOST	_IOSTA
                                    1- 2784     	.line	558, "main.c"; 	PORTA = 0x46;
     0008 2146                      1- 2785     	MOVIA	0x46
                                    1- 2786     	BANKSEL	_PORTA
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 00rr                      1- 2787     	MOVAR	_PORTA
                                    1- 2788     	.line	559, "main.c"; 	APHCON = 0x3F;
     000B 213F                      1- 2789     	MOVIA	0x3f
     000C 000r                      1- 2790     	IOST	_APHCON
                                    1- 2791     	.line	560, "main.c"; 	PORTB = 0x00;
     000D 02rr                      1- 2792     	CLRR	_PORTB
                                    1- 2793     	.line	561, "main.c"; 	workStep = 0;
                                    1- 2794     	BANKSEL	_workStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1- 2795     	CLRR	_workStep
                                    1- 2796     	.line	562, "main.c"; 	AWUCON = 0x88;
     0010 2188                      1- 2797     	MOVIA	0x88
     0011 00rr                      1- 2798     	MOVAR	_AWUCON
                                    1- 2799     	.line	563, "main.c"; 	BWUCON = 0x00;
     0012 02rr                      1- 2800     	CLRR	_BWUCON
                                    1- 2801     	.line	564, "main.c"; 	fgPRD = 0;
                                    1- 2802     	BANKSEL	_fgPRD
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 02rr                      1- 2803     	CLRR	_fgPRD
     0015 02rr                      1- 2804     	CLRR	(_fgPRD + 1)
                                    1- 2805     	.line	565, "main.c"; 	fgCount = 0;
                                    1- 2806     	BANKSEL	_fgCount
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 02rr                      1- 2807     	CLRR	_fgCount
     0018 02rr                      1- 2808     	CLRR	(_fgCount + 1)
                                    1- 2809     	.line	566, "main.c"; 	redLedFlag = 0;
                                    1- 2810     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Drr                      1- 2811     	BCR	_Status,2
                                    1- 2812     	.line	569, "main.c"; 	INTE =  C_INT_PABKey;
     001B 2102                      1- 2813     	MOVIA	0x02
     001C 00rr                      1- 2814     	MOVAR	_INTE
                                    1- 2815     	.line	570, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     001D 2118                      1- 2816     	MOVIA	0x18
     001E 00rr                      1- 2817     	MOVAR	_PCON
                                    1- 2818     	.line	571, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     001F 02rr                      1- 2819     	CLRR	_INTF
                                    1- 2820     	.line	572, "main.c"; 	CLRWDT();
     0020 0002                      1- 2821     	clrwdt
                                    1- 2822     	.line	573, "main.c"; 	ENI();
     0021 0004                      1- 2823     	ENI
                                    1- 2824     	.line	574, "main.c"; 	SLEEP();
     0022 0001                      1- 2825     	sleep
                                    1- 2826     	.line	575, "main.c"; 	AWUCON = 0x00;
     0023 02rr                      1- 2827     	CLRR	_AWUCON
                                    1- 2828     	.line	576, "main.c"; 	IOSTA = C_PA7_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0024 21BE                      1- 2829     	MOVIA	0xbe
     0025 000r                      1- 2830     	IOST	_IOSTA
                                    1- 2831     	.line	577, "main.c"; 	IOSTB = 0x00;
     0026 0200                      1- 2832     	CLRA	
     0027 000r                      1- 2833     	IOST	_IOSTB
                                    1- 2834     	.line	578, "main.c"; 	PORTA = 0x00;
                                    1- 2835     	BANKSEL	_PORTA
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 02rr                      1- 2836     	CLRR	_PORTA
                                    1- 2837     	.line	579, "main.c"; 	APHCON = 0x7F;
     002A 217F                      1- 2838     	MOVIA	0x7f
     002B 000r                      1- 2839     	IOST	_APHCON
                                    1- 2840     	.line	580, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     002C 2101                      1- 2841     	MOVIA	0x01
     002D 00rr                      1- 2842     	MOVAR	_INTE
                                    1- 2843     	.line	581, "main.c"; 	INTF = 0;
     002E 02rr                      1- 2844     	CLRR	_INTF
                                    1- 2845     	.line	583, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     002F 21B8                      1- 2846     	MOVIA	0xb8
     0030 00rr                      1- 2847     	MOVAR	_PCON
                                    1- 2848     	.line	586, "main.c"; 	}
                                    1- 2849     	RETURN	
     0031 0010                      3-   40 m1      ret
                                    1- 2850     ; exit point of _gotoSleep
                                    1- 2852     ;***
                                    1- 2853     ;  pBlock Stats: dbName = C
                                    1- 2854     ;***
                                    1- 2855     ;has an exit
                                    1- 2856     ;; Starting pCode block
                                    1- 2857     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2859     _pwmStop:
                                    1- 2860     ; 2 exit points
                                    1- 2861     	.line	544, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2862     	CLRA	
     0001 00rr                      1- 2863     	SFUN	_T2CR1
                                    1- 2864     	.line	545, "main.c"; 	}
                                    1- 2865     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2866     ; exit point of _pwmStop
                                    1- 2868     ;***
                                    1- 2869     ;  pBlock Stats: dbName = C
                                    1- 2870     ;***
                                    1- 2871     ;has an exit
                                    1- 2872     ;1 compiler assigned register :
                                    1- 2873     ;   r0x105A
                                    1- 2874     ;; Starting pCode block
                                    1- 2875     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2877     _pwmInit:
                                    1- 2878     ; 2 exit points
                                    1- 2879     	.line	532, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2880     	SFUNR	_T2CR1
                                    1- 2881     	BANKSEL	r0x105A
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2882     	MOVAR	r0x105A
     0003 0Frr                      1- 2883     	BTRSC	r0x105A,7
                                    1- 2884     	.line	533, "main.c"; 	return;
                                    1- 2885     	MGOTO	_00429_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2886     	.line	534, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2887     	CLRR	_TMRH
                                    1- 2888     	.line	535, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 2889     	MOVIA	0x64
     0007 00rr                      1- 2890     	SFUN	_TMR2
                                    1- 2891     	.line	538, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2101                      1- 2892     	MOVIA	0x01
     0009 00rr                      1- 2893     	SFUN	_T2CR2
                                    1- 2894     	.line	539, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2895     	MOVIA	0x83
     000B 00rr                      1- 2896     	SFUN	_T2CR1
     000C                           1- 2897     _00429_DS_:
                                    1- 2898     	.line	540, "main.c"; 	}
                                    1- 2899     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2900     ; exit point of _pwmInit
                                    1- 2902     ;***
                                    1- 2903     ;  pBlock Stats: dbName = C
                                    1- 2904     ;***
                                    1- 2905     ;has an exit
                                    1- 2906     ;; Starting pCode block
                                    1- 2907     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2909     _pwm1Stop:
                                    1- 2910     ; 2 exit points
                                    1- 2911     	.line	525, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2912     	CLRA	
     0001 00rr                      1- 2913     	SFUN	_T1CR1
                                    1- 2914     	.line	526, "main.c"; 	}
                                    1- 2915     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2916     ; exit point of _pwm1Stop
                                    1- 2918     ;***
                                    1- 2919     ;  pBlock Stats: dbName = C
                                    1- 2920     ;***
                                    1- 2921     ;has an exit
                                    1- 2922     ;1 compiler assigned register :
                                    1- 2923     ;   r0x1052
                                    1- 2924     ;; Starting pCode block
                                    1- 2925     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2927     _pwm1Init:
                                    1- 2928     ; 2 exit points
                                    1- 2929     	.line	513, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2930     	SFUNR	_T1CR1
                                    1- 2931     	BANKSEL	r0x1052
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2932     	MOVAR	r0x1052
     0003 0Frr                      1- 2933     	BTRSC	r0x1052,7
                                    1- 2934     	.line	514, "main.c"; 	return;
                                    1- 2935     	MGOTO	_00418_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2936     	.line	515, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2937     	CLRR	_TMRH
                                    1- 2938     	.line	516, "main.c"; 	TMR1 = 24;							//频率为110K
     0006 2118                      1- 2939     	MOVIA	0x18
     0007 00rr                      1- 2940     	SFUN	_TMR1
                                    1- 2941     	.line	519, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2942     	CLRA	
     0009 00rr                      1- 2943     	SFUN	_T1CR2
                                    1- 2944     	.line	520, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2945     	MOVIA	0x83
     000B 00rr                      1- 2946     	SFUN	_T1CR1
     000C                           1- 2947     _00418_DS_:
                                    1- 2948     	.line	521, "main.c"; 	}
                                    1- 2949     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2950     ; exit point of _pwm1Init
                                    1- 2952     ;***
                                    1- 2953     ;  pBlock Stats: dbName = C
                                    1- 2954     ;***
                                    1- 2955     ;has an exit
                                    1- 2956     ;functions called:
                                    1- 2957     ;   _delay
                                    1- 2958     ;   _LedInput
                                    1- 2959     ;   _delay
                                    1- 2960     ;   _LedInput
                                    1- 2961     ;1 compiler assigned register :
                                    1- 2962     ;   r0x105B
                                    1- 2963     ;; Starting pCode block
                                    1- 2964     .segment "code"; module=main, function=_LED6ON
     0000                           1- 2966     _LED6ON:
                                    1- 2967     ; 2 exit points
                                    1- 2968     	.line	503, "main.c"; 	L2OUT;
     0000 001r                      1- 2969     	IOSTR	_IOSTA
                                    1- 2970     	BANKSEL	r0x105B
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2971     	MOVAR	r0x105B
     0003 1Crr                      1- 2972     	BCR	r0x105B,0
     0004 01rr                      1- 2973     	MOVR	r0x105B,W
     0005 000r                      1- 2974     	IOST	_IOSTA
                                    1- 2975     	.line	504, "main.c"; 	L1OUT;
     0006 001r                      1- 2976     	IOSTR	_IOSTB
     0007 00rr                      1- 2977     	MOVAR	r0x105B
     0008 1Crr                      1- 2978     	BCR	r0x105B,1
     0009 01rr                      1- 2979     	MOVR	r0x105B,W
     000A 000r                      1- 2980     	IOST	_IOSTB
                                    1- 2981     	.line	505, "main.c"; 	L1H;
     000B 18rr                      1- 2982     	BSR	_PORTB,1
                                    1- 2983     	.line	506, "main.c"; 	L2L;
                                    1- 2984     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Crr                      1- 2985     	BCR	_PORTA,0
                                    1- 2986     	.line	507, "main.c"; 	delay(100);
     000E 2164                      1- 2987     	MOVIA	0x64
                                    1- 2988     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2989     	.line	508, "main.c"; 	LedInput();
                                    1- 2990     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2991     	.line	509, "main.c"; 	}
                                    1- 2992     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2993     ; exit point of _LED6ON
                                    1- 2995     ;***
                                    1- 2996     ;  pBlock Stats: dbName = C
                                    1- 2997     ;***
                                    1- 2998     ;has an exit
                                    1- 2999     ;functions called:
                                    1- 3000     ;   _delay
                                    1- 3001     ;   _LedInput
                                    1- 3002     ;   _delay
                                    1- 3003     ;   _LedInput
                                    1- 3004     ;1 compiler assigned register :
                                    1- 3005     ;   r0x105C
                                    1- 3006     ;; Starting pCode block
                                    1- 3007     .segment "code"; module=main, function=_LED5ON
     0000                           1- 3009     _LED5ON:
                                    1- 3010     ; 2 exit points
                                    1- 3011     	.line	492, "main.c"; 	L2OUT;
     0000 001r                      1- 3012     	IOSTR	_IOSTA
                                    1- 3013     	BANKSEL	r0x105C
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3014     	MOVAR	r0x105C
     0003 1Crr                      1- 3015     	BCR	r0x105C,0
     0004 01rr                      1- 3016     	MOVR	r0x105C,W
     0005 000r                      1- 3017     	IOST	_IOSTA
                                    1- 3018     	.line	493, "main.c"; 	L1OUT;
     0006 001r                      1- 3019     	IOSTR	_IOSTB
     0007 00rr                      1- 3020     	MOVAR	r0x105C
     0008 1Crr                      1- 3021     	BCR	r0x105C,1
     0009 01rr                      1- 3022     	MOVR	r0x105C,W
     000A 000r                      1- 3023     	IOST	_IOSTB
                                    1- 3024     	.line	494, "main.c"; 	L2H;
                                    1- 3025     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 18rr                      1- 3026     	BSR	_PORTA,0
                                    1- 3027     	.line	495, "main.c"; 	L1L;
     000D 1Crr                      1- 3028     	BCR	_PORTB,1
                                    1- 3029     	.line	496, "main.c"; 	delay(100);
     000E 2164                      1- 3030     	MOVIA	0x64
                                    1- 3031     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3032     	.line	497, "main.c"; 	LedInput();
                                    1- 3033     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3034     	.line	498, "main.c"; 	}
                                    1- 3035     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3036     ; exit point of _LED5ON
                                    1- 3038     ;***
                                    1- 3039     ;  pBlock Stats: dbName = C
                                    1- 3040     ;***
                                    1- 3041     ;has an exit
                                    1- 3042     ;functions called:
                                    1- 3043     ;   _delay
                                    1- 3044     ;   _LedInput
                                    1- 3045     ;   _delay
                                    1- 3046     ;   _LedInput
                                    1- 3047     ;1 compiler assigned register :
                                    1- 3048     ;   r0x105D
                                    1- 3049     ;; Starting pCode block
                                    1- 3050     .segment "code"; module=main, function=_LED4ON
     0000                           1- 3052     _LED4ON:
                                    1- 3053     ; 2 exit points
                                    1- 3054     	.line	482, "main.c"; 	L3OUT;
     0000 001r                      1- 3055     	IOSTR	_IOSTB
                                    1- 3056     	BANKSEL	r0x105D
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3057     	MOVAR	r0x105D
     0003 1Crr                      1- 3058     	BCR	r0x105D,0
     0004 01rr                      1- 3059     	MOVR	r0x105D,W
     0005 000r                      1- 3060     	IOST	_IOSTB
                                    1- 3061     	.line	483, "main.c"; 	L2OUT;
     0006 001r                      1- 3062     	IOSTR	_IOSTA
     0007 00rr                      1- 3063     	MOVAR	r0x105D
     0008 1Crr                      1- 3064     	BCR	r0x105D,0
     0009 01rr                      1- 3065     	MOVR	r0x105D,W
     000A 000r                      1- 3066     	IOST	_IOSTA
                                    1- 3067     	.line	484, "main.c"; 	L3H;
     000B 18rr                      1- 3068     	BSR	_PORTB,0
                                    1- 3069     	.line	485, "main.c"; 	L2L;
                                    1- 3070     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Crr                      1- 3071     	BCR	_PORTA,0
                                    1- 3072     	.line	486, "main.c"; 	delay(100);
     000E 2164                      1- 3073     	MOVIA	0x64
                                    1- 3074     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3075     	.line	487, "main.c"; 	LedInput();
                                    1- 3076     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3077     	.line	488, "main.c"; 	}
                                    1- 3078     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3079     ; exit point of _LED4ON
                                    1- 3081     ;***
                                    1- 3082     ;  pBlock Stats: dbName = C
                                    1- 3083     ;***
                                    1- 3084     ;has an exit
                                    1- 3085     ;functions called:
                                    1- 3086     ;   _delay
                                    1- 3087     ;   _LedInput
                                    1- 3088     ;   _delay
                                    1- 3089     ;   _LedInput
                                    1- 3090     ;1 compiler assigned register :
                                    1- 3091     ;   r0x105E
                                    1- 3092     ;; Starting pCode block
                                    1- 3093     .segment "code"; module=main, function=_LED3ON
     0000                           1- 3095     _LED3ON:
                                    1- 3096     ; 2 exit points
                                    1- 3097     	.line	472, "main.c"; 	L3OUT;
     0000 001r                      1- 3098     	IOSTR	_IOSTB
                                    1- 3099     	BANKSEL	r0x105E
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3100     	MOVAR	r0x105E
     0003 1Crr                      1- 3101     	BCR	r0x105E,0
     0004 01rr                      1- 3102     	MOVR	r0x105E,W
     0005 000r                      1- 3103     	IOST	_IOSTB
                                    1- 3104     	.line	473, "main.c"; 	L1OUT;
     0006 001r                      1- 3105     	IOSTR	_IOSTB
     0007 00rr                      1- 3106     	MOVAR	r0x105E
     0008 1Crr                      1- 3107     	BCR	r0x105E,1
     0009 01rr                      1- 3108     	MOVR	r0x105E,W
     000A 000r                      1- 3109     	IOST	_IOSTB
                                    1- 3110     	.line	474, "main.c"; 	L1H;
     000B 18rr                      1- 3111     	BSR	_PORTB,1
                                    1- 3112     	.line	475, "main.c"; 	L3L;
     000C 1Crr                      1- 3113     	BCR	_PORTB,0
                                    1- 3114     	.line	476, "main.c"; 	delay(100);
     000D 2164                      1- 3115     	MOVIA	0x64
                                    1- 3116     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3117     	.line	477, "main.c"; 	LedInput();
                                    1- 3118     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3119     	.line	478, "main.c"; 	}
                                    1- 3120     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3121     ; exit point of _LED3ON
                                    1- 3123     ;***
                                    1- 3124     ;  pBlock Stats: dbName = C
                                    1- 3125     ;***
                                    1- 3126     ;has an exit
                                    1- 3127     ;functions called:
                                    1- 3128     ;   _delay
                                    1- 3129     ;   _LedInput
                                    1- 3130     ;   _delay
                                    1- 3131     ;   _LedInput
                                    1- 3132     ;1 compiler assigned register :
                                    1- 3133     ;   r0x105F
                                    1- 3134     ;; Starting pCode block
                                    1- 3135     .segment "code"; module=main, function=_LED2ON
     0000                           1- 3137     _LED2ON:
                                    1- 3138     ; 2 exit points
                                    1- 3139     	.line	462, "main.c"; 	L2OUT;
     0000 001r                      1- 3140     	IOSTR	_IOSTA
                                    1- 3141     	BANKSEL	r0x105F
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3142     	MOVAR	r0x105F
     0003 1Crr                      1- 3143     	BCR	r0x105F,0
     0004 01rr                      1- 3144     	MOVR	r0x105F,W
     0005 000r                      1- 3145     	IOST	_IOSTA
                                    1- 3146     	.line	463, "main.c"; 	L3OUT;
     0006 001r                      1- 3147     	IOSTR	_IOSTB
     0007 00rr                      1- 3148     	MOVAR	r0x105F
     0008 1Crr                      1- 3149     	BCR	r0x105F,0
     0009 01rr                      1- 3150     	MOVR	r0x105F,W
     000A 000r                      1- 3151     	IOST	_IOSTB
                                    1- 3152     	.line	464, "main.c"; 	L2H;
                                    1- 3153     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 18rr                      1- 3154     	BSR	_PORTA,0
                                    1- 3155     	.line	465, "main.c"; 	L3L;
     000D 1Crr                      1- 3156     	BCR	_PORTB,0
                                    1- 3157     	.line	466, "main.c"; 	delay(100);
     000E 2164                      1- 3158     	MOVIA	0x64
                                    1- 3159     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3160     	.line	467, "main.c"; 	LedInput();
                                    1- 3161     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3162     	.line	468, "main.c"; 	}
                                    1- 3163     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3164     ; exit point of _LED2ON
                                    1- 3166     ;***
                                    1- 3167     ;  pBlock Stats: dbName = C
                                    1- 3168     ;***
                                    1- 3169     ;has an exit
                                    1- 3170     ;functions called:
                                    1- 3171     ;   _delay
                                    1- 3172     ;   _LedInput
                                    1- 3173     ;   _delay
                                    1- 3174     ;   _LedInput
                                    1- 3175     ;1 compiler assigned register :
                                    1- 3176     ;   r0x1060
                                    1- 3177     ;; Starting pCode block
                                    1- 3178     .segment "code"; module=main, function=_LED1ON
     0000                           1- 3180     _LED1ON:
                                    1- 3181     ; 2 exit points
                                    1- 3182     	.line	452, "main.c"; 	L3OUT;
     0000 001r                      1- 3183     	IOSTR	_IOSTB
                                    1- 3184     	BANKSEL	r0x1060
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3185     	MOVAR	r0x1060
     0003 1Crr                      1- 3186     	BCR	r0x1060,0
     0004 01rr                      1- 3187     	MOVR	r0x1060,W
     0005 000r                      1- 3188     	IOST	_IOSTB
                                    1- 3189     	.line	453, "main.c"; 	L1OUT;
     0006 001r                      1- 3190     	IOSTR	_IOSTB
     0007 00rr                      1- 3191     	MOVAR	r0x1060
     0008 1Crr                      1- 3192     	BCR	r0x1060,1
     0009 01rr                      1- 3193     	MOVR	r0x1060,W
     000A 000r                      1- 3194     	IOST	_IOSTB
                                    1- 3195     	.line	454, "main.c"; 	L3H;
     000B 18rr                      1- 3196     	BSR	_PORTB,0
                                    1- 3197     	.line	455, "main.c"; 	L1L;
     000C 1Crr                      1- 3198     	BCR	_PORTB,1
                                    1- 3199     	.line	456, "main.c"; 	delay(100);
     000D 2164                      1- 3200     	MOVIA	0x64
                                    1- 3201     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3202     	.line	457, "main.c"; 	LedInput();
                                    1- 3203     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3204     	.line	458, "main.c"; 	}
                                    1- 3205     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3206     ; exit point of _LED1ON
                                    1- 3208     ;***
                                    1- 3209     ;  pBlock Stats: dbName = C
                                    1- 3210     ;***
                                    1- 3211     ;has an exit
                                    1- 3212     ;1 compiler assigned register :
                                    1- 3213     ;   r0x1059
                                    1- 3214     ;; Starting pCode block
                                    1- 3215     .segment "code"; module=main, function=_LedInput
     0000                           1- 3217     _LedInput:
                                    1- 3218     ; 2 exit points
                                    1- 3219     	.line	444, "main.c"; 	IOSTA |= 0x01;
     0000 001r                      1- 3220     	IOSTR	_IOSTA
                                    1- 3221     	BANKSEL	r0x1059
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3222     	MOVAR	r0x1059
     0003 18rr                      1- 3223     	BSR	r0x1059,0
     0004 01rr                      1- 3224     	MOVR	r0x1059,W
     0005 000r                      1- 3225     	IOST	_IOSTA
                                    1- 3226     	.line	445, "main.c"; 	IOSTB |= 0x03;
     0006 001r                      1- 3227     	IOSTR	_IOSTB
     0007 00rr                      1- 3228     	MOVAR	r0x1059
     0008 2103                      1- 3229     	MOVIA	0x03
     0009 11rr                      1- 3230     	IORAR	r0x1059,F
     000A 01rr                      1- 3231     	MOVR	r0x1059,W
     000B 000r                      1- 3232     	IOST	_IOSTB
                                    1- 3233     	.line	446, "main.c"; 	PORTA &= 0xFE;
                                    1- 3234     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Crr                      1- 3235     	BCR	_PORTA,0
                                    1- 3236     	.line	447, "main.c"; 	PORTB &= 0xFC;
     000E 21FC                      1- 3237     	MOVIA	0xfc
     000F 10rr                      1- 3238     	ANDAR	_PORTB,F
                                    1- 3239     	.line	448, "main.c"; 	}
                                    1- 3240     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3241     ; exit point of _LedInput
                                    1- 3243     ;***
                                    1- 3244     ;  pBlock Stats: dbName = C
                                    1- 3245     ;***
                                    1- 3246     ;has an exit
                                    1- 3247     ;functions called:
                                    1- 3248     ;   _LedInput
                                    1- 3249     ;   _LedInput
                                    1- 3250     ;   _LED6ON
                                    1- 3251     ;   _LED5ON
                                    1- 3252     ;   _LED4ON
                                    1- 3253     ;   _LED3ON
                                    1- 3254     ;   _LED2ON
                                    1- 3255     ;   _LED1ON
                                    1- 3256     ;   _LedInput
                                    1- 3257     ;   _LedInput
                                    1- 3258     ;   _LED6ON
                                    1- 3259     ;   _LED5ON
                                    1- 3260     ;   _LED4ON
                                    1- 3261     ;   _LED3ON
                                    1- 3262     ;   _LED2ON
                                    1- 3263     ;   _LED1ON
                                    1- 3264     ;; Starting pCode block
                                    1- 3265     .segment "code"; module=main, function=_ledShow
     0000                           1- 3267     _ledShow:
                                    1- 3268     ; 2 exit points
                                    1- 3269     	.line	379, "main.c"; 	if(ledDeadTime > 0 && workStep == 0)
                                    1- 3270     	BANKSEL	_ledDeadTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 3271     	MOVR	_ledDeadTime,W
     0002 0D03                      1- 3272     	BTRSC	STATUS,2
                                    1- 3273     	MGOTO	_00315_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3274     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 3275     	MOVR	_workStep,W
     0006 0903                      1- 3276     	BTRSS	STATUS,2
                                    1- 3277     	MGOTO	_00315_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3278     	.line	381, "main.c"; 	if(ledDeadTime % 2 == 0)
                                    1- 3279     	BANKSEL	_ledDeadTime
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 0Crr                      1- 3280     	BTRSC	_ledDeadTime,0
                                    1- 3281     	MGOTO	_00312_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3282     	.line	383, "main.c"; 	ledStep = 0;
                                    1- 3283     	BANKSEL	_ledStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 02rr                      1- 3284     	CLRR	_ledStep
                                    1- 3285     	MGOTO	_00315_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 3286     _00312_DS_:
                                    1- 3287     	.line	387, "main.c"; 	ledStep = tempLedStep;
                                    1- 3288     	BANKSEL	_tempLedStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 3289     	MOVR	_tempLedStep,W
                                    1- 3290     	BANKSEL	_ledStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 3291     	MOVAR	_ledStep
     0012                           1- 3292     _00315_DS_:
                                    1- 3293     	.line	398, "main.c"; 	if(ledLightTime > 0 && pwStep > 0)
                                    1- 3294     	BANKSEL	_ledLightTime
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 3295     	MOVR	_ledLightTime,W
     0014 0D03                      1- 3296     	BTRSC	STATUS,2
                                    1- 3297     	MGOTO	_00323_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3298     	BANKSEL	_pwStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 3299     	MOVR	_pwStep,W
     0018 0D03                      1- 3300     	BTRSC	STATUS,2
                                    1- 3301     	MGOTO	_00323_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3302     	.line	400, "main.c"; 	if(ledLightTime > 0)
                                    1- 3303     	BANKSEL	_ledLightTime
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 01rr                      1- 3304     	MOVR	_ledLightTime,W
     001C 0D03                      1- 3305     	BTRSC	STATUS,2
                                    1- 3306     	MGOTO	_00323_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3307     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3308     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 3309     	.line	402, "main.c"; 	if(pwStep > 6 )
     001E 2107                      1- 3310     	MOVIA	0x07
                                    1- 3311     	BANKSEL	_pwStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 04rr                      1- 3312     	SUBAR	_pwStep,W
     0021 0803                      1- 3313     	BTRSS	STATUS,0
                                    1- 3314     	MGOTO	_00318_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3315     	.line	403, "main.c"; 	ledStep = 6;
     0023 2106                      1- 3316     	MOVIA	0x06
                                    1- 3317     	BANKSEL	_ledStep
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 00rr                      1- 3318     	MOVAR	_ledStep
                                    1- 3319     	MGOTO	_00323_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 3320     _00318_DS_:
                                    1- 3321     	.line	405, "main.c"; 	ledStep = pwStep;
                                    1- 3322     	BANKSEL	_pwStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 3323     	MOVR	_pwStep,W
                                    1- 3324     	BANKSEL	_ledStep
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 3325     	MOVAR	_ledStep
     002B                           1- 3326     _00323_DS_:
                                    1- 3327     	.line	408, "main.c"; 	if(shanshuoTime > 0 && workStep > 0 && pwStep == 0)
                                    1- 3328     	BANKSEL	_shanshuoTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1- 3329     	MOVR	_shanshuoTime,W
     002D 0D03                      1- 3330     	BTRSC	STATUS,2
                                    1- 3331     	MGOTO	_00329_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3332     	BANKSEL	_workStep
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 3333     	MOVR	_workStep,W
     0031 0D03                      1- 3334     	BTRSC	STATUS,2
                                    1- 3335     	MGOTO	_00329_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3336     	BANKSEL	_pwStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 3337     	MOVR	_pwStep,W
     0035 0903                      1- 3338     	BTRSS	STATUS,2
                                    1- 3339     	MGOTO	_00329_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3340     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 3341     	.line	410, "main.c"; 	if(count1s < 50)
     0037 2132                      1- 3342     	MOVIA	0x32
                                    1- 3343     	BANKSEL	_count1s
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 04rr                      1- 3344     	SUBAR	_count1s,W
     003A 0C03                      1- 3345     	BTRSC	STATUS,0
                                    1- 3346     	MGOTO	_00326_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3347     	.line	411, "main.c"; 	ledStep = workStep;
                                    1- 3348     	BANKSEL	_workStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 3349     	MOVR	_workStep,W
                                    1- 3350     	BANKSEL	_ledStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 00rr                      1- 3351     	MOVAR	_ledStep
                                    1- 3352     	MGOTO	_00329_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041                           1- 3353     _00326_DS_:
                                    1- 3354     	.line	413, "main.c"; 	ledStep = 0;
                                    1- 3355     	BANKSEL	_ledStep
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 3356     	CLRR	_ledStep
     0043                           1- 3357     _00329_DS_:
                                    1- 3358     	.line	416, "main.c"; 	LedInput();
                                    1- 3359     	MCALL	_LedInput
     0043 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3360     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3361     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 3362     	.line	417, "main.c"; 	switch(ledStep)
     0044 2109                      1- 3363     	MOVIA	0x09
                                    1- 3364     	BANKSEL	_ledStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 04rr                      1- 3365     	SUBAR	_ledStep,W
     0047 0C03                      1- 3366     	BTRSC	STATUS,0
                                    1- 3367     	MGOTO	_00342_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 21rr                      1- 3368     	MOVIA	((_00383_DS_ >> 8) & 0xff)
     004A 008A                      1- 3369     	MOVAR	PCHBUF
     004B 01rr                      1- 3370     	MOVR	_ledStep,W
     004C 25rr                      1- 3371     	ADDIA	_00383_DS_
     004D 0C03                      1- 3372     	BTRSC	STATUS,0
     004E 058A                      1- 3373     	INCR	PCHBUF,F
     004F 0082                      1- 3374     	MOVAR	PCL
     0050                           1- 3375     _00383_DS_:
                                    1- 3376     	MGOTO	_00332_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3377     	MGOTO	_00340_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3378     	MGOTO	_00339_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3379     	MGOTO	_00338_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3380     	MGOTO	_00337_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3381     	MGOTO	_00336_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3382     	MGOTO	_00335_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3383     	MGOTO	_00335_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3384     	MGOTO	_00335_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
     0059                           1- 3385     _00332_DS_:
                                    1- 3386     	.line	420, "main.c"; 	LedInput();
                                    1- 3387     	MCALL	_LedInput
     0059 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3388     	.line	421, "main.c"; 	break;
                                    1- 3389     	MGOTO	_00342_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B                           1- 3390     _00335_DS_:
                                    1- 3391     	.line	425, "main.c"; 	LED6ON();
                                    1- 3392     	MCALL	_LED6ON
     005B 2rrr                      3-   66 m1      LCALL rom_address
     005C                           1- 3393     _00336_DS_:
                                    1- 3394     	.line	427, "main.c"; 	LED5ON();
                                    1- 3395     	MCALL	_LED5ON
     005C 2rrr                      3-   66 m1      LCALL rom_address
     005D                           1- 3396     _00337_DS_:
                                    1- 3397     	.line	429, "main.c"; 	LED4ON();
                                    1- 3398     	MCALL	_LED4ON
     005D 2rrr                      3-   66 m1      LCALL rom_address
     005E                           1- 3399     _00338_DS_:
                                    1- 3400     	.line	431, "main.c"; 	LED3ON();
                                    1- 3401     	MCALL	_LED3ON
     005E 2rrr                      3-   66 m1      LCALL rom_address
     005F                           1- 3402     _00339_DS_:
                                    1- 3403     	.line	433, "main.c"; 	LED2ON();
                                    1- 3404     	MCALL	_LED2ON
     005F 2rrr                      3-   66 m1      LCALL rom_address
     0060                           1- 3405     _00340_DS_:
                                    1- 3406     	.line	435, "main.c"; 	LED1ON();
                                    1- 3407     	MCALL	_LED1ON
     0060 2rrr                      3-   66 m1      LCALL rom_address
     0061                           1- 3408     _00342_DS_:
                                    1- 3409     	.line	438, "main.c"; 	}
                                    1- 3410     	RETURN	
     0061 0010                      3-   40 m1      ret
                                    1- 3411     ; exit point of _ledShow
                                    1- 3413     ;***
                                    1- 3414     ;  pBlock Stats: dbName = C
                                    1- 3415     ;***
                                    1- 3416     ;has an exit
                                    1- 3417     ;functions called:
                                    1- 3418     ;   _LedInput
                                    1- 3419     ;   _LedInput
                                    1- 3420     ;; Starting pCode block
                                    1- 3421     .segment "code"; module=main, function=_initSys
     0000                           1- 3423     _initSys:
                                    1- 3424     ; 2 exit points
                                    1- 3425     	.line	347, "main.c"; 	DISI();
     0000 0013                      1- 3426     	DISI
                                    1- 3427     	.line	348, "main.c"; 	IOSTA = C_PA7_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0001 21BE                      1- 3428     	MOVIA	0xbe
     0002 000r                      1- 3429     	IOST	_IOSTA
                                    1- 3430     	.line	349, "main.c"; 	IOSTB = C_PB3_Input;
     0003 2108                      1- 3431     	MOVIA	0x08
     0004 000r                      1- 3432     	IOST	_IOSTB
                                    1- 3433     	.line	350, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 3434     	CLRR	_PORTB
                                    1- 3435     	.line	351, "main.c"; 	PORTA = 0x00;
                                    1- 3436     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 3437     	CLRR	_PORTA
                                    1- 3438     	.line	352, "main.c"; 	LedInput();
                                    1- 3439     	MCALL	_LedInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3440     	.line	353, "main.c"; 	APHCON = 0x7F;
     0009 217F                      1- 3441     	MOVIA	0x7f
     000A 000r                      1- 3442     	IOST	_APHCON
                                    1- 3443     	.line	354, "main.c"; 	BPHCON = 0xFF;
     000B 21FF                      1- 3444     	MOVIA	0xff
     000C 00rr                      1- 3445     	MOVAR	_BPHCON
                                    1- 3446     	.line	355, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 3447     	MOVAR	_ABPLCON
                                    1- 3448     	.line	357, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1- 3449     	MOVIA	0x01
     000F 00rr                      1- 3450     	MOVAR	_INTE
                                    1- 3451     	.line	359, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 3452     	CLRA	
     0011 000r                      1- 3453     	IOST	_PCON1
                                    1- 3454     	.line	361, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 3455     	MOVIA	0x37
     0013 00rr                      1- 3456     	MOVAR	_TMR0
                                    1- 3457     	.line	362, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0014 2101                      1- 3458     	MOVIA	0x01
     0015 0003                      1- 3459     	T0MD	
                                    1- 3460     	.line	364, "main.c"; 	PCON1 = C_TMR0_En;
     0016 000r                      1- 3461     	IOST	_PCON1
                                    1- 3462     	.line	367, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0017 2198                      1- 3463     	MOVIA	0x98
     0018 00rr                      1- 3464     	MOVAR	_PCON
                                    1- 3465     	.line	370, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0019 2101                      1- 3466     	MOVIA	0x01
     001A 000r                      1- 3467     	IOST	_PCON1
                                    1- 3468     	.line	371, "main.c"; 	ENI();
     001B 0004                      1- 3469     	ENI
                                    1- 3470     	.line	372, "main.c"; 	}
                                    1- 3471     	RETURN	
     001C 0010                      3-   40 m1      ret
                                    1- 3472     ; exit point of _initSys
                                    1- 3474     ;***
                                    1- 3475     ;  pBlock Stats: dbName = C
                                    1- 3476     ;***
                                    1- 3477     ;has an exit
                                    1- 3478     ;functions called:
                                    1- 3479     ;   _pwmStop
                                    1- 3480     ;   _pwmStop
                                    1- 3481     ;; Starting pCode block
                                    1- 3482     .segment "code"; module=main, function=_powerOff
     0000                           1- 3484     _powerOff:
                                    1- 3485     ; 2 exit points
                                    1- 3486     	.line	338, "main.c"; 	workStep = 0;
                                    1- 3487     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 3488     	CLRR	_workStep
                                    1- 3489     	.line	339, "main.c"; 	pwmStop();
                                    1- 3490     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3491     	.line	341, "main.c"; 	}
                                    1- 3492     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 3493     ; exit point of _powerOff
                                    1- 3495     ;***
                                    1- 3496     ;  pBlock Stats: dbName = C
                                    1- 3497     ;***
                                    1- 3498     ;has an exit
                                    1- 3499     ;functions called:
                                    1- 3500     ;   _keyRead
                                    1- 3501     ;   _pwmInit
                                    1- 3502     ;   _powerOff
                                    1- 3503     ;   _pwmInit
                                    1- 3504     ;   _keyRead
                                    1- 3505     ;   _pwmInit
                                    1- 3506     ;   _powerOff
                                    1- 3507     ;   _pwmInit
                                    1- 3508     ;1 compiler assigned register :
                                    1- 3509     ;   r0x1061
                                    1- 3510     ;; Starting pCode block
                                    1- 3511     .segment "code"; module=main, function=_keyCtr
                                    1- 3513     ;local variable name mapping:
     0000                           1- 3515     _keyCtr:
                                    1- 3516     ; 2 exit points
                                    1- 3517     	.line	268, "main.c"; 	char kclick = keyRead(0x80 & (~PORTA));
                                    1- 3518     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 3519     	COMR	_PORTA,W
                                    1- 3520     	BANKSEL	r0x1061
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 3521     	MOVAR	r0x1061
     0004 2180                      1- 3522     	MOVIA	0x80
     0005 10rr                      1- 3523     	ANDAR	r0x1061,F
     0006 01rr                      1- 3524     	MOVR	r0x1061,W
                                    1- 3525     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3526     	BANKSEL	r0x1061
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 3527     	MOVAR	r0x1061
                                    1- 3528     	.line	269, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 3529     	XORIA	0x01
     000B 0903                      1- 3530     	BTRSS	STATUS,2
                                    1- 3531     	MGOTO	_00296_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3532     	.line	271, "main.c"; 	count500ms = 0;
                                    1- 3533     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 3534     	CLRR	_count500ms
                                    1- 3535     	.line	272, "main.c"; 	ledLightTime = 0;
                                    1- 3536     	BANKSEL	_ledLightTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 3537     	CLRR	_ledLightTime
                                    1- 3538     	.line	273, "main.c"; 	if(workStep == 0)
                                    1- 3539     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 3540     	MOVR	_workStep,W
     0013 0903                      1- 3541     	BTRSS	STATUS,2
                                    1- 3542     	MGOTO	_00262_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3543     	.line	275, "main.c"; 	count1s = 0;
                                    1- 3544     	BANKSEL	_count1s
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 3545     	CLRR	_count1s
                                    1- 3546     	.line	276, "main.c"; 	ledLightTime = 3;
     0017 2103                      1- 3547     	MOVIA	0x03
                                    1- 3548     	BANKSEL	_ledLightTime
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 00rr                      1- 3549     	MOVAR	_ledLightTime
                                    1- 3550     	.line	277, "main.c"; 	prePwStep = 0;
                                    1- 3551     	BANKSEL	_prePwStep
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 02rr                      1- 3552     	CLRR	_prePwStep
                                    1- 3553     	.line	278, "main.c"; 	return;
                                    1- 3554     	MGOTO	_00298_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
     001D                           1- 3555     _00262_DS_:
                                    1- 3556     	.line	280, "main.c"; 	ledTime = 0;
                                    1- 3557     	BANKSEL	_ledTime
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 02rr                      1- 3558     	CLRR	_ledTime
                                    1- 3559     	.line	281, "main.c"; 	if(++workStep > 6)
                                    1- 3560     	BANKSEL	_workStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 05rr                      1- 3561     	INCR	_workStep,F
                                    1- 3562     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3563     ;;unsigned compare: left >= lit (0x7=7), size=1
     0021 2107                      1- 3564     	MOVIA	0x07
     0022 04rr                      1- 3565     	SUBAR	_workStep,W
     0023 0803                      1- 3566     	BTRSS	STATUS,0
                                    1- 3567     	MGOTO	_00264_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3568     	.line	282, "main.c"; 	workStep = 1;
     0025 2101                      1- 3569     	MOVIA	0x01
     0026 00rr                      1- 3570     	MOVAR	_workStep
     0027                           1- 3571     _00264_DS_:
                                    1- 3572     	.line	283, "main.c"; 	if(pwStep == 0)
                                    1- 3573     	BANKSEL	_pwStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 3574     	MOVR	_pwStep,W
     0029 0903                      1- 3575     	BTRSS	STATUS,2
                                    1- 3576     	MGOTO	_00266_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3577     	.line	284, "main.c"; 	shanshuoTime = 10;
     002B 210A                      1- 3578     	MOVIA	0x0a
                                    1- 3579     	BANKSEL	_shanshuoTime
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1- 3580     	MOVAR	_shanshuoTime
     002E                           1- 3581     _00266_DS_:
                                    1- 3582     	.line	285, "main.c"; 	if(workStep == 1)
                                    1- 3583     	BANKSEL	_workStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 3584     	MOVR	_workStep,W
     0030 2401                      1- 3585     	XORIA	0x01
     0031 0903                      1- 3586     	BTRSS	STATUS,2
                                    1- 3587     	MGOTO	_00282_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3588     	.line	287, "main.c"; 	maxDuty = 73;
     0033 2149                      1- 3589     	MOVIA	0x49
                                    1- 3590     	BANKSEL	_maxDuty
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 3591     	MOVAR	_maxDuty
                                    1- 3592     	.line	288, "main.c"; 	ledLightTime = 0;
                                    1- 3593     	BANKSEL	_ledLightTime
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 02rr                      1- 3594     	CLRR	_ledLightTime
                                    1- 3595     	MGOTO	_00283_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
     0039                           1- 3596     _00282_DS_:
                                    1- 3597     	.line	290, "main.c"; 	else if(workStep == 2)
                                    1- 3598     	BANKSEL	_workStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1- 3599     	MOVR	_workStep,W
     003B 2402                      1- 3600     	XORIA	0x02
     003C 0903                      1- 3601     	BTRSS	STATUS,2
                                    1- 3602     	MGOTO	_00279_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3603     	.line	291, "main.c"; 	maxDuty = 79;
     003E 214F                      1- 3604     	MOVIA	0x4f
                                    1- 3605     	BANKSEL	_maxDuty
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 00rr                      1- 3606     	MOVAR	_maxDuty
                                    1- 3607     	MGOTO	_00283_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042                           1- 3608     _00279_DS_:
                                    1- 3609     	.line	292, "main.c"; 	else if(workStep == 3)
                                    1- 3610     	BANKSEL	_workStep
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1- 3611     	MOVR	_workStep,W
     0044 2403                      1- 3612     	XORIA	0x03
     0045 0903                      1- 3613     	BTRSS	STATUS,2
                                    1- 3614     	MGOTO	_00276_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3615     	.line	293, "main.c"; 	maxDuty = 84;
     0047 2154                      1- 3616     	MOVIA	0x54
                                    1- 3617     	BANKSEL	_maxDuty
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1- 3618     	MOVAR	_maxDuty
                                    1- 3619     	MGOTO	_00283_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
     004B                           1- 3620     _00276_DS_:
                                    1- 3621     	.line	294, "main.c"; 	else if(workStep == 4)
                                    1- 3622     	BANKSEL	_workStep
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 01rr                      1- 3623     	MOVR	_workStep,W
     004D 2404                      1- 3624     	XORIA	0x04
     004E 0903                      1- 3625     	BTRSS	STATUS,2
                                    1- 3626     	MGOTO	_00273_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3627     	.line	295, "main.c"; 	maxDuty = 89;
     0050 2159                      1- 3628     	MOVIA	0x59
                                    1- 3629     	BANKSEL	_maxDuty
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 00rr                      1- 3630     	MOVAR	_maxDuty
                                    1- 3631     	MGOTO	_00283_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
     0054                           1- 3632     _00273_DS_:
                                    1- 3633     	.line	296, "main.c"; 	else if(workStep == 5)
                                    1- 3634     	BANKSEL	_workStep
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 01rr                      1- 3635     	MOVR	_workStep,W
     0056 2405                      1- 3636     	XORIA	0x05
     0057 0903                      1- 3637     	BTRSS	STATUS,2
                                    1- 3638     	MGOTO	_00270_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3639     	.line	297, "main.c"; 	maxDuty = 94;
     0059 215E                      1- 3640     	MOVIA	0x5e
                                    1- 3641     	BANKSEL	_maxDuty
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 00rr                      1- 3642     	MOVAR	_maxDuty
                                    1- 3643     	MGOTO	_00283_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
     005D                           1- 3644     _00270_DS_:
                                    1- 3645     	.line	298, "main.c"; 	else if(workStep == 6)
                                    1- 3646     	BANKSEL	_workStep
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 01rr                      1- 3647     	MOVR	_workStep,W
     005F 2406                      1- 3648     	XORIA	0x06
     0060 0903                      1- 3649     	BTRSS	STATUS,2
                                    1- 3650     	MGOTO	_00283_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3651     	.line	299, "main.c"; 	maxDuty = 100;
     0062 2164                      1- 3652     	MOVIA	0x64
                                    1- 3653     	BANKSEL	_maxDuty
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 00rr                      1- 3654     	MOVAR	_maxDuty
     0065                           1- 3655     _00283_DS_:
                                    1- 3656     	.line	300, "main.c"; 	if(workStep > 0)
                                    1- 3657     	BANKSEL	_workStep
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 01rr                      1- 3658     	MOVR	_workStep,W
     0067 0D03                      1- 3659     	BTRSC	STATUS,2
                                    1- 3660     	MGOTO	_00285_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3661     	.line	302, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 3662     	BANKSEL	_maxDuty
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 01rr                      1- 3663     	MOVR	_maxDuty,W
     006B 00rr                      1- 3664     	SFUN	_PWM2DUTY
                                    1- 3665     	.line	303, "main.c"; 	pwmInit();
                                    1- 3666     	MCALL	_pwmInit
     006C 2rrr                      3-   66 m1      LCALL rom_address
     006D                           1- 3667     _00285_DS_:
                                    1- 3668     	.line	305, "main.c"; 	ledStep = workStep;
                                    1- 3669     	BANKSEL	_workStep
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 01rr                      1- 3670     	MOVR	_workStep,W
                                    1- 3671     	BANKSEL	_ledStep
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 00rr                      1- 3672     	MOVAR	_ledStep
                                    1- 3673     	MGOTO	_00298_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
     0072                           1- 3674     _00296_DS_:
                                    1- 3675     	.line	307, "main.c"; 	else if(kclick == 2)
                                    1- 3676     	BANKSEL	r0x1061
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 01rr                      1- 3677     	MOVR	r0x1061,W
     0074 2402                      1- 3678     	XORIA	0x02
     0075 0903                      1- 3679     	BTRSS	STATUS,2
                                    1- 3680     	MGOTO	_00298_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3681     	.line	309, "main.c"; 	if(workStep > 0)
                                    1- 3682     	BANKSEL	_workStep
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 01rr                      1- 3683     	MOVR	_workStep,W
     0079 0D03                      1- 3684     	BTRSC	STATUS,2
                                    1- 3685     	MGOTO	_00291_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3686     	.line	311, "main.c"; 	powerOff();
                                    1- 3687     	MCALL	_powerOff
     007B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3688     	MGOTO	_00292_DS_
     007C 3rrr                      3-   63 m1      LGOTO rom_address
     007D                           1- 3689     _00291_DS_:
                                    1- 3690     	.line	315, "main.c"; 	if(pwStep == 10)
                                    1- 3691     	BANKSEL	_pwStep
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 01rr                      1- 3692     	MOVR	_pwStep,W
     007F 240A                      1- 3693     	XORIA	0x0a
     0080 0903                      1- 3694     	BTRSS	STATUS,2
                                    1- 3695     	MGOTO	_00287_DS_
     0081 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3696     	.line	317, "main.c"; 	sleepTime = 0;
                                    1- 3697     	BANKSEL	_sleepTime
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 02rr                      1- 3698     	CLRR	_sleepTime
     0084 02rr                      1- 3699     	CLRR	(_sleepTime + 1)
                                    1- 3700     	.line	318, "main.c"; 	return;
                                    1- 3701     	MGOTO	_00298_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
     0086                           1- 3702     _00287_DS_:
                                    1- 3703     	.line	320, "main.c"; 	ledLightTime = 0;
                                    1- 3704     	BANKSEL	_ledLightTime
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 02rr                      1- 3705     	CLRR	_ledLightTime
                                    1- 3706     	.line	321, "main.c"; 	ledStep = 1;
     0088 2101                      1- 3707     	MOVIA	0x01
                                    1- 3708     	BANKSEL	_ledStep
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 00rr                      1- 3709     	MOVAR	_ledStep
                                    1- 3710     	.line	322, "main.c"; 	workStep = 1;
                                    1- 3711     	BANKSEL	_workStep
     008B rrrr                      3-  110 m1      .banksel ram_address
     008C 00rr                      1- 3712     	MOVAR	_workStep
                                    1- 3713     	.line	323, "main.c"; 	PWM2DUTY = 73;
     008D 2149                      1- 3714     	MOVIA	0x49
     008E 00rr                      1- 3715     	SFUN	_PWM2DUTY
                                    1- 3716     	.line	324, "main.c"; 	currentDuty = 73;
                                    1- 3717     	BANKSEL	_currentDuty
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 00rr                      1- 3718     	MOVAR	_currentDuty
                                    1- 3719     	.line	325, "main.c"; 	maxDuty = 73;
                                    1- 3720     	BANKSEL	_maxDuty
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 00rr                      1- 3721     	MOVAR	_maxDuty
                                    1- 3722     	.line	326, "main.c"; 	pwmInit();
                                    1- 3723     	MCALL	_pwmInit
     0093 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3724     	.line	327, "main.c"; 	if(pwStep == 0)
                                    1- 3725     	BANKSEL	_pwStep
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 01rr                      1- 3726     	MOVR	_pwStep,W
     0096 0903                      1- 3727     	BTRSS	STATUS,2
                                    1- 3728     	MGOTO	_00292_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3729     	.line	328, "main.c"; 	shanshuoTime = 10;
     0098 210A                      1- 3730     	MOVIA	0x0a
                                    1- 3731     	BANKSEL	_shanshuoTime
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 00rr                      1- 3732     	MOVAR	_shanshuoTime
     009B                           1- 3733     _00292_DS_:
                                    1- 3734     	.line	331, "main.c"; 	ledStep = workStep;
                                    1- 3735     	BANKSEL	_workStep
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 01rr                      1- 3736     	MOVR	_workStep,W
                                    1- 3737     	BANKSEL	_ledStep
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 00rr                      1- 3738     	MOVAR	_ledStep
     009F                           1- 3739     _00298_DS_:
                                    1- 3740     	.line	333, "main.c"; 	}
                                    1- 3741     	RETURN	
     009F 0010                      3-   40 m1      ret
                                    1- 3742     ; exit point of _keyCtr
                                    1- 3745     ;	code size estimation:
                                    1- 3746     ;	 1471+  366 =  1837 instructions ( 4406 byte)
                                    1- 3748     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
