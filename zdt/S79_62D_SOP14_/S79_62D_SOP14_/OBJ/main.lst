
                    Nyquest Technology Co., Ltd.

NYASM 2.30

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_fgCtr
                                    1-   18     	extern	_LedCtr2
                                    1-   19     	extern	_checkInAD
                                    1-   20     	extern	_F_AIN3_Convert
                                    1-   21     	extern	__divuint
                                    1-   22     	extern	_PORTAbits
                                    1-   23     	extern	_PORTBbits
                                    1-   24     	extern	_PCONbits
                                    1-   25     	extern	_BWUCONbits
                                    1-   26     	extern	_ABPLCONbits
                                    1-   27     	extern	_BPHCONbits
                                    1-   28     	extern	_INTEbits
                                    1-   29     	extern	_INTFbits
                                    1-   30     	extern	_ADMDbits
                                    1-   31     	extern	_ADRbits
                                    1-   32     	extern	_ADVREFHbits
                                    1-   33     	extern	_ADCRbits
                                    1-   34     	extern	_AWUCONbits
                                    1-   35     	extern	_PACONbits
                                    1-   36     	extern	_INTEDGbits
                                    1-   37     	extern	_ANAENbits
                                    1-   38     	extern	_RFCbits
                                    1-   39     	extern	_INTE2bits
                                    1-   40     	extern	_INDF
                                    1-   41     	extern	_TMR0
                                    1-   42     	extern	_PCL
                                    1-   43     	extern	_STATUS
                                    1-   44     	extern	_FSR
                                    1-   45     	extern	_PORTA
                                    1-   46     	extern	_PORTB
                                    1-   47     	extern	_PCON
                                    1-   48     	extern	_BWUCON
                                    1-   49     	extern	_PCHBUF
                                    1-   50     	extern	_ABPLCON
                                    1-   51     	extern	_BPHCON
                                    1-   52     	extern	_INTE
                                    1-   53     	extern	_INTF
                                    1-   54     	extern	_ADMD
                                    1-   55     	extern	_ADR
                                    1-   56     	extern	_ADD
                                    1-   57     	extern	_ADVREFH
                                    1-   58     	extern	_ADCR
                                    1-   59     	extern	_AWUCON
                                    1-   60     	extern	_PACON
                                    1-   61     	extern	_INTEDG
                                    1-   62     	extern	_TMRH
                                    1-   63     	extern	_ANAEN
                                    1-   64     	extern	_RFC
                                    1-   65     	extern	_TM3RH
                                    1-   66     	extern	_INTE2
                                    1-   67     	extern	_TMR1
                                    1-   68     	extern	_T1CR1
                                    1-   69     	extern	_T1CR2
                                    1-   70     	extern	_PWM1DUTY
                                    1-   71     	extern	_PS1CV
                                    1-   72     	extern	_BZ1CR
                                    1-   73     	extern	_IRCR
                                    1-   74     	extern	_TBHP
                                    1-   75     	extern	_TBHD
                                    1-   76     	extern	_TMR2
                                    1-   77     	extern	_T2CR1
                                    1-   78     	extern	_T2CR2
                                    1-   79     	extern	_PWM2DUTY
                                    1-   80     	extern	_PS2CV
                                    1-   81     	extern	_BZ2CR
                                    1-   82     	extern	_OSCCR
                                    1-   83     	extern	_TMR3
                                    1-   84     	extern	_T3CR1
                                    1-   85     	extern	_T3CR2
                                    1-   86     	extern	_PWM3DUTY
                                    1-   87     	extern	_PS3CV
                                    1-   88     	extern	_BZ3CR
                                    1-   89     	extern	_IOSTA
                                    1-   90     	extern	_IOSTB
                                    1-   91     	extern	_APHCON
                                    1-   92     	extern	_PS0CV
                                    1-   93     	extern	_BODCON
                                    1-   94     	extern	_CMPCR
                                    1-   95     	extern	_PCON1
                                    1-   96     	extern	_T0MD
                                    1-   97     	extern	___sdcc_saved_fsr
                                    1-   98     	extern	___sdcc_saved_stk00
                                    1-   99     	extern	___sdcc_saved_stk01
                                    1-  100     	extern	__nyc_ny8_startup
                                    1-  101     ;--------------------------------------------------------
                                    1-  102     ; global declarations
                                    1-  103     ;--------------------------------------------------------
                                    1-  104     	extern	_F_wait_eoc
                                    1-  105     	extern	_F_AIN2_Convert
                                    1-  106     	extern	_F_AIN4_Convert
                                    1-  107     	extern	_checkOutA
                                    1-  108     	extern	_checkBatAD
                                    1-  109     	extern	_initAD
                                    1-  110     	extern	_ledOff
                                    1-  111     	extern	_ledRed
                                    1-  112     	extern	_ledGreen
                                    1-  113     	extern	_delay
                                    1-  114     	extern	_chrgCtr
                                    1-  115     	extern	_keyRead
                                    1-  116     	extern	_gotoSleep
                                    1-  117     	extern	_pwmStop
                                    1-  118     	extern	_pwmInit
                                    1-  119     	extern	_pwm1Stop
                                    1-  120     	extern	_pwm1Init
                                    1-  121     	extern	_LED6ON
                                    1-  122     	extern	_LED5ON
                                    1-  123     	extern	_LED4ON
                                    1-  124     	extern	_LED3ON
                                    1-  125     	extern	_LED2ON
                                    1-  126     	extern	_LED1ON
                                    1-  127     	extern	_LedInput
                                    1-  128     	extern	_ledShow
                                    1-  129     	extern	_initSys
                                    1-  130     	extern	_powerOff
                                    1-  131     	extern	_keyCtr
                                    1-  132     	extern	_isr
                                    1-  133     	extern	_main
                                    1-  134     	extern	_Status
                                    1-  135     	extern	_intCount
                                    1-  136     	extern	_count500ms
                                    1-  137     	extern	_keyCount
                                    1-  138     	extern	_workStep
                                    1-  139     	extern	_ledStep
                                    1-  140     	extern	_maxDuty
                                    1-  141     	extern	_pwStep
                                    1-  142     	extern	_R_AIN4_DATA
                                    1-  143     	extern	_R_AIN4_DATA_LB
                                    1-  144     	extern	_R_AIN2_DATA
                                    1-  145     	extern	_R_AIN2_DATA_LB
                                    1-  146     	extern	_chrgTime
                                    1-  147     	extern	_startStep
                                    1-  148     	extern	_sleepTime
                                    1-  149     	extern	_count200ms
                                    1-  150     	extern	_count1s
                                    1-  151     	extern	_count900s
                                    1-  152     	extern	_lowBatTime
                                    1-  153     	extern	_ledTime
                                    1-  154     	extern	_overCount
                                    1-  155     	extern	_chrgCount
                                    1-  156     	extern	_ledLightTime
                                    1-  157     	extern	_currentDuty
                                    1-  158     	extern	_fullCount
                                    1-  159     	extern	_shanshuoTime
                                    1-  160     	extern	_firstTime
                                    1-  161     	extern	_tempDuty
                                    1-  162     	extern	_lowCount
                                    1-  163     	extern	_cDuty
                                    1-  164     	extern	_tempLedStep
                                    1-  165     	extern	_count5S
                                    1-  166     	extern	_ledDeadTime
                                    1-  167     	extern	_lockLedStep
                                    1-  168     	extern	_closeCount
                                    1-  169     	extern	_chrgStep
                                    1-  170     	extern	_prePwStep
                                    1-  171     	extern	_chrgduty
                                    1-  172     	extern	_maxduty
                                    1-  173     	extern	_count50ms
                                    1-  174     	extern	_chrgFullFlag
                                    1-  175     	extern	_ledCount
                                    1-  176     	extern	_addTime
                                    1-  177     	extern	_subTime
                                    1-  178     	extern	_subMin
                                    1-  179     	extern	_chrgWaitTime
                                    1-  180     	extern	_tempSum
                                    1-  181     	extern	_count100
                                    1-  182     	extern	_tempResult
                                    1-  183     	extern	_addFlag
                                    1-  184     	extern	_closeFlag
                                    1-  185     	extern	_debug
                                    1-  187     	extern PSAVE
                                    1-  188     	extern SSAVE
                                    1-  189     	extern WSAVE
                                    1-  190     	extern STK04
                                    1-  191     	extern STK03
                                    1-  192     	extern STK02
                                    1-  193     	extern STK01
                                    1-  194     	extern STK00
                                    1-  196     .segment "uninit", 0x20000040
 20000040                           1-  197     PSAVE:
                                    1-  198     	.res 1
 20000041                           1-  199     SSAVE:
                                    1-  200     	.res 1
 20000042                           1-  201     WSAVE:
                                    1-  202     	.res 1
 20000043                           1-  203     STK04:
                                    1-  204     	.res 1
 20000044                           1-  205     STK03:
                                    1-  206     	.res 1
 20000045                           1-  207     STK02:
                                    1-  208     	.res 1
 20000046                           1-  209     STK01:
                                    1-  210     	.res 1
 20000047                           1-  211     STK00:
                                    1-  212     	.res 1
                                    1-  214     ;--------------------------------------------------------
                                    1-  215     ; global definitions
                                    1-  216     ;--------------------------------------------------------
                                    1-  217     .segment "uninit"
     0000                           1-  218     _R_AIN4_DATA:
                                    1-  219     	.res	2
                                    1-  222     .segment "uninit"
     0000                           1-  223     _R_AIN4_DATA_LB:
                                    1-  224     	.res	1
                                    1-  227     .segment "uninit"
     0000                           1-  228     _R_AIN2_DATA:
                                    1-  229     	.res	2
                                    1-  232     .segment "uninit"
     0000                           1-  233     _R_AIN2_DATA_LB:
                                    1-  234     	.res	1
                                    1-  237     ;--------------------------------------------------------
                                    1-  238     ; absolute symbol definitions
                                    1-  239     ;--------------------------------------------------------
                                    1-  240     ;--------------------------------------------------------
                                    1-  241     ; compiler-defined variables
                                    1-  242     ;--------------------------------------------------------
                                    1-  243     .segment "uninit"
     0000                           1-  244     r0x1060:
                                    1-  245     	.res	1
                                    1-  246     .segment "uninit"
     0000                           1-  247     r0x1058:
                                    1-  248     	.res	1
                                    1-  249     .segment "uninit"
     0000                           1-  250     r0x105F:
                                    1-  251     	.res	1
                                    1-  252     .segment "uninit"
     0000                           1-  253     r0x105E:
                                    1-  254     	.res	1
                                    1-  255     .segment "uninit"
     0000                           1-  256     r0x105D:
                                    1-  257     	.res	1
                                    1-  258     .segment "uninit"
     0000                           1-  259     r0x105C:
                                    1-  260     	.res	1
                                    1-  261     .segment "uninit"
     0000                           1-  262     r0x105B:
                                    1-  263     	.res	1
                                    1-  264     .segment "uninit"
     0000                           1-  265     r0x105A:
                                    1-  266     	.res	1
                                    1-  267     .segment "uninit"
     0000                           1-  268     r0x1051:
                                    1-  269     	.res	1
                                    1-  270     .segment "uninit"
     0000                           1-  271     r0x1059:
                                    1-  272     	.res	1
                                    1-  273     .segment "uninit"
     0000                           1-  274     r0x1057:
                                    1-  275     	.res	1
                                    1-  276     .segment "uninit"
     0000                           1-  277     r0x1052:
                                    1-  278     	.res	1
                                    1-  279     .segment "uninit"
     0000                           1-  280     r0x1053:
                                    1-  281     	.res	1
                                    1-  282     .segment "uninit"
     0000                           1-  283     r0x1054:
                                    1-  284     	.res	1
                                    1-  285     .segment "uninit"
     0000                           1-  286     r0x1056:
                                    1-  287     	.res	1
                                    1-  288     .segment "uninit"
     0000                           1-  289     r0x103B:
                                    1-  290     	.res	1
                                    1-  291     .segment "uninit"
     0000                           1-  292     r0x103C:
                                    1-  293     	.res	1
                                    1-  294     .segment "uninit"
     0000                           1-  295     r0x104F:
                                    1-  296     	.res	1
                                    1-  297     .segment "uninit"
     0000                           1-  298     r0x1050:
                                    1-  299     	.res	1
                                    1-  300     .segment "uninit"
     0000                           1-  301     r0x104B:
                                    1-  302     	.res	1
                                    1-  303     .segment "uninit"
     0000                           1-  304     r0x104C:
                                    1-  305     	.res	1
                                    1-  306     .segment "uninit"
     0000                           1-  307     r0x1043:
                                    1-  308     	.res	1
                                    1-  309     .segment "uninit"
     0000                           1-  310     r0x1044:
                                    1-  311     	.res	1
                                    1-  312     .segment "uninit"
     0000                           1-  313     r0x1045:
                                    1-  314     	.res	1
                                    1-  315     .segment "uninit"
     0000                           1-  316     r0x1048:
                                    1-  317     	.res	1
                                    1-  318     .segment "uninit"
     0000                           1-  319     r0x103D:
                                    1-  320     	.res	1
                                    1-  321     .segment "uninit"
     0000                           1-  322     r0x103E:
                                    1-  323     	.res	1
                                    1-  324     .segment "uninit"
     0000                           1-  325     r0x103F:
                                    1-  326     	.res	1
                                    1-  327     .segment "uninit"
     0000                           1-  328     r0x1042:
                                    1-  329     	.res	1
                                    1-  330     ;--------------------------------------------------------
                                    1-  331     ; initialized data
                                    1-  332     ;--------------------------------------------------------
                                    1-  334     .segment "idata"
     0000                           1-  335     _Status:
     0000 0000                      1-  336     	dw	0x00
                                    1-  340     .segment "idata"
     0000                           1-  341     _intCount:
     0000 0000                      1-  342     	dw	0x00
                                    1-  346     .segment "idata"
     0000                           1-  347     _count500ms:
     0000 0000                      1-  348     	dw	0x00
                                    1-  352     .segment "idata"
     0000                           1-  353     _keyCount:
     0000 0000                      1-  354     	dw	0x00
                                    1-  358     .segment "idata"
     0000                           1-  359     _workStep:
     0000 0000                      1-  360     	dw	0x00
                                    1-  364     .segment "idata"
     0000                           1-  365     _ledStep:
     0000 0000                      1-  366     	dw	0x00
                                    1-  370     .segment "idata"
     0000                           1-  371     _maxDuty:
     0000 0000                      1-  372     	dw	0x00
                                    1-  376     .segment "idata"
     0000                           1-  377     _pwStep:
     0000 0000                      1-  378     	dw	0x00
                                    1-  382     .segment "idata"
     0000                           1-  383     _chrgTime:
     0000 0000 0000                 1-  384     	dw	0x00, 0x00
                                    1-  388     .segment "idata"
     0000                           1-  389     _startStep:
     0000 0000                      1-  390     	dw	0x00
                                    1-  394     .segment "idata"
     0000                           1-  395     _sleepTime:
     0000 0000 0000                 1-  396     	dw	0x00, 0x00
                                    1-  400     .segment "idata"
     0000                           1-  401     _count200ms:
     0000 0000                      1-  402     	dw	0x00
                                    1-  406     .segment "idata"
     0000                           1-  407     _count1s:
     0000 0000                      1-  408     	dw	0x00
                                    1-  412     .segment "idata"
     0000                           1-  413     _count900s:
     0000 0000 0000                 1-  414     	dw	0x00, 0x00
                                    1-  418     .segment "idata"
     0000                           1-  419     _lowBatTime:
     0000 0000                      1-  420     	dw	0x00
                                    1-  424     .segment "idata"
     0000                           1-  425     _ledTime:
     0000 0000                      1-  426     	dw	0x00
                                    1-  430     .segment "idata"
     0000                           1-  431     _overCount:
     0000 0000                      1-  432     	dw	0x00
                                    1-  436     .segment "idata"
     0000                           1-  437     _chrgCount:
     0000 0000                      1-  438     	dw	0x00
                                    1-  442     .segment "idata"
     0000                           1-  443     _ledLightTime:
     0000 0000                      1-  444     	dw	0x00
                                    1-  448     .segment "idata"
     0000                           1-  449     _currentDuty:
     0000 0000                      1-  450     	dw	0x00
                                    1-  454     .segment "idata"
     0000                           1-  455     _fullCount:
     0000 0000 0000                 1-  456     	dw	0x00, 0x00
                                    1-  460     .segment "idata"
     0000                           1-  461     _shanshuoTime:
     0000 0000                      1-  462     	dw	0x00
                                    1-  466     .segment "idata"
     0000                           1-  467     _firstTime:
     0000 0000                      1-  468     	dw	0x00
                                    1-  472     .segment "idata"
     0000                           1-  473     _tempDuty:
     0000 0000                      1-  474     	dw	0x00
                                    1-  478     .segment "idata"
     0000                           1-  479     _lowCount:
     0000 0000                      1-  480     	dw	0x00
                                    1-  484     .segment "idata"
     0000                           1-  485     _cDuty:
     0000 0000                      1-  486     	dw	0x00
                                    1-  490     .segment "idata"
     0000                           1-  491     _tempLedStep:
     0000 0000                      1-  492     	dw	0x00
                                    1-  496     .segment "idata"
     0000                           1-  497     _count5S:
     0000 0000 0000                 1-  498     	dw	0x00, 0x00
                                    1-  502     .segment "idata"
     0000                           1-  503     _ledDeadTime:
     0000 0000                      1-  504     	dw	0x00
                                    1-  508     .segment "idata"
     0000                           1-  509     _lockLedStep:
     0000 0000                      1-  510     	dw	0x00
                                    1-  514     .segment "idata"
     0000                           1-  515     _closeCount:
     0000 0000 0000                 1-  516     	dw	0x00, 0x00
                                    1-  520     .segment "idata"
     0000                           1-  521     _chrgStep:
     0000 0000                      1-  522     	dw	0x00
                                    1-  526     .segment "idata"
     0000                           1-  527     _prePwStep:
     0000 0000                      1-  528     	dw	0x00
                                    1-  532     .segment "idata"
     0000                           1-  533     _chrgduty:
     0000 0000                      1-  534     	dw	0x00
                                    1-  538     .segment "idata"
     0000                           1-  539     _maxduty:
     0000 0000                      1-  540     	dw	0x00
                                    1-  544     .segment "idata"
     0000                           1-  545     _count50ms:
     0000 0000                      1-  546     	dw	0x00
                                    1-  550     .segment "idata"
     0000                           1-  551     _chrgFullFlag:
     0000 0000                      1-  552     	dw	0x00
                                    1-  556     .segment "idata"
     0000                           1-  557     _ledCount:
     0000 0000                      1-  558     	dw	0x00
                                    1-  562     .segment "idata"
     0000                           1-  563     _addTime:
     0000 0000                      1-  564     	dw	0x00
                                    1-  568     .segment "idata"
     0000                           1-  569     _subTime:
     0000 0000                      1-  570     	dw	0x00
                                    1-  574     .segment "idata"
     0000                           1-  575     _subMin:
     0000 0000                      1-  576     	dw	0x00
                                    1-  580     .segment "idata"
     0000                           1-  581     _chrgWaitTime:
     0000 0000                      1-  582     	dw	0x00
                                    1-  586     .segment "idata"
     0000                           1-  587     _tempSum:
     0000 0000 0000                 1-  588     	dw	0x00, 0x00
                                    1-  592     .segment "idata"
     0000                           1-  593     _count100:
     0000 0000                      1-  594     	dw	0x00
                                    1-  598     .segment "idata"
     0000                           1-  599     _tempResult:
     0000 0000 0000                 1-  600     	dw	0x00, 0x00
                                    1-  604     .segment "idata"
     0000                           1-  605     _addFlag:
     0000 0000                      1-  606     	dw	0x00
                                    1-  610     .segment "idata"
     0000                           1-  611     _closeFlag:
     0000 0000                      1-  612     	dw	0x00
                                    1-  616     .segment "idata"
     0000                           1-  617     _debug:
     0000 0000                      1-  618     	dw	0x00
                                    1-  621     ;--------------------------------------------------------
                                    1-  622     ; overlayable items in internal ram 
                                    1-  623     ;--------------------------------------------------------
                                    1-  624     ;	udata_ovr
                                    1-  625     ;--------------------------------------------------------
                                    1-  626     ; reset vector 
                                    1-  627     ;--------------------------------------------------------
                                    1-  628     ORG	0x0000
     0000 3rrr                      1-  629     	LGOTO	__nyc_ny8_startup
                                    1-  630     ;--------------------------------------------------------
                                    1-  631     ; interrupt and initialization code
                                    1-  632     ;--------------------------------------------------------
                                    1-  633     ORG 0x0008
                                    1-  634     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  636     .segment "code"
     0000                           1-  637     __sdcc_interrupt:
                                    1-  638     ;***
                                    1-  639     ;  pBlock Stats: dbName = I
                                    1-  640     ;***
                                    1-  641     ;2 compiler assigned registers:
                                    1-  642     ;   STK00
                                    1-  643     ;   STK01
                                    1-  644     ;; Starting pCode block
     0000                           1-  645     _isr:
                                    1-  646     ; 0 exit points
                                    1-  647     	.line	125, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  648     	MOVAR	WSAVE
     0001 1503                      1-  649     	SWAPR	STATUS,W
     0002 0283                      1-  650     	CLRR	STATUS
     0003 00rr                      1-  651     	MOVAR	SSAVE
     0004 010A                      1-  652     	MOVR	PCHBUF,W
     0005 028A                      1-  653     	CLRR	PCHBUF
     0006 00rr                      1-  654     	MOVAR	PSAVE
     0007 0104                      1-  655     	MOVR	FSR,W
                                    1-  656     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  657     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  658     	MOVR	STK00,W
                                    1-  659     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  660     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  661     	MOVR	STK01,W
                                    1-  662     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  663     	MOVAR	___sdcc_saved_stk01
                                    1-  664     	.line	127, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  665     	BTRSS	_INTFbits,0
                                    1-  666     	MGOTO	_00126_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  667     	.line	129, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  668     	MOVIA	0x37
     0013 03rr                      1-  669     	ADDAR	_TMR0,F
                                    1-  670     	.line	131, "main.c"; 	if(++intCount >= 125)
                                    1-  671     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  672     	INCR	_intCount,F
                                    1-  673     ;;unsigned compare: left < lit (0x7D=125), size=1
     0016 217D                      1-  674     	MOVIA	0x7d
     0017 04rr                      1-  675     	SUBAR	_intCount,W
     0018 0803                      1-  676     	BTRSS	STATUS,0
                                    1-  677     	MGOTO	_00126_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  678     	.line	133, "main.c"; 	IntFlag = 1;
                                    1-  679     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  680     	BSR	_Status,0
                                    1-  681     	.line	134, "main.c"; 	intCount = 0;
                                    1-  682     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  683     	CLRR	_intCount
                                    1-  684     	.line	135, "main.c"; 	if(++count500ms >= 40)
                                    1-  685     	BANKSEL	_count500ms
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 05rr                      1-  686     	INCR	_count500ms,F
                                    1-  687     ;;unsigned compare: left < lit (0x28=40), size=1
     0020 2128                      1-  688     	MOVIA	0x28
     0021 04rr                      1-  689     	SUBAR	_count500ms,W
     0022 0C03                      1-  690     	BTRSC	STATUS,0
                                    1-  691     	.line	136, "main.c"; 	count500ms = 0;
     0023 02rr                      1-  692     	CLRR	_count500ms
                                    1-  693     	.line	137, "main.c"; 	if(++count200ms >= 20)
                                    1-  694     	BANKSEL	_count200ms
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 05rr                      1-  695     	INCR	_count200ms,F
     0026 2114                      1-  696     	MOVIA	0x14
     0027 04rr                      1-  697     	SUBAR	_count200ms,W
     0028 0803                      1-  698     	BTRSS	STATUS,0
                                    1-  699     	MGOTO	_00110_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  700     	.line	139, "main.c"; 	count200ms = 0;
     002A 02rr                      1-  701     	CLRR	_count200ms
                                    1-  702     	.line	140, "main.c"; 	if(ledDeadTime > 0)
                                    1-  703     	BANKSEL	_ledDeadTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1-  704     	MOVR	_ledDeadTime,W
     002D 0903                      1-  705     	BTRSS	STATUS,2
                                    1-  706     	.line	141, "main.c"; 	--ledDeadTime;
     002E 06rr                      1-  707     	DECR	_ledDeadTime,F
     002F                           1-  708     _00110_DS_:
                                    1-  709     	.line	143, "main.c"; 	if(++count1s >= 100)
                                    1-  710     	BANKSEL	_count1s
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 05rr                      1-  711     	INCR	_count1s,F
     0031 2164                      1-  712     	MOVIA	0x64
     0032 04rr                      1-  713     	SUBAR	_count1s,W
     0033 0803                      1-  714     	BTRSS	STATUS,0
                                    1-  715     	MGOTO	_00126_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  716     	.line	145, "main.c"; 	count1s = 0;
     0035 02rr                      1-  717     	CLRR	_count1s
                                    1-  718     	.line	146, "main.c"; 	if(chrgFlag == 1 && pwStep == 6)
                                    1-  719     	BANKSEL	_Status
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 09rr                      1-  720     	BTRSS	_Status,3
                                    1-  721     	MGOTO	_00112_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  722     	BANKSEL	_pwStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1-  723     	MOVR	_pwStep,W
     003B 2406                      1-  724     	XORIA	0x06
     003C 0903                      1-  725     	BTRSS	STATUS,2
                                    1-  726     	MGOTO	_00112_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  727     	.line	148, "main.c"; 	++chrgTime;
                                    1-  728     	BANKSEL	_chrgTime
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 05rr                      1-  729     	INCR	_chrgTime,F
     0040 0D03                      1-  730     	BTRSC	STATUS,2
     0041 05rr                      1-  731     	INCR	(_chrgTime + 1),F
     0042                           1-  732     _00112_DS_:
                                    1-  733     	.line	151, "main.c"; 	if(ledLightTime > 0)
                                    1-  734     	BANKSEL	_ledLightTime
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1-  735     	MOVR	_ledLightTime,W
     0044 0903                      1-  736     	BTRSS	STATUS,2
                                    1-  737     	.line	152, "main.c"; 	--ledLightTime;
     0045 06rr                      1-  738     	DECR	_ledLightTime,F
                                    1-  739     	.line	153, "main.c"; 	if(shanshuoTime > 0)
                                    1-  740     	BANKSEL	_shanshuoTime
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 01rr                      1-  741     	MOVR	_shanshuoTime,W
     0048 0903                      1-  742     	BTRSS	STATUS,2
                                    1-  743     	.line	154, "main.c"; 	--shanshuoTime;
     0049 06rr                      1-  744     	DECR	_shanshuoTime,F
                                    1-  745     	.line	155, "main.c"; 	if(workStep)
                                    1-  746     	BANKSEL	_workStep
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1-  747     	MOVR	_workStep,W
     004C 0D03                      1-  748     	BTRSC	STATUS,2
                                    1-  749     	MGOTO	_00119_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  750     	.line	157, "main.c"; 	++count900s;
                                    1-  751     	BANKSEL	_count900s
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 05rr                      1-  752     	INCR	_count900s,F
     0050 0D03                      1-  753     	BTRSC	STATUS,2
     0051 05rr                      1-  754     	INCR	(_count900s + 1),F
                                    1-  755     	MGOTO	_00126_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
     0053                           1-  756     _00119_DS_:
                                    1-  757     	.line	161, "main.c"; 	count900s = 0;
                                    1-  758     	BANKSEL	_count900s
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 02rr                      1-  759     	CLRR	_count900s
     0055 02rr                      1-  760     	CLRR	(_count900s + 1)
     0056                           1-  761     _00126_DS_:
                                    1-  762     	.line	170, "main.c"; 	if(INTFbits.PABIF)
     0056 08rr                      1-  763     	BTRSS	_INTFbits,1
                                    1-  764     	MGOTO	_00128_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  765     	.line	172, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0058 21FD                      1-  766     	MOVIA	0xfd
     0059 00rr                      1-  767     	MOVAR	_INTF
     005A                           1-  768     _00128_DS_:
                                    1-  769     	.line	175, "main.c"; 	INTF = 0;
     005A 02rr                      1-  770     	CLRR	_INTF
                                    1-  771     	.line	177, "main.c"; 	}
                                    1-  772     	BANKSEL	___sdcc_saved_stk01
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 01rr                      1-  773     	MOVR	___sdcc_saved_stk01,W
     005D 00rr                      1-  774     	MOVAR	STK01
                                    1-  775     	BANKSEL	___sdcc_saved_stk00
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 01rr                      1-  776     	MOVR	___sdcc_saved_stk00,W
     0060 00rr                      1-  777     	MOVAR	STK00
                                    1-  778     	BANKSEL	___sdcc_saved_fsr
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1-  779     	MOVR	___sdcc_saved_fsr,W
     0063 0084                      1-  780     	MOVAR	FSR
     0064 01rr                      1-  781     	MOVR	PSAVE,W
     0065 008A                      1-  782     	MOVAR	PCHBUF
     0066 0283                      1-  783     	CLRR	STATUS
     0067 15rr                      1-  784     	SWAPR	SSAVE,W
     0068 0083                      1-  785     	MOVAR	STATUS
     0069 15rr                      1-  786     	SWAPR	WSAVE,F
     006A 15rr                      1-  787     	SWAPR	WSAVE,W
     006B                           1-  788     END_OF_INTERRUPT:
     006B 0011                      1-  789     	RETIE	
                                    1-  791     ;--------------------------------------------------------
                                    1-  792     ; code
                                    1-  793     ;--------------------------------------------------------
                                    1-  794     ;***
                                    1-  795     ;  pBlock Stats: dbName = M
                                    1-  796     ;***
                                    1-  797     ;has an exit
                                    1-  798     ;functions called:
                                    1-  799     ;   _initSys
                                    1-  800     ;   _initAD
                                    1-  801     ;   _ledShow
                                    1-  802     ;   _pwmStop
                                    1-  803     ;   _powerOff
                                    1-  804     ;   _keyCtr
                                    1-  805     ;   _checkBatAD
                                    1-  806     ;   _initAD
                                    1-  807     ;   _checkOutA
                                    1-  808     ;   _chrgCtr
                                    1-  809     ;   _gotoSleep
                                    1-  810     ;   _powerOff
                                    1-  811     ;   _initSys
                                    1-  812     ;   _initAD
                                    1-  813     ;   _ledShow
                                    1-  814     ;   _pwmStop
                                    1-  815     ;   _powerOff
                                    1-  816     ;   _keyCtr
                                    1-  817     ;   _checkBatAD
                                    1-  818     ;   _initAD
                                    1-  819     ;   _checkOutA
                                    1-  820     ;   _chrgCtr
                                    1-  821     ;   _gotoSleep
                                    1-  822     ;   _powerOff
                                    1-  823     ;; Starting pCode block
                                    1-  824     .segment "code"; module=main, function=_main
     0000                           1-  826     _main:
                                    1-  827     ; 2 exit points
                                    1-  828     	.line	181, "main.c"; 	initSys();
                                    1-  829     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  830     	.line	182, "main.c"; 	initAD();
                                    1-  831     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  832     _00169_DS_:
                                    1-  833     	.line	185, "main.c"; 	CLRWDT();
     0002 0002                      1-  834     	clrwdt
                                    1-  835     	.line	186, "main.c"; 	ledShow();
                                    1-  836     	MCALL	_ledShow
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  837     	.line	200, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  838     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  839     	MOVR	_workStep,W
     0006 0D03                      1-  840     	BTRSC	STATUS,2
                                    1-  841     	MGOTO	_00134_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  842     	BANKSEL	_currentDuty
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 01rr                      1-  843     	MOVR	_currentDuty,W
                                    1-  844     	BANKSEL	_maxDuty
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 04rr                      1-  845     	SUBAR	_maxDuty,W
     000C 0C03                      1-  846     	BTRSC	STATUS,0
                                    1-  847     	MGOTO	_00134_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  848     	.line	203, "main.c"; 	currentDuty = currentDuty - 1;
                                    1-  849     	BANKSEL	_currentDuty
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 06rr                      1-  850     	DECR	_currentDuty,F
                                    1-  851     	.line	204, "main.c"; 	PWM2DUTY = currentDuty;
     0010 01rr                      1-  852     	MOVR	_currentDuty,W
     0011 00rr                      1-  853     	SFUN	_PWM2DUTY
                                    1-  854     	.line	205, "main.c"; 	cDuty = currentDuty;
     0012 01rr                      1-  855     	MOVR	_currentDuty,W
                                    1-  856     	BANKSEL	_cDuty
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 00rr                      1-  857     	MOVAR	_cDuty
     0015                           1-  858     _00134_DS_:
                                    1-  859     	.line	208, "main.c"; 	if(!IntFlag)
                                    1-  860     	BANKSEL	_Status
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 08rr                      1-  861     	BTRSS	_Status,0
                                    1-  862     	MGOTO	_00169_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  863     	.line	210, "main.c"; 	IntFlag = 0;
     0018 1Crr                      1-  864     	BCR	_Status,0
                                    1-  865     	.line	212, "main.c"; 	if(shanshuoTime == 0 && pwStep == 0 && workStep > 0)
                                    1-  866     	BANKSEL	_shanshuoTime
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1-  867     	MOVR	_shanshuoTime,W
     001B 0903                      1-  868     	BTRSS	STATUS,2
                                    1-  869     	MGOTO	_00141_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  870     	BANKSEL	_pwStep
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1-  871     	MOVR	_pwStep,W
     001F 0903                      1-  872     	BTRSS	STATUS,2
                                    1-  873     	MGOTO	_00141_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  874     	BANKSEL	_workStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1-  875     	MOVR	_workStep,W
     0023 0D03                      1-  876     	BTRSC	STATUS,2
                                    1-  877     	MGOTO	_00141_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  878     	.line	214, "main.c"; 	if(++closeCount > 100)
                                    1-  879     	BANKSEL	_closeCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 05rr                      1-  880     	INCR	_closeCount,F
     0027 0D03                      1-  881     	BTRSC	STATUS,2
     0028 05rr                      1-  882     	INCR	(_closeCount + 1),F
                                    1-  883     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  884     ;;unsigned compare: left >= lit (0x65=101), size=2
     0029 2100                      1-  885     	MOVIA	0x00
     002A 04rr                      1-  886     	SUBAR	(_closeCount + 1),W
     002B 0903                      1-  887     	BTRSS	STATUS,2
                                    1-  888     	MGOTO	_00240_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
     002D 2165                      1-  889     	MOVIA	0x65
     002E 04rr                      1-  890     	SUBAR	_closeCount,W
     002F                           1-  891     _00240_DS_:
     002F 0803                      1-  892     	BTRSS	STATUS,0
                                    1-  893     	MGOTO	_00142_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  894     	.line	216, "main.c"; 	closeFlag = 1;
     0031 2101                      1-  895     	MOVIA	0x01
                                    1-  896     	BANKSEL	_closeFlag
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 00rr                      1-  897     	MOVAR	_closeFlag
                                    1-  898     	.line	217, "main.c"; 	closeCount = 0;
                                    1-  899     	BANKSEL	_closeCount
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 02rr                      1-  900     	CLRR	_closeCount
     0036 02rr                      1-  901     	CLRR	(_closeCount + 1)
                                    1-  902     	.line	218, "main.c"; 	workStep = 0;
                                    1-  903     	BANKSEL	_workStep
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 02rr                      1-  904     	CLRR	_workStep
                                    1-  905     	.line	219, "main.c"; 	ledStep = 0;
                                    1-  906     	BANKSEL	_ledStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 02rr                      1-  907     	CLRR	_ledStep
                                    1-  908     	.line	220, "main.c"; 	pwmStop();
                                    1-  909     	MCALL	_pwmStop
     003B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  910     	MGOTO	_00142_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D                           1-  911     _00141_DS_:
                                    1-  912     	.line	225, "main.c"; 	closeCount = 0;
                                    1-  913     	BANKSEL	_closeCount
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 02rr                      1-  914     	CLRR	_closeCount
     003F 02rr                      1-  915     	CLRR	(_closeCount + 1)
                                    1-  916     ;;unsigned compare: left < lit (0x5=5), size=1
     0040                           1-  917     _00142_DS_:
                                    1-  918     	.line	228, "main.c"; 	if(overCount >= 5 && workStep > 0)
     0040 2105                      1-  919     	MOVIA	0x05
                                    1-  920     	BANKSEL	_overCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 04rr                      1-  921     	SUBAR	_overCount,W
     0043 0803                      1-  922     	BTRSS	STATUS,0
                                    1-  923     	MGOTO	_00148_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  924     	BANKSEL	_workStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1-  925     	MOVR	_workStep,W
     0047 0D03                      1-  926     	BTRSC	STATUS,2
                                    1-  927     	MGOTO	_00148_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  928     	.line	230, "main.c"; 	if(++count5S > 500)
                                    1-  929     	BANKSEL	_count5S
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 05rr                      1-  930     	INCR	_count5S,F
     004B 0D03                      1-  931     	BTRSC	STATUS,2
     004C 05rr                      1-  932     	INCR	(_count5S + 1),F
                                    1-  933     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  934     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     004D 2101                      1-  935     	MOVIA	0x01
     004E 04rr                      1-  936     	SUBAR	(_count5S + 1),W
     004F 0903                      1-  937     	BTRSS	STATUS,2
                                    1-  938     	MGOTO	_00242_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
     0051 21F5                      1-  939     	MOVIA	0xf5
     0052 04rr                      1-  940     	SUBAR	_count5S,W
     0053                           1-  941     _00242_DS_:
     0053 0803                      1-  942     	BTRSS	STATUS,0
                                    1-  943     	MGOTO	_00149_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  944     	.line	232, "main.c"; 	overCount = 0;
                                    1-  945     	BANKSEL	_overCount
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 02rr                      1-  946     	CLRR	_overCount
                                    1-  947     	.line	233, "main.c"; 	count5S = 0;
                                    1-  948     	BANKSEL	_count5S
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 02rr                      1-  949     	CLRR	_count5S
     0059 02rr                      1-  950     	CLRR	(_count5S + 1)
                                    1-  951     	.line	234, "main.c"; 	ledDeadTime = 25;
     005A 2119                      1-  952     	MOVIA	0x19
                                    1-  953     	BANKSEL	_ledDeadTime
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 00rr                      1-  954     	MOVAR	_ledDeadTime
                                    1-  955     	.line	235, "main.c"; 	powerOff();
                                    1-  956     	MCALL	_powerOff
     005D 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  957     	MGOTO	_00149_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
     005F                           1-  958     _00148_DS_:
                                    1-  959     	.line	240, "main.c"; 	count5S = 0;
                                    1-  960     	BANKSEL	_count5S
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 02rr                      1-  961     	CLRR	_count5S
     0061 02rr                      1-  962     	CLRR	(_count5S + 1)
     0062                           1-  963     _00149_DS_:
                                    1-  964     	.line	242, "main.c"; 	if(chrgFlag == 0)
                                    1-  965     	BANKSEL	_Status
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 09rr                      1-  966     	BTRSS	_Status,3
                                    1-  967     	.line	243, "main.c"; 	keyCtr();
                                    1-  968     	MCALL	_keyCtr
     0064 2rrr                      3-   66 m1      LCALL rom_address
     0065                           1-  969     _00152_DS_:
                                    1-  970     	.line	244, "main.c"; 	if(count200ms < 3)
     0065 2103                      1-  971     	MOVIA	0x03
                                    1-  972     	BANKSEL	_count200ms
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 04rr                      1-  973     	SUBAR	_count200ms,W
     0068 0803                      1-  974     	BTRSS	STATUS,0
                                    1-  975     	.line	246, "main.c"; 	checkBatAD();
                                    1-  976     	MCALL	_checkBatAD
     0069 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  977     	.line	248, "main.c"; 	if(pwStep == 0)
                                    1-  978     	BANKSEL	_pwStep
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 01rr                      1-  979     	MOVR	_pwStep,W
     006C 0D03                      1-  980     	BTRSC	STATUS,2
                                    1-  981     	.line	250, "main.c"; 	initAD();
                                    1-  982     	MCALL	_initAD
     006D 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  983     	.line	252, "main.c"; 	checkOutA();
                                    1-  984     	MCALL	_checkOutA
     006E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  985     	.line	253, "main.c"; 	chrgCtr();
                                    1-  986     	MCALL	_chrgCtr
     006F 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  987     	.line	256, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x08) == 0 && ledLightTime == 0 && ledDeadTime == 0 && shanshuoTime == 0)
                                    1-  988     	BANKSEL	_workStep
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 01rr                      1-  989     	MOVR	_workStep,W
     0072 0903                      1-  990     	BTRSS	STATUS,2
                                    1-  991     	MGOTO	_00160_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  992     	BANKSEL	_keyCount
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 01rr                      1-  993     	MOVR	_keyCount,W
     0076 0903                      1-  994     	BTRSS	STATUS,2
                                    1-  995     	MGOTO	_00160_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  996     	BANKSEL	_PORTA
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 0Drr                      1-  997     	BTRSC	_PORTA,3
                                    1-  998     	MGOTO	_00160_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  999     	BANKSEL	_ledLightTime
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 01rr                      1- 1000     	MOVR	_ledLightTime,W
     007D 0903                      1- 1001     	BTRSS	STATUS,2
                                    1- 1002     	MGOTO	_00160_DS_
     007E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1003     	BANKSEL	_ledDeadTime
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 01rr                      1- 1004     	MOVR	_ledDeadTime,W
     0081 0903                      1- 1005     	BTRSS	STATUS,2
                                    1- 1006     	MGOTO	_00160_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1007     	BANKSEL	_shanshuoTime
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 01rr                      1- 1008     	MOVR	_shanshuoTime,W
     0085 0903                      1- 1009     	BTRSS	STATUS,2
                                    1- 1010     	MGOTO	_00160_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1011     	.line	258, "main.c"; 	if(++sleepTime > 20)
                                    1- 1012     	BANKSEL	_sleepTime
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 05rr                      1- 1013     	INCR	_sleepTime,F
     0089 0D03                      1- 1014     	BTRSC	STATUS,2
     008A 05rr                      1- 1015     	INCR	(_sleepTime + 1),F
                                    1- 1016     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1017     ;;unsigned compare: left >= lit (0x15=21), size=2
     008B 2100                      1- 1018     	MOVIA	0x00
     008C 04rr                      1- 1019     	SUBAR	(_sleepTime + 1),W
     008D 0903                      1- 1020     	BTRSS	STATUS,2
                                    1- 1021     	MGOTO	_00244_DS_
     008E 3rrr                      3-   63 m1      LGOTO rom_address
     008F 2115                      1- 1022     	MOVIA	0x15
     0090 04rr                      1- 1023     	SUBAR	_sleepTime,W
     0091                           1- 1024     _00244_DS_:
     0091 0803                      1- 1025     	BTRSS	STATUS,0
                                    1- 1026     	MGOTO	_00160_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1027     	.line	260, "main.c"; 	gotoSleep();
                                    1- 1028     	MCALL	_gotoSleep
     0093 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1029     ;;unsigned compare: left < lit (0x384=900), size=2
     0094                           1- 1030     _00160_DS_:
                                    1- 1031     	.line	264, "main.c"; 	if(count900s >= 900)
     0094 2103                      1- 1032     	MOVIA	0x03
                                    1- 1033     	BANKSEL	_count900s
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 04rr                      1- 1034     	SUBAR	(_count900s + 1),W
     0097 0903                      1- 1035     	BTRSS	STATUS,2
                                    1- 1036     	MGOTO	_00245_DS_
     0098 3rrr                      3-   63 m1      LGOTO rom_address
     0099 2184                      1- 1037     	MOVIA	0x84
     009A 04rr                      1- 1038     	SUBAR	_count900s,W
     009B                           1- 1039     _00245_DS_:
     009B 0803                      1- 1040     	BTRSS	STATUS,0
                                    1- 1041     	MGOTO	_00169_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1042     	.line	266, "main.c"; 	powerOff();
                                    1- 1043     	MCALL	_powerOff
     009D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1044     	MGOTO	_00169_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1045     	.line	270, "main.c"; 	}
                                    1- 1046     	RETURN	
     009F 0010                      3-   40 m1      ret
                                    1- 1047     ; exit point of _main
                                    1- 1049     ;***
                                    1- 1050     ;  pBlock Stats: dbName = C
                                    1- 1051     ;***
                                    1- 1052     ;has an exit
                                    1- 1053     ;; Starting pCode block
                                    1- 1054     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1056     _F_wait_eoc:
                                    1- 1057     ; 2 exit points
     0000                           1- 1058     _00711_DS_:
                                    1- 1059     	.line	985, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1060     	BTRSS	_ADMDbits,5
                                    1- 1061     	MGOTO	_00711_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1062     	.line	987, "main.c"; 	}
                                    1- 1063     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1064     ; exit point of _F_wait_eoc
                                    1- 1066     ;***
                                    1- 1067     ;  pBlock Stats: dbName = C
                                    1- 1068     ;***
                                    1- 1069     ;has an exit
                                    1- 1070     ;functions called:
                                    1- 1071     ;   _delay
                                    1- 1072     ;   _F_wait_eoc
                                    1- 1073     ;   _delay
                                    1- 1074     ;   _F_wait_eoc
                                    1- 1075     ;6 compiler assigned registers:
                                    1- 1076     ;   r0x103D
                                    1- 1077     ;   r0x103E
                                    1- 1078     ;   r0x103F
                                    1- 1079     ;   r0x1040
                                    1- 1080     ;   r0x1041
                                    1- 1081     ;   r0x1042
                                    1- 1082     ;; Starting pCode block
                                    1- 1083     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1085     ;local variable name mapping:
     0000                           1- 1088     _F_AIN2_Convert:
                                    1- 1089     ; 2 exit points
                                    1- 1090     	.line	968, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1091     	BANKSEL	r0x103D
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1092     	MOVAR	r0x103D
                                    1- 1093     	.line	970, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1094     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1095     	CLRR	_R_AIN2_DATA_LB
                                    1- 1096     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1097     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1098     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1099     	.line	972, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1100     	MOVIA	0x94
     0008 00rr                      1- 1101     	MOVAR	_ADMD
                                    1- 1102     	.line	973, "main.c"; 	delay(200);	
     0009 21C8                      1- 1103     	MOVIA	0xc8
                                    1- 1104     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1105     	.line	974, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1106     	MOVIA	0x01
                                    1- 1107     	BANKSEL	r0x103E
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1108     	MOVAR	r0x103E
     000E                           1- 1109     _00704_DS_:
                                    1- 1110     	BANKSEL	r0x103E
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1111     	MOVR	r0x103E,W
                                    1- 1112     	BANKSEL	r0x103D
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1113     	SUBAR	r0x103D,W
     0012 0803                      1- 1114     	BTRSS	STATUS,0
                                    1- 1115     	MGOTO	_00706_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1116     	.line	976, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1117     	BSR	_ADMDbits,6
                                    1- 1118     	.line	977, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1119     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1120     	.line	978, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1121     	MOVIA	0x0f
     0017 10rr                      1- 1122     	ANDAR	_ADR,W
                                    1- 1123     ;;3	MOVAR	r0x103F
                                    1- 1124     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1125     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1126     	.line	979, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1- 1127     	MOVR	_ADD,W
                                    1- 1128     	BANKSEL	r0x103F
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1129     	MOVAR	r0x103F
                                    1- 1130     ;;1	CLRR	r0x1040
                                    1- 1131     ;;106	MOVR	r0x103F,W
                                    1- 1132     ;;104	MOVAR	r0x1041
     001D 2100                      1- 1133     	MOVIA	0x00
                                    1- 1134     	BANKSEL	r0x1042
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1135     	MOVAR	r0x1042
                                    1- 1136     ;;105	MOVR	r0x1041,W
                                    1- 1137     	BANKSEL	r0x103F
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1138     	MOVR	r0x103F,W
                                    1- 1139     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1140     	ADDAR	_R_AIN2_DATA,F
                                    1- 1141     	BANKSEL	r0x1042
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1142     	MOVR	r0x1042,W
     0026 0C03                      1- 1143     	BTRSC	STATUS,0
     0027 05rr                      1- 1144     	INCR	r0x1042,W
     0028 0D03                      1- 1145     	BTRSC	STATUS,2
                                    1- 1146     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1147     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1148     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1- 1149     _00001_DS_:
                                    1- 1150     	.line	974, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1151     	BANKSEL	r0x103E
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1152     	INCR	r0x103E,F
                                    1- 1153     	MGOTO	_00704_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1154     _00706_DS_:
                                    1- 1155     	.line	981, "main.c"; 	}
                                    1- 1156     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1157     ; exit point of _F_AIN2_Convert
                                    1- 1159     ;***
                                    1- 1160     ;  pBlock Stats: dbName = C
                                    1- 1161     ;***
                                    1- 1162     ;has an exit
                                    1- 1163     ;functions called:
                                    1- 1164     ;   _delay
                                    1- 1165     ;   _F_wait_eoc
                                    1- 1166     ;   _delay
                                    1- 1167     ;   _F_wait_eoc
                                    1- 1168     ;6 compiler assigned registers:
                                    1- 1169     ;   r0x1043
                                    1- 1170     ;   r0x1044
                                    1- 1171     ;   r0x1045
                                    1- 1172     ;   r0x1046
                                    1- 1173     ;   r0x1047
                                    1- 1174     ;   r0x1048
                                    1- 1175     ;; Starting pCode block
                                    1- 1176     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1178     ;local variable name mapping:
     0000                           1- 1181     _F_AIN4_Convert:
                                    1- 1182     ; 2 exit points
                                    1- 1183     	.line	953, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1184     	BANKSEL	r0x1043
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1185     	MOVAR	r0x1043
                                    1- 1186     	.line	955, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1187     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1188     	CLRR	_R_AIN4_DATA_LB
                                    1- 1189     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1190     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1191     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1192     	.line	957, "main.c"; 	ADMD  = 0x90 | C_ADC_PB1;				// Select AIN6(PB1) pad as ADC input
     0007 2196                      1- 1193     	MOVIA	0x96
     0008 00rr                      1- 1194     	MOVAR	_ADMD
                                    1- 1195     	.line	958, "main.c"; 	delay(200);	
     0009 21C8                      1- 1196     	MOVIA	0xc8
                                    1- 1197     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1198     	.line	959, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1199     	MOVIA	0x01
                                    1- 1200     	BANKSEL	r0x1044
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1201     	MOVAR	r0x1044
     000E                           1- 1202     _00695_DS_:
                                    1- 1203     	BANKSEL	r0x1044
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1204     	MOVR	r0x1044,W
                                    1- 1205     	BANKSEL	r0x1043
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1206     	SUBAR	r0x1043,W
     0012 0803                      1- 1207     	BTRSS	STATUS,0
                                    1- 1208     	MGOTO	_00697_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1209     	.line	961, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1210     	BSR	_ADMDbits,6
                                    1- 1211     	.line	962, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1212     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1213     	.line	963, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1214     	MOVIA	0x0f
     0017 10rr                      1- 1215     	ANDAR	_ADR,W
                                    1- 1216     ;;3	MOVAR	r0x1045
                                    1- 1217     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1218     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1219     	.line	964, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1220     	MOVR	_ADD,W
                                    1- 1221     	BANKSEL	r0x1045
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1222     	MOVAR	r0x1045
                                    1- 1223     ;;1	CLRR	r0x1046
                                    1- 1224     ;;103	MOVR	r0x1045,W
                                    1- 1225     ;;101	MOVAR	r0x1047
     001D 2100                      1- 1226     	MOVIA	0x00
                                    1- 1227     	BANKSEL	r0x1048
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1228     	MOVAR	r0x1048
                                    1- 1229     ;;102	MOVR	r0x1047,W
                                    1- 1230     	BANKSEL	r0x1045
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1231     	MOVR	r0x1045,W
                                    1- 1232     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1233     	ADDAR	_R_AIN4_DATA,F
                                    1- 1234     	BANKSEL	r0x1048
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1235     	MOVR	r0x1048,W
     0026 0C03                      1- 1236     	BTRSC	STATUS,0
     0027 05rr                      1- 1237     	INCR	r0x1048,W
     0028 0D03                      1- 1238     	BTRSC	STATUS,2
                                    1- 1239     	MGOTO	_00002_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1240     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1241     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1242     _00002_DS_:
                                    1- 1243     	.line	959, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1244     	BANKSEL	r0x1044
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1245     	INCR	r0x1044,F
                                    1- 1246     	MGOTO	_00695_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1247     _00697_DS_:
                                    1- 1248     	.line	966, "main.c"; 	}
                                    1- 1249     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1250     ; exit point of _F_AIN4_Convert
                                    1- 1252     ;***
                                    1- 1253     ;  pBlock Stats: dbName = C
                                    1- 1254     ;***
                                    1- 1255     ;has an exit
                                    1- 1256     ;functions called:
                                    1- 1257     ;   _F_AIN4_Convert
                                    1- 1258     ;   __divuint
                                    1- 1259     ;   _F_AIN4_Convert
                                    1- 1260     ;   __divuint
                                    1- 1261     ;7 compiler assigned registers:
                                    1- 1262     ;   r0x1049
                                    1- 1263     ;   r0x104A
                                    1- 1264     ;   r0x104B
                                    1- 1265     ;   r0x104C
                                    1- 1266     ;   STK02
                                    1- 1267     ;   STK01
                                    1- 1268     ;   STK00
                                    1- 1269     ;; Starting pCode block
                                    1- 1270     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1272     _checkOutA:
                                    1- 1273     ; 2 exit points
                                    1- 1274     	.line	857, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1275     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1276     	CLRR	_R_AIN4_DATA_LB
                                    1- 1277     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1278     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1279     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1280     	.line	858, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1281     	MOVIA	0x08
                                    1- 1282     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1283     	.line	859, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1284     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1285     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1286     	ANDIA	0xf0
     000A 00rr                      1- 1287     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1288     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1289     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1290     	ANDIA	0x0f
     000E 11rr                      1- 1291     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1292     	XORAR	_R_AIN4_DATA,F
                                    1- 1293     	.line	860, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1294     	MOVIA	0xf0
                                    1- 1295     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1296     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1297     	.line	861, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1298     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1299     	BANKSEL	r0x104B
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1300     	MOVAR	r0x104B
                                    1- 1301     ;;1	MOVAR	r0x1049
                                    1- 1302     ;;1	CLRR	r0x104A
                                    1- 1303     ;;100	MOVR	r0x1049,W
     0016 2100                      1- 1304     	MOVIA	0x00
                                    1- 1305     	BANKSEL	r0x104C
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1306     	MOVAR	r0x104C
                                    1- 1307     	BANKSEL	r0x104B
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1308     	MOVR	r0x104B,W
                                    1- 1309     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1310     	ADDAR	_R_AIN4_DATA,F
                                    1- 1311     	BANKSEL	r0x104C
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1312     	MOVR	r0x104C,W
     001F 0C03                      1- 1313     	BTRSC	STATUS,0
     0020 05rr                      1- 1314     	INCR	r0x104C,W
     0021 0D03                      1- 1315     	BTRSC	STATUS,2
                                    1- 1316     	MGOTO	_00003_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1317     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1318     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1319     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1320     _00003_DS_:
                                    1- 1321     	.line	862, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1322     	BCR	STATUS,0
                                    1- 1323     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1324     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1325     	RRR	_R_AIN4_DATA,F
                                    1- 1326     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1327     	BCR	STATUS,0
     002A 13rr                      1- 1328     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1329     	RRR	_R_AIN4_DATA,F
                                    1- 1330     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1331     	BCR	STATUS,0
     002D 13rr                      1- 1332     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1333     	RRR	_R_AIN4_DATA,F
                                    1- 1334     	.line	863, "main.c"; 	tempSum += R_AIN4_DATA;
     002F 01rr                      1- 1335     	MOVR	_R_AIN4_DATA,W
                                    1- 1336     	BANKSEL	_tempSum
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 03rr                      1- 1337     	ADDAR	_tempSum,F
                                    1- 1338     	BANKSEL	_R_AIN4_DATA
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 01rr                      1- 1339     	MOVR	(_R_AIN4_DATA + 1),W
     0034 0C03                      1- 1340     	BTRSC	STATUS,0
     0035 05rr                      1- 1341     	INCR	(_R_AIN4_DATA + 1),W
     0036 0D03                      1- 1342     	BTRSC	STATUS,2
                                    1- 1343     	MGOTO	_00004_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1344     	BANKSEL	_tempSum
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 03rr                      1- 1345     	ADDAR	(_tempSum + 1),F
     003A                           1- 1346     _00004_DS_:
                                    1- 1347     	.line	864, "main.c"; 	if(++count100 >= 10)
                                    1- 1348     	BANKSEL	_count100
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 05rr                      1- 1349     	INCR	_count100,F
                                    1- 1350     ;;unsigned compare: left < lit (0xA=10), size=1
     003C 210A                      1- 1351     	MOVIA	0x0a
     003D 04rr                      1- 1352     	SUBAR	_count100,W
     003E 0803                      1- 1353     	BTRSS	STATUS,0
                                    1- 1354     	MGOTO	_00685_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1355     	.line	866, "main.c"; 	count100 = 0;
     0040 02rr                      1- 1356     	CLRR	_count100
                                    1- 1357     	.line	867, "main.c"; 	tempResult = tempSum/10;
     0041 210A                      1- 1358     	MOVIA	0x0a
     0042 00rr                      1- 1359     	MOVAR	STK02
     0043 2100                      1- 1360     	MOVIA	0x00
     0044 00rr                      1- 1361     	MOVAR	STK01
                                    1- 1362     	BANKSEL	_tempSum
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1- 1363     	MOVR	_tempSum,W
     0047 00rr                      1- 1364     	MOVAR	STK00
     0048 01rr                      1- 1365     	MOVR	(_tempSum + 1),W
                                    1- 1366     	MCALL	__divuint
     0049 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1367     	BANKSEL	_tempResult
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 00rr                      1- 1368     	MOVAR	(_tempResult + 1)
     004C 01rr                      1- 1369     	MOVR	STK00,W
     004D 00rr                      1- 1370     	MOVAR	_tempResult
                                    1- 1371     	.line	868, "main.c"; 	tempSum = 0;
                                    1- 1372     	BANKSEL	_tempSum
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 02rr                      1- 1373     	CLRR	_tempSum
     0050 02rr                      1- 1374     	CLRR	(_tempSum + 1)
     0051                           1- 1375     _00685_DS_:
                                    1- 1376     	.line	941, "main.c"; 	if(workStep > 0)
                                    1- 1377     	BANKSEL	_workStep
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 01rr                      1- 1378     	MOVR	_workStep,W
     0053 0D03                      1- 1379     	BTRSC	STATUS,2
                                    1- 1380     	MGOTO	_00688_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1381     	.line	942, "main.c"; 	ledStep = workStep;
     0055 01rr                      1- 1382     	MOVR	_workStep,W
                                    1- 1383     	BANKSEL	_ledStep
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 00rr                      1- 1384     	MOVAR	_ledStep
     0058                           1- 1385     _00688_DS_:
                                    1- 1386     	.line	946, "main.c"; 	}
                                    1- 1387     	RETURN	
     0058 0010                      3-   40 m1      ret
                                    1- 1388     ; exit point of _checkOutA
                                    1- 1390     ;***
                                    1- 1391     ;  pBlock Stats: dbName = C
                                    1- 1392     ;***
                                    1- 1393     ;has an exit
                                    1- 1394     ;functions called:
                                    1- 1395     ;   _F_AIN2_Convert
                                    1- 1396     ;   _F_AIN2_Convert
                                    1- 1397     ;4 compiler assigned registers:
                                    1- 1398     ;   r0x104D
                                    1- 1399     ;   r0x104E
                                    1- 1400     ;   r0x104F
                                    1- 1401     ;   r0x1050
                                    1- 1402     ;; Starting pCode block
                                    1- 1403     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1405     _checkBatAD:
                                    1- 1406     ; 2 exit points
                                    1- 1407     	.line	800, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1408     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1409     	CLRR	_R_AIN2_DATA_LB
                                    1- 1410     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1411     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1412     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1413     	.line	801, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1414     	MOVIA	0x08
                                    1- 1415     	MCALL	_F_AIN2_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1416     	.line	802, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1417     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1418     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1419     	ANDIA	0xf0
     000A 00rr                      1- 1420     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1421     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1422     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1423     	ANDIA	0x0f
     000E 11rr                      1- 1424     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1425     	XORAR	_R_AIN2_DATA,F
                                    1- 1426     	.line	803, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1427     	MOVIA	0xf0
                                    1- 1428     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1429     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1430     	.line	804, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1431     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1432     	BANKSEL	r0x104F
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1433     	MOVAR	r0x104F
                                    1- 1434     ;;1	MOVAR	r0x104D
                                    1- 1435     ;;1	CLRR	r0x104E
                                    1- 1436     ;;99	MOVR	r0x104D,W
     0016 2100                      1- 1437     	MOVIA	0x00
                                    1- 1438     	BANKSEL	r0x1050
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1439     	MOVAR	r0x1050
                                    1- 1440     	BANKSEL	r0x104F
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1441     	MOVR	r0x104F,W
                                    1- 1442     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1443     	ADDAR	_R_AIN2_DATA,F
                                    1- 1444     	BANKSEL	r0x1050
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1445     	MOVR	r0x1050,W
     001F 0C03                      1- 1446     	BTRSC	STATUS,0
     0020 05rr                      1- 1447     	INCR	r0x1050,W
     0021 0D03                      1- 1448     	BTRSC	STATUS,2
                                    1- 1449     	MGOTO	_00005_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1450     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1451     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1452     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1453     _00005_DS_:
                                    1- 1454     	.line	805, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0025 1C03                      1- 1455     	BCR	STATUS,0
                                    1- 1456     	BANKSEL	_R_AIN2_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1457     	RRR	(_R_AIN2_DATA + 1),F
     0028 13rr                      1- 1458     	RRR	_R_AIN2_DATA,F
                                    1- 1459     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1460     	BCR	STATUS,0
     002A 13rr                      1- 1461     	RRR	(_R_AIN2_DATA + 1),F
     002B 13rr                      1- 1462     	RRR	_R_AIN2_DATA,F
                                    1- 1463     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1464     	BCR	STATUS,0
     002D 13rr                      1- 1465     	RRR	(_R_AIN2_DATA + 1),F
     002E 13rr                      1- 1466     	RRR	_R_AIN2_DATA,F
                                    1- 1467     	.line	806, "main.c"; 	if(debug)
                                    1- 1468     	BANKSEL	_debug
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1469     	MOVR	_debug,W
     0031 0D03                      1- 1470     	BTRSC	STATUS,2
                                    1- 1471     	MGOTO	_00597_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1472     	.line	807, "main.c"; 	R_AIN2_DATA = BATTLE;
     0033 210E                      1- 1473     	MOVIA	0x0e
                                    1- 1474     	BANKSEL	_R_AIN2_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1475     	MOVAR	_R_AIN2_DATA
     0036 2106                      1- 1476     	MOVIA	0x06
     0037 00rr                      1- 1477     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1478     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1479     ;;unsigned compare: left >= lit (0x619=1561), size=2
     0038                           1- 1480     _00597_DS_:
                                    1- 1481     	.line	809, "main.c"; 	if(R_AIN2_DATA > 1560)
     0038 2106                      1- 1482     	MOVIA	0x06
                                    1- 1483     	BANKSEL	_R_AIN2_DATA
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1484     	SUBAR	(_R_AIN2_DATA + 1),W
     003B 0903                      1- 1485     	BTRSS	STATUS,2
                                    1- 1486     	MGOTO	_00671_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 2119                      1- 1487     	MOVIA	0x19
     003E 04rr                      1- 1488     	SUBAR	_R_AIN2_DATA,W
     003F                           1- 1489     _00671_DS_:
     003F 0803                      1- 1490     	BTRSS	STATUS,0
                                    1- 1491     	MGOTO	_00622_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1492     	.line	812, "main.c"; 	lowCount = 0;
                                    1- 1493     	BANKSEL	_lowCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 1494     	CLRR	_lowCount
                                    1- 1495     	.line	813, "main.c"; 	pwStep = 8;
     0043 2108                      1- 1496     	MOVIA	0x08
                                    1- 1497     	BANKSEL	_pwStep
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 1498     	MOVAR	_pwStep
                                    1- 1499     	MGOTO	_00623_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1500     ;;unsigned compare: left < lit (0x442=1090), size=2
     0047                           1- 1501     _00622_DS_:
                                    1- 1502     	.line	815, "main.c"; 	else if(R_AIN2_DATA < 1090)
     0047 2104                      1- 1503     	MOVIA	0x04
                                    1- 1504     	BANKSEL	_R_AIN2_DATA
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 04rr                      1- 1505     	SUBAR	(_R_AIN2_DATA + 1),W
     004A 0903                      1- 1506     	BTRSS	STATUS,2
                                    1- 1507     	MGOTO	_00672_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C 2142                      1- 1508     	MOVIA	0x42
     004D 04rr                      1- 1509     	SUBAR	_R_AIN2_DATA,W
     004E                           1- 1510     _00672_DS_:
     004E 0C03                      1- 1511     	BTRSC	STATUS,0
                                    1- 1512     	MGOTO	_00619_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1513     	.line	817, "main.c"; 	pwStep = 0;
                                    1- 1514     	BANKSEL	_pwStep
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 02rr                      1- 1515     	CLRR	_pwStep
                                    1- 1516     	.line	818, "main.c"; 	if(++lowCount < 3)
                                    1- 1517     	BANKSEL	_lowCount
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 05rr                      1- 1518     	INCR	_lowCount,F
                                    1- 1519     ;;unsigned compare: left < lit (0x3=3), size=1
     0054 2103                      1- 1520     	MOVIA	0x03
     0055 04rr                      1- 1521     	SUBAR	_lowCount,W
     0056 0803                      1- 1522     	BTRSS	STATUS,0
                                    1- 1523     	.line	819, "main.c"; 	return;
                                    1- 1524     	MGOTO	_00630_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1525     	.line	820, "main.c"; 	lowCount = 10;
     0058 210A                      1- 1526     	MOVIA	0x0a
     0059 00rr                      1- 1527     	MOVAR	_lowCount
                                    1- 1528     	.line	821, "main.c"; 	pwStep = 0;
                                    1- 1529     	BANKSEL	_pwStep
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 02rr                      1- 1530     	CLRR	_pwStep
                                    1- 1531     	.line	822, "main.c"; 	R_AIN2_DATA = 1090;
     005C 2142                      1- 1532     	MOVIA	0x42
                                    1- 1533     	BANKSEL	_R_AIN2_DATA
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 00rr                      1- 1534     	MOVAR	_R_AIN2_DATA
     005F 2104                      1- 1535     	MOVIA	0x04
     0060 00rr                      1- 1536     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1537     	MGOTO	_00623_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
     0062                           1- 1538     _00619_DS_:
                                    1- 1539     	.line	827, "main.c"; 	lowCount = 0;
                                    1- 1540     	BANKSEL	_lowCount
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 02rr                      1- 1541     	CLRR	_lowCount
                                    1- 1542     	.line	828, "main.c"; 	firstTime = 0;
                                    1- 1543     	BANKSEL	_firstTime
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 02rr                      1- 1544     	CLRR	_firstTime
                                    1- 1545     ;;unsigned compare: left < lit (0x4F6=1270), size=2
                                    1- 1546     	.line	829, "main.c"; 	if(R_AIN2_DATA < 1270)
     0066 2104                      1- 1547     	MOVIA	0x04
                                    1- 1548     	BANKSEL	_R_AIN2_DATA
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 04rr                      1- 1549     	SUBAR	(_R_AIN2_DATA + 1),W
     0069 0903                      1- 1550     	BTRSS	STATUS,2
                                    1- 1551     	MGOTO	_00674_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
     006B 21F6                      1- 1552     	MOVIA	0xf6
     006C 04rr                      1- 1553     	SUBAR	_R_AIN2_DATA,W
     006D                           1- 1554     _00674_DS_:
     006D 0C03                      1- 1555     	BTRSC	STATUS,0
                                    1- 1556     	MGOTO	_00616_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1557     	.line	830, "main.c"; 	pwStep = 1;
     006F 2101                      1- 1558     	MOVIA	0x01
                                    1- 1559     	BANKSEL	_pwStep
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 00rr                      1- 1560     	MOVAR	_pwStep
                                    1- 1561     	MGOTO	_00623_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1562     ;;unsigned compare: left < lit (0x53C=1340), size=2
     0073                           1- 1563     _00616_DS_:
                                    1- 1564     	.line	831, "main.c"; 	else if(R_AIN2_DATA < 1340)
     0073 2105                      1- 1565     	MOVIA	0x05
                                    1- 1566     	BANKSEL	_R_AIN2_DATA
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 04rr                      1- 1567     	SUBAR	(_R_AIN2_DATA + 1),W
     0076 0903                      1- 1568     	BTRSS	STATUS,2
                                    1- 1569     	MGOTO	_00675_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
     0078 213C                      1- 1570     	MOVIA	0x3c
     0079 04rr                      1- 1571     	SUBAR	_R_AIN2_DATA,W
     007A                           1- 1572     _00675_DS_:
     007A 0C03                      1- 1573     	BTRSC	STATUS,0
                                    1- 1574     	MGOTO	_00613_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1575     	.line	832, "main.c"; 	pwStep = 2;
     007C 2102                      1- 1576     	MOVIA	0x02
                                    1- 1577     	BANKSEL	_pwStep
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 00rr                      1- 1578     	MOVAR	_pwStep
                                    1- 1579     	MGOTO	_00623_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1580     ;;unsigned compare: left < lit (0x56E=1390), size=2
     0080                           1- 1581     _00613_DS_:
                                    1- 1582     	.line	833, "main.c"; 	else if(R_AIN2_DATA < 1390)
     0080 2105                      1- 1583     	MOVIA	0x05
                                    1- 1584     	BANKSEL	_R_AIN2_DATA
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 04rr                      1- 1585     	SUBAR	(_R_AIN2_DATA + 1),W
     0083 0903                      1- 1586     	BTRSS	STATUS,2
                                    1- 1587     	MGOTO	_00676_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
     0085 216E                      1- 1588     	MOVIA	0x6e
     0086 04rr                      1- 1589     	SUBAR	_R_AIN2_DATA,W
     0087                           1- 1590     _00676_DS_:
     0087 0C03                      1- 1591     	BTRSC	STATUS,0
                                    1- 1592     	MGOTO	_00610_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1593     	.line	834, "main.c"; 	pwStep = 3;
     0089 2103                      1- 1594     	MOVIA	0x03
                                    1- 1595     	BANKSEL	_pwStep
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 00rr                      1- 1596     	MOVAR	_pwStep
                                    1- 1597     	MGOTO	_00623_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1598     ;;unsigned compare: left < lit (0x5AA=1450), size=2
     008D                           1- 1599     _00610_DS_:
                                    1- 1600     	.line	835, "main.c"; 	else if(R_AIN2_DATA < 1450)
     008D 2105                      1- 1601     	MOVIA	0x05
                                    1- 1602     	BANKSEL	_R_AIN2_DATA
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 04rr                      1- 1603     	SUBAR	(_R_AIN2_DATA + 1),W
     0090 0903                      1- 1604     	BTRSS	STATUS,2
                                    1- 1605     	MGOTO	_00677_DS_
     0091 3rrr                      3-   63 m1      LGOTO rom_address
     0092 21AA                      1- 1606     	MOVIA	0xaa
     0093 04rr                      1- 1607     	SUBAR	_R_AIN2_DATA,W
     0094                           1- 1608     _00677_DS_:
     0094 0C03                      1- 1609     	BTRSC	STATUS,0
                                    1- 1610     	MGOTO	_00607_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1611     	.line	836, "main.c"; 	pwStep = 4;
     0096 2104                      1- 1612     	MOVIA	0x04
                                    1- 1613     	BANKSEL	_pwStep
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 00rr                      1- 1614     	MOVAR	_pwStep
                                    1- 1615     	MGOTO	_00623_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1616     ;;unsigned compare: left < lit (0x5E6=1510), size=2
     009A                           1- 1617     _00607_DS_:
                                    1- 1618     	.line	837, "main.c"; 	else if(R_AIN2_DATA < 1510)
     009A 2105                      1- 1619     	MOVIA	0x05
                                    1- 1620     	BANKSEL	_R_AIN2_DATA
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 04rr                      1- 1621     	SUBAR	(_R_AIN2_DATA + 1),W
     009D 0903                      1- 1622     	BTRSS	STATUS,2
                                    1- 1623     	MGOTO	_00678_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
     009F 21E6                      1- 1624     	MOVIA	0xe6
     00A0 04rr                      1- 1625     	SUBAR	_R_AIN2_DATA,W
     00A1                           1- 1626     _00678_DS_:
     00A1 0C03                      1- 1627     	BTRSC	STATUS,0
                                    1- 1628     	MGOTO	_00604_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1629     	.line	838, "main.c"; 	pwStep = 5;
     00A3 2105                      1- 1630     	MOVIA	0x05
                                    1- 1631     	BANKSEL	_pwStep
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 00rr                      1- 1632     	MOVAR	_pwStep
                                    1- 1633     	MGOTO	_00623_DS_
     00A6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1634     ;;unsigned compare: left < lit (0x604=1540), size=2
     00A7                           1- 1635     _00604_DS_:
                                    1- 1636     	.line	839, "main.c"; 	else if(R_AIN2_DATA < 1540)
     00A7 2106                      1- 1637     	MOVIA	0x06
                                    1- 1638     	BANKSEL	_R_AIN2_DATA
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 04rr                      1- 1639     	SUBAR	(_R_AIN2_DATA + 1),W
     00AA 0903                      1- 1640     	BTRSS	STATUS,2
                                    1- 1641     	MGOTO	_00679_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
     00AC 2104                      1- 1642     	MOVIA	0x04
     00AD 04rr                      1- 1643     	SUBAR	_R_AIN2_DATA,W
     00AE                           1- 1644     _00679_DS_:
     00AE 0C03                      1- 1645     	BTRSC	STATUS,0
                                    1- 1646     	MGOTO	_00601_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1647     	.line	840, "main.c"; 	pwStep = 6;
     00B0 2106                      1- 1648     	MOVIA	0x06
                                    1- 1649     	BANKSEL	_pwStep
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 00rr                      1- 1650     	MOVAR	_pwStep
                                    1- 1651     	MGOTO	_00623_DS_
     00B3 3rrr                      3-   63 m1      LGOTO rom_address
     00B4                           1- 1652     _00601_DS_:
                                    1- 1653     	.line	842, "main.c"; 	pwStep = 7;
     00B4 2107                      1- 1654     	MOVIA	0x07
                                    1- 1655     	BANKSEL	_pwStep
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 00rr                      1- 1656     	MOVAR	_pwStep
     00B7                           1- 1657     _00623_DS_:
                                    1- 1658     	.line	845, "main.c"; 	if(prePwStep == 0 || prePwStep < pwStep)
                                    1- 1659     	BANKSEL	_prePwStep
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 01rr                      1- 1660     	MOVR	_prePwStep,W
     00B9 0D03                      1- 1661     	BTRSC	STATUS,2
                                    1- 1662     	MGOTO	_00624_DS_
     00BA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1663     	BANKSEL	_pwStep
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 01rr                      1- 1664     	MOVR	_pwStep,W
                                    1- 1665     	BANKSEL	_prePwStep
     00BD rrrr                      3-  110 m1      .banksel ram_address
     00BE 04rr                      1- 1666     	SUBAR	_prePwStep,W
     00BF 0C03                      1- 1667     	BTRSC	STATUS,0
                                    1- 1668     	MGOTO	_00625_DS_
     00C0 3rrr                      3-   63 m1      LGOTO rom_address
     00C1                           1- 1669     _00624_DS_:
                                    1- 1670     	.line	846, "main.c"; 	prePwStep = pwStep;
                                    1- 1671     	BANKSEL	_pwStep
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 01rr                      1- 1672     	MOVR	_pwStep,W
                                    1- 1673     	BANKSEL	_prePwStep
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 00rr                      1- 1674     	MOVAR	_prePwStep
     00C5                           1- 1675     _00625_DS_:
                                    1- 1676     	.line	848, "main.c"; 	if(ledLightTime > 0 && prePwStep > 0)
                                    1- 1677     	BANKSEL	_ledLightTime
     00C5 rrrr                      3-  110 m1      .banksel ram_address
     00C6 01rr                      1- 1678     	MOVR	_ledLightTime,W
     00C7 0D03                      1- 1679     	BTRSC	STATUS,2
                                    1- 1680     	MGOTO	_00630_DS_
     00C8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1681     	BANKSEL	_prePwStep
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 01rr                      1- 1682     	MOVR	_prePwStep,W
     00CB 0D03                      1- 1683     	BTRSC	STATUS,2
                                    1- 1684     	MGOTO	_00630_DS_
     00CC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1685     	.line	849, "main.c"; 	pwStep = prePwStep;
     00CD 01rr                      1- 1686     	MOVR	_prePwStep,W
                                    1- 1687     	BANKSEL	_pwStep
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 00rr                      1- 1688     	MOVAR	_pwStep
     00D0                           1- 1689     _00630_DS_:
                                    1- 1690     	.line	851, "main.c"; 	}
                                    1- 1691     	RETURN	
     00D0 0010                      3-   40 m1      ret
                                    1- 1692     ; exit point of _checkBatAD
                                    1- 1694     ;***
                                    1- 1695     ;  pBlock Stats: dbName = C
                                    1- 1696     ;***
                                    1- 1697     ;has an exit
                                    1- 1698     ;functions called:
                                    1- 1699     ;   _delay
                                    1- 1700     ;   _delay
                                    1- 1701     ;; Starting pCode block
                                    1- 1702     .segment "code"; module=main, function=_initAD
     0000                           1- 1704     _initAD:
                                    1- 1705     ; 2 exit points
                                    1- 1706     	.line	776, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1707     	MOVIA	0x84
     0001 00rr                      1- 1708     	MOVAR	_ADMD
                                    1- 1709     	.line	781, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1710     	CLRR	_ADVREFH
                                    1- 1711     	.line	786, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1712     	MOVIA	0x10
     0004 00rr                      1- 1713     	MOVAR	_ADR
                                    1- 1714     	.line	788, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1715     	MOVIA	0x03
     0006 00rr                      1- 1716     	MOVAR	_ADCR
                                    1- 1717     	.line	791, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1718     	BSR	_ADMDbits,4
                                    1- 1719     	.line	792, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1720     	MOVIA	0x64
                                    1- 1721     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1722     	.line	795, "main.c"; 	}
                                    1- 1723     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1724     ; exit point of _initAD
                                    1- 1726     ;***
                                    1- 1727     ;  pBlock Stats: dbName = C
                                    1- 1728     ;***
                                    1- 1729     ;has an exit
                                    1- 1730     ;; Starting pCode block
                                    1- 1731     .segment "code"; module=main, function=_ledOff
     0000                           1- 1733     _ledOff:
                                    1- 1734     ; 2 exit points
                                    1- 1735     	.line	768, "main.c"; 	PORTA &= 0x5B;
     0000 215B                      1- 1736     	MOVIA	0x5b
                                    1- 1737     	BANKSEL	_PORTA
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 10rr                      1- 1738     	ANDAR	_PORTA,F
                                    1- 1739     	.line	769, "main.c"; 	PCON |= 0x10;
     0003 1Arr                      1- 1740     	BSR	_PCON,4
                                    1- 1741     	.line	770, "main.c"; 	}
                                    1- 1742     	RETURN	
     0004 0010                      3-   40 m1      ret
                                    1- 1743     ; exit point of _ledOff
                                    1- 1745     ;***
                                    1- 1746     ;  pBlock Stats: dbName = C
                                    1- 1747     ;***
                                    1- 1748     ;has an exit
                                    1- 1749     ;; Starting pCode block
                                    1- 1750     .segment "code"; module=main, function=_ledRed
     0000                           1- 1752     _ledRed:
                                    1- 1753     ; 2 exit points
                                    1- 1754     	.line	761, "main.c"; 	PCON &= 0xEF;
     0000 1Err                      1- 1755     	BCR	_PCON,4
                                    1- 1756     	.line	762, "main.c"; 	PORTA |= 0x24;
     0001 2124                      1- 1757     	MOVIA	0x24
                                    1- 1758     	BANKSEL	_PORTA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 11rr                      1- 1759     	IORAR	_PORTA,F
                                    1- 1760     	.line	763, "main.c"; 	PORTA &= 0x7F;
     0004 1Frr                      1- 1761     	BCR	_PORTA,7
                                    1- 1762     	.line	764, "main.c"; 	}
                                    1- 1763     	RETURN	
     0005 0010                      3-   40 m1      ret
                                    1- 1764     ; exit point of _ledRed
                                    1- 1766     ;***
                                    1- 1767     ;  pBlock Stats: dbName = C
                                    1- 1768     ;***
                                    1- 1769     ;has an exit
                                    1- 1770     ;; Starting pCode block
                                    1- 1771     .segment "code"; module=main, function=_ledGreen
     0000                           1- 1773     _ledGreen:
                                    1- 1774     ; 2 exit points
                                    1- 1775     	.line	754, "main.c"; 	PCON |= 0x10;
     0000 1Arr                      1- 1776     	BSR	_PCON,4
                                    1- 1777     	.line	755, "main.c"; 	PORTA |= 0x80;
                                    1- 1778     	BANKSEL	_PORTA
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 1Brr                      1- 1779     	BSR	_PORTA,7
                                    1- 1780     	.line	756, "main.c"; 	PORTA &= 0xDB;
     0003 21DB                      1- 1781     	MOVIA	0xdb
     0004 10rr                      1- 1782     	ANDAR	_PORTA,F
                                    1- 1783     	.line	757, "main.c"; 	}
                                    1- 1784     	RETURN	
     0005 0010                      3-   40 m1      ret
                                    1- 1785     ; exit point of _ledGreen
                                    1- 1787     ;***
                                    1- 1788     ;  pBlock Stats: dbName = C
                                    1- 1789     ;***
                                    1- 1790     ;has an exit
                                    1- 1791     ;2 compiler assigned registers:
                                    1- 1792     ;   r0x103B
                                    1- 1793     ;   r0x103C
                                    1- 1794     ;; Starting pCode block
                                    1- 1795     .segment "code"; module=main, function=_delay
                                    1- 1797     ;local variable name mapping:
     0000                           1- 1800     _delay:
                                    1- 1801     ; 2 exit points
                                    1- 1802     	.line	746, "main.c"; 	void delay(u8t time)
                                    1- 1803     	BANKSEL	r0x103B
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1804     	MOVAR	r0x103B
                                    1- 1805     	.line	748, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1806     	BANKSEL	r0x103C
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1807     	CLRR	r0x103C
     0004                           1- 1808     _00573_DS_:
                                    1- 1809     	BANKSEL	r0x103B
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 1810     	MOVR	r0x103B,W
                                    1- 1811     	BANKSEL	r0x103C
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1- 1812     	SUBAR	r0x103C,W
     0008 0C03                      1- 1813     	BTRSC	STATUS,0
                                    1- 1814     	MGOTO	_00575_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1815     	.line	749, "main.c"; 	NOP();
     000A 0000                      1- 1816     	nop
                                    1- 1817     	.line	748, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1818     	BANKSEL	r0x103C
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 1819     	INCR	r0x103C,F
                                    1- 1820     	MGOTO	_00573_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 1821     _00575_DS_:
                                    1- 1822     	.line	750, "main.c"; 	}
                                    1- 1823     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 1824     ; exit point of _delay
                                    1- 1826     ;***
                                    1- 1827     ;  pBlock Stats: dbName = C
                                    1- 1828     ;***
                                    1- 1829     ;has an exit
                                    1- 1830     ;functions called:
                                    1- 1831     ;   _pwmStop
                                    1- 1832     ;   _ledGreen
                                    1- 1833     ;   _pwm1Stop
                                    1- 1834     ;   _ledRed
                                    1- 1835     ;   _ledGreen
                                    1- 1836     ;   _pwm1Init
                                    1- 1837     ;   _ledOff
                                    1- 1838     ;   _pwm1Stop
                                    1- 1839     ;   _pwmStop
                                    1- 1840     ;   _ledGreen
                                    1- 1841     ;   _pwm1Stop
                                    1- 1842     ;   _ledRed
                                    1- 1843     ;   _ledGreen
                                    1- 1844     ;   _pwm1Init
                                    1- 1845     ;   _ledOff
                                    1- 1846     ;   _pwm1Stop
                                    1- 1847     ;5 compiler assigned registers:
                                    1- 1848     ;   r0x1052
                                    1- 1849     ;   r0x1053
                                    1- 1850     ;   r0x1054
                                    1- 1851     ;   r0x1055
                                    1- 1852     ;   r0x1056
                                    1- 1853     ;; Starting pCode block
                                    1- 1854     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1856     _chrgCtr:
                                    1- 1857     ; 2 exit points
                                    1- 1858     	.line	632, "main.c"; 	if(PORTA & 0x08)
                                    1- 1859     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 09rr                      1- 1860     	BTRSS	_PORTA,3
                                    1- 1861     	MGOTO	_00489_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1862     	.line	635, "main.c"; 	closeFlag = 0;
                                    1- 1863     	BANKSEL	_closeFlag
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 02rr                      1- 1864     	CLRR	_closeFlag
                                    1- 1865     	.line	636, "main.c"; 	chrgFlag = 1;
                                    1- 1866     	BANKSEL	_Status
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 19rr                      1- 1867     	BSR	_Status,3
                                    1- 1868     	.line	637, "main.c"; 	workStep = 0;
                                    1- 1869     	BANKSEL	_workStep
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 02rr                      1- 1870     	CLRR	_workStep
                                    1- 1871     	.line	638, "main.c"; 	ledLightTime = 0;
                                    1- 1872     	BANKSEL	_ledLightTime
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 02rr                      1- 1873     	CLRR	_ledLightTime
                                    1- 1874     	.line	639, "main.c"; 	pwmStop();
                                    1- 1875     	MCALL	_pwmStop
     000B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1876     	.line	641, "main.c"; 	if(pwStep == 8 || chrgFullFlag)
                                    1- 1877     	BANKSEL	_pwStep
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 01rr                      1- 1878     	MOVR	_pwStep,W
     000E 2408                      1- 1879     	XORIA	0x08
     000F 0D03                      1- 1880     	BTRSC	STATUS,2
                                    1- 1881     	MGOTO	_00482_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1882     	BANKSEL	_chrgFullFlag
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 1883     	MOVR	_chrgFullFlag,W
     0013 0D03                      1- 1884     	BTRSC	STATUS,2
                                    1- 1885     	MGOTO	_00483_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
     0015                           1- 1886     _00482_DS_:
                                    1- 1887     	.line	643, "main.c"; 	chrgStep = 6;
     0015 2106                      1- 1888     	MOVIA	0x06
                                    1- 1889     	BANKSEL	_chrgStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 00rr                      1- 1890     	MOVAR	_chrgStep
                                    1- 1891     	.line	645, "main.c"; 	ledStep = 6;
                                    1- 1892     	BANKSEL	_ledStep
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 00rr                      1- 1893     	MOVAR	_ledStep
                                    1- 1894     	.line	646, "main.c"; 	ledGreen();
                                    1- 1895     	MCALL	_ledGreen
     001A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1896     	.line	647, "main.c"; 	if(++fullCount >= 2000)
                                    1- 1897     	BANKSEL	_fullCount
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 05rr                      1- 1898     	INCR	_fullCount,F
     001D 0D03                      1- 1899     	BTRSC	STATUS,2
     001E 05rr                      1- 1900     	INCR	(_fullCount + 1),F
                                    1- 1901     ;;unsigned compare: left < lit (0x7D0=2000), size=2
     001F 2107                      1- 1902     	MOVIA	0x07
     0020 04rr                      1- 1903     	SUBAR	(_fullCount + 1),W
     0021 0903                      1- 1904     	BTRSS	STATUS,2
                                    1- 1905     	MGOTO	_00554_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023 21D0                      1- 1906     	MOVIA	0xd0
     0024 04rr                      1- 1907     	SUBAR	_fullCount,W
     0025                           1- 1908     _00554_DS_:
     0025 0803                      1- 1909     	BTRSS	STATUS,0
                                    1- 1910     	MGOTO	_00491_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1911     	.line	649, "main.c"; 	fullCount = 2000;
     0027 21D0                      1- 1912     	MOVIA	0xd0
                                    1- 1913     	BANKSEL	_fullCount
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 00rr                      1- 1914     	MOVAR	_fullCount
     002A 2107                      1- 1915     	MOVIA	0x07
     002B 00rr                      1- 1916     	MOVAR	(_fullCount + 1)
                                    1- 1917     	.line	650, "main.c"; 	chrgFullFlag = 1;
     002C 2101                      1- 1918     	MOVIA	0x01
                                    1- 1919     	BANKSEL	_chrgFullFlag
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 00rr                      1- 1920     	MOVAR	_chrgFullFlag
                                    1- 1921     	.line	651, "main.c"; 	pwm1Stop();
                                    1- 1922     	MCALL	_pwm1Stop
     002F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1923     	.line	652, "main.c"; 	PORTB &= 0xF7;
     0030 1Drr                      1- 1924     	BCR	_PORTB,3
                                    1- 1925     	.line	653, "main.c"; 	IOSTB |= 0X08;
     0031 001r                      1- 1926     	IOSTR	_IOSTB
                                    1- 1927     	BANKSEL	r0x1052
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 00rr                      1- 1928     	MOVAR	r0x1052
     0034 19rr                      1- 1929     	BSR	r0x1052,3
     0035 01rr                      1- 1930     	MOVR	r0x1052,W
     0036 000r                      1- 1931     	IOST	_IOSTB
                                    1- 1932     	MGOTO	_00491_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
     0038                           1- 1933     _00483_DS_:
                                    1- 1934     	.line	661, "main.c"; 	IOSTB &= 0xF7;
     0038 001r                      1- 1935     	IOSTR	_IOSTB
                                    1- 1936     	BANKSEL	r0x1052
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 00rr                      1- 1937     	MOVAR	r0x1052
     003B 1Drr                      1- 1938     	BCR	r0x1052,3
     003C 01rr                      1- 1939     	MOVR	r0x1052,W
     003D 000r                      1- 1940     	IOST	_IOSTB
                                    1- 1941     	.line	662, "main.c"; 	fullCount = 0;
                                    1- 1942     	BANKSEL	_fullCount
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 02rr                      1- 1943     	CLRR	_fullCount
     0040 02rr                      1- 1944     	CLRR	(_fullCount + 1)
                                    1- 1945     	.line	663, "main.c"; 	if(count500ms == 0 && pwStep <= 7 && lockLedStep < 6)
                                    1- 1946     	BANKSEL	_count500ms
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 01rr                      1- 1947     	MOVR	_count500ms,W
     0043 0903                      1- 1948     	BTRSS	STATUS,2
                                    1- 1949     	MGOTO	_00460_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1950     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1951     ;;unsigned compare: left >= lit (0x8=8), size=1
     0045 2108                      1- 1952     	MOVIA	0x08
                                    1- 1953     	BANKSEL	_pwStep
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 04rr                      1- 1954     	SUBAR	_pwStep,W
     0048 0C03                      1- 1955     	BTRSC	STATUS,0
                                    1- 1956     	MGOTO	_00460_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1957     ;;unsigned compare: left < lit (0x6=6), size=1
     004A 2106                      1- 1958     	MOVIA	0x06
                                    1- 1959     	BANKSEL	_lockLedStep
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 04rr                      1- 1960     	SUBAR	_lockLedStep,W
     004D 0C03                      1- 1961     	BTRSC	STATUS,0
                                    1- 1962     	MGOTO	_00460_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1963     	.line	665, "main.c"; 	ledRed();
                                    1- 1964     	MCALL	_ledRed
     004F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1965     	.line	666, "main.c"; 	if(lockLedStep < pwStep - 1)
                                    1- 1966     	BANKSEL	_pwStep
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 01rr                      1- 1967     	MOVR	_pwStep,W
                                    1- 1968     	BANKSEL	r0x1052
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 00rr                      1- 1969     	MOVAR	r0x1052
                                    1- 1970     	BANKSEL	r0x1053
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 02rr                      1- 1971     	CLRR	r0x1053
     0056 21FF                      1- 1972     	MOVIA	0xff
                                    1- 1973     	BANKSEL	r0x1052
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 03rr                      1- 1974     	ADDAR	r0x1052,F
     0059 0C03                      1- 1975     	BTRSC	STATUS,0
                                    1- 1976     	MGOTO	_00006_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1977     	BANKSEL	r0x1053
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 06rr                      1- 1978     	DECR	r0x1053,F
     005D                           1- 1979     _00006_DS_:
                                    1- 1980     	BANKSEL	_lockLedStep
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 01rr                      1- 1981     	MOVR	_lockLedStep,W
                                    1- 1982     	BANKSEL	r0x1054
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 00rr                      1- 1983     	MOVAR	r0x1054
                                    1- 1984     ;;1	CLRR	r0x1055
     0061 2100                      1- 1985     	MOVIA	0x00
     0062 2580                      1- 1986     	ADDIA	0x80
                                    1- 1987     	BANKSEL	r0x1056
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 00rr                      1- 1988     	MOVAR	r0x1056
                                    1- 1989     	BANKSEL	r0x1053
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 01rr                      1- 1990     	MOVR	r0x1053,W
     0067 2580                      1- 1991     	ADDIA	0x80
                                    1- 1992     	BANKSEL	r0x1056
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 04rr                      1- 1993     	SUBAR	r0x1056,W
     006A 0903                      1- 1994     	BTRSS	STATUS,2
                                    1- 1995     	MGOTO	_00557_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1996     	BANKSEL	r0x1052
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 01rr                      1- 1997     	MOVR	r0x1052,W
                                    1- 1998     	BANKSEL	r0x1054
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 04rr                      1- 1999     	SUBAR	r0x1054,W
     0070                           1- 2000     _00557_DS_:
     0070 0C03                      1- 2001     	BTRSC	STATUS,0
                                    1- 2002     	MGOTO	_00455_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2003     	.line	668, "main.c"; 	if(lockLedStep == 0)
                                    1- 2004     	BANKSEL	_lockLedStep
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 01rr                      1- 2005     	MOVR	_lockLedStep,W
     0074 0903                      1- 2006     	BTRSS	STATUS,2
                                    1- 2007     	MGOTO	_00451_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2008     	.line	669, "main.c"; 	lockLedStep = pwStep - 1;
                                    1- 2009     	BANKSEL	_pwStep
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 06rr                      1- 2010     	DECR	_pwStep,W
                                    1- 2011     	BANKSEL	_lockLedStep
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 00rr                      1- 2012     	MOVAR	_lockLedStep
     007A                           1- 2013     _00451_DS_:
                                    1- 2014     	.line	670, "main.c"; 	if(++ledCount > 100)
                                    1- 2015     	BANKSEL	_ledCount
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 05rr                      1- 2016     	INCR	_ledCount,F
                                    1- 2017     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2018     ;;unsigned compare: left >= lit (0x65=101), size=1
     007C 2165                      1- 2019     	MOVIA	0x65
     007D 04rr                      1- 2020     	SUBAR	_ledCount,W
     007E 0803                      1- 2021     	BTRSS	STATUS,0
                                    1- 2022     	MGOTO	_00456_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2023     	.line	671, "main.c"; 	lockLedStep = pwStep - 1;
                                    1- 2024     	BANKSEL	_pwStep
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 06rr                      1- 2025     	DECR	_pwStep,W
                                    1- 2026     	BANKSEL	_lockLedStep
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 00rr                      1- 2027     	MOVAR	_lockLedStep
                                    1- 2028     	MGOTO	_00456_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
     0085                           1- 2029     _00455_DS_:
                                    1- 2030     	.line	676, "main.c"; 	ledCount = 0;
                                    1- 2031     	BANKSEL	_ledCount
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 02rr                      1- 2032     	CLRR	_ledCount
     0087                           1- 2033     _00456_DS_:
                                    1- 2034     	.line	678, "main.c"; 	if(++ledStep > 6)
                                    1- 2035     	BANKSEL	_ledStep
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 05rr                      1- 2036     	INCR	_ledStep,F
                                    1- 2037     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2038     ;;unsigned compare: left >= lit (0x7=7), size=1
     0089 2107                      1- 2039     	MOVIA	0x07
     008A 04rr                      1- 2040     	SUBAR	_ledStep,W
     008B 0803                      1- 2041     	BTRSS	STATUS,0
                                    1- 2042     	MGOTO	_00460_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2043     	.line	679, "main.c"; 	ledStep = lockLedStep;
                                    1- 2044     	BANKSEL	_lockLedStep
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 01rr                      1- 2045     	MOVR	_lockLedStep,W
                                    1- 2046     	BANKSEL	_ledStep
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 00rr                      1- 2047     	MOVAR	_ledStep
                                    1- 2048     ;;unsigned compare: left < lit (0x6=6), size=1
     0091                           1- 2049     _00460_DS_:
                                    1- 2050     	.line	681, "main.c"; 	if(lockLedStep >= 6)
     0091 2106                      1- 2051     	MOVIA	0x06
                                    1- 2052     	BANKSEL	_lockLedStep
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 04rr                      1- 2053     	SUBAR	_lockLedStep,W
     0094 0803                      1- 2054     	BTRSS	STATUS,0
                                    1- 2055     	MGOTO	_00464_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2056     	.line	683, "main.c"; 	ledStep = 6;	//亮灯不闪了
     0096 2106                      1- 2057     	MOVIA	0x06
                                    1- 2058     	BANKSEL	_ledStep
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 00rr                      1- 2059     	MOVAR	_ledStep
                                    1- 2060     	.line	684, "main.c"; 	ledGreen();
                                    1- 2061     	MCALL	_ledGreen
     0099 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2062     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2063     ;;unsigned compare: left >= lit (0x6=6), size=1
     009A                           1- 2064     _00464_DS_:
                                    1- 2065     	.line	688, "main.c"; 	if(count200ms > 5)
     009A 2106                      1- 2066     	MOVIA	0x06
                                    1- 2067     	BANKSEL	_count200ms
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 04rr                      1- 2068     	SUBAR	_count200ms,W
     009D 0803                      1- 2069     	BTRSS	STATUS,0
                                    1- 2070     	MGOTO	_00491_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2071     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2072     ;;unsigned compare: left >= lit (0x1A=26), size=2
                                    1- 2073     	.line	690, "main.c"; 	if(R_AIN4_DATA <= 25 && R_AIN4_DATA >=subMin)
     009F 2100                      1- 2074     	MOVIA	0x00
                                    1- 2075     	BANKSEL	_R_AIN4_DATA
     00A0 rrrr                      3-  110 m1      .banksel ram_address
     00A1 04rr                      1- 2076     	SUBAR	(_R_AIN4_DATA + 1),W
     00A2 0903                      1- 2077     	BTRSS	STATUS,2
                                    1- 2078     	MGOTO	_00562_DS_
     00A3 3rrr                      3-   63 m1      LGOTO rom_address
     00A4 211A                      1- 2079     	MOVIA	0x1a
     00A5 04rr                      1- 2080     	SUBAR	_R_AIN4_DATA,W
     00A6                           1- 2081     _00562_DS_:
     00A6 0C03                      1- 2082     	BTRSC	STATUS,0
                                    1- 2083     	MGOTO	_00466_DS_
     00A7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2084     	BANKSEL	_subMin
     00A8 rrrr                      3-  110 m1      .banksel ram_address
     00A9 01rr                      1- 2085     	MOVR	_subMin,W
                                    1- 2086     	BANKSEL	r0x1052
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 00rr                      1- 2087     	MOVAR	r0x1052
                                    1- 2088     	BANKSEL	r0x1053
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 02rr                      1- 2089     	CLRR	r0x1053
     00AE 2100                      1- 2090     	MOVIA	0x00
                                    1- 2091     	BANKSEL	_R_AIN4_DATA
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 04rr                      1- 2092     	SUBAR	(_R_AIN4_DATA + 1),W
     00B1 0903                      1- 2093     	BTRSS	STATUS,2
                                    1- 2094     	MGOTO	_00563_DS_
     00B2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2095     	BANKSEL	r0x1052
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 01rr                      1- 2096     	MOVR	r0x1052,W
                                    1- 2097     	BANKSEL	_R_AIN4_DATA
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 04rr                      1- 2098     	SUBAR	_R_AIN4_DATA,W
     00B7                           1- 2099     _00563_DS_:
     00B7 0803                      1- 2100     	BTRSS	STATUS,0
                                    1- 2101     	MGOTO	_00466_DS_
     00B8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2102     	.line	692, "main.c"; 	addTime = subTime = 0;
                                    1- 2103     	BANKSEL	_subTime
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 02rr                      1- 2104     	CLRR	_subTime
                                    1- 2105     	BANKSEL	_addTime
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 02rr                      1- 2106     	CLRR	_addTime
                                    1- 2107     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2108     ;;unsigned compare: left >= lit (0x1A=26), size=2
     00BD                           1- 2109     _00466_DS_:
                                    1- 2110     	.line	694, "main.c"; 	if(R_AIN4_DATA > 25)
     00BD 2100                      1- 2111     	MOVIA	0x00
                                    1- 2112     	BANKSEL	_R_AIN4_DATA
     00BE rrrr                      3-  110 m1      .banksel ram_address
     00BF 04rr                      1- 2113     	SUBAR	(_R_AIN4_DATA + 1),W
     00C0 0903                      1- 2114     	BTRSS	STATUS,2
                                    1- 2115     	MGOTO	_00564_DS_
     00C1 3rrr                      3-   63 m1      LGOTO rom_address
     00C2 211A                      1- 2116     	MOVIA	0x1a
     00C3 04rr                      1- 2117     	SUBAR	_R_AIN4_DATA,W
     00C4                           1- 2118     _00564_DS_:
     00C4 0803                      1- 2119     	BTRSS	STATUS,0
                                    1- 2120     	MGOTO	_00476_DS_
     00C5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2121     	.line	696, "main.c"; 	if(++subTime > chrgWaitTime)
                                    1- 2122     	BANKSEL	_subTime
     00C6 rrrr                      3-  110 m1      .banksel ram_address
     00C7 05rr                      1- 2123     	INCR	_subTime,F
     00C8 01rr                      1- 2124     	MOVR	_subTime,W
                                    1- 2125     	BANKSEL	_chrgWaitTime
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 04rr                      1- 2126     	SUBAR	_chrgWaitTime,W
     00CB 0C03                      1- 2127     	BTRSC	STATUS,0
                                    1- 2128     	MGOTO	_00469_DS_
     00CC 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2129     	.line	698, "main.c"; 	addFlag = 1;
     00CD 2101                      1- 2130     	MOVIA	0x01
                                    1- 2131     	BANKSEL	_addFlag
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 00rr                      1- 2132     	MOVAR	_addFlag
                                    1- 2133     	.line	699, "main.c"; 	maxduty = maxduty - 1;
                                    1- 2134     	BANKSEL	_maxduty
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 06rr                      1- 2135     	DECR	_maxduty,F
                                    1- 2136     	.line	700, "main.c"; 	subTime = 0;
                                    1- 2137     	BANKSEL	_subTime
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 02rr                      1- 2138     	CLRR	_subTime
                                    1- 2139     	.line	701, "main.c"; 	subMin = 24;
     00D4 2118                      1- 2140     	MOVIA	0x18
                                    1- 2141     	BANKSEL	_subMin
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 00rr                      1- 2142     	MOVAR	_subMin
                                    1- 2143     	.line	702, "main.c"; 	chrgWaitTime = 250;
     00D7 21FA                      1- 2144     	MOVIA	0xfa
                                    1- 2145     	BANKSEL	_chrgWaitTime
     00D8 rrrr                      3-  110 m1      .banksel ram_address
     00D9 00rr                      1- 2146     	MOVAR	_chrgWaitTime
     00DA                           1- 2147     _00469_DS_:
                                    1- 2148     	.line	704, "main.c"; 	addTime = 0;
                                    1- 2149     	BANKSEL	_addTime
     00DA rrrr                      3-  110 m1      .banksel ram_address
     00DB 02rr                      1- 2150     	CLRR	_addTime
                                    1- 2151     	MGOTO	_00477_DS_
     00DC 3rrr                      3-   63 m1      LGOTO rom_address
     00DD                           1- 2152     _00476_DS_:
                                    1- 2153     	.line	706, "main.c"; 	else if(R_AIN4_DATA < subMin || addFlag == 0)
                                    1- 2154     	BANKSEL	_subMin
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 01rr                      1- 2155     	MOVR	_subMin,W
                                    1- 2156     	BANKSEL	r0x1052
     00DF rrrr                      3-  110 m1      .banksel ram_address
     00E0 00rr                      1- 2157     	MOVAR	r0x1052
                                    1- 2158     	BANKSEL	r0x1053
     00E1 rrrr                      3-  110 m1      .banksel ram_address
     00E2 02rr                      1- 2159     	CLRR	r0x1053
     00E3 2100                      1- 2160     	MOVIA	0x00
                                    1- 2161     	BANKSEL	_R_AIN4_DATA
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 04rr                      1- 2162     	SUBAR	(_R_AIN4_DATA + 1),W
     00E6 0903                      1- 2163     	BTRSS	STATUS,2
                                    1- 2164     	MGOTO	_00566_DS_
     00E7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2165     	BANKSEL	r0x1052
     00E8 rrrr                      3-  110 m1      .banksel ram_address
     00E9 01rr                      1- 2166     	MOVR	r0x1052,W
                                    1- 2167     	BANKSEL	_R_AIN4_DATA
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 04rr                      1- 2168     	SUBAR	_R_AIN4_DATA,W
     00EC                           1- 2169     _00566_DS_:
     00EC 0803                      1- 2170     	BTRSS	STATUS,0
                                    1- 2171     	MGOTO	_00472_DS_
     00ED 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2172     	BANKSEL	_addFlag
     00EE rrrr                      3-  110 m1      .banksel ram_address
     00EF 01rr                      1- 2173     	MOVR	_addFlag,W
     00F0 0903                      1- 2174     	BTRSS	STATUS,2
                                    1- 2175     	MGOTO	_00477_DS_
     00F1 3rrr                      3-   63 m1      LGOTO rom_address
     00F2                           1- 2176     _00472_DS_:
                                    1- 2177     	.line	708, "main.c"; 	if(++addTime > chrgWaitTime)
                                    1- 2178     	BANKSEL	_addTime
     00F2 rrrr                      3-  110 m1      .banksel ram_address
     00F3 05rr                      1- 2179     	INCR	_addTime,F
     00F4 01rr                      1- 2180     	MOVR	_addTime,W
                                    1- 2181     	BANKSEL	_chrgWaitTime
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 04rr                      1- 2182     	SUBAR	_chrgWaitTime,W
     00F7 0C03                      1- 2183     	BTRSC	STATUS,0
                                    1- 2184     	MGOTO	_00471_DS_
     00F8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2185     	.line	710, "main.c"; 	maxduty = maxduty + 1;
                                    1- 2186     	BANKSEL	_maxduty
     00F9 rrrr                      3-  110 m1      .banksel ram_address
     00FA 05rr                      1- 2187     	INCR	_maxduty,F
                                    1- 2188     	.line	711, "main.c"; 	addTime = 0;
                                    1- 2189     	BANKSEL	_addTime
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 02rr                      1- 2190     	CLRR	_addTime
     00FD                           1- 2191     _00471_DS_:
                                    1- 2192     	.line	713, "main.c"; 	subTime = 0;
                                    1- 2193     	BANKSEL	_subTime
     00FD rrrr                      3-  110 m1      .banksel ram_address
     00FE 02rr                      1- 2194     	CLRR	_subTime
                                    1- 2195     ;;unsigned compare: left < lit (0xA=10), size=1
     00FF                           1- 2196     _00477_DS_:
                                    1- 2197     	.line	715, "main.c"; 	if(maxduty < 10)
     00FF 210A                      1- 2198     	MOVIA	0x0a
                                    1- 2199     	BANKSEL	_maxduty
     0100 rrrr                      3-  110 m1      .banksel ram_address
     0101 04rr                      1- 2200     	SUBAR	_maxduty,W
     0102 0C03                      1- 2201     	BTRSC	STATUS,0
                                    1- 2202     	MGOTO	_00479_DS_
     0103 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2203     	.line	716, "main.c"; 	maxduty = 10;
     0104 210A                      1- 2204     	MOVIA	0x0a
     0105 00rr                      1- 2205     	MOVAR	_maxduty
     0106                           1- 2206     _00479_DS_:
                                    1- 2207     	.line	717, "main.c"; 	PWM1DUTY = maxduty;
                                    1- 2208     	BANKSEL	_maxduty
     0106 rrrr                      3-  110 m1      .banksel ram_address
     0107 01rr                      1- 2209     	MOVR	_maxduty,W
     0108 00rr                      1- 2210     	SFUN	_PWM1DUTY
                                    1- 2211     	.line	718, "main.c"; 	pwm1Init();			
                                    1- 2212     	MCALL	_pwm1Init
     0109 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2213     	MGOTO	_00491_DS_
     010A 3rrr                      3-   63 m1      LGOTO rom_address
     010B                           1- 2214     _00489_DS_:
                                    1- 2215     	.line	726, "main.c"; 	addFlag = 0;
                                    1- 2216     	BANKSEL	_addFlag
     010B rrrr                      3-  110 m1      .banksel ram_address
     010C 02rr                      1- 2217     	CLRR	_addFlag
                                    1- 2218     	.line	727, "main.c"; 	ledOff();
                                    1- 2219     	MCALL	_ledOff
     010D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2220     	.line	728, "main.c"; 	chrgWaitTime = 5;
     010E 2105                      1- 2221     	MOVIA	0x05
                                    1- 2222     	BANKSEL	_chrgWaitTime
     010F rrrr                      3-  110 m1      .banksel ram_address
     0110 00rr                      1- 2223     	MOVAR	_chrgWaitTime
                                    1- 2224     	.line	729, "main.c"; 	subMin = 24;
     0111 2118                      1- 2225     	MOVIA	0x18
                                    1- 2226     	BANKSEL	_subMin
     0112 rrrr                      3-  110 m1      .banksel ram_address
     0113 00rr                      1- 2227     	MOVAR	_subMin
                                    1- 2228     	.line	730, "main.c"; 	chrgFullFlag = 0;
                                    1- 2229     	BANKSEL	_chrgFullFlag
     0114 rrrr                      3-  110 m1      .banksel ram_address
     0115 02rr                      1- 2230     	CLRR	_chrgFullFlag
                                    1- 2231     	.line	731, "main.c"; 	chrgduty = 0;
                                    1- 2232     	BANKSEL	_chrgduty
     0116 rrrr                      3-  110 m1      .banksel ram_address
     0117 02rr                      1- 2233     	CLRR	_chrgduty
                                    1- 2234     	.line	732, "main.c"; 	maxduty = 0;
                                    1- 2235     	BANKSEL	_maxduty
     0118 rrrr                      3-  110 m1      .banksel ram_address
     0119 02rr                      1- 2236     	CLRR	_maxduty
                                    1- 2237     	.line	733, "main.c"; 	chrgStep = 0;
                                    1- 2238     	BANKSEL	_chrgStep
     011A rrrr                      3-  110 m1      .banksel ram_address
     011B 02rr                      1- 2239     	CLRR	_chrgStep
                                    1- 2240     	.line	734, "main.c"; 	lockLedStep = 0;
                                    1- 2241     	BANKSEL	_lockLedStep
     011C rrrr                      3-  110 m1      .banksel ram_address
     011D 02rr                      1- 2242     	CLRR	_lockLedStep
                                    1- 2243     	.line	735, "main.c"; 	chrgTime = 0;
                                    1- 2244     	BANKSEL	_chrgTime
     011E rrrr                      3-  110 m1      .banksel ram_address
     011F 02rr                      1- 2245     	CLRR	_chrgTime
     0120 02rr                      1- 2246     	CLRR	(_chrgTime + 1)
                                    1- 2247     	.line	736, "main.c"; 	pwm1Stop();
                                    1- 2248     	MCALL	_pwm1Stop
     0121 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2249     	.line	737, "main.c"; 	if(workStep == 0)
                                    1- 2250     	BANKSEL	_workStep
     0122 rrrr                      3-  110 m1      .banksel ram_address
     0123 01rr                      1- 2251     	MOVR	_workStep,W
     0124 0903                      1- 2252     	BTRSS	STATUS,2
                                    1- 2253     	MGOTO	_00007_DS_
     0125 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2254     	.line	738, "main.c"; 	ledStep = 0;
                                    1- 2255     	BANKSEL	_ledStep
     0126 rrrr                      3-  110 m1      .banksel ram_address
     0127 02rr                      1- 2256     	CLRR	_ledStep
     0128                           1- 2257     _00007_DS_:
                                    1- 2258     	.line	739, "main.c"; 	chrgFlag = 0;
                                    1- 2259     	BANKSEL	_Status
     0128 rrrr                      3-  110 m1      .banksel ram_address
     0129 1Drr                      1- 2260     	BCR	_Status,3
                                    1- 2261     	.line	740, "main.c"; 	chrgTime = 0;	//重置充电计数
                                    1- 2262     	BANKSEL	_chrgTime
     012A rrrr                      3-  110 m1      .banksel ram_address
     012B 02rr                      1- 2263     	CLRR	_chrgTime
     012C 02rr                      1- 2264     	CLRR	(_chrgTime + 1)
     012D                           1- 2265     _00491_DS_:
                                    1- 2266     	.line	743, "main.c"; 	}
                                    1- 2267     	RETURN	
     012D 0010                      3-   40 m1      ret
                                    1- 2268     ; exit point of _chrgCtr
                                    1- 2270     ;***
                                    1- 2271     ;  pBlock Stats: dbName = C
                                    1- 2272     ;***
                                    1- 2273     ;has an exit
                                    1- 2274     ;1 compiler assigned register :
                                    1- 2275     ;   r0x1057
                                    1- 2276     ;; Starting pCode block
                                    1- 2277     .segment "code"; module=main, function=_keyRead
                                    1- 2279     ;local variable name mapping:
     0000                           1- 2281     _keyRead:
                                    1- 2282     ; 2 exit points
                                    1- 2283     	.line	595, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2284     	BANKSEL	r0x1057
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2285     	MOVAR	r0x1057
                                    1- 2286     	.line	597, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2287     	MOVR	r0x1057,W
     0003 0D03                      1- 2288     	BTRSC	STATUS,2
                                    1- 2289     	MGOTO	_00441_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2290     	.line	599, "main.c"; 	keyCount++;
                                    1- 2291     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2292     	INCR	_keyCount,F
                                    1- 2293     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 2294     	.line	600, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 2295     	MOVIA	0x64
     0008 04rr                      1- 2296     	SUBAR	_keyCount,W
     0009 0803                      1- 2297     	BTRSS	STATUS,0
                                    1- 2298     	MGOTO	_00442_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2299     	.line	602, "main.c"; 	keyCount = 100;
     000B 2164                      1- 2300     	MOVIA	0x64
     000C 00rr                      1- 2301     	MOVAR	_keyCount
                                    1- 2302     	.line	603, "main.c"; 	if(!longPressFlag)
                                    1- 2303     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Crr                      1- 2304     	BTRSC	_Status,1
                                    1- 2305     	MGOTO	_00442_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2306     	.line	605, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 2307     	BSR	_Status,1
                                    1- 2308     	.line	606, "main.c"; 	return 2;
     0011 2102                      1- 2309     	MOVIA	0x02
                                    1- 2310     	MGOTO	_00443_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2311     ;;unsigned compare: left < lit (0x64=100), size=1
     0013                           1- 2312     _00441_DS_:
                                    1- 2313     	.line	612, "main.c"; 	if(keyCount >= 100)
     0013 2164                      1- 2314     	MOVIA	0x64
                                    1- 2315     	BANKSEL	_keyCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 2316     	SUBAR	_keyCount,W
     0016 0803                      1- 2317     	BTRSS	STATUS,0
                                    1- 2318     	MGOTO	_00438_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2319     	.line	614, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 2320     	CLRR	_keyCount
                                    1- 2321     	.line	615, "main.c"; 	longPressFlag = 0;
                                    1- 2322     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Crr                      1- 2323     	BCR	_Status,1
                                    1- 2324     	.line	616, "main.c"; 	return	0;
     001B 2100                      1- 2325     	MOVIA	0x00
                                    1- 2326     	MGOTO	_00443_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2327     ;;unsigned compare: left < lit (0x4=4), size=1
     001D                           1- 2328     _00438_DS_:
                                    1- 2329     	.line	618, "main.c"; 	else if(keyCount >= 4)
     001D 2104                      1- 2330     	MOVIA	0x04
                                    1- 2331     	BANKSEL	_keyCount
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 2332     	SUBAR	_keyCount,W
     0020 0803                      1- 2333     	BTRSS	STATUS,0
                                    1- 2334     	MGOTO	_00439_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2335     	.line	620, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 2336     	CLRR	_keyCount
                                    1- 2337     	.line	621, "main.c"; 	return	1;
     0023 2101                      1- 2338     	MOVIA	0x01
                                    1- 2339     	MGOTO	_00443_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 2340     _00439_DS_:
                                    1- 2341     	.line	623, "main.c"; 	keyCount = 0;
                                    1- 2342     	BANKSEL	_keyCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 2343     	CLRR	_keyCount
     0027                           1- 2344     _00442_DS_:
                                    1- 2345     	.line	625, "main.c"; 	return 0;
     0027 2100                      1- 2346     	MOVIA	0x00
     0028                           1- 2347     _00443_DS_:
                                    1- 2348     	.line	626, "main.c"; 	}
                                    1- 2349     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 2350     ; exit point of _keyRead
                                    1- 2352     ;***
                                    1- 2353     ;  pBlock Stats: dbName = C
                                    1- 2354     ;***
                                    1- 2355     ;has an exit
                                    1- 2356     ;functions called:
                                    1- 2357     ;   _LedInput
                                    1- 2358     ;   _pwmStop
                                    1- 2359     ;   _pwm1Stop
                                    1- 2360     ;   _LedInput
                                    1- 2361     ;   _pwmStop
                                    1- 2362     ;   _pwm1Stop
                                    1- 2363     ;; Starting pCode block
                                    1- 2364     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2366     _gotoSleep:
                                    1- 2367     ; 2 exit points
                                    1- 2368     	.line	561, "main.c"; 	count900s = 0;
                                    1- 2369     	BANKSEL	_count900s
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2370     	CLRR	_count900s
     0002 02rr                      1- 2371     	CLRR	(_count900s + 1)
                                    1- 2372     	.line	562, "main.c"; 	LedInput();
                                    1- 2373     	MCALL	_LedInput
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2374     	.line	563, "main.c"; 	sleepTime = 0;
                                    1- 2375     	BANKSEL	_sleepTime
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 2376     	CLRR	_sleepTime
     0006 02rr                      1- 2377     	CLRR	(_sleepTime + 1)
                                    1- 2378     	.line	565, "main.c"; 	pwmStop();
                                    1- 2379     	MCALL	_pwmStop
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2380     	.line	566, "main.c"; 	pwm1Stop();
                                    1- 2381     	MCALL	_pwm1Stop
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2382     	.line	567, "main.c"; 	PORTA = 0x00;
                                    1- 2383     	BANKSEL	_PORTA
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 02rr                      1- 2384     	CLRR	_PORTA
                                    1- 2385     	.line	568, "main.c"; 	PORTB = 0x00;
     000B 02rr                      1- 2386     	CLRR	_PORTB
                                    1- 2387     	.line	569, "main.c"; 	workStep = 0;
                                    1- 2388     	BANKSEL	_workStep
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 02rr                      1- 2389     	CLRR	_workStep
                                    1- 2390     	.line	570, "main.c"; 	AWUCON = 0x48;
     000E 2148                      1- 2391     	MOVIA	0x48
     000F 00rr                      1- 2392     	MOVAR	_AWUCON
                                    1- 2393     	.line	571, "main.c"; 	BWUCON = 0x00;
     0010 02rr                      1- 2394     	CLRR	_BWUCON
                                    1- 2395     	.line	572, "main.c"; 	redLedFlag = 0;
                                    1- 2396     	BANKSEL	_Status
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 1Drr                      1- 2397     	BCR	_Status,2
                                    1- 2398     	.line	575, "main.c"; 	INTE =  C_INT_PABKey;
     0013 2102                      1- 2399     	MOVIA	0x02
     0014 00rr                      1- 2400     	MOVAR	_INTE
                                    1- 2401     	.line	576, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0015 2118                      1- 2402     	MOVIA	0x18
     0016 00rr                      1- 2403     	MOVAR	_PCON
                                    1- 2404     	.line	577, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0017 02rr                      1- 2405     	CLRR	_INTF
                                    1- 2406     	.line	578, "main.c"; 	CLRWDT();
     0018 0002                      1- 2407     	clrwdt
                                    1- 2408     	.line	579, "main.c"; 	ENI();
     0019 0004                      1- 2409     	ENI
                                    1- 2410     	.line	580, "main.c"; 	SLEEP();
     001A 0001                      1- 2411     	sleep
                                    1- 2412     	.line	581, "main.c"; 	AWUCON = 0x00;
     001B 02rr                      1- 2413     	CLRR	_AWUCON
                                    1- 2414     	.line	582, "main.c"; 	IOSTA = C_PA6_Input  | C_PA4_Input | C_PA3_Input ;
     001C 2158                      1- 2415     	MOVIA	0x58
     001D 000r                      1- 2416     	IOST	_IOSTA
                                    1- 2417     	.line	583, "main.c"; 	IOSTB = C_PB1_Input;
     001E 2102                      1- 2418     	MOVIA	0x02
     001F 000r                      1- 2419     	IOST	_IOSTB
                                    1- 2420     	.line	584, "main.c"; 	PORTA = 0x00;
                                    1- 2421     	BANKSEL	_PORTA
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 02rr                      1- 2422     	CLRR	_PORTA
                                    1- 2423     	.line	585, "main.c"; 	APHCON = 0xBF;
     0022 21BF                      1- 2424     	MOVIA	0xbf
     0023 000r                      1- 2425     	IOST	_APHCON
                                    1- 2426     	.line	586, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     0024 2101                      1- 2427     	MOVIA	0x01
     0025 00rr                      1- 2428     	MOVAR	_INTE
                                    1- 2429     	.line	587, "main.c"; 	INTF = 0;
     0026 02rr                      1- 2430     	CLRR	_INTF
                                    1- 2431     	.line	589, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0027 21B8                      1- 2432     	MOVIA	0xb8
     0028 00rr                      1- 2433     	MOVAR	_PCON
                                    1- 2434     	.line	592, "main.c"; 	}
                                    1- 2435     	RETURN	
     0029 0010                      3-   40 m1      ret
                                    1- 2436     ; exit point of _gotoSleep
                                    1- 2438     ;***
                                    1- 2439     ;  pBlock Stats: dbName = C
                                    1- 2440     ;***
                                    1- 2441     ;has an exit
                                    1- 2442     ;; Starting pCode block
                                    1- 2443     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2445     _pwmStop:
                                    1- 2446     ; 2 exit points
                                    1- 2447     	.line	554, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2448     	CLRA	
     0001 00rr                      1- 2449     	SFUN	_T2CR1
                                    1- 2450     	.line	555, "main.c"; 	}
                                    1- 2451     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2452     ; exit point of _pwmStop
                                    1- 2454     ;***
                                    1- 2455     ;  pBlock Stats: dbName = C
                                    1- 2456     ;***
                                    1- 2457     ;has an exit
                                    1- 2458     ;1 compiler assigned register :
                                    1- 2459     ;   r0x1059
                                    1- 2460     ;; Starting pCode block
                                    1- 2461     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2463     _pwmInit:
                                    1- 2464     ; 2 exit points
                                    1- 2465     	.line	542, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2466     	SFUNR	_T2CR1
                                    1- 2467     	BANKSEL	r0x1059
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2468     	MOVAR	r0x1059
     0003 0Frr                      1- 2469     	BTRSC	r0x1059,7
                                    1- 2470     	.line	543, "main.c"; 	return;
                                    1- 2471     	MGOTO	_00418_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2472     	.line	544, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2473     	CLRR	_TMRH
                                    1- 2474     	.line	545, "main.c"; 	TMR2 = 128;							//频率为110K
     0006 2180                      1- 2475     	MOVIA	0x80
     0007 00rr                      1- 2476     	SFUN	_TMR2
                                    1- 2477     	.line	548, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2101                      1- 2478     	MOVIA	0x01
     0009 00rr                      1- 2479     	SFUN	_T2CR2
                                    1- 2480     	.line	549, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2481     	MOVIA	0x83
     000B 00rr                      1- 2482     	SFUN	_T2CR1
     000C                           1- 2483     _00418_DS_:
                                    1- 2484     	.line	550, "main.c"; 	}
                                    1- 2485     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2486     ; exit point of _pwmInit
                                    1- 2488     ;***
                                    1- 2489     ;  pBlock Stats: dbName = C
                                    1- 2490     ;***
                                    1- 2491     ;has an exit
                                    1- 2492     ;; Starting pCode block
                                    1- 2493     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2495     _pwm1Stop:
                                    1- 2496     ; 2 exit points
                                    1- 2497     	.line	535, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2498     	CLRA	
     0001 00rr                      1- 2499     	SFUN	_T1CR1
                                    1- 2500     	.line	536, "main.c"; 	}
                                    1- 2501     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2502     ; exit point of _pwm1Stop
                                    1- 2504     ;***
                                    1- 2505     ;  pBlock Stats: dbName = C
                                    1- 2506     ;***
                                    1- 2507     ;has an exit
                                    1- 2508     ;1 compiler assigned register :
                                    1- 2509     ;   r0x1051
                                    1- 2510     ;; Starting pCode block
                                    1- 2511     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2513     _pwm1Init:
                                    1- 2514     ; 2 exit points
                                    1- 2515     	.line	522, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2516     	SFUNR	_T1CR1
                                    1- 2517     	BANKSEL	r0x1051
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2518     	MOVAR	r0x1051
     0003 0Frr                      1- 2519     	BTRSC	r0x1051,7
                                    1- 2520     	.line	523, "main.c"; 	return;
                                    1- 2521     	MGOTO	_00407_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2522     	.line	524, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2523     	CLRR	_TMRH
                                    1- 2524     	.line	525, "main.c"; 	TMR1 = 70;							//频率为110K
     0006 2146                      1- 2525     	MOVIA	0x46
     0007 00rr                      1- 2526     	SFUN	_TMR1
                                    1- 2527     	.line	528, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2528     	CLRA	
     0009 00rr                      1- 2529     	SFUN	_T1CR2
                                    1- 2530     	.line	529, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Dis;
     000A 2108                      1- 2531     	MOVIA	0x08
     000B 00rr                      1- 2532     	SFUN	_T1CR2
                                    1- 2533     	.line	530, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000C 2183                      1- 2534     	MOVIA	0x83
     000D 00rr                      1- 2535     	SFUN	_T1CR1
     000E                           1- 2536     _00407_DS_:
                                    1- 2537     	.line	531, "main.c"; 	}
                                    1- 2538     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2539     ; exit point of _pwm1Init
                                    1- 2541     ;***
                                    1- 2542     ;  pBlock Stats: dbName = C
                                    1- 2543     ;***
                                    1- 2544     ;has an exit
                                    1- 2545     ;functions called:
                                    1- 2546     ;   _delay
                                    1- 2547     ;   _LedInput
                                    1- 2548     ;   _delay
                                    1- 2549     ;   _LedInput
                                    1- 2550     ;1 compiler assigned register :
                                    1- 2551     ;   r0x105A
                                    1- 2552     ;; Starting pCode block
                                    1- 2553     .segment "code"; module=main, function=_LED6ON
     0000                           1- 2555     _LED6ON:
                                    1- 2556     ; 2 exit points
                                    1- 2557     	.line	512, "main.c"; 	L2OUT;
     0000 001r                      1- 2558     	IOSTR	_IOSTA
                                    1- 2559     	BANKSEL	r0x105A
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2560     	MOVAR	r0x105A
     0003 1Crr                      1- 2561     	BCR	r0x105A,0
     0004 01rr                      1- 2562     	MOVR	r0x105A,W
     0005 000r                      1- 2563     	IOST	_IOSTA
                                    1- 2564     	.line	513, "main.c"; 	L1OUT;
     0006 001r                      1- 2565     	IOSTR	_IOSTB
     0007 00rr                      1- 2566     	MOVAR	r0x105A
     0008 21DE                      1- 2567     	MOVIA	0xde
     0009 10rr                      1- 2568     	ANDAR	r0x105A,F
     000A 01rr                      1- 2569     	MOVR	r0x105A,W
     000B 000r                      1- 2570     	IOST	_IOSTB
                                    1- 2571     	.line	514, "main.c"; 	L1H;
     000C 2121                      1- 2572     	MOVIA	0x21
     000D 11rr                      1- 2573     	IORAR	_PORTB,F
                                    1- 2574     	.line	515, "main.c"; 	L2L;
                                    1- 2575     	BANKSEL	_PORTA
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 1Crr                      1- 2576     	BCR	_PORTA,0
                                    1- 2577     	.line	516, "main.c"; 	delay(100);
     0010 2164                      1- 2578     	MOVIA	0x64
                                    1- 2579     	MCALL	_delay
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2580     	.line	517, "main.c"; 	LedInput();
                                    1- 2581     	MCALL	_LedInput
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2582     	.line	518, "main.c"; 	}
                                    1- 2583     	RETURN	
     0013 0010                      3-   40 m1      ret
                                    1- 2584     ; exit point of _LED6ON
                                    1- 2586     ;***
                                    1- 2587     ;  pBlock Stats: dbName = C
                                    1- 2588     ;***
                                    1- 2589     ;has an exit
                                    1- 2590     ;functions called:
                                    1- 2591     ;   _delay
                                    1- 2592     ;   _LedInput
                                    1- 2593     ;   _delay
                                    1- 2594     ;   _LedInput
                                    1- 2595     ;1 compiler assigned register :
                                    1- 2596     ;   r0x105B
                                    1- 2597     ;; Starting pCode block
                                    1- 2598     .segment "code"; module=main, function=_LED5ON
     0000                           1- 2600     _LED5ON:
                                    1- 2601     ; 2 exit points
                                    1- 2602     	.line	501, "main.c"; 	L2OUT;
     0000 001r                      1- 2603     	IOSTR	_IOSTA
                                    1- 2604     	BANKSEL	r0x105B
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2605     	MOVAR	r0x105B
     0003 1Crr                      1- 2606     	BCR	r0x105B,0
     0004 01rr                      1- 2607     	MOVR	r0x105B,W
     0005 000r                      1- 2608     	IOST	_IOSTA
                                    1- 2609     	.line	502, "main.c"; 	L1OUT;
     0006 001r                      1- 2610     	IOSTR	_IOSTB
     0007 00rr                      1- 2611     	MOVAR	r0x105B
     0008 21DE                      1- 2612     	MOVIA	0xde
     0009 10rr                      1- 2613     	ANDAR	r0x105B,F
     000A 01rr                      1- 2614     	MOVR	r0x105B,W
     000B 000r                      1- 2615     	IOST	_IOSTB
                                    1- 2616     	.line	503, "main.c"; 	L2H;
                                    1- 2617     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 18rr                      1- 2618     	BSR	_PORTA,0
                                    1- 2619     	.line	504, "main.c"; 	L1L;
     000E 21DE                      1- 2620     	MOVIA	0xde
     000F 10rr                      1- 2621     	ANDAR	_PORTB,F
                                    1- 2622     	.line	505, "main.c"; 	delay(100);
     0010 2164                      1- 2623     	MOVIA	0x64
                                    1- 2624     	MCALL	_delay
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2625     	.line	506, "main.c"; 	LedInput();
                                    1- 2626     	MCALL	_LedInput
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2627     	.line	507, "main.c"; 	}
                                    1- 2628     	RETURN	
     0013 0010                      3-   40 m1      ret
                                    1- 2629     ; exit point of _LED5ON
                                    1- 2631     ;***
                                    1- 2632     ;  pBlock Stats: dbName = C
                                    1- 2633     ;***
                                    1- 2634     ;has an exit
                                    1- 2635     ;functions called:
                                    1- 2636     ;   _delay
                                    1- 2637     ;   _LedInput
                                    1- 2638     ;   _delay
                                    1- 2639     ;   _LedInput
                                    1- 2640     ;1 compiler assigned register :
                                    1- 2641     ;   r0x105C
                                    1- 2642     ;; Starting pCode block
                                    1- 2643     .segment "code"; module=main, function=_LED4ON
     0000                           1- 2645     _LED4ON:
                                    1- 2646     ; 2 exit points
                                    1- 2647     	.line	491, "main.c"; 	L3OUT;
     0000 001r                      1- 2648     	IOSTR	_IOSTA
                                    1- 2649     	BANKSEL	r0x105C
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2650     	MOVAR	r0x105C
     0003 1Crr                      1- 2651     	BCR	r0x105C,1
     0004 01rr                      1- 2652     	MOVR	r0x105C,W
     0005 000r                      1- 2653     	IOST	_IOSTA
                                    1- 2654     	.line	492, "main.c"; 	L2OUT;
     0006 001r                      1- 2655     	IOSTR	_IOSTA
     0007 00rr                      1- 2656     	MOVAR	r0x105C
     0008 1Crr                      1- 2657     	BCR	r0x105C,0
     0009 01rr                      1- 2658     	MOVR	r0x105C,W
     000A 000r                      1- 2659     	IOST	_IOSTA
                                    1- 2660     	.line	493, "main.c"; 	L3H;
                                    1- 2661     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 18rr                      1- 2662     	BSR	_PORTA,1
                                    1- 2663     	.line	494, "main.c"; 	L2L;
     000D 1Crr                      1- 2664     	BCR	_PORTA,0
                                    1- 2665     	.line	495, "main.c"; 	delay(100);
     000E 2164                      1- 2666     	MOVIA	0x64
                                    1- 2667     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2668     	.line	496, "main.c"; 	LedInput();
                                    1- 2669     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2670     	.line	497, "main.c"; 	}
                                    1- 2671     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2672     ; exit point of _LED4ON
                                    1- 2674     ;***
                                    1- 2675     ;  pBlock Stats: dbName = C
                                    1- 2676     ;***
                                    1- 2677     ;has an exit
                                    1- 2678     ;functions called:
                                    1- 2679     ;   _delay
                                    1- 2680     ;   _LedInput
                                    1- 2681     ;   _delay
                                    1- 2682     ;   _LedInput
                                    1- 2683     ;1 compiler assigned register :
                                    1- 2684     ;   r0x105D
                                    1- 2685     ;; Starting pCode block
                                    1- 2686     .segment "code"; module=main, function=_LED3ON
     0000                           1- 2688     _LED3ON:
                                    1- 2689     ; 2 exit points
                                    1- 2690     	.line	481, "main.c"; 	L3OUT;
     0000 001r                      1- 2691     	IOSTR	_IOSTA
                                    1- 2692     	BANKSEL	r0x105D
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2693     	MOVAR	r0x105D
     0003 1Crr                      1- 2694     	BCR	r0x105D,1
     0004 01rr                      1- 2695     	MOVR	r0x105D,W
     0005 000r                      1- 2696     	IOST	_IOSTA
                                    1- 2697     	.line	482, "main.c"; 	L1OUT;
     0006 001r                      1- 2698     	IOSTR	_IOSTB
     0007 00rr                      1- 2699     	MOVAR	r0x105D
     0008 21DE                      1- 2700     	MOVIA	0xde
     0009 10rr                      1- 2701     	ANDAR	r0x105D,F
     000A 01rr                      1- 2702     	MOVR	r0x105D,W
     000B 000r                      1- 2703     	IOST	_IOSTB
                                    1- 2704     	.line	483, "main.c"; 	L1H;
     000C 2121                      1- 2705     	MOVIA	0x21
     000D 11rr                      1- 2706     	IORAR	_PORTB,F
                                    1- 2707     	.line	484, "main.c"; 	L3L;
                                    1- 2708     	BANKSEL	_PORTA
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 1Crr                      1- 2709     	BCR	_PORTA,1
                                    1- 2710     	.line	485, "main.c"; 	delay(100);
     0010 2164                      1- 2711     	MOVIA	0x64
                                    1- 2712     	MCALL	_delay
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2713     	.line	486, "main.c"; 	LedInput();
                                    1- 2714     	MCALL	_LedInput
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2715     	.line	487, "main.c"; 	}
                                    1- 2716     	RETURN	
     0013 0010                      3-   40 m1      ret
                                    1- 2717     ; exit point of _LED3ON
                                    1- 2719     ;***
                                    1- 2720     ;  pBlock Stats: dbName = C
                                    1- 2721     ;***
                                    1- 2722     ;has an exit
                                    1- 2723     ;functions called:
                                    1- 2724     ;   _delay
                                    1- 2725     ;   _LedInput
                                    1- 2726     ;   _delay
                                    1- 2727     ;   _LedInput
                                    1- 2728     ;1 compiler assigned register :
                                    1- 2729     ;   r0x105E
                                    1- 2730     ;; Starting pCode block
                                    1- 2731     .segment "code"; module=main, function=_LED2ON
     0000                           1- 2733     _LED2ON:
                                    1- 2734     ; 2 exit points
                                    1- 2735     	.line	470, "main.c"; 	L2OUT;
     0000 001r                      1- 2736     	IOSTR	_IOSTA
                                    1- 2737     	BANKSEL	r0x105E
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2738     	MOVAR	r0x105E
     0003 1Crr                      1- 2739     	BCR	r0x105E,0
     0004 01rr                      1- 2740     	MOVR	r0x105E,W
     0005 000r                      1- 2741     	IOST	_IOSTA
                                    1- 2742     	.line	471, "main.c"; 	L3OUT;
     0006 001r                      1- 2743     	IOSTR	_IOSTA
     0007 00rr                      1- 2744     	MOVAR	r0x105E
     0008 1Crr                      1- 2745     	BCR	r0x105E,1
     0009 01rr                      1- 2746     	MOVR	r0x105E,W
     000A 000r                      1- 2747     	IOST	_IOSTA
                                    1- 2748     	.line	472, "main.c"; 	L1H;
     000B 2121                      1- 2749     	MOVIA	0x21
     000C 11rr                      1- 2750     	IORAR	_PORTB,F
                                    1- 2751     	.line	473, "main.c"; 	L2H;
                                    1- 2752     	BANKSEL	_PORTA
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 18rr                      1- 2753     	BSR	_PORTA,0
                                    1- 2754     	.line	474, "main.c"; 	L3L;
     000F 1Crr                      1- 2755     	BCR	_PORTA,1
                                    1- 2756     	.line	475, "main.c"; 	delay(100);
     0010 2164                      1- 2757     	MOVIA	0x64
                                    1- 2758     	MCALL	_delay
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2759     	.line	476, "main.c"; 	LedInput();
                                    1- 2760     	MCALL	_LedInput
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2761     	.line	477, "main.c"; 	}
                                    1- 2762     	RETURN	
     0013 0010                      3-   40 m1      ret
                                    1- 2763     ; exit point of _LED2ON
                                    1- 2765     ;***
                                    1- 2766     ;  pBlock Stats: dbName = C
                                    1- 2767     ;***
                                    1- 2768     ;has an exit
                                    1- 2769     ;functions called:
                                    1- 2770     ;   _delay
                                    1- 2771     ;   _LedInput
                                    1- 2772     ;   _delay
                                    1- 2773     ;   _LedInput
                                    1- 2774     ;1 compiler assigned register :
                                    1- 2775     ;   r0x105F
                                    1- 2776     ;; Starting pCode block
                                    1- 2777     .segment "code"; module=main, function=_LED1ON
     0000                           1- 2779     _LED1ON:
                                    1- 2780     ; 2 exit points
                                    1- 2781     	.line	460, "main.c"; 	L3OUT;
     0000 001r                      1- 2782     	IOSTR	_IOSTA
                                    1- 2783     	BANKSEL	r0x105F
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2784     	MOVAR	r0x105F
     0003 1Crr                      1- 2785     	BCR	r0x105F,1
     0004 01rr                      1- 2786     	MOVR	r0x105F,W
     0005 000r                      1- 2787     	IOST	_IOSTA
                                    1- 2788     	.line	461, "main.c"; 	L1OUT;
     0006 001r                      1- 2789     	IOSTR	_IOSTB
     0007 00rr                      1- 2790     	MOVAR	r0x105F
     0008 21DE                      1- 2791     	MOVIA	0xde
     0009 10rr                      1- 2792     	ANDAR	r0x105F,F
     000A 01rr                      1- 2793     	MOVR	r0x105F,W
     000B 000r                      1- 2794     	IOST	_IOSTB
                                    1- 2795     	.line	462, "main.c"; 	L3H;
                                    1- 2796     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 18rr                      1- 2797     	BSR	_PORTA,1
                                    1- 2798     	.line	463, "main.c"; 	L1L;
     000E 21DE                      1- 2799     	MOVIA	0xde
     000F 10rr                      1- 2800     	ANDAR	_PORTB,F
                                    1- 2801     	.line	464, "main.c"; 	delay(100);
     0010 2164                      1- 2802     	MOVIA	0x64
                                    1- 2803     	MCALL	_delay
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2804     	.line	465, "main.c"; 	LedInput();
                                    1- 2805     	MCALL	_LedInput
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2806     	.line	466, "main.c"; 	}
                                    1- 2807     	RETURN	
     0013 0010                      3-   40 m1      ret
                                    1- 2808     ; exit point of _LED1ON
                                    1- 2810     ;***
                                    1- 2811     ;  pBlock Stats: dbName = C
                                    1- 2812     ;***
                                    1- 2813     ;has an exit
                                    1- 2814     ;functions called:
                                    1- 2815     ;   _delay
                                    1- 2816     ;   _delay
                                    1- 2817     ;1 compiler assigned register :
                                    1- 2818     ;   r0x1058
                                    1- 2819     ;; Starting pCode block
                                    1- 2820     .segment "code"; module=main, function=_LedInput
     0000                           1- 2822     _LedInput:
                                    1- 2823     ; 2 exit points
                                    1- 2824     	.line	451, "main.c"; 	PORTA &= 0xFC;
     0000 21FC                      1- 2825     	MOVIA	0xfc
                                    1- 2826     	BANKSEL	_PORTA
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 10rr                      1- 2827     	ANDAR	_PORTA,F
                                    1- 2828     	.line	452, "main.c"; 	PORTB &= 0xDE;
     0003 21DE                      1- 2829     	MOVIA	0xde
     0004 10rr                      1- 2830     	ANDAR	_PORTB,F
                                    1- 2831     	.line	453, "main.c"; 	IOSTA |= 0x03;
     0005 001r                      1- 2832     	IOSTR	_IOSTA
                                    1- 2833     	BANKSEL	r0x1058
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 00rr                      1- 2834     	MOVAR	r0x1058
     0008 2103                      1- 2835     	MOVIA	0x03
     0009 11rr                      1- 2836     	IORAR	r0x1058,F
     000A 01rr                      1- 2837     	MOVR	r0x1058,W
     000B 000r                      1- 2838     	IOST	_IOSTA
                                    1- 2839     	.line	454, "main.c"; 	IOSTB |= 0x21;
     000C 001r                      1- 2840     	IOSTR	_IOSTB
     000D 00rr                      1- 2841     	MOVAR	r0x1058
     000E 2121                      1- 2842     	MOVIA	0x21
     000F 11rr                      1- 2843     	IORAR	r0x1058,F
     0010 01rr                      1- 2844     	MOVR	r0x1058,W
     0011 000r                      1- 2845     	IOST	_IOSTB
                                    1- 2846     	.line	455, "main.c"; 	delay(2);
     0012 2102                      1- 2847     	MOVIA	0x02
                                    1- 2848     	MCALL	_delay
     0013 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2849     	.line	456, "main.c"; 	}
                                    1- 2850     	RETURN	
     0014 0010                      3-   40 m1      ret
                                    1- 2851     ; exit point of _LedInput
                                    1- 2853     ;***
                                    1- 2854     ;  pBlock Stats: dbName = C
                                    1- 2855     ;***
                                    1- 2856     ;has an exit
                                    1- 2857     ;functions called:
                                    1- 2858     ;   _LedInput
                                    1- 2859     ;   _LedInput
                                    1- 2860     ;   _LED6ON
                                    1- 2861     ;   _LED5ON
                                    1- 2862     ;   _LED4ON
                                    1- 2863     ;   _LED3ON
                                    1- 2864     ;   _LED2ON
                                    1- 2865     ;   _LED1ON
                                    1- 2866     ;   _LedInput
                                    1- 2867     ;   _LedInput
                                    1- 2868     ;   _LED6ON
                                    1- 2869     ;   _LED5ON
                                    1- 2870     ;   _LED4ON
                                    1- 2871     ;   _LED3ON
                                    1- 2872     ;   _LED2ON
                                    1- 2873     ;   _LED1ON
                                    1- 2874     ;; Starting pCode block
                                    1- 2875     .segment "code"; module=main, function=_ledShow
     0000                           1- 2877     _ledShow:
                                    1- 2878     ; 2 exit points
                                    1- 2879     	.line	393, "main.c"; 	if(ledDeadTime > 0 && workStep == 0)
                                    1- 2880     	BANKSEL	_ledDeadTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2881     	MOVR	_ledDeadTime,W
     0002 0D03                      1- 2882     	BTRSC	STATUS,2
                                    1- 2883     	MGOTO	_00304_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2884     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 2885     	MOVR	_workStep,W
     0006 0903                      1- 2886     	BTRSS	STATUS,2
                                    1- 2887     	MGOTO	_00304_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2888     	.line	395, "main.c"; 	if(ledDeadTime % 2 == 0)
                                    1- 2889     	BANKSEL	_ledDeadTime
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 0Crr                      1- 2890     	BTRSC	_ledDeadTime,0
                                    1- 2891     	MGOTO	_00301_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2892     	.line	397, "main.c"; 	ledStep = 0;
                                    1- 2893     	BANKSEL	_ledStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 02rr                      1- 2894     	CLRR	_ledStep
                                    1- 2895     	MGOTO	_00304_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 2896     _00301_DS_:
                                    1- 2897     	.line	401, "main.c"; 	ledStep = tempLedStep;
                                    1- 2898     	BANKSEL	_tempLedStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 2899     	MOVR	_tempLedStep,W
                                    1- 2900     	BANKSEL	_ledStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 2901     	MOVAR	_ledStep
     0012                           1- 2902     _00304_DS_:
                                    1- 2903     	.line	405, "main.c"; 	if(ledLightTime > 0 && pwStep > 0)
                                    1- 2904     	BANKSEL	_ledLightTime
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 2905     	MOVR	_ledLightTime,W
     0014 0D03                      1- 2906     	BTRSC	STATUS,2
                                    1- 2907     	MGOTO	_00312_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2908     	BANKSEL	_pwStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 2909     	MOVR	_pwStep,W
     0018 0D03                      1- 2910     	BTRSC	STATUS,2
                                    1- 2911     	MGOTO	_00312_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2912     	.line	407, "main.c"; 	if(ledLightTime > 0)
                                    1- 2913     	BANKSEL	_ledLightTime
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 01rr                      1- 2914     	MOVR	_ledLightTime,W
     001C 0D03                      1- 2915     	BTRSC	STATUS,2
                                    1- 2916     	MGOTO	_00312_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2917     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2918     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 2919     	.line	409, "main.c"; 	if(pwStep > 6 )
     001E 2107                      1- 2920     	MOVIA	0x07
                                    1- 2921     	BANKSEL	_pwStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 04rr                      1- 2922     	SUBAR	_pwStep,W
     0021 0803                      1- 2923     	BTRSS	STATUS,0
                                    1- 2924     	MGOTO	_00307_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2925     	.line	410, "main.c"; 	ledStep = 6;
     0023 2106                      1- 2926     	MOVIA	0x06
                                    1- 2927     	BANKSEL	_ledStep
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 00rr                      1- 2928     	MOVAR	_ledStep
                                    1- 2929     	MGOTO	_00312_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 2930     _00307_DS_:
                                    1- 2931     	.line	412, "main.c"; 	ledStep = pwStep;
                                    1- 2932     	BANKSEL	_pwStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 2933     	MOVR	_pwStep,W
                                    1- 2934     	BANKSEL	_ledStep
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 2935     	MOVAR	_ledStep
     002B                           1- 2936     _00312_DS_:
                                    1- 2937     	.line	415, "main.c"; 	if(shanshuoTime > 0 && workStep > 0 && pwStep == 0)
                                    1- 2938     	BANKSEL	_shanshuoTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1- 2939     	MOVR	_shanshuoTime,W
     002D 0D03                      1- 2940     	BTRSC	STATUS,2
                                    1- 2941     	MGOTO	_00318_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2942     	BANKSEL	_workStep
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 2943     	MOVR	_workStep,W
     0031 0D03                      1- 2944     	BTRSC	STATUS,2
                                    1- 2945     	MGOTO	_00318_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2946     	BANKSEL	_pwStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 2947     	MOVR	_pwStep,W
     0035 0903                      1- 2948     	BTRSS	STATUS,2
                                    1- 2949     	MGOTO	_00318_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2950     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 2951     	.line	417, "main.c"; 	if(count1s < 50)
     0037 2132                      1- 2952     	MOVIA	0x32
                                    1- 2953     	BANKSEL	_count1s
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 04rr                      1- 2954     	SUBAR	_count1s,W
     003A 0C03                      1- 2955     	BTRSC	STATUS,0
                                    1- 2956     	MGOTO	_00315_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2957     	.line	418, "main.c"; 	ledStep = workStep;
                                    1- 2958     	BANKSEL	_workStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 2959     	MOVR	_workStep,W
                                    1- 2960     	BANKSEL	_ledStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 00rr                      1- 2961     	MOVAR	_ledStep
                                    1- 2962     	MGOTO	_00318_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041                           1- 2963     _00315_DS_:
                                    1- 2964     	.line	420, "main.c"; 	ledStep = 0;
                                    1- 2965     	BANKSEL	_ledStep
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 2966     	CLRR	_ledStep
     0043                           1- 2967     _00318_DS_:
                                    1- 2968     	.line	423, "main.c"; 	LedInput();
                                    1- 2969     	MCALL	_LedInput
     0043 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2970     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2971     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 2972     	.line	424, "main.c"; 	switch(ledStep)
     0044 2109                      1- 2973     	MOVIA	0x09
                                    1- 2974     	BANKSEL	_ledStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 04rr                      1- 2975     	SUBAR	_ledStep,W
     0047 0C03                      1- 2976     	BTRSC	STATUS,0
                                    1- 2977     	MGOTO	_00331_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 21rr                      1- 2978     	MOVIA	((_00372_DS_ >> 8) & 0xff)
     004A 008A                      1- 2979     	MOVAR	PCHBUF
     004B 01rr                      1- 2980     	MOVR	_ledStep,W
     004C 25rr                      1- 2981     	ADDIA	_00372_DS_
     004D 0C03                      1- 2982     	BTRSC	STATUS,0
     004E 058A                      1- 2983     	INCR	PCHBUF,F
     004F 0082                      1- 2984     	MOVAR	PCL
     0050                           1- 2985     _00372_DS_:
                                    1- 2986     	MGOTO	_00321_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2987     	MGOTO	_00329_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2988     	MGOTO	_00328_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2989     	MGOTO	_00327_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2990     	MGOTO	_00326_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2991     	MGOTO	_00325_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2992     	MGOTO	_00324_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2993     	MGOTO	_00324_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2994     	MGOTO	_00324_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
     0059                           1- 2995     _00321_DS_:
                                    1- 2996     	.line	427, "main.c"; 	LedInput();
                                    1- 2997     	MCALL	_LedInput
     0059 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2998     	.line	428, "main.c"; 	break;
                                    1- 2999     	MGOTO	_00331_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B                           1- 3000     _00324_DS_:
                                    1- 3001     	.line	432, "main.c"; 	LED6ON();
                                    1- 3002     	MCALL	_LED6ON
     005B 2rrr                      3-   66 m1      LCALL rom_address
     005C                           1- 3003     _00325_DS_:
                                    1- 3004     	.line	434, "main.c"; 	LED5ON();
                                    1- 3005     	MCALL	_LED5ON
     005C 2rrr                      3-   66 m1      LCALL rom_address
     005D                           1- 3006     _00326_DS_:
                                    1- 3007     	.line	436, "main.c"; 	LED4ON();
                                    1- 3008     	MCALL	_LED4ON
     005D 2rrr                      3-   66 m1      LCALL rom_address
     005E                           1- 3009     _00327_DS_:
                                    1- 3010     	.line	438, "main.c"; 	LED3ON();
                                    1- 3011     	MCALL	_LED3ON
     005E 2rrr                      3-   66 m1      LCALL rom_address
     005F                           1- 3012     _00328_DS_:
                                    1- 3013     	.line	440, "main.c"; 	LED2ON();
                                    1- 3014     	MCALL	_LED2ON
     005F 2rrr                      3-   66 m1      LCALL rom_address
     0060                           1- 3015     _00329_DS_:
                                    1- 3016     	.line	442, "main.c"; 	LED1ON();
                                    1- 3017     	MCALL	_LED1ON
     0060 2rrr                      3-   66 m1      LCALL rom_address
     0061                           1- 3018     _00331_DS_:
                                    1- 3019     	.line	445, "main.c"; 	}
                                    1- 3020     	RETURN	
     0061 0010                      3-   40 m1      ret
                                    1- 3021     ; exit point of _ledShow
                                    1- 3023     ;***
                                    1- 3024     ;  pBlock Stats: dbName = C
                                    1- 3025     ;***
                                    1- 3026     ;has an exit
                                    1- 3027     ;functions called:
                                    1- 3028     ;   _LedInput
                                    1- 3029     ;   _LedInput
                                    1- 3030     ;; Starting pCode block
                                    1- 3031     .segment "code"; module=main, function=_initSys
     0000                           1- 3033     _initSys:
                                    1- 3034     ; 2 exit points
                                    1- 3035     	.line	360, "main.c"; 	DISI();
     0000 0013                      1- 3036     	DISI
                                    1- 3037     	.line	361, "main.c"; 	IOSTA = C_PA6_Input  | C_PA4_Input | C_PA3_Input ;
     0001 2158                      1- 3038     	MOVIA	0x58
     0002 000r                      1- 3039     	IOST	_IOSTA
                                    1- 3040     	.line	362, "main.c"; 	IOSTB = C_PB1_Input;
     0003 2102                      1- 3041     	MOVIA	0x02
     0004 000r                      1- 3042     	IOST	_IOSTB
                                    1- 3043     	.line	363, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 3044     	CLRR	_PORTB
                                    1- 3045     	.line	364, "main.c"; 	PORTA = 0x00;
                                    1- 3046     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 3047     	CLRR	_PORTA
                                    1- 3048     	.line	365, "main.c"; 	LedInput();
                                    1- 3049     	MCALL	_LedInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3050     	.line	366, "main.c"; 	APHCON = 0xBF;
     0009 21BF                      1- 3051     	MOVIA	0xbf
     000A 000r                      1- 3052     	IOST	_APHCON
                                    1- 3053     	.line	367, "main.c"; 	BPHCON = 0xFF;
     000B 21FF                      1- 3054     	MOVIA	0xff
     000C 00rr                      1- 3055     	MOVAR	_BPHCON
                                    1- 3056     	.line	368, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 3057     	MOVAR	_ABPLCON
                                    1- 3058     	.line	370, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1- 3059     	MOVIA	0x01
     000F 00rr                      1- 3060     	MOVAR	_INTE
                                    1- 3061     	.line	372, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 3062     	CLRA	
     0011 000r                      1- 3063     	IOST	_PCON1
                                    1- 3064     	.line	374, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 3065     	MOVIA	0x37
     0013 00rr                      1- 3066     	MOVAR	_TMR0
                                    1- 3067     	.line	375, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0014 2101                      1- 3068     	MOVIA	0x01
     0015 0003                      1- 3069     	T0MD	
                                    1- 3070     	.line	377, "main.c"; 	PCON1 = C_TMR0_En;
     0016 000r                      1- 3071     	IOST	_PCON1
                                    1- 3072     	.line	380, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0017 2198                      1- 3073     	MOVIA	0x98
     0018 00rr                      1- 3074     	MOVAR	_PCON
                                    1- 3075     	.line	383, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0019 2101                      1- 3076     	MOVIA	0x01
     001A 000r                      1- 3077     	IOST	_PCON1
                                    1- 3078     	.line	384, "main.c"; 	ENI();
     001B 0004                      1- 3079     	ENI
                                    1- 3080     	.line	385, "main.c"; 	closeFlag = 0;
                                    1- 3081     	BANKSEL	_closeFlag
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1- 3082     	CLRR	_closeFlag
                                    1- 3083     	.line	386, "main.c"; 	}
                                    1- 3084     	RETURN	
     001E 0010                      3-   40 m1      ret
                                    1- 3085     ; exit point of _initSys
                                    1- 3087     ;***
                                    1- 3088     ;  pBlock Stats: dbName = C
                                    1- 3089     ;***
                                    1- 3090     ;has an exit
                                    1- 3091     ;functions called:
                                    1- 3092     ;   _pwmStop
                                    1- 3093     ;   _pwmStop
                                    1- 3094     ;; Starting pCode block
                                    1- 3095     .segment "code"; module=main, function=_powerOff
     0000                           1- 3097     _powerOff:
                                    1- 3098     ; 2 exit points
                                    1- 3099     	.line	351, "main.c"; 	workStep = 0;
                                    1- 3100     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 3101     	CLRR	_workStep
                                    1- 3102     	.line	352, "main.c"; 	pwmStop();
                                    1- 3103     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3104     	.line	354, "main.c"; 	}
                                    1- 3105     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 3106     ; exit point of _powerOff
                                    1- 3108     ;***
                                    1- 3109     ;  pBlock Stats: dbName = C
                                    1- 3110     ;***
                                    1- 3111     ;has an exit
                                    1- 3112     ;functions called:
                                    1- 3113     ;   _keyRead
                                    1- 3114     ;   _checkBatAD
                                    1- 3115     ;   _powerOff
                                    1- 3116     ;   _pwmInit
                                    1- 3117     ;   _pwmInit
                                    1- 3118     ;   _powerOff
                                    1- 3119     ;   _checkBatAD
                                    1- 3120     ;   _pwmInit
                                    1- 3121     ;   _keyRead
                                    1- 3122     ;   _checkBatAD
                                    1- 3123     ;   _powerOff
                                    1- 3124     ;   _pwmInit
                                    1- 3125     ;   _pwmInit
                                    1- 3126     ;   _powerOff
                                    1- 3127     ;   _checkBatAD
                                    1- 3128     ;   _pwmInit
                                    1- 3129     ;1 compiler assigned register :
                                    1- 3130     ;   r0x1060
                                    1- 3131     ;; Starting pCode block
                                    1- 3132     .segment "code"; module=main, function=_keyCtr
                                    1- 3134     ;local variable name mapping:
     0000                           1- 3136     _keyCtr:
                                    1- 3137     ; 2 exit points
                                    1- 3138     	.line	275, "main.c"; 	char kclick = keyRead(0x40 & (~PORTA));
                                    1- 3139     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 3140     	COMR	_PORTA,W
                                    1- 3141     	BANKSEL	r0x1060
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 3142     	MOVAR	r0x1060
     0004 2140                      1- 3143     	MOVIA	0x40
     0005 10rr                      1- 3144     	ANDAR	r0x1060,F
     0006 01rr                      1- 3145     	MOVR	r0x1060,W
                                    1- 3146     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3147     	BANKSEL	r0x1060
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 3148     	MOVAR	r0x1060
                                    1- 3149     	.line	276, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 3150     	XORIA	0x01
     000B 0903                      1- 3151     	BTRSS	STATUS,2
                                    1- 3152     	MGOTO	_00285_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3153     	.line	278, "main.c"; 	count500ms = 0;
                                    1- 3154     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 3155     	CLRR	_count500ms
                                    1- 3156     	.line	279, "main.c"; 	ledLightTime = 0;
                                    1- 3157     	BANKSEL	_ledLightTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 3158     	CLRR	_ledLightTime
                                    1- 3159     	.line	280, "main.c"; 	if((workStep == 0 && pwStep == 0) || closeFlag)
                                    1- 3160     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 3161     	MOVR	_workStep,W
     0013 0903                      1- 3162     	BTRSS	STATUS,2
                                    1- 3163     	MGOTO	_00253_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3164     	BANKSEL	_pwStep
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 01rr                      1- 3165     	MOVR	_pwStep,W
     0017 0D03                      1- 3166     	BTRSC	STATUS,2
                                    1- 3167     	MGOTO	_00250_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
     0019                           1- 3168     _00253_DS_:
                                    1- 3169     	BANKSEL	_closeFlag
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 3170     	MOVR	_closeFlag,W
     001B 0D03                      1- 3171     	BTRSC	STATUS,2
                                    1- 3172     	MGOTO	_00251_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
     001D                           1- 3173     _00250_DS_:
                                    1- 3174     	.line	282, "main.c"; 	checkBatAD();
                                    1- 3175     	MCALL	_checkBatAD
     001D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3176     	.line	283, "main.c"; 	return;
                                    1- 3177     	MGOTO	_00287_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
     001F                           1- 3178     _00251_DS_:
                                    1- 3179     	.line	285, "main.c"; 	ledTime = 0;
                                    1- 3180     	BANKSEL	_ledTime
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 02rr                      1- 3181     	CLRR	_ledTime
                                    1- 3182     	.line	286, "main.c"; 	if(++workStep > 6)
                                    1- 3183     	BANKSEL	_workStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 05rr                      1- 3184     	INCR	_workStep,F
                                    1- 3185     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3186     ;;unsigned compare: left >= lit (0x7=7), size=1
     0023 2107                      1- 3187     	MOVIA	0x07
     0024 04rr                      1- 3188     	SUBAR	_workStep,W
     0025 0803                      1- 3189     	BTRSS	STATUS,0
                                    1- 3190     	MGOTO	_00255_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3191     	.line	288, "main.c"; 	workStep = 0;
     0027 02rr                      1- 3192     	CLRR	_workStep
                                    1- 3193     	.line	289, "main.c"; 	powerOff();
                                    1- 3194     	MCALL	_powerOff
     0028 2rrr                      3-   66 m1      LCALL rom_address
     0029                           1- 3195     _00255_DS_:
                                    1- 3196     	.line	293, "main.c"; 	if(workStep == 1)
                                    1- 3197     	BANKSEL	_workStep
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 01rr                      1- 3198     	MOVR	_workStep,W
     002B 2401                      1- 3199     	XORIA	0x01
     002C 0903                      1- 3200     	BTRSS	STATUS,2
                                    1- 3201     	MGOTO	_00271_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3202     	.line	295, "main.c"; 	ledStep = 1;
     002E 2101                      1- 3203     	MOVIA	0x01
                                    1- 3204     	BANKSEL	_ledStep
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 00rr                      1- 3205     	MOVAR	_ledStep
                                    1- 3206     	.line	296, "main.c"; 	PWM2DUTY = 120;
     0031 2178                      1- 3207     	MOVIA	0x78
     0032 00rr                      1- 3208     	SFUN	_PWM2DUTY
                                    1- 3209     	.line	297, "main.c"; 	currentDuty = 120;
                                    1- 3210     	BANKSEL	_currentDuty
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 00rr                      1- 3211     	MOVAR	_currentDuty
                                    1- 3212     	.line	298, "main.c"; 	maxDuty = 103;
     0035 2167                      1- 3213     	MOVIA	0x67
                                    1- 3214     	BANKSEL	_maxDuty
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 00rr                      1- 3215     	MOVAR	_maxDuty
                                    1- 3216     	.line	299, "main.c"; 	ledLightTime = 0;
                                    1- 3217     	BANKSEL	_ledLightTime
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 02rr                      1- 3218     	CLRR	_ledLightTime
                                    1- 3219     	.line	300, "main.c"; 	pwmInit();
                                    1- 3220     	MCALL	_pwmInit
     003A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3221     	MGOTO	_00272_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
     003C                           1- 3222     _00271_DS_:
                                    1- 3223     	.line	302, "main.c"; 	else if(workStep == 2)
                                    1- 3224     	BANKSEL	_workStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 3225     	MOVR	_workStep,W
     003E 2402                      1- 3226     	XORIA	0x02
     003F 0903                      1- 3227     	BTRSS	STATUS,2
                                    1- 3228     	MGOTO	_00268_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3229     	.line	303, "main.c"; 	maxDuty = 107;
     0041 216B                      1- 3230     	MOVIA	0x6b
                                    1- 3231     	BANKSEL	_maxDuty
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 00rr                      1- 3232     	MOVAR	_maxDuty
                                    1- 3233     	MGOTO	_00272_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
     0045                           1- 3234     _00268_DS_:
                                    1- 3235     	.line	304, "main.c"; 	else if(workStep == 3)
                                    1- 3236     	BANKSEL	_workStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1- 3237     	MOVR	_workStep,W
     0047 2403                      1- 3238     	XORIA	0x03
     0048 0903                      1- 3239     	BTRSS	STATUS,2
                                    1- 3240     	MGOTO	_00265_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3241     	.line	305, "main.c"; 	maxDuty = 111;
     004A 216F                      1- 3242     	MOVIA	0x6f
                                    1- 3243     	BANKSEL	_maxDuty
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 00rr                      1- 3244     	MOVAR	_maxDuty
                                    1- 3245     	MGOTO	_00272_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
     004E                           1- 3246     _00265_DS_:
                                    1- 3247     	.line	306, "main.c"; 	else if(workStep == 4)
                                    1- 3248     	BANKSEL	_workStep
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1- 3249     	MOVR	_workStep,W
     0050 2404                      1- 3250     	XORIA	0x04
     0051 0903                      1- 3251     	BTRSS	STATUS,2
                                    1- 3252     	MGOTO	_00262_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3253     	.line	307, "main.c"; 	maxDuty = 115;
     0053 2173                      1- 3254     	MOVIA	0x73
                                    1- 3255     	BANKSEL	_maxDuty
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 00rr                      1- 3256     	MOVAR	_maxDuty
                                    1- 3257     	MGOTO	_00272_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
     0057                           1- 3258     _00262_DS_:
                                    1- 3259     	.line	308, "main.c"; 	else if(workStep == 5)
                                    1- 3260     	BANKSEL	_workStep
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 01rr                      1- 3261     	MOVR	_workStep,W
     0059 2405                      1- 3262     	XORIA	0x05
     005A 0903                      1- 3263     	BTRSS	STATUS,2
                                    1- 3264     	MGOTO	_00259_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3265     	.line	309, "main.c"; 	maxDuty = 119;
     005C 2177                      1- 3266     	MOVIA	0x77
                                    1- 3267     	BANKSEL	_maxDuty
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 00rr                      1- 3268     	MOVAR	_maxDuty
                                    1- 3269     	MGOTO	_00272_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
     0060                           1- 3270     _00259_DS_:
                                    1- 3271     	.line	310, "main.c"; 	else if(workStep == 6)
                                    1- 3272     	BANKSEL	_workStep
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 01rr                      1- 3273     	MOVR	_workStep,W
     0062 2406                      1- 3274     	XORIA	0x06
     0063 0903                      1- 3275     	BTRSS	STATUS,2
                                    1- 3276     	MGOTO	_00272_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3277     	.line	311, "main.c"; 	maxDuty = 124;
     0065 217C                      1- 3278     	MOVIA	0x7c
                                    1- 3279     	BANKSEL	_maxDuty
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 00rr                      1- 3280     	MOVAR	_maxDuty
     0068                           1- 3281     _00272_DS_:
                                    1- 3282     	.line	313, "main.c"; 	if(workStep > 0)
                                    1- 3283     	BANKSEL	_workStep
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 01rr                      1- 3284     	MOVR	_workStep,W
     006A 0D03                      1- 3285     	BTRSC	STATUS,2
                                    1- 3286     	MGOTO	_00274_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3287     	.line	315, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 3288     	BANKSEL	_maxDuty
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 01rr                      1- 3289     	MOVR	_maxDuty,W
     006E 00rr                      1- 3290     	SFUN	_PWM2DUTY
                                    1- 3291     	.line	316, "main.c"; 	pwmInit();
                                    1- 3292     	MCALL	_pwmInit
     006F 2rrr                      3-   66 m1      LCALL rom_address
     0070                           1- 3293     _00274_DS_:
                                    1- 3294     	.line	318, "main.c"; 	ledStep = workStep;
                                    1- 3295     	BANKSEL	_workStep
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 01rr                      1- 3296     	MOVR	_workStep,W
                                    1- 3297     	BANKSEL	_ledStep
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 00rr                      1- 3298     	MOVAR	_ledStep
                                    1- 3299     	MGOTO	_00287_DS_
     0074 3rrr                      3-   63 m1      LGOTO rom_address
     0075                           1- 3300     _00285_DS_:
                                    1- 3301     	.line	320, "main.c"; 	else if(kclick == 2)
                                    1- 3302     	BANKSEL	r0x1060
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 01rr                      1- 3303     	MOVR	r0x1060,W
     0077 2402                      1- 3304     	XORIA	0x02
     0078 0903                      1- 3305     	BTRSS	STATUS,2
                                    1- 3306     	MGOTO	_00287_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3307     	.line	322, "main.c"; 	if(workStep > 0)
                                    1- 3308     	BANKSEL	_workStep
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 01rr                      1- 3309     	MOVR	_workStep,W
     007C 0D03                      1- 3310     	BTRSC	STATUS,2
                                    1- 3311     	MGOTO	_00280_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3312     	.line	324, "main.c"; 	powerOff();
                                    1- 3313     	MCALL	_powerOff
     007E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3314     	MGOTO	_00281_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
     0080                           1- 3315     _00280_DS_:
                                    1- 3316     	.line	328, "main.c"; 	if((workStep == 0 && pwStep == 0) || closeFlag)
                                    1- 3317     	BANKSEL	_workStep
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 01rr                      1- 3318     	MOVR	_workStep,W
     0082 0903                      1- 3319     	BTRSS	STATUS,2
                                    1- 3320     	MGOTO	_00278_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3321     	BANKSEL	_pwStep
     0084 rrrr                      3-  110 m1      .banksel ram_address
     0085 01rr                      1- 3322     	MOVR	_pwStep,W
     0086 0D03                      1- 3323     	BTRSC	STATUS,2
                                    1- 3324     	MGOTO	_00275_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
     0088                           1- 3325     _00278_DS_:
                                    1- 3326     	BANKSEL	_closeFlag
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 01rr                      1- 3327     	MOVR	_closeFlag,W
     008A 0D03                      1- 3328     	BTRSC	STATUS,2
                                    1- 3329     	MGOTO	_00276_DS_
     008B 3rrr                      3-   63 m1      LGOTO rom_address
     008C                           1- 3330     _00275_DS_:
                                    1- 3331     	.line	330, "main.c"; 	checkBatAD();
                                    1- 3332     	MCALL	_checkBatAD
     008C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3333     	.line	331, "main.c"; 	return;
                                    1- 3334     	MGOTO	_00287_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
     008E                           1- 3335     _00276_DS_:
                                    1- 3336     	.line	333, "main.c"; 	ledLightTime = 0;
                                    1- 3337     	BANKSEL	_ledLightTime
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 02rr                      1- 3338     	CLRR	_ledLightTime
                                    1- 3339     	.line	334, "main.c"; 	ledStep = 1;
     0090 2101                      1- 3340     	MOVIA	0x01
                                    1- 3341     	BANKSEL	_ledStep
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 00rr                      1- 3342     	MOVAR	_ledStep
                                    1- 3343     	.line	335, "main.c"; 	workStep = 1;
                                    1- 3344     	BANKSEL	_workStep
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 00rr                      1- 3345     	MOVAR	_workStep
                                    1- 3346     	.line	336, "main.c"; 	PWM2DUTY = 120;
     0095 2178                      1- 3347     	MOVIA	0x78
     0096 00rr                      1- 3348     	SFUN	_PWM2DUTY
                                    1- 3349     	.line	337, "main.c"; 	currentDuty = 120;
                                    1- 3350     	BANKSEL	_currentDuty
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 00rr                      1- 3351     	MOVAR	_currentDuty
                                    1- 3352     	.line	338, "main.c"; 	maxDuty = 103;
     0099 2167                      1- 3353     	MOVIA	0x67
                                    1- 3354     	BANKSEL	_maxDuty
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 00rr                      1- 3355     	MOVAR	_maxDuty
                                    1- 3356     	.line	339, "main.c"; 	pwmInit();
                                    1- 3357     	MCALL	_pwmInit
     009C 2rrr                      3-   66 m1      LCALL rom_address
     009D                           1- 3358     _00281_DS_:
                                    1- 3359     	.line	344, "main.c"; 	ledStep = workStep;
                                    1- 3360     	BANKSEL	_workStep
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 01rr                      1- 3361     	MOVR	_workStep,W
                                    1- 3362     	BANKSEL	_ledStep
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 00rr                      1- 3363     	MOVAR	_ledStep
     00A1                           1- 3364     _00287_DS_:
                                    1- 3365     	.line	346, "main.c"; 	}
                                    1- 3366     	RETURN	
     00A1 0010                      3-   40 m1      ret
                                    1- 3367     ; exit point of _keyCtr
                                    1- 3370     ;	code size estimation:
                                    1- 3371     ;	 1218+  336 =  1554 instructions ( 3780 byte)
                                    1- 3373     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
