
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_fgCtr
                                    1-   18     	extern	_LedCtr2
                                    1-   19     	extern	_checkOutA
                                    1-   20     	extern	_F_AIN3_Convert
                                    1-   21     	extern	_PORTAbits
                                    1-   22     	extern	_PORTBbits
                                    1-   23     	extern	_PCONbits
                                    1-   24     	extern	_BWUCONbits
                                    1-   25     	extern	_ABPLCONbits
                                    1-   26     	extern	_BPHCONbits
                                    1-   27     	extern	_INTEbits
                                    1-   28     	extern	_INTFbits
                                    1-   29     	extern	_ADMDbits
                                    1-   30     	extern	_ADRbits
                                    1-   31     	extern	_ADVREFHbits
                                    1-   32     	extern	_ADCRbits
                                    1-   33     	extern	_AWUCONbits
                                    1-   34     	extern	_PACONbits
                                    1-   35     	extern	_INTEDGbits
                                    1-   36     	extern	_ANAENbits
                                    1-   37     	extern	_RFCbits
                                    1-   38     	extern	_INTE2bits
                                    1-   39     	extern	_INDF
                                    1-   40     	extern	_TMR0
                                    1-   41     	extern	_PCL
                                    1-   42     	extern	_STATUS
                                    1-   43     	extern	_FSR
                                    1-   44     	extern	_PORTA
                                    1-   45     	extern	_PORTB
                                    1-   46     	extern	_PCON
                                    1-   47     	extern	_BWUCON
                                    1-   48     	extern	_PCHBUF
                                    1-   49     	extern	_ABPLCON
                                    1-   50     	extern	_BPHCON
                                    1-   51     	extern	_INTE
                                    1-   52     	extern	_INTF
                                    1-   53     	extern	_ADMD
                                    1-   54     	extern	_ADR
                                    1-   55     	extern	_ADD
                                    1-   56     	extern	_ADVREFH
                                    1-   57     	extern	_ADCR
                                    1-   58     	extern	_AWUCON
                                    1-   59     	extern	_PACON
                                    1-   60     	extern	_INTEDG
                                    1-   61     	extern	_TMRH
                                    1-   62     	extern	_ANAEN
                                    1-   63     	extern	_RFC
                                    1-   64     	extern	_TM3RH
                                    1-   65     	extern	_INTE2
                                    1-   66     	extern	_TMR1
                                    1-   67     	extern	_T1CR1
                                    1-   68     	extern	_T1CR2
                                    1-   69     	extern	_PWM1DUTY
                                    1-   70     	extern	_PS1CV
                                    1-   71     	extern	_BZ1CR
                                    1-   72     	extern	_IRCR
                                    1-   73     	extern	_TBHP
                                    1-   74     	extern	_TBHD
                                    1-   75     	extern	_TMR2
                                    1-   76     	extern	_T2CR1
                                    1-   77     	extern	_T2CR2
                                    1-   78     	extern	_PWM2DUTY
                                    1-   79     	extern	_PS2CV
                                    1-   80     	extern	_BZ2CR
                                    1-   81     	extern	_OSCCR
                                    1-   82     	extern	_TMR3
                                    1-   83     	extern	_T3CR1
                                    1-   84     	extern	_T3CR2
                                    1-   85     	extern	_PWM3DUTY
                                    1-   86     	extern	_PS3CV
                                    1-   87     	extern	_BZ3CR
                                    1-   88     	extern	_IOSTA
                                    1-   89     	extern	_IOSTB
                                    1-   90     	extern	_APHCON
                                    1-   91     	extern	_PS0CV
                                    1-   92     	extern	_BODCON
                                    1-   93     	extern	_CMPCR
                                    1-   94     	extern	_PCON1
                                    1-   95     	extern	_T0MD
                                    1-   96     	extern	___sdcc_saved_fsr
                                    1-   97     	extern	___sdcc_saved_stk00
                                    1-   98     	extern	___sdcc_saved_stk01
                                    1-   99     	extern	__nyc_ny8_startup
                                    1-  100     ;--------------------------------------------------------
                                    1-  101     ; global declarations
                                    1-  102     ;--------------------------------------------------------
                                    1-  103     	extern	_F_wait_eoc
                                    1-  104     	extern	_F_AIN4_Convert
                                    1-  105     	extern	_checkBatAD
                                    1-  106     	extern	_initAD
                                    1-  107     	extern	_delay
                                    1-  108     	extern	_chrgCtr
                                    1-  109     	extern	_keyRead
                                    1-  110     	extern	_gotoSleep
                                    1-  111     	extern	_pwmStop
                                    1-  112     	extern	_pwmInit
                                    1-  113     	extern	_LED4ON
                                    1-  114     	extern	_LED3ON
                                    1-  115     	extern	_LED2ON
                                    1-  116     	extern	_LED1ON
                                    1-  117     	extern	_LedInput
                                    1-  118     	extern	_ledShow
                                    1-  119     	extern	_initSys
                                    1-  120     	extern	_powerOff
                                    1-  121     	extern	_keyCtr
                                    1-  122     	extern	_isr
                                    1-  123     	extern	_main
                                    1-  124     	extern	_Status
                                    1-  125     	extern	_duty
                                    1-  126     	extern	_intCount
                                    1-  127     	extern	_count500ms
                                    1-  128     	extern	_keyCount
                                    1-  129     	extern	_workStep
                                    1-  130     	extern	_ledStep
                                    1-  131     	extern	_fgCount
                                    1-  132     	extern	_fgPRD
                                    1-  133     	extern	_preFG
                                    1-  134     	extern	_maxDuty
                                    1-  135     	extern	_pwStep
                                    1-  136     	extern	_R_AIN4_DATA
                                    1-  137     	extern	_R_AIN4_DATA_LB
                                    1-  138     	extern	_R_AIN3_DATA
                                    1-  139     	extern	_R_AIN3_DATA_LB
                                    1-  140     	extern	_chrgTime
                                    1-  141     	extern	_startStep
                                    1-  142     	extern	_sleepTime
                                    1-  143     	extern	_count200ms
                                    1-  144     	extern	_count1s
                                    1-  145     	extern	_count900s
                                    1-  146     	extern	_lowBatTime
                                    1-  147     	extern	_ledTime
                                    1-  148     	extern	_overCount
                                    1-  149     	extern	_debug
                                    1-  150     	extern	_lowBat
                                    1-  151     	extern	_currentDuty
                                    1-  152     	extern	_firstTime
                                    1-  153     	extern	_lowCount
                                    1-  154     	extern	_shanshuoTime
                                    1-  155     	extern	_fullCount
                                    1-  156     	extern	_closeCount
                                    1-  157     	extern	_shandengTime
                                    1-  158     	extern	_workStartFlag
                                    1-  160     	extern PSAVE
                                    1-  161     	extern SSAVE
                                    1-  162     	extern WSAVE
                                    1-  163     	extern STK02
                                    1-  164     	extern STK01
                                    1-  165     	extern STK00
                                    1-  167     .segment "uninit", 0x20000040
 20000040                           1-  168     PSAVE:
                                    1-  169     	.res 1
 20000041                           1-  170     SSAVE:
                                    1-  171     	.res 1
 20000042                           1-  172     WSAVE:
                                    1-  173     	.res 1
 20000043                           1-  174     STK02:
                                    1-  175     	.res 1
 20000044                           1-  176     STK01:
                                    1-  177     	.res 1
 20000045                           1-  178     STK00:
                                    1-  179     	.res 1
                                    1-  181     ;--------------------------------------------------------
                                    1-  182     ; global definitions
                                    1-  183     ;--------------------------------------------------------
                                    1-  184     .segment "uninit"
     0000                           1-  185     _R_AIN4_DATA:
                                    1-  186     	.res	2
                                    1-  189     .segment "uninit"
     0000                           1-  190     _R_AIN4_DATA_LB:
                                    1-  191     	.res	1
                                    1-  194     .segment "uninit"
     0000                           1-  195     _R_AIN3_DATA:
                                    1-  196     	.res	2
                                    1-  199     .segment "uninit"
     0000                           1-  200     _R_AIN3_DATA_LB:
                                    1-  201     	.res	1
                                    1-  204     ;--------------------------------------------------------
                                    1-  205     ; absolute symbol definitions
                                    1-  206     ;--------------------------------------------------------
                                    1-  207     ;--------------------------------------------------------
                                    1-  208     ; compiler-defined variables
                                    1-  209     ;--------------------------------------------------------
                                    1-  210     .segment "uninit"
     0000                           1-  211     r0x1036:
                                    1-  212     	.res	1
                                    1-  213     .segment "uninit"
     0000                           1-  214     r0x1030:
                                    1-  215     	.res	1
                                    1-  216     .segment "uninit"
     0000                           1-  217     r0x1035:
                                    1-  218     	.res	1
                                    1-  219     .segment "uninit"
     0000                           1-  220     r0x1034:
                                    1-  221     	.res	1
                                    1-  222     .segment "uninit"
     0000                           1-  223     r0x1033:
                                    1-  224     	.res	1
                                    1-  225     .segment "uninit"
     0000                           1-  226     r0x1032:
                                    1-  227     	.res	1
                                    1-  228     .segment "uninit"
     0000                           1-  229     r0x1031:
                                    1-  230     	.res	1
                                    1-  231     .segment "uninit"
     0000                           1-  232     r0x102F:
                                    1-  233     	.res	1
                                    1-  234     .segment "uninit"
     0000                           1-  235     r0x1023:
                                    1-  236     	.res	1
                                    1-  237     .segment "uninit"
     0000                           1-  238     r0x1024:
                                    1-  239     	.res	1
                                    1-  240     .segment "uninit"
     0000                           1-  241     r0x102D:
                                    1-  242     	.res	1
                                    1-  243     .segment "uninit"
     0000                           1-  244     r0x102E:
                                    1-  245     	.res	1
                                    1-  246     .segment "uninit"
     0000                           1-  247     r0x1025:
                                    1-  248     	.res	1
                                    1-  249     .segment "uninit"
     0000                           1-  250     r0x1026:
                                    1-  251     	.res	1
                                    1-  252     .segment "uninit"
     0000                           1-  253     r0x1027:
                                    1-  254     	.res	1
                                    1-  255     .segment "uninit"
     0000                           1-  256     r0x102A:
                                    1-  257     	.res	1
                                    1-  258     ;--------------------------------------------------------
                                    1-  259     ; initialized data
                                    1-  260     ;--------------------------------------------------------
                                    1-  262     .segment "idata"
     0000                           1-  263     _Status:
     0000 0000                      1-  264     	dw	0x00
                                    1-  268     .segment "idata"
     0000                           1-  269     _duty:
     0000 0000 0000                 1-  270     	dw	0x00, 0x00
                                    1-  274     .segment "idata"
     0000                           1-  275     _intCount:
     0000 0000                      1-  276     	dw	0x00
                                    1-  280     .segment "idata"
     0000                           1-  281     _count500ms:
     0000 0000                      1-  282     	dw	0x00
                                    1-  286     .segment "idata"
     0000                           1-  287     _keyCount:
     0000 0000                      1-  288     	dw	0x00
                                    1-  292     .segment "idata"
     0000                           1-  293     _workStep:
     0000 0000                      1-  294     	dw	0x00
                                    1-  298     .segment "idata"
     0000                           1-  299     _ledStep:
     0000 0000                      1-  300     	dw	0x00
                                    1-  304     .segment "idata"
     0000                           1-  305     _fgCount:
     0000 0000 0000                 1-  306     	dw	0x00, 0x00
                                    1-  310     .segment "idata"
     0000                           1-  311     _fgPRD:
     0000 0000 0000                 1-  312     	dw	0x00, 0x00
                                    1-  316     .segment "idata"
     0000                           1-  317     _preFG:
     0000 0000                      1-  318     	dw	0x00
                                    1-  322     .segment "idata"
     0000                           1-  323     _maxDuty:
     0000 0000                      1-  324     	dw	0x00
                                    1-  328     .segment "idata"
     0000                           1-  329     _pwStep:
     0000 0000                      1-  330     	dw	0x00
                                    1-  334     .segment "idata"
     0000                           1-  335     _chrgTime:
     0000 0000 0000                 1-  336     	dw	0x00, 0x00
                                    1-  340     .segment "idata"
     0000                           1-  341     _startStep:
     0000 0000                      1-  342     	dw	0x00
                                    1-  346     .segment "idata"
     0000                           1-  347     _sleepTime:
     0000 0000 0000                 1-  348     	dw	0x00, 0x00
                                    1-  352     .segment "idata"
     0000                           1-  353     _count200ms:
     0000 0000                      1-  354     	dw	0x00
                                    1-  358     .segment "idata"
     0000                           1-  359     _count1s:
     0000 0000                      1-  360     	dw	0x00
                                    1-  364     .segment "idata"
     0000                           1-  365     _count900s:
     0000 0000 0000                 1-  366     	dw	0x00, 0x00
                                    1-  370     .segment "idata"
     0000                           1-  371     _lowBatTime:
     0000 0000                      1-  372     	dw	0x00
                                    1-  376     .segment "idata"
     0000                           1-  377     _ledTime:
     0000 0000                      1-  378     	dw	0x00
                                    1-  382     .segment "idata"
     0000                           1-  383     _overCount:
     0000 0000                      1-  384     	dw	0x00
                                    1-  388     .segment "idata"
     0000                           1-  389     _debug:
     0000 0000                      1-  390     	dw	0x00
                                    1-  394     .segment "idata"
     0000                           1-  395     _lowBat:
     0000 0000                      1-  396     	dw	0x00
                                    1-  400     .segment "idata"
     0000                           1-  401     _currentDuty:
     0000 0000                      1-  402     	dw	0x00
                                    1-  406     .segment "idata"
     0000                           1-  407     _firstTime:
     0000 0000                      1-  408     	dw	0x00
                                    1-  412     .segment "idata"
     0000                           1-  413     _lowCount:
     0000 0000                      1-  414     	dw	0x00
                                    1-  418     .segment "idata"
     0000                           1-  419     _shanshuoTime:
     0000 0000                      1-  420     	dw	0x00
                                    1-  424     .segment "idata"
     0000                           1-  425     _fullCount:
     0000 0000                      1-  426     	dw	0x00
                                    1-  430     .segment "idata"
     0000                           1-  431     _closeCount:
     0000 0000 0000                 1-  432     	dw	0x00, 0x00
                                    1-  436     .segment "idata"
     0000                           1-  437     _shandengTime:
     0000 0000                      1-  438     	dw	0x00
                                    1-  442     .segment "idata"
     0000                           1-  443     _workStartFlag:
     0000 0000                      1-  444     	dw	0x00
                                    1-  447     ;--------------------------------------------------------
                                    1-  448     ; overlayable items in internal ram 
                                    1-  449     ;--------------------------------------------------------
                                    1-  450     ;	udata_ovr
                                    1-  451     ;--------------------------------------------------------
                                    1-  452     ; reset vector 
                                    1-  453     ;--------------------------------------------------------
                                    1-  454     ORG	0x0000
     0000 3rrr                      1-  455     	LGOTO	__nyc_ny8_startup
                                    1-  456     ;--------------------------------------------------------
                                    1-  457     ; interrupt and initialization code
                                    1-  458     ;--------------------------------------------------------
                                    1-  459     ORG 0x0008
                                    1-  460     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  462     .segment "code"
     0000                           1-  463     __sdcc_interrupt:
                                    1-  464     ;***
                                    1-  465     ;  pBlock Stats: dbName = I
                                    1-  466     ;***
                                    1-  467     ;2 compiler assigned registers:
                                    1-  468     ;   STK00
                                    1-  469     ;   STK01
                                    1-  470     ;; Starting pCode block
     0000                           1-  471     _isr:
                                    1-  472     ; 0 exit points
                                    1-  473     	.line	83, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  474     	MOVAR	WSAVE
     0001 1503                      1-  475     	SWAPR	STATUS,W
     0002 0283                      1-  476     	CLRR	STATUS
     0003 00rr                      1-  477     	MOVAR	SSAVE
     0004 010A                      1-  478     	MOVR	PCHBUF,W
     0005 028A                      1-  479     	CLRR	PCHBUF
     0006 00rr                      1-  480     	MOVAR	PSAVE
     0007 0104                      1-  481     	MOVR	FSR,W
                                    1-  482     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  483     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  484     	MOVR	STK00,W
                                    1-  485     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  486     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  487     	MOVR	STK01,W
                                    1-  488     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  489     	MOVAR	___sdcc_saved_stk01
                                    1-  490     	.line	85, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  491     	BTRSS	_INTFbits,0
                                    1-  492     	MGOTO	_00121_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  493     	.line	87, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  494     	MOVIA	0x37
     0013 03rr                      1-  495     	ADDAR	_TMR0,F
                                    1-  496     	.line	89, "main.c"; 	if(++intCount >= 100)
                                    1-  497     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  498     	INCR	_intCount,F
                                    1-  499     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  500     	MOVIA	0x64
     0017 04rr                      1-  501     	SUBAR	_intCount,W
     0018 0803                      1-  502     	BTRSS	STATUS,0
                                    1-  503     	MGOTO	_00121_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  504     	.line	91, "main.c"; 	IntFlag = 1;
                                    1-  505     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  506     	BSR	_Status,0
                                    1-  507     	.line	92, "main.c"; 	intCount = 0;
                                    1-  508     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  509     	CLRR	_intCount
                                    1-  510     	.line	93, "main.c"; 	if(workStep)
                                    1-  511     	BANKSEL	_workStep
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 01rr                      1-  512     	MOVR	_workStep,W
     0020 0D03                      1-  513     	BTRSC	STATUS,2
                                    1-  514     	MGOTO	_00106_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  515     	.line	94, "main.c"; 	++fgCount;
                                    1-  516     	BANKSEL	_fgCount
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 05rr                      1-  517     	INCR	_fgCount,F
     0024 0D03                      1-  518     	BTRSC	STATUS,2
     0025 05rr                      1-  519     	INCR	(_fgCount + 1),F
     0026                           1-  520     _00106_DS_:
                                    1-  521     	.line	95, "main.c"; 	if(++count500ms >= 40)
                                    1-  522     	BANKSEL	_count500ms
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 05rr                      1-  523     	INCR	_count500ms,F
                                    1-  524     ;;unsigned compare: left < lit (0x28=40), size=1
     0028 2128                      1-  525     	MOVIA	0x28
     0029 04rr                      1-  526     	SUBAR	_count500ms,W
     002A 0C03                      1-  527     	BTRSC	STATUS,0
                                    1-  528     	.line	96, "main.c"; 	count500ms = 0;
     002B 02rr                      1-  529     	CLRR	_count500ms
                                    1-  530     	.line	97, "main.c"; 	if(++count200ms >= 20)
                                    1-  531     	BANKSEL	_count200ms
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1-  532     	INCR	_count200ms,F
     002E 2114                      1-  533     	MOVIA	0x14
     002F 04rr                      1-  534     	SUBAR	_count200ms,W
     0030 0803                      1-  535     	BTRSS	STATUS,0
                                    1-  536     	MGOTO	_00112_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  537     	.line	99, "main.c"; 	count200ms = 0;
     0032 02rr                      1-  538     	CLRR	_count200ms
                                    1-  539     	.line	100, "main.c"; 	if(shandengTime > 0)
                                    1-  540     	BANKSEL	_shandengTime
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1-  541     	MOVR	_shandengTime,W
     0035 0903                      1-  542     	BTRSS	STATUS,2
                                    1-  543     	.line	101, "main.c"; 	--shandengTime;
     0036 06rr                      1-  544     	DECR	_shandengTime,F
     0037                           1-  545     _00112_DS_:
                                    1-  546     	.line	103, "main.c"; 	if(++count1s >= 100)
                                    1-  547     	BANKSEL	_count1s
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 05rr                      1-  548     	INCR	_count1s,F
     0039 2164                      1-  549     	MOVIA	0x64
     003A 04rr                      1-  550     	SUBAR	_count1s,W
     003B 0803                      1-  551     	BTRSS	STATUS,0
                                    1-  552     	MGOTO	_00121_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  553     	.line	105, "main.c"; 	count1s = 0;
     003D 02rr                      1-  554     	CLRR	_count1s
                                    1-  555     	.line	106, "main.c"; 	if(workStep)
                                    1-  556     	BANKSEL	_workStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 01rr                      1-  557     	MOVR	_workStep,W
     0040 0D03                      1-  558     	BTRSC	STATUS,2
                                    1-  559     	MGOTO	_00114_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  560     	.line	108, "main.c"; 	++count900s;
                                    1-  561     	BANKSEL	_count900s
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 05rr                      1-  562     	INCR	_count900s,F
     0044 0D03                      1-  563     	BTRSC	STATUS,2
     0045 05rr                      1-  564     	INCR	(_count900s + 1),F
                                    1-  565     	MGOTO	_00121_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
     0047                           1-  566     _00114_DS_:
                                    1-  567     	.line	112, "main.c"; 	count900s = 0;
                                    1-  568     	BANKSEL	_count900s
     0047 rrrr                      3-  110 m1      .banksel ram_address
     0048 02rr                      1-  569     	CLRR	_count900s
     0049 02rr                      1-  570     	CLRR	(_count900s + 1)
     004A                           1-  571     _00121_DS_:
                                    1-  572     	.line	121, "main.c"; 	if(INTFbits.PABIF)
     004A 08rr                      1-  573     	BTRSS	_INTFbits,1
                                    1-  574     	MGOTO	_00123_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  575     	.line	123, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     004C 21FD                      1-  576     	MOVIA	0xfd
     004D 00rr                      1-  577     	MOVAR	_INTF
     004E                           1-  578     _00123_DS_:
                                    1-  579     	.line	126, "main.c"; 	INTF = 0;
     004E 02rr                      1-  580     	CLRR	_INTF
                                    1-  581     	.line	128, "main.c"; 	}
                                    1-  582     	BANKSEL	___sdcc_saved_stk01
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 01rr                      1-  583     	MOVR	___sdcc_saved_stk01,W
     0051 00rr                      1-  584     	MOVAR	STK01
                                    1-  585     	BANKSEL	___sdcc_saved_stk00
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1-  586     	MOVR	___sdcc_saved_stk00,W
     0054 00rr                      1-  587     	MOVAR	STK00
                                    1-  588     	BANKSEL	___sdcc_saved_fsr
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 01rr                      1-  589     	MOVR	___sdcc_saved_fsr,W
     0057 0084                      1-  590     	MOVAR	FSR
     0058 01rr                      1-  591     	MOVR	PSAVE,W
     0059 008A                      1-  592     	MOVAR	PCHBUF
     005A 0283                      1-  593     	CLRR	STATUS
     005B 15rr                      1-  594     	SWAPR	SSAVE,W
     005C 0083                      1-  595     	MOVAR	STATUS
     005D 15rr                      1-  596     	SWAPR	WSAVE,F
     005E 15rr                      1-  597     	SWAPR	WSAVE,W
     005F                           1-  598     END_OF_INTERRUPT:
     005F 0011                      1-  599     	RETIE	
                                    1-  601     ;--------------------------------------------------------
                                    1-  602     ; code
                                    1-  603     ;--------------------------------------------------------
                                    1-  604     ;***
                                    1-  605     ;  pBlock Stats: dbName = M
                                    1-  606     ;***
                                    1-  607     ;has an exit
                                    1-  608     ;functions called:
                                    1-  609     ;   _initSys
                                    1-  610     ;   _initAD
                                    1-  611     ;   _ledShow
                                    1-  612     ;   _powerOff
                                    1-  613     ;   _ledShow
                                    1-  614     ;   _keyCtr
                                    1-  615     ;   _checkBatAD
                                    1-  616     ;   _chrgCtr
                                    1-  617     ;   _gotoSleep
                                    1-  618     ;   _powerOff
                                    1-  619     ;   _initSys
                                    1-  620     ;   _initAD
                                    1-  621     ;   _ledShow
                                    1-  622     ;   _powerOff
                                    1-  623     ;   _ledShow
                                    1-  624     ;   _keyCtr
                                    1-  625     ;   _checkBatAD
                                    1-  626     ;   _chrgCtr
                                    1-  627     ;   _gotoSleep
                                    1-  628     ;   _powerOff
                                    1-  629     ;; Starting pCode block
                                    1-  630     .segment "code"; module=main, function=_main
     0000                           1-  632     _main:
                                    1-  633     ; 2 exit points
                                    1-  634     	.line	132, "main.c"; 	initSys();
                                    1-  635     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  636     	.line	133, "main.c"; 	initAD();
                                    1-  637     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  638     _00154_DS_:
                                    1-  639     	.line	136, "main.c"; 	ledShow();
                                    1-  640     	MCALL	_ledShow
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  641     	.line	137, "main.c"; 	CLRWDT();
     0003 0002                      1-  642     	clrwdt
                                    1-  643     	.line	138, "main.c"; 	if(!IntFlag)
                                    1-  644     	BANKSEL	_Status
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 08rr                      1-  645     	BTRSS	_Status,0
                                    1-  646     	MGOTO	_00154_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  647     	.line	140, "main.c"; 	IntFlag = 0;
     0007 1Crr                      1-  648     	BCR	_Status,0
                                    1-  649     ;;unsigned compare: left < lit (0xA=10), size=2
                                    1-  650     	.line	142, "main.c"; 	if(R_AIN4_DATA < 10 && workStep > 0)
     0008 2100                      1-  651     	MOVIA	0x00
                                    1-  652     	BANKSEL	_R_AIN4_DATA
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1-  653     	SUBAR	(_R_AIN4_DATA + 1),W
     000B 0903                      1-  654     	BTRSS	STATUS,2
                                    1-  655     	MGOTO	_00203_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
     000D 210A                      1-  656     	MOVIA	0x0a
     000E 04rr                      1-  657     	SUBAR	_R_AIN4_DATA,W
     000F                           1-  658     _00203_DS_:
     000F 0C03                      1-  659     	BTRSC	STATUS,0
                                    1-  660     	MGOTO	_00133_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  661     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1-  662     	MOVR	_workStep,W
     0013 0D03                      1-  663     	BTRSC	STATUS,2
                                    1-  664     	MGOTO	_00133_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  665     	.line	144, "main.c"; 	if(++closeCount >= 1000)
                                    1-  666     	BANKSEL	_closeCount
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 05rr                      1-  667     	INCR	_closeCount,F
     0017 0D03                      1-  668     	BTRSC	STATUS,2
     0018 05rr                      1-  669     	INCR	(_closeCount + 1),F
                                    1-  670     ;;unsigned compare: left < lit (0x3E8=1000), size=2
     0019 2103                      1-  671     	MOVIA	0x03
     001A 04rr                      1-  672     	SUBAR	(_closeCount + 1),W
     001B 0903                      1-  673     	BTRSS	STATUS,2
                                    1-  674     	MGOTO	_00204_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
     001D 21E8                      1-  675     	MOVIA	0xe8
     001E 04rr                      1-  676     	SUBAR	_closeCount,W
     001F                           1-  677     _00204_DS_:
     001F 0803                      1-  678     	BTRSS	STATUS,0
                                    1-  679     	MGOTO	_00134_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  680     	.line	146, "main.c"; 	closeCount = 0;
                                    1-  681     	BANKSEL	_closeCount
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 02rr                      1-  682     	CLRR	_closeCount
     0023 02rr                      1-  683     	CLRR	(_closeCount + 1)
                                    1-  684     	.line	147, "main.c"; 	workStep = 0;
                                    1-  685     	BANKSEL	_workStep
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 02rr                      1-  686     	CLRR	_workStep
                                    1-  687     	.line	148, "main.c"; 	ledStep = 0;
                                    1-  688     	BANKSEL	_ledStep
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 02rr                      1-  689     	CLRR	_ledStep
                                    1-  690     	.line	149, "main.c"; 	powerOff();
                                    1-  691     	MCALL	_powerOff
     0028 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  692     	.line	150, "main.c"; 	shandengTime = 6;
     0029 2106                      1-  693     	MOVIA	0x06
                                    1-  694     	BANKSEL	_shandengTime
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1-  695     	MOVAR	_shandengTime
                                    1-  696     	MGOTO	_00134_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
     002D                           1-  697     _00133_DS_:
                                    1-  698     	.line	155, "main.c"; 	closeCount = 0;
                                    1-  699     	BANKSEL	_closeCount
     002D rrrr                      3-  110 m1      .banksel ram_address
     002E 02rr                      1-  700     	CLRR	_closeCount
     002F 02rr                      1-  701     	CLRR	(_closeCount + 1)
     0030                           1-  702     _00134_DS_:
                                    1-  703     	.line	157, "main.c"; 	ledShow();
                                    1-  704     	MCALL	_ledShow
     0030 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  705     	.line	158, "main.c"; 	if(chrgFlag == 0)
                                    1-  706     	BANKSEL	_Status
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 09rr                      1-  707     	BTRSS	_Status,3
                                    1-  708     	.line	159, "main.c"; 	keyCtr();
                                    1-  709     	MCALL	_keyCtr
     0033 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  710     	.line	160, "main.c"; 	if(count200ms < 5)
     0034 2105                      1-  711     	MOVIA	0x05
                                    1-  712     	BANKSEL	_count200ms
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 04rr                      1-  713     	SUBAR	_count200ms,W
     0037 0803                      1-  714     	BTRSS	STATUS,0
                                    1-  715     	.line	162, "main.c"; 	checkBatAD();
                                    1-  716     	MCALL	_checkBatAD
     0038 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  717     	.line	168, "main.c"; 	if(workStep > 0)
                                    1-  718     	BANKSEL	_workStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 01rr                      1-  719     	MOVR	_workStep,W
     003B 0D03                      1-  720     	BTRSC	STATUS,2
                                    1-  721     	MGOTO	_00143_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  722     	.line	170, "main.c"; 	if(currentDuty > maxDuty)
                                    1-  723     	BANKSEL	_currentDuty
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 01rr                      1-  724     	MOVR	_currentDuty,W
                                    1-  725     	BANKSEL	_maxDuty
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 04rr                      1-  726     	SUBAR	_maxDuty,W
     0041 0C03                      1-  727     	BTRSC	STATUS,0
                                    1-  728     	MGOTO	_00004_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  729     	.line	172, "main.c"; 	currentDuty = currentDuty - 1;
                                    1-  730     	BANKSEL	_currentDuty
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 06rr                      1-  731     	DECR	_currentDuty,F
     0045                           1-  732     _00004_DS_:
                                    1-  733     	.line	174, "main.c"; 	PWM2DUTY = maxDuty;
                                    1-  734     	BANKSEL	_maxDuty
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1-  735     	MOVR	_maxDuty,W
     0047 00rr                      1-  736     	SFUN	_PWM2DUTY
     0048                           1-  737     _00143_DS_:
                                    1-  738     	.line	176, "main.c"; 	chrgCtr();
                                    1-  739     	MCALL	_chrgCtr
     0048 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  740     	.line	177, "main.c"; 	if(workStep == 0 && keyCount == 0 && ((PORTA & 0x20) == 0) && shandengTime == 0)
                                    1-  741     	BANKSEL	_workStep
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 01rr                      1-  742     	MOVR	_workStep,W
     004B 0903                      1-  743     	BTRSS	STATUS,2
                                    1-  744     	MGOTO	_00147_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  745     	BANKSEL	_keyCount
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 01rr                      1-  746     	MOVR	_keyCount,W
     004F 0903                      1-  747     	BTRSS	STATUS,2
                                    1-  748     	MGOTO	_00147_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  749     	BANKSEL	_PORTA
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 0Err                      1-  750     	BTRSC	_PORTA,5
                                    1-  751     	MGOTO	_00147_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  752     	BANKSEL	_shandengTime
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 01rr                      1-  753     	MOVR	_shandengTime,W
     0056 0903                      1-  754     	BTRSS	STATUS,2
                                    1-  755     	MGOTO	_00147_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  756     	.line	179, "main.c"; 	if(++sleepTime > 40)
                                    1-  757     	BANKSEL	_sleepTime
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 05rr                      1-  758     	INCR	_sleepTime,F
     005A 0D03                      1-  759     	BTRSC	STATUS,2
     005B 05rr                      1-  760     	INCR	(_sleepTime + 1),F
                                    1-  761     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  762     ;;unsigned compare: left >= lit (0x29=41), size=2
     005C 2100                      1-  763     	MOVIA	0x00
     005D 04rr                      1-  764     	SUBAR	(_sleepTime + 1),W
     005E 0903                      1-  765     	BTRSS	STATUS,2
                                    1-  766     	MGOTO	_00207_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
     0060 2129                      1-  767     	MOVIA	0x29
     0061 04rr                      1-  768     	SUBAR	_sleepTime,W
     0062                           1-  769     _00207_DS_:
     0062 0803                      1-  770     	BTRSS	STATUS,0
                                    1-  771     	MGOTO	_00147_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  772     	.line	181, "main.c"; 	gotoSleep();
                                    1-  773     	MCALL	_gotoSleep
     0064 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  774     ;;unsigned compare: left < lit (0x384=900), size=2
     0065                           1-  775     _00147_DS_:
                                    1-  776     	.line	185, "main.c"; 	if(count900s >= 900)
     0065 2103                      1-  777     	MOVIA	0x03
                                    1-  778     	BANKSEL	_count900s
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 04rr                      1-  779     	SUBAR	(_count900s + 1),W
     0068 0903                      1-  780     	BTRSS	STATUS,2
                                    1-  781     	MGOTO	_00208_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
     006A 2184                      1-  782     	MOVIA	0x84
     006B 04rr                      1-  783     	SUBAR	_count900s,W
     006C                           1-  784     _00208_DS_:
     006C 0803                      1-  785     	BTRSS	STATUS,0
                                    1-  786     	MGOTO	_00154_DS_
     006D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  787     	.line	187, "main.c"; 	powerOff();
                                    1-  788     	MCALL	_powerOff
     006E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  789     	MGOTO	_00154_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  790     	.line	191, "main.c"; 	}
                                    1-  791     	RETURN	
     0070 0010                      3-   40 m1      ret
                                    1-  792     ; exit point of _main
                                    1-  794     ;***
                                    1-  795     ;  pBlock Stats: dbName = C
                                    1-  796     ;***
                                    1-  797     ;has an exit
                                    1-  798     ;; Starting pCode block
                                    1-  799     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  801     _F_wait_eoc:
                                    1-  802     ; 2 exit points
     0000                           1-  803     _00596_DS_:
                                    1-  804     	.line	681, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  805     	BTRSS	_ADMDbits,5
                                    1-  806     	MGOTO	_00596_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  807     	.line	683, "main.c"; 	}
                                    1-  808     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1-  809     ; exit point of _F_wait_eoc
                                    1-  811     ;***
                                    1-  812     ;  pBlock Stats: dbName = C
                                    1-  813     ;***
                                    1-  814     ;has an exit
                                    1-  815     ;functions called:
                                    1-  816     ;   _delay
                                    1-  817     ;   _F_wait_eoc
                                    1-  818     ;   _delay
                                    1-  819     ;   _F_wait_eoc
                                    1-  820     ;6 compiler assigned registers:
                                    1-  821     ;   r0x1025
                                    1-  822     ;   r0x1026
                                    1-  823     ;   r0x1027
                                    1-  824     ;   r0x1028
                                    1-  825     ;   r0x1029
                                    1-  826     ;   r0x102A
                                    1-  827     ;; Starting pCode block
                                    1-  828     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1-  830     ;local variable name mapping:
     0000                           1-  833     _F_AIN4_Convert:
                                    1-  834     ; 2 exit points
                                    1-  835     	.line	663, "main.c"; 	void F_AIN4_Convert(char count)
                                    1-  836     	BANKSEL	r0x1025
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1-  837     	MOVAR	r0x1025
                                    1-  838     	.line	665, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1-  839     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  840     	CLRR	_R_AIN4_DATA_LB
                                    1-  841     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1-  842     	CLRR	_R_AIN4_DATA
     0006 02rr                      1-  843     	CLRR	(_R_AIN4_DATA + 1)
                                    1-  844     	.line	667, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1-  845     	MOVIA	0x94
     0008 00rr                      1-  846     	MOVAR	_ADMD
                                    1-  847     	.line	668, "main.c"; 	delay(200);	
     0009 21C8                      1-  848     	MOVIA	0xc8
                                    1-  849     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  850     	.line	669, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1-  851     	MOVIA	0x01
                                    1-  852     	BANKSEL	r0x1026
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1-  853     	MOVAR	r0x1026
     000E                           1-  854     _00589_DS_:
                                    1-  855     	BANKSEL	r0x1026
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1-  856     	MOVR	r0x1026,W
                                    1-  857     	BANKSEL	r0x1025
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1-  858     	SUBAR	r0x1025,W
     0012 0803                      1-  859     	BTRSS	STATUS,0
                                    1-  860     	MGOTO	_00591_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  861     	.line	671, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1-  862     	BSR	_ADMDbits,6
                                    1-  863     	.line	672, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1-  864     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  865     	.line	673, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1-  866     	MOVIA	0x0f
     0017 10rr                      1-  867     	ANDAR	_ADR,W
                                    1-  868     ;;3	MOVAR	r0x1027
                                    1-  869     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1-  870     	ADDAR	_R_AIN4_DATA_LB,F
                                    1-  871     	.line	674, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1-  872     	MOVR	_ADD,W
                                    1-  873     	BANKSEL	r0x1027
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1-  874     	MOVAR	r0x1027
                                    1-  875     ;;1	CLRR	r0x1028
                                    1-  876     ;;102	MOVR	r0x1027,W
                                    1-  877     ;;100	MOVAR	r0x1029
     001D 2100                      1-  878     	MOVIA	0x00
                                    1-  879     	BANKSEL	r0x102A
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1-  880     	MOVAR	r0x102A
                                    1-  881     ;;101	MOVR	r0x1029,W
                                    1-  882     	BANKSEL	r0x1027
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1-  883     	MOVR	r0x1027,W
                                    1-  884     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1-  885     	ADDAR	_R_AIN4_DATA,F
                                    1-  886     	BANKSEL	r0x102A
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1-  887     	MOVR	r0x102A,W
     0026 0C03                      1-  888     	BTRSC	STATUS,0
     0027 05rr                      1-  889     	INCR	r0x102A,W
     0028 0D03                      1-  890     	BTRSC	STATUS,2
                                    1-  891     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  892     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1-  893     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1-  894     _00001_DS_:
                                    1-  895     	.line	669, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  896     	BANKSEL	r0x1026
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1-  897     	INCR	r0x1026,F
                                    1-  898     	MGOTO	_00589_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1-  899     _00591_DS_:
                                    1-  900     	.line	676, "main.c"; 	}
                                    1-  901     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1-  902     ; exit point of _F_AIN4_Convert
                                    1-  904     ;***
                                    1-  905     ;  pBlock Stats: dbName = C
                                    1-  906     ;***
                                    1-  907     ;has an exit
                                    1-  908     ;functions called:
                                    1-  909     ;   _F_AIN4_Convert
                                    1-  910     ;   _F_AIN4_Convert
                                    1-  911     ;4 compiler assigned registers:
                                    1-  912     ;   r0x102B
                                    1-  913     ;   r0x102C
                                    1-  914     ;   r0x102D
                                    1-  915     ;   r0x102E
                                    1-  916     ;; Starting pCode block
                                    1-  917     .segment "code"; module=main, function=_checkBatAD
     0000                           1-  919     _checkBatAD:
                                    1-  920     ; 2 exit points
                                    1-  921     	.line	554, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1-  922     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1-  923     	CLRR	_R_AIN4_DATA_LB
                                    1-  924     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1-  925     	CLRR	_R_AIN4_DATA
     0004 02rr                      1-  926     	CLRR	(_R_AIN4_DATA + 1)
                                    1-  927     	.line	555, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1-  928     	MOVIA	0x08
                                    1-  929     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  930     	.line	556, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1-  931     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1-  932     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1-  933     	ANDIA	0xf0
     000A 00rr                      1-  934     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1-  935     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1-  936     	MOVAR	_R_AIN4_DATA
     000D 220F                      1-  937     	ANDIA	0x0f
     000E 11rr                      1-  938     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1-  939     	XORAR	_R_AIN4_DATA,F
                                    1-  940     	.line	557, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1-  941     	MOVIA	0xf0
                                    1-  942     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1-  943     	ANDAR	_R_AIN4_DATA_LB,F
                                    1-  944     	.line	558, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1-  945     	MOVR	_R_AIN4_DATA_LB,W
                                    1-  946     	BANKSEL	r0x102D
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1-  947     	MOVAR	r0x102D
                                    1-  948     ;;1	MOVAR	r0x102B
                                    1-  949     ;;1	CLRR	r0x102C
                                    1-  950     ;;99	MOVR	r0x102B,W
     0016 2100                      1-  951     	MOVIA	0x00
                                    1-  952     	BANKSEL	r0x102E
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1-  953     	MOVAR	r0x102E
                                    1-  954     	BANKSEL	r0x102D
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1-  955     	MOVR	r0x102D,W
                                    1-  956     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1-  957     	ADDAR	_R_AIN4_DATA,F
                                    1-  958     	BANKSEL	r0x102E
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1-  959     	MOVR	r0x102E,W
     001F 0C03                      1-  960     	BTRSC	STATUS,0
     0020 05rr                      1-  961     	INCR	r0x102E,W
     0021 0D03                      1-  962     	BTRSC	STATUS,2
                                    1-  963     	MGOTO	_00002_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  964     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1-  965     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1-  966     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1-  967     _00002_DS_:
                                    1-  968     	.line	559, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1-  969     	BCR	STATUS,0
                                    1-  970     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1-  971     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1-  972     	RRR	_R_AIN4_DATA,F
                                    1-  973     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1-  974     	BCR	STATUS,0
     002A 13rr                      1-  975     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1-  976     	RRR	_R_AIN4_DATA,F
                                    1-  977     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1-  978     	BCR	STATUS,0
     002D 13rr                      1-  979     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1-  980     	RRR	_R_AIN4_DATA,F
                                    1-  981     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  982     ;;unsigned compare: left >= lit (0x60F=1551), size=2
                                    1-  983     	.line	560, "main.c"; 	if(R_AIN4_DATA > 1550)
     002F 2106                      1-  984     	MOVIA	0x06
     0030 04rr                      1-  985     	SUBAR	(_R_AIN4_DATA + 1),W
     0031 0903                      1-  986     	BTRSS	STATUS,2
                                    1-  987     	MGOTO	_00562_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
     0033 210F                      1-  988     	MOVIA	0x0f
     0034 04rr                      1-  989     	SUBAR	_R_AIN4_DATA,W
     0035                           1-  990     _00562_DS_:
     0035 0803                      1-  991     	BTRSS	STATUS,0
                                    1-  992     	MGOTO	_00425_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  993     	.line	563, "main.c"; 	lowCount = 0;
                                    1-  994     	BANKSEL	_lowCount
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 02rr                      1-  995     	CLRR	_lowCount
                                    1-  996     	MGOTO	_00426_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  997     ;;unsigned compare: left < lit (0x456=1110), size=2
     003A                           1-  998     _00425_DS_:
                                    1-  999     	.line	565, "main.c"; 	else if(R_AIN4_DATA < 1110)
     003A 2104                      1- 1000     	MOVIA	0x04
                                    1- 1001     	BANKSEL	_R_AIN4_DATA
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 04rr                      1- 1002     	SUBAR	(_R_AIN4_DATA + 1),W
     003D 0903                      1- 1003     	BTRSS	STATUS,2
                                    1- 1004     	MGOTO	_00563_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
     003F 2156                      1- 1005     	MOVIA	0x56
     0040 04rr                      1- 1006     	SUBAR	_R_AIN4_DATA,W
     0041                           1- 1007     _00563_DS_:
     0041 0C03                      1- 1008     	BTRSC	STATUS,0
                                    1- 1009     	MGOTO	_00422_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1010     	.line	567, "main.c"; 	if(++lowCount < 10)
                                    1- 1011     	BANKSEL	_lowCount
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 05rr                      1- 1012     	INCR	_lowCount,F
                                    1- 1013     ;;unsigned compare: left < lit (0xA=10), size=1
     0045 210A                      1- 1014     	MOVIA	0x0a
     0046 04rr                      1- 1015     	SUBAR	_lowCount,W
     0047 0803                      1- 1016     	BTRSS	STATUS,0
                                    1- 1017     	.line	568, "main.c"; 	return;
                                    1- 1018     	MGOTO	_00476_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1019     	.line	569, "main.c"; 	lowCount = 10;
     0049 210A                      1- 1020     	MOVIA	0x0a
     004A 00rr                      1- 1021     	MOVAR	_lowCount
                                    1- 1022     	.line	570, "main.c"; 	pwStep = 0;
                                    1- 1023     	BANKSEL	_pwStep
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 02rr                      1- 1024     	CLRR	_pwStep
                                    1- 1025     	.line	571, "main.c"; 	R_AIN4_DATA = 1110;
     004D 2156                      1- 1026     	MOVIA	0x56
                                    1- 1027     	BANKSEL	_R_AIN4_DATA
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 00rr                      1- 1028     	MOVAR	_R_AIN4_DATA
     0050 2104                      1- 1029     	MOVIA	0x04
     0051 00rr                      1- 1030     	MOVAR	(_R_AIN4_DATA + 1)
                                    1- 1031     	.line	573, "main.c"; 	if(workStep > 0 && ++firstTime == 10)
                                    1- 1032     	BANKSEL	_workStep
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1- 1033     	MOVR	_workStep,W
     0054 0D03                      1- 1034     	BTRSC	STATUS,2
                                    1- 1035     	MGOTO	_00417_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1036     	BANKSEL	_firstTime
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 05rr                      1- 1037     	INCR	_firstTime,F
     0058 01rr                      1- 1038     	MOVR	_firstTime,W
     0059 240A                      1- 1039     	XORIA	0x0a
     005A 0903                      1- 1040     	BTRSS	STATUS,2
                                    1- 1041     	MGOTO	_00417_DS_
     005B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1042     	.line	575, "main.c"; 	shanshuoTime = 16;
     005C 2110                      1- 1043     	MOVIA	0x10
                                    1- 1044     	BANKSEL	_shanshuoTime
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 00rr                      1- 1045     	MOVAR	_shanshuoTime
                                    1- 1046     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1047     ;;unsigned compare: left >= lit (0xC=12), size=1
     005F                           1- 1048     _00417_DS_:
                                    1- 1049     	.line	578, "main.c"; 	if(firstTime > 11)
     005F 210C                      1- 1050     	MOVIA	0x0c
                                    1- 1051     	BANKSEL	_firstTime
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 04rr                      1- 1052     	SUBAR	_firstTime,W
     0062 0803                      1- 1053     	BTRSS	STATUS,0
                                    1- 1054     	MGOTO	_00426_DS_
     0063 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1055     	.line	579, "main.c"; 	firstTime = 11;
     0064 210B                      1- 1056     	MOVIA	0x0b
     0065 00rr                      1- 1057     	MOVAR	_firstTime
                                    1- 1058     	MGOTO	_00426_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
     0067                           1- 1059     _00422_DS_:
                                    1- 1060     	.line	583, "main.c"; 	lowCount = 0;
                                    1- 1061     	BANKSEL	_lowCount
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 02rr                      1- 1062     	CLRR	_lowCount
                                    1- 1063     	.line	584, "main.c"; 	firstTime = 0;
                                    1- 1064     	BANKSEL	_firstTime
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 02rr                      1- 1065     	CLRR	_firstTime
     006B                           1- 1066     _00426_DS_:
                                    1- 1067     	.line	586, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA - 1110;
     006B 21AA                      1- 1068     	MOVIA	0xaa
                                    1- 1069     	BANKSEL	_R_AIN4_DATA
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 03rr                      1- 1070     	ADDAR	_R_AIN4_DATA,F
     006E 21FB                      1- 1071     	MOVIA	0xfb
     006F 0C03                      1- 1072     	BTRSC	STATUS,0
     0070 21FC                      1- 1073     	MOVIA	0xfc
     0071 03rr                      1- 1074     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1075     ;;unsigned compare: left < lit (0x1B8=440), size=2
                                    1- 1076     	.line	588, "main.c"; 	if(R_AIN4_DATA >= 440)
     0072 2101                      1- 1077     	MOVIA	0x01
     0073 04rr                      1- 1078     	SUBAR	(_R_AIN4_DATA + 1),W
     0074 0903                      1- 1079     	BTRSS	STATUS,2
                                    1- 1080     	MGOTO	_00566_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
     0076 21B8                      1- 1081     	MOVIA	0xb8
     0077 04rr                      1- 1082     	SUBAR	_R_AIN4_DATA,W
     0078                           1- 1083     _00566_DS_:
     0078 0803                      1- 1084     	BTRSS	STATUS,0
                                    1- 1085     	MGOTO	_00474_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1086     	.line	590, "main.c"; 	pwStep = 5;
     007A 2105                      1- 1087     	MOVIA	0x05
                                    1- 1088     	BANKSEL	_pwStep
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 00rr                      1- 1089     	MOVAR	_pwStep
                                    1- 1090     	MGOTO	_00476_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1091     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1092     ;;unsigned compare: left >= lit (0x164=356), size=2
     007E                           1- 1093     _00474_DS_:
                                    1- 1094     	.line	592, "main.c"; 	else if(R_AIN4_DATA > 355)
     007E 2101                      1- 1095     	MOVIA	0x01
                                    1- 1096     	BANKSEL	_R_AIN4_DATA
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 04rr                      1- 1097     	SUBAR	(_R_AIN4_DATA + 1),W
     0081 0903                      1- 1098     	BTRSS	STATUS,2
                                    1- 1099     	MGOTO	_00567_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
     0083 2164                      1- 1100     	MOVIA	0x64
     0084 04rr                      1- 1101     	SUBAR	_R_AIN4_DATA,W
     0085                           1- 1102     _00567_DS_:
     0085 0803                      1- 1103     	BTRSS	STATUS,0
                                    1- 1104     	MGOTO	_00471_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1105     	.line	594, "main.c"; 	fullCount = 0;
                                    1- 1106     	BANKSEL	_fullCount
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 02rr                      1- 1107     	CLRR	_fullCount
                                    1- 1108     ;;unsigned compare: left < lit (0x4=4), size=1
                                    1- 1109     	.line	595, "main.c"; 	if(pwStep < 4)
     0089 2104                      1- 1110     	MOVIA	0x04
                                    1- 1111     	BANKSEL	_pwStep
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 04rr                      1- 1112     	SUBAR	_pwStep,W
     008C 0C03                      1- 1113     	BTRSC	STATUS,0
                                    1- 1114     	MGOTO	_00433_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1115     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1116     ;;unsigned compare: left >= lit (0x15F=351), size=2
                                    1- 1117     	.line	597, "main.c"; 	if(R_AIN4_DATA > 350)
     008E 2101                      1- 1118     	MOVIA	0x01
                                    1- 1119     	BANKSEL	_R_AIN4_DATA
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 04rr                      1- 1120     	SUBAR	(_R_AIN4_DATA + 1),W
     0091 0903                      1- 1121     	BTRSS	STATUS,2
                                    1- 1122     	MGOTO	_00569_DS_
     0092 3rrr                      3-   63 m1      LGOTO rom_address
     0093 215F                      1- 1123     	MOVIA	0x5f
     0094 04rr                      1- 1124     	SUBAR	_R_AIN4_DATA,W
     0095                           1- 1125     _00569_DS_:
     0095 0803                      1- 1126     	BTRSS	STATUS,0
                                    1- 1127     	MGOTO	_00434_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1128     	.line	598, "main.c"; 	pwStep = 4;
     0097 2104                      1- 1129     	MOVIA	0x04
                                    1- 1130     	BANKSEL	_pwStep
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 00rr                      1- 1131     	MOVAR	_pwStep
                                    1- 1132     	MGOTO	_00434_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
     009B                           1- 1133     _00433_DS_:
                                    1- 1134     	.line	600, "main.c"; 	else if(chrgTime == 0 && R_AIN4_DATA < 400)
                                    1- 1135     	BANKSEL	_chrgTime
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 01rr                      1- 1136     	MOVR	_chrgTime,W
     009D 11rr                      1- 1137     	IORAR	(_chrgTime + 1),W
     009E 0903                      1- 1138     	BTRSS	STATUS,2
                                    1- 1139     	MGOTO	_00434_DS_
     009F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1140     ;;unsigned compare: left < lit (0x190=400), size=2
     00A0 2101                      1- 1141     	MOVIA	0x01
                                    1- 1142     	BANKSEL	_R_AIN4_DATA
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 04rr                      1- 1143     	SUBAR	(_R_AIN4_DATA + 1),W
     00A3 0903                      1- 1144     	BTRSS	STATUS,2
                                    1- 1145     	MGOTO	_00570_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
     00A5 2190                      1- 1146     	MOVIA	0x90
     00A6 04rr                      1- 1147     	SUBAR	_R_AIN4_DATA,W
     00A7                           1- 1148     _00570_DS_:
     00A7 0C03                      1- 1149     	BTRSC	STATUS,0
                                    1- 1150     	MGOTO	_00434_DS_
     00A8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1151     	.line	602, "main.c"; 	pwStep = 4;
     00A9 2104                      1- 1152     	MOVIA	0x04
                                    1- 1153     	BANKSEL	_pwStep
     00AA rrrr                      3-  110 m1      .banksel ram_address
     00AB 00rr                      1- 1154     	MOVAR	_pwStep
     00AC                           1- 1155     _00434_DS_:
                                    1- 1156     	.line	606, "main.c"; 	if(chrgTime > 0 && R_AIN4_DATA > 430 && chrgTime > 600)
                                    1- 1157     	BANKSEL	_chrgTime
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 01rr                      1- 1158     	MOVR	_chrgTime,W
     00AE 11rr                      1- 1159     	IORAR	(_chrgTime + 1),W
     00AF 0D03                      1- 1160     	BTRSC	STATUS,2
                                    1- 1161     	MGOTO	_00476_DS_
     00B0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1162     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1163     ;;unsigned compare: left >= lit (0x1AF=431), size=2
     00B1 2101                      1- 1164     	MOVIA	0x01
                                    1- 1165     	BANKSEL	_R_AIN4_DATA
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 04rr                      1- 1166     	SUBAR	(_R_AIN4_DATA + 1),W
     00B4 0903                      1- 1167     	BTRSS	STATUS,2
                                    1- 1168     	MGOTO	_00571_DS_
     00B5 3rrr                      3-   63 m1      LGOTO rom_address
     00B6 21AF                      1- 1169     	MOVIA	0xaf
     00B7 04rr                      1- 1170     	SUBAR	_R_AIN4_DATA,W
     00B8                           1- 1171     _00571_DS_:
     00B8 0803                      1- 1172     	BTRSS	STATUS,0
                                    1- 1173     	MGOTO	_00476_DS_
     00B9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1174     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1175     ;;unsigned compare: left >= lit (0x259=601), size=2
     00BA 2102                      1- 1176     	MOVIA	0x02
                                    1- 1177     	BANKSEL	_chrgTime
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 04rr                      1- 1178     	SUBAR	(_chrgTime + 1),W
     00BD 0903                      1- 1179     	BTRSS	STATUS,2
                                    1- 1180     	MGOTO	_00572_DS_
     00BE 3rrr                      3-   63 m1      LGOTO rom_address
     00BF 2159                      1- 1181     	MOVIA	0x59
     00C0 04rr                      1- 1182     	SUBAR	_chrgTime,W
     00C1                           1- 1183     _00572_DS_:
     00C1 0803                      1- 1184     	BTRSS	STATUS,0
                                    1- 1185     	MGOTO	_00476_DS_
     00C2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1186     	.line	608, "main.c"; 	chrgTime = 600;
     00C3 2158                      1- 1187     	MOVIA	0x58
                                    1- 1188     	BANKSEL	_chrgTime
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 00rr                      1- 1189     	MOVAR	_chrgTime
     00C6 2102                      1- 1190     	MOVIA	0x02
     00C7 00rr                      1- 1191     	MOVAR	(_chrgTime + 1)
                                    1- 1192     	.line	609, "main.c"; 	pwStep = 5;
     00C8 2105                      1- 1193     	MOVIA	0x05
                                    1- 1194     	BANKSEL	_pwStep
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 00rr                      1- 1195     	MOVAR	_pwStep
                                    1- 1196     	MGOTO	_00476_DS_
     00CB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1197     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1198     ;;unsigned compare: left >= lit (0xC9=201), size=2
     00CC                           1- 1199     _00471_DS_:
                                    1- 1200     	.line	612, "main.c"; 	else if(R_AIN4_DATA > 200)
     00CC 2100                      1- 1201     	MOVIA	0x00
                                    1- 1202     	BANKSEL	_R_AIN4_DATA
     00CD rrrr                      3-  110 m1      .banksel ram_address
     00CE 04rr                      1- 1203     	SUBAR	(_R_AIN4_DATA + 1),W
     00CF 0903                      1- 1204     	BTRSS	STATUS,2
                                    1- 1205     	MGOTO	_00573_DS_
     00D0 3rrr                      3-   63 m1      LGOTO rom_address
     00D1 21C9                      1- 1206     	MOVIA	0xc9
     00D2 04rr                      1- 1207     	SUBAR	_R_AIN4_DATA,W
     00D3                           1- 1208     _00573_DS_:
     00D3 0803                      1- 1209     	BTRSS	STATUS,0
                                    1- 1210     	MGOTO	_00468_DS_
     00D4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1211     	.line	614, "main.c"; 	if(pwStep == 2)
                                    1- 1212     	BANKSEL	_pwStep
     00D5 rrrr                      3-  110 m1      .banksel ram_address
     00D6 01rr                      1- 1213     	MOVR	_pwStep,W
     00D7 2402                      1- 1214     	XORIA	0x02
     00D8 0903                      1- 1215     	BTRSS	STATUS,2
                                    1- 1216     	MGOTO	_00442_DS_
     00D9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1217     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1218     ;;unsigned compare: left >= lit (0xD3=211), size=2
                                    1- 1219     	.line	616, "main.c"; 	if(R_AIN4_DATA > 210)
     00DA 2100                      1- 1220     	MOVIA	0x00
                                    1- 1221     	BANKSEL	_R_AIN4_DATA
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 04rr                      1- 1222     	SUBAR	(_R_AIN4_DATA + 1),W
     00DD 0903                      1- 1223     	BTRSS	STATUS,2
                                    1- 1224     	MGOTO	_00574_DS_
     00DE 3rrr                      3-   63 m1      LGOTO rom_address
     00DF 21D3                      1- 1225     	MOVIA	0xd3
     00E0 04rr                      1- 1226     	SUBAR	_R_AIN4_DATA,W
     00E1                           1- 1227     _00574_DS_:
     00E1 0803                      1- 1228     	BTRSS	STATUS,0
                                    1- 1229     	MGOTO	_00442_DS_
     00E2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1230     	.line	617, "main.c"; 	pwStep = 3;
     00E3 2103                      1- 1231     	MOVIA	0x03
                                    1- 1232     	BANKSEL	_pwStep
     00E4 rrrr                      3-  110 m1      .banksel ram_address
     00E5 00rr                      1- 1233     	MOVAR	_pwStep
                                    1- 1234     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1235     ;;unsigned compare: left >= lit (0x4=4), size=1
     00E6                           1- 1236     _00442_DS_:
                                    1- 1237     	.line	619, "main.c"; 	if(pwStep > 3)
     00E6 2104                      1- 1238     	MOVIA	0x04
                                    1- 1239     	BANKSEL	_pwStep
     00E7 rrrr                      3-  110 m1      .banksel ram_address
     00E8 04rr                      1- 1240     	SUBAR	_pwStep,W
     00E9 0803                      1- 1241     	BTRSS	STATUS,0
                                    1- 1242     	MGOTO	_00446_DS_
     00EA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1243     ;;unsigned compare: left < lit (0x104=260), size=2
                                    1- 1244     	.line	621, "main.c"; 	if(R_AIN4_DATA < 260)
     00EB 2101                      1- 1245     	MOVIA	0x01
                                    1- 1246     	BANKSEL	_R_AIN4_DATA
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 04rr                      1- 1247     	SUBAR	(_R_AIN4_DATA + 1),W
     00EE 0903                      1- 1248     	BTRSS	STATUS,2
                                    1- 1249     	MGOTO	_00576_DS_
     00EF 3rrr                      3-   63 m1      LGOTO rom_address
     00F0 2104                      1- 1250     	MOVIA	0x04
     00F1 04rr                      1- 1251     	SUBAR	_R_AIN4_DATA,W
     00F2                           1- 1252     _00576_DS_:
     00F2 0C03                      1- 1253     	BTRSC	STATUS,0
                                    1- 1254     	MGOTO	_00447_DS_
     00F3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1255     	.line	622, "main.c"; 	pwStep = 3;
     00F4 2103                      1- 1256     	MOVIA	0x03
                                    1- 1257     	BANKSEL	_pwStep
     00F5 rrrr                      3-  110 m1      .banksel ram_address
     00F6 00rr                      1- 1258     	MOVAR	_pwStep
                                    1- 1259     	MGOTO	_00447_DS_
     00F7 3rrr                      3-   63 m1      LGOTO rom_address
     00F8                           1- 1260     _00446_DS_:
                                    1- 1261     	.line	625, "main.c"; 	pwStep = 3;
     00F8 2103                      1- 1262     	MOVIA	0x03
                                    1- 1263     	BANKSEL	_pwStep
     00F9 rrrr                      3-  110 m1      .banksel ram_address
     00FA 00rr                      1- 1264     	MOVAR	_pwStep
     00FB                           1- 1265     _00447_DS_:
                                    1- 1266     	.line	626, "main.c"; 	chrgTime = 0;
                                    1- 1267     	BANKSEL	_chrgTime
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 02rr                      1- 1268     	CLRR	_chrgTime
     00FD 02rr                      1- 1269     	CLRR	(_chrgTime + 1)
                                    1- 1270     	MGOTO	_00476_DS_
     00FE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1271     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1272     ;;unsigned compare: left >= lit (0x65=101), size=2
     00FF                           1- 1273     _00468_DS_:
                                    1- 1274     	.line	628, "main.c"; 	else if(R_AIN4_DATA > 100)
     00FF 2100                      1- 1275     	MOVIA	0x00
                                    1- 1276     	BANKSEL	_R_AIN4_DATA
     0100 rrrr                      3-  110 m1      .banksel ram_address
     0101 04rr                      1- 1277     	SUBAR	(_R_AIN4_DATA + 1),W
     0102 0903                      1- 1278     	BTRSS	STATUS,2
                                    1- 1279     	MGOTO	_00577_DS_
     0103 3rrr                      3-   63 m1      LGOTO rom_address
     0104 2165                      1- 1280     	MOVIA	0x65
     0105 04rr                      1- 1281     	SUBAR	_R_AIN4_DATA,W
     0106                           1- 1282     _00577_DS_:
     0106 0803                      1- 1283     	BTRSS	STATUS,0
                                    1- 1284     	MGOTO	_00465_DS_
     0107 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1285     	.line	631, "main.c"; 	if(pwStep == 1)
                                    1- 1286     	BANKSEL	_pwStep
     0108 rrrr                      3-  110 m1      .banksel ram_address
     0109 01rr                      1- 1287     	MOVR	_pwStep,W
     010A 2401                      1- 1288     	XORIA	0x01
     010B 0903                      1- 1289     	BTRSS	STATUS,2
                                    1- 1290     	MGOTO	_00451_DS_
     010C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1291     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1292     ;;unsigned compare: left >= lit (0x6F=111), size=2
                                    1- 1293     	.line	633, "main.c"; 	if(R_AIN4_DATA > 110)
     010D 2100                      1- 1294     	MOVIA	0x00
                                    1- 1295     	BANKSEL	_R_AIN4_DATA
     010E rrrr                      3-  110 m1      .banksel ram_address
     010F 04rr                      1- 1296     	SUBAR	(_R_AIN4_DATA + 1),W
     0110 0903                      1- 1297     	BTRSS	STATUS,2
                                    1- 1298     	MGOTO	_00578_DS_
     0111 3rrr                      3-   63 m1      LGOTO rom_address
     0112 216F                      1- 1299     	MOVIA	0x6f
     0113 04rr                      1- 1300     	SUBAR	_R_AIN4_DATA,W
     0114                           1- 1301     _00578_DS_:
     0114 0803                      1- 1302     	BTRSS	STATUS,0
                                    1- 1303     	MGOTO	_00451_DS_
     0115 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1304     	.line	634, "main.c"; 	pwStep = 2;
     0116 2102                      1- 1305     	MOVIA	0x02
                                    1- 1306     	BANKSEL	_pwStep
     0117 rrrr                      3-  110 m1      .banksel ram_address
     0118 00rr                      1- 1307     	MOVAR	_pwStep
                                    1- 1308     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1309     ;;unsigned compare: left >= lit (0x3=3), size=1
     0119                           1- 1310     _00451_DS_:
                                    1- 1311     	.line	636, "main.c"; 	if(pwStep > 2)
     0119 2103                      1- 1312     	MOVIA	0x03
                                    1- 1313     	BANKSEL	_pwStep
     011A rrrr                      3-  110 m1      .banksel ram_address
     011B 04rr                      1- 1314     	SUBAR	_pwStep,W
     011C 0803                      1- 1315     	BTRSS	STATUS,0
                                    1- 1316     	MGOTO	_00455_DS_
     011D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1317     ;;unsigned compare: left < lit (0xBE=190), size=2
                                    1- 1318     	.line	638, "main.c"; 	if(R_AIN4_DATA < 190)
     011E 2100                      1- 1319     	MOVIA	0x00
                                    1- 1320     	BANKSEL	_R_AIN4_DATA
     011F rrrr                      3-  110 m1      .banksel ram_address
     0120 04rr                      1- 1321     	SUBAR	(_R_AIN4_DATA + 1),W
     0121 0903                      1- 1322     	BTRSS	STATUS,2
                                    1- 1323     	MGOTO	_00580_DS_
     0122 3rrr                      3-   63 m1      LGOTO rom_address
     0123 21BE                      1- 1324     	MOVIA	0xbe
     0124 04rr                      1- 1325     	SUBAR	_R_AIN4_DATA,W
     0125                           1- 1326     _00580_DS_:
     0125 0C03                      1- 1327     	BTRSC	STATUS,0
                                    1- 1328     	MGOTO	_00456_DS_
     0126 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1329     	.line	639, "main.c"; 	pwStep = 2;
     0127 2102                      1- 1330     	MOVIA	0x02
                                    1- 1331     	BANKSEL	_pwStep
     0128 rrrr                      3-  110 m1      .banksel ram_address
     0129 00rr                      1- 1332     	MOVAR	_pwStep
                                    1- 1333     	MGOTO	_00456_DS_
     012A 3rrr                      3-   63 m1      LGOTO rom_address
     012B                           1- 1334     _00455_DS_:
                                    1- 1335     	.line	642, "main.c"; 	pwStep = 2;
     012B 2102                      1- 1336     	MOVIA	0x02
                                    1- 1337     	BANKSEL	_pwStep
     012C rrrr                      3-  110 m1      .banksel ram_address
     012D 00rr                      1- 1338     	MOVAR	_pwStep
     012E                           1- 1339     _00456_DS_:
                                    1- 1340     	.line	643, "main.c"; 	chrgTime = 0;
                                    1- 1341     	BANKSEL	_chrgTime
     012E rrrr                      3-  110 m1      .banksel ram_address
     012F 02rr                      1- 1342     	CLRR	_chrgTime
     0130 02rr                      1- 1343     	CLRR	(_chrgTime + 1)
                                    1- 1344     	MGOTO	_00476_DS_
     0131 3rrr                      3-   63 m1      LGOTO rom_address
     0132                           1- 1345     _00465_DS_:
                                    1- 1346     	.line	645, "main.c"; 	else  if(R_AIN4_DATA > 0)
                                    1- 1347     	BANKSEL	_R_AIN4_DATA
     0132 rrrr                      3-  110 m1      .banksel ram_address
     0133 01rr                      1- 1348     	MOVR	_R_AIN4_DATA,W
     0134 11rr                      1- 1349     	IORAR	(_R_AIN4_DATA + 1),W
     0135 0D03                      1- 1350     	BTRSC	STATUS,2
                                    1- 1351     	MGOTO	_00476_DS_
     0136 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1352     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1353     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 1354     	.line	648, "main.c"; 	if(pwStep > 1)
     0137 2102                      1- 1355     	MOVIA	0x02
                                    1- 1356     	BANKSEL	_pwStep
     0138 rrrr                      3-  110 m1      .banksel ram_address
     0139 04rr                      1- 1357     	SUBAR	_pwStep,W
     013A 0803                      1- 1358     	BTRSS	STATUS,0
                                    1- 1359     	MGOTO	_00460_DS_
     013B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1360     ;;unsigned compare: left < lit (0x5A=90), size=2
                                    1- 1361     	.line	650, "main.c"; 	if(R_AIN4_DATA < 90)
     013C 2100                      1- 1362     	MOVIA	0x00
                                    1- 1363     	BANKSEL	_R_AIN4_DATA
     013D rrrr                      3-  110 m1      .banksel ram_address
     013E 04rr                      1- 1364     	SUBAR	(_R_AIN4_DATA + 1),W
     013F 0903                      1- 1365     	BTRSS	STATUS,2
                                    1- 1366     	MGOTO	_00582_DS_
     0140 3rrr                      3-   63 m1      LGOTO rom_address
     0141 215A                      1- 1367     	MOVIA	0x5a
     0142 04rr                      1- 1368     	SUBAR	_R_AIN4_DATA,W
     0143                           1- 1369     _00582_DS_:
     0143 0C03                      1- 1370     	BTRSC	STATUS,0
                                    1- 1371     	MGOTO	_00461_DS_
     0144 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1372     	.line	651, "main.c"; 	pwStep = 1;
     0145 2101                      1- 1373     	MOVIA	0x01
                                    1- 1374     	BANKSEL	_pwStep
     0146 rrrr                      3-  110 m1      .banksel ram_address
     0147 00rr                      1- 1375     	MOVAR	_pwStep
                                    1- 1376     	MGOTO	_00461_DS_
     0148 3rrr                      3-   63 m1      LGOTO rom_address
     0149                           1- 1377     _00460_DS_:
                                    1- 1378     	.line	654, "main.c"; 	pwStep = 1;
     0149 2101                      1- 1379     	MOVIA	0x01
                                    1- 1380     	BANKSEL	_pwStep
     014A rrrr                      3-  110 m1      .banksel ram_address
     014B 00rr                      1- 1381     	MOVAR	_pwStep
     014C                           1- 1382     _00461_DS_:
                                    1- 1383     	.line	655, "main.c"; 	chrgTime = 0;
                                    1- 1384     	BANKSEL	_chrgTime
     014C rrrr                      3-  110 m1      .banksel ram_address
     014D 02rr                      1- 1385     	CLRR	_chrgTime
     014E 02rr                      1- 1386     	CLRR	(_chrgTime + 1)
     014F                           1- 1387     _00476_DS_:
                                    1- 1388     	.line	659, "main.c"; 	}
                                    1- 1389     	RETURN	
     014F 0010                      3-   40 m1      ret
                                    1- 1390     ; exit point of _checkBatAD
                                    1- 1392     ;***
                                    1- 1393     ;  pBlock Stats: dbName = C
                                    1- 1394     ;***
                                    1- 1395     ;has an exit
                                    1- 1396     ;functions called:
                                    1- 1397     ;   _delay
                                    1- 1398     ;   _delay
                                    1- 1399     ;; Starting pCode block
                                    1- 1400     .segment "code"; module=main, function=_initAD
     0000                           1- 1402     _initAD:
                                    1- 1403     ; 2 exit points
                                    1- 1404     	.line	530, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1405     	MOVIA	0x84
     0001 00rr                      1- 1406     	MOVAR	_ADMD
                                    1- 1407     	.line	535, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1408     	CLRR	_ADVREFH
                                    1- 1409     	.line	540, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1410     	MOVIA	0x10
     0004 00rr                      1- 1411     	MOVAR	_ADR
                                    1- 1412     	.line	542, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1413     	MOVIA	0x03
     0006 00rr                      1- 1414     	MOVAR	_ADCR
                                    1- 1415     	.line	545, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1416     	BSR	_ADMDbits,4
                                    1- 1417     	.line	546, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1418     	MOVIA	0x64
                                    1- 1419     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1420     	.line	549, "main.c"; 	}
                                    1- 1421     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1422     ; exit point of _initAD
                                    1- 1424     ;***
                                    1- 1425     ;  pBlock Stats: dbName = C
                                    1- 1426     ;***
                                    1- 1427     ;has an exit
                                    1- 1428     ;2 compiler assigned registers:
                                    1- 1429     ;   r0x1023
                                    1- 1430     ;   r0x1024
                                    1- 1431     ;; Starting pCode block
                                    1- 1432     .segment "code"; module=main, function=_delay
                                    1- 1434     ;local variable name mapping:
     0000                           1- 1437     _delay:
                                    1- 1438     ; 2 exit points
                                    1- 1439     	.line	520, "main.c"; 	void delay(u8t time)
                                    1- 1440     	BANKSEL	r0x1023
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1441     	MOVAR	r0x1023
                                    1- 1442     	.line	522, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1443     	BANKSEL	r0x1024
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1444     	CLRR	r0x1024
     0004                           1- 1445     _00403_DS_:
                                    1- 1446     	BANKSEL	r0x1023
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 1447     	MOVR	r0x1023,W
                                    1- 1448     	BANKSEL	r0x1024
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1- 1449     	SUBAR	r0x1024,W
     0008 0C03                      1- 1450     	BTRSC	STATUS,0
                                    1- 1451     	MGOTO	_00405_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1452     	.line	523, "main.c"; 	NOP();
     000A 0000                      1- 1453     	nop
                                    1- 1454     	.line	522, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1455     	BANKSEL	r0x1024
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 1456     	INCR	r0x1024,F
                                    1- 1457     	MGOTO	_00403_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 1458     _00405_DS_:
                                    1- 1459     	.line	524, "main.c"; 	}
                                    1- 1460     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 1461     ; exit point of _delay
                                    1- 1463     ;***
                                    1- 1464     ;  pBlock Stats: dbName = C
                                    1- 1465     ;***
                                    1- 1466     ;has an exit
                                    1- 1467     ;functions called:
                                    1- 1468     ;   _pwmStop
                                    1- 1469     ;   _pwmStop
                                    1- 1470     ;; Starting pCode block
                                    1- 1471     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1473     _chrgCtr:
                                    1- 1474     ; 2 exit points
                                    1- 1475     	.line	486, "main.c"; 	if(PORTA & 0x20)
                                    1- 1476     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Arr                      1- 1477     	BTRSS	_PORTA,5
                                    1- 1478     	MGOTO	_00394_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1479     	.line	489, "main.c"; 	chrgFlag = 1;
                                    1- 1480     	BANKSEL	_Status
     0003 rrrr                      3-  110 m1      .banksel ram_address
     0004 19rr                      1- 1481     	BSR	_Status,3
                                    1- 1482     	.line	490, "main.c"; 	workStep = 0;
                                    1- 1483     	BANKSEL	_workStep
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1- 1484     	CLRR	_workStep
                                    1- 1485     	.line	491, "main.c"; 	pwmStop();
                                    1- 1486     	MCALL	_pwmStop
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1487     	.line	492, "main.c"; 	if(pwStep == 5)
                                    1- 1488     	BANKSEL	_pwStep
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 01rr                      1- 1489     	MOVR	_pwStep,W
     000A 2405                      1- 1490     	XORIA	0x05
     000B 0903                      1- 1491     	BTRSS	STATUS,2
                                    1- 1492     	MGOTO	_00389_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1493     	.line	495, "main.c"; 	ledStep = 4;
     000D 2104                      1- 1494     	MOVIA	0x04
                                    1- 1495     	BANKSEL	_ledStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1- 1496     	MOVAR	_ledStep
                                    1- 1497     	MGOTO	_00396_DS_
     0010 3rrr                      3-   63 m1      LGOTO rom_address
     0011                           1- 1498     _00389_DS_:
                                    1- 1499     	.line	499, "main.c"; 	if(count500ms == 0)
                                    1- 1500     	BANKSEL	_count500ms
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 1501     	MOVR	_count500ms,W
     0013 0903                      1- 1502     	BTRSS	STATUS,2
                                    1- 1503     	MGOTO	_00396_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1504     	.line	501, "main.c"; 	if(++ledStep > 4)
                                    1- 1505     	BANKSEL	_ledStep
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 05rr                      1- 1506     	INCR	_ledStep,F
                                    1- 1507     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1508     ;;unsigned compare: left >= lit (0x5=5), size=1
     0017 2105                      1- 1509     	MOVIA	0x05
     0018 04rr                      1- 1510     	SUBAR	_ledStep,W
     0019 0803                      1- 1511     	BTRSS	STATUS,0
                                    1- 1512     	MGOTO	_00396_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1513     	.line	502, "main.c"; 	ledStep = pwStep - 1;
                                    1- 1514     	BANKSEL	_pwStep
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 06rr                      1- 1515     	DECR	_pwStep,W
                                    1- 1516     	BANKSEL	_ledStep
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 00rr                      1- 1517     	MOVAR	_ledStep
                                    1- 1518     	MGOTO	_00396_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1- 1519     _00394_DS_:
                                    1- 1520     	.line	511, "main.c"; 	if(workStep == 0)
                                    1- 1521     	BANKSEL	_workStep
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1522     	MOVR	_workStep,W
     0022 0903                      1- 1523     	BTRSS	STATUS,2
                                    1- 1524     	MGOTO	_00003_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1525     	.line	512, "main.c"; 	ledStep = 0;
                                    1- 1526     	BANKSEL	_ledStep
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 02rr                      1- 1527     	CLRR	_ledStep
     0026                           1- 1528     _00003_DS_:
                                    1- 1529     	.line	513, "main.c"; 	chrgFlag = 0;
                                    1- 1530     	BANKSEL	_Status
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 1Drr                      1- 1531     	BCR	_Status,3
                                    1- 1532     	.line	514, "main.c"; 	chrgTime = 0;	//���ó�����
                                    1- 1533     	BANKSEL	_chrgTime
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 02rr                      1- 1534     	CLRR	_chrgTime
     002A 02rr                      1- 1535     	CLRR	(_chrgTime + 1)
     002B                           1- 1536     _00396_DS_:
                                    1- 1537     	.line	517, "main.c"; 	}
                                    1- 1538     	RETURN	
     002B 0010                      3-   40 m1      ret
                                    1- 1539     ; exit point of _chrgCtr
                                    1- 1541     ;***
                                    1- 1542     ;  pBlock Stats: dbName = C
                                    1- 1543     ;***
                                    1- 1544     ;has an exit
                                    1- 1545     ;1 compiler assigned register :
                                    1- 1546     ;   r0x102F
                                    1- 1547     ;; Starting pCode block
                                    1- 1548     .segment "code"; module=main, function=_keyRead
                                    1- 1550     ;local variable name mapping:
     0000                           1- 1552     _keyRead:
                                    1- 1553     ; 2 exit points
                                    1- 1554     	.line	449, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1555     	BANKSEL	r0x102F
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1556     	MOVAR	r0x102F
                                    1- 1557     	.line	451, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 1558     	MOVR	r0x102F,W
     0003 0D03                      1- 1559     	BTRSC	STATUS,2
                                    1- 1560     	MGOTO	_00377_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1561     	.line	453, "main.c"; 	keyCount++;
                                    1- 1562     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 1563     	INCR	_keyCount,F
                                    1- 1564     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 1565     	.line	454, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 1566     	MOVIA	0x64
     0008 04rr                      1- 1567     	SUBAR	_keyCount,W
     0009 0803                      1- 1568     	BTRSS	STATUS,0
                                    1- 1569     	MGOTO	_00378_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1570     	.line	456, "main.c"; 	keyCount = 100;
     000B 2164                      1- 1571     	MOVIA	0x64
     000C 00rr                      1- 1572     	MOVAR	_keyCount
                                    1- 1573     	.line	457, "main.c"; 	if(!longPressFlag)
                                    1- 1574     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Crr                      1- 1575     	BTRSC	_Status,1
                                    1- 1576     	MGOTO	_00378_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1577     	.line	459, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 1578     	BSR	_Status,1
                                    1- 1579     	.line	460, "main.c"; 	return 2;
     0011 2102                      1- 1580     	MOVIA	0x02
                                    1- 1581     	MGOTO	_00379_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1582     ;;unsigned compare: left < lit (0x64=100), size=1
     0013                           1- 1583     _00377_DS_:
                                    1- 1584     	.line	466, "main.c"; 	if(keyCount >= 100)
     0013 2164                      1- 1585     	MOVIA	0x64
                                    1- 1586     	BANKSEL	_keyCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 1587     	SUBAR	_keyCount,W
     0016 0803                      1- 1588     	BTRSS	STATUS,0
                                    1- 1589     	MGOTO	_00374_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1590     	.line	468, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 1591     	CLRR	_keyCount
                                    1- 1592     	.line	469, "main.c"; 	longPressFlag = 0;
                                    1- 1593     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Crr                      1- 1594     	BCR	_Status,1
                                    1- 1595     	.line	470, "main.c"; 	return	0;
     001B 2100                      1- 1596     	MOVIA	0x00
                                    1- 1597     	MGOTO	_00379_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1598     ;;unsigned compare: left < lit (0x4=4), size=1
     001D                           1- 1599     _00374_DS_:
                                    1- 1600     	.line	472, "main.c"; 	else if(keyCount >= 4)
     001D 2104                      1- 1601     	MOVIA	0x04
                                    1- 1602     	BANKSEL	_keyCount
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 1603     	SUBAR	_keyCount,W
     0020 0803                      1- 1604     	BTRSS	STATUS,0
                                    1- 1605     	MGOTO	_00375_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1606     	.line	474, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 1607     	CLRR	_keyCount
                                    1- 1608     	.line	475, "main.c"; 	return	1;
     0023 2101                      1- 1609     	MOVIA	0x01
                                    1- 1610     	MGOTO	_00379_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 1611     _00375_DS_:
                                    1- 1612     	.line	477, "main.c"; 	keyCount = 0;
                                    1- 1613     	BANKSEL	_keyCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 1614     	CLRR	_keyCount
     0027                           1- 1615     _00378_DS_:
                                    1- 1616     	.line	479, "main.c"; 	return 0;
     0027 2100                      1- 1617     	MOVIA	0x00
     0028                           1- 1618     _00379_DS_:
                                    1- 1619     	.line	480, "main.c"; 	}
                                    1- 1620     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 1621     ; exit point of _keyRead
                                    1- 1623     ;***
                                    1- 1624     ;  pBlock Stats: dbName = C
                                    1- 1625     ;***
                                    1- 1626     ;has an exit
                                    1- 1627     ;functions called:
                                    1- 1628     ;   _LedInput
                                    1- 1629     ;   _pwmStop
                                    1- 1630     ;   _LedInput
                                    1- 1631     ;   _pwmStop
                                    1- 1632     ;; Starting pCode block
                                    1- 1633     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1635     _gotoSleep:
                                    1- 1636     ; 2 exit points
                                    1- 1637     	.line	419, "main.c"; 	LedInput();
                                    1- 1638     	MCALL	_LedInput
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1639     	.line	420, "main.c"; 	sleepTime = 0;
                                    1- 1640     	BANKSEL	_sleepTime
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 02rr                      1- 1641     	CLRR	_sleepTime
     0003 02rr                      1- 1642     	CLRR	(_sleepTime + 1)
                                    1- 1643     	.line	422, "main.c"; 	pwmStop();
                                    1- 1644     	MCALL	_pwmStop
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1645     	.line	423, "main.c"; 	workStep = 0;
                                    1- 1646     	BANKSEL	_workStep
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 02rr                      1- 1647     	CLRR	_workStep
                                    1- 1648     	.line	424, "main.c"; 	IOSTA = 0x70;
     0007 2170                      1- 1649     	MOVIA	0x70
     0008 000r                      1- 1650     	IOST	_IOSTA
                                    1- 1651     	.line	425, "main.c"; 	IOSTB = 0x00;
     0009 0200                      1- 1652     	CLRA	
     000A 000r                      1- 1653     	IOST	_IOSTB
                                    1- 1654     	.line	426, "main.c"; 	PORTA = 0x00;
                                    1- 1655     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 02rr                      1- 1656     	CLRR	_PORTA
                                    1- 1657     	.line	427, "main.c"; 	PORTB = 0x00;
     000D 02rr                      1- 1658     	CLRR	_PORTB
                                    1- 1659     	.line	429, "main.c"; 	AWUCON = 0x60;
     000E 2160                      1- 1660     	MOVIA	0x60
     000F 00rr                      1- 1661     	MOVAR	_AWUCON
                                    1- 1662     	.line	430, "main.c"; 	fgPRD = 0;
                                    1- 1663     	BANKSEL	_fgPRD
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 02rr                      1- 1664     	CLRR	_fgPRD
     0012 02rr                      1- 1665     	CLRR	(_fgPRD + 1)
                                    1- 1666     	.line	431, "main.c"; 	fgCount = 0;
                                    1- 1667     	BANKSEL	_fgCount
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 02rr                      1- 1668     	CLRR	_fgCount
     0015 02rr                      1- 1669     	CLRR	(_fgCount + 1)
                                    1- 1670     	.line	432, "main.c"; 	redLedFlag = 0;
                                    1- 1671     	BANKSEL	_Status
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 1Drr                      1- 1672     	BCR	_Status,2
                                    1- 1673     	.line	433, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0018 210B                      1- 1674     	MOVIA	0x0b
     0019 00rr                      1- 1675     	MOVAR	_INTE
                                    1- 1676     	.line	434, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     001A 2118                      1- 1677     	MOVIA	0x18
     001B 00rr                      1- 1678     	MOVAR	_PCON
                                    1- 1679     	.line	435, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     001C 02rr                      1- 1680     	CLRR	_INTF
                                    1- 1681     	.line	436, "main.c"; 	CLRWDT();
     001D 0002                      1- 1682     	clrwdt
                                    1- 1683     	.line	437, "main.c"; 	ENI();
     001E 0004                      1- 1684     	ENI
                                    1- 1685     	.line	438, "main.c"; 	SLEEP();
     001F 0001                      1- 1686     	sleep
                                    1- 1687     	.line	439, "main.c"; 	AWUCON = 0x00;
     0020 02rr                      1- 1688     	CLRR	_AWUCON
                                    1- 1689     	.line	441, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0��Timer1��WDT overflow interrupt
     0021 2101                      1- 1690     	MOVIA	0x01
     0022 00rr                      1- 1691     	MOVAR	_INTE
                                    1- 1692     	.line	442, "main.c"; 	INTF = 0;
     0023 02rr                      1- 1693     	CLRR	_INTF
                                    1- 1694     	.line	444, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0024 21B8                      1- 1695     	MOVIA	0xb8
     0025 00rr                      1- 1696     	MOVAR	_PCON
                                    1- 1697     	.line	446, "main.c"; 	}
                                    1- 1698     	RETURN	
     0026 0010                      3-   40 m1      ret
                                    1- 1699     ; exit point of _gotoSleep
                                    1- 1701     ;***
                                    1- 1702     ;  pBlock Stats: dbName = C
                                    1- 1703     ;***
                                    1- 1704     ;has an exit
                                    1- 1705     ;; Starting pCode block
                                    1- 1706     .segment "code"; module=main, function=_pwmStop
     0000                           1- 1708     _pwmStop:
                                    1- 1709     ; 2 exit points
                                    1- 1710     	.line	413, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 1711     	CLRA	
     0001 00rr                      1- 1712     	SFUN	_T2CR1
                                    1- 1713     	.line	414, "main.c"; 	}
                                    1- 1714     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1715     ; exit point of _pwmStop
                                    1- 1717     ;***
                                    1- 1718     ;  pBlock Stats: dbName = C
                                    1- 1719     ;***
                                    1- 1720     ;has an exit
                                    1- 1721     ;1 compiler assigned register :
                                    1- 1722     ;   r0x1031
                                    1- 1723     ;; Starting pCode block
                                    1- 1724     .segment "code"; module=main, function=_pwmInit
     0000                           1- 1726     _pwmInit:
                                    1- 1727     ; 2 exit points
                                    1- 1728     	.line	401, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 1729     	SFUNR	_T2CR1
                                    1- 1730     	BANKSEL	r0x1031
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1731     	MOVAR	r0x1031
     0003 0Frr                      1- 1732     	BTRSC	r0x1031,7
                                    1- 1733     	.line	402, "main.c"; 	return;
                                    1- 1734     	MGOTO	_00354_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1735     	.line	403, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 1736     	CLRR	_TMRH
                                    1- 1737     	.line	404, "main.c"; 	TMR2 = 100;							//Ƶ��Ϊ110K
     0006 2164                      1- 1738     	MOVIA	0x64
     0007 00rr                      1- 1739     	SFUN	_TMR2
                                    1- 1740     	.line	407, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 1741     	CLRA	
     0009 00rr                      1- 1742     	SFUN	_T2CR2
                                    1- 1743     	.line	408, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 1744     	MOVIA	0x83
     000B 00rr                      1- 1745     	SFUN	_T2CR1
     000C                           1- 1746     _00354_DS_:
                                    1- 1747     	.line	409, "main.c"; 	}
                                    1- 1748     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 1749     ; exit point of _pwmInit
                                    1- 1751     ;***
                                    1- 1752     ;  pBlock Stats: dbName = C
                                    1- 1753     ;***
                                    1- 1754     ;has an exit
                                    1- 1755     ;functions called:
                                    1- 1756     ;   _delay
                                    1- 1757     ;   _LedInput
                                    1- 1758     ;   _delay
                                    1- 1759     ;   _LedInput
                                    1- 1760     ;1 compiler assigned register :
                                    1- 1761     ;   r0x1032
                                    1- 1762     ;; Starting pCode block
                                    1- 1763     .segment "code"; module=main, function=_LED4ON
     0000                           1- 1765     _LED4ON:
                                    1- 1766     ; 2 exit points
                                    1- 1767     	.line	392, "main.c"; 	IOSTB &= 0xF7;
     0000 001r                      1- 1768     	IOSTR	_IOSTB
                                    1- 1769     	BANKSEL	r0x1032
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1770     	MOVAR	r0x1032
     0003 1Drr                      1- 1771     	BCR	r0x1032,3
     0004 01rr                      1- 1772     	MOVR	r0x1032,W
     0005 000r                      1- 1773     	IOST	_IOSTB
                                    1- 1774     	.line	393, "main.c"; 	PORTB |= 0x08;
     0006 19rr                      1- 1775     	BSR	_PORTB,3
                                    1- 1776     	.line	394, "main.c"; 	delay(100);
     0007 2164                      1- 1777     	MOVIA	0x64
                                    1- 1778     	MCALL	_delay
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1779     	.line	395, "main.c"; 	LedInput();
                                    1- 1780     	MCALL	_LedInput
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1781     	.line	396, "main.c"; 	}
                                    1- 1782     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1783     ; exit point of _LED4ON
                                    1- 1785     ;***
                                    1- 1786     ;  pBlock Stats: dbName = C
                                    1- 1787     ;***
                                    1- 1788     ;has an exit
                                    1- 1789     ;functions called:
                                    1- 1790     ;   _delay
                                    1- 1791     ;   _LedInput
                                    1- 1792     ;   _delay
                                    1- 1793     ;   _LedInput
                                    1- 1794     ;1 compiler assigned register :
                                    1- 1795     ;   r0x1033
                                    1- 1796     ;; Starting pCode block
                                    1- 1797     .segment "code"; module=main, function=_LED3ON
     0000                           1- 1799     _LED3ON:
                                    1- 1800     ; 2 exit points
                                    1- 1801     	.line	382, "main.c"; 	IOSTA &= 0XFE;
     0000 001r                      1- 1802     	IOSTR	_IOSTA
                                    1- 1803     	BANKSEL	r0x1033
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1804     	MOVAR	r0x1033
     0003 1Crr                      1- 1805     	BCR	r0x1033,0
     0004 01rr                      1- 1806     	MOVR	r0x1033,W
     0005 000r                      1- 1807     	IOST	_IOSTA
                                    1- 1808     	.line	383, "main.c"; 	PORTA |= 0X01;
                                    1- 1809     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 18rr                      1- 1810     	BSR	_PORTA,0
                                    1- 1811     	.line	384, "main.c"; 	delay(100);
     0008 2164                      1- 1812     	MOVIA	0x64
                                    1- 1813     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1814     	.line	385, "main.c"; 	LedInput();
                                    1- 1815     	MCALL	_LedInput
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1816     	.line	386, "main.c"; 	}
                                    1- 1817     	RETURN	
     000B 0010                      3-   40 m1      ret
                                    1- 1818     ; exit point of _LED3ON
                                    1- 1820     ;***
                                    1- 1821     ;  pBlock Stats: dbName = C
                                    1- 1822     ;***
                                    1- 1823     ;has an exit
                                    1- 1824     ;functions called:
                                    1- 1825     ;   _delay
                                    1- 1826     ;   _LedInput
                                    1- 1827     ;   _delay
                                    1- 1828     ;   _LedInput
                                    1- 1829     ;1 compiler assigned register :
                                    1- 1830     ;   r0x1034
                                    1- 1831     ;; Starting pCode block
                                    1- 1832     .segment "code"; module=main, function=_LED2ON
     0000                           1- 1834     _LED2ON:
                                    1- 1835     ; 2 exit points
                                    1- 1836     	.line	373, "main.c"; 	IOSTA &= 0X7F;
     0000 001r                      1- 1837     	IOSTR	_IOSTA
                                    1- 1838     	BANKSEL	r0x1034
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1839     	MOVAR	r0x1034
     0003 1Frr                      1- 1840     	BCR	r0x1034,7
     0004 01rr                      1- 1841     	MOVR	r0x1034,W
     0005 000r                      1- 1842     	IOST	_IOSTA
                                    1- 1843     	.line	374, "main.c"; 	PORTA |= 0X80;
                                    1- 1844     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 1Brr                      1- 1845     	BSR	_PORTA,7
                                    1- 1846     	.line	375, "main.c"; 	delay(100);
     0008 2164                      1- 1847     	MOVIA	0x64
                                    1- 1848     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1849     	.line	376, "main.c"; 	LedInput();
                                    1- 1850     	MCALL	_LedInput
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1851     	.line	377, "main.c"; 	}
                                    1- 1852     	RETURN	
     000B 0010                      3-   40 m1      ret
                                    1- 1853     ; exit point of _LED2ON
                                    1- 1855     ;***
                                    1- 1856     ;  pBlock Stats: dbName = C
                                    1- 1857     ;***
                                    1- 1858     ;has an exit
                                    1- 1859     ;functions called:
                                    1- 1860     ;   _delay
                                    1- 1861     ;   _LedInput
                                    1- 1862     ;   _delay
                                    1- 1863     ;   _LedInput
                                    1- 1864     ;1 compiler assigned register :
                                    1- 1865     ;   r0x1035
                                    1- 1866     ;; Starting pCode block
                                    1- 1867     .segment "code"; module=main, function=_LED1ON
     0000                           1- 1869     _LED1ON:
                                    1- 1870     ; 2 exit points
                                    1- 1871     	.line	364, "main.c"; 	IOSTA &= 0XFD;
     0000 001r                      1- 1872     	IOSTR	_IOSTA
                                    1- 1873     	BANKSEL	r0x1035
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1874     	MOVAR	r0x1035
     0003 1Crr                      1- 1875     	BCR	r0x1035,1
     0004 01rr                      1- 1876     	MOVR	r0x1035,W
     0005 000r                      1- 1877     	IOST	_IOSTA
                                    1- 1878     	.line	365, "main.c"; 	PORTA |= 0X02;
                                    1- 1879     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 18rr                      1- 1880     	BSR	_PORTA,1
                                    1- 1881     	.line	366, "main.c"; 	delay(100);
     0008 2164                      1- 1882     	MOVIA	0x64
                                    1- 1883     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1884     	.line	367, "main.c"; 	LedInput();
                                    1- 1885     	MCALL	_LedInput
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1886     	.line	368, "main.c"; 	}
                                    1- 1887     	RETURN	
     000B 0010                      3-   40 m1      ret
                                    1- 1888     ; exit point of _LED1ON
                                    1- 1890     ;***
                                    1- 1891     ;  pBlock Stats: dbName = C
                                    1- 1892     ;***
                                    1- 1893     ;has an exit
                                    1- 1894     ;1 compiler assigned register :
                                    1- 1895     ;   r0x1030
                                    1- 1896     ;; Starting pCode block
                                    1- 1897     .segment "code"; module=main, function=_LedInput
     0000                           1- 1899     _LedInput:
                                    1- 1900     ; 2 exit points
                                    1- 1901     	.line	356, "main.c"; 	IOSTA |= 0x83;
     0000 001r                      1- 1902     	IOSTR	_IOSTA
                                    1- 1903     	BANKSEL	r0x1030
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 1904     	MOVAR	r0x1030
     0003 2183                      1- 1905     	MOVIA	0x83
     0004 11rr                      1- 1906     	IORAR	r0x1030,F
     0005 01rr                      1- 1907     	MOVR	r0x1030,W
     0006 000r                      1- 1908     	IOST	_IOSTA
                                    1- 1909     	.line	357, "main.c"; 	IOSTB |= 0x08;
     0007 001r                      1- 1910     	IOSTR	_IOSTB
     0008 00rr                      1- 1911     	MOVAR	r0x1030
     0009 19rr                      1- 1912     	BSR	r0x1030,3
     000A 01rr                      1- 1913     	MOVR	r0x1030,W
     000B 000r                      1- 1914     	IOST	_IOSTB
                                    1- 1915     	.line	358, "main.c"; 	PORTA &= 0x7C;
     000C 217C                      1- 1916     	MOVIA	0x7c
                                    1- 1917     	BANKSEL	_PORTA
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 10rr                      1- 1918     	ANDAR	_PORTA,F
                                    1- 1919     	.line	359, "main.c"; 	PORTB &= 0xF7;
     000F 1Drr                      1- 1920     	BCR	_PORTB,3
                                    1- 1921     	.line	360, "main.c"; 	}
                                    1- 1922     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 1923     ; exit point of _LedInput
                                    1- 1925     ;***
                                    1- 1926     ;  pBlock Stats: dbName = C
                                    1- 1927     ;***
                                    1- 1928     ;has an exit
                                    1- 1929     ;functions called:
                                    1- 1930     ;   _LedInput
                                    1- 1931     ;   _LedInput
                                    1- 1932     ;   _LED4ON
                                    1- 1933     ;   _LED3ON
                                    1- 1934     ;   _LED2ON
                                    1- 1935     ;   _LED1ON
                                    1- 1936     ;   _LedInput
                                    1- 1937     ;   _LedInput
                                    1- 1938     ;   _LED4ON
                                    1- 1939     ;   _LED3ON
                                    1- 1940     ;   _LED2ON
                                    1- 1941     ;   _LED1ON
                                    1- 1942     ;; Starting pCode block
                                    1- 1943     .segment "code"; module=main, function=_ledShow
     0000                           1- 1945     _ledShow:
                                    1- 1946     ; 2 exit points
                                    1- 1947     	.line	323, "main.c"; 	if(shandengTime > 0)
                                    1- 1948     	BANKSEL	_shandengTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 1949     	MOVR	_shandengTime,W
     0002 0D03                      1- 1950     	BTRSC	STATUS,2
                                    1- 1951     	MGOTO	_00308_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1952     	.line	325, "main.c"; 	if(shandengTime % 2)
     0004 08rr                      1- 1953     	BTRSS	_shandengTime,0
                                    1- 1954     	MGOTO	_00305_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1955     	.line	327, "main.c"; 	ledStep = 4;
     0006 2104                      1- 1956     	MOVIA	0x04
                                    1- 1957     	BANKSEL	_ledStep
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 00rr                      1- 1958     	MOVAR	_ledStep
                                    1- 1959     	MGOTO	_00308_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
     000A                           1- 1960     _00305_DS_:
                                    1- 1961     	.line	331, "main.c"; 	ledStep = 0;
                                    1- 1962     	BANKSEL	_ledStep
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 02rr                      1- 1963     	CLRR	_ledStep
     000C                           1- 1964     _00308_DS_:
                                    1- 1965     	.line	334, "main.c"; 	LedInput();
                                    1- 1966     	MCALL	_LedInput
     000C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1967     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1968     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 1969     	.line	335, "main.c"; 	switch(ledStep)
     000D 2105                      1- 1970     	MOVIA	0x05
                                    1- 1971     	BANKSEL	_ledStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 04rr                      1- 1972     	SUBAR	_ledStep,W
     0010 0C03                      1- 1973     	BTRSC	STATUS,0
                                    1- 1974     	MGOTO	_00315_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
     0012 21rr                      1- 1975     	MOVIA	((_00327_DS_ >> 8) & 0xff)
     0013 008A                      1- 1976     	MOVAR	PCHBUF
     0014 01rr                      1- 1977     	MOVR	_ledStep,W
     0015 25rr                      1- 1978     	ADDIA	_00327_DS_
     0016 0C03                      1- 1979     	BTRSC	STATUS,0
     0017 058A                      1- 1980     	INCR	PCHBUF,F
     0018 0082                      1- 1981     	MOVAR	PCL
     0019                           1- 1982     _00327_DS_:
                                    1- 1983     	MGOTO	_00309_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1984     	MGOTO	_00313_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1985     	MGOTO	_00312_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1986     	MGOTO	_00311_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1987     	MGOTO	_00310_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
     001E                           1- 1988     _00309_DS_:
                                    1- 1989     	.line	338, "main.c"; 	LedInput();
                                    1- 1990     	MCALL	_LedInput
     001E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1991     	.line	339, "main.c"; 	break;
                                    1- 1992     	MGOTO	_00315_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
     0020                           1- 1993     _00310_DS_:
                                    1- 1994     	.line	341, "main.c"; 	LED4ON();
                                    1- 1995     	MCALL	_LED4ON
     0020 2rrr                      3-   66 m1      LCALL rom_address
     0021                           1- 1996     _00311_DS_:
                                    1- 1997     	.line	343, "main.c"; 	LED3ON();
                                    1- 1998     	MCALL	_LED3ON
     0021 2rrr                      3-   66 m1      LCALL rom_address
     0022                           1- 1999     _00312_DS_:
                                    1- 2000     	.line	345, "main.c"; 	LED2ON();
                                    1- 2001     	MCALL	_LED2ON
     0022 2rrr                      3-   66 m1      LCALL rom_address
     0023                           1- 2002     _00313_DS_:
                                    1- 2003     	.line	347, "main.c"; 	LED1ON();
                                    1- 2004     	MCALL	_LED1ON
     0023 2rrr                      3-   66 m1      LCALL rom_address
     0024                           1- 2005     _00315_DS_:
                                    1- 2006     	.line	350, "main.c"; 	}
                                    1- 2007     	RETURN	
     0024 0010                      3-   40 m1      ret
                                    1- 2008     ; exit point of _ledShow
                                    1- 2010     ;***
                                    1- 2011     ;  pBlock Stats: dbName = C
                                    1- 2012     ;***
                                    1- 2013     ;has an exit
                                    1- 2014     ;; Starting pCode block
                                    1- 2015     .segment "code"; module=main, function=_initSys
     0000                           1- 2017     _initSys:
                                    1- 2018     ; 2 exit points
                                    1- 2019     	.line	285, "main.c"; 	DISI();
     0000 0013                      1- 2020     	DISI
                                    1- 2021     	.line	286, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input;
     0001 2178                      1- 2022     	MOVIA	0x78
     0002 000r                      1- 2023     	IOST	_IOSTA
                                    1- 2024     	.line	287, "main.c"; 	IOSTB = C_PB0_Input | C_PB1_Input;
     0003 2103                      1- 2025     	MOVIA	0x03
     0004 000r                      1- 2026     	IOST	_IOSTB
                                    1- 2027     	.line	288, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2028     	CLRR	_PORTB
                                    1- 2029     	.line	289, "main.c"; 	PORTA = 0x00;
                                    1- 2030     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 2031     	CLRR	_PORTA
                                    1- 2032     	.line	290, "main.c"; 	APHCON = 0x9F;
     0008 219F                      1- 2033     	MOVIA	0x9f
     0009 000r                      1- 2034     	IOST	_APHCON
                                    1- 2035     	.line	291, "main.c"; 	BPHCON = 0xFF;
     000A 21FF                      1- 2036     	MOVIA	0xff
     000B 00rr                      1- 2037     	MOVAR	_BPHCON
                                    1- 2038     	.line	292, "main.c"; 	ABPLCON = 0xDF;
     000C 21DF                      1- 2039     	MOVIA	0xdf
     000D 00rr                      1- 2040     	MOVAR	_ABPLCON
                                    1- 2041     	.line	294, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0��Timer1��WDT overflow interrupt
     000E 2101                      1- 2042     	MOVIA	0x01
     000F 00rr                      1- 2043     	MOVAR	_INTE
                                    1- 2044     	.line	296, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 2045     	CLRA	
     0011 000r                      1- 2046     	IOST	_PCON1
                                    1- 2047     	.line	298, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 2048     	MOVIA	0x37
     0013 00rr                      1- 2049     	MOVAR	_TMR0
                                    1- 2050     	.line	299, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0014 0200                      1- 2051     	CLRA	
     0015 0003                      1- 2052     	T0MD	
                                    1- 2053     	.line	301, "main.c"; 	PCON1 = C_TMR0_En;
     0016 2101                      1- 2054     	MOVIA	0x01
     0017 000r                      1- 2055     	IOST	_PCON1
                                    1- 2056     	.line	304, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0018 2198                      1- 2057     	MOVIA	0x98
     0019 00rr                      1- 2058     	MOVAR	_PCON
                                    1- 2059     	.line	307, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     001A 2101                      1- 2060     	MOVIA	0x01
     001B 000r                      1- 2061     	IOST	_PCON1
                                    1- 2062     	.line	308, "main.c"; 	ENI();
     001C 0004                      1- 2063     	ENI
                                    1- 2064     	.line	309, "main.c"; 	}
                                    1- 2065     	RETURN	
     001D 0010                      3-   40 m1      ret
                                    1- 2066     ; exit point of _initSys
                                    1- 2068     ;***
                                    1- 2069     ;  pBlock Stats: dbName = C
                                    1- 2070     ;***
                                    1- 2071     ;has an exit
                                    1- 2072     ;functions called:
                                    1- 2073     ;   _pwmStop
                                    1- 2074     ;   _pwmStop
                                    1- 2075     ;; Starting pCode block
                                    1- 2076     .segment "code"; module=main, function=_powerOff
     0000                           1- 2078     _powerOff:
                                    1- 2079     ; 2 exit points
                                    1- 2080     	.line	275, "main.c"; 	workStep = 0;
                                    1- 2081     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2082     	CLRR	_workStep
                                    1- 2083     	.line	276, "main.c"; 	pwmStop();
                                    1- 2084     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2085     	.line	277, "main.c"; 	ledStep = 5;
     0003 2105                      1- 2086     	MOVIA	0x05
                                    1- 2087     	BANKSEL	_ledStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 00rr                      1- 2088     	MOVAR	_ledStep
                                    1- 2089     	.line	278, "main.c"; 	workStartFlag = 2;
     0006 2102                      1- 2090     	MOVIA	0x02
                                    1- 2091     	BANKSEL	_workStartFlag
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 00rr                      1- 2092     	MOVAR	_workStartFlag
                                    1- 2093     	.line	279, "main.c"; 	}
                                    1- 2094     	RETURN	
     0009 0010                      3-   40 m1      ret
                                    1- 2095     ; exit point of _powerOff
                                    1- 2097     ;***
                                    1- 2098     ;  pBlock Stats: dbName = C
                                    1- 2099     ;***
                                    1- 2100     ;has an exit
                                    1- 2101     ;functions called:
                                    1- 2102     ;   _keyRead
                                    1- 2103     ;   _powerOff
                                    1- 2104     ;   _powerOff
                                    1- 2105     ;   _pwmInit
                                    1- 2106     ;   _powerOff
                                    1- 2107     ;   _powerOff
                                    1- 2108     ;   _pwmInit
                                    1- 2109     ;   _keyRead
                                    1- 2110     ;   _powerOff
                                    1- 2111     ;   _powerOff
                                    1- 2112     ;   _pwmInit
                                    1- 2113     ;   _powerOff
                                    1- 2114     ;   _powerOff
                                    1- 2115     ;   _pwmInit
                                    1- 2116     ;1 compiler assigned register :
                                    1- 2117     ;   r0x1036
                                    1- 2118     ;; Starting pCode block
                                    1- 2119     .segment "code"; module=main, function=_keyCtr
                                    1- 2121     ;local variable name mapping:
     0000                           1- 2123     _keyCtr:
                                    1- 2124     ; 2 exit points
                                    1- 2125     	.line	198, "main.c"; 	char kclick = keyRead(0x40 & (~PORTA));
                                    1- 2126     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 2127     	COMR	_PORTA,W
                                    1- 2128     	BANKSEL	r0x1036
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 2129     	MOVAR	r0x1036
     0004 2140                      1- 2130     	MOVIA	0x40
     0005 10rr                      1- 2131     	ANDAR	r0x1036,F
     0006 01rr                      1- 2132     	MOVR	r0x1036,W
                                    1- 2133     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2134     	BANKSEL	r0x1036
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 2135     	MOVAR	r0x1036
                                    1- 2136     	.line	199, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 2137     	XORIA	0x01
     000B 0903                      1- 2138     	BTRSS	STATUS,2
                                    1- 2139     	MGOTO	_00246_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2140     	.line	201, "main.c"; 	count500ms = 0;
                                    1- 2141     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 2142     	CLRR	_count500ms
                                    1- 2143     	.line	203, "main.c"; 	ledTime = 0;
                                    1- 2144     	BANKSEL	_ledTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 2145     	CLRR	_ledTime
                                    1- 2146     	.line	204, "main.c"; 	if(++workStep > 4)
                                    1- 2147     	BANKSEL	_workStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 05rr                      1- 2148     	INCR	_workStep,F
                                    1- 2149     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2150     ;;unsigned compare: left >= lit (0x5=5), size=1
     0013 2105                      1- 2151     	MOVIA	0x05
     0014 04rr                      1- 2152     	SUBAR	_workStep,W
     0015 0C03                      1- 2153     	BTRSC	STATUS,0
                                    1- 2154     	.line	205, "main.c"; 	workStep = 0;
     0016 02rr                      1- 2155     	CLRR	_workStep
                                    1- 2156     	.line	207, "main.c"; 	if(workStep == 0)
     0017 01rr                      1- 2157     	MOVR	_workStep,W
     0018 0903                      1- 2158     	BTRSS	STATUS,2
                                    1- 2159     	MGOTO	_00227_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2160     	.line	209, "main.c"; 	powerOff();
                                    1- 2161     	MCALL	_powerOff
     001A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2162     	MGOTO	_00228_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
     001C                           1- 2163     _00227_DS_:
                                    1- 2164     	.line	211, "main.c"; 	else if(workStep == 1)
                                    1- 2165     	BANKSEL	_workStep
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 01rr                      1- 2166     	MOVR	_workStep,W
     001E 2401                      1- 2167     	XORIA	0x01
     001F 0903                      1- 2168     	BTRSS	STATUS,2
                                    1- 2169     	MGOTO	_00224_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2170     	.line	213, "main.c"; 	maxDuty = 77;
     0021 214D                      1- 2171     	MOVIA	0x4d
                                    1- 2172     	BANKSEL	_maxDuty
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 00rr                      1- 2173     	MOVAR	_maxDuty
                                    1- 2174     	.line	214, "main.c"; 	currentDuty = 85;
     0024 2155                      1- 2175     	MOVIA	0x55
                                    1- 2176     	BANKSEL	_currentDuty
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 00rr                      1- 2177     	MOVAR	_currentDuty
                                    1- 2178     	MGOTO	_00228_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
     0028                           1- 2179     _00224_DS_:
                                    1- 2180     	.line	216, "main.c"; 	else if(workStep == 2)
                                    1- 2181     	BANKSEL	_workStep
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 01rr                      1- 2182     	MOVR	_workStep,W
     002A 2402                      1- 2183     	XORIA	0x02
     002B 0903                      1- 2184     	BTRSS	STATUS,2
                                    1- 2185     	MGOTO	_00221_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2186     	.line	217, "main.c"; 	maxDuty = 85;
     002D 2155                      1- 2187     	MOVIA	0x55
                                    1- 2188     	BANKSEL	_maxDuty
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 00rr                      1- 2189     	MOVAR	_maxDuty
                                    1- 2190     	MGOTO	_00228_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 2191     _00221_DS_:
                                    1- 2192     	.line	218, "main.c"; 	else if(workStep == 3)
                                    1- 2193     	BANKSEL	_workStep
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1- 2194     	MOVR	_workStep,W
     0033 2403                      1- 2195     	XORIA	0x03
     0034 0903                      1- 2196     	BTRSS	STATUS,2
                                    1- 2197     	MGOTO	_00218_DS_
     0035 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2198     	.line	219, "main.c"; 	maxDuty = 93;
     0036 215D                      1- 2199     	MOVIA	0x5d
                                    1- 2200     	BANKSEL	_maxDuty
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 00rr                      1- 2201     	MOVAR	_maxDuty
                                    1- 2202     	MGOTO	_00228_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
     003A                           1- 2203     _00218_DS_:
                                    1- 2204     	.line	220, "main.c"; 	else if(workStep == 4)
                                    1- 2205     	BANKSEL	_workStep
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1- 2206     	MOVR	_workStep,W
     003C 2404                      1- 2207     	XORIA	0x04
     003D 0903                      1- 2208     	BTRSS	STATUS,2
                                    1- 2209     	MGOTO	_00228_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2210     	.line	221, "main.c"; 	maxDuty = 100;
     003F 2164                      1- 2211     	MOVIA	0x64
                                    1- 2212     	BANKSEL	_maxDuty
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 00rr                      1- 2213     	MOVAR	_maxDuty
     0042                           1- 2214     _00228_DS_:
                                    1- 2215     	.line	222, "main.c"; 	if(workStep > 0)
                                    1- 2216     	BANKSEL	_workStep
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1- 2217     	MOVR	_workStep,W
     0044 0D03                      1- 2218     	BTRSC	STATUS,2
                                    1- 2219     	MGOTO	_00236_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2220     	.line	224, "main.c"; 	if(workStep == 1)
     0046 01rr                      1- 2221     	MOVR	_workStep,W
     0047 2401                      1- 2222     	XORIA	0x01
     0048 0903                      1- 2223     	BTRSS	STATUS,2
                                    1- 2224     	MGOTO	_00230_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2225     	.line	226, "main.c"; 	PWM2DUTY = 85;
     004A 2155                      1- 2226     	MOVIA	0x55
     004B 00rr                      1- 2227     	SFUN	_PWM2DUTY
                                    1- 2228     	MGOTO	_00231_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
     004D                           1- 2229     _00230_DS_:
                                    1- 2230     	.line	230, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 2231     	BANKSEL	_maxDuty
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 01rr                      1- 2232     	MOVR	_maxDuty,W
     004F 00rr                      1- 2233     	SFUN	_PWM2DUTY
                                    1- 2234     ;;unsigned compare: left < lit (0x46=70), size=2
     0050                           1- 2235     _00231_DS_:
                                    1- 2236     	.line	232, "main.c"; 	if(R_AIN4_DATA < 70)
     0050 2100                      1- 2237     	MOVIA	0x00
                                    1- 2238     	BANKSEL	_R_AIN4_DATA
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 04rr                      1- 2239     	SUBAR	(_R_AIN4_DATA + 1),W
     0053 0903                      1- 2240     	BTRSS	STATUS,2
                                    1- 2241     	MGOTO	_00290_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
     0055 2146                      1- 2242     	MOVIA	0x46
     0056 04rr                      1- 2243     	SUBAR	_R_AIN4_DATA,W
     0057                           1- 2244     _00290_DS_:
     0057 0C03                      1- 2245     	BTRSC	STATUS,0
                                    1- 2246     	MGOTO	_00233_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2247     	.line	234, "main.c"; 	closeCount = 0;
                                    1- 2248     	BANKSEL	_closeCount
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 02rr                      1- 2249     	CLRR	_closeCount
     005B 02rr                      1- 2250     	CLRR	(_closeCount + 1)
                                    1- 2251     	.line	235, "main.c"; 	workStep = 0;
                                    1- 2252     	BANKSEL	_workStep
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 02rr                      1- 2253     	CLRR	_workStep
                                    1- 2254     	.line	236, "main.c"; 	ledStep = 0;
                                    1- 2255     	BANKSEL	_ledStep
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 02rr                      1- 2256     	CLRR	_ledStep
                                    1- 2257     	.line	237, "main.c"; 	powerOff();
                                    1- 2258     	MCALL	_powerOff
     0060 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2259     	.line	238, "main.c"; 	shandengTime = 6;
     0061 2106                      1- 2260     	MOVIA	0x06
                                    1- 2261     	BANKSEL	_shandengTime
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 00rr                      1- 2262     	MOVAR	_shandengTime
                                    1- 2263     	MGOTO	_00236_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
     0065                           1- 2264     _00233_DS_:
                                    1- 2265     	.line	241, "main.c"; 	pwmInit();
                                    1- 2266     	MCALL	_pwmInit
     0065 2rrr                      3-   66 m1      LCALL rom_address
     0066                           1- 2267     _00236_DS_:
                                    1- 2268     	.line	243, "main.c"; 	ledStep = workStep;
                                    1- 2269     	BANKSEL	_workStep
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 01rr                      1- 2270     	MOVR	_workStep,W
                                    1- 2271     	BANKSEL	_ledStep
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 00rr                      1- 2272     	MOVAR	_ledStep
                                    1- 2273     	MGOTO	_00248_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
     006B                           1- 2274     _00246_DS_:
                                    1- 2275     	.line	245, "main.c"; 	else if(kclick == 2)
                                    1- 2276     	BANKSEL	r0x1036
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 01rr                      1- 2277     	MOVR	r0x1036,W
     006D 2402                      1- 2278     	XORIA	0x02
     006E 0903                      1- 2279     	BTRSS	STATUS,2
                                    1- 2280     	MGOTO	_00248_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2281     	.line	247, "main.c"; 	if(workStep > 0)
                                    1- 2282     	BANKSEL	_workStep
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 01rr                      1- 2283     	MOVR	_workStep,W
     0072 0D03                      1- 2284     	BTRSC	STATUS,2
                                    1- 2285     	MGOTO	_00241_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2286     	.line	249, "main.c"; 	powerOff();
                                    1- 2287     	MCALL	_powerOff
     0074 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2288     	MGOTO	_00242_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
     0076                           1- 2289     _00241_DS_:
                                    1- 2290     	.line	253, "main.c"; 	workStep = 1;
     0076 2101                      1- 2291     	MOVIA	0x01
                                    1- 2292     	BANKSEL	_workStep
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 00rr                      1- 2293     	MOVAR	_workStep
                                    1- 2294     	.line	254, "main.c"; 	PWM2DUTY = 85;
     0079 2155                      1- 2295     	MOVIA	0x55
     007A 00rr                      1- 2296     	SFUN	_PWM2DUTY
                                    1- 2297     	.line	255, "main.c"; 	maxDuty = 77;
     007B 214D                      1- 2298     	MOVIA	0x4d
                                    1- 2299     	BANKSEL	_maxDuty
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 00rr                      1- 2300     	MOVAR	_maxDuty
                                    1- 2301     	.line	256, "main.c"; 	currentDuty = 85;
     007E 2155                      1- 2302     	MOVIA	0x55
                                    1- 2303     	BANKSEL	_currentDuty
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 00rr                      1- 2304     	MOVAR	_currentDuty
                                    1- 2305     ;;unsigned compare: left < lit (0x46=70), size=2
                                    1- 2306     	.line	257, "main.c"; 	if(R_AIN4_DATA < 70)
     0081 2100                      1- 2307     	MOVIA	0x00
                                    1- 2308     	BANKSEL	_R_AIN4_DATA
     0082 rrrr                      3-  110 m1      .banksel ram_address
     0083 04rr                      1- 2309     	SUBAR	(_R_AIN4_DATA + 1),W
     0084 0903                      1- 2310     	BTRSS	STATUS,2
                                    1- 2311     	MGOTO	_00291_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
     0086 2146                      1- 2312     	MOVIA	0x46
     0087 04rr                      1- 2313     	SUBAR	_R_AIN4_DATA,W
     0088                           1- 2314     _00291_DS_:
     0088 0C03                      1- 2315     	BTRSC	STATUS,0
                                    1- 2316     	MGOTO	_00238_DS_
     0089 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2317     	.line	259, "main.c"; 	closeCount = 0;
                                    1- 2318     	BANKSEL	_closeCount
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 02rr                      1- 2319     	CLRR	_closeCount
     008C 02rr                      1- 2320     	CLRR	(_closeCount + 1)
                                    1- 2321     	.line	260, "main.c"; 	workStep = 0;
                                    1- 2322     	BANKSEL	_workStep
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 02rr                      1- 2323     	CLRR	_workStep
                                    1- 2324     	.line	261, "main.c"; 	ledStep = 0;
                                    1- 2325     	BANKSEL	_ledStep
     008F rrrr                      3-  110 m1      .banksel ram_address
     0090 02rr                      1- 2326     	CLRR	_ledStep
                                    1- 2327     	.line	262, "main.c"; 	powerOff();
                                    1- 2328     	MCALL	_powerOff
     0091 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2329     	.line	263, "main.c"; 	shandengTime = 6;
     0092 2106                      1- 2330     	MOVIA	0x06
                                    1- 2331     	BANKSEL	_shandengTime
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 00rr                      1- 2332     	MOVAR	_shandengTime
                                    1- 2333     	MGOTO	_00242_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
     0096                           1- 2334     _00238_DS_:
                                    1- 2335     	.line	266, "main.c"; 	pwmInit();
                                    1- 2336     	MCALL	_pwmInit
     0096 2rrr                      3-   66 m1      LCALL rom_address
     0097                           1- 2337     _00242_DS_:
                                    1- 2338     	.line	268, "main.c"; 	ledStep = workStep;
                                    1- 2339     	BANKSEL	_workStep
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 01rr                      1- 2340     	MOVR	_workStep,W
                                    1- 2341     	BANKSEL	_ledStep
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 00rr                      1- 2342     	MOVAR	_ledStep
     009B                           1- 2343     _00248_DS_:
                                    1- 2344     	.line	270, "main.c"; 	}
                                    1- 2345     	RETURN	
     009B 0010                      3-   40 m1      ret
                                    1- 2346     ; exit point of _keyCtr
                                    1- 2349     ;	code size estimation:
                                    1- 2350     ;	  852+  200 =  1052 instructions ( 2504 byte)
                                    1- 2352     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
