
                    Nyquest Technology Co., Ltd.

NYASM 2.26

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_PORTAbits
                                    1-   16     	extern	_PORTBbits
                                    1-   17     	extern	_PCONbits
                                    1-   18     	extern	_BWUCONbits
                                    1-   19     	extern	_ABPLCONbits
                                    1-   20     	extern	_BPHCONbits
                                    1-   21     	extern	_INTEbits
                                    1-   22     	extern	_INTFbits
                                    1-   23     	extern	_ADMDbits
                                    1-   24     	extern	_ADRbits
                                    1-   25     	extern	_ADVREFHbits
                                    1-   26     	extern	_ADCRbits
                                    1-   27     	extern	_AWUCONbits
                                    1-   28     	extern	_PACONbits
                                    1-   29     	extern	_INTEDGbits
                                    1-   30     	extern	_ANAENbits
                                    1-   31     	extern	_RFCbits
                                    1-   32     	extern	_INTE2bits
                                    1-   33     	extern	_INDF
                                    1-   34     	extern	_TMR0
                                    1-   35     	extern	_PCL
                                    1-   36     	extern	_STATUS
                                    1-   37     	extern	_FSR
                                    1-   38     	extern	_PORTA
                                    1-   39     	extern	_PORTB
                                    1-   40     	extern	_PCON
                                    1-   41     	extern	_BWUCON
                                    1-   42     	extern	_PCHBUF
                                    1-   43     	extern	_ABPLCON
                                    1-   44     	extern	_BPHCON
                                    1-   45     	extern	_INTE
                                    1-   46     	extern	_INTF
                                    1-   47     	extern	_ADMD
                                    1-   48     	extern	_ADR
                                    1-   49     	extern	_ADD
                                    1-   50     	extern	_ADVREFH
                                    1-   51     	extern	_ADCR
                                    1-   52     	extern	_AWUCON
                                    1-   53     	extern	_PACON
                                    1-   54     	extern	_INTEDG
                                    1-   55     	extern	_TMRH
                                    1-   56     	extern	_ANAEN
                                    1-   57     	extern	_RFC
                                    1-   58     	extern	_TM3RH
                                    1-   59     	extern	_INTE2
                                    1-   60     	extern	_TMR1
                                    1-   61     	extern	_T1CR1
                                    1-   62     	extern	_T1CR2
                                    1-   63     	extern	_PWM1DUTY
                                    1-   64     	extern	_PS1CV
                                    1-   65     	extern	_BZ1CR
                                    1-   66     	extern	_IRCR
                                    1-   67     	extern	_TBHP
                                    1-   68     	extern	_TBHD
                                    1-   69     	extern	_TMR2
                                    1-   70     	extern	_T2CR1
                                    1-   71     	extern	_T2CR2
                                    1-   72     	extern	_PWM2DUTY
                                    1-   73     	extern	_PS2CV
                                    1-   74     	extern	_BZ2CR
                                    1-   75     	extern	_OSCCR
                                    1-   76     	extern	_TMR3
                                    1-   77     	extern	_T3CR1
                                    1-   78     	extern	_T3CR2
                                    1-   79     	extern	_PWM3DUTY
                                    1-   80     	extern	_PS3CV
                                    1-   81     	extern	_BZ3CR
                                    1-   82     	extern	_IOSTA
                                    1-   83     	extern	_IOSTB
                                    1-   84     	extern	_APHCON
                                    1-   85     	extern	_PS0CV
                                    1-   86     	extern	_BODCON
                                    1-   87     	extern	_CMPCR
                                    1-   88     	extern	_PCON1
                                    1-   89     	extern	_T0MD
                                    1-   90     	extern	___sdcc_saved_fsr
                                    1-   91     	extern	___sdcc_saved_stk00
                                    1-   92     	extern	___sdcc_saved_stk01
                                    1-   93     	extern	__nyc_ny8_startup
                                    1-   94     ;--------------------------------------------------------
                                    1-   95     ; global declarations
                                    1-   96     ;--------------------------------------------------------
                                    1-   97     	extern	_F_wait_eoc
                                    1-   98     	extern	_F_AIN5_Convert
                                    1-   99     	extern	_checkBatAD
                                    1-  100     	extern	_initAD
                                    1-  101     	extern	_delay
                                    1-  102     	extern	_chrgCtr
                                    1-  103     	extern	_keyRead
                                    1-  104     	extern	_gotoSleep
                                    1-  105     	extern	_powerOff
                                    1-  106     	extern	_keyCtr
                                    1-  107     	extern	_ledCtr
                                    1-  108     	extern	_LedCtr2
                                    1-  109     	extern	_workCtr
                                    1-  110     	extern	_pwmStop
                                    1-  111     	extern	_pwmInit
                                    1-  112     	extern	_LED4ON
                                    1-  113     	extern	_LED3ON
                                    1-  114     	extern	_LED2ON
                                    1-  115     	extern	_LED1ON
                                    1-  116     	extern	_LedInput
                                    1-  117     	extern	_ledShow
                                    1-  118     	extern	_initSys
                                    1-  119     	extern	_fgCtr
                                    1-  120     	extern	_isr
                                    1-  121     	extern	_main
                                    1-  122     	extern	_LEDHON
                                    1-  123     	extern	_LEDLON
                                    1-  124     	extern	_LEDHOFF
                                    1-  125     	extern	_LEDLOFF
                                    1-  126     	extern	_Status
                                    1-  127     	extern	_duty
                                    1-  128     	extern	_intCount
                                    1-  129     	extern	_count500ms
                                    1-  130     	extern	_keyCount
                                    1-  131     	extern	_workStep
                                    1-  132     	extern	_ledStep
                                    1-  133     	extern	_fgCount
                                    1-  134     	extern	_fgPRD
                                    1-  135     	extern	_preFG
                                    1-  136     	extern	_maxDuty
                                    1-  137     	extern	_pwStep
                                    1-  138     	extern	_R_AIN5_DATA
                                    1-  139     	extern	_R_AIN5_DATA_LB
                                    1-  140     	extern	_chrgTime
                                    1-  141     	extern	_startStep
                                    1-  142     	extern	_sleepTime
                                    1-  143     	extern	_count200ms
                                    1-  144     	extern	_count1s
                                    1-  145     	extern	_count900s
                                    1-  146     	extern	_lowBatTime
                                    1-  147     	extern	_ledTime
                                    1-  148     	extern	_workStartFlag
                                    1-  150     	extern PSAVE
                                    1-  151     	extern SSAVE
                                    1-  152     	extern WSAVE
                                    1-  153     	extern STK02
                                    1-  154     	extern STK01
                                    1-  155     	extern STK00
                                    1-  157     .segment "uninit", 0x20000040
 20000040                           1-  158     PSAVE:
                                    1-  159     	.res 1
 20000041                           1-  160     SSAVE:
                                    1-  161     	.res 1
 20000042                           1-  162     WSAVE:
                                    1-  163     	.res 1
 20000043                           1-  164     STK02:
                                    1-  165     	.res 1
 20000044                           1-  166     STK01:
                                    1-  167     	.res 1
 20000045                           1-  168     STK00:
                                    1-  169     	.res 1
                                    1-  171     ;--------------------------------------------------------
                                    1-  172     ; global definitions
                                    1-  173     ;--------------------------------------------------------
                                    1-  174     .segment "uninit"
     0000                           1-  175     _R_AIN5_DATA:
                                    1-  176     	.res	2
                                    1-  179     .segment "uninit"
     0000                           1-  180     _R_AIN5_DATA_LB:
                                    1-  181     	.res	1
                                    1-  184     ;--------------------------------------------------------
                                    1-  185     ; absolute symbol definitions
                                    1-  186     ;--------------------------------------------------------
                                    1-  187     ;--------------------------------------------------------
                                    1-  188     ; compiler-defined variables
                                    1-  189     ;--------------------------------------------------------
                                    1-  190     .segment "uninit"
     0000                           1-  191     r0x102C:
                                    1-  192     	.res	1
                                    1-  193     .segment "uninit"
     0000                           1-  194     r0x1034:
                                    1-  195     	.res	1
                                    1-  196     .segment "uninit"
     0000                           1-  197     r0x1033:
                                    1-  198     	.res	1
                                    1-  199     .segment "uninit"
     0000                           1-  200     r0x1032:
                                    1-  201     	.res	1
                                    1-  202     .segment "uninit"
     0000                           1-  203     r0x1031:
                                    1-  204     	.res	1
                                    1-  205     .segment "uninit"
     0000                           1-  206     r0x102E:
                                    1-  207     	.res	1
                                    1-  208     .segment "uninit"
     0000                           1-  209     r0x1030:
                                    1-  210     	.res	1
                                    1-  211     .segment "uninit"
     0000                           1-  212     r0x102F:
                                    1-  213     	.res	1
                                    1-  214     .segment "uninit"
     0000                           1-  215     r0x102D:
                                    1-  216     	.res	1
                                    1-  217     .segment "uninit"
     0000                           1-  218     r0x1020:
                                    1-  219     	.res	1
                                    1-  220     .segment "uninit"
     0000                           1-  221     r0x1021:
                                    1-  222     	.res	1
                                    1-  223     .segment "uninit"
     0000                           1-  224     r0x102A:
                                    1-  225     	.res	1
                                    1-  226     .segment "uninit"
     0000                           1-  227     r0x102B:
                                    1-  228     	.res	1
                                    1-  229     .segment "uninit"
     0000                           1-  230     r0x1022:
                                    1-  231     	.res	1
                                    1-  232     .segment "uninit"
     0000                           1-  233     r0x1023:
                                    1-  234     	.res	1
                                    1-  235     .segment "uninit"
     0000                           1-  236     r0x1024:
                                    1-  237     	.res	1
                                    1-  238     .segment "uninit"
     0000                           1-  239     r0x1027:
                                    1-  240     	.res	1
                                    1-  241     ;--------------------------------------------------------
                                    1-  242     ; initialized data
                                    1-  243     ;--------------------------------------------------------
                                    1-  245     .segment "idata"
     0000                           1-  246     _Status:
     0000 0000                      1-  247     	dw	0x00
                                    1-  251     .segment "idata"
     0000                           1-  252     _duty:
     0000 0000 0000                 1-  253     	dw	0x00, 0x00
                                    1-  257     .segment "idata"
     0000                           1-  258     _intCount:
     0000 0000                      1-  259     	dw	0x00
                                    1-  263     .segment "idata"
     0000                           1-  264     _count500ms:
     0000 0000                      1-  265     	dw	0x00
                                    1-  269     .segment "idata"
     0000                           1-  270     _keyCount:
     0000 0000                      1-  271     	dw	0x00
                                    1-  275     .segment "idata"
     0000                           1-  276     _workStep:
     0000 0000                      1-  277     	dw	0x00
                                    1-  281     .segment "idata"
     0000                           1-  282     _ledStep:
     0000 0000                      1-  283     	dw	0x00
                                    1-  287     .segment "idata"
     0000                           1-  288     _fgCount:
     0000 0000 0000                 1-  289     	dw	0x00, 0x00
                                    1-  293     .segment "idata"
     0000                           1-  294     _fgPRD:
     0000 0000 0000                 1-  295     	dw	0x00, 0x00
                                    1-  299     .segment "idata"
     0000                           1-  300     _preFG:
     0000 0000                      1-  301     	dw	0x00
                                    1-  305     .segment "idata"
     0000                           1-  306     _maxDuty:
     0000 0000                      1-  307     	dw	0x00
                                    1-  311     .segment "idata"
     0000                           1-  312     _pwStep:
     0000 0000                      1-  313     	dw	0x00
                                    1-  317     .segment "idata"
     0000                           1-  318     _chrgTime:
     0000 0000 0000                 1-  319     	dw	0x00, 0x00
                                    1-  323     .segment "idata"
     0000                           1-  324     _startStep:
     0000 0000                      1-  325     	dw	0x00
                                    1-  329     .segment "idata"
     0000                           1-  330     _sleepTime:
     0000 0000 0000                 1-  331     	dw	0x00, 0x00
                                    1-  335     .segment "idata"
     0000                           1-  336     _count200ms:
     0000 0000                      1-  337     	dw	0x00
                                    1-  341     .segment "idata"
     0000                           1-  342     _count1s:
     0000 0000                      1-  343     	dw	0x00
                                    1-  347     .segment "idata"
     0000                           1-  348     _count900s:
     0000 0000 0000                 1-  349     	dw	0x00, 0x00
                                    1-  353     .segment "idata"
     0000                           1-  354     _lowBatTime:
     0000 0000                      1-  355     	dw	0x00
                                    1-  359     .segment "idata"
     0000                           1-  360     _ledTime:
     0000 0000                      1-  361     	dw	0x00
                                    1-  365     .segment "idata"
     0000                           1-  366     _workStartFlag:
     0000 0000                      1-  367     	dw	0x00
                                    1-  370     ;--------------------------------------------------------
                                    1-  371     ; overlayable items in internal ram 
                                    1-  372     ;--------------------------------------------------------
                                    1-  373     ;	udata_ovr
                                    1-  374     ;--------------------------------------------------------
                                    1-  375     ; reset vector 
                                    1-  376     ;--------------------------------------------------------
                                    1-  377     ORG	0x0000
     0000 3rrr                      1-  378     	LGOTO	__nyc_ny8_startup
                                    1-  379     ;--------------------------------------------------------
                                    1-  380     ; interrupt and initialization code
                                    1-  381     ;--------------------------------------------------------
                                    1-  382     ORG 0x0008
     0008 3rrr                      1-  383     	lgoto	__sdcc_interrupt
                                    1-  385     .segment "code"
     0000                           1-  386     __sdcc_interrupt:
                                    1-  387     ;***
                                    1-  388     ;  pBlock Stats: dbName = I
                                    1-  389     ;***
                                    1-  390     ;2 compiler assigned registers:
                                    1-  391     ;   STK00
                                    1-  392     ;   STK01
                                    1-  393     ;; Starting pCode block
     0000                           1-  394     _isr:
                                    1-  395     ; 0 exit points
                                    1-  396     	.line	81, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  397     	MOVAR	WSAVE
     0001 1503                      1-  398     	SWAPR	STATUS,W
     0002 0283                      1-  399     	CLRR	STATUS
     0003 00rr                      1-  400     	MOVAR	SSAVE
     0004 010A                      1-  401     	MOVR	PCHBUF,W
     0005 028A                      1-  402     	CLRR	PCHBUF
     0006 00rr                      1-  403     	MOVAR	PSAVE
     0007 0104                      1-  404     	MOVR	FSR,W
                                    1-  405     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1-  406     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  407     	MOVR	STK00,W
                                    1-  408     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 00rr                      1-  409     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  410     	MOVR	STK01,W
                                    1-  411     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 00rr                      1-  412     	MOVAR	___sdcc_saved_stk01
                                    1-  413     	.line	83, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  414     	BTRSS	_INTFbits,0
     0011 3rrr                      1-  415     	LGOTO	_00119_DS_
                                    1-  416     	.line	85, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  417     	MOVIA	0x37
     0013 03rr                      1-  418     	ADDAR	_TMR0,F
                                    1-  419     	.line	87, "main.c"; 	if(++intCount >= 100)
                                    1-  420     	BANKSEL	_intCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 05rr                      1-  421     	INCR	_intCount,F
                                    1-  422     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  423     	MOVIA	0x64
     0017 04rr                      1-  424     	SUBAR	_intCount,W
     0018 0803                      1-  425     	BTRSS	STATUS,0
     0019 3rrr                      1-  426     	LGOTO	_00119_DS_
                                    1-  427     	.line	89, "main.c"; 	IntFlag = 1;
                                    1-  428     	BANKSEL	_Status
     001A rrrr                      3-   71 m1      .banksel ram_address
     001B 18rr                      1-  429     	BSR	_Status,0
                                    1-  430     	.line	90, "main.c"; 	intCount = 0;
                                    1-  431     	BANKSEL	_intCount
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 02rr                      1-  432     	CLRR	_intCount
                                    1-  433     	.line	91, "main.c"; 	if(workStep)
                                    1-  434     	BANKSEL	_workStep
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1-  435     	MOVR	_workStep,W
     0020 0D03                      1-  436     	BTRSC	STATUS,2
     0021 3rrr                      1-  437     	LGOTO	_00106_DS_
                                    1-  438     	.line	92, "main.c"; 	++fgCount;
                                    1-  439     	BANKSEL	_fgCount
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 05rr                      1-  440     	INCR	_fgCount,F
     0024 0D03                      1-  441     	BTRSC	STATUS,2
     0025 05rr                      1-  442     	INCR	(_fgCount + 1),F
     0026                           1-  443     _00106_DS_:
                                    1-  444     	.line	93, "main.c"; 	if(++count500ms >= 40)
                                    1-  445     	BANKSEL	_count500ms
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 05rr                      1-  446     	INCR	_count500ms,F
                                    1-  447     ;;unsigned compare: left < lit (0x28=40), size=1
     0028 2128                      1-  448     	MOVIA	0x28
     0029 04rr                      1-  449     	SUBAR	_count500ms,W
     002A 0C03                      1-  450     	BTRSC	STATUS,0
                                    1-  451     	.line	94, "main.c"; 	count500ms = 0;
     002B 02rr                      1-  452     	CLRR	_count500ms
                                    1-  453     	.line	95, "main.c"; 	if(++count200ms >= 20)
                                    1-  454     	BANKSEL	_count200ms
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1-  455     	INCR	_count200ms,F
     002E 2114                      1-  456     	MOVIA	0x14
     002F 04rr                      1-  457     	SUBAR	_count200ms,W
     0030 0C03                      1-  458     	BTRSC	STATUS,0
                                    1-  459     	.line	96, "main.c"; 	count200ms = 0;
     0031 02rr                      1-  460     	CLRR	_count200ms
                                    1-  461     	.line	97, "main.c"; 	if(++count1s >= 100)
                                    1-  462     	BANKSEL	_count1s
     0032 rrrr                      3-   71 m1      .banksel ram_address
     0033 05rr                      1-  463     	INCR	_count1s,F
     0034 2164                      1-  464     	MOVIA	0x64
     0035 04rr                      1-  465     	SUBAR	_count1s,W
     0036 0803                      1-  466     	BTRSS	STATUS,0
     0037 3rrr                      1-  467     	LGOTO	_00119_DS_
                                    1-  468     	.line	99, "main.c"; 	count1s = 0;
     0038 02rr                      1-  469     	CLRR	_count1s
                                    1-  470     	.line	100, "main.c"; 	if(workStep)
                                    1-  471     	BANKSEL	_workStep
     0039 rrrr                      3-   71 m1      .banksel ram_address
     003A 01rr                      1-  472     	MOVR	_workStep,W
     003B 0D03                      1-  473     	BTRSC	STATUS,2
     003C 3rrr                      1-  474     	LGOTO	_00112_DS_
                                    1-  475     	.line	102, "main.c"; 	++count900s;
                                    1-  476     	BANKSEL	_count900s
     003D rrrr                      3-   71 m1      .banksel ram_address
     003E 05rr                      1-  477     	INCR	_count900s,F
     003F 0D03                      1-  478     	BTRSC	STATUS,2
     0040 05rr                      1-  479     	INCR	(_count900s + 1),F
     0041 3rrr                      1-  480     	LGOTO	_00119_DS_
     0042                           1-  481     _00112_DS_:
                                    1-  482     	.line	106, "main.c"; 	count900s = 0;
                                    1-  483     	BANKSEL	_count900s
     0042 rrrr                      3-   71 m1      .banksel ram_address
     0043 02rr                      1-  484     	CLRR	_count900s
     0044 02rr                      1-  485     	CLRR	(_count900s + 1)
     0045                           1-  486     _00119_DS_:
                                    1-  487     	.line	115, "main.c"; 	if(INTFbits.PABIF)
     0045 08rr                      1-  488     	BTRSS	_INTFbits,1
     0046 3rrr                      1-  489     	LGOTO	_00121_DS_
                                    1-  490     	.line	117, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0047 21FD                      1-  491     	MOVIA	0xfd
     0048 00rr                      1-  492     	MOVAR	_INTF
     0049                           1-  493     _00121_DS_:
                                    1-  494     	.line	120, "main.c"; 	INTF = 0;
     0049 02rr                      1-  495     	CLRR	_INTF
                                    1-  496     	.line	122, "main.c"; 	}
                                    1-  497     	BANKSEL	___sdcc_saved_stk01
     004A rrrr                      3-   71 m1      .banksel ram_address
     004B 01rr                      1-  498     	MOVR	___sdcc_saved_stk01,W
     004C 00rr                      1-  499     	MOVAR	STK01
                                    1-  500     	BANKSEL	___sdcc_saved_stk00
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 01rr                      1-  501     	MOVR	___sdcc_saved_stk00,W
     004F 00rr                      1-  502     	MOVAR	STK00
                                    1-  503     	BANKSEL	___sdcc_saved_fsr
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 01rr                      1-  504     	MOVR	___sdcc_saved_fsr,W
     0052 0084                      1-  505     	MOVAR	FSR
     0053 01rr                      1-  506     	MOVR	PSAVE,W
     0054 008A                      1-  507     	MOVAR	PCHBUF
     0055 0283                      1-  508     	CLRR	STATUS
     0056 15rr                      1-  509     	SWAPR	SSAVE,W
     0057 0083                      1-  510     	MOVAR	STATUS
     0058 15rr                      1-  511     	SWAPR	WSAVE,F
     0059 15rr                      1-  512     	SWAPR	WSAVE,W
     005A                           1-  513     END_OF_INTERRUPT:
     005A 0011                      1-  514     	RETIE	
                                    1-  516     ;--------------------------------------------------------
                                    1-  517     ; code
                                    1-  518     ;--------------------------------------------------------
                                    1-  519     ;***
                                    1-  520     ;  pBlock Stats: dbName = M
                                    1-  521     ;***
                                    1-  522     ;has an exit
                                    1-  523     ;functions called:
                                    1-  524     ;   _initSys
                                    1-  525     ;   _initAD
                                    1-  526     ;   _ledShow
                                    1-  527     ;   _fgCtr
                                    1-  528     ;   _keyCtr
                                    1-  529     ;   _checkBatAD
                                    1-  530     ;   _ledCtr
                                    1-  531     ;   _chrgCtr
                                    1-  532     ;   _LedCtr2
                                    1-  533     ;   _workCtr
                                    1-  534     ;   _gotoSleep
                                    1-  535     ;   _powerOff
                                    1-  536     ;   _pwmStop
                                    1-  537     ;   _delay
                                    1-  538     ;   _pwmStop
                                    1-  539     ;   _initSys
                                    1-  540     ;   _initAD
                                    1-  541     ;   _ledShow
                                    1-  542     ;   _fgCtr
                                    1-  543     ;   _keyCtr
                                    1-  544     ;   _checkBatAD
                                    1-  545     ;   _ledCtr
                                    1-  546     ;   _chrgCtr
                                    1-  547     ;   _LedCtr2
                                    1-  548     ;   _workCtr
                                    1-  549     ;   _gotoSleep
                                    1-  550     ;   _powerOff
                                    1-  551     ;   _pwmStop
                                    1-  552     ;   _delay
                                    1-  553     ;   _pwmStop
                                    1-  554     ;; Starting pCode block
                                    1-  555     .segment "code"; module=main, function=_main
     0000                           1-  557     _main:
                                    1-  558     ; 2 exit points
                                    1-  559     	.line	126, "main.c"; 	initSys();
     0000 2rrr                      1-  560     	LCALL	_initSys
                                    1-  561     	.line	127, "main.c"; 	initAD();
     0001 2rrr                      1-  562     	LCALL	_initAD
     0002                           1-  563     _00159_DS_:
                                    1-  564     	.line	130, "main.c"; 	ledShow();
     0002 2rrr                      1-  565     	LCALL	_ledShow
                                    1-  566     	.line	131, "main.c"; 	CLRWDT();
     0003 0002                      1-  567     	clrwdt
                                    1-  568     	.line	132, "main.c"; 	fgCtr();
     0004 2rrr                      1-  569     	LCALL	_fgCtr
                                    1-  570     	.line	133, "main.c"; 	if(!IntFlag)
                                    1-  571     	BANKSEL	_Status
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 08rr                      1-  572     	BTRSS	_Status,0
     0007 3rrr                      1-  573     	LGOTO	_00159_DS_
                                    1-  574     	.line	135, "main.c"; 	IntFlag = 0;
     0008 1Crr                      1-  575     	BCR	_Status,0
                                    1-  576     	.line	136, "main.c"; 	if((PORTA & 0x20) == 0)
                                    1-  577     	BANKSEL	_PORTA
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 0Arr                      1-  578     	BTRSS	_PORTA,5
                                    1-  579     	.line	137, "main.c"; 	keyCtr();
     000B 2rrr                      1-  580     	LCALL	_keyCtr
                                    1-  581     	.line	138, "main.c"; 	if(count200ms == 0)
                                    1-  582     	BANKSEL	_count200ms
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1-  583     	MOVR	_count200ms,W
     000E 0903                      1-  584     	BTRSS	STATUS,2
     000F 3rrr                      1-  585     	LGOTO	_00131_DS_
                                    1-  586     	.line	140, "main.c"; 	checkBatAD();
     0010 2rrr                      1-  587     	LCALL	_checkBatAD
                                    1-  588     	.line	141, "main.c"; 	ledCtr();
     0011 2rrr                      1-  589     	LCALL	_ledCtr
     0012                           1-  590     _00131_DS_:
                                    1-  591     	.line	143, "main.c"; 	if(count500ms == 0)
                                    1-  592     	BANKSEL	_count500ms
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 01rr                      1-  593     	MOVR	_count500ms,W
     0014 0903                      1-  594     	BTRSS	STATUS,2
     0015 3rrr                      1-  595     	LGOTO	_00139_DS_
                                    1-  596     	.line	145, "main.c"; 	chrgCtr();
     0016 2rrr                      1-  597     	LCALL	_chrgCtr
                                    1-  598     	.line	146, "main.c"; 	if(workStartFlag == 1 || workStartFlag == 3 || workStartFlag == 4)
                                    1-  599     	BANKSEL	_workStartFlag
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 01rr                      1-  600     	MOVR	_workStartFlag,W
     0019 2401                      1-  601     	XORIA	0x01
     001A 0D03                      1-  602     	BTRSC	STATUS,2
     001B 3rrr                      1-  603     	LGOTO	_00134_DS_
     001C 01rr                      1-  604     	MOVR	_workStartFlag,W
     001D 2403                      1-  605     	XORIA	0x03
     001E 0D03                      1-  606     	BTRSC	STATUS,2
     001F 3rrr                      1-  607     	LGOTO	_00134_DS_
     0020 01rr                      1-  608     	MOVR	_workStartFlag,W
     0021 2404                      1-  609     	XORIA	0x04
     0022 0903                      1-  610     	BTRSS	STATUS,2
     0023 3rrr                      1-  611     	LGOTO	_00139_DS_
     0024                           1-  612     _00134_DS_:
                                    1-  613     	.line	148, "main.c"; 	if(chrgFlag == 0)
                                    1-  614     	BANKSEL	_Status
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 09rr                      1-  615     	BTRSS	_Status,3
                                    1-  616     	.line	149, "main.c"; 	LedCtr2();
     0026 2rrr                      1-  617     	LCALL	_LedCtr2
     0027                           1-  618     _00139_DS_:
                                    1-  619     	.line	153, "main.c"; 	if(workStep)
                                    1-  620     	BANKSEL	_workStep
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1-  621     	MOVR	_workStep,W
     0029 0903                      1-  622     	BTRSS	STATUS,2
                                    1-  623     	.line	154, "main.c"; 	workCtr();
     002A 2rrr                      1-  624     	LCALL	_workCtr
                                    1-  625     	.line	155, "main.c"; 	if(workStep == 0 && keyCount == 0 && workStartFlag == 0 && ((PORTA & 0x20) == 0))
                                    1-  626     	BANKSEL	_workStep
     002B rrrr                      3-   71 m1      .banksel ram_address
     002C 01rr                      1-  627     	MOVR	_workStep,W
     002D 0903                      1-  628     	BTRSS	STATUS,2
     002E 3rrr                      1-  629     	LGOTO	_00145_DS_
                                    1-  630     	BANKSEL	_keyCount
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1-  631     	MOVR	_keyCount,W
     0031 0903                      1-  632     	BTRSS	STATUS,2
     0032 3rrr                      1-  633     	LGOTO	_00145_DS_
                                    1-  634     	BANKSEL	_workStartFlag
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1-  635     	MOVR	_workStartFlag,W
     0035 0903                      1-  636     	BTRSS	STATUS,2
     0036 3rrr                      1-  637     	LGOTO	_00145_DS_
                                    1-  638     	BANKSEL	_PORTA
     0037 rrrr                      3-   71 m1      .banksel ram_address
     0038 0Err                      1-  639     	BTRSC	_PORTA,5
     0039 3rrr                      1-  640     	LGOTO	_00145_DS_
                                    1-  641     	.line	157, "main.c"; 	if(++sleepTime > 2000)
                                    1-  642     	BANKSEL	_sleepTime
     003A rrrr                      3-   71 m1      .banksel ram_address
     003B 05rr                      1-  643     	INCR	_sleepTime,F
     003C 0D03                      1-  644     	BTRSC	STATUS,2
     003D 05rr                      1-  645     	INCR	(_sleepTime + 1),F
                                    1-  646     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  647     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     003E 2107                      1-  648     	MOVIA	0x07
     003F 04rr                      1-  649     	SUBAR	(_sleepTime + 1),W
     0040 0903                      1-  650     	BTRSS	STATUS,2
     0041 3rrr                      1-  651     	LGOTO	_00219_DS_
     0042 21D1                      1-  652     	MOVIA	0xd1
     0043 04rr                      1-  653     	SUBAR	_sleepTime,W
     0044                           1-  654     _00219_DS_:
     0044 0803                      1-  655     	BTRSS	STATUS,0
     0045 3rrr                      1-  656     	LGOTO	_00145_DS_
                                    1-  657     	.line	159, "main.c"; 	gotoSleep();
     0046 2rrr                      1-  658     	LCALL	_gotoSleep
                                    1-  659     ;;unsigned compare: left < lit (0x384=900), size=2
     0047                           1-  660     _00145_DS_:
                                    1-  661     	.line	163, "main.c"; 	if(count900s >= 900)
     0047 2103                      1-  662     	MOVIA	0x03
                                    1-  663     	BANKSEL	_count900s
     0048 rrrr                      3-   71 m1      .banksel ram_address
     0049 04rr                      1-  664     	SUBAR	(_count900s + 1),W
     004A 0903                      1-  665     	BTRSS	STATUS,2
     004B 3rrr                      1-  666     	LGOTO	_00220_DS_
     004C 2184                      1-  667     	MOVIA	0x84
     004D 04rr                      1-  668     	SUBAR	_count900s,W
     004E                           1-  669     _00220_DS_:
     004E 0803                      1-  670     	BTRSS	STATUS,0
     004F 3rrr                      1-  671     	LGOTO	_00150_DS_
                                    1-  672     	.line	165, "main.c"; 	powerOff();
     0050 2rrr                      1-  673     	LCALL	_powerOff
                                    1-  674     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  675     ;;unsigned compare: left >= lit (0x65=101), size=2
     0051                           1-  676     _00150_DS_:
                                    1-  677     	.line	168, "main.c"; 	if(fgPRD > 100 || fgCount > 100)
     0051 2100                      1-  678     	MOVIA	0x00
                                    1-  679     	BANKSEL	_fgPRD
     0052 rrrr                      3-   71 m1      .banksel ram_address
     0053 04rr                      1-  680     	SUBAR	(_fgPRD + 1),W
     0054 0903                      1-  681     	BTRSS	STATUS,2
     0055 3rrr                      1-  682     	LGOTO	_00221_DS_
     0056 2165                      1-  683     	MOVIA	0x65
     0057 04rr                      1-  684     	SUBAR	_fgPRD,W
     0058                           1-  685     _00221_DS_:
     0058 0C03                      1-  686     	BTRSC	STATUS,0
     0059 3rrr                      1-  687     	LGOTO	_00155_DS_
                                    1-  688     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  689     ;;unsigned compare: left >= lit (0x65=101), size=2
     005A 2100                      1-  690     	MOVIA	0x00
                                    1-  691     	BANKSEL	_fgCount
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 04rr                      1-  692     	SUBAR	(_fgCount + 1),W
     005D 0903                      1-  693     	BTRSS	STATUS,2
     005E 3rrr                      1-  694     	LGOTO	_00222_DS_
     005F 2165                      1-  695     	MOVIA	0x65
     0060 04rr                      1-  696     	SUBAR	_fgCount,W
     0061                           1-  697     _00222_DS_:
     0061 0803                      1-  698     	BTRSS	STATUS,0
     0062 3rrr                      1-  699     	LGOTO	_00159_DS_
                                    1-  700     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  701     ;;unsigned compare: left >= lit (0x97=151), size=2
     0063                           1-  702     _00155_DS_:
                                    1-  703     	.line	170, "main.c"; 	if(fgCount > 150)
     0063 2100                      1-  704     	MOVIA	0x00
                                    1-  705     	BANKSEL	_fgCount
     0064 rrrr                      3-   71 m1      .banksel ram_address
     0065 04rr                      1-  706     	SUBAR	(_fgCount + 1),W
     0066 0903                      1-  707     	BTRSS	STATUS,2
     0067 3rrr                      1-  708     	LGOTO	_00223_DS_
     0068 2197                      1-  709     	MOVIA	0x97
     0069 04rr                      1-  710     	SUBAR	_fgCount,W
     006A                           1-  711     _00223_DS_:
     006A 0803                      1-  712     	BTRSS	STATUS,0
     006B 3rrr                      1-  713     	LGOTO	_00152_DS_
                                    1-  714     	.line	172, "main.c"; 	pwmStop();
     006C 2rrr                      1-  715     	LCALL	_pwmStop
                                    1-  716     	.line	173, "main.c"; 	PORTB &= 0xFD;
     006D 1Crr                      1-  717     	BCR	_PORTB,1
                                    1-  718     	.line	174, "main.c"; 	fgPRD = 0;
                                    1-  719     	BANKSEL	_fgPRD
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 02rr                      1-  720     	CLRR	_fgPRD
     0070 02rr                      1-  721     	CLRR	(_fgPRD + 1)
                                    1-  722     	.line	175, "main.c"; 	fgCount = 0;
                                    1-  723     	BANKSEL	_fgCount
     0071 rrrr                      3-   71 m1      .banksel ram_address
     0072 02rr                      1-  724     	CLRR	_fgCount
     0073 02rr                      1-  725     	CLRR	(_fgCount + 1)
                                    1-  726     	.line	176, "main.c"; 	delay(100);
     0074 2164                      1-  727     	MOVIA	0x64
     0075 2rrr                      1-  728     	LCALL	_delay
     0076                           1-  729     _00152_DS_:
                                    1-  730     	.line	178, "main.c"; 	if(++sleepTime > 2000)
                                    1-  731     	BANKSEL	_sleepTime
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 05rr                      1-  732     	INCR	_sleepTime,F
     0078 0D03                      1-  733     	BTRSC	STATUS,2
     0079 05rr                      1-  734     	INCR	(_sleepTime + 1),F
                                    1-  735     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  736     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     007A 2107                      1-  737     	MOVIA	0x07
     007B 04rr                      1-  738     	SUBAR	(_sleepTime + 1),W
     007C 0903                      1-  739     	BTRSS	STATUS,2
     007D 3rrr                      1-  740     	LGOTO	_00224_DS_
     007E 21D1                      1-  741     	MOVIA	0xd1
     007F 04rr                      1-  742     	SUBAR	_sleepTime,W
     0080                           1-  743     _00224_DS_:
     0080 0803                      1-  744     	BTRSS	STATUS,0
     0081 3rrr                      1-  745     	LGOTO	_00159_DS_
                                    1-  746     	.line	181, "main.c"; 	pwmStop();
     0082 2rrr                      1-  747     	LCALL	_pwmStop
                                    1-  748     	.line	182, "main.c"; 	PORTB &= 0xFD;
     0083 1Crr                      1-  749     	BCR	_PORTB,1
                                    1-  750     	.line	184, "main.c"; 	AWUCON = 0x60;
     0084 2160                      1-  751     	MOVIA	0x60
     0085 00rr                      1-  752     	MOVAR	_AWUCON
                                    1-  753     	.line	185, "main.c"; 	fgPRD = 0;
                                    1-  754     	BANKSEL	_fgPRD
     0086 rrrr                      3-   71 m1      .banksel ram_address
     0087 02rr                      1-  755     	CLRR	_fgPRD
     0088 02rr                      1-  756     	CLRR	(_fgPRD + 1)
                                    1-  757     	.line	186, "main.c"; 	fgCount = 0;
                                    1-  758     	BANKSEL	_fgCount
     0089 rrrr                      3-   71 m1      .banksel ram_address
     008A 02rr                      1-  759     	CLRR	_fgCount
     008B 02rr                      1-  760     	CLRR	(_fgCount + 1)
                                    1-  761     	.line	187, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     008C 210B                      1-  762     	MOVIA	0x0b
     008D 00rr                      1-  763     	MOVAR	_INTE
                                    1-  764     	.line	188, "main.c"; 	PCON =  C_LVR_En ;	
     008E 2108                      1-  765     	MOVIA	0x08
     008F 00rr                      1-  766     	MOVAR	_PCON
                                    1-  767     	.line	189, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0090 02rr                      1-  768     	CLRR	_INTF
                                    1-  769     	.line	190, "main.c"; 	CLRWDT();
     0091 0002                      1-  770     	clrwdt
                                    1-  771     	.line	191, "main.c"; 	ENI();
     0092 0004                      1-  772     	ENI
                                    1-  773     	.line	192, "main.c"; 	SLEEP();
     0093 0001                      1-  774     	sleep
                                    1-  775     	.line	193, "main.c"; 	AWUCON = 0x00;
     0094 02rr                      1-  776     	CLRR	_AWUCON
                                    1-  777     	.line	194, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     0095 2101                      1-  778     	MOVIA	0x01
     0096 00rr                      1-  779     	MOVAR	_INTE
                                    1-  780     	.line	195, "main.c"; 	INTF = 0;
     0097 02rr                      1-  781     	CLRR	_INTF
                                    1-  782     	.line	197, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En ;				// Enable WDT ,  Enable LVR
     0098 21A8                      1-  783     	MOVIA	0xa8
     0099 00rr                      1-  784     	MOVAR	_PCON
     009A 3rrr                      1-  785     	LGOTO	_00159_DS_
                                    1-  786     	.line	201, "main.c"; 	}
                                    1-  787     	RETURN	
     009B 0010                      3-   26 m1      ret
                                    1-  788     ; exit point of _main
                                    1-  790     ;***
                                    1-  791     ;  pBlock Stats: dbName = C
                                    1-  792     ;***
                                    1-  793     ;has an exit
                                    1-  794     ;; Starting pCode block
                                    1-  795     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  797     _F_wait_eoc:
                                    1-  798     ; 2 exit points
     0000                           1-  799     _00606_DS_:
                                    1-  800     	.line	780, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  801     	BTRSS	_ADMDbits,5
     0001 3rrr                      1-  802     	LGOTO	_00606_DS_
                                    1-  803     	.line	782, "main.c"; 	}
                                    1-  804     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1-  805     ; exit point of _F_wait_eoc
                                    1-  807     ;***
                                    1-  808     ;  pBlock Stats: dbName = C
                                    1-  809     ;***
                                    1-  810     ;has an exit
                                    1-  811     ;functions called:
                                    1-  812     ;   _delay
                                    1-  813     ;   _F_wait_eoc
                                    1-  814     ;   _delay
                                    1-  815     ;   _F_wait_eoc
                                    1-  816     ;6 compiler assigned registers:
                                    1-  817     ;   r0x1022
                                    1-  818     ;   r0x1023
                                    1-  819     ;   r0x1024
                                    1-  820     ;   r0x1025
                                    1-  821     ;   r0x1026
                                    1-  822     ;   r0x1027
                                    1-  823     ;; Starting pCode block
                                    1-  824     .segment "code"; module=main, function=_F_AIN5_Convert
                                    1-  826     ;local variable name mapping:
     0000                           1-  829     _F_AIN5_Convert:
                                    1-  830     ; 2 exit points
                                    1-  831     	.line	763, "main.c"; 	void F_AIN5_Convert(char count)
                                    1-  832     	BANKSEL	r0x1022
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1-  833     	MOVAR	r0x1022
                                    1-  834     	.line	765, "main.c"; 	R_AIN5_DATA=R_AIN5_DATA_LB=0x00;   
                                    1-  835     	BANKSEL	_R_AIN5_DATA_LB
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  836     	CLRR	_R_AIN5_DATA_LB
                                    1-  837     	BANKSEL	_R_AIN5_DATA
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 02rr                      1-  838     	CLRR	_R_AIN5_DATA
     0006 02rr                      1-  839     	CLRR	(_R_AIN5_DATA + 1)
                                    1-  840     	.line	767, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1-  841     	MOVIA	0x94
     0008 00rr                      1-  842     	MOVAR	_ADMD
                                    1-  843     	.line	768, "main.c"; 	delay(200);	
     0009 21C8                      1-  844     	MOVIA	0xc8
     000A 2rrr                      1-  845     	LCALL	_delay
                                    1-  846     	.line	769, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1-  847     	MOVIA	0x01
                                    1-  848     	BANKSEL	r0x1023
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1-  849     	MOVAR	r0x1023
     000E                           1-  850     _00599_DS_:
                                    1-  851     	BANKSEL	r0x1023
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 01rr                      1-  852     	MOVR	r0x1023,W
                                    1-  853     	BANKSEL	r0x1022
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 04rr                      1-  854     	SUBAR	r0x1022,W
     0012 0803                      1-  855     	BTRSS	STATUS,0
     0013 3rrr                      1-  856     	LGOTO	_00601_DS_
                                    1-  857     	.line	771, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1-  858     	BSR	_ADMDbits,6
                                    1-  859     	.line	772, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
     0015 2rrr                      1-  860     	LCALL	_F_wait_eoc
                                    1-  861     	.line	773, "main.c"; 	R_AIN5_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1-  862     	MOVIA	0x0f
     0017 10rr                      1-  863     	ANDAR	_ADR,W
                                    1-  864     ;;3	MOVAR	r0x1024
                                    1-  865     	BANKSEL	_R_AIN5_DATA_LB
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 03rr                      1-  866     	ADDAR	_R_AIN5_DATA_LB,F
                                    1-  867     	.line	774, "main.c"; 	R_AIN5_DATA    += ADD; 
     001A 01rr                      1-  868     	MOVR	_ADD,W
                                    1-  869     	BANKSEL	r0x1024
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1-  870     	MOVAR	r0x1024
                                    1-  871     ;;1	CLRR	r0x1025
                                    1-  872     ;;102	MOVR	r0x1024,W
                                    1-  873     ;;100	MOVAR	r0x1026
     001D 2100                      1-  874     	MOVIA	0x00
                                    1-  875     	BANKSEL	r0x1027
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 00rr                      1-  876     	MOVAR	r0x1027
                                    1-  877     ;;101	MOVR	r0x1026,W
                                    1-  878     	BANKSEL	r0x1024
     0020 rrrr                      3-   71 m1      .banksel ram_address
     0021 01rr                      1-  879     	MOVR	r0x1024,W
                                    1-  880     	BANKSEL	_R_AIN5_DATA
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 03rr                      1-  881     	ADDAR	_R_AIN5_DATA,F
                                    1-  882     	BANKSEL	r0x1027
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 01rr                      1-  883     	MOVR	r0x1027,W
     0026 0C03                      1-  884     	BTRSC	STATUS,0
     0027 05rr                      1-  885     	INCR	r0x1027,W
     0028 0D03                      1-  886     	BTRSC	STATUS,2
     0029 3rrr                      1-  887     	LGOTO	_00001_DS_
                                    1-  888     	BANKSEL	_R_AIN5_DATA
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 03rr                      1-  889     	ADDAR	(_R_AIN5_DATA + 1),F
     002C                           1-  890     _00001_DS_:
                                    1-  891     	.line	769, "main.c"; 	for(i=1;i<=count;i++)
                                    1-  892     	BANKSEL	r0x1023
     002C rrrr                      3-   71 m1      .banksel ram_address
     002D 05rr                      1-  893     	INCR	r0x1023,F
     002E 3rrr                      1-  894     	LGOTO	_00599_DS_
     002F                           1-  895     _00601_DS_:
                                    1-  896     	.line	776, "main.c"; 	}
                                    1-  897     	RETURN	
     002F 0010                      3-   26 m1      ret
                                    1-  898     ; exit point of _F_AIN5_Convert
                                    1-  900     ;***
                                    1-  901     ;  pBlock Stats: dbName = C
                                    1-  902     ;***
                                    1-  903     ;functions called:
                                    1-  904     ;   _F_AIN5_Convert
                                    1-  905     ;   _LEDHOFF
                                    1-  906     ;   _LEDLOFF
                                    1-  907     ;   _F_AIN5_Convert
                                    1-  908     ;   _LEDHOFF
                                    1-  909     ;   _LEDLOFF
                                    1-  910     ;4 compiler assigned registers:
                                    1-  911     ;   r0x1028
                                    1-  912     ;   r0x1029
                                    1-  913     ;   r0x102A
                                    1-  914     ;   r0x102B
                                    1-  915     ;; Starting pCode block
                                    1-  916     .segment "code"; module=main, function=_checkBatAD
     0000                           1-  918     _checkBatAD:
                                    1-  919     ; 0 exit points
                                    1-  920     	.line	672, "main.c"; 	R_AIN5_DATA = R_AIN5_DATA_LB = 0x00;
                                    1-  921     	BANKSEL	_R_AIN5_DATA_LB
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1-  922     	CLRR	_R_AIN5_DATA_LB
                                    1-  923     	BANKSEL	_R_AIN5_DATA
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1-  924     	CLRR	_R_AIN5_DATA
     0004 02rr                      1-  925     	CLRR	(_R_AIN5_DATA + 1)
                                    1-  926     	.line	673, "main.c"; 	F_AIN5_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1-  927     	MOVIA	0x08
     0006 2rrr                      1-  928     	LCALL	_F_AIN5_Convert
                                    1-  929     	.line	674, "main.c"; 	R_AIN5_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1-  930     	BANKSEL	_R_AIN5_DATA
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 15rr                      1-  931     	SWAPR	(_R_AIN5_DATA + 1),W
     0009 22F0                      1-  932     	ANDIA	0xf0
     000A 00rr                      1-  933     	MOVAR	(_R_AIN5_DATA + 1)
     000B 15rr                      1-  934     	SWAPR	_R_AIN5_DATA,W
     000C 00rr                      1-  935     	MOVAR	_R_AIN5_DATA
     000D 220F                      1-  936     	ANDIA	0x0f
     000E 11rr                      1-  937     	IORAR	(_R_AIN5_DATA + 1),F
     000F 12rr                      1-  938     	XORAR	_R_AIN5_DATA,F
                                    1-  939     	.line	675, "main.c"; 	R_AIN5_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1-  940     	MOVIA	0xf0
                                    1-  941     	BANKSEL	_R_AIN5_DATA_LB
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 10rr                      1-  942     	ANDAR	_R_AIN5_DATA_LB,F
                                    1-  943     	.line	676, "main.c"; 	R_AIN5_DATA += R_AIN5_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1-  944     	MOVR	_R_AIN5_DATA_LB,W
                                    1-  945     	BANKSEL	r0x102A
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1-  946     	MOVAR	r0x102A
                                    1-  947     ;;1	MOVAR	r0x1028
                                    1-  948     ;;1	CLRR	r0x1029
                                    1-  949     ;;99	MOVR	r0x1028,W
     0016 2100                      1-  950     	MOVIA	0x00
                                    1-  951     	BANKSEL	r0x102B
     0017 rrrr                      3-   71 m1      .banksel ram_address
     0018 00rr                      1-  952     	MOVAR	r0x102B
                                    1-  953     	BANKSEL	r0x102A
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 01rr                      1-  954     	MOVR	r0x102A,W
                                    1-  955     	BANKSEL	_R_AIN5_DATA
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 03rr                      1-  956     	ADDAR	_R_AIN5_DATA,F
                                    1-  957     	BANKSEL	r0x102B
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1-  958     	MOVR	r0x102B,W
     001F 0C03                      1-  959     	BTRSC	STATUS,0
     0020 05rr                      1-  960     	INCR	r0x102B,W
     0021 0D03                      1-  961     	BTRSC	STATUS,2
     0022 3rrr                      1-  962     	LGOTO	_00002_DS_
                                    1-  963     	BANKSEL	_R_AIN5_DATA
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 03rr                      1-  964     	ADDAR	(_R_AIN5_DATA + 1),F
                                    1-  965     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1-  966     _00002_DS_:
                                    1-  967     	.line	677, "main.c"; 	R_AIN5_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1-  968     	BCR	STATUS,0
                                    1-  969     	BANKSEL	_R_AIN5_DATA
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 13rr                      1-  970     	RRR	(_R_AIN5_DATA + 1),F
     0028 13rr                      1-  971     	RRR	_R_AIN5_DATA,F
                                    1-  972     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1-  973     	BCR	STATUS,0
     002A 13rr                      1-  974     	RRR	(_R_AIN5_DATA + 1),F
     002B 13rr                      1-  975     	RRR	_R_AIN5_DATA,F
                                    1-  976     ;;shiftRight_Left2ResultLit:5589: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1-  977     	BCR	STATUS,0
     002D 13rr                      1-  978     	RRR	(_R_AIN5_DATA + 1),F
     002E 13rr                      1-  979     	RRR	_R_AIN5_DATA,F
                                    1-  980     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  981     ;;unsigned compare: left >= lit (0x614=1556), size=2
                                    1-  982     	.line	678, "main.c"; 	if(R_AIN5_DATA > 1555)
     002F 2106                      1-  983     	MOVIA	0x06
     0030 04rr                      1-  984     	SUBAR	(_R_AIN5_DATA + 1),W
     0031 0903                      1-  985     	BTRSS	STATUS,2
     0032 3rrr                      1-  986     	LGOTO	_00580_DS_
     0033 2114                      1-  987     	MOVIA	0x14
     0034 04rr                      1-  988     	SUBAR	_R_AIN5_DATA,W
     0035                           1-  989     _00580_DS_:
     0035 0803                      1-  990     	BTRSS	STATUS,0
     0036 3rrr                      1-  991     	LGOTO	_00486_DS_
                                    1-  992     	.line	680, "main.c"; 	R_AIN5_DATA = 1555;
     0037 2113                      1-  993     	MOVIA	0x13
                                    1-  994     	BANKSEL	_R_AIN5_DATA
     0038 rrrr                      3-   71 m1      .banksel ram_address
     0039 00rr                      1-  995     	MOVAR	_R_AIN5_DATA
     003A 2106                      1-  996     	MOVIA	0x06
     003B 00rr                      1-  997     	MOVAR	(_R_AIN5_DATA + 1)
     003C 3rrr                      1-  998     	LGOTO	_00487_DS_
                                    1-  999     ;;unsigned compare: left < lit (0x45D=1117), size=2
     003D                           1- 1000     _00486_DS_:
                                    1- 1001     	.line	682, "main.c"; 	else if(R_AIN5_DATA < 1117)
     003D 2104                      1- 1002     	MOVIA	0x04
                                    1- 1003     	BANKSEL	_R_AIN5_DATA
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 04rr                      1- 1004     	SUBAR	(_R_AIN5_DATA + 1),W
     0040 0903                      1- 1005     	BTRSS	STATUS,2
     0041 3rrr                      1- 1006     	LGOTO	_00581_DS_
     0042 215D                      1- 1007     	MOVIA	0x5d
     0043 04rr                      1- 1008     	SUBAR	_R_AIN5_DATA,W
     0044                           1- 1009     _00581_DS_:
     0044 0C03                      1- 1010     	BTRSC	STATUS,0
     0045 3rrr                      1- 1011     	LGOTO	_00487_DS_
                                    1- 1012     	.line	684, "main.c"; 	R_AIN5_DATA = 1117;
     0046 215D                      1- 1013     	MOVIA	0x5d
                                    1- 1014     	BANKSEL	_R_AIN5_DATA
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 00rr                      1- 1015     	MOVAR	_R_AIN5_DATA
     0049 2104                      1- 1016     	MOVIA	0x04
     004A 00rr                      1- 1017     	MOVAR	(_R_AIN5_DATA + 1)
     004B                           1- 1018     _00487_DS_:
                                    1- 1019     	.line	686, "main.c"; 	R_AIN5_DATA = R_AIN5_DATA - 1117;
     004B 21A3                      1- 1020     	MOVIA	0xa3
                                    1- 1021     	BANKSEL	_R_AIN5_DATA
     004C rrrr                      3-   71 m1      .banksel ram_address
     004D 03rr                      1- 1022     	ADDAR	_R_AIN5_DATA,F
     004E 21FB                      1- 1023     	MOVIA	0xfb
     004F 0C03                      1- 1024     	BTRSC	STATUS,0
     0050 21FC                      1- 1025     	MOVIA	0xfc
     0051 03rr                      1- 1026     	ADDAR	(_R_AIN5_DATA + 1),F
                                    1- 1027     ;;unsigned compare: left < lit (0x1AE=430), size=2
                                    1- 1028     	.line	688, "main.c"; 	if(R_AIN5_DATA >= 430)
     0052 2101                      1- 1029     	MOVIA	0x01
     0053 04rr                      1- 1030     	SUBAR	(_R_AIN5_DATA + 1),W
     0054 0903                      1- 1031     	BTRSS	STATUS,2
     0055 3rrr                      1- 1032     	LGOTO	_00582_DS_
     0056 21AE                      1- 1033     	MOVIA	0xae
     0057 04rr                      1- 1034     	SUBAR	_R_AIN5_DATA,W
     0058                           1- 1035     _00582_DS_:
     0058 0803                      1- 1036     	BTRSS	STATUS,0
     0059 3rrr                      1- 1037     	LGOTO	_00522_DS_
                                    1- 1038     	.line	690, "main.c"; 	pwStep = 6;
     005A 2106                      1- 1039     	MOVIA	0x06
                                    1- 1040     	BANKSEL	_pwStep
     005B rrrr                      3-   71 m1      .banksel ram_address
     005C 00rr                      1- 1041     	MOVAR	_pwStep
     005D 3rrr                      1- 1042     	LGOTO	_00003_DS_
                                    1- 1043     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1044     ;;unsigned compare: left >= lit (0x18B=395), size=2
     005E                           1- 1045     _00522_DS_:
                                    1- 1046     	.line	692, "main.c"; 	else if(R_AIN5_DATA > 394)
     005E 2101                      1- 1047     	MOVIA	0x01
                                    1- 1048     	BANKSEL	_R_AIN5_DATA
     005F rrrr                      3-   71 m1      .banksel ram_address
     0060 04rr                      1- 1049     	SUBAR	(_R_AIN5_DATA + 1),W
     0061 0903                      1- 1050     	BTRSS	STATUS,2
     0062 3rrr                      1- 1051     	LGOTO	_00583_DS_
     0063 218B                      1- 1052     	MOVIA	0x8b
     0064 04rr                      1- 1053     	SUBAR	_R_AIN5_DATA,W
     0065                           1- 1054     _00583_DS_:
     0065 0803                      1- 1055     	BTRSS	STATUS,0
     0066 3rrr                      1- 1056     	LGOTO	_00519_DS_
                                    1- 1057     	.line	695, "main.c"; 	if(pwStep == 6)
                                    1- 1058     	BANKSEL	_pwStep
     0067 rrrr                      3-   71 m1      .banksel ram_address
     0068 01rr                      1- 1059     	MOVR	_pwStep,W
     0069 2406                      1- 1060     	XORIA	0x06
     006A 0903                      1- 1061     	BTRSS	STATUS,2
     006B 3rrr                      1- 1062     	LGOTO	_00491_DS_
                                    1- 1063     ;;unsigned compare: left < lit (0x195=405), size=2
                                    1- 1064     	.line	697, "main.c"; 	if(R_AIN5_DATA < 405)
     006C 2101                      1- 1065     	MOVIA	0x01
                                    1- 1066     	BANKSEL	_R_AIN5_DATA
     006D rrrr                      3-   71 m1      .banksel ram_address
     006E 04rr                      1- 1067     	SUBAR	(_R_AIN5_DATA + 1),W
     006F 0903                      1- 1068     	BTRSS	STATUS,2
     0070 3rrr                      1- 1069     	LGOTO	_00584_DS_
     0071 2195                      1- 1070     	MOVIA	0x95
     0072 04rr                      1- 1071     	SUBAR	_R_AIN5_DATA,W
     0073                           1- 1072     _00584_DS_:
     0073 0C03                      1- 1073     	BTRSC	STATUS,0
     0074 3rrr                      1- 1074     	LGOTO	_00492_DS_
                                    1- 1075     	.line	698, "main.c"; 	pwStep = 5;
     0075 2105                      1- 1076     	MOVIA	0x05
                                    1- 1077     	BANKSEL	_pwStep
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 00rr                      1- 1078     	MOVAR	_pwStep
     0078 3rrr                      1- 1079     	LGOTO	_00492_DS_
     0079                           1- 1080     _00491_DS_:
                                    1- 1081     	.line	702, "main.c"; 	pwStep = 5;
     0079 2105                      1- 1082     	MOVIA	0x05
                                    1- 1083     	BANKSEL	_pwStep
     007A rrrr                      3-   71 m1      .banksel ram_address
     007B 00rr                      1- 1084     	MOVAR	_pwStep
                                    1- 1085     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1086     ;;unsigned compare: left >= lit (0x19B=411), size=2
     007C                           1- 1087     _00492_DS_:
                                    1- 1088     	.line	705, "main.c"; 	if(R_AIN5_DATA > 410)
     007C 2101                      1- 1089     	MOVIA	0x01
                                    1- 1090     	BANKSEL	_R_AIN5_DATA
     007D rrrr                      3-   71 m1      .banksel ram_address
     007E 04rr                      1- 1091     	SUBAR	(_R_AIN5_DATA + 1),W
     007F 0903                      1- 1092     	BTRSS	STATUS,2
     0080 3rrr                      1- 1093     	LGOTO	_00585_DS_
     0081 219B                      1- 1094     	MOVIA	0x9b
     0082 04rr                      1- 1095     	SUBAR	_R_AIN5_DATA,W
     0083                           1- 1096     _00585_DS_:
     0083 0803                      1- 1097     	BTRSS	STATUS,0
     0084 3rrr                      1- 1098     	LGOTO	_00003_DS_
                                    1- 1099     	.line	707, "main.c"; 	if(++chrgTime > 1800)
                                    1- 1100     	BANKSEL	_chrgTime
     0085 rrrr                      3-   71 m1      .banksel ram_address
     0086 05rr                      1- 1101     	INCR	_chrgTime,F
     0087 0D03                      1- 1102     	BTRSC	STATUS,2
     0088 05rr                      1- 1103     	INCR	(_chrgTime + 1),F
                                    1- 1104     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1105     ;;unsigned compare: left >= lit (0x709=1801), size=2
     0089 2107                      1- 1106     	MOVIA	0x07
     008A 04rr                      1- 1107     	SUBAR	(_chrgTime + 1),W
     008B 0903                      1- 1108     	BTRSS	STATUS,2
     008C 3rrr                      1- 1109     	LGOTO	_00586_DS_
     008D 2109                      1- 1110     	MOVIA	0x09
     008E 04rr                      1- 1111     	SUBAR	_chrgTime,W
     008F                           1- 1112     _00586_DS_:
     008F 0803                      1- 1113     	BTRSS	STATUS,0
     0090 3rrr                      1- 1114     	LGOTO	_00003_DS_
                                    1- 1115     	.line	709, "main.c"; 	chrgTime = 1800;
     0091 2108                      1- 1116     	MOVIA	0x08
                                    1- 1117     	BANKSEL	_chrgTime
     0092 rrrr                      3-   71 m1      .banksel ram_address
     0093 00rr                      1- 1118     	MOVAR	_chrgTime
     0094 2107                      1- 1119     	MOVIA	0x07
     0095 00rr                      1- 1120     	MOVAR	(_chrgTime + 1)
                                    1- 1121     	.line	710, "main.c"; 	pwStep = 6;
     0096 2106                      1- 1122     	MOVIA	0x06
                                    1- 1123     	BANKSEL	_pwStep
     0097 rrrr                      3-   71 m1      .banksel ram_address
     0098 00rr                      1- 1124     	MOVAR	_pwStep
     0099 3rrr                      1- 1125     	LGOTO	_00003_DS_
                                    1- 1126     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1127     ;;unsigned compare: left >= lit (0xE0=224), size=2
     009A                           1- 1128     _00519_DS_:
                                    1- 1129     	.line	714, "main.c"; 	else if(R_AIN5_DATA > 223)
     009A 2100                      1- 1130     	MOVIA	0x00
                                    1- 1131     	BANKSEL	_R_AIN5_DATA
     009B rrrr                      3-   71 m1      .banksel ram_address
     009C 04rr                      1- 1132     	SUBAR	(_R_AIN5_DATA + 1),W
     009D 0903                      1- 1133     	BTRSS	STATUS,2
     009E 3rrr                      1- 1134     	LGOTO	_00587_DS_
     009F 21E0                      1- 1135     	MOVIA	0xe0
     00A0 04rr                      1- 1136     	SUBAR	_R_AIN5_DATA,W
     00A1                           1- 1137     _00587_DS_:
     00A1 0803                      1- 1138     	BTRSS	STATUS,0
     00A2 3rrr                      1- 1139     	LGOTO	_00516_DS_
                                    1- 1140     	.line	717, "main.c"; 	pwStep = 4;
     00A3 2104                      1- 1141     	MOVIA	0x04
                                    1- 1142     	BANKSEL	_pwStep
     00A4 rrrr                      3-   71 m1      .banksel ram_address
     00A5 00rr                      1- 1143     	MOVAR	_pwStep
                                    1- 1144     	.line	718, "main.c"; 	chrgTime = 0;
                                    1- 1145     	BANKSEL	_chrgTime
     00A6 rrrr                      3-   71 m1      .banksel ram_address
     00A7 02rr                      1- 1146     	CLRR	_chrgTime
     00A8 02rr                      1- 1147     	CLRR	(_chrgTime + 1)
     00A9 3rrr                      1- 1148     	LGOTO	_00003_DS_
                                    1- 1149     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1150     ;;unsigned compare: left >= lit (0x96=150), size=2
     00AA                           1- 1151     _00516_DS_:
                                    1- 1152     	.line	720, "main.c"; 	else if(R_AIN5_DATA > 149)
     00AA 2100                      1- 1153     	MOVIA	0x00
                                    1- 1154     	BANKSEL	_R_AIN5_DATA
     00AB rrrr                      3-   71 m1      .banksel ram_address
     00AC 04rr                      1- 1155     	SUBAR	(_R_AIN5_DATA + 1),W
     00AD 0903                      1- 1156     	BTRSS	STATUS,2
     00AE 3rrr                      1- 1157     	LGOTO	_00588_DS_
     00AF 2196                      1- 1158     	MOVIA	0x96
     00B0 04rr                      1- 1159     	SUBAR	_R_AIN5_DATA,W
     00B1                           1- 1160     _00588_DS_:
     00B1 0803                      1- 1161     	BTRSS	STATUS,0
     00B2 3rrr                      1- 1162     	LGOTO	_00513_DS_
                                    1- 1163     	.line	723, "main.c"; 	pwStep = 3;
     00B3 2103                      1- 1164     	MOVIA	0x03
                                    1- 1165     	BANKSEL	_pwStep
     00B4 rrrr                      3-   71 m1      .banksel ram_address
     00B5 00rr                      1- 1166     	MOVAR	_pwStep
                                    1- 1167     	.line	724, "main.c"; 	chrgTime = 0;
                                    1- 1168     	BANKSEL	_chrgTime
     00B6 rrrr                      3-   71 m1      .banksel ram_address
     00B7 02rr                      1- 1169     	CLRR	_chrgTime
     00B8 02rr                      1- 1170     	CLRR	(_chrgTime + 1)
     00B9 3rrr                      1- 1171     	LGOTO	_00003_DS_
                                    1- 1172     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1173     ;;unsigned compare: left >= lit (0x5E=94), size=2
     00BA                           1- 1174     _00513_DS_:
                                    1- 1175     	.line	726, "main.c"; 	else if(R_AIN5_DATA > 93)
     00BA 2100                      1- 1176     	MOVIA	0x00
                                    1- 1177     	BANKSEL	_R_AIN5_DATA
     00BB rrrr                      3-   71 m1      .banksel ram_address
     00BC 04rr                      1- 1178     	SUBAR	(_R_AIN5_DATA + 1),W
     00BD 0903                      1- 1179     	BTRSS	STATUS,2
     00BE 3rrr                      1- 1180     	LGOTO	_00589_DS_
     00BF 215E                      1- 1181     	MOVIA	0x5e
     00C0 04rr                      1- 1182     	SUBAR	_R_AIN5_DATA,W
     00C1                           1- 1183     _00589_DS_:
     00C1 0803                      1- 1184     	BTRSS	STATUS,0
     00C2 3rrr                      1- 1185     	LGOTO	_00510_DS_
                                    1- 1186     	.line	729, "main.c"; 	pwStep = 2;
     00C3 2102                      1- 1187     	MOVIA	0x02
                                    1- 1188     	BANKSEL	_pwStep
     00C4 rrrr                      3-   71 m1      .banksel ram_address
     00C5 00rr                      1- 1189     	MOVAR	_pwStep
                                    1- 1190     	.line	730, "main.c"; 	chrgTime = 0;
                                    1- 1191     	BANKSEL	_chrgTime
     00C6 rrrr                      3-   71 m1      .banksel ram_address
     00C7 02rr                      1- 1192     	CLRR	_chrgTime
     00C8 02rr                      1- 1193     	CLRR	(_chrgTime + 1)
                                    1- 1194     	.line	731, "main.c"; 	if(workStartFlag == 4)
                                    1- 1195     	BANKSEL	_workStartFlag
     00C9 rrrr                      3-   71 m1      .banksel ram_address
     00CA 01rr                      1- 1196     	MOVR	_workStartFlag,W
     00CB 2404                      1- 1197     	XORIA	0x04
     00CC 0903                      1- 1198     	BTRSS	STATUS,2
     00CD 3rrr                      1- 1199     	LGOTO	_00003_DS_
                                    1- 1200     	.line	733, "main.c"; 	workStartFlag = 0;
     00CE 02rr                      1- 1201     	CLRR	_workStartFlag
                                    1- 1202     	.line	734, "main.c"; 	LEDHOFF();
     00CF 2rrr                      1- 1203     	LCALL	_LEDHOFF
                                    1- 1204     	.line	735, "main.c"; 	LEDLOFF();
     00D0 2rrr                      1- 1205     	LCALL	_LEDLOFF
     00D1 3rrr                      1- 1206     	LGOTO	_00003_DS_
     00D2                           1- 1207     _00510_DS_:
                                    1- 1208     	.line	741, "main.c"; 	if(pwStep == 0 || pwStep == 1 || (++lowBatTime > 10))
                                    1- 1209     	BANKSEL	_pwStep
     00D2 rrrr                      3-   71 m1      .banksel ram_address
     00D3 01rr                      1- 1210     	MOVR	_pwStep,W
     00D4 0D03                      1- 1211     	BTRSC	STATUS,2
     00D5 3rrr                      1- 1212     	LGOTO	_00505_DS_
     00D6 01rr                      1- 1213     	MOVR	_pwStep,W
     00D7 2401                      1- 1214     	XORIA	0x01
     00D8 0D03                      1- 1215     	BTRSC	STATUS,2
     00D9 3rrr                      1- 1216     	LGOTO	_00505_DS_
                                    1- 1217     	BANKSEL	_lowBatTime
     00DA rrrr                      3-   71 m1      .banksel ram_address
     00DB 05rr                      1- 1218     	INCR	_lowBatTime,F
     00DC 210B                      1- 1219     	MOVIA	0x0b
     00DD 04rr                      1- 1220     	SUBAR	_lowBatTime,W
     00DE 0803                      1- 1221     	BTRSS	STATUS,0
     00DF 3rrr                      1- 1222     	LGOTO	_00003_DS_
     00E0                           1- 1223     _00505_DS_:
                                    1- 1224     	.line	743, "main.c"; 	lowBatTime = 0;
                                    1- 1225     	BANKSEL	_lowBatTime
     00E0 rrrr                      3-   71 m1      .banksel ram_address
     00E1 02rr                      1- 1226     	CLRR	_lowBatTime
                                    1- 1227     	.line	744, "main.c"; 	pwStep = 1;
     00E2 2101                      1- 1228     	MOVIA	0x01
                                    1- 1229     	BANKSEL	_pwStep
     00E3 rrrr                      3-   71 m1      .banksel ram_address
     00E4 00rr                      1- 1230     	MOVAR	_pwStep
                                    1- 1231     	.line	745, "main.c"; 	chrgTime = 0;
                                    1- 1232     	BANKSEL	_chrgTime
     00E5 rrrr                      3-   71 m1      .banksel ram_address
     00E6 02rr                      1- 1233     	CLRR	_chrgTime
     00E7 02rr                      1- 1234     	CLRR	(_chrgTime + 1)
                                    1- 1235     	.line	746, "main.c"; 	if(workStep > 0 && fgPRD < 100 && workStartFlag == 0)
                                    1- 1236     	BANKSEL	_workStep
     00E8 rrrr                      3-   71 m1      .banksel ram_address
     00E9 01rr                      1- 1237     	MOVR	_workStep,W
     00EA 0D03                      1- 1238     	BTRSC	STATUS,2
     00EB 3rrr                      1- 1239     	LGOTO	_00003_DS_
                                    1- 1240     ;;unsigned compare: left < lit (0x64=100), size=2
     00EC 2100                      1- 1241     	MOVIA	0x00
                                    1- 1242     	BANKSEL	_fgPRD
     00ED rrrr                      3-   71 m1      .banksel ram_address
     00EE 04rr                      1- 1243     	SUBAR	(_fgPRD + 1),W
     00EF 0903                      1- 1244     	BTRSS	STATUS,2
     00F0 3rrr                      1- 1245     	LGOTO	_00592_DS_
     00F1 2164                      1- 1246     	MOVIA	0x64
     00F2 04rr                      1- 1247     	SUBAR	_fgPRD,W
     00F3                           1- 1248     _00592_DS_:
     00F3 0C03                      1- 1249     	BTRSC	STATUS,0
     00F4 3rrr                      1- 1250     	LGOTO	_00003_DS_
                                    1- 1251     	BANKSEL	_workStartFlag
     00F5 rrrr                      3-   71 m1      .banksel ram_address
     00F6 01rr                      1- 1252     	MOVR	_workStartFlag,W
     00F7 0903                      1- 1253     	BTRSS	STATUS,2
     00F8 3rrr                      1- 1254     	LGOTO	_00003_DS_
                                    1- 1255     	.line	748, "main.c"; 	workStartFlag = 4;
     00F9 2104                      1- 1256     	MOVIA	0x04
     00FA 00rr                      1- 1257     	MOVAR	_workStartFlag
                                    1- 1258     	.line	749, "main.c"; 	if(redLedFlag == 0)
                                    1- 1259     	BANKSEL	_Status
     00FB rrrr                      3-   71 m1      .banksel ram_address
     00FC 0Drr                      1- 1260     	BTRSC	_Status,2
     00FD 3rrr                      1- 1261     	LGOTO	_00003_DS_
                                    1- 1262     	.line	751, "main.c"; 	startStep = 0;
                                    1- 1263     	BANKSEL	_startStep
     00FE rrrr                      3-   71 m1      .banksel ram_address
     00FF 02rr                      1- 1264     	CLRR	_startStep
     0100                           1- 1265     _00003_DS_:
                                    1- 1266     	.line	758, "main.c"; 	}
                                    1- 1267     	RETURN	
     0100 0010                      3-   26 m1      ret
                                    1- 1269     ;***
                                    1- 1270     ;  pBlock Stats: dbName = C
                                    1- 1271     ;***
                                    1- 1272     ;has an exit
                                    1- 1273     ;functions called:
                                    1- 1274     ;   _delay
                                    1- 1275     ;   _delay
                                    1- 1276     ;; Starting pCode block
                                    1- 1277     .segment "code"; module=main, function=_initAD
     0000                           1- 1279     _initAD:
                                    1- 1280     ; 2 exit points
                                    1- 1281     	.line	648, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1282     	MOVIA	0x84
     0001 00rr                      1- 1283     	MOVAR	_ADMD
                                    1- 1284     	.line	653, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1285     	CLRR	_ADVREFH
                                    1- 1286     	.line	658, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1287     	MOVIA	0x10
     0004 00rr                      1- 1288     	MOVAR	_ADR
                                    1- 1289     	.line	660, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1290     	MOVIA	0x03
     0006 00rr                      1- 1291     	MOVAR	_ADCR
                                    1- 1292     	.line	663, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1293     	BSR	_ADMDbits,4
                                    1- 1294     	.line	664, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1295     	MOVIA	0x64
     0009 2rrr                      1- 1296     	LCALL	_delay
                                    1- 1297     	.line	667, "main.c"; 	}
                                    1- 1298     	RETURN	
     000A 0010                      3-   26 m1      ret
                                    1- 1299     ; exit point of _initAD
                                    1- 1301     ;***
                                    1- 1302     ;  pBlock Stats: dbName = C
                                    1- 1303     ;***
                                    1- 1304     ;has an exit
                                    1- 1305     ;2 compiler assigned registers:
                                    1- 1306     ;   r0x1020
                                    1- 1307     ;   r0x1021
                                    1- 1308     ;; Starting pCode block
                                    1- 1309     .segment "code"; module=main, function=_delay
                                    1- 1311     ;local variable name mapping:
     0000                           1- 1314     _delay:
                                    1- 1315     ; 2 exit points
                                    1- 1316     	.line	638, "main.c"; 	void delay(u8t time)
                                    1- 1317     	BANKSEL	r0x1020
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1318     	MOVAR	r0x1020
                                    1- 1319     	.line	640, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1320     	BANKSEL	r0x1021
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 02rr                      1- 1321     	CLRR	r0x1021
     0004                           1- 1322     _00472_DS_:
                                    1- 1323     	BANKSEL	r0x1020
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 1324     	MOVR	r0x1020,W
                                    1- 1325     	BANKSEL	r0x1021
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 04rr                      1- 1326     	SUBAR	r0x1021,W
     0008 0C03                      1- 1327     	BTRSC	STATUS,0
     0009 3rrr                      1- 1328     	LGOTO	_00474_DS_
                                    1- 1329     	.line	641, "main.c"; 	NOP();
     000A 0000                      1- 1330     	nop
                                    1- 1331     	.line	640, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1332     	BANKSEL	r0x1021
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 05rr                      1- 1333     	INCR	r0x1021,F
     000D 3rrr                      1- 1334     	LGOTO	_00472_DS_
     000E                           1- 1335     _00474_DS_:
                                    1- 1336     	.line	642, "main.c"; 	}
                                    1- 1337     	RETURN	
     000E 0010                      3-   26 m1      ret
                                    1- 1338     ; exit point of _delay
                                    1- 1340     ;***
                                    1- 1341     ;  pBlock Stats: dbName = C
                                    1- 1342     ;***
                                    1- 1343     ;has an exit
                                    1- 1344     ;functions called:
                                    1- 1345     ;   _pwmStop
                                    1- 1346     ;   _LedInput
                                    1- 1347     ;   _LEDLOFF
                                    1- 1348     ;   _LEDHON
                                    1- 1349     ;   _LEDHOFF
                                    1- 1350     ;   _LEDHOFF
                                    1- 1351     ;   _LEDLOFF
                                    1- 1352     ;   _pwmStop
                                    1- 1353     ;   _LedInput
                                    1- 1354     ;   _LEDLOFF
                                    1- 1355     ;   _LEDHON
                                    1- 1356     ;   _LEDHOFF
                                    1- 1357     ;   _LEDHOFF
                                    1- 1358     ;   _LEDLOFF
                                    1- 1359     ;; Starting pCode block
                                    1- 1360     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1362     _chrgCtr:
                                    1- 1363     ; 2 exit points
                                    1- 1364     	.line	598, "main.c"; 	if(PORTA & 0x20)
                                    1- 1365     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 0Arr                      1- 1366     	BTRSS	_PORTA,5
     0002 3rrr                      1- 1367     	LGOTO	_00463_DS_
                                    1- 1368     	.line	601, "main.c"; 	chrgFlag = 1;
                                    1- 1369     	BANKSEL	_Status
     0003 rrrr                      3-   71 m1      .banksel ram_address
     0004 19rr                      1- 1370     	BSR	_Status,3
                                    1- 1371     	.line	602, "main.c"; 	workStartFlag = 0;
                                    1- 1372     	BANKSEL	_workStartFlag
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1- 1373     	CLRR	_workStartFlag
                                    1- 1374     	.line	603, "main.c"; 	workStep = 0;
                                    1- 1375     	BANKSEL	_workStep
     0007 rrrr                      3-   71 m1      .banksel ram_address
     0008 02rr                      1- 1376     	CLRR	_workStep
                                    1- 1377     	.line	604, "main.c"; 	ledStep = 0;
                                    1- 1378     	BANKSEL	_ledStep
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 02rr                      1- 1379     	CLRR	_ledStep
                                    1- 1380     	.line	605, "main.c"; 	pwmStop();
     000B 2rrr                      1- 1381     	LCALL	_pwmStop
                                    1- 1382     	.line	606, "main.c"; 	LedInput();
     000C 2rrr                      1- 1383     	LCALL	_LedInput
                                    1- 1384     	.line	607, "main.c"; 	PORTB &= 0xFD;
     000D 1Crr                      1- 1385     	BCR	_PORTB,1
                                    1- 1386     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1387     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1- 1388     	.line	608, "main.c"; 	if(pwStep > 5)
     000E 2106                      1- 1389     	MOVIA	0x06
                                    1- 1390     	BANKSEL	_pwStep
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 04rr                      1- 1391     	SUBAR	_pwStep,W
     0011 0803                      1- 1392     	BTRSS	STATUS,0
     0012 3rrr                      1- 1393     	LGOTO	_00458_DS_
                                    1- 1394     	.line	611, "main.c"; 	LEDLOFF();
     0013 2rrr                      1- 1395     	LCALL	_LEDLOFF
                                    1- 1396     	.line	612, "main.c"; 	LEDHON();
     0014 2rrr                      1- 1397     	LCALL	_LEDHON
     0015 3rrr                      1- 1398     	LGOTO	_00465_DS_
     0016                           1- 1399     _00458_DS_:
                                    1- 1400     	.line	616, "main.c"; 	if(pwStep == 6)
                                    1- 1401     	BANKSEL	_pwStep
     0016 rrrr                      3-   71 m1      .banksel ram_address
     0017 01rr                      1- 1402     	MOVR	_pwStep,W
     0018 2406                      1- 1403     	XORIA	0x06
     0019 0903                      1- 1404     	BTRSS	STATUS,2
     001A 3rrr                      1- 1405     	LGOTO	_00456_DS_
                                    1- 1406     	.line	618, "main.c"; 	pwStep = 5;
     001B 2105                      1- 1407     	MOVIA	0x05
     001C 00rr                      1- 1408     	MOVAR	_pwStep
     001D                           1- 1409     _00456_DS_:
                                    1- 1410     	.line	620, "main.c"; 	LEDHOFF();
     001D 2rrr                      1- 1411     	LCALL	_LEDHOFF
                                    1- 1412     	.line	621, "main.c"; 	PORTA ^= 0x08;
     001E 2108                      1- 1413     	MOVIA	0x08
                                    1- 1414     	BANKSEL	_PORTA
     001F rrrr                      3-   71 m1      .banksel ram_address
     0020 12rr                      1- 1415     	XORAR	_PORTA,F
     0021 3rrr                      1- 1416     	LGOTO	_00465_DS_
     0022                           1- 1417     _00463_DS_:
                                    1- 1418     	.line	626, "main.c"; 	chrgFlag = 0;
                                    1- 1419     	BANKSEL	_Status
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 1Drr                      1- 1420     	BCR	_Status,3
                                    1- 1421     	.line	627, "main.c"; 	chrgTime = 0;	//重置充电计数
                                    1- 1422     	BANKSEL	_chrgTime
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 02rr                      1- 1423     	CLRR	_chrgTime
     0026 02rr                      1- 1424     	CLRR	(_chrgTime + 1)
                                    1- 1425     	.line	628, "main.c"; 	if(workStartFlag == 0)
                                    1- 1426     	BANKSEL	_workStartFlag
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1- 1427     	MOVR	_workStartFlag,W
     0029 0903                      1- 1428     	BTRSS	STATUS,2
     002A 3rrr                      1- 1429     	LGOTO	_00465_DS_
                                    1- 1430     	.line	630, "main.c"; 	LEDHOFF();
     002B 2rrr                      1- 1431     	LCALL	_LEDHOFF
                                    1- 1432     	.line	631, "main.c"; 	LEDLOFF();	
     002C 2rrr                      1- 1433     	LCALL	_LEDLOFF
     002D                           1- 1434     _00465_DS_:
                                    1- 1435     	.line	635, "main.c"; 	}
                                    1- 1436     	RETURN	
     002D 0010                      3-   26 m1      ret
                                    1- 1437     ; exit point of _chrgCtr
                                    1- 1439     ;***
                                    1- 1440     ;  pBlock Stats: dbName = C
                                    1- 1441     ;***
                                    1- 1442     ;has an exit
                                    1- 1443     ;1 compiler assigned register :
                                    1- 1444     ;   r0x102D
                                    1- 1445     ;; Starting pCode block
                                    1- 1446     .segment "code"; module=main, function=_keyRead
                                    1- 1448     ;local variable name mapping:
     0000                           1- 1450     _keyRead:
                                    1- 1451     ; 2 exit points
                                    1- 1452     	.line	561, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 1453     	BANKSEL	r0x102D
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 00rr                      1- 1454     	MOVAR	r0x102D
                                    1- 1455     	.line	563, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 1456     	MOVR	r0x102D,W
     0003 0D03                      1- 1457     	BTRSC	STATUS,2
     0004 3rrr                      1- 1458     	LGOTO	_00448_DS_
                                    1- 1459     	.line	565, "main.c"; 	keyCount++;
                                    1- 1460     	BANKSEL	_keyCount
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 05rr                      1- 1461     	INCR	_keyCount,F
                                    1- 1462     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 1463     	.line	566, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 1464     	MOVIA	0x64
     0008 04rr                      1- 1465     	SUBAR	_keyCount,W
     0009 0803                      1- 1466     	BTRSS	STATUS,0
     000A 3rrr                      1- 1467     	LGOTO	_00449_DS_
                                    1- 1468     	.line	568, "main.c"; 	keyCount = 100;
     000B 2164                      1- 1469     	MOVIA	0x64
     000C 00rr                      1- 1470     	MOVAR	_keyCount
                                    1- 1471     	.line	569, "main.c"; 	if(!longPressFlag)
                                    1- 1472     	BANKSEL	_Status
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 0Crr                      1- 1473     	BTRSC	_Status,1
     000F 3rrr                      1- 1474     	LGOTO	_00449_DS_
                                    1- 1475     	.line	571, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 1476     	BSR	_Status,1
                                    1- 1477     	.line	572, "main.c"; 	return 2;
     0011 2102                      1- 1478     	MOVIA	0x02
     0012 3rrr                      1- 1479     	LGOTO	_00450_DS_
                                    1- 1480     ;;unsigned compare: left < lit (0x64=100), size=1
     0013                           1- 1481     _00448_DS_:
                                    1- 1482     	.line	578, "main.c"; 	if(keyCount >= 100)
     0013 2164                      1- 1483     	MOVIA	0x64
                                    1- 1484     	BANKSEL	_keyCount
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1- 1485     	SUBAR	_keyCount,W
     0016 0803                      1- 1486     	BTRSS	STATUS,0
     0017 3rrr                      1- 1487     	LGOTO	_00445_DS_
                                    1- 1488     	.line	580, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 1489     	CLRR	_keyCount
                                    1- 1490     	.line	581, "main.c"; 	longPressFlag = 0;
                                    1- 1491     	BANKSEL	_Status
     0019 rrrr                      3-   71 m1      .banksel ram_address
     001A 1Crr                      1- 1492     	BCR	_Status,1
                                    1- 1493     	.line	582, "main.c"; 	return	0;
     001B 2100                      1- 1494     	MOVIA	0x00
     001C 3rrr                      1- 1495     	LGOTO	_00450_DS_
                                    1- 1496     ;;unsigned compare: left < lit (0x8=8), size=1
     001D                           1- 1497     _00445_DS_:
                                    1- 1498     	.line	584, "main.c"; 	else if(keyCount >= 8)
     001D 2108                      1- 1499     	MOVIA	0x08
                                    1- 1500     	BANKSEL	_keyCount
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 04rr                      1- 1501     	SUBAR	_keyCount,W
     0020 0803                      1- 1502     	BTRSS	STATUS,0
     0021 3rrr                      1- 1503     	LGOTO	_00446_DS_
                                    1- 1504     	.line	586, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 1505     	CLRR	_keyCount
                                    1- 1506     	.line	587, "main.c"; 	return	1;
     0023 2101                      1- 1507     	MOVIA	0x01
     0024 3rrr                      1- 1508     	LGOTO	_00450_DS_
     0025                           1- 1509     _00446_DS_:
                                    1- 1510     	.line	589, "main.c"; 	keyCount = 0;
                                    1- 1511     	BANKSEL	_keyCount
     0025 rrrr                      3-   71 m1      .banksel ram_address
     0026 02rr                      1- 1512     	CLRR	_keyCount
     0027                           1- 1513     _00449_DS_:
                                    1- 1514     	.line	591, "main.c"; 	return 0;
     0027 2100                      1- 1515     	MOVIA	0x00
     0028                           1- 1516     _00450_DS_:
                                    1- 1517     	.line	592, "main.c"; 	}
                                    1- 1518     	RETURN	
     0028 0010                      3-   26 m1      ret
                                    1- 1519     ; exit point of _keyRead
                                    1- 1521     ;***
                                    1- 1522     ;  pBlock Stats: dbName = C
                                    1- 1523     ;***
                                    1- 1524     ;has an exit
                                    1- 1525     ;functions called:
                                    1- 1526     ;   _LedInput
                                    1- 1527     ;   _pwmStop
                                    1- 1528     ;   _LedInput
                                    1- 1529     ;   _pwmStop
                                    1- 1530     ;; Starting pCode block
                                    1- 1531     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 1533     _gotoSleep:
                                    1- 1534     ; 2 exit points
                                    1- 1535     	.line	537, "main.c"; 	LedInput();
     0000 2rrr                      1- 1536     	LCALL	_LedInput
                                    1- 1537     	.line	538, "main.c"; 	sleepTime = 0;
                                    1- 1538     	BANKSEL	_sleepTime
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 02rr                      1- 1539     	CLRR	_sleepTime
     0003 02rr                      1- 1540     	CLRR	(_sleepTime + 1)
                                    1- 1541     	.line	540, "main.c"; 	pwmStop();
     0004 2rrr                      1- 1542     	LCALL	_pwmStop
                                    1- 1543     	.line	541, "main.c"; 	workStep = 0;
                                    1- 1544     	BANKSEL	_workStep
     0005 rrrr                      3-   71 m1      .banksel ram_address
     0006 02rr                      1- 1545     	CLRR	_workStep
                                    1- 1546     	.line	542, "main.c"; 	AWUCON = 0x60;
     0007 2160                      1- 1547     	MOVIA	0x60
     0008 00rr                      1- 1548     	MOVAR	_AWUCON
                                    1- 1549     	.line	543, "main.c"; 	fgPRD = 0;
                                    1- 1550     	BANKSEL	_fgPRD
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 02rr                      1- 1551     	CLRR	_fgPRD
     000B 02rr                      1- 1552     	CLRR	(_fgPRD + 1)
                                    1- 1553     	.line	544, "main.c"; 	fgCount = 0;
                                    1- 1554     	BANKSEL	_fgCount
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 02rr                      1- 1555     	CLRR	_fgCount
     000E 02rr                      1- 1556     	CLRR	(_fgCount + 1)
                                    1- 1557     	.line	545, "main.c"; 	redLedFlag = 0;
                                    1- 1558     	BANKSEL	_Status
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 1Drr                      1- 1559     	BCR	_Status,2
                                    1- 1560     	.line	546, "main.c"; 	INTE =  C_INT_TMR0 | C_INT_TMR1 | C_INT_PABKey;
     0011 210B                      1- 1561     	MOVIA	0x0b
     0012 00rr                      1- 1562     	MOVAR	_INTE
                                    1- 1563     	.line	547, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0013 2118                      1- 1564     	MOVIA	0x18
     0014 00rr                      1- 1565     	MOVAR	_PCON
                                    1- 1566     	.line	548, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0015 02rr                      1- 1567     	CLRR	_INTF
                                    1- 1568     	.line	549, "main.c"; 	CLRWDT();
     0016 0002                      1- 1569     	clrwdt
                                    1- 1570     	.line	550, "main.c"; 	ENI();
     0017 0004                      1- 1571     	ENI
                                    1- 1572     	.line	551, "main.c"; 	SLEEP();
     0018 0001                      1- 1573     	sleep
                                    1- 1574     	.line	552, "main.c"; 	AWUCON = 0x00;
     0019 02rr                      1- 1575     	CLRR	_AWUCON
                                    1- 1576     	.line	553, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     001A 2101                      1- 1577     	MOVIA	0x01
     001B 00rr                      1- 1578     	MOVAR	_INTE
                                    1- 1579     	.line	554, "main.c"; 	INTF = 0;
     001C 02rr                      1- 1580     	CLRR	_INTF
                                    1- 1581     	.line	556, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     001D 21B8                      1- 1582     	MOVIA	0xb8
     001E 00rr                      1- 1583     	MOVAR	_PCON
                                    1- 1584     	.line	558, "main.c"; 	}
                                    1- 1585     	RETURN	
     001F 0010                      3-   26 m1      ret
                                    1- 1586     ; exit point of _gotoSleep
                                    1- 1588     ;***
                                    1- 1589     ;  pBlock Stats: dbName = C
                                    1- 1590     ;***
                                    1- 1591     ;has an exit
                                    1- 1592     ;functions called:
                                    1- 1593     ;   _pwmStop
                                    1- 1594     ;   _LEDHOFF
                                    1- 1595     ;   _LEDLOFF
                                    1- 1596     ;   _pwmStop
                                    1- 1597     ;   _LEDHOFF
                                    1- 1598     ;   _LEDLOFF
                                    1- 1599     ;; Starting pCode block
                                    1- 1600     .segment "code"; module=main, function=_powerOff
     0000                           1- 1602     _powerOff:
                                    1- 1603     ; 2 exit points
                                    1- 1604     	.line	527, "main.c"; 	workStep = 0;
                                    1- 1605     	BANKSEL	_workStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 02rr                      1- 1606     	CLRR	_workStep
                                    1- 1607     	.line	528, "main.c"; 	pwmStop();
     0002 2rrr                      1- 1608     	LCALL	_pwmStop
                                    1- 1609     	.line	529, "main.c"; 	LEDHOFF();
     0003 2rrr                      1- 1610     	LCALL	_LEDHOFF
                                    1- 1611     	.line	530, "main.c"; 	LEDLOFF();
     0004 2rrr                      1- 1612     	LCALL	_LEDLOFF
                                    1- 1613     	.line	531, "main.c"; 	ledStep = 5;
     0005 2105                      1- 1614     	MOVIA	0x05
                                    1- 1615     	BANKSEL	_ledStep
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 00rr                      1- 1616     	MOVAR	_ledStep
                                    1- 1617     	.line	532, "main.c"; 	workStartFlag = 2;
     0008 2102                      1- 1618     	MOVIA	0x02
                                    1- 1619     	BANKSEL	_workStartFlag
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 00rr                      1- 1620     	MOVAR	_workStartFlag
                                    1- 1621     	.line	533, "main.c"; 	}
                                    1- 1622     	RETURN	
     000B 0010                      3-   26 m1      ret
                                    1- 1623     ; exit point of _powerOff
                                    1- 1625     ;***
                                    1- 1626     ;  pBlock Stats: dbName = C
                                    1- 1627     ;***
                                    1- 1628     ;has an exit
                                    1- 1629     ;functions called:
                                    1- 1630     ;   _keyRead
                                    1- 1631     ;   _pwmInit
                                    1- 1632     ;   _powerOff
                                    1- 1633     ;   _keyRead
                                    1- 1634     ;   _pwmInit
                                    1- 1635     ;   _powerOff
                                    1- 1636     ;1 compiler assigned register :
                                    1- 1637     ;   r0x102F
                                    1- 1638     ;; Starting pCode block
                                    1- 1639     .segment "code"; module=main, function=_keyCtr
                                    1- 1641     ;local variable name mapping:
     0000                           1- 1643     _keyCtr:
                                    1- 1644     ; 2 exit points
                                    1- 1645     	.line	468, "main.c"; 	if(workStep > 0 && ledTime == 0)
                                    1- 1646     	BANKSEL	_workStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1647     	MOVR	_workStep,W
     0002 0D03                      1- 1648     	BTRSC	STATUS,2
     0003 3rrr                      1- 1649     	LGOTO	_00398_DS_
                                    1- 1650     	BANKSEL	_ledTime
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 1651     	MOVR	_ledTime,W
     0006 0903                      1- 1652     	BTRSS	STATUS,2
     0007 3rrr                      1- 1653     	LGOTO	_00398_DS_
                                    1- 1654     	.line	470, "main.c"; 	PORTB |= 0x02;
     0008 18rr                      1- 1655     	BSR	_PORTB,1
     0009 3rrr                      1- 1656     	LGOTO	_00399_DS_
     000A                           1- 1657     _00398_DS_:
                                    1- 1658     	.line	474, "main.c"; 	PORTB &= 0xFD;
     000A 1Crr                      1- 1659     	BCR	_PORTB,1
     000B                           1- 1660     _00399_DS_:
                                    1- 1661     	.line	477, "main.c"; 	char kclick = keyRead(0x40 & (~PORTA));
                                    1- 1662     	BANKSEL	_PORTA
     000B rrrr                      3-   71 m1      .banksel ram_address
     000C 07rr                      1- 1663     	COMR	_PORTA,W
                                    1- 1664     	BANKSEL	r0x102F
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 00rr                      1- 1665     	MOVAR	r0x102F
     000F 2140                      1- 1666     	MOVIA	0x40
     0010 10rr                      1- 1667     	ANDAR	r0x102F,F
     0011 01rr                      1- 1668     	MOVR	r0x102F,W
     0012 2rrr                      1- 1669     	LCALL	_keyRead
                                    1- 1670     	BANKSEL	r0x102F
     0013 rrrr                      3-   71 m1      .banksel ram_address
     0014 00rr                      1- 1671     	MOVAR	r0x102F
                                    1- 1672     	.line	478, "main.c"; 	if(kclick == 1 && workStep > 0)
     0015 2401                      1- 1673     	XORIA	0x01
     0016 0903                      1- 1674     	BTRSS	STATUS,2
     0017 3rrr                      1- 1675     	LGOTO	_00422_DS_
                                    1- 1676     	BANKSEL	_workStep
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1- 1677     	MOVR	_workStep,W
     001A 0D03                      1- 1678     	BTRSC	STATUS,2
     001B 3rrr                      1- 1679     	LGOTO	_00422_DS_
                                    1- 1680     	.line	480, "main.c"; 	count500ms = 0;
                                    1- 1681     	BANKSEL	_count500ms
     001C rrrr                      3-   71 m1      .banksel ram_address
     001D 02rr                      1- 1682     	CLRR	_count500ms
                                    1- 1683     	.line	481, "main.c"; 	if(workStep > 0)
                                    1- 1684     	BANKSEL	_workStep
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 1685     	MOVR	_workStep,W
     0020 0D03                      1- 1686     	BTRSC	STATUS,2
     0021 3rrr                      1- 1687     	LGOTO	_00404_DS_
                                    1- 1688     	.line	483, "main.c"; 	ledTime = 0;
                                    1- 1689     	BANKSEL	_ledTime
     0022 rrrr                      3-   71 m1      .banksel ram_address
     0023 02rr                      1- 1690     	CLRR	_ledTime
                                    1- 1691     	.line	484, "main.c"; 	if(++workStep > 4)
                                    1- 1692     	BANKSEL	_workStep
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 05rr                      1- 1693     	INCR	_workStep,F
                                    1- 1694     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1695     ;;unsigned compare: left >= lit (0x5=5), size=1
     0026 2105                      1- 1696     	MOVIA	0x05
     0027 04rr                      1- 1697     	SUBAR	_workStep,W
     0028 0803                      1- 1698     	BTRSS	STATUS,0
     0029 3rrr                      1- 1699     	LGOTO	_00404_DS_
                                    1- 1700     	.line	485, "main.c"; 	workStep = 1;
     002A 2101                      1- 1701     	MOVIA	0x01
     002B 00rr                      1- 1702     	MOVAR	_workStep
     002C                           1- 1703     _00404_DS_:
                                    1- 1704     	.line	487, "main.c"; 	duty = 1;
     002C 2101                      1- 1705     	MOVIA	0x01
                                    1- 1706     	BANKSEL	_duty
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 00rr                      1- 1707     	MOVAR	_duty
     002F 02rr                      1- 1708     	CLRR	(_duty + 1)
                                    1- 1709     	.line	488, "main.c"; 	fgCount = 0;
                                    1- 1710     	BANKSEL	_fgCount
     0030 rrrr                      3-   71 m1      .banksel ram_address
     0031 02rr                      1- 1711     	CLRR	_fgCount
     0032 02rr                      1- 1712     	CLRR	(_fgCount + 1)
                                    1- 1713     	.line	489, "main.c"; 	workStartFlag = 0;
                                    1- 1714     	BANKSEL	_workStartFlag
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 02rr                      1- 1715     	CLRR	_workStartFlag
                                    1- 1716     	.line	490, "main.c"; 	if(workStep == 1)
                                    1- 1717     	BANKSEL	_workStep
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1- 1718     	MOVR	_workStep,W
     0037 2401                      1- 1719     	XORIA	0x01
     0038 0903                      1- 1720     	BTRSS	STATUS,2
     0039 3rrr                      1- 1721     	LGOTO	_00414_DS_
                                    1- 1722     	.line	491, "main.c"; 	maxDuty = 38;
     003A 2126                      1- 1723     	MOVIA	0x26
                                    1- 1724     	BANKSEL	_maxDuty
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 00rr                      1- 1725     	MOVAR	_maxDuty
     003D 3rrr                      1- 1726     	LGOTO	_00415_DS_
     003E                           1- 1727     _00414_DS_:
                                    1- 1728     	.line	492, "main.c"; 	else if(workStep == 2)
                                    1- 1729     	BANKSEL	_workStep
     003E rrrr                      3-   71 m1      .banksel ram_address
     003F 01rr                      1- 1730     	MOVR	_workStep,W
     0040 2402                      1- 1731     	XORIA	0x02
     0041 0903                      1- 1732     	BTRSS	STATUS,2
     0042 3rrr                      1- 1733     	LGOTO	_00411_DS_
                                    1- 1734     	.line	493, "main.c"; 	maxDuty = 26;
     0043 211A                      1- 1735     	MOVIA	0x1a
                                    1- 1736     	BANKSEL	_maxDuty
     0044 rrrr                      3-   71 m1      .banksel ram_address
     0045 00rr                      1- 1737     	MOVAR	_maxDuty
     0046 3rrr                      1- 1738     	LGOTO	_00415_DS_
     0047                           1- 1739     _00411_DS_:
                                    1- 1740     	.line	494, "main.c"; 	else if(workStep == 3)
                                    1- 1741     	BANKSEL	_workStep
     0047 rrrr                      3-   71 m1      .banksel ram_address
     0048 01rr                      1- 1742     	MOVR	_workStep,W
     0049 2403                      1- 1743     	XORIA	0x03
     004A 0903                      1- 1744     	BTRSS	STATUS,2
     004B 3rrr                      1- 1745     	LGOTO	_00408_DS_
                                    1- 1746     	.line	495, "main.c"; 	maxDuty = 15;
     004C 210F                      1- 1747     	MOVIA	0x0f
                                    1- 1748     	BANKSEL	_maxDuty
     004D rrrr                      3-   71 m1      .banksel ram_address
     004E 00rr                      1- 1749     	MOVAR	_maxDuty
     004F 3rrr                      1- 1750     	LGOTO	_00415_DS_
     0050                           1- 1751     _00408_DS_:
                                    1- 1752     	.line	496, "main.c"; 	else if(workStep == 4)
                                    1- 1753     	BANKSEL	_workStep
     0050 rrrr                      3-   71 m1      .banksel ram_address
     0051 01rr                      1- 1754     	MOVR	_workStep,W
     0052 2404                      1- 1755     	XORIA	0x04
     0053 0903                      1- 1756     	BTRSS	STATUS,2
     0054 3rrr                      1- 1757     	LGOTO	_00415_DS_
                                    1- 1758     	.line	497, "main.c"; 	maxDuty = 3;
     0055 2103                      1- 1759     	MOVIA	0x03
                                    1- 1760     	BANKSEL	_maxDuty
     0056 rrrr                      3-   71 m1      .banksel ram_address
     0057 00rr                      1- 1761     	MOVAR	_maxDuty
     0058                           1- 1762     _00415_DS_:
                                    1- 1763     	.line	498, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 1764     	BANKSEL	_maxDuty
     0058 rrrr                      3-   71 m1      .banksel ram_address
     0059 01rr                      1- 1765     	MOVR	_maxDuty,W
     005A 00rr                      1- 1766     	SFUN	_PWM2DUTY
                                    1- 1767     	.line	499, "main.c"; 	pwmInit();
     005B 2rrr                      1- 1768     	LCALL	_pwmInit
     005C 3rrr                      1- 1769     	LGOTO	_00425_DS_
     005D                           1- 1770     _00422_DS_:
                                    1- 1771     	.line	501, "main.c"; 	else if(kclick == 2)
                                    1- 1772     	BANKSEL	r0x102F
     005D rrrr                      3-   71 m1      .banksel ram_address
     005E 01rr                      1- 1773     	MOVR	r0x102F,W
     005F 2402                      1- 1774     	XORIA	0x02
     0060 0903                      1- 1775     	BTRSS	STATUS,2
     0061 3rrr                      1- 1776     	LGOTO	_00425_DS_
                                    1- 1777     	.line	503, "main.c"; 	if(workStep > 0)
                                    1- 1778     	BANKSEL	_workStep
     0062 rrrr                      3-   71 m1      .banksel ram_address
     0063 01rr                      1- 1779     	MOVR	_workStep,W
     0064 0D03                      1- 1780     	BTRSC	STATUS,2
     0065 3rrr                      1- 1781     	LGOTO	_00417_DS_
                                    1- 1782     	.line	505, "main.c"; 	powerOff();
     0066 2rrr                      1- 1783     	LCALL	_powerOff
     0067 3rrr                      1- 1784     	LGOTO	_00425_DS_
     0068                           1- 1785     _00417_DS_:
                                    1- 1786     	.line	509, "main.c"; 	startStep = 0;
                                    1- 1787     	BANKSEL	_startStep
     0068 rrrr                      3-   71 m1      .banksel ram_address
     0069 02rr                      1- 1788     	CLRR	_startStep
                                    1- 1789     	.line	510, "main.c"; 	sleepTime = 0;
                                    1- 1790     	BANKSEL	_sleepTime
     006A rrrr                      3-   71 m1      .banksel ram_address
     006B 02rr                      1- 1791     	CLRR	_sleepTime
     006C 02rr                      1- 1792     	CLRR	(_sleepTime + 1)
                                    1- 1793     	.line	511, "main.c"; 	ledTime = 4;
     006D 2104                      1- 1794     	MOVIA	0x04
                                    1- 1795     	BANKSEL	_ledTime
     006E rrrr                      3-   71 m1      .banksel ram_address
     006F 00rr                      1- 1796     	MOVAR	_ledTime
                                    1- 1797     	.line	512, "main.c"; 	count200ms = 0;
                                    1- 1798     	BANKSEL	_count200ms
     0070 rrrr                      3-   71 m1      .banksel ram_address
     0071 02rr                      1- 1799     	CLRR	_count200ms
                                    1- 1800     	.line	513, "main.c"; 	workStartFlag = 1;
     0072 2101                      1- 1801     	MOVIA	0x01
                                    1- 1802     	BANKSEL	_workStartFlag
     0073 rrrr                      3-   71 m1      .banksel ram_address
     0074 00rr                      1- 1803     	MOVAR	_workStartFlag
                                    1- 1804     	.line	514, "main.c"; 	maxDuty = 37;
     0075 2125                      1- 1805     	MOVIA	0x25
                                    1- 1806     	BANKSEL	_maxDuty
     0076 rrrr                      3-   71 m1      .banksel ram_address
     0077 00rr                      1- 1807     	MOVAR	_maxDuty
                                    1- 1808     	.line	515, "main.c"; 	workStep = 1;
     0078 2101                      1- 1809     	MOVIA	0x01
                                    1- 1810     	BANKSEL	_workStep
     0079 rrrr                      3-   71 m1      .banksel ram_address
     007A 00rr                      1- 1811     	MOVAR	_workStep
                                    1- 1812     	.line	516, "main.c"; 	ledStep = 0;
                                    1- 1813     	BANKSEL	_ledStep
     007B rrrr                      3-   71 m1      .banksel ram_address
     007C 02rr                      1- 1814     	CLRR	_ledStep
                                    1- 1815     	.line	517, "main.c"; 	count500ms = 0;
                                    1- 1816     	BANKSEL	_count500ms
     007D rrrr                      3-   71 m1      .banksel ram_address
     007E 02rr                      1- 1817     	CLRR	_count500ms
                                    1- 1818     	.line	518, "main.c"; 	duty = 1;
     007F 2101                      1- 1819     	MOVIA	0x01
                                    1- 1820     	BANKSEL	_duty
     0080 rrrr                      3-   71 m1      .banksel ram_address
     0081 00rr                      1- 1821     	MOVAR	_duty
     0082 02rr                      1- 1822     	CLRR	(_duty + 1)
                                    1- 1823     	.line	519, "main.c"; 	fgCount = 0;
                                    1- 1824     	BANKSEL	_fgCount
     0083 rrrr                      3-   71 m1      .banksel ram_address
     0084 02rr                      1- 1825     	CLRR	_fgCount
     0085 02rr                      1- 1826     	CLRR	(_fgCount + 1)
     0086                           1- 1827     _00425_DS_:
                                    1- 1828     	.line	523, "main.c"; 	}
                                    1- 1829     	RETURN	
     0086 0010                      3-   26 m1      ret
                                    1- 1830     ; exit point of _keyCtr
                                    1- 1832     ;***
                                    1- 1833     ;  pBlock Stats: dbName = C
                                    1- 1834     ;***
                                    1- 1835     ;functions called:
                                    1- 1836     ;   _pwmInit
                                    1- 1837     ;   _pwmInit
                                    1- 1838     ;   _pwmInit
                                    1- 1839     ;   _pwmInit
                                    1- 1840     ;; Starting pCode block
                                    1- 1841     .segment "code"; module=main, function=_ledCtr
     0000                           1- 1843     _ledCtr:
                                    1- 1844     ; 0 exit points
                                    1- 1845     	.line	432, "main.c"; 	if(ledTime > 0)
                                    1- 1846     	BANKSEL	_ledTime
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 01rr                      1- 1847     	MOVR	_ledTime,W
     0002 0903                      1- 1848     	BTRSS	STATUS,2
                                    1- 1849     	.line	433, "main.c"; 	--ledTime;
     0003 06rr                      1- 1850     	DECR	_ledTime,F
                                    1- 1851     	.line	434, "main.c"; 	if(workStartFlag == 1)
                                    1- 1852     	BANKSEL	_workStartFlag
     0004 rrrr                      3-   71 m1      .banksel ram_address
     0005 01rr                      1- 1853     	MOVR	_workStartFlag,W
     0006 2401                      1- 1854     	XORIA	0x01
     0007 0903                      1- 1855     	BTRSS	STATUS,2
     0008 3rrr                      1- 1856     	LGOTO	_00390_DS_
                                    1- 1857     	.line	436, "main.c"; 	if(++ledStep > 4)
                                    1- 1858     	BANKSEL	_ledStep
     0009 rrrr                      3-   71 m1      .banksel ram_address
     000A 05rr                      1- 1859     	INCR	_ledStep,F
                                    1- 1860     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1861     ;;unsigned compare: left >= lit (0x5=5), size=1
     000B 2105                      1- 1862     	MOVIA	0x05
     000C 04rr                      1- 1863     	SUBAR	_ledStep,W
     000D 0803                      1- 1864     	BTRSS	STATUS,0
     000E 3rrr                      1- 1865     	LGOTO	_00392_DS_
                                    1- 1866     	.line	438, "main.c"; 	ledStep = workStep;
                                    1- 1867     	BANKSEL	_workStep
     000F rrrr                      3-   71 m1      .banksel ram_address
     0010 01rr                      1- 1868     	MOVR	_workStep,W
                                    1- 1869     	BANKSEL	_ledStep
     0011 rrrr                      3-   71 m1      .banksel ram_address
     0012 00rr                      1- 1870     	MOVAR	_ledStep
                                    1- 1871     	.line	439, "main.c"; 	workStartFlag = 3;
     0013 2103                      1- 1872     	MOVIA	0x03
                                    1- 1873     	BANKSEL	_workStartFlag
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 00rr                      1- 1874     	MOVAR	_workStartFlag
                                    1- 1875     	.line	440, "main.c"; 	pwmInit();
     0016 2rrr                      1- 1876     	LCALL	_pwmInit
     0017 3rrr                      1- 1877     	LGOTO	_00392_DS_
     0018                           1- 1878     _00390_DS_:
                                    1- 1879     	.line	444, "main.c"; 	else if(workStartFlag == 2)
                                    1- 1880     	BANKSEL	_workStartFlag
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1- 1881     	MOVR	_workStartFlag,W
     001A 2402                      1- 1882     	XORIA	0x02
     001B 0903                      1- 1883     	BTRSS	STATUS,2
     001C 3rrr                      1- 1884     	LGOTO	_00387_DS_
                                    1- 1885     	.line	446, "main.c"; 	if(ledStep > 0)
                                    1- 1886     	BANKSEL	_ledStep
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1887     	MOVR	_ledStep,W
     001F 0D03                      1- 1888     	BTRSC	STATUS,2
     0020 3rrr                      1- 1889     	LGOTO	_00392_DS_
                                    1- 1890     	.line	448, "main.c"; 	ledStep--;
     0021 17rr                      1- 1891     	DECRSZ	_ledStep,F
                                    1- 1892     	.line	449, "main.c"; 	if(ledStep == 0)
     0022 3rrr                      1- 1893     	LGOTO	_00392_DS_
                                    1- 1894     	.line	450, "main.c"; 	workStartFlag = 0;
                                    1- 1895     	BANKSEL	_workStartFlag
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 02rr                      1- 1896     	CLRR	_workStartFlag
     0025 3rrr                      1- 1897     	LGOTO	_00392_DS_
     0026                           1- 1898     _00387_DS_:
                                    1- 1899     	.line	455, "main.c"; 	ledStep = workStep;
                                    1- 1900     	BANKSEL	_workStep
     0026 rrrr                      3-   71 m1      .banksel ram_address
     0027 01rr                      1- 1901     	MOVR	_workStep,W
                                    1- 1902     	BANKSEL	_ledStep
     0028 rrrr                      3-   71 m1      .banksel ram_address
     0029 00rr                      1- 1903     	MOVAR	_ledStep
                                    1- 1904     	.line	456, "main.c"; 	if(workStep && ledTime == 0)
                                    1- 1905     	BANKSEL	_workStep
     002A rrrr                      3-   71 m1      .banksel ram_address
     002B 01rr                      1- 1906     	MOVR	_workStep,W
     002C 0D03                      1- 1907     	BTRSC	STATUS,2
     002D 3rrr                      1- 1908     	LGOTO	_00392_DS_
                                    1- 1909     	BANKSEL	_ledTime
     002E rrrr                      3-   71 m1      .banksel ram_address
     002F 01rr                      1- 1910     	MOVR	_ledTime,W
     0030 0D03                      1- 1911     	BTRSC	STATUS,2
                                    1- 1912     	.line	458, "main.c"; 	pwmInit();
     0031 2rrr                      1- 1913     	LCALL	_pwmInit
     0032                           1- 1914     _00392_DS_:
                                    1- 1915     	.line	463, "main.c"; 	}
                                    1- 1916     	RETURN	
     0032 0010                      3-   26 m1      ret
                                    1- 1918     ;***
                                    1- 1919     ;  pBlock Stats: dbName = C
                                    1- 1920     ;***
                                    1- 1921     ;has an exit
                                    1- 1922     ;functions called:
                                    1- 1923     ;   _LEDLON
                                    1- 1924     ;   _LEDHON
                                    1- 1925     ;   _LEDHOFF
                                    1- 1926     ;   _LEDLOFF
                                    1- 1927     ;   _LEDHON
                                    1- 1928     ;   _LEDHOFF
                                    1- 1929     ;   _LEDLOFF
                                    1- 1930     ;   _LEDHON
                                    1- 1931     ;   _LEDLOFF
                                    1- 1932     ;   _LEDHOFF
                                    1- 1933     ;   _LEDLON
                                    1- 1934     ;   _LEDHON
                                    1- 1935     ;   _LEDHOFF
                                    1- 1936     ;   _LEDLOFF
                                    1- 1937     ;   _LEDHON
                                    1- 1938     ;   _LEDHOFF
                                    1- 1939     ;   _LEDLOFF
                                    1- 1940     ;   _LEDHON
                                    1- 1941     ;   _LEDLOFF
                                    1- 1942     ;   _LEDHOFF
                                    1- 1943     ;; Starting pCode block
                                    1- 1944     .segment "code"; module=main, function=_LedCtr2
     0000                           1- 1946     _LedCtr2:
                                    1- 1947     ; 2 exit points
                                    1- 1948     	.line	383, "main.c"; 	if(++startStep > 6)
                                    1- 1949     	BANKSEL	_startStep
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 05rr                      1- 1950     	INCR	_startStep,F
                                    1- 1951     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1952     ;;unsigned compare: left >= lit (0x7=7), size=1
     0002 2107                      1- 1953     	MOVIA	0x07
     0003 04rr                      1- 1954     	SUBAR	_startStep,W
     0004 0803                      1- 1955     	BTRSS	STATUS,0
     0005 3rrr                      1- 1956     	LGOTO	_00344_DS_
                                    1- 1957     	.line	385, "main.c"; 	workStartFlag = 0;
                                    1- 1958     	BANKSEL	_workStartFlag
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1- 1959     	CLRR	_workStartFlag
                                    1- 1960     	.line	386, "main.c"; 	startStep = 0;
                                    1- 1961     	BANKSEL	_startStep
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 02rr                      1- 1962     	CLRR	_startStep
                                    1- 1963     	.line	387, "main.c"; 	ledStep = workStep;
                                    1- 1964     	BANKSEL	_workStep
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1- 1965     	MOVR	_workStep,W
                                    1- 1966     	BANKSEL	_ledStep
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 1967     	MOVAR	_ledStep
                                    1- 1968     	.line	388, "main.c"; 	redLedFlag = 0;
                                    1- 1969     	BANKSEL	_Status
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 1Drr                      1- 1970     	BCR	_Status,2
     0010                           1- 1971     _00344_DS_:
                                    1- 1972     	.line	390, "main.c"; 	if(redLedFlag && startStep > 2)
                                    1- 1973     	BANKSEL	_Status
     0010 rrrr                      3-   71 m1      .banksel ram_address
     0011 09rr                      1- 1974     	BTRSS	_Status,2
     0012 3rrr                      1- 1975     	LGOTO	_00346_DS_
                                    1- 1976     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1977     ;;unsigned compare: left >= lit (0x3=3), size=1
     0013 2103                      1- 1978     	MOVIA	0x03
                                    1- 1979     	BANKSEL	_startStep
     0014 rrrr                      3-   71 m1      .banksel ram_address
     0015 04rr                      1- 1980     	SUBAR	_startStep,W
     0016 0C03                      1- 1981     	BTRSC	STATUS,0
                                    1- 1982     	.line	391, "main.c"; 	return;
     0017 3rrr                      1- 1983     	LGOTO	_00370_DS_
     0018                           1- 1984     _00346_DS_:
                                    1- 1985     	.line	393, "main.c"; 	if(startStep == 1)
                                    1- 1986     	BANKSEL	_startStep
     0018 rrrr                      3-   71 m1      .banksel ram_address
     0019 01rr                      1- 1987     	MOVR	_startStep,W
     001A 2401                      1- 1988     	XORIA	0x01
     001B 0903                      1- 1989     	BTRSS	STATUS,2
     001C 3rrr                      1- 1990     	LGOTO	_00368_DS_
                                    1- 1991     	.line	395, "main.c"; 	if(pwStep == 1)
                                    1- 1992     	BANKSEL	_pwStep
     001D rrrr                      3-   71 m1      .banksel ram_address
     001E 01rr                      1- 1993     	MOVR	_pwStep,W
     001F 2401                      1- 1994     	XORIA	0x01
     0020 0903                      1- 1995     	BTRSS	STATUS,2
     0021 3rrr                      1- 1996     	LGOTO	_00351_DS_
                                    1- 1997     	.line	397, "main.c"; 	LEDLON();
     0022 2rrr                      1- 1998     	LCALL	_LEDLON
                                    1- 1999     	.line	398, "main.c"; 	redLedFlag = 1;
                                    1- 2000     	BANKSEL	_Status
     0023 rrrr                      3-   71 m1      .banksel ram_address
     0024 19rr                      1- 2001     	BSR	_Status,2
     0025 3rrr                      1- 2002     	LGOTO	_00370_DS_
                                    1- 2003     ;;unsigned compare: left < lit (0x2=2), size=1
     0026                           1- 2004     _00351_DS_:
                                    1- 2005     	.line	400, "main.c"; 	else if(pwStep >= 2)
     0026 2102                      1- 2006     	MOVIA	0x02
                                    1- 2007     	BANKSEL	_pwStep
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 04rr                      1- 2008     	SUBAR	_pwStep,W
     0029 0803                      1- 2009     	BTRSS	STATUS,0
     002A 3rrr                      1- 2010     	LGOTO	_00370_DS_
                                    1- 2011     	.line	402, "main.c"; 	LEDHON();
     002B 2rrr                      1- 2012     	LCALL	_LEDHON
     002C 3rrr                      1- 2013     	LGOTO	_00370_DS_
     002D                           1- 2014     _00368_DS_:
                                    1- 2015     	.line	405, "main.c"; 	else if(startStep == 2)
                                    1- 2016     	BANKSEL	_startStep
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 01rr                      1- 2017     	MOVR	_startStep,W
     002F 2402                      1- 2018     	XORIA	0x02
     0030 0903                      1- 2019     	BTRSS	STATUS,2
     0031 3rrr                      1- 2020     	LGOTO	_00365_DS_
                                    1- 2021     	.line	407, "main.c"; 	LEDHOFF();
     0032 2rrr                      1- 2022     	LCALL	_LEDHOFF
                                    1- 2023     	.line	408, "main.c"; 	LEDLOFF();
     0033 2rrr                      1- 2024     	LCALL	_LEDLOFF
     0034 3rrr                      1- 2025     	LGOTO	_00370_DS_
     0035                           1- 2026     _00365_DS_:
                                    1- 2027     	.line	410, "main.c"; 	else if(startStep == 3 && pwStep >= 3)
                                    1- 2028     	BANKSEL	_startStep
     0035 rrrr                      3-   71 m1      .banksel ram_address
     0036 01rr                      1- 2029     	MOVR	_startStep,W
     0037 2403                      1- 2030     	XORIA	0x03
     0038 0903                      1- 2031     	BTRSS	STATUS,2
     0039 3rrr                      1- 2032     	LGOTO	_00361_DS_
                                    1- 2033     ;;unsigned compare: left < lit (0x3=3), size=1
     003A 2103                      1- 2034     	MOVIA	0x03
                                    1- 2035     	BANKSEL	_pwStep
     003B rrrr                      3-   71 m1      .banksel ram_address
     003C 04rr                      1- 2036     	SUBAR	_pwStep,W
     003D 0803                      1- 2037     	BTRSS	STATUS,0
     003E 3rrr                      1- 2038     	LGOTO	_00361_DS_
                                    1- 2039     	.line	412, "main.c"; 	LEDHON();
     003F 2rrr                      1- 2040     	LCALL	_LEDHON
     0040 3rrr                      1- 2041     	LGOTO	_00370_DS_
     0041                           1- 2042     _00361_DS_:
                                    1- 2043     	.line	414, "main.c"; 	else if(startStep == 4)
                                    1- 2044     	BANKSEL	_startStep
     0041 rrrr                      3-   71 m1      .banksel ram_address
     0042 01rr                      1- 2045     	MOVR	_startStep,W
     0043 2404                      1- 2046     	XORIA	0x04
     0044 0903                      1- 2047     	BTRSS	STATUS,2
     0045 3rrr                      1- 2048     	LGOTO	_00358_DS_
                                    1- 2049     	.line	416, "main.c"; 	LEDHOFF();
     0046 2rrr                      1- 2050     	LCALL	_LEDHOFF
                                    1- 2051     	.line	417, "main.c"; 	LEDLOFF();
     0047 2rrr                      1- 2052     	LCALL	_LEDLOFF
     0048 3rrr                      1- 2053     	LGOTO	_00370_DS_
     0049                           1- 2054     _00358_DS_:
                                    1- 2055     	.line	419, "main.c"; 	else if(startStep == 5 && pwStep >= 4)
                                    1- 2056     	BANKSEL	_startStep
     0049 rrrr                      3-   71 m1      .banksel ram_address
     004A 01rr                      1- 2057     	MOVR	_startStep,W
     004B 2405                      1- 2058     	XORIA	0x05
     004C 0903                      1- 2059     	BTRSS	STATUS,2
     004D 3rrr                      1- 2060     	LGOTO	_00354_DS_
                                    1- 2061     ;;unsigned compare: left < lit (0x4=4), size=1
     004E 2104                      1- 2062     	MOVIA	0x04
                                    1- 2063     	BANKSEL	_pwStep
     004F rrrr                      3-   71 m1      .banksel ram_address
     0050 04rr                      1- 2064     	SUBAR	_pwStep,W
     0051 0803                      1- 2065     	BTRSS	STATUS,0
     0052 3rrr                      1- 2066     	LGOTO	_00354_DS_
                                    1- 2067     	.line	421, "main.c"; 	LEDHON();
     0053 2rrr                      1- 2068     	LCALL	_LEDHON
     0054 3rrr                      1- 2069     	LGOTO	_00370_DS_
     0055                           1- 2070     _00354_DS_:
                                    1- 2071     	.line	425, "main.c"; 	LEDLOFF();
     0055 2rrr                      1- 2072     	LCALL	_LEDLOFF
                                    1- 2073     	.line	426, "main.c"; 	LEDHOFF();
     0056 2rrr                      1- 2074     	LCALL	_LEDHOFF
     0057                           1- 2075     _00370_DS_:
                                    1- 2076     	.line	428, "main.c"; 	}
                                    1- 2077     	RETURN	
     0057 0010                      3-   26 m1      ret
                                    1- 2078     ; exit point of _LedCtr2
                                    1- 2080     ;***
                                    1- 2081     ;  pBlock Stats: dbName = C
                                    1- 2082     ;***
                                    1- 2083     ;has an exit
                                    1- 2084     ;1 compiler assigned register :
                                    1- 2085     ;   r0x1030
                                    1- 2086     ;; Starting pCode block
                                    1- 2087     .segment "code"; module=main, function=_workCtr
                                    1- 2089     ;local variable name mapping:
     0000                           1- 2091     _workCtr:
                                    1- 2092     ; 2 exit points
                                    1- 2093     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2094     ;;unsigned compare: left >= lit (0x47=71), size=2
                                    1- 2095     	.line	351, "main.c"; 	if(fgPRD > 70)
     0000 2100                      1- 2096     	MOVIA	0x00
                                    1- 2097     	BANKSEL	_fgPRD
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 04rr                      1- 2098     	SUBAR	(_fgPRD + 1),W
     0003 0903                      1- 2099     	BTRSS	STATUS,2
     0004 3rrr                      1- 2100     	LGOTO	_00338_DS_
     0005 2147                      1- 2101     	MOVIA	0x47
     0006 04rr                      1- 2102     	SUBAR	_fgPRD,W
     0007                           1- 2103     _00338_DS_:
     0007 0803                      1- 2104     	BTRSS	STATUS,0
     0008 3rrr                      1- 2105     	LGOTO	_00319_DS_
                                    1- 2106     	.line	354, "main.c"; 	u8t minDuty = 38;
     0009 2126                      1- 2107     	MOVIA	0x26
                                    1- 2108     	BANKSEL	r0x1030
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 00rr                      1- 2109     	MOVAR	r0x1030
                                    1- 2110     	.line	355, "main.c"; 	if(workStep == 1)
                                    1- 2111     	BANKSEL	_workStep
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 01rr                      1- 2112     	MOVR	_workStep,W
     000E 2401                      1- 2113     	XORIA	0x01
     000F 0903                      1- 2114     	BTRSS	STATUS,2
     0010 3rrr                      1- 2115     	LGOTO	_00316_DS_
                                    1- 2116     	.line	356, "main.c"; 	minDuty = 38;
     0011 2126                      1- 2117     	MOVIA	0x26
                                    1- 2118     	BANKSEL	r0x1030
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 00rr                      1- 2119     	MOVAR	r0x1030
     0014 3rrr                      1- 2120     	LGOTO	_00317_DS_
     0015                           1- 2121     _00316_DS_:
                                    1- 2122     	.line	357, "main.c"; 	else if(workStep == 2)
                                    1- 2123     	BANKSEL	_workStep
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 01rr                      1- 2124     	MOVR	_workStep,W
     0017 2402                      1- 2125     	XORIA	0x02
     0018 0903                      1- 2126     	BTRSS	STATUS,2
     0019 3rrr                      1- 2127     	LGOTO	_00313_DS_
                                    1- 2128     	.line	358, "main.c"; 	minDuty = 15;
     001A 210F                      1- 2129     	MOVIA	0x0f
                                    1- 2130     	BANKSEL	r0x1030
     001B rrrr                      3-   71 m1      .banksel ram_address
     001C 00rr                      1- 2131     	MOVAR	r0x1030
     001D 3rrr                      1- 2132     	LGOTO	_00317_DS_
     001E                           1- 2133     _00313_DS_:
                                    1- 2134     	.line	359, "main.c"; 	else if(workStep == 3)
                                    1- 2135     	BANKSEL	_workStep
     001E rrrr                      3-   71 m1      .banksel ram_address
     001F 01rr                      1- 2136     	MOVR	_workStep,W
     0020 2403                      1- 2137     	XORIA	0x03
     0021 0903                      1- 2138     	BTRSS	STATUS,2
     0022 3rrr                      1- 2139     	LGOTO	_00310_DS_
                                    1- 2140     	.line	360, "main.c"; 	minDuty = 11;
     0023 210B                      1- 2141     	MOVIA	0x0b
                                    1- 2142     	BANKSEL	r0x1030
     0024 rrrr                      3-   71 m1      .banksel ram_address
     0025 00rr                      1- 2143     	MOVAR	r0x1030
     0026 3rrr                      1- 2144     	LGOTO	_00317_DS_
     0027                           1- 2145     _00310_DS_:
                                    1- 2146     	.line	361, "main.c"; 	else if(workStep == 4)
                                    1- 2147     	BANKSEL	_workStep
     0027 rrrr                      3-   71 m1      .banksel ram_address
     0028 01rr                      1- 2148     	MOVR	_workStep,W
     0029 2404                      1- 2149     	XORIA	0x04
     002A 0903                      1- 2150     	BTRSS	STATUS,2
     002B 3rrr                      1- 2151     	LGOTO	_00317_DS_
                                    1- 2152     	.line	362, "main.c"; 	minDuty = 3;
     002C 2103                      1- 2153     	MOVIA	0x03
                                    1- 2154     	BANKSEL	r0x1030
     002D rrrr                      3-   71 m1      .banksel ram_address
     002E 00rr                      1- 2155     	MOVAR	r0x1030
     002F                           1- 2156     _00317_DS_:
                                    1- 2157     	.line	363, "main.c"; 	PWM2DUTY = minDuty;
                                    1- 2158     	BANKSEL	r0x1030
     002F rrrr                      3-   71 m1      .banksel ram_address
     0030 01rr                      1- 2159     	MOVR	r0x1030,W
     0031 00rr                      1- 2160     	SFUN	_PWM2DUTY
     0032 3rrr                      1- 2161     	LGOTO	_00321_DS_
     0033                           1- 2162     _00319_DS_:
                                    1- 2163     	.line	376, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 2164     	BANKSEL	_maxDuty
     0033 rrrr                      3-   71 m1      .banksel ram_address
     0034 01rr                      1- 2165     	MOVR	_maxDuty,W
     0035 00rr                      1- 2166     	SFUN	_PWM2DUTY
     0036                           1- 2167     _00321_DS_:
                                    1- 2168     	.line	378, "main.c"; 	}
                                    1- 2169     	RETURN	
     0036 0010                      3-   26 m1      ret
                                    1- 2170     ; exit point of _workCtr
                                    1- 2172     ;***
                                    1- 2173     ;  pBlock Stats: dbName = C
                                    1- 2174     ;***
                                    1- 2175     ;has an exit
                                    1- 2176     ;; Starting pCode block
                                    1- 2177     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2179     _pwmStop:
                                    1- 2180     ; 2 exit points
                                    1- 2181     	.line	345, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2182     	CLRA	
     0001 00rr                      1- 2183     	SFUN	_T2CR1
                                    1- 2184     	.line	346, "main.c"; 	}
                                    1- 2185     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2186     ; exit point of _pwmStop
                                    1- 2188     ;***
                                    1- 2189     ;  pBlock Stats: dbName = C
                                    1- 2190     ;***
                                    1- 2191     ;has an exit
                                    1- 2192     ;1 compiler assigned register :
                                    1- 2193     ;   r0x102E
                                    1- 2194     ;; Starting pCode block
                                    1- 2195     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2197     _pwmInit:
                                    1- 2198     ; 2 exit points
                                    1- 2199     	.line	333, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2200     	SFUNR	_T2CR1
                                    1- 2201     	BANKSEL	r0x102E
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2202     	MOVAR	r0x102E
     0003 0Frr                      1- 2203     	BTRSC	r0x102E,7
                                    1- 2204     	.line	334, "main.c"; 	return;
     0004 3rrr                      1- 2205     	LGOTO	_00298_DS_
                                    1- 2206     	.line	335, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2207     	CLRR	_TMRH
                                    1- 2208     	.line	336, "main.c"; 	TMR2 = 128;							//频率为110K
     0006 2180                      1- 2209     	MOVIA	0x80
     0007 00rr                      1- 2210     	SFUN	_TMR2
                                    1- 2211     	.line	339, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2212     	CLRA	
     0009 00rr                      1- 2213     	SFUN	_T2CR2
                                    1- 2214     	.line	340, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2215     	MOVIA	0x83
     000B 00rr                      1- 2216     	SFUN	_T2CR1
     000C                           1- 2217     _00298_DS_:
                                    1- 2218     	.line	341, "main.c"; 	}
                                    1- 2219     	RETURN	
     000C 0010                      3-   26 m1      ret
                                    1- 2220     ; exit point of _pwmInit
                                    1- 2222     ;***
                                    1- 2223     ;  pBlock Stats: dbName = C
                                    1- 2224     ;***
                                    1- 2225     ;has an exit
                                    1- 2226     ;functions called:
                                    1- 2227     ;   _delay
                                    1- 2228     ;   _LedInput
                                    1- 2229     ;   _delay
                                    1- 2230     ;   _LedInput
                                    1- 2231     ;1 compiler assigned register :
                                    1- 2232     ;   r0x1031
                                    1- 2233     ;; Starting pCode block
                                    1- 2234     .segment "code"; module=main, function=_LED4ON
     0000                           1- 2236     _LED4ON:
                                    1- 2237     ; 2 exit points
                                    1- 2238     	.line	324, "main.c"; 	IOSTB &= 0xF7;
     0000 001r                      1- 2239     	IOSTR	_IOSTB
                                    1- 2240     	BANKSEL	r0x1031
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2241     	MOVAR	r0x1031
     0003 1Drr                      1- 2242     	BCR	r0x1031,3
     0004 01rr                      1- 2243     	MOVR	r0x1031,W
     0005 000r                      1- 2244     	IOST	_IOSTB
                                    1- 2245     	.line	325, "main.c"; 	PORTB |= 0x08;
     0006 19rr                      1- 2246     	BSR	_PORTB,3
                                    1- 2247     	.line	326, "main.c"; 	delay(100);
     0007 2164                      1- 2248     	MOVIA	0x64
     0008 2rrr                      1- 2249     	LCALL	_delay
                                    1- 2250     	.line	327, "main.c"; 	LedInput();
     0009 2rrr                      1- 2251     	LCALL	_LedInput
                                    1- 2252     	.line	328, "main.c"; 	}
                                    1- 2253     	RETURN	
     000A 0010                      3-   26 m1      ret
                                    1- 2254     ; exit point of _LED4ON
                                    1- 2256     ;***
                                    1- 2257     ;  pBlock Stats: dbName = C
                                    1- 2258     ;***
                                    1- 2259     ;has an exit
                                    1- 2260     ;functions called:
                                    1- 2261     ;   _delay
                                    1- 2262     ;   _LedInput
                                    1- 2263     ;   _delay
                                    1- 2264     ;   _LedInput
                                    1- 2265     ;1 compiler assigned register :
                                    1- 2266     ;   r0x1032
                                    1- 2267     ;; Starting pCode block
                                    1- 2268     .segment "code"; module=main, function=_LED3ON
     0000                           1- 2270     _LED3ON:
                                    1- 2271     ; 2 exit points
                                    1- 2272     	.line	316, "main.c"; 	IOSTA &= 0X7F;
     0000 001r                      1- 2273     	IOSTR	_IOSTA
                                    1- 2274     	BANKSEL	r0x1032
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2275     	MOVAR	r0x1032
     0003 1Frr                      1- 2276     	BCR	r0x1032,7
     0004 01rr                      1- 2277     	MOVR	r0x1032,W
     0005 000r                      1- 2278     	IOST	_IOSTA
                                    1- 2279     	.line	317, "main.c"; 	PORTA |= 0X80;
                                    1- 2280     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 1Brr                      1- 2281     	BSR	_PORTA,7
                                    1- 2282     	.line	318, "main.c"; 	delay(100);
     0008 2164                      1- 2283     	MOVIA	0x64
     0009 2rrr                      1- 2284     	LCALL	_delay
                                    1- 2285     	.line	319, "main.c"; 	LedInput();
     000A 2rrr                      1- 2286     	LCALL	_LedInput
                                    1- 2287     	.line	320, "main.c"; 	}
                                    1- 2288     	RETURN	
     000B 0010                      3-   26 m1      ret
                                    1- 2289     ; exit point of _LED3ON
                                    1- 2291     ;***
                                    1- 2292     ;  pBlock Stats: dbName = C
                                    1- 2293     ;***
                                    1- 2294     ;has an exit
                                    1- 2295     ;functions called:
                                    1- 2296     ;   _delay
                                    1- 2297     ;   _LedInput
                                    1- 2298     ;   _delay
                                    1- 2299     ;   _LedInput
                                    1- 2300     ;1 compiler assigned register :
                                    1- 2301     ;   r0x1033
                                    1- 2302     ;; Starting pCode block
                                    1- 2303     .segment "code"; module=main, function=_LED2ON
     0000                           1- 2305     _LED2ON:
                                    1- 2306     ; 2 exit points
                                    1- 2307     	.line	308, "main.c"; 	IOSTA &= 0XFD;
     0000 001r                      1- 2308     	IOSTR	_IOSTA
                                    1- 2309     	BANKSEL	r0x1033
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2310     	MOVAR	r0x1033
     0003 1Crr                      1- 2311     	BCR	r0x1033,1
     0004 01rr                      1- 2312     	MOVR	r0x1033,W
     0005 000r                      1- 2313     	IOST	_IOSTA
                                    1- 2314     	.line	309, "main.c"; 	PORTA |= 0X02;
                                    1- 2315     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 18rr                      1- 2316     	BSR	_PORTA,1
                                    1- 2317     	.line	310, "main.c"; 	delay(100);
     0008 2164                      1- 2318     	MOVIA	0x64
     0009 2rrr                      1- 2319     	LCALL	_delay
                                    1- 2320     	.line	311, "main.c"; 	LedInput();
     000A 2rrr                      1- 2321     	LCALL	_LedInput
                                    1- 2322     	.line	312, "main.c"; 	}
                                    1- 2323     	RETURN	
     000B 0010                      3-   26 m1      ret
                                    1- 2324     ; exit point of _LED2ON
                                    1- 2326     ;***
                                    1- 2327     ;  pBlock Stats: dbName = C
                                    1- 2328     ;***
                                    1- 2329     ;has an exit
                                    1- 2330     ;functions called:
                                    1- 2331     ;   _delay
                                    1- 2332     ;   _LedInput
                                    1- 2333     ;   _delay
                                    1- 2334     ;   _LedInput
                                    1- 2335     ;1 compiler assigned register :
                                    1- 2336     ;   r0x1034
                                    1- 2337     ;; Starting pCode block
                                    1- 2338     .segment "code"; module=main, function=_LED1ON
     0000                           1- 2340     _LED1ON:
                                    1- 2341     ; 2 exit points
                                    1- 2342     	.line	300, "main.c"; 	IOSTA &= 0XFE;
     0000 001r                      1- 2343     	IOSTR	_IOSTA
                                    1- 2344     	BANKSEL	r0x1034
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2345     	MOVAR	r0x1034
     0003 1Crr                      1- 2346     	BCR	r0x1034,0
     0004 01rr                      1- 2347     	MOVR	r0x1034,W
     0005 000r                      1- 2348     	IOST	_IOSTA
                                    1- 2349     	.line	301, "main.c"; 	PORTA |= 0X01;
                                    1- 2350     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 18rr                      1- 2351     	BSR	_PORTA,0
                                    1- 2352     	.line	302, "main.c"; 	delay(100);
     0008 2164                      1- 2353     	MOVIA	0x64
     0009 2rrr                      1- 2354     	LCALL	_delay
                                    1- 2355     	.line	303, "main.c"; 	LedInput();
     000A 2rrr                      1- 2356     	LCALL	_LedInput
                                    1- 2357     	.line	304, "main.c"; 	}
                                    1- 2358     	RETURN	
     000B 0010                      3-   26 m1      ret
                                    1- 2359     ; exit point of _LED1ON
                                    1- 2361     ;***
                                    1- 2362     ;  pBlock Stats: dbName = C
                                    1- 2363     ;***
                                    1- 2364     ;has an exit
                                    1- 2365     ;1 compiler assigned register :
                                    1- 2366     ;   r0x102C
                                    1- 2367     ;; Starting pCode block
                                    1- 2368     .segment "code"; module=main, function=_LedInput
     0000                           1- 2370     _LedInput:
                                    1- 2371     ; 2 exit points
                                    1- 2372     	.line	292, "main.c"; 	IOSTA |= 0x83;
     0000 001r                      1- 2373     	IOSTR	_IOSTA
                                    1- 2374     	BANKSEL	r0x102C
     0001 rrrr                      3-   71 m1      .banksel ram_address
     0002 00rr                      1- 2375     	MOVAR	r0x102C
     0003 2183                      1- 2376     	MOVIA	0x83
     0004 11rr                      1- 2377     	IORAR	r0x102C,F
     0005 01rr                      1- 2378     	MOVR	r0x102C,W
     0006 000r                      1- 2379     	IOST	_IOSTA
                                    1- 2380     	.line	293, "main.c"; 	IOSTB |= 0x08;
     0007 001r                      1- 2381     	IOSTR	_IOSTB
     0008 00rr                      1- 2382     	MOVAR	r0x102C
     0009 19rr                      1- 2383     	BSR	r0x102C,3
     000A 01rr                      1- 2384     	MOVR	r0x102C,W
     000B 000r                      1- 2385     	IOST	_IOSTB
                                    1- 2386     	.line	294, "main.c"; 	PORTA &= 0x7C;
     000C 217C                      1- 2387     	MOVIA	0x7c
                                    1- 2388     	BANKSEL	_PORTA
     000D rrrr                      3-   71 m1      .banksel ram_address
     000E 10rr                      1- 2389     	ANDAR	_PORTA,F
                                    1- 2390     	.line	295, "main.c"; 	PORTB &= 0xF7;
     000F 1Drr                      1- 2391     	BCR	_PORTB,3
                                    1- 2392     	.line	296, "main.c"; 	}
                                    1- 2393     	RETURN	
     0010 0010                      3-   26 m1      ret
                                    1- 2394     ; exit point of _LedInput
                                    1- 2396     ;***
                                    1- 2397     ;  pBlock Stats: dbName = C
                                    1- 2398     ;***
                                    1- 2399     ;has an exit
                                    1- 2400     ;functions called:
                                    1- 2401     ;   _LedInput
                                    1- 2402     ;   _LedInput
                                    1- 2403     ;   _LED4ON
                                    1- 2404     ;   _LED1ON
                                    1- 2405     ;   _LED3ON
                                    1- 2406     ;   _LED2ON
                                    1- 2407     ;   _LedInput
                                    1- 2408     ;   _LedInput
                                    1- 2409     ;   _LED4ON
                                    1- 2410     ;   _LED1ON
                                    1- 2411     ;   _LED3ON
                                    1- 2412     ;   _LED2ON
                                    1- 2413     ;; Starting pCode block
                                    1- 2414     .segment "code"; module=main, function=_ledShow
     0000                           1- 2416     _ledShow:
                                    1- 2417     ; 2 exit points
                                    1- 2418     	.line	270, "main.c"; 	LedInput();
     0000 2rrr                      1- 2419     	LCALL	_LedInput
                                    1- 2420     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2421     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 2422     	.line	271, "main.c"; 	switch(ledStep)
     0001 2105                      1- 2423     	MOVIA	0x05
                                    1- 2424     	BANKSEL	_ledStep
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 04rr                      1- 2425     	SUBAR	_ledStep,W
     0004 0C03                      1- 2426     	BTRSC	STATUS,0
     0005 3rrr                      1- 2427     	LGOTO	_00265_DS_
     0006 21rr                      1- 2428     	MOVIA	((_00271_DS_ >> 8) & 0xff)
     0007 008A                      1- 2429     	MOVAR	PCHBUF
     0008 01rr                      1- 2430     	MOVR	_ledStep,W
     0009 25rr                      1- 2431     	ADDIA	_00271_DS_
     000A 0C03                      1- 2432     	BTRSC	STATUS,0
     000B 058A                      1- 2433     	INCR	PCHBUF,F
     000C 0082                      1- 2434     	MOVAR	PCL
     000D                           1- 2435     _00271_DS_:
     000D 3rrr                      1- 2436     	LGOTO	_00259_DS_
     000E 3rrr                      1- 2437     	LGOTO	_00263_DS_
     000F 3rrr                      1- 2438     	LGOTO	_00262_DS_
     0010 3rrr                      1- 2439     	LGOTO	_00261_DS_
     0011 3rrr                      1- 2440     	LGOTO	_00260_DS_
     0012                           1- 2441     _00259_DS_:
                                    1- 2442     	.line	274, "main.c"; 	LedInput();
     0012 2rrr                      1- 2443     	LCALL	_LedInput
                                    1- 2444     	.line	275, "main.c"; 	break;
     0013 3rrr                      1- 2445     	LGOTO	_00265_DS_
     0014                           1- 2446     _00260_DS_:
                                    1- 2447     	.line	277, "main.c"; 	LED4ON();
     0014 2rrr                      1- 2448     	LCALL	_LED4ON
     0015                           1- 2449     _00261_DS_:
                                    1- 2450     	.line	279, "main.c"; 	LED1ON();
     0015 2rrr                      1- 2451     	LCALL	_LED1ON
     0016                           1- 2452     _00262_DS_:
                                    1- 2453     	.line	281, "main.c"; 	LED3ON();
     0016 2rrr                      1- 2454     	LCALL	_LED3ON
     0017                           1- 2455     _00263_DS_:
                                    1- 2456     	.line	283, "main.c"; 	LED2ON();
     0017 2rrr                      1- 2457     	LCALL	_LED2ON
     0018                           1- 2458     _00265_DS_:
                                    1- 2459     	.line	286, "main.c"; 	}
                                    1- 2460     	RETURN	
     0018 0010                      3-   26 m1      ret
                                    1- 2461     ; exit point of _ledShow
                                    1- 2463     ;***
                                    1- 2464     ;  pBlock Stats: dbName = C
                                    1- 2465     ;***
                                    1- 2466     ;has an exit
                                    1- 2467     ;; Starting pCode block
                                    1- 2468     .segment "code"; module=main, function=_initSys
     0000                           1- 2470     _initSys:
                                    1- 2471     ; 2 exit points
                                    1- 2472     	.line	243, "main.c"; 	DISI();
     0000 0013                      1- 2473     	DISI
                                    1- 2474     	.line	244, "main.c"; 	IOSTA = C_PA6_Input | C_PA5_Input | C_PA4_Input;
     0001 2170                      1- 2475     	MOVIA	0x70
     0002 000r                      1- 2476     	IOST	_IOSTA
                                    1- 2477     	.line	245, "main.c"; 	IOSTB = C_PB0_Input;
     0003 2101                      1- 2478     	MOVIA	0x01
     0004 000r                      1- 2479     	IOST	_IOSTB
                                    1- 2480     	.line	246, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 2481     	CLRR	_PORTB
                                    1- 2482     	.line	247, "main.c"; 	PORTA = 0x00;
                                    1- 2483     	BANKSEL	_PORTA
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 02rr                      1- 2484     	CLRR	_PORTA
                                    1- 2485     	.line	248, "main.c"; 	APHCON = 0x9F;
     0008 219F                      1- 2486     	MOVIA	0x9f
     0009 000r                      1- 2487     	IOST	_APHCON
                                    1- 2488     	.line	249, "main.c"; 	BPHCON = 0xFF;
     000A 21FF                      1- 2489     	MOVIA	0xff
     000B 00rr                      1- 2490     	MOVAR	_BPHCON
                                    1- 2491     	.line	251, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000C 2101                      1- 2492     	MOVIA	0x01
     000D 00rr                      1- 2493     	MOVAR	_INTE
                                    1- 2494     	.line	253, "main.c"; 	PCON1 = C_TMR0_Dis;
     000E 0200                      1- 2495     	CLRA	
     000F 000r                      1- 2496     	IOST	_PCON1
                                    1- 2497     	.line	255, "main.c"; 	TMR0 = 55;
     0010 2137                      1- 2498     	MOVIA	0x37
     0011 00rr                      1- 2499     	MOVAR	_TMR0
                                    1- 2500     	.line	256, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div2;
     0012 0200                      1- 2501     	CLRA	
     0013 0003                      1- 2502     	T0MD	
                                    1- 2503     	.line	258, "main.c"; 	PCON1 = C_TMR0_En;
     0014 2101                      1- 2504     	MOVIA	0x01
     0015 000r                      1- 2505     	IOST	_PCON1
                                    1- 2506     	.line	261, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0016 2198                      1- 2507     	MOVIA	0x98
     0017 00rr                      1- 2508     	MOVAR	_PCON
                                    1- 2509     	.line	264, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0018 2101                      1- 2510     	MOVIA	0x01
     0019 000r                      1- 2511     	IOST	_PCON1
                                    1- 2512     	.line	265, "main.c"; 	ENI();
     001A 0004                      1- 2513     	ENI
                                    1- 2514     	.line	266, "main.c"; 	}
                                    1- 2515     	RETURN	
     001B 0010                      3-   26 m1      ret
                                    1- 2516     ; exit point of _initSys
                                    1- 2518     ;***
                                    1- 2519     ;  pBlock Stats: dbName = C
                                    1- 2520     ;***
                                    1- 2521     ;has an exit
                                    1- 2522     ;; Starting pCode block
                                    1- 2523     .segment "code"; module=main, function=_fgCtr
     0000                           1- 2525     _fgCtr:
                                    1- 2526     ; 2 exit points
                                    1- 2527     	.line	226, "main.c"; 	if(PORTB & 0x01)
     0000 08rr                      1- 2528     	BTRSS	_PORTB,0
     0001 3rrr                      1- 2529     	LGOTO	_00248_DS_
                                    1- 2530     	.line	228, "main.c"; 	if(preFG == 0)
                                    1- 2531     	BANKSEL	_preFG
     0002 rrrr                      3-   71 m1      .banksel ram_address
     0003 01rr                      1- 2532     	MOVR	_preFG,W
     0004 0903                      1- 2533     	BTRSS	STATUS,2
     0005 3rrr                      1- 2534     	LGOTO	_00246_DS_
                                    1- 2535     	.line	230, "main.c"; 	fgPRD = fgCount;
                                    1- 2536     	BANKSEL	_fgCount
     0006 rrrr                      3-   71 m1      .banksel ram_address
     0007 01rr                      1- 2537     	MOVR	_fgCount,W
                                    1- 2538     	BANKSEL	_fgPRD
     0008 rrrr                      3-   71 m1      .banksel ram_address
     0009 00rr                      1- 2539     	MOVAR	_fgPRD
                                    1- 2540     	BANKSEL	_fgCount
     000A rrrr                      3-   71 m1      .banksel ram_address
     000B 01rr                      1- 2541     	MOVR	(_fgCount + 1),W
                                    1- 2542     	BANKSEL	_fgPRD
     000C rrrr                      3-   71 m1      .banksel ram_address
     000D 00rr                      1- 2543     	MOVAR	(_fgPRD + 1)
                                    1- 2544     	.line	231, "main.c"; 	fgCount = 0;
                                    1- 2545     	BANKSEL	_fgCount
     000E rrrr                      3-   71 m1      .banksel ram_address
     000F 02rr                      1- 2546     	CLRR	_fgCount
     0010 02rr                      1- 2547     	CLRR	(_fgCount + 1)
     0011                           1- 2548     _00246_DS_:
                                    1- 2549     	.line	233, "main.c"; 	preFG = 1;
     0011 2101                      1- 2550     	MOVIA	0x01
                                    1- 2551     	BANKSEL	_preFG
     0012 rrrr                      3-   71 m1      .banksel ram_address
     0013 00rr                      1- 2552     	MOVAR	_preFG
     0014 3rrr                      1- 2553     	LGOTO	_00250_DS_
     0015                           1- 2554     _00248_DS_:
                                    1- 2555     	.line	237, "main.c"; 	preFG = 0;
                                    1- 2556     	BANKSEL	_preFG
     0015 rrrr                      3-   71 m1      .banksel ram_address
     0016 02rr                      1- 2557     	CLRR	_preFG
     0017                           1- 2558     _00250_DS_:
                                    1- 2559     	.line	239, "main.c"; 	}
                                    1- 2560     	RETURN	
     0017 0010                      3-   26 m1      ret
                                    1- 2561     ; exit point of _fgCtr
                                    1- 2563     ;***
                                    1- 2564     ;  pBlock Stats: dbName = C
                                    1- 2565     ;***
                                    1- 2566     ;has an exit
                                    1- 2567     ;; Starting pCode block
                                    1- 2568     .segment "code"; module=main, function=_LEDLOFF
     0000                           1- 2570     _LEDLOFF:
                                    1- 2571     ; 2 exit points
                                    1- 2572     	.line	220, "main.c"; 	PORTA &= 0xF7;
                                    1- 2573     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Drr                      1- 2574     	BCR	_PORTA,3
                                    1- 2575     	.line	222, "main.c"; 	}
                                    1- 2576     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2577     ; exit point of _LEDLOFF
                                    1- 2579     ;***
                                    1- 2580     ;  pBlock Stats: dbName = C
                                    1- 2581     ;***
                                    1- 2582     ;has an exit
                                    1- 2583     ;; Starting pCode block
                                    1- 2584     .segment "code"; module=main, function=_LEDHOFF
     0000                           1- 2586     _LEDHOFF:
                                    1- 2587     ; 2 exit points
                                    1- 2588     	.line	215, "main.c"; 	PORTA &= 0xFB;
                                    1- 2589     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 1Drr                      1- 2590     	BCR	_PORTA,2
                                    1- 2591     	.line	217, "main.c"; 	}
                                    1- 2592     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2593     ; exit point of _LEDHOFF
                                    1- 2595     ;***
                                    1- 2596     ;  pBlock Stats: dbName = C
                                    1- 2597     ;***
                                    1- 2598     ;has an exit
                                    1- 2599     ;; Starting pCode block
                                    1- 2600     .segment "code"; module=main, function=_LEDLON
     0000                           1- 2602     _LEDLON:
                                    1- 2603     ; 2 exit points
                                    1- 2604     	.line	210, "main.c"; 	PORTA |= 0x08;
                                    1- 2605     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 19rr                      1- 2606     	BSR	_PORTA,3
                                    1- 2607     	.line	212, "main.c"; 	}
                                    1- 2608     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2609     ; exit point of _LEDLON
                                    1- 2611     ;***
                                    1- 2612     ;  pBlock Stats: dbName = C
                                    1- 2613     ;***
                                    1- 2614     ;has an exit
                                    1- 2615     ;; Starting pCode block
                                    1- 2616     .segment "code"; module=main, function=_LEDHON
     0000                           1- 2618     _LEDHON:
                                    1- 2619     ; 2 exit points
                                    1- 2620     	.line	205, "main.c"; 	PORTA |= 0x04;
                                    1- 2621     	BANKSEL	_PORTA
     0000 rrrr                      3-   71 m1      .banksel ram_address
     0001 19rr                      1- 2622     	BSR	_PORTA,2
                                    1- 2623     	.line	207, "main.c"; 	}
                                    1- 2624     	RETURN	
     0002 0010                      3-   26 m1      ret
                                    1- 2625     ; exit point of _LEDHON
                                    1- 2628     ;	code size estimation:
                                    1- 2629     ;	  970+  230 =  1200 instructions ( 2860 byte)
                                    1- 2631     	end
                                    1- 2631     	end

SYMBOL TABLE            TYPE     VALUE
___sdcc_saved_fsr       Label    00000000
___sdcc_saved_stk00     Label    00000000
___sdcc_saved_stk01     Label    00000000
__CHECKSUM_ADDR__       Label    00000000
__nyc_ny8_startup       Label    00000000
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
__sdcc_interrupt        Label    00000000
_00001_DS_              Label    0000002C
_00002_DS_              Label    00000025
_00003_DS_              Label    00000100
_00106_DS_              Label    00000026
_00112_DS_              Label    00000042
_00119_DS_              Label    00000045
_00121_DS_              Label    00000049
_00131_DS_              Label    00000012
_00134_DS_              Label    00000024
_00139_DS_              Label    00000027
_00145_DS_              Label    00000047
_00150_DS_              Label    00000051
_00152_DS_              Label    00000076
_00155_DS_              Label    00000063
_00159_DS_              Label    00000002
_00219_DS_              Label    00000044
_00220_DS_              Label    0000004E
_00221_DS_              Label    00000058
_00222_DS_              Label    00000061
_00223_DS_              Label    0000006A
_00224_DS_              Label    00000080
_00246_DS_              Label    00000011
_00248_DS_              Label    00000015
_00250_DS_              Label    00000017
_00259_DS_              Label    00000012
_00260_DS_              Label    00000014
_00261_DS_              Label    00000015
_00262_DS_              Label    00000016
_00263_DS_              Label    00000017
_00265_DS_              Label    00000018
_00271_DS_              Label    0000000D
_00298_DS_              Label    0000000C
_00310_DS_              Label    00000027
_00313_DS_              Label    0000001E
_00316_DS_              Label    00000015
_00317_DS_              Label    0000002F
_00319_DS_              Label    00000033
_00321_DS_              Label    00000036
_00338_DS_              Label    00000007
_00344_DS_              Label    00000010
_00346_DS_              Label    00000018
_00351_DS_              Label    00000026
_00354_DS_              Label    00000055
_00358_DS_              Label    00000049
_00361_DS_              Label    00000041
_00365_DS_              Label    00000035
_00368_DS_              Label    0000002D
_00370_DS_              Label    00000057
_00387_DS_              Label    00000026
_00390_DS_              Label    00000018
_00392_DS_              Label    00000032
_00398_DS_              Label    0000000A
_00399_DS_              Label    0000000B
_00404_DS_              Label    0000002C
_00408_DS_              Label    00000050
_00411_DS_              Label    00000047
_00414_DS_              Label    0000003E
_00415_DS_              Label    00000058
_00417_DS_              Label    00000068
_00422_DS_              Label    0000005D
_00425_DS_              Label    00000086
_00445_DS_              Label    0000001D
_00446_DS_              Label    00000025
_00448_DS_              Label    00000013
_00449_DS_              Label    00000027
_00450_DS_              Label    00000028
_00456_DS_              Label    0000001D
_00458_DS_              Label    00000016
_00463_DS_              Label    00000022
_00465_DS_              Label    0000002D
_00472_DS_              Label    00000004
_00474_DS_              Label    0000000E
_00486_DS_              Label    0000003D
_00487_DS_              Label    0000004B
_00491_DS_              Label    00000079
_00492_DS_              Label    0000007C
_00505_DS_              Label    000000E0
_00510_DS_              Label    000000D2
_00513_DS_              Label    000000BA
_00516_DS_              Label    000000AA
_00519_DS_              Label    0000009A
_00522_DS_              Label    0000005E
_00580_DS_              Label    00000035
_00581_DS_              Label    00000044
_00582_DS_              Label    00000058
_00583_DS_              Label    00000065
_00584_DS_              Label    00000073
_00585_DS_              Label    00000083
_00586_DS_              Label    0000008F
_00587_DS_              Label    000000A1
_00588_DS_              Label    000000B1
_00589_DS_              Label    000000C1
_00592_DS_              Label    000000F3
_00599_DS_              Label    0000000E
_00601_DS_              Label    0000002F
_00606_DS_              Label    00000000
_ABPLCON                Label    00000000
_ABPLCONbits            Label    00000000
_ADCR                   Label    00000000
_ADCRbits               Label    00000000
_ADD                    Label    00000000
_ADMD                   Label    00000000
_ADMDbits               Label    00000000
_ADR                    Label    00000000
_ADRbits                Label    00000000
_ADVREFH                Label    00000000
_ADVREFHbits            Label    00000000
_ANAEN                  Label    00000000
_ANAENbits              Label    00000000
_APHCON                 Label    00000000
_AWUCON                 Label    00000000
_AWUCONbits             Label    00000000
_BODCON                 Label    00000000
_BPHCON                 Label    00000000
_BPHCONbits             Label    00000000
_BWUCON                 Label    00000000
_BWUCONbits             Label    00000000
_BZ1CR                  Label    00000000
_BZ2CR                  Label    00000000
_BZ3CR                  Label    00000000
_checkBatAD             Label    00000000
_chrgCtr                Label    00000000
_chrgTime               Label    00000000
_CMPCR                  Label    00000000
_count1s                Label    00000000
_count200ms             Label    00000000
_count500ms             Label    00000000
_count900s              Label    00000000
_delay                  Label    00000000
_duty                   Label    00000000
_F_AIN5_Convert         Label    00000000
_F_wait_eoc             Label    00000000
_fgCount                Label    00000000
_fgCtr                  Label    00000000
_fgPRD                  Label    00000000
_FSR                    Label    00000000
_gotoSleep              Label    00000000
_INDF                   Label    00000000
_initAD                 Label    00000000
_initSys                Label    00000000
_intCount               Label    00000000
_INTE                   Label    00000000
_INTE2                  Label    00000000
_INTE2bits              Label    00000000
_INTEbits               Label    00000000
_INTEDG                 Label    00000000
_INTEDGbits             Label    00000000
_INTF                   Label    00000000
_INTFbits               Label    00000000
_IO_Init                Label    00000000
_IOSTA                  Label    00000000
_IOSTB                  Label    00000000
_IRCR                   Label    00000000
_isr                    Label    00000000
_keyCount               Label    00000000
_keyCtr                 Label    00000000
_keyRead                Label    00000000
_LED1ON                 Label    00000000
_LED2ON                 Label    00000000
_LED3ON                 Label    00000000
_LED4ON                 Label    00000000
_ledCtr                 Label    00000000
_LedCtr2                Label    00000000
_LEDHOFF                Label    00000000
_LEDHON                 Label    00000000
_LedInput               Label    00000000
_LEDLOFF                Label    00000000
_LEDLON                 Label    00000000
_ledShow                Label    00000000
_ledStep                Label    00000000
_ledTime                Label    00000000
_lowBatTime             Label    00000000
_main                   Label    00000000
_maxDuty                Label    00000000
_OSCCR                  Label    00000000
_PACON                  Label    00000000
_PACONbits              Label    00000000
_PCHBUF                 Label    00000000
_PCL                    Label    00000000
_PCON                   Label    00000000
_PCON1                  Label    00000000
_PCONbits               Label    00000000
_PORTA                  Label    00000000
_PORTAbits              Label    00000000
_PORTB                  Label    00000000
_PORTBbits              Label    00000000
_powerOff               Label    00000000
_preFG                  Label    00000000
_PS0CV                  Label    00000000
_PS1CV                  Label    00000000
_PS2CV                  Label    00000000
_PS3CV                  Label    00000000
_PWM1DUTY               Label    00000000
_PWM2DUTY               Label    00000000
_PWM3DUTY               Label    00000000
_pwmInit                Label    00000000
_pwmStop                Label    00000000
_pwStep                 Label    00000000
_R_AIN5_DATA            Label    00000000
_R_AIN5_DATA_LB         Label    00000000
_RFC                    Label    00000000
_RFCbits                Label    00000000
_sleepTime              Label    00000000
_startStep              Label    00000000
_Status                 Label    00000000
_STATUS                 Label    00000000
_T0MD                   Label    00000000
_T1CR1                  Label    00000000
_T1CR2                  Label    00000000
_T2CR1                  Label    00000000
_T2CR2                  Label    00000000
_T3CR1                  Label    00000000
_T3CR2                  Label    00000000
_TBHD                   Label    00000000
_TBHP                   Label    00000000
_TM3RH                  Label    00000000
_TMR0                   Label    00000000
_TMR1                   Label    00000000
_TMR2                   Label    00000000
_TMR3                   Label    00000000
_TMRH                   Label    00000000
_workCtr                Label    00000000
_workStartFlag          Label    00000000
_workStep               Label    00000000
ENABLE_RAM_BANK         Constant 00000001
END_OF_INTERRUPT        Label    0000005A
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
PSAVE                   Label    00000000
r0x1020                 Label    00000000
r0x1021                 Label    00000000
r0x1022                 Label    00000000
r0x1023                 Label    00000000
r0x1024                 Label    00000000
r0x1027                 Label    00000000
r0x102A                 Label    00000000
r0x102B                 Label    00000000
r0x102C                 Label    00000000
r0x102D                 Label    00000000
r0x102E                 Label    00000000
r0x102F                 Label    00000000
r0x1030                 Label    00000000
r0x1031                 Label    00000000
r0x1032                 Label    00000000
r0x1033                 Label    00000000
r0x1034                 Label    00000000
SSAVE                   Label    00000001
STATUS                  Constant 00000003
STK00                   Label    00000005
STK01                   Label    00000004
STK02                   Label    00000003
W                       Constant 00000000
WSAVE                   Label    00000002


SOURCE FILE TABLE
001 main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
