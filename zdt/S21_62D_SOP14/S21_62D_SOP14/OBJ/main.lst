
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B061D,c=on
                                    1-    9     	#include "ny8b061d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_fgCtr
                                    1-   18     	extern	_LedCtr2
                                    1-   19     	extern	_checkInAD
                                    1-   20     	extern	_PORTAbits
                                    1-   21     	extern	_PORTBbits
                                    1-   22     	extern	_PCONbits
                                    1-   23     	extern	_BWUCONbits
                                    1-   24     	extern	_ABPLCONbits
                                    1-   25     	extern	_BPHCONbits
                                    1-   26     	extern	_INTEbits
                                    1-   27     	extern	_INTFbits
                                    1-   28     	extern	_ADMDbits
                                    1-   29     	extern	_ADRbits
                                    1-   30     	extern	_ADVREFHbits
                                    1-   31     	extern	_ADCRbits
                                    1-   32     	extern	_AWUCONbits
                                    1-   33     	extern	_PACONbits
                                    1-   34     	extern	_INTEDGbits
                                    1-   35     	extern	_RFCbits
                                    1-   36     	extern	_INTE2bits
                                    1-   37     	extern	_INDF
                                    1-   38     	extern	_TMR0
                                    1-   39     	extern	_PCL
                                    1-   40     	extern	_STATUS
                                    1-   41     	extern	_FSR
                                    1-   42     	extern	_PORTA
                                    1-   43     	extern	_PORTB
                                    1-   44     	extern	_PCON
                                    1-   45     	extern	_BWUCON
                                    1-   46     	extern	_PCHBUF
                                    1-   47     	extern	_ABPLCON
                                    1-   48     	extern	_BPHCON
                                    1-   49     	extern	_INTE
                                    1-   50     	extern	_INTF
                                    1-   51     	extern	_ADMD
                                    1-   52     	extern	_ADR
                                    1-   53     	extern	_ADD
                                    1-   54     	extern	_ADVREFH
                                    1-   55     	extern	_ADCR
                                    1-   56     	extern	_AWUCON
                                    1-   57     	extern	_PACON
                                    1-   58     	extern	_INTEDG
                                    1-   59     	extern	_TMRH
                                    1-   60     	extern	_RFC
                                    1-   61     	extern	_TM3RH
                                    1-   62     	extern	_INTE2
                                    1-   63     	extern	_TMR1
                                    1-   64     	extern	_T1CR1
                                    1-   65     	extern	_T1CR2
                                    1-   66     	extern	_PWM1DUTY
                                    1-   67     	extern	_PS1CV
                                    1-   68     	extern	_BZ1CR
                                    1-   69     	extern	_IRCR
                                    1-   70     	extern	_TBHP
                                    1-   71     	extern	_TBHD
                                    1-   72     	extern	_TMR2
                                    1-   73     	extern	_T2CR1
                                    1-   74     	extern	_T2CR2
                                    1-   75     	extern	_PWM2DUTY
                                    1-   76     	extern	_PS2CV
                                    1-   77     	extern	_BZ2CR
                                    1-   78     	extern	_OSCCR
                                    1-   79     	extern	_TMR3
                                    1-   80     	extern	_T3CR1
                                    1-   81     	extern	_T3CR2
                                    1-   82     	extern	_PWM3DUTY
                                    1-   83     	extern	_PS3CV
                                    1-   84     	extern	_BZ3CR
                                    1-   85     	extern	_IOSTA
                                    1-   86     	extern	_IOSTB
                                    1-   87     	extern	_APHCON
                                    1-   88     	extern	_PS0CV
                                    1-   89     	extern	_BODCON
                                    1-   90     	extern	_PCON1
                                    1-   91     	extern	_T0MD
                                    1-   92     	extern	___sdcc_saved_fsr
                                    1-   93     	extern	___sdcc_saved_stk00
                                    1-   94     	extern	___sdcc_saved_stk01
                                    1-   95     	extern	__nyc_ny8_startup
                                    1-   96     ;--------------------------------------------------------
                                    1-   97     ; global declarations
                                    1-   98     ;--------------------------------------------------------
                                    1-   99     	extern	_F_wait_eoc
                                    1-  100     	extern	_F_AIN2_Convert
                                    1-  101     	extern	_F_AIN3_Convert
                                    1-  102     	extern	_F_AIN4_Convert
                                    1-  103     	extern	_checkChrgV
                                    1-  104     	extern	_checkBatAD
                                    1-  105     	extern	_initAD
                                    1-  106     	extern	_delay
                                    1-  107     	extern	_chrgCtr
                                    1-  108     	extern	_keyRead
                                    1-  109     	extern	_gotoSleep
                                    1-  110     	extern	_pwmStop
                                    1-  111     	extern	_pwmInit
                                    1-  112     	extern	_pwm1Stop
                                    1-  113     	extern	_pwm1Init
                                    1-  114     	extern	_LED6ON
                                    1-  115     	extern	_LED5ON
                                    1-  116     	extern	_LED4ON
                                    1-  117     	extern	_LED3ON
                                    1-  118     	extern	_LED2ON
                                    1-  119     	extern	_LED1ON
                                    1-  120     	extern	_LedInput
                                    1-  121     	extern	_ledShow
                                    1-  122     	extern	_initSys
                                    1-  123     	extern	_powerOff
                                    1-  124     	extern	_keyCtr
                                    1-  125     	extern	_isr
                                    1-  126     	extern	_main
                                    1-  127     	extern	_Status
                                    1-  128     	extern	_duty
                                    1-  129     	extern	_intCount
                                    1-  130     	extern	_count500ms
                                    1-  131     	extern	_keyCount
                                    1-  132     	extern	_workStep
                                    1-  133     	extern	_ledStep
                                    1-  134     	extern	_maxDuty
                                    1-  135     	extern	_pwStep
                                    1-  136     	extern	_R_AIN4_DATA
                                    1-  137     	extern	_R_AIN4_DATA_LB
                                    1-  138     	extern	_R_AIN3_DATA
                                    1-  139     	extern	_R_AIN3_DATA_LB
                                    1-  140     	extern	_R_AIN2_DATA
                                    1-  141     	extern	_R_AIN2_DATA_LB
                                    1-  142     	extern	_chrgTime
                                    1-  143     	extern	_startStep
                                    1-  144     	extern	_sleepTime
                                    1-  145     	extern	_count200ms
                                    1-  146     	extern	_count1s
                                    1-  147     	extern	_count900s
                                    1-  148     	extern	_lowBatTime
                                    1-  149     	extern	_ledTime
                                    1-  150     	extern	_overCount
                                    1-  151     	extern	_chrgCount
                                    1-  152     	extern	_ledLightTime
                                    1-  153     	extern	_currentDuty
                                    1-  154     	extern	_fullCount
                                    1-  155     	extern	_shanshuoTime
                                    1-  156     	extern	_firstTime
                                    1-  157     	extern	_tempDuty
                                    1-  158     	extern	_lowCount
                                    1-  159     	extern	_cDuty
                                    1-  160     	extern	_tempLedStep
                                    1-  161     	extern	_count5S
                                    1-  162     	extern	_ledDeadTime
                                    1-  163     	extern	_lockLedStep
                                    1-  164     	extern	_closeCount
                                    1-  165     	extern	_chrgStep
                                    1-  166     	extern	_prePwStep
                                    1-  167     	extern	_currentChrgPWMDuty
                                    1-  168     	extern	_chrgDutyTime
                                    1-  169     	extern	_lockLedTime
                                    1-  170     	extern	_debug
                                    1-  172     	extern PSAVE
                                    1-  173     	extern SSAVE
                                    1-  174     	extern WSAVE
                                    1-  175     	extern STK04
                                    1-  176     	extern STK03
                                    1-  177     	extern STK02
                                    1-  178     	extern STK01
                                    1-  179     	extern STK00
                                    1-  181     .segment "uninit", 0x20000020
 20000020                           1-  182     PSAVE:
                                    1-  183     	.res 1
 20000021                           1-  184     SSAVE:
                                    1-  185     	.res 1
 20000022                           1-  186     WSAVE:
                                    1-  187     	.res 1
 20000023                           1-  188     STK04:
                                    1-  189     	.res 1
 20000024                           1-  190     STK03:
                                    1-  191     	.res 1
 20000025                           1-  192     STK02:
                                    1-  193     	.res 1
 20000026                           1-  194     STK01:
                                    1-  195     	.res 1
 20000027                           1-  196     STK00:
                                    1-  197     	.res 1
                                    1-  199     ;--------------------------------------------------------
                                    1-  200     ; global definitions
                                    1-  201     ;--------------------------------------------------------
                                    1-  202     .segment "uninit"
     0000                           1-  203     _R_AIN4_DATA:
                                    1-  204     	.res	2
                                    1-  207     .segment "uninit"
     0000                           1-  208     _R_AIN4_DATA_LB:
                                    1-  209     	.res	1
                                    1-  212     .segment "uninit"
     0000                           1-  213     _R_AIN3_DATA:
                                    1-  214     	.res	2
                                    1-  217     .segment "uninit"
     0000                           1-  218     _R_AIN3_DATA_LB:
                                    1-  219     	.res	1
                                    1-  222     .segment "uninit"
     0000                           1-  223     _R_AIN2_DATA:
                                    1-  224     	.res	2
                                    1-  227     .segment "uninit"
     0000                           1-  228     _R_AIN2_DATA_LB:
                                    1-  229     	.res	1
                                    1-  232     ;--------------------------------------------------------
                                    1-  233     ; absolute symbol definitions
                                    1-  234     ;--------------------------------------------------------
                                    1-  235     ;--------------------------------------------------------
                                    1-  236     ; compiler-defined variables
                                    1-  237     ;--------------------------------------------------------
                                    1-  238     .segment "uninit"
     0000                           1-  239     r0x105E:
                                    1-  240     	.res	1
                                    1-  241     .segment "uninit"
     0000                           1-  242     r0x1056:
                                    1-  243     	.res	1
                                    1-  244     .segment "uninit"
     0000                           1-  245     r0x105D:
                                    1-  246     	.res	1
                                    1-  247     .segment "uninit"
     0000                           1-  248     r0x105C:
                                    1-  249     	.res	1
                                    1-  250     .segment "uninit"
     0000                           1-  251     r0x105B:
                                    1-  252     	.res	1
                                    1-  253     .segment "uninit"
     0000                           1-  254     r0x105A:
                                    1-  255     	.res	1
                                    1-  256     .segment "uninit"
     0000                           1-  257     r0x1059:
                                    1-  258     	.res	1
                                    1-  259     .segment "uninit"
     0000                           1-  260     r0x1058:
                                    1-  261     	.res	1
                                    1-  262     .segment "uninit"
     0000                           1-  263     r0x104F:
                                    1-  264     	.res	1
                                    1-  265     .segment "uninit"
     0000                           1-  266     r0x1057:
                                    1-  267     	.res	1
                                    1-  268     .segment "uninit"
     0000                           1-  269     r0x1055:
                                    1-  270     	.res	1
                                    1-  271     .segment "uninit"
     0000                           1-  272     r0x1050:
                                    1-  273     	.res	1
                                    1-  274     .segment "uninit"
     0000                           1-  275     r0x1051:
                                    1-  276     	.res	1
                                    1-  277     .segment "uninit"
     0000                           1-  278     r0x1052:
                                    1-  279     	.res	1
                                    1-  280     .segment "uninit"
     0000                           1-  281     r0x1054:
                                    1-  282     	.res	1
                                    1-  283     .segment "uninit"
     0000                           1-  284     r0x1033:
                                    1-  285     	.res	1
                                    1-  286     .segment "uninit"
     0000                           1-  287     r0x1034:
                                    1-  288     	.res	1
                                    1-  289     .segment "uninit"
     0000                           1-  290     r0x104B:
                                    1-  291     	.res	1
                                    1-  292     .segment "uninit"
     0000                           1-  293     r0x104E:
                                    1-  294     	.res	1
                                    1-  295     .segment "uninit"
     0000                           1-  296     r0x1049:
                                    1-  297     	.res	1
                                    1-  298     .segment "uninit"
     0000                           1-  299     r0x104A:
                                    1-  300     	.res	1
                                    1-  301     .segment "uninit"
     0000                           1-  302     r0x1041:
                                    1-  303     	.res	1
                                    1-  304     .segment "uninit"
     0000                           1-  305     r0x1042:
                                    1-  306     	.res	1
                                    1-  307     .segment "uninit"
     0000                           1-  308     r0x1043:
                                    1-  309     	.res	1
                                    1-  310     .segment "uninit"
     0000                           1-  311     r0x1046:
                                    1-  312     	.res	1
                                    1-  313     .segment "uninit"
     0000                           1-  314     r0x103B:
                                    1-  315     	.res	1
                                    1-  316     .segment "uninit"
     0000                           1-  317     r0x103C:
                                    1-  318     	.res	1
                                    1-  319     .segment "uninit"
     0000                           1-  320     r0x103D:
                                    1-  321     	.res	1
                                    1-  322     .segment "uninit"
     0000                           1-  323     r0x1040:
                                    1-  324     	.res	1
                                    1-  325     .segment "uninit"
     0000                           1-  326     r0x1035:
                                    1-  327     	.res	1
                                    1-  328     .segment "uninit"
     0000                           1-  329     r0x1036:
                                    1-  330     	.res	1
                                    1-  331     .segment "uninit"
     0000                           1-  332     r0x1037:
                                    1-  333     	.res	1
                                    1-  334     .segment "uninit"
     0000                           1-  335     r0x103A:
                                    1-  336     	.res	1
                                    1-  337     ;--------------------------------------------------------
                                    1-  338     ; initialized data
                                    1-  339     ;--------------------------------------------------------
                                    1-  341     .segment "idata"
     0000                           1-  342     _Status:
     0000 0000                      1-  343     	dw	0x00
                                    1-  347     .segment "idata"
     0000                           1-  348     _duty:
     0000 0000 0000                 1-  349     	dw	0x00, 0x00
                                    1-  353     .segment "idata"
     0000                           1-  354     _intCount:
     0000 0000                      1-  355     	dw	0x00
                                    1-  359     .segment "idata"
     0000                           1-  360     _count500ms:
     0000 0000                      1-  361     	dw	0x00
                                    1-  365     .segment "idata"
     0000                           1-  366     _keyCount:
     0000 0000                      1-  367     	dw	0x00
                                    1-  371     .segment "idata"
     0000                           1-  372     _workStep:
     0000 0000                      1-  373     	dw	0x00
                                    1-  377     .segment "idata"
     0000                           1-  378     _ledStep:
     0000 0000                      1-  379     	dw	0x00
                                    1-  383     .segment "idata"
     0000                           1-  384     _maxDuty:
     0000 0000                      1-  385     	dw	0x00
                                    1-  389     .segment "idata"
     0000                           1-  390     _pwStep:
     0000 0000                      1-  391     	dw	0x00
                                    1-  395     .segment "idata"
     0000                           1-  396     _chrgTime:
     0000 0000 0000                 1-  397     	dw	0x00, 0x00
                                    1-  401     .segment "idata"
     0000                           1-  402     _startStep:
     0000 0000                      1-  403     	dw	0x00
                                    1-  407     .segment "idata"
     0000                           1-  408     _sleepTime:
     0000 0000 0000                 1-  409     	dw	0x00, 0x00
                                    1-  413     .segment "idata"
     0000                           1-  414     _count200ms:
     0000 0000                      1-  415     	dw	0x00
                                    1-  419     .segment "idata"
     0000                           1-  420     _count1s:
     0000 0000                      1-  421     	dw	0x00
                                    1-  425     .segment "idata"
     0000                           1-  426     _count900s:
     0000 0000 0000                 1-  427     	dw	0x00, 0x00
                                    1-  431     .segment "idata"
     0000                           1-  432     _lowBatTime:
     0000 0000                      1-  433     	dw	0x00
                                    1-  437     .segment "idata"
     0000                           1-  438     _ledTime:
     0000 0000                      1-  439     	dw	0x00
                                    1-  443     .segment "idata"
     0000                           1-  444     _overCount:
     0000 0000                      1-  445     	dw	0x00
                                    1-  449     .segment "idata"
     0000                           1-  450     _chrgCount:
     0000 0000                      1-  451     	dw	0x00
                                    1-  455     .segment "idata"
     0000                           1-  456     _ledLightTime:
     0000 0000                      1-  457     	dw	0x00
                                    1-  461     .segment "idata"
     0000                           1-  462     _currentDuty:
     0000 0000                      1-  463     	dw	0x00
                                    1-  467     .segment "idata"
     0000                           1-  468     _fullCount:
     0000 0000 0000                 1-  469     	dw	0x00, 0x00
                                    1-  473     .segment "idata"
     0000                           1-  474     _shanshuoTime:
     0000 0000                      1-  475     	dw	0x00
                                    1-  479     .segment "idata"
     0000                           1-  480     _firstTime:
     0000 0000                      1-  481     	dw	0x00
                                    1-  485     .segment "idata"
     0000                           1-  486     _tempDuty:
     0000 0000                      1-  487     	dw	0x00
                                    1-  491     .segment "idata"
     0000                           1-  492     _lowCount:
     0000 0000                      1-  493     	dw	0x00
                                    1-  497     .segment "idata"
     0000                           1-  498     _cDuty:
     0000 0000                      1-  499     	dw	0x00
                                    1-  503     .segment "idata"
     0000                           1-  504     _tempLedStep:
     0000 0000                      1-  505     	dw	0x00
                                    1-  509     .segment "idata"
     0000                           1-  510     _count5S:
     0000 0000 0000                 1-  511     	dw	0x00, 0x00
                                    1-  515     .segment "idata"
     0000                           1-  516     _ledDeadTime:
     0000 0000                      1-  517     	dw	0x00
                                    1-  521     .segment "idata"
     0000                           1-  522     _lockLedStep:
     0000 0000                      1-  523     	dw	0x00
                                    1-  527     .segment "idata"
     0000                           1-  528     _closeCount:
     0000 0000 0000                 1-  529     	dw	0x00, 0x00
                                    1-  533     .segment "idata"
     0000                           1-  534     _chrgStep:
     0000 0000                      1-  535     	dw	0x00
                                    1-  539     .segment "idata"
     0000                           1-  540     _prePwStep:
     0000 0000                      1-  541     	dw	0x00
                                    1-  545     .segment "idata"
     0000                           1-  546     _currentChrgPWMDuty:
     0000 0000                      1-  547     	dw	0x00
                                    1-  551     .segment "idata"
     0000                           1-  552     _chrgDutyTime:
     0000 0000                      1-  553     	dw	0x00
                                    1-  557     .segment "idata"
     0000                           1-  558     _lockLedTime:
     0000 0000                      1-  559     	dw	0x00
                                    1-  563     .segment "idata"
     0000                           1-  564     _debug:
     0000 0000                      1-  565     	dw	0x00
                                    1-  568     ;--------------------------------------------------------
                                    1-  569     ; overlayable items in internal ram 
                                    1-  570     ;--------------------------------------------------------
                                    1-  571     ;	udata_ovr
                                    1-  572     ;--------------------------------------------------------
                                    1-  573     ; reset vector 
                                    1-  574     ;--------------------------------------------------------
                                    1-  575     ORG	0x0000
     0000 3rrr                      1-  576     	LGOTO	__nyc_ny8_startup
                                    1-  577     ;--------------------------------------------------------
                                    1-  578     ; interrupt and initialization code
                                    1-  579     ;--------------------------------------------------------
                                    1-  580     ORG 0x0008
                                    1-  581     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  583     .segment "code"
     0000                           1-  584     __sdcc_interrupt:
                                    1-  585     ;***
                                    1-  586     ;  pBlock Stats: dbName = I
                                    1-  587     ;***
                                    1-  588     ;2 compiler assigned registers:
                                    1-  589     ;   STK00
                                    1-  590     ;   STK01
                                    1-  591     ;; Starting pCode block
     0000                           1-  592     _isr:
                                    1-  593     ; 0 exit points
                                    1-  594     	.line	129, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  595     	MOVAR	WSAVE
     0001 1503                      1-  596     	SWAPR	STATUS,W
     0002 0283                      1-  597     	CLRR	STATUS
     0003 00rr                      1-  598     	MOVAR	SSAVE
     0004 010A                      1-  599     	MOVR	PCHBUF,W
     0005 028A                      1-  600     	CLRR	PCHBUF
     0006 00rr                      1-  601     	MOVAR	PSAVE
     0007 0104                      1-  602     	MOVR	FSR,W
     0008 00rr                      1-  603     	MOVAR	___sdcc_saved_fsr
     0009 01rr                      1-  604     	MOVR	STK00,W
     000A 00rr                      1-  605     	MOVAR	___sdcc_saved_stk00
     000B 01rr                      1-  606     	MOVR	STK01,W
     000C 00rr                      1-  607     	MOVAR	___sdcc_saved_stk01
                                    1-  608     	.line	131, "main.c"; 	if(INTFbits.T0IF)
     000D 08rr                      1-  609     	BTRSS	_INTFbits,0
                                    1-  610     	MGOTO	_00126_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  611     	.line	133, "main.c"; 	TMR0 += 55;
     000F 2137                      1-  612     	MOVIA	0x37
     0010 03rr                      1-  613     	ADDAR	_TMR0,F
                                    1-  614     	.line	135, "main.c"; 	if(++intCount >= 100)
     0011 05rr                      1-  615     	INCR	_intCount,F
                                    1-  616     ;;unsigned compare: left < lit (0x64=100), size=1
     0012 2164                      1-  617     	MOVIA	0x64
     0013 04rr                      1-  618     	SUBAR	_intCount,W
     0014 0803                      1-  619     	BTRSS	STATUS,0
                                    1-  620     	MGOTO	_00126_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  621     	.line	137, "main.c"; 	IntFlag = 1;
     0016 18rr                      1-  622     	BSR	_Status,0
                                    1-  623     	.line	138, "main.c"; 	intCount = 0;
     0017 02rr                      1-  624     	CLRR	_intCount
                                    1-  625     	.line	139, "main.c"; 	if(++count500ms >= 40)
     0018 05rr                      1-  626     	INCR	_count500ms,F
                                    1-  627     ;;unsigned compare: left < lit (0x28=40), size=1
     0019 2128                      1-  628     	MOVIA	0x28
     001A 04rr                      1-  629     	SUBAR	_count500ms,W
     001B 0C03                      1-  630     	BTRSC	STATUS,0
                                    1-  631     	.line	140, "main.c"; 	count500ms = 0;
     001C 02rr                      1-  632     	CLRR	_count500ms
                                    1-  633     	.line	141, "main.c"; 	if(++count200ms >= 20)
     001D 05rr                      1-  634     	INCR	_count200ms,F
     001E 2114                      1-  635     	MOVIA	0x14
     001F 04rr                      1-  636     	SUBAR	_count200ms,W
     0020 0803                      1-  637     	BTRSS	STATUS,0
                                    1-  638     	MGOTO	_00110_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  639     	.line	143, "main.c"; 	count200ms = 0;
     0022 02rr                      1-  640     	CLRR	_count200ms
                                    1-  641     	.line	144, "main.c"; 	if(ledDeadTime > 0)
     0023 01rr                      1-  642     	MOVR	_ledDeadTime,W
     0024 0903                      1-  643     	BTRSS	STATUS,2
                                    1-  644     	.line	145, "main.c"; 	--ledDeadTime;
     0025 06rr                      1-  645     	DECR	_ledDeadTime,F
     0026                           1-  646     _00110_DS_:
                                    1-  647     	.line	147, "main.c"; 	if(++count1s >= 100)
     0026 05rr                      1-  648     	INCR	_count1s,F
     0027 2164                      1-  649     	MOVIA	0x64
     0028 04rr                      1-  650     	SUBAR	_count1s,W
     0029 0803                      1-  651     	BTRSS	STATUS,0
                                    1-  652     	MGOTO	_00126_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  653     	.line	149, "main.c"; 	count1s = 0;
     002B 02rr                      1-  654     	CLRR	_count1s
                                    1-  655     	.line	150, "main.c"; 	if(chrgFlag == 1 && pwStep == 6)
     002C 09rr                      1-  656     	BTRSS	_Status,3
                                    1-  657     	MGOTO	_00112_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
     002E 01rr                      1-  658     	MOVR	_pwStep,W
     002F 2406                      1-  659     	XORIA	0x06
     0030 0903                      1-  660     	BTRSS	STATUS,2
                                    1-  661     	MGOTO	_00112_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  662     	.line	152, "main.c"; 	++chrgTime;
     0032 05rr                      1-  663     	INCR	_chrgTime,F
     0033 0D03                      1-  664     	BTRSC	STATUS,2
     0034 05rr                      1-  665     	INCR	(_chrgTime + 1),F
     0035                           1-  666     _00112_DS_:
                                    1-  667     	.line	155, "main.c"; 	if(ledLightTime > 0)
     0035 01rr                      1-  668     	MOVR	_ledLightTime,W
     0036 0903                      1-  669     	BTRSS	STATUS,2
                                    1-  670     	.line	156, "main.c"; 	--ledLightTime;
     0037 06rr                      1-  671     	DECR	_ledLightTime,F
                                    1-  672     	.line	157, "main.c"; 	if(shanshuoTime > 0)
     0038 01rr                      1-  673     	MOVR	_shanshuoTime,W
     0039 0903                      1-  674     	BTRSS	STATUS,2
                                    1-  675     	.line	158, "main.c"; 	--shanshuoTime;
     003A 06rr                      1-  676     	DECR	_shanshuoTime,F
                                    1-  677     	.line	159, "main.c"; 	if(workStep)
     003B 01rr                      1-  678     	MOVR	_workStep,W
     003C 0D03                      1-  679     	BTRSC	STATUS,2
                                    1-  680     	MGOTO	_00119_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  681     	.line	161, "main.c"; 	++count900s;
     003E 05rr                      1-  682     	INCR	_count900s,F
     003F 0D03                      1-  683     	BTRSC	STATUS,2
     0040 05rr                      1-  684     	INCR	(_count900s + 1),F
                                    1-  685     	MGOTO	_00126_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042                           1-  686     _00119_DS_:
                                    1-  687     	.line	165, "main.c"; 	count900s = 0;
     0042 02rr                      1-  688     	CLRR	_count900s
     0043 02rr                      1-  689     	CLRR	(_count900s + 1)
     0044                           1-  690     _00126_DS_:
                                    1-  691     	.line	174, "main.c"; 	if(INTFbits.PABIF)
     0044 08rr                      1-  692     	BTRSS	_INTFbits,1
                                    1-  693     	MGOTO	_00128_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  694     	.line	176, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0046 21FD                      1-  695     	MOVIA	0xfd
     0047 00rr                      1-  696     	MOVAR	_INTF
     0048                           1-  697     _00128_DS_:
                                    1-  698     	.line	179, "main.c"; 	INTF = 0;
     0048 02rr                      1-  699     	CLRR	_INTF
                                    1-  700     	.line	181, "main.c"; 	}
     0049 01rr                      1-  701     	MOVR	___sdcc_saved_stk01,W
     004A 00rr                      1-  702     	MOVAR	STK01
     004B 01rr                      1-  703     	MOVR	___sdcc_saved_stk00,W
     004C 00rr                      1-  704     	MOVAR	STK00
     004D 01rr                      1-  705     	MOVR	___sdcc_saved_fsr,W
     004E 0084                      1-  706     	MOVAR	FSR
     004F 01rr                      1-  707     	MOVR	PSAVE,W
     0050 008A                      1-  708     	MOVAR	PCHBUF
     0051 0283                      1-  709     	CLRR	STATUS
     0052 15rr                      1-  710     	SWAPR	SSAVE,W
     0053 0083                      1-  711     	MOVAR	STATUS
     0054 15rr                      1-  712     	SWAPR	WSAVE,F
     0055 15rr                      1-  713     	SWAPR	WSAVE,W
     0056                           1-  714     END_OF_INTERRUPT:
     0056 0011                      1-  715     	RETIE	
                                    1-  717     ;--------------------------------------------------------
                                    1-  718     ; code
                                    1-  719     ;--------------------------------------------------------
                                    1-  720     ;***
                                    1-  721     ;  pBlock Stats: dbName = M
                                    1-  722     ;***
                                    1-  723     ;has an exit
                                    1-  724     ;functions called:
                                    1-  725     ;   _initSys
                                    1-  726     ;   _initAD
                                    1-  727     ;   _ledShow
                                    1-  728     ;   _pwmStop
                                    1-  729     ;   _powerOff
                                    1-  730     ;   _keyCtr
                                    1-  731     ;   _checkBatAD
                                    1-  732     ;   _chrgCtr
                                    1-  733     ;   _gotoSleep
                                    1-  734     ;   _powerOff
                                    1-  735     ;   _initSys
                                    1-  736     ;   _initAD
                                    1-  737     ;   _ledShow
                                    1-  738     ;   _pwmStop
                                    1-  739     ;   _powerOff
                                    1-  740     ;   _keyCtr
                                    1-  741     ;   _checkBatAD
                                    1-  742     ;   _chrgCtr
                                    1-  743     ;   _gotoSleep
                                    1-  744     ;   _powerOff
                                    1-  745     ;; Starting pCode block
                                    1-  746     .segment "code"; module=main, function=_main
     0000                           1-  748     _main:
                                    1-  749     ; 2 exit points
                                    1-  750     	.line	185, "main.c"; 	initSys();
                                    1-  751     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  752     	.line	186, "main.c"; 	initAD();
                                    1-  753     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  754     _00172_DS_:
                                    1-  755     	.line	189, "main.c"; 	CLRWDT();
     0002 0002                      1-  756     	clrwdt
                                    1-  757     	.line	190, "main.c"; 	ledShow();
                                    1-  758     	MCALL	_ledShow
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  759     	.line	191, "main.c"; 	if(workStep > 0 && tempDuty >= 77)
     0004 01rr                      1-  760     	MOVR	_workStep,W
     0005 0D03                      1-  761     	BTRSC	STATUS,2
                                    1-  762     	MGOTO	_00139_DS_
     0006 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  763     ;;unsigned compare: left < lit (0x4D=77), size=1
     0007 214D                      1-  764     	MOVIA	0x4d
     0008 04rr                      1-  765     	SUBAR	_tempDuty,W
     0009 0803                      1-  766     	BTRSS	STATUS,0
                                    1-  767     	MGOTO	_00139_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  768     	.line	193, "main.c"; 	if(cDuty > tempDuty)
     000B 01rr                      1-  769     	MOVR	_cDuty,W
     000C 04rr                      1-  770     	SUBAR	_tempDuty,W
     000D 0C03                      1-  771     	BTRSC	STATUS,0
                                    1-  772     	MGOTO	_00136_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  773     	.line	195, "main.c"; 	cDuty--;
     000F 06rr                      1-  774     	DECR	_cDuty,F
                                    1-  775     	.line	196, "main.c"; 	PWM2DUTY = cDuty;
     0010 01rr                      1-  776     	MOVR	_cDuty,W
     0011 00rr                      1-  777     	SFUN	_PWM2DUTY
                                    1-  778     	MGOTO	_00139_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
     0013                           1-  779     _00136_DS_:
                                    1-  780     	.line	198, "main.c"; 	else if(cDuty < tempDuty)
     0013 01rr                      1-  781     	MOVR	_tempDuty,W
     0014 04rr                      1-  782     	SUBAR	_cDuty,W
     0015 0C03                      1-  783     	BTRSC	STATUS,0
                                    1-  784     	MGOTO	_00139_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  785     	.line	200, "main.c"; 	cDuty++;
     0017 05rr                      1-  786     	INCR	_cDuty,F
                                    1-  787     	.line	201, "main.c"; 	PWM2DUTY = cDuty;
     0018 01rr                      1-  788     	MOVR	_cDuty,W
     0019 00rr                      1-  789     	SFUN	_PWM2DUTY
     001A                           1-  790     _00139_DS_:
                                    1-  791     	.line	204, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
     001A 01rr                      1-  792     	MOVR	_workStep,W
     001B 0D03                      1-  793     	BTRSC	STATUS,2
                                    1-  794     	MGOTO	_00142_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
     001D 01rr                      1-  795     	MOVR	_currentDuty,W
     001E 04rr                      1-  796     	SUBAR	_maxDuty,W
     001F 0C03                      1-  797     	BTRSC	STATUS,0
                                    1-  798     	MGOTO	_00142_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  799     	.line	206, "main.c"; 	currentDuty = currentDuty - 1;
     0021 06rr                      1-  800     	DECR	_currentDuty,F
                                    1-  801     	.line	207, "main.c"; 	PWM2DUTY = currentDuty;
     0022 01rr                      1-  802     	MOVR	_currentDuty,W
     0023 00rr                      1-  803     	SFUN	_PWM2DUTY
                                    1-  804     	.line	208, "main.c"; 	cDuty = currentDuty;
     0024 01rr                      1-  805     	MOVR	_currentDuty,W
     0025 00rr                      1-  806     	MOVAR	_cDuty
     0026                           1-  807     _00142_DS_:
                                    1-  808     	.line	210, "main.c"; 	if(!IntFlag)
     0026 08rr                      1-  809     	BTRSS	_Status,0
                                    1-  810     	MGOTO	_00172_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  811     	.line	212, "main.c"; 	IntFlag = 0;
     0028 1Crr                      1-  812     	BCR	_Status,0
                                    1-  813     	.line	214, "main.c"; 	if(shanshuoTime == 0 && pwStep == 0 && workStep > 0)
     0029 01rr                      1-  814     	MOVR	_shanshuoTime,W
     002A 0903                      1-  815     	BTRSS	STATUS,2
                                    1-  816     	MGOTO	_00149_DS_
     002B 3rrr                      3-   63 m1      LGOTO rom_address
     002C 01rr                      1-  817     	MOVR	_pwStep,W
     002D 0903                      1-  818     	BTRSS	STATUS,2
                                    1-  819     	MGOTO	_00149_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F 01rr                      1-  820     	MOVR	_workStep,W
     0030 0D03                      1-  821     	BTRSC	STATUS,2
                                    1-  822     	MGOTO	_00149_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  823     	.line	216, "main.c"; 	if(++closeCount >= 6000)
     0032 05rr                      1-  824     	INCR	_closeCount,F
     0033 0D03                      1-  825     	BTRSC	STATUS,2
     0034 05rr                      1-  826     	INCR	(_closeCount + 1),F
                                    1-  827     ;;unsigned compare: left < lit (0x1770=6000), size=2
     0035 2117                      1-  828     	MOVIA	0x17
     0036 04rr                      1-  829     	SUBAR	(_closeCount + 1),W
     0037 0903                      1-  830     	BTRSS	STATUS,2
                                    1-  831     	MGOTO	_00249_DS_
     0038 3rrr                      3-   63 m1      LGOTO rom_address
     0039 2170                      1-  832     	MOVIA	0x70
     003A 04rr                      1-  833     	SUBAR	_closeCount,W
     003B                           1-  834     _00249_DS_:
     003B 0803                      1-  835     	BTRSS	STATUS,0
                                    1-  836     	MGOTO	_00150_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  837     	.line	218, "main.c"; 	closeCount = 0;
     003D 02rr                      1-  838     	CLRR	_closeCount
     003E 02rr                      1-  839     	CLRR	(_closeCount + 1)
                                    1-  840     	.line	219, "main.c"; 	workStep = 0;
     003F 02rr                      1-  841     	CLRR	_workStep
                                    1-  842     	.line	220, "main.c"; 	ledStep = 0;
     0040 02rr                      1-  843     	CLRR	_ledStep
                                    1-  844     	.line	221, "main.c"; 	pwmStop();
                                    1-  845     	MCALL	_pwmStop
     0041 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  846     	MGOTO	_00150_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
     0043                           1-  847     _00149_DS_:
                                    1-  848     	.line	226, "main.c"; 	closeCount = 0;
     0043 02rr                      1-  849     	CLRR	_closeCount
     0044 02rr                      1-  850     	CLRR	(_closeCount + 1)
                                    1-  851     ;;unsigned compare: left < lit (0x5=5), size=1
     0045                           1-  852     _00150_DS_:
                                    1-  853     	.line	229, "main.c"; 	if(overCount >= 5 && workStep > 0)
     0045 2105                      1-  854     	MOVIA	0x05
     0046 04rr                      1-  855     	SUBAR	_overCount,W
     0047 0803                      1-  856     	BTRSS	STATUS,0
                                    1-  857     	MGOTO	_00156_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 01rr                      1-  858     	MOVR	_workStep,W
     004A 0D03                      1-  859     	BTRSC	STATUS,2
                                    1-  860     	MGOTO	_00156_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  861     	.line	231, "main.c"; 	if(++count5S > 500)
     004C 05rr                      1-  862     	INCR	_count5S,F
     004D 0D03                      1-  863     	BTRSC	STATUS,2
     004E 05rr                      1-  864     	INCR	(_count5S + 1),F
                                    1-  865     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  866     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     004F 2101                      1-  867     	MOVIA	0x01
     0050 04rr                      1-  868     	SUBAR	(_count5S + 1),W
     0051 0903                      1-  869     	BTRSS	STATUS,2
                                    1-  870     	MGOTO	_00251_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
     0053 21F5                      1-  871     	MOVIA	0xf5
     0054 04rr                      1-  872     	SUBAR	_count5S,W
     0055                           1-  873     _00251_DS_:
     0055 0803                      1-  874     	BTRSS	STATUS,0
                                    1-  875     	MGOTO	_00157_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  876     	.line	233, "main.c"; 	overCount = 0;
     0057 02rr                      1-  877     	CLRR	_overCount
                                    1-  878     	.line	234, "main.c"; 	count5S = 0;
     0058 02rr                      1-  879     	CLRR	_count5S
     0059 02rr                      1-  880     	CLRR	(_count5S + 1)
                                    1-  881     	.line	235, "main.c"; 	ledDeadTime = 25;
     005A 2119                      1-  882     	MOVIA	0x19
     005B 00rr                      1-  883     	MOVAR	_ledDeadTime
                                    1-  884     	.line	236, "main.c"; 	powerOff();
                                    1-  885     	MCALL	_powerOff
     005C 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  886     	MGOTO	_00157_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
     005E                           1-  887     _00156_DS_:
                                    1-  888     	.line	241, "main.c"; 	count5S = 0;
     005E 02rr                      1-  889     	CLRR	_count5S
     005F 02rr                      1-  890     	CLRR	(_count5S + 1)
     0060                           1-  891     _00157_DS_:
                                    1-  892     	.line	243, "main.c"; 	if(chrgFlag == 0)
     0060 0Drr                      1-  893     	BTRSC	_Status,3
                                    1-  894     	MGOTO	_00160_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  895     	.line	244, "main.c"; 	keyCtr();
                                    1-  896     	MCALL	_keyCtr
     0062 2rrr                      3-   66 m1      LCALL rom_address
     0063                           1-  897     _00160_DS_:
                                    1-  898     	.line	254, "main.c"; 	checkBatAD();
                                    1-  899     	MCALL	_checkBatAD
     0063 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  900     	.line	255, "main.c"; 	chrgCtr();
                                    1-  901     	MCALL	_chrgCtr
     0064 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  902     	.line	258, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x08) == 0 && ledLightTime == 0 && ledDeadTime == 0)
     0065 01rr                      1-  903     	MOVR	_workStep,W
     0066 0903                      1-  904     	BTRSS	STATUS,2
                                    1-  905     	MGOTO	_00164_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
     0068 01rr                      1-  906     	MOVR	_keyCount,W
     0069 0903                      1-  907     	BTRSS	STATUS,2
                                    1-  908     	MGOTO	_00164_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
     006B 0Drr                      1-  909     	BTRSC	_PORTA,3
                                    1-  910     	MGOTO	_00164_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
     006D 01rr                      1-  911     	MOVR	_ledLightTime,W
     006E 0903                      1-  912     	BTRSS	STATUS,2
                                    1-  913     	MGOTO	_00164_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
     0070 01rr                      1-  914     	MOVR	_ledDeadTime,W
     0071 0903                      1-  915     	BTRSS	STATUS,2
                                    1-  916     	MGOTO	_00164_DS_
     0072 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  917     	.line	260, "main.c"; 	if(++sleepTime > 20)
     0073 05rr                      1-  918     	INCR	_sleepTime,F
     0074 0D03                      1-  919     	BTRSC	STATUS,2
     0075 05rr                      1-  920     	INCR	(_sleepTime + 1),F
                                    1-  921     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  922     ;;unsigned compare: left >= lit (0x15=21), size=2
     0076 2100                      1-  923     	MOVIA	0x00
     0077 04rr                      1-  924     	SUBAR	(_sleepTime + 1),W
     0078 0903                      1-  925     	BTRSS	STATUS,2
                                    1-  926     	MGOTO	_00252_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
     007A 2115                      1-  927     	MOVIA	0x15
     007B 04rr                      1-  928     	SUBAR	_sleepTime,W
     007C                           1-  929     _00252_DS_:
     007C 0803                      1-  930     	BTRSS	STATUS,0
                                    1-  931     	MGOTO	_00164_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  932     	.line	262, "main.c"; 	gotoSleep();
                                    1-  933     	MCALL	_gotoSleep
     007E 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  934     ;;unsigned compare: left < lit (0x384=900), size=2
     007F                           1-  935     _00164_DS_:
                                    1-  936     	.line	266, "main.c"; 	if(count900s >= 900)
     007F 2103                      1-  937     	MOVIA	0x03
     0080 04rr                      1-  938     	SUBAR	(_count900s + 1),W
     0081 0903                      1-  939     	BTRSS	STATUS,2
                                    1-  940     	MGOTO	_00253_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
     0083 2184                      1-  941     	MOVIA	0x84
     0084 04rr                      1-  942     	SUBAR	_count900s,W
     0085                           1-  943     _00253_DS_:
     0085 0803                      1-  944     	BTRSS	STATUS,0
                                    1-  945     	MGOTO	_00172_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  946     	.line	268, "main.c"; 	powerOff();
                                    1-  947     	MCALL	_powerOff
     0087 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  948     	MGOTO	_00172_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  949     	.line	272, "main.c"; 	}
                                    1-  950     	RETURN	
     0089 0010                      3-   40 m1      ret
                                    1-  951     ; exit point of _main
                                    1-  953     ;***
                                    1-  954     ;  pBlock Stats: dbName = C
                                    1-  955     ;***
                                    1-  956     ;has an exit
                                    1-  957     ;; Starting pCode block
                                    1-  958     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1-  960     _F_wait_eoc:
                                    1-  961     ; 2 exit points
     0000                           1-  962     _00986_DS_:
                                    1-  963     	.line	1066, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1-  964     	BTRSS	_ADMDbits,5
                                    1-  965     	MGOTO	_00986_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  966     	.line	1068, "main.c"; 	}
                                    1-  967     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1-  968     ; exit point of _F_wait_eoc
                                    1-  970     ;***
                                    1-  971     ;  pBlock Stats: dbName = C
                                    1-  972     ;***
                                    1-  973     ;has an exit
                                    1-  974     ;functions called:
                                    1-  975     ;   _delay
                                    1-  976     ;   _F_wait_eoc
                                    1-  977     ;   _delay
                                    1-  978     ;   _F_wait_eoc
                                    1-  979     ;6 compiler assigned registers:
                                    1-  980     ;   r0x1035
                                    1-  981     ;   r0x1036
                                    1-  982     ;   r0x1037
                                    1-  983     ;   r0x1038
                                    1-  984     ;   r0x1039
                                    1-  985     ;   r0x103A
                                    1-  986     ;; Starting pCode block
                                    1-  987     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1-  989     ;local variable name mapping:
     0000                           1-  992     _F_AIN2_Convert:
                                    1-  993     ; 2 exit points
                                    1-  994     	.line	1049, "main.c"; 	void F_AIN2_Convert(char count)
     0000 00rr                      1-  995     	MOVAR	r0x1035
                                    1-  996     	.line	1051, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
     0001 02rr                      1-  997     	CLRR	_R_AIN2_DATA_LB
     0002 02rr                      1-  998     	CLRR	_R_AIN2_DATA
     0003 02rr                      1-  999     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1000     	.line	1053, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0004 2192                      1- 1001     	MOVIA	0x92
     0005 00rr                      1- 1002     	MOVAR	_ADMD
                                    1- 1003     	.line	1054, "main.c"; 	delay(200);	
     0006 21C8                      1- 1004     	MOVIA	0xc8
                                    1- 1005     	MCALL	_delay
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1006     	.line	1055, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1- 1007     	MOVIA	0x01
     0009 00rr                      1- 1008     	MOVAR	r0x1036
     000A                           1- 1009     _00979_DS_:
     000A 01rr                      1- 1010     	MOVR	r0x1036,W
     000B 04rr                      1- 1011     	SUBAR	r0x1035,W
     000C 0803                      1- 1012     	BTRSS	STATUS,0
                                    1- 1013     	MGOTO	_00981_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1014     	.line	1057, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000E 1Brr                      1- 1015     	BSR	_ADMDbits,6
                                    1- 1016     	.line	1058, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1017     	MCALL	_F_wait_eoc
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1018     	.line	1059, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0010 210F                      1- 1019     	MOVIA	0x0f
     0011 10rr                      1- 1020     	ANDAR	_ADR,W
                                    1- 1021     ;;3	MOVAR	r0x1037
     0012 03rr                      1- 1022     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1023     	.line	1060, "main.c"; 	R_AIN2_DATA    += ADD; 
     0013 01rr                      1- 1024     	MOVR	_ADD,W
     0014 00rr                      1- 1025     	MOVAR	r0x1037
                                    1- 1026     ;;1	CLRR	r0x1038
                                    1- 1027     ;;111	MOVR	r0x1037,W
                                    1- 1028     ;;109	MOVAR	r0x1039
     0015 2100                      1- 1029     	MOVIA	0x00
     0016 00rr                      1- 1030     	MOVAR	r0x103A
                                    1- 1031     ;;110	MOVR	r0x1039,W
     0017 01rr                      1- 1032     	MOVR	r0x1037,W
     0018 03rr                      1- 1033     	ADDAR	_R_AIN2_DATA,F
     0019 01rr                      1- 1034     	MOVR	r0x103A,W
     001A 0C03                      1- 1035     	BTRSC	STATUS,0
     001B 16rr                      1- 1036     	INCRSZ	r0x103A,W
     001C 03rr                      1- 1037     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1038     	.line	1055, "main.c"; 	for(i=1;i<=count;i++)
     001D 05rr                      1- 1039     	INCR	r0x1036,F
                                    1- 1040     	MGOTO	_00979_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
     001F                           1- 1041     _00981_DS_:
                                    1- 1042     	.line	1062, "main.c"; 	}
                                    1- 1043     	RETURN	
     001F 0010                      3-   40 m1      ret
                                    1- 1044     ; exit point of _F_AIN2_Convert
                                    1- 1046     ;***
                                    1- 1047     ;  pBlock Stats: dbName = C
                                    1- 1048     ;***
                                    1- 1049     ;has an exit
                                    1- 1050     ;functions called:
                                    1- 1051     ;   _delay
                                    1- 1052     ;   _F_wait_eoc
                                    1- 1053     ;   _delay
                                    1- 1054     ;   _F_wait_eoc
                                    1- 1055     ;6 compiler assigned registers:
                                    1- 1056     ;   r0x103B
                                    1- 1057     ;   r0x103C
                                    1- 1058     ;   r0x103D
                                    1- 1059     ;   r0x103E
                                    1- 1060     ;   r0x103F
                                    1- 1061     ;   r0x1040
                                    1- 1062     ;; Starting pCode block
                                    1- 1063     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1- 1065     ;local variable name mapping:
     0000                           1- 1068     _F_AIN3_Convert:
                                    1- 1069     ; 2 exit points
                                    1- 1070     	.line	1034, "main.c"; 	void F_AIN3_Convert(char count)
     0000 00rr                      1- 1071     	MOVAR	r0x103B
                                    1- 1072     	.line	1036, "main.c"; 	R_AIN3_DATA=R_AIN3_DATA_LB=0x00;   
     0001 02rr                      1- 1073     	CLRR	_R_AIN3_DATA_LB
     0002 02rr                      1- 1074     	CLRR	_R_AIN3_DATA
     0003 02rr                      1- 1075     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1076     	.line	1038, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0004 2193                      1- 1077     	MOVIA	0x93
     0005 00rr                      1- 1078     	MOVAR	_ADMD
                                    1- 1079     	.line	1039, "main.c"; 	delay(200);	
     0006 21C8                      1- 1080     	MOVIA	0xc8
                                    1- 1081     	MCALL	_delay
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1082     	.line	1040, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1- 1083     	MOVIA	0x01
     0009 00rr                      1- 1084     	MOVAR	r0x103C
     000A                           1- 1085     _00970_DS_:
     000A 01rr                      1- 1086     	MOVR	r0x103C,W
     000B 04rr                      1- 1087     	SUBAR	r0x103B,W
     000C 0803                      1- 1088     	BTRSS	STATUS,0
                                    1- 1089     	MGOTO	_00972_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1090     	.line	1042, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000E 1Brr                      1- 1091     	BSR	_ADMDbits,6
                                    1- 1092     	.line	1043, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1093     	MCALL	_F_wait_eoc
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1094     	.line	1044, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0010 210F                      1- 1095     	MOVIA	0x0f
     0011 10rr                      1- 1096     	ANDAR	_ADR,W
                                    1- 1097     ;;3	MOVAR	r0x103D
     0012 03rr                      1- 1098     	ADDAR	_R_AIN3_DATA_LB,F
                                    1- 1099     	.line	1045, "main.c"; 	R_AIN3_DATA    += ADD; 
     0013 01rr                      1- 1100     	MOVR	_ADD,W
     0014 00rr                      1- 1101     	MOVAR	r0x103D
                                    1- 1102     ;;1	CLRR	r0x103E
                                    1- 1103     ;;108	MOVR	r0x103D,W
                                    1- 1104     ;;106	MOVAR	r0x103F
     0015 2100                      1- 1105     	MOVIA	0x00
     0016 00rr                      1- 1106     	MOVAR	r0x1040
                                    1- 1107     ;;107	MOVR	r0x103F,W
     0017 01rr                      1- 1108     	MOVR	r0x103D,W
     0018 03rr                      1- 1109     	ADDAR	_R_AIN3_DATA,F
     0019 01rr                      1- 1110     	MOVR	r0x1040,W
     001A 0C03                      1- 1111     	BTRSC	STATUS,0
     001B 16rr                      1- 1112     	INCRSZ	r0x1040,W
     001C 03rr                      1- 1113     	ADDAR	(_R_AIN3_DATA + 1),F
                                    1- 1114     	.line	1040, "main.c"; 	for(i=1;i<=count;i++)
     001D 05rr                      1- 1115     	INCR	r0x103C,F
                                    1- 1116     	MGOTO	_00970_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
     001F                           1- 1117     _00972_DS_:
                                    1- 1118     	.line	1047, "main.c"; 	}
                                    1- 1119     	RETURN	
     001F 0010                      3-   40 m1      ret
                                    1- 1120     ; exit point of _F_AIN3_Convert
                                    1- 1122     ;***
                                    1- 1123     ;  pBlock Stats: dbName = C
                                    1- 1124     ;***
                                    1- 1125     ;has an exit
                                    1- 1126     ;functions called:
                                    1- 1127     ;   _delay
                                    1- 1128     ;   _F_wait_eoc
                                    1- 1129     ;   _delay
                                    1- 1130     ;   _F_wait_eoc
                                    1- 1131     ;6 compiler assigned registers:
                                    1- 1132     ;   r0x1041
                                    1- 1133     ;   r0x1042
                                    1- 1134     ;   r0x1043
                                    1- 1135     ;   r0x1044
                                    1- 1136     ;   r0x1045
                                    1- 1137     ;   r0x1046
                                    1- 1138     ;; Starting pCode block
                                    1- 1139     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1141     ;local variable name mapping:
     0000                           1- 1144     _F_AIN4_Convert:
                                    1- 1145     ; 2 exit points
                                    1- 1146     	.line	1019, "main.c"; 	void F_AIN4_Convert(char count)
     0000 00rr                      1- 1147     	MOVAR	r0x1041
                                    1- 1148     	.line	1021, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
     0001 02rr                      1- 1149     	CLRR	_R_AIN4_DATA_LB
     0002 02rr                      1- 1150     	CLRR	_R_AIN4_DATA
     0003 02rr                      1- 1151     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1152     	.line	1023, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0004 2194                      1- 1153     	MOVIA	0x94
     0005 00rr                      1- 1154     	MOVAR	_ADMD
                                    1- 1155     	.line	1024, "main.c"; 	delay(200);	
     0006 21C8                      1- 1156     	MOVIA	0xc8
                                    1- 1157     	MCALL	_delay
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1158     	.line	1025, "main.c"; 	for(i=1;i<=count;i++)
     0008 2101                      1- 1159     	MOVIA	0x01
     0009 00rr                      1- 1160     	MOVAR	r0x1042
     000A                           1- 1161     _00961_DS_:
     000A 01rr                      1- 1162     	MOVR	r0x1042,W
     000B 04rr                      1- 1163     	SUBAR	r0x1041,W
     000C 0803                      1- 1164     	BTRSS	STATUS,0
                                    1- 1165     	MGOTO	_00963_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1166     	.line	1027, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     000E 1Brr                      1- 1167     	BSR	_ADMDbits,6
                                    1- 1168     	.line	1028, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1169     	MCALL	_F_wait_eoc
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1170     	.line	1029, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0010 210F                      1- 1171     	MOVIA	0x0f
     0011 10rr                      1- 1172     	ANDAR	_ADR,W
                                    1- 1173     ;;3	MOVAR	r0x1043
     0012 03rr                      1- 1174     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1175     	.line	1030, "main.c"; 	R_AIN4_DATA    += ADD; 
     0013 01rr                      1- 1176     	MOVR	_ADD,W
     0014 00rr                      1- 1177     	MOVAR	r0x1043
                                    1- 1178     ;;1	CLRR	r0x1044
                                    1- 1179     ;;105	MOVR	r0x1043,W
                                    1- 1180     ;;103	MOVAR	r0x1045
     0015 2100                      1- 1181     	MOVIA	0x00
     0016 00rr                      1- 1182     	MOVAR	r0x1046
                                    1- 1183     ;;104	MOVR	r0x1045,W
     0017 01rr                      1- 1184     	MOVR	r0x1043,W
     0018 03rr                      1- 1185     	ADDAR	_R_AIN4_DATA,F
     0019 01rr                      1- 1186     	MOVR	r0x1046,W
     001A 0C03                      1- 1187     	BTRSC	STATUS,0
     001B 16rr                      1- 1188     	INCRSZ	r0x1046,W
     001C 03rr                      1- 1189     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1190     	.line	1025, "main.c"; 	for(i=1;i<=count;i++)
     001D 05rr                      1- 1191     	INCR	r0x1042,F
                                    1- 1192     	MGOTO	_00961_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
     001F                           1- 1193     _00963_DS_:
                                    1- 1194     	.line	1032, "main.c"; 	}
                                    1- 1195     	RETURN	
     001F 0010                      3-   40 m1      ret
                                    1- 1196     ; exit point of _F_AIN4_Convert
                                    1- 1198     ;***
                                    1- 1199     ;  pBlock Stats: dbName = C
                                    1- 1200     ;***
                                    1- 1201     ;has an exit
                                    1- 1202     ;functions called:
                                    1- 1203     ;   _F_AIN3_Convert
                                    1- 1204     ;   _F_AIN3_Convert
                                    1- 1205     ;4 compiler assigned registers:
                                    1- 1206     ;   r0x1047
                                    1- 1207     ;   r0x1048
                                    1- 1208     ;   r0x1049
                                    1- 1209     ;   r0x104A
                                    1- 1210     ;; Starting pCode block
                                    1- 1211     .segment "code"; module=main, function=_checkChrgV
     0000                           1- 1213     _checkChrgV:
                                    1- 1214     ; 2 exit points
                                    1- 1215     	.line	1004, "main.c"; 	R_AIN3_DATA = R_AIN3_DATA_LB = 0x00;
     0000 02rr                      1- 1216     	CLRR	_R_AIN3_DATA_LB
     0001 02rr                      1- 1217     	CLRR	_R_AIN3_DATA
     0002 02rr                      1- 1218     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1219     	.line	1005, "main.c"; 	F_AIN3_Convert(8);					// execute AIN0 ADC converting 8 times
     0003 2108                      1- 1220     	MOVIA	0x08
                                    1- 1221     	MCALL	_F_AIN3_Convert
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1222     	.line	1006, "main.c"; 	R_AIN3_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
     0005 15rr                      1- 1223     	SWAPR	(_R_AIN3_DATA + 1),W
     0006 22F0                      1- 1224     	ANDIA	0xf0
     0007 00rr                      1- 1225     	MOVAR	(_R_AIN3_DATA + 1)
     0008 15rr                      1- 1226     	SWAPR	_R_AIN3_DATA,W
     0009 00rr                      1- 1227     	MOVAR	_R_AIN3_DATA
     000A 220F                      1- 1228     	ANDIA	0x0f
     000B 11rr                      1- 1229     	IORAR	(_R_AIN3_DATA + 1),F
     000C 12rr                      1- 1230     	XORAR	_R_AIN3_DATA,F
                                    1- 1231     	.line	1007, "main.c"; 	R_AIN3_DATA_LB &= 0xF0;				// Only get Bit7~4
     000D 21F0                      1- 1232     	MOVIA	0xf0
     000E 10rr                      1- 1233     	ANDAR	_R_AIN3_DATA_LB,F
                                    1- 1234     	.line	1008, "main.c"; 	R_AIN3_DATA += R_AIN3_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     000F 01rr                      1- 1235     	MOVR	_R_AIN3_DATA_LB,W
     0010 00rr                      1- 1236     	MOVAR	r0x1049
                                    1- 1237     ;;1	MOVAR	r0x1047
                                    1- 1238     ;;1	CLRR	r0x1048
                                    1- 1239     ;;102	MOVR	r0x1047,W
     0011 2100                      1- 1240     	MOVIA	0x00
     0012 00rr                      1- 1241     	MOVAR	r0x104A
     0013 01rr                      1- 1242     	MOVR	r0x1049,W
     0014 03rr                      1- 1243     	ADDAR	_R_AIN3_DATA,F
     0015 01rr                      1- 1244     	MOVR	r0x104A,W
     0016 0C03                      1- 1245     	BTRSC	STATUS,0
     0017 16rr                      1- 1246     	INCRSZ	r0x104A,W
     0018 03rr                      1- 1247     	ADDAR	(_R_AIN3_DATA + 1),F
                                    1- 1248     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
                                    1- 1249     	.line	1009, "main.c"; 	R_AIN3_DATA >>=3;					// R_AIN0_DATA divided 8
     0019 1C03                      1- 1250     	BCR	STATUS,0
     001A 13rr                      1- 1251     	RRR	(_R_AIN3_DATA + 1),F
     001B 13rr                      1- 1252     	RRR	_R_AIN3_DATA,F
                                    1- 1253     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     001C 1C03                      1- 1254     	BCR	STATUS,0
     001D 13rr                      1- 1255     	RRR	(_R_AIN3_DATA + 1),F
     001E 13rr                      1- 1256     	RRR	_R_AIN3_DATA,F
                                    1- 1257     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     001F 1C03                      1- 1258     	BCR	STATUS,0
     0020 13rr                      1- 1259     	RRR	(_R_AIN3_DATA + 1),F
     0021 13rr                      1- 1260     	RRR	_R_AIN3_DATA,F
                                    1- 1261     	.line	1010, "main.c"; 	}
                                    1- 1262     	RETURN	
     0022 0010                      3-   40 m1      ret
                                    1- 1263     ; exit point of _checkChrgV
                                    1- 1265     ;***
                                    1- 1266     ;  pBlock Stats: dbName = C
                                    1- 1267     ;***
                                    1- 1268     ;has an exit
                                    1- 1269     ;functions called:
                                    1- 1270     ;   _F_AIN2_Convert
                                    1- 1271     ;   _F_AIN2_Convert
                                    1- 1272     ;4 compiler assigned registers:
                                    1- 1273     ;   r0x104B
                                    1- 1274     ;   r0x104C
                                    1- 1275     ;   r0x104D
                                    1- 1276     ;   r0x104E
                                    1- 1277     ;; Starting pCode block
                                    1- 1278     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1280     _checkBatAD:
                                    1- 1281     ; 2 exit points
                                    1- 1282     	.line	830, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
     0000 02rr                      1- 1283     	CLRR	_R_AIN2_DATA_LB
     0001 02rr                      1- 1284     	CLRR	_R_AIN2_DATA
     0002 02rr                      1- 1285     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1286     	.line	831, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0003 2108                      1- 1287     	MOVIA	0x08
                                    1- 1288     	MCALL	_F_AIN2_Convert
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1289     	.line	832, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
     0005 15rr                      1- 1290     	SWAPR	(_R_AIN2_DATA + 1),W
     0006 22F0                      1- 1291     	ANDIA	0xf0
     0007 00rr                      1- 1292     	MOVAR	(_R_AIN2_DATA + 1)
     0008 15rr                      1- 1293     	SWAPR	_R_AIN2_DATA,W
     0009 00rr                      1- 1294     	MOVAR	_R_AIN2_DATA
     000A 220F                      1- 1295     	ANDIA	0x0f
     000B 11rr                      1- 1296     	IORAR	(_R_AIN2_DATA + 1),F
     000C 12rr                      1- 1297     	XORAR	_R_AIN2_DATA,F
                                    1- 1298     	.line	833, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     000D 21F0                      1- 1299     	MOVIA	0xf0
     000E 10rr                      1- 1300     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1301     	.line	834, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     000F 01rr                      1- 1302     	MOVR	_R_AIN2_DATA_LB,W
     0010 00rr                      1- 1303     	MOVAR	r0x104B
                                    1- 1304     ;;1	CLRR	r0x104C
                                    1- 1305     ;;101	MOVR	r0x104B,W
                                    1- 1306     ;;99	MOVAR	r0x104D
     0011 2100                      1- 1307     	MOVIA	0x00
     0012 00rr                      1- 1308     	MOVAR	r0x104E
                                    1- 1309     ;;100	MOVR	r0x104D,W
     0013 01rr                      1- 1310     	MOVR	r0x104B,W
     0014 03rr                      1- 1311     	ADDAR	_R_AIN2_DATA,F
     0015 01rr                      1- 1312     	MOVR	r0x104E,W
     0016 0C03                      1- 1313     	BTRSC	STATUS,0
     0017 16rr                      1- 1314     	INCRSZ	r0x104E,W
     0018 03rr                      1- 1315     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1316     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
                                    1- 1317     	.line	835, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0019 1C03                      1- 1318     	BCR	STATUS,0
     001A 13rr                      1- 1319     	RRR	(_R_AIN2_DATA + 1),F
     001B 13rr                      1- 1320     	RRR	_R_AIN2_DATA,F
                                    1- 1321     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     001C 1C03                      1- 1322     	BCR	STATUS,0
     001D 13rr                      1- 1323     	RRR	(_R_AIN2_DATA + 1),F
     001E 13rr                      1- 1324     	RRR	_R_AIN2_DATA,F
                                    1- 1325     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     001F 1C03                      1- 1326     	BCR	STATUS,0
     0020 13rr                      1- 1327     	RRR	(_R_AIN2_DATA + 1),F
     0021 13rr                      1- 1328     	RRR	_R_AIN2_DATA,F
                                    1- 1329     	.line	836, "main.c"; 	if(debug)
     0022 01rr                      1- 1330     	MOVR	_debug,W
     0023 0D03                      1- 1331     	BTRSC	STATUS,2
                                    1- 1332     	MGOTO	_00668_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1333     	.line	837, "main.c"; 	R_AIN2_DATA = BATTLE;
     0025 210E                      1- 1334     	MOVIA	0x0e
     0026 00rr                      1- 1335     	MOVAR	_R_AIN2_DATA
     0027 2106                      1- 1336     	MOVIA	0x06
     0028 00rr                      1- 1337     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1338     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1339     ;;unsigned compare: left >= lit (0x60F=1551), size=2
     0029                           1- 1340     _00668_DS_:
                                    1- 1341     	.line	839, "main.c"; 	if(R_AIN2_DATA > 1550)
     0029 2106                      1- 1342     	MOVIA	0x06
     002A 04rr                      1- 1343     	SUBAR	(_R_AIN2_DATA + 1),W
     002B 0903                      1- 1344     	BTRSS	STATUS,2
                                    1- 1345     	MGOTO	_00918_DS_
     002C 3rrr                      3-   63 m1      LGOTO rom_address
     002D 210F                      1- 1346     	MOVIA	0x0f
     002E 04rr                      1- 1347     	SUBAR	_R_AIN2_DATA,W
     002F                           1- 1348     _00918_DS_:
     002F 0803                      1- 1349     	BTRSS	STATUS,0
                                    1- 1350     	MGOTO	_00675_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1351     	.line	842, "main.c"; 	lowCount = 0;
     0031 02rr                      1- 1352     	CLRR	_lowCount
                                    1- 1353     	.line	842, "main.c"; 	}
                                    1- 1354     	MGOTO	_00676_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1355     ;;unsigned compare: left < lit (0x47E=1150), size=2
     0033                           1- 1356     _00675_DS_:
                                    1- 1357     	.line	844, "main.c"; 	else if(R_AIN2_DATA < 1150)
     0033 2104                      1- 1358     	MOVIA	0x04
     0034 04rr                      1- 1359     	SUBAR	(_R_AIN2_DATA + 1),W
     0035 0903                      1- 1360     	BTRSS	STATUS,2
                                    1- 1361     	MGOTO	_00919_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037 217E                      1- 1362     	MOVIA	0x7e
     0038 04rr                      1- 1363     	SUBAR	_R_AIN2_DATA,W
     0039                           1- 1364     _00919_DS_:
     0039 0C03                      1- 1365     	BTRSC	STATUS,0
                                    1- 1366     	MGOTO	_00672_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1367     	.line	846, "main.c"; 	if(++lowCount < 10)
     003B 05rr                      1- 1368     	INCR	_lowCount,F
                                    1- 1369     ;;unsigned compare: left < lit (0xA=10), size=1
     003C 210A                      1- 1370     	MOVIA	0x0a
     003D 04rr                      1- 1371     	SUBAR	_lowCount,W
     003E 0803                      1- 1372     	BTRSS	STATUS,0
                                    1- 1373     	.line	847, "main.c"; 	return;
                                    1- 1374     	MGOTO	_00775_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1375     	.line	848, "main.c"; 	lowCount = 10;
     0040 210A                      1- 1376     	MOVIA	0x0a
     0041 00rr                      1- 1377     	MOVAR	_lowCount
                                    1- 1378     	.line	849, "main.c"; 	pwStep = 0;
     0042 02rr                      1- 1379     	CLRR	_pwStep
                                    1- 1380     	.line	850, "main.c"; 	R_AIN2_DATA = 1150;
     0043 217E                      1- 1381     	MOVIA	0x7e
     0044 00rr                      1- 1382     	MOVAR	_R_AIN2_DATA
     0045 2104                      1- 1383     	MOVIA	0x04
     0046 00rr                      1- 1384     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1385     	.line	850, "main.c"; 	R_AIN2_DATA = 1150;
                                    1- 1386     	MGOTO	_00676_DS_
     0047 3rrr                      3-   63 m1      LGOTO rom_address
     0048                           1- 1387     _00672_DS_:
                                    1- 1388     	.line	862, "main.c"; 	lowCount = 0;
     0048 02rr                      1- 1389     	CLRR	_lowCount
                                    1- 1390     	.line	863, "main.c"; 	firstTime = 0;
     0049 02rr                      1- 1391     	CLRR	_firstTime
     004A                           1- 1392     _00676_DS_:
                                    1- 1393     	.line	866, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA - 1150;
     004A 2182                      1- 1394     	MOVIA	0x82
     004B 03rr                      1- 1395     	ADDAR	_R_AIN2_DATA,F
     004C 21FB                      1- 1396     	MOVIA	0xfb
     004D 0C03                      1- 1397     	BTRSC	STATUS,0
     004E 21FC                      1- 1398     	MOVIA	0xfc
     004F 03rr                      1- 1399     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1400     	.line	867, "main.c"; 	if(PORTA & 0x08 && R_AIN2_DATA < 390)
     0050 09rr                      1- 1401     	BTRSS	_PORTA,3
                                    1- 1402     	MGOTO	_00689_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1403     ;;unsigned compare: left < lit (0x186=390), size=2
     0052 2101                      1- 1404     	MOVIA	0x01
     0053 04rr                      1- 1405     	SUBAR	(_R_AIN2_DATA + 1),W
     0054 0903                      1- 1406     	BTRSS	STATUS,2
                                    1- 1407     	MGOTO	_00921_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
     0056 2186                      1- 1408     	MOVIA	0x86
     0057 04rr                      1- 1409     	SUBAR	_R_AIN2_DATA,W
     0058                           1- 1410     _00921_DS_:
     0058 0C03                      1- 1411     	BTRSC	STATUS,0
                                    1- 1412     	MGOTO	_00689_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1413     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1414     ;;unsigned compare: left >= lit (0x169=361), size=2
                                    1- 1415     	.line	869, "main.c"; 	if(R_AIN2_DATA > 360)
     005A 2101                      1- 1416     	MOVIA	0x01
     005B 04rr                      1- 1417     	SUBAR	(_R_AIN2_DATA + 1),W
     005C 0903                      1- 1418     	BTRSS	STATUS,2
                                    1- 1419     	MGOTO	_00922_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
     005E 2169                      1- 1420     	MOVIA	0x69
     005F 04rr                      1- 1421     	SUBAR	_R_AIN2_DATA,W
     0060                           1- 1422     _00922_DS_:
     0060 0803                      1- 1423     	BTRSS	STATUS,0
                                    1- 1424     	MGOTO	_00686_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1425     	.line	870, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA - 10;
     0062 21F6                      1- 1426     	MOVIA	0xf6
     0063 03rr                      1- 1427     	ADDAR	_R_AIN2_DATA,F
     0064 0803                      1- 1428     	BTRSS	STATUS,0
     0065 06rr                      1- 1429     	DECR	(_R_AIN2_DATA + 1),F
                                    1- 1430     	MGOTO	_00689_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1431     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1432     ;;unsigned compare: left >= lit (0x12D=301), size=2
     0067                           1- 1433     _00686_DS_:
                                    1- 1434     	.line	871, "main.c"; 	else if(R_AIN2_DATA > 300)
     0067 2101                      1- 1435     	MOVIA	0x01
     0068 04rr                      1- 1436     	SUBAR	(_R_AIN2_DATA + 1),W
     0069 0903                      1- 1437     	BTRSS	STATUS,2
                                    1- 1438     	MGOTO	_00923_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
     006B 212D                      1- 1439     	MOVIA	0x2d
     006C 04rr                      1- 1440     	SUBAR	_R_AIN2_DATA,W
     006D                           1- 1441     _00923_DS_:
     006D 0803                      1- 1442     	BTRSS	STATUS,0
                                    1- 1443     	MGOTO	_00683_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1444     	.line	872, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA - 20;
     006F 21EC                      1- 1445     	MOVIA	0xec
     0070 03rr                      1- 1446     	ADDAR	_R_AIN2_DATA,F
     0071 0803                      1- 1447     	BTRSS	STATUS,0
     0072 06rr                      1- 1448     	DECR	(_R_AIN2_DATA + 1),F
                                    1- 1449     	MGOTO	_00689_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1450     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1451     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0074                           1- 1452     _00683_DS_:
                                    1- 1453     	.line	873, "main.c"; 	else if(R_AIN2_DATA > 200)
     0074 2100                      1- 1454     	MOVIA	0x00
     0075 04rr                      1- 1455     	SUBAR	(_R_AIN2_DATA + 1),W
     0076 0903                      1- 1456     	BTRSS	STATUS,2
                                    1- 1457     	MGOTO	_00924_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
     0078 21C9                      1- 1458     	MOVIA	0xc9
     0079 04rr                      1- 1459     	SUBAR	_R_AIN2_DATA,W
     007A                           1- 1460     _00924_DS_:
     007A 0803                      1- 1461     	BTRSS	STATUS,0
                                    1- 1462     	MGOTO	_00680_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1463     	.line	874, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA - 30;
     007C 21E2                      1- 1464     	MOVIA	0xe2
     007D 03rr                      1- 1465     	ADDAR	_R_AIN2_DATA,F
     007E 0803                      1- 1466     	BTRSS	STATUS,0
     007F 06rr                      1- 1467     	DECR	(_R_AIN2_DATA + 1),F
                                    1- 1468     	MGOTO	_00689_DS_
     0080 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1469     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1470     ;;unsigned compare: left >= lit (0x33=51), size=2
     0081                           1- 1471     _00680_DS_:
                                    1- 1472     	.line	875, "main.c"; 	else if(R_AIN2_DATA > 50)
     0081 2100                      1- 1473     	MOVIA	0x00
     0082 04rr                      1- 1474     	SUBAR	(_R_AIN2_DATA + 1),W
     0083 0903                      1- 1475     	BTRSS	STATUS,2
                                    1- 1476     	MGOTO	_00925_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
     0085 2133                      1- 1477     	MOVIA	0x33
     0086 04rr                      1- 1478     	SUBAR	_R_AIN2_DATA,W
     0087                           1- 1479     _00925_DS_:
     0087 0803                      1- 1480     	BTRSS	STATUS,0
                                    1- 1481     	MGOTO	_00689_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1482     	.line	876, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA - 40;
     0089 21D8                      1- 1483     	MOVIA	0xd8
     008A 03rr                      1- 1484     	ADDAR	_R_AIN2_DATA,F
     008B 0803                      1- 1485     	BTRSS	STATUS,0
     008C 06rr                      1- 1486     	DECR	(_R_AIN2_DATA + 1),F
                                    1- 1487     ;;unsigned compare: left < lit (0x18E=398), size=2
     008D                           1- 1488     _00689_DS_:
                                    1- 1489     	.line	878, "main.c"; 	if(R_AIN2_DATA >= 398)
     008D 2101                      1- 1490     	MOVIA	0x01
     008E 04rr                      1- 1491     	SUBAR	(_R_AIN2_DATA + 1),W
     008F 0903                      1- 1492     	BTRSS	STATUS,2
                                    1- 1493     	MGOTO	_00926_DS_
     0090 3rrr                      3-   63 m1      LGOTO rom_address
     0091 218E                      1- 1494     	MOVIA	0x8e
     0092 04rr                      1- 1495     	SUBAR	_R_AIN2_DATA,W
     0093                           1- 1496     _00926_DS_:
     0093 0803                      1- 1497     	BTRSS	STATUS,0
                                    1- 1498     	MGOTO	_00692_DS_
     0094 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1499     	.line	880, "main.c"; 	pwStep = 7;
     0095 2107                      1- 1500     	MOVIA	0x07
     0096 00rr                      1- 1501     	MOVAR	_pwStep
                                    1- 1502     ;;unsigned compare: left < lit (0x192=402), size=2
     0097                           1- 1503     _00692_DS_:
                                    1- 1504     	.line	882, "main.c"; 	if(R_AIN2_DATA >= 402)
     0097 2101                      1- 1505     	MOVIA	0x01
     0098 04rr                      1- 1506     	SUBAR	(_R_AIN2_DATA + 1),W
     0099 0903                      1- 1507     	BTRSS	STATUS,2
                                    1- 1508     	MGOTO	_00927_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
     009B 2192                      1- 1509     	MOVIA	0x92
     009C 04rr                      1- 1510     	SUBAR	_R_AIN2_DATA,W
     009D                           1- 1511     _00927_DS_:
     009D 0803                      1- 1512     	BTRSS	STATUS,0
                                    1- 1513     	MGOTO	_00764_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1514     	.line	884, "main.c"; 	pwStep = 8;
     009F 2108                      1- 1515     	MOVIA	0x08
     00A0 00rr                      1- 1516     	MOVAR	_pwStep
                                    1- 1517     	MGOTO	_00765_DS_
     00A1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1518     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1519     ;;unsigned compare: left >= lit (0x17D=381), size=2
     00A2                           1- 1520     _00764_DS_:
                                    1- 1521     	.line	886, "main.c"; 	else if(R_AIN2_DATA > 380)
     00A2 2101                      1- 1522     	MOVIA	0x01
     00A3 04rr                      1- 1523     	SUBAR	(_R_AIN2_DATA + 1),W
     00A4 0903                      1- 1524     	BTRSS	STATUS,2
                                    1- 1525     	MGOTO	_00928_DS_
     00A5 3rrr                      3-   63 m1      LGOTO rom_address
     00A6 217D                      1- 1526     	MOVIA	0x7d
     00A7 04rr                      1- 1527     	SUBAR	_R_AIN2_DATA,W
     00A8                           1- 1528     _00928_DS_:
     00A8 0803                      1- 1529     	BTRSS	STATUS,0
                                    1- 1530     	MGOTO	_00761_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1531     ;;unsigned compare: left < lit (0x6=6), size=1
                                    1- 1532     	.line	889, "main.c"; 	if(pwStep < 6)
     00AA 2106                      1- 1533     	MOVIA	0x06
     00AB 04rr                      1- 1534     	SUBAR	_pwStep,W
     00AC 0C03                      1- 1535     	BTRSC	STATUS,0
                                    1- 1536     	MGOTO	_00699_DS_
     00AD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1537     	.line	891, "main.c"; 	fullCount = 0;
     00AE 02rr                      1- 1538     	CLRR	_fullCount
     00AF 02rr                      1- 1539     	CLRR	(_fullCount + 1)
                                    1- 1540     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1541     ;;unsigned compare: left >= lit (0x17F=383), size=2
                                    1- 1542     	.line	892, "main.c"; 	if(R_AIN2_DATA > 382)
     00B0 2101                      1- 1543     	MOVIA	0x01
     00B1 04rr                      1- 1544     	SUBAR	(_R_AIN2_DATA + 1),W
     00B2 0903                      1- 1545     	BTRSS	STATUS,2
                                    1- 1546     	MGOTO	_00930_DS_
     00B3 3rrr                      3-   63 m1      LGOTO rom_address
     00B4 217F                      1- 1547     	MOVIA	0x7f
     00B5 04rr                      1- 1548     	SUBAR	_R_AIN2_DATA,W
     00B6                           1- 1549     _00930_DS_:
     00B6 0803                      1- 1550     	BTRSS	STATUS,0
                                    1- 1551     	MGOTO	_00700_DS_
     00B7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1552     	.line	893, "main.c"; 	pwStep = 6;
     00B8 2106                      1- 1553     	MOVIA	0x06
     00B9 00rr                      1- 1554     	MOVAR	_pwStep
                                    1- 1555     	MGOTO	_00700_DS_
     00BA 3rrr                      3-   63 m1      LGOTO rom_address
     00BB                           1- 1556     _00699_DS_:
                                    1- 1557     	.line	895, "main.c"; 	else if(chrgTime == 0 && R_AIN2_DATA < 396)
     00BB 01rr                      1- 1558     	MOVR	_chrgTime,W
     00BC 11rr                      1- 1559     	IORAR	(_chrgTime + 1),W
     00BD 0903                      1- 1560     	BTRSS	STATUS,2
                                    1- 1561     	MGOTO	_00700_DS_
     00BE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1562     ;;unsigned compare: left < lit (0x18C=396), size=2
     00BF 2101                      1- 1563     	MOVIA	0x01
     00C0 04rr                      1- 1564     	SUBAR	(_R_AIN2_DATA + 1),W
     00C1 0903                      1- 1565     	BTRSS	STATUS,2
                                    1- 1566     	MGOTO	_00931_DS_
     00C2 3rrr                      3-   63 m1      LGOTO rom_address
     00C3 218C                      1- 1567     	MOVIA	0x8c
     00C4 04rr                      1- 1568     	SUBAR	_R_AIN2_DATA,W
     00C5                           1- 1569     _00931_DS_:
     00C5 0C03                      1- 1570     	BTRSC	STATUS,0
                                    1- 1571     	MGOTO	_00700_DS_
     00C6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1572     	.line	897, "main.c"; 	pwStep = 6;
     00C7 2106                      1- 1573     	MOVIA	0x06
     00C8 00rr                      1- 1574     	MOVAR	_pwStep
                                    1- 1575     	.line	898, "main.c"; 	fullCount = 0;
     00C9 02rr                      1- 1576     	CLRR	_fullCount
     00CA 02rr                      1- 1577     	CLRR	(_fullCount + 1)
     00CB                           1- 1578     _00700_DS_:
                                    1- 1579     	.line	902, "main.c"; 	if(chrgTime > 0 && R_AIN2_DATA > 395 && chrgTime > 600)
     00CB 01rr                      1- 1580     	MOVR	_chrgTime,W
     00CC 11rr                      1- 1581     	IORAR	(_chrgTime + 1),W
     00CD 0D03                      1- 1582     	BTRSC	STATUS,2
                                    1- 1583     	MGOTO	_00765_DS_
     00CE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1584     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1585     ;;unsigned compare: left >= lit (0x18C=396), size=2
     00CF 2101                      1- 1586     	MOVIA	0x01
     00D0 04rr                      1- 1587     	SUBAR	(_R_AIN2_DATA + 1),W
     00D1 0903                      1- 1588     	BTRSS	STATUS,2
                                    1- 1589     	MGOTO	_00932_DS_
     00D2 3rrr                      3-   63 m1      LGOTO rom_address
     00D3 218C                      1- 1590     	MOVIA	0x8c
     00D4 04rr                      1- 1591     	SUBAR	_R_AIN2_DATA,W
     00D5                           1- 1592     _00932_DS_:
     00D5 0803                      1- 1593     	BTRSS	STATUS,0
                                    1- 1594     	MGOTO	_00765_DS_
     00D6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1595     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1596     ;;unsigned compare: left >= lit (0x259=601), size=2
     00D7 2102                      1- 1597     	MOVIA	0x02
     00D8 04rr                      1- 1598     	SUBAR	(_chrgTime + 1),W
     00D9 0903                      1- 1599     	BTRSS	STATUS,2
                                    1- 1600     	MGOTO	_00933_DS_
     00DA 3rrr                      3-   63 m1      LGOTO rom_address
     00DB 2159                      1- 1601     	MOVIA	0x59
     00DC 04rr                      1- 1602     	SUBAR	_chrgTime,W
     00DD                           1- 1603     _00933_DS_:
     00DD 0803                      1- 1604     	BTRSS	STATUS,0
                                    1- 1605     	MGOTO	_00765_DS_
     00DE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1606     	.line	904, "main.c"; 	chrgTime = 600;
     00DF 2158                      1- 1607     	MOVIA	0x58
     00E0 00rr                      1- 1608     	MOVAR	_chrgTime
     00E1 2102                      1- 1609     	MOVIA	0x02
     00E2 00rr                      1- 1610     	MOVAR	(_chrgTime + 1)
                                    1- 1611     	.line	905, "main.c"; 	pwStep = 7;
     00E3 2107                      1- 1612     	MOVIA	0x07
     00E4 00rr                      1- 1613     	MOVAR	_pwStep
                                    1- 1614     	MGOTO	_00765_DS_
     00E5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1615     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1616     ;;unsigned compare: left >= lit (0x169=361), size=2
     00E6                           1- 1617     _00761_DS_:
                                    1- 1618     	.line	908, "main.c"; 	else if(R_AIN2_DATA > 360)
     00E6 2101                      1- 1619     	MOVIA	0x01
     00E7 04rr                      1- 1620     	SUBAR	(_R_AIN2_DATA + 1),W
     00E8 0903                      1- 1621     	BTRSS	STATUS,2
                                    1- 1622     	MGOTO	_00934_DS_
     00E9 3rrr                      3-   63 m1      LGOTO rom_address
     00EA 2169                      1- 1623     	MOVIA	0x69
     00EB 04rr                      1- 1624     	SUBAR	_R_AIN2_DATA,W
     00EC                           1- 1625     _00934_DS_:
     00EC 0803                      1- 1626     	BTRSS	STATUS,0
                                    1- 1627     	MGOTO	_00758_DS_
     00ED 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1628     	.line	911, "main.c"; 	if(pwStep == 4)
     00EE 01rr                      1- 1629     	MOVR	_pwStep,W
     00EF 2404                      1- 1630     	XORIA	0x04
     00F0 0903                      1- 1631     	BTRSS	STATUS,2
                                    1- 1632     	MGOTO	_00708_DS_
     00F1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1633     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1634     ;;unsigned compare: left >= lit (0x16B=363), size=2
                                    1- 1635     	.line	913, "main.c"; 	if(R_AIN2_DATA > 362)
     00F2 2101                      1- 1636     	MOVIA	0x01
     00F3 04rr                      1- 1637     	SUBAR	(_R_AIN2_DATA + 1),W
     00F4 0903                      1- 1638     	BTRSS	STATUS,2
                                    1- 1639     	MGOTO	_00935_DS_
     00F5 3rrr                      3-   63 m1      LGOTO rom_address
     00F6 216B                      1- 1640     	MOVIA	0x6b
     00F7 04rr                      1- 1641     	SUBAR	_R_AIN2_DATA,W
     00F8                           1- 1642     _00935_DS_:
     00F8 0803                      1- 1643     	BTRSS	STATUS,0
                                    1- 1644     	MGOTO	_00708_DS_
     00F9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1645     	.line	914, "main.c"; 	pwStep = 5;
     00FA 2105                      1- 1646     	MOVIA	0x05
     00FB 00rr                      1- 1647     	MOVAR	_pwStep
                                    1- 1648     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1649     ;;unsigned compare: left >= lit (0x6=6), size=1
     00FC                           1- 1650     _00708_DS_:
                                    1- 1651     	.line	916, "main.c"; 	if(pwStep > 5)
     00FC 2106                      1- 1652     	MOVIA	0x06
     00FD 04rr                      1- 1653     	SUBAR	_pwStep,W
     00FE 0803                      1- 1654     	BTRSS	STATUS,0
                                    1- 1655     	MGOTO	_00712_DS_
     00FF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1656     ;;unsigned compare: left < lit (0x17C=380), size=2
                                    1- 1657     	.line	918, "main.c"; 	if(R_AIN2_DATA < 380)
     0100 2101                      1- 1658     	MOVIA	0x01
     0101 04rr                      1- 1659     	SUBAR	(_R_AIN2_DATA + 1),W
     0102 0903                      1- 1660     	BTRSS	STATUS,2
                                    1- 1661     	MGOTO	_00937_DS_
     0103 3rrr                      3-   63 m1      LGOTO rom_address
     0104 217C                      1- 1662     	MOVIA	0x7c
     0105 04rr                      1- 1663     	SUBAR	_R_AIN2_DATA,W
     0106                           1- 1664     _00937_DS_:
     0106 0C03                      1- 1665     	BTRSC	STATUS,0
                                    1- 1666     	MGOTO	_00713_DS_
     0107 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1667     	.line	919, "main.c"; 	pwStep = 5;
     0108 2105                      1- 1668     	MOVIA	0x05
     0109 00rr                      1- 1669     	MOVAR	_pwStep
                                    1- 1670     	MGOTO	_00713_DS_
     010A 3rrr                      3-   63 m1      LGOTO rom_address
     010B                           1- 1671     _00712_DS_:
                                    1- 1672     	.line	922, "main.c"; 	pwStep = 5;
     010B 2105                      1- 1673     	MOVIA	0x05
     010C 00rr                      1- 1674     	MOVAR	_pwStep
     010D                           1- 1675     _00713_DS_:
                                    1- 1676     	.line	923, "main.c"; 	chrgTime = 0;
     010D 02rr                      1- 1677     	CLRR	_chrgTime
     010E 02rr                      1- 1678     	CLRR	(_chrgTime + 1)
                                    1- 1679     	MGOTO	_00765_DS_
     010F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1680     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1681     ;;unsigned compare: left >= lit (0x14B=331), size=2
     0110                           1- 1682     _00758_DS_:
                                    1- 1683     	.line	925, "main.c"; 	else if(R_AIN2_DATA > 330)
     0110 2101                      1- 1684     	MOVIA	0x01
     0111 04rr                      1- 1685     	SUBAR	(_R_AIN2_DATA + 1),W
     0112 0903                      1- 1686     	BTRSS	STATUS,2
                                    1- 1687     	MGOTO	_00938_DS_
     0113 3rrr                      3-   63 m1      LGOTO rom_address
     0114 214B                      1- 1688     	MOVIA	0x4b
     0115 04rr                      1- 1689     	SUBAR	_R_AIN2_DATA,W
     0116                           1- 1690     _00938_DS_:
     0116 0803                      1- 1691     	BTRSS	STATUS,0
                                    1- 1692     	MGOTO	_00755_DS_
     0117 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1693     	.line	927, "main.c"; 	if(pwStep == 3)
     0118 01rr                      1- 1694     	MOVR	_pwStep,W
     0119 2403                      1- 1695     	XORIA	0x03
     011A 0903                      1- 1696     	BTRSS	STATUS,2
                                    1- 1697     	MGOTO	_00717_DS_
     011B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1698     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1699     ;;unsigned compare: left >= lit (0x150=336), size=2
                                    1- 1700     	.line	929, "main.c"; 	if(R_AIN2_DATA > 335)
     011C 2101                      1- 1701     	MOVIA	0x01
     011D 04rr                      1- 1702     	SUBAR	(_R_AIN2_DATA + 1),W
     011E 0903                      1- 1703     	BTRSS	STATUS,2
                                    1- 1704     	MGOTO	_00939_DS_
     011F 3rrr                      3-   63 m1      LGOTO rom_address
     0120 2150                      1- 1705     	MOVIA	0x50
     0121 04rr                      1- 1706     	SUBAR	_R_AIN2_DATA,W
     0122                           1- 1707     _00939_DS_:
     0122 0803                      1- 1708     	BTRSS	STATUS,0
                                    1- 1709     	MGOTO	_00717_DS_
     0123 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1710     	.line	930, "main.c"; 	pwStep = 4;
     0124 2104                      1- 1711     	MOVIA	0x04
     0125 00rr                      1- 1712     	MOVAR	_pwStep
                                    1- 1713     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1714     ;;unsigned compare: left >= lit (0x5=5), size=1
     0126                           1- 1715     _00717_DS_:
                                    1- 1716     	.line	932, "main.c"; 	if(pwStep > 4)
     0126 2105                      1- 1717     	MOVIA	0x05
     0127 04rr                      1- 1718     	SUBAR	_pwStep,W
     0128 0803                      1- 1719     	BTRSS	STATUS,0
                                    1- 1720     	MGOTO	_00721_DS_
     0129 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1721     ;;unsigned compare: left < lit (0x168=360), size=2
                                    1- 1722     	.line	934, "main.c"; 	if(R_AIN2_DATA < 360)
     012A 2101                      1- 1723     	MOVIA	0x01
     012B 04rr                      1- 1724     	SUBAR	(_R_AIN2_DATA + 1),W
     012C 0903                      1- 1725     	BTRSS	STATUS,2
                                    1- 1726     	MGOTO	_00941_DS_
     012D 3rrr                      3-   63 m1      LGOTO rom_address
     012E 2168                      1- 1727     	MOVIA	0x68
     012F 04rr                      1- 1728     	SUBAR	_R_AIN2_DATA,W
     0130                           1- 1729     _00941_DS_:
     0130 0C03                      1- 1730     	BTRSC	STATUS,0
                                    1- 1731     	MGOTO	_00722_DS_
     0131 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1732     	.line	935, "main.c"; 	pwStep = 4;
     0132 2104                      1- 1733     	MOVIA	0x04
     0133 00rr                      1- 1734     	MOVAR	_pwStep
                                    1- 1735     	MGOTO	_00722_DS_
     0134 3rrr                      3-   63 m1      LGOTO rom_address
     0135                           1- 1736     _00721_DS_:
                                    1- 1737     	.line	938, "main.c"; 	pwStep = 4;
     0135 2104                      1- 1738     	MOVIA	0x04
     0136 00rr                      1- 1739     	MOVAR	_pwStep
     0137                           1- 1740     _00722_DS_:
                                    1- 1741     	.line	939, "main.c"; 	chrgTime = 0;
     0137 02rr                      1- 1742     	CLRR	_chrgTime
     0138 02rr                      1- 1743     	CLRR	(_chrgTime + 1)
                                    1- 1744     	MGOTO	_00765_DS_
     0139 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1745     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1746     ;;unsigned compare: left >= lit (0x123=291), size=2
     013A                           1- 1747     _00755_DS_:
                                    1- 1748     	.line	941, "main.c"; 	else if(R_AIN2_DATA > 290)
     013A 2101                      1- 1749     	MOVIA	0x01
     013B 04rr                      1- 1750     	SUBAR	(_R_AIN2_DATA + 1),W
     013C 0903                      1- 1751     	BTRSS	STATUS,2
                                    1- 1752     	MGOTO	_00942_DS_
     013D 3rrr                      3-   63 m1      LGOTO rom_address
     013E 2123                      1- 1753     	MOVIA	0x23
     013F 04rr                      1- 1754     	SUBAR	_R_AIN2_DATA,W
     0140                           1- 1755     _00942_DS_:
     0140 0803                      1- 1756     	BTRSS	STATUS,0
                                    1- 1757     	MGOTO	_00752_DS_
     0141 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1758     	.line	943, "main.c"; 	if(pwStep == 2)
     0142 01rr                      1- 1759     	MOVR	_pwStep,W
     0143 2402                      1- 1760     	XORIA	0x02
     0144 0903                      1- 1761     	BTRSS	STATUS,2
                                    1- 1762     	MGOTO	_00726_DS_
     0145 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1763     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1764     ;;unsigned compare: left >= lit (0x128=296), size=2
                                    1- 1765     	.line	945, "main.c"; 	if(R_AIN2_DATA > 295)
     0146 2101                      1- 1766     	MOVIA	0x01
     0147 04rr                      1- 1767     	SUBAR	(_R_AIN2_DATA + 1),W
     0148 0903                      1- 1768     	BTRSS	STATUS,2
                                    1- 1769     	MGOTO	_00943_DS_
     0149 3rrr                      3-   63 m1      LGOTO rom_address
     014A 2128                      1- 1770     	MOVIA	0x28
     014B 04rr                      1- 1771     	SUBAR	_R_AIN2_DATA,W
     014C                           1- 1772     _00943_DS_:
     014C 0803                      1- 1773     	BTRSS	STATUS,0
                                    1- 1774     	MGOTO	_00726_DS_
     014D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1775     	.line	946, "main.c"; 	pwStep = 3;
     014E 2103                      1- 1776     	MOVIA	0x03
     014F 00rr                      1- 1777     	MOVAR	_pwStep
                                    1- 1778     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1779     ;;unsigned compare: left >= lit (0x4=4), size=1
     0150                           1- 1780     _00726_DS_:
                                    1- 1781     	.line	948, "main.c"; 	if(pwStep > 3)
     0150 2104                      1- 1782     	MOVIA	0x04
     0151 04rr                      1- 1783     	SUBAR	_pwStep,W
     0152 0803                      1- 1784     	BTRSS	STATUS,0
                                    1- 1785     	MGOTO	_00730_DS_
     0153 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1786     ;;unsigned compare: left < lit (0x154=340), size=2
                                    1- 1787     	.line	950, "main.c"; 	if(R_AIN2_DATA < 340)
     0154 2101                      1- 1788     	MOVIA	0x01
     0155 04rr                      1- 1789     	SUBAR	(_R_AIN2_DATA + 1),W
     0156 0903                      1- 1790     	BTRSS	STATUS,2
                                    1- 1791     	MGOTO	_00945_DS_
     0157 3rrr                      3-   63 m1      LGOTO rom_address
     0158 2154                      1- 1792     	MOVIA	0x54
     0159 04rr                      1- 1793     	SUBAR	_R_AIN2_DATA,W
     015A                           1- 1794     _00945_DS_:
     015A 0C03                      1- 1795     	BTRSC	STATUS,0
                                    1- 1796     	MGOTO	_00731_DS_
     015B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1797     	.line	951, "main.c"; 	pwStep = 3;
     015C 2103                      1- 1798     	MOVIA	0x03
     015D 00rr                      1- 1799     	MOVAR	_pwStep
                                    1- 1800     	MGOTO	_00731_DS_
     015E 3rrr                      3-   63 m1      LGOTO rom_address
     015F                           1- 1801     _00730_DS_:
                                    1- 1802     	.line	954, "main.c"; 	pwStep = 3;
     015F 2103                      1- 1803     	MOVIA	0x03
     0160 00rr                      1- 1804     	MOVAR	_pwStep
     0161                           1- 1805     _00731_DS_:
                                    1- 1806     	.line	955, "main.c"; 	chrgTime = 0;
     0161 02rr                      1- 1807     	CLRR	_chrgTime
     0162 02rr                      1- 1808     	CLRR	(_chrgTime + 1)
                                    1- 1809     	MGOTO	_00765_DS_
     0163 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1810     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1811     ;;unsigned compare: left >= lit (0xB5=181), size=2
     0164                           1- 1812     _00752_DS_:
                                    1- 1813     	.line	957, "main.c"; 	else if(R_AIN2_DATA > 180)
     0164 2100                      1- 1814     	MOVIA	0x00
     0165 04rr                      1- 1815     	SUBAR	(_R_AIN2_DATA + 1),W
     0166 0903                      1- 1816     	BTRSS	STATUS,2
                                    1- 1817     	MGOTO	_00946_DS_
     0167 3rrr                      3-   63 m1      LGOTO rom_address
     0168 21B5                      1- 1818     	MOVIA	0xb5
     0169 04rr                      1- 1819     	SUBAR	_R_AIN2_DATA,W
     016A                           1- 1820     _00946_DS_:
     016A 02rr                      1- 1821     	CLRR	r0x104B
     016B 14rr                      1- 1822     	RLR	r0x104B,F
     016C 01rr                      1- 1823     	MOVR	r0x104B,W
     016D 0D03                      1- 1824     	BTRSC	STATUS,2
                                    1- 1825     	MGOTO	_00749_DS_
     016E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1826     	.line	960, "main.c"; 	if(pwStep == 1)
     016F 01rr                      1- 1827     	MOVR	_pwStep,W
     0170 2401                      1- 1828     	XORIA	0x01
     0171 0903                      1- 1829     	BTRSS	STATUS,2
                                    1- 1830     	MGOTO	_00735_DS_
     0172 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1831     	.line	962, "main.c"; 	if(R_AIN2_DATA > 180)
     0173 01rr                      1- 1832     	MOVR	r0x104B,W
     0174 0D03                      1- 1833     	BTRSC	STATUS,2
                                    1- 1834     	MGOTO	_00735_DS_
     0175 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1835     	.line	963, "main.c"; 	pwStep = 2;
     0176 2102                      1- 1836     	MOVIA	0x02
     0177 00rr                      1- 1837     	MOVAR	_pwStep
                                    1- 1838     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1839     ;;unsigned compare: left >= lit (0x3=3), size=1
     0178                           1- 1840     _00735_DS_:
                                    1- 1841     	.line	965, "main.c"; 	if(pwStep > 2)
     0178 2103                      1- 1842     	MOVIA	0x03
     0179 04rr                      1- 1843     	SUBAR	_pwStep,W
     017A 0803                      1- 1844     	BTRSS	STATUS,0
                                    1- 1845     	MGOTO	_00739_DS_
     017B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1846     ;;unsigned compare: left < lit (0xF0=240), size=2
                                    1- 1847     	.line	967, "main.c"; 	if(R_AIN2_DATA < 240)
     017C 2100                      1- 1848     	MOVIA	0x00
     017D 04rr                      1- 1849     	SUBAR	(_R_AIN2_DATA + 1),W
     017E 0903                      1- 1850     	BTRSS	STATUS,2
                                    1- 1851     	MGOTO	_00948_DS_
     017F 3rrr                      3-   63 m1      LGOTO rom_address
     0180 21F0                      1- 1852     	MOVIA	0xf0
     0181 04rr                      1- 1853     	SUBAR	_R_AIN2_DATA,W
     0182                           1- 1854     _00948_DS_:
     0182 0C03                      1- 1855     	BTRSC	STATUS,0
                                    1- 1856     	MGOTO	_00740_DS_
     0183 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1857     	.line	968, "main.c"; 	pwStep = 2;
     0184 2102                      1- 1858     	MOVIA	0x02
     0185 00rr                      1- 1859     	MOVAR	_pwStep
                                    1- 1860     	MGOTO	_00740_DS_
     0186 3rrr                      3-   63 m1      LGOTO rom_address
     0187                           1- 1861     _00739_DS_:
                                    1- 1862     	.line	971, "main.c"; 	pwStep = 2;
     0187 2102                      1- 1863     	MOVIA	0x02
     0188 00rr                      1- 1864     	MOVAR	_pwStep
     0189                           1- 1865     _00740_DS_:
                                    1- 1866     	.line	972, "main.c"; 	chrgTime = 0;
     0189 02rr                      1- 1867     	CLRR	_chrgTime
     018A 02rr                      1- 1868     	CLRR	(_chrgTime + 1)
                                    1- 1869     	MGOTO	_00765_DS_
     018B 3rrr                      3-   63 m1      LGOTO rom_address
     018C                           1- 1870     _00749_DS_:
                                    1- 1871     	.line	974, "main.c"; 	else  if(R_AIN2_DATA > 0)
     018C 01rr                      1- 1872     	MOVR	_R_AIN2_DATA,W
     018D 11rr                      1- 1873     	IORAR	(_R_AIN2_DATA + 1),W
     018E 0D03                      1- 1874     	BTRSC	STATUS,2
                                    1- 1875     	MGOTO	_00765_DS_
     018F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1876     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1877     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 1878     	.line	977, "main.c"; 	if(pwStep > 1)
     0190 2102                      1- 1879     	MOVIA	0x02
     0191 04rr                      1- 1880     	SUBAR	_pwStep,W
     0192 0803                      1- 1881     	BTRSS	STATUS,0
                                    1- 1882     	MGOTO	_00744_DS_
     0193 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1883     ;;unsigned compare: left < lit (0xAA=170), size=2
                                    1- 1884     	.line	979, "main.c"; 	if(R_AIN2_DATA < 170)
     0194 2100                      1- 1885     	MOVIA	0x00
     0195 04rr                      1- 1886     	SUBAR	(_R_AIN2_DATA + 1),W
     0196 0903                      1- 1887     	BTRSS	STATUS,2
                                    1- 1888     	MGOTO	_00950_DS_
     0197 3rrr                      3-   63 m1      LGOTO rom_address
     0198 21AA                      1- 1889     	MOVIA	0xaa
     0199 04rr                      1- 1890     	SUBAR	_R_AIN2_DATA,W
     019A                           1- 1891     _00950_DS_:
     019A 0C03                      1- 1892     	BTRSC	STATUS,0
                                    1- 1893     	MGOTO	_00745_DS_
     019B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1894     	.line	980, "main.c"; 	pwStep = 1;
     019C 2101                      1- 1895     	MOVIA	0x01
     019D 00rr                      1- 1896     	MOVAR	_pwStep
                                    1- 1897     	MGOTO	_00745_DS_
     019E 3rrr                      3-   63 m1      LGOTO rom_address
     019F                           1- 1898     _00744_DS_:
                                    1- 1899     	.line	983, "main.c"; 	pwStep = 1;
     019F 2101                      1- 1900     	MOVIA	0x01
     01A0 00rr                      1- 1901     	MOVAR	_pwStep
     01A1                           1- 1902     _00745_DS_:
                                    1- 1903     	.line	984, "main.c"; 	chrgTime = 0;
     01A1 02rr                      1- 1904     	CLRR	_chrgTime
     01A2 02rr                      1- 1905     	CLRR	(_chrgTime + 1)
     01A3                           1- 1906     _00765_DS_:
                                    1- 1907     	.line	986, "main.c"; 	if(PORTA & 0x08)
     01A3 09rr                      1- 1908     	BTRSS	_PORTA,3
                                    1- 1909     	MGOTO	_00771_DS_
     01A4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1910     	.line	988, "main.c"; 	if(pwStep > prePwStep)
     01A5 01rr                      1- 1911     	MOVR	_pwStep,W
     01A6 04rr                      1- 1912     	SUBAR	_prePwStep,W
     01A7 0C03                      1- 1913     	BTRSC	STATUS,0
                                    1- 1914     	MGOTO	_00772_DS_
     01A8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1915     	.line	989, "main.c"; 	prePwStep = pwStep;
     01A9 01rr                      1- 1916     	MOVR	_pwStep,W
     01AA 00rr                      1- 1917     	MOVAR	_prePwStep
                                    1- 1918     	MGOTO	_00772_DS_
     01AB 3rrr                      3-   63 m1      LGOTO rom_address
     01AC                           1- 1919     _00771_DS_:
                                    1- 1920     	.line	993, "main.c"; 	if(pwStep < prePwStep)
     01AC 01rr                      1- 1921     	MOVR	_prePwStep,W
     01AD 04rr                      1- 1922     	SUBAR	_pwStep,W
     01AE 0C03                      1- 1923     	BTRSC	STATUS,0
                                    1- 1924     	MGOTO	_00772_DS_
     01AF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1925     	.line	994, "main.c"; 	prePwStep = pwStep;
     01B0 01rr                      1- 1926     	MOVR	_pwStep,W
     01B1 00rr                      1- 1927     	MOVAR	_prePwStep
     01B2                           1- 1928     _00772_DS_:
                                    1- 1929     	.line	996, "main.c"; 	if(prePwStep > 0)
     01B2 01rr                      1- 1930     	MOVR	_prePwStep,W
     01B3 0D03                      1- 1931     	BTRSC	STATUS,2
                                    1- 1932     	MGOTO	_00775_DS_
     01B4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1933     	.line	997, "main.c"; 	pwStep = prePwStep;
     01B5 01rr                      1- 1934     	MOVR	_prePwStep,W
     01B6 00rr                      1- 1935     	MOVAR	_pwStep
     01B7                           1- 1936     _00775_DS_:
                                    1- 1937     	.line	999, "main.c"; 	}
                                    1- 1938     	RETURN	
     01B7 0010                      3-   40 m1      ret
                                    1- 1939     ; exit point of _checkBatAD
                                    1- 1941     ;***
                                    1- 1942     ;  pBlock Stats: dbName = C
                                    1- 1943     ;***
                                    1- 1944     ;has an exit
                                    1- 1945     ;functions called:
                                    1- 1946     ;   _delay
                                    1- 1947     ;   _delay
                                    1- 1948     ;; Starting pCode block
                                    1- 1949     .segment "code"; module=main, function=_initAD
     0000                           1- 1951     _initAD:
                                    1- 1952     ; 2 exit points
                                    1- 1953     	.line	806, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1954     	MOVIA	0x84
     0001 00rr                      1- 1955     	MOVAR	_ADMD
                                    1- 1956     	.line	811, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1957     	CLRR	_ADVREFH
                                    1- 1958     	.line	816, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1959     	MOVIA	0x10
     0004 00rr                      1- 1960     	MOVAR	_ADR
                                    1- 1961     	.line	818, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1962     	MOVIA	0x03
     0006 00rr                      1- 1963     	MOVAR	_ADCR
                                    1- 1964     	.line	821, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1965     	BSR	_ADMDbits,4
                                    1- 1966     	.line	822, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1967     	MOVIA	0x64
                                    1- 1968     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1969     	.line	825, "main.c"; 	}
                                    1- 1970     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1971     ; exit point of _initAD
                                    1- 1973     ;***
                                    1- 1974     ;  pBlock Stats: dbName = C
                                    1- 1975     ;***
                                    1- 1976     ;has an exit
                                    1- 1977     ;2 compiler assigned registers:
                                    1- 1978     ;   r0x1033
                                    1- 1979     ;   r0x1034
                                    1- 1980     ;; Starting pCode block
                                    1- 1981     .segment "code"; module=main, function=_delay
                                    1- 1983     ;local variable name mapping:
     0000                           1- 1986     _delay:
                                    1- 1987     ; 2 exit points
                                    1- 1988     	.line	796, "main.c"; 	void delay(u8t time)
     0000 00rr                      1- 1989     	MOVAR	r0x1033
                                    1- 1990     	.line	798, "main.c"; 	for(u8t i=0;i<time;i++)
     0001 02rr                      1- 1991     	CLRR	r0x1034
     0002                           1- 1992     _00656_DS_:
     0002 01rr                      1- 1993     	MOVR	r0x1033,W
     0003 04rr                      1- 1994     	SUBAR	r0x1034,W
     0004 0C03                      1- 1995     	BTRSC	STATUS,0
                                    1- 1996     	MGOTO	_00658_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1997     	.line	799, "main.c"; 	NOP();
     0006 0000                      1- 1998     	nop
                                    1- 1999     	.line	798, "main.c"; 	for(u8t i=0;i<time;i++)
     0007 05rr                      1- 2000     	INCR	r0x1034,F
                                    1- 2001     	MGOTO	_00656_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
     0009                           1- 2002     _00658_DS_:
                                    1- 2003     	.line	800, "main.c"; 	}
                                    1- 2004     	RETURN	
     0009 0010                      3-   40 m1      ret
                                    1- 2005     ; exit point of _delay
                                    1- 2007     ;***
                                    1- 2008     ;  pBlock Stats: dbName = C
                                    1- 2009     ;***
                                    1- 2010     ;has an exit
                                    1- 2011     ;functions called:
                                    1- 2012     ;   _pwmStop
                                    1- 2013     ;   _pwm1Stop
                                    1- 2014     ;   _pwm1Init
                                    1- 2015     ;   _pwm1Stop
                                    1- 2016     ;   _pwmStop
                                    1- 2017     ;   _pwm1Stop
                                    1- 2018     ;   _pwm1Init
                                    1- 2019     ;   _pwm1Stop
                                    1- 2020     ;5 compiler assigned registers:
                                    1- 2021     ;   r0x1050
                                    1- 2022     ;   r0x1051
                                    1- 2023     ;   r0x1052
                                    1- 2024     ;   r0x1053
                                    1- 2025     ;   r0x1054
                                    1- 2026     ;; Starting pCode block
                                    1- 2027     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2029     _chrgCtr:
                                    1- 2030     ; 2 exit points
                                    1- 2031     	.line	639, "main.c"; 	if(PORTA & 0x08)
     0000 09rr                      1- 2032     	BTRSS	_PORTA,3
                                    1- 2033     	MGOTO	_00526_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2034     	.line	642, "main.c"; 	chrgFlag = 1;
     0002 19rr                      1- 2035     	BSR	_Status,3
                                    1- 2036     	.line	643, "main.c"; 	workStep = 0;
     0003 02rr                      1- 2037     	CLRR	_workStep
                                    1- 2038     	.line	644, "main.c"; 	ledLightTime = 0;
     0004 02rr                      1- 2039     	CLRR	_ledLightTime
                                    1- 2040     	.line	645, "main.c"; 	pwmStop();
                                    1- 2041     	MCALL	_pwmStop
     0005 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2042     ;;unsigned compare: left < lit (0x7=7), size=1
                                    1- 2043     	.line	647, "main.c"; 	if(pwStep >= 7)
     0006 2107                      1- 2044     	MOVIA	0x07
     0007 04rr                      1- 2045     	SUBAR	_pwStep,W
     0008 0803                      1- 2046     	BTRSS	STATUS,0
                                    1- 2047     	MGOTO	_00521_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2048     	.line	649, "main.c"; 	chrgStep = 9;
     000A 2109                      1- 2049     	MOVIA	0x09
     000B 00rr                      1- 2050     	MOVAR	_chrgStep
                                    1- 2051     	.line	651, "main.c"; 	ledStep = 6;
     000C 2106                      1- 2052     	MOVIA	0x06
     000D 00rr                      1- 2053     	MOVAR	_ledStep
                                    1- 2054     	.line	652, "main.c"; 	if(pwStep == 8 && ++fullCount >= 100)
     000E 01rr                      1- 2055     	MOVR	_pwStep,W
     000F 2408                      1- 2056     	XORIA	0x08
     0010 0903                      1- 2057     	BTRSS	STATUS,2
                                    1- 2058     	MGOTO	_00455_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
     0012 05rr                      1- 2059     	INCR	_fullCount,F
     0013 0D03                      1- 2060     	BTRSC	STATUS,2
     0014 05rr                      1- 2061     	INCR	(_fullCount + 1),F
                                    1- 2062     ;;unsigned compare: left < lit (0x64=100), size=2
     0015 2100                      1- 2063     	MOVIA	0x00
     0016 04rr                      1- 2064     	SUBAR	(_fullCount + 1),W
     0017 0903                      1- 2065     	BTRSS	STATUS,2
                                    1- 2066     	MGOTO	_00627_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
     0019 2164                      1- 2067     	MOVIA	0x64
     001A 04rr                      1- 2068     	SUBAR	_fullCount,W
     001B                           1- 2069     _00627_DS_:
     001B 0803                      1- 2070     	BTRSS	STATUS,0
                                    1- 2071     	MGOTO	_00455_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2072     	.line	654, "main.c"; 	fullCount = 100;
     001D 2164                      1- 2073     	MOVIA	0x64
     001E 00rr                      1- 2074     	MOVAR	_fullCount
     001F 02rr                      1- 2075     	CLRR	(_fullCount + 1)
                                    1- 2076     	.line	655, "main.c"; 	pwm1Stop();
                                    1- 2077     	MCALL	_pwm1Stop
     0020 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2078     	.line	656, "main.c"; 	PORTB &= 0xF7;
     0021 1Drr                      1- 2079     	BCR	_PORTB,3
                                    1- 2080     	MGOTO	_00528_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
     0023                           1- 2081     _00455_DS_:
                                    1- 2082     	.line	660, "main.c"; 	PWM1DUTY = 24;
     0023 2118                      1- 2083     	MOVIA	0x18
     0024 00rr                      1- 2084     	SFUN	_PWM1DUTY
                                    1- 2085     	MGOTO	_00528_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
     0026                           1- 2086     _00521_DS_:
                                    1- 2087     	.line	669, "main.c"; 	IOSTB &= 0xF7;
     0026 001r                      1- 2088     	IOSTR	_IOSTB
     0027 00rr                      1- 2089     	MOVAR	r0x1050
     0028 1Drr                      1- 2090     	BCR	r0x1050,3
     0029 01rr                      1- 2091     	MOVR	r0x1050,W
     002A 000r                      1- 2092     	IOST	_IOSTB
                                    1- 2093     	.line	670, "main.c"; 	fullCount = 0;
     002B 02rr                      1- 2094     	CLRR	_fullCount
     002C 02rr                      1- 2095     	CLRR	(_fullCount + 1)
                                    1- 2096     	.line	671, "main.c"; 	if(count500ms == 0 && pwStep < 7 && chrgStep < 9)
     002D 01rr                      1- 2097     	MOVR	_count500ms,W
     002E 0903                      1- 2098     	BTRSS	STATUS,2
                                    1- 2099     	MGOTO	_00466_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2100     ;;unsigned compare: left < lit (0x7=7), size=1
     0030 2107                      1- 2101     	MOVIA	0x07
     0031 04rr                      1- 2102     	SUBAR	_pwStep,W
     0032 0C03                      1- 2103     	BTRSC	STATUS,0
                                    1- 2104     	MGOTO	_00466_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2105     ;;unsigned compare: left < lit (0x9=9), size=1
     0034 2109                      1- 2106     	MOVIA	0x09
     0035 04rr                      1- 2107     	SUBAR	_chrgStep,W
     0036 0C03                      1- 2108     	BTRSC	STATUS,0
                                    1- 2109     	MGOTO	_00466_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2110     	.line	673, "main.c"; 	if(lockLedStep < pwStep - 1)
     0038 01rr                      1- 2111     	MOVR	_pwStep,W
     0039 00rr                      1- 2112     	MOVAR	r0x1050
     003A 02rr                      1- 2113     	CLRR	r0x1051
     003B 21FF                      1- 2114     	MOVIA	0xff
     003C 03rr                      1- 2115     	ADDAR	r0x1050,F
     003D 0803                      1- 2116     	BTRSS	STATUS,0
     003E 06rr                      1- 2117     	DECR	r0x1051,F
     003F 01rr                      1- 2118     	MOVR	_lockLedStep,W
     0040 00rr                      1- 2119     	MOVAR	r0x1052
                                    1- 2120     ;;1	CLRR	r0x1053
     0041 2100                      1- 2121     	MOVIA	0x00
     0042 2580                      1- 2122     	ADDIA	0x80
     0043 00rr                      1- 2123     	MOVAR	r0x1054
     0044 01rr                      1- 2124     	MOVR	r0x1051,W
     0045 2580                      1- 2125     	ADDIA	0x80
     0046 04rr                      1- 2126     	SUBAR	r0x1054,W
     0047 0903                      1- 2127     	BTRSS	STATUS,2
                                    1- 2128     	MGOTO	_00630_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 01rr                      1- 2129     	MOVR	r0x1050,W
     004A 04rr                      1- 2130     	SUBAR	r0x1052,W
     004B                           1- 2131     _00630_DS_:
     004B 0C03                      1- 2132     	BTRSC	STATUS,0
                                    1- 2133     	MGOTO	_00461_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2134     	.line	675, "main.c"; 	if(++lockLedTime > 20)
     004D 05rr                      1- 2135     	INCR	_lockLedTime,F
                                    1- 2136     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2137     ;;unsigned compare: left >= lit (0x15=21), size=1
     004E 2115                      1- 2138     	MOVIA	0x15
     004F 04rr                      1- 2139     	SUBAR	_lockLedTime,W
     0050 0803                      1- 2140     	BTRSS	STATUS,0
                                    1- 2141     	MGOTO	_00462_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2142     	.line	676, "main.c"; 	lockLedStep = pwStep - 1;
     0052 06rr                      1- 2143     	DECR	_pwStep,W
     0053 00rr                      1- 2144     	MOVAR	_lockLedStep
                                    1- 2145     	MGOTO	_00462_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
     0055                           1- 2146     _00461_DS_:
                                    1- 2147     	.line	680, "main.c"; 	lockLedTime = 0;
     0055 02rr                      1- 2148     	CLRR	_lockLedTime
     0056                           1- 2149     _00462_DS_:
                                    1- 2150     	.line	682, "main.c"; 	if(++ledStep > 6)
     0056 05rr                      1- 2151     	INCR	_ledStep,F
                                    1- 2152     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2153     ;;unsigned compare: left >= lit (0x7=7), size=1
     0057 2107                      1- 2154     	MOVIA	0x07
     0058 04rr                      1- 2155     	SUBAR	_ledStep,W
     0059 0803                      1- 2156     	BTRSS	STATUS,0
                                    1- 2157     	MGOTO	_00466_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2158     	.line	683, "main.c"; 	ledStep = lockLedStep;
     005B 01rr                      1- 2159     	MOVR	_lockLedStep,W
     005C 00rr                      1- 2160     	MOVAR	_ledStep
     005D                           1- 2161     _00466_DS_:
                                    1- 2162     	.line	685, "main.c"; 	if(count1s == 0)
     005D 01rr                      1- 2163     	MOVR	_count1s,W
     005E 0903                      1- 2164     	BTRSS	STATUS,2
                                    1- 2165     	MGOTO	_00519_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2166     	.line	687, "main.c"; 	if(chrgStep > 0)
     0060 01rr                      1- 2167     	MOVR	_chrgStep,W
     0061 0D03                      1- 2168     	BTRSC	STATUS,2
                                    1- 2169     	MGOTO	_00516_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2170     ;;unsigned compare: left < lit (0x50=80), size=2
                                    1- 2171     	.line	689, "main.c"; 	if(R_AIN2_DATA < 80)
     0063 2100                      1- 2172     	MOVIA	0x00
     0064 04rr                      1- 2173     	SUBAR	(_R_AIN2_DATA + 1),W
     0065 0903                      1- 2174     	BTRSS	STATUS,2
                                    1- 2175     	MGOTO	_00633_DS_
     0066 3rrr                      3-   63 m1      LGOTO rom_address
     0067 2150                      1- 2176     	MOVIA	0x50
     0068 04rr                      1- 2177     	SUBAR	_R_AIN2_DATA,W
     0069                           1- 2178     _00633_DS_:
     0069 0C03                      1- 2179     	BTRSC	STATUS,0
                                    1- 2180     	MGOTO	_00504_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2181     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2182     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 2183     	.line	691, "main.c"; 	if(chrgStep <= 1)
     006B 2102                      1- 2184     	MOVIA	0x02
     006C 04rr                      1- 2185     	SUBAR	_chrgStep,W
     006D 0C03                      1- 2186     	BTRSC	STATUS,0
                                    1- 2187     	MGOTO	_00519_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2188     	.line	693, "main.c"; 	chrgStep = 1;
     006F 2101                      1- 2189     	MOVIA	0x01
     0070 00rr                      1- 2190     	MOVAR	_chrgStep
                                    1- 2191     	.line	694, "main.c"; 	PWM1DUTY = 13;
     0071 210D                      1- 2192     	MOVIA	0x0d
     0072 00rr                      1- 2193     	SFUN	_PWM1DUTY
                                    1- 2194     	MGOTO	_00519_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2195     ;;unsigned compare: left < lit (0x6E=110), size=2
     0074                           1- 2196     _00504_DS_:
                                    1- 2197     	.line	697, "main.c"; 	else if(R_AIN2_DATA < 110)
     0074 2100                      1- 2198     	MOVIA	0x00
     0075 04rr                      1- 2199     	SUBAR	(_R_AIN2_DATA + 1),W
     0076 0903                      1- 2200     	BTRSS	STATUS,2
                                    1- 2201     	MGOTO	_00635_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
     0078 216E                      1- 2202     	MOVIA	0x6e
     0079 04rr                      1- 2203     	SUBAR	_R_AIN2_DATA,W
     007A                           1- 2204     _00635_DS_:
     007A 0C03                      1- 2205     	BTRSC	STATUS,0
                                    1- 2206     	MGOTO	_00501_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2207     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2208     ;;unsigned compare: left >= lit (0x3=3), size=1
                                    1- 2209     	.line	699, "main.c"; 	if(chrgStep <= 2)
     007C 2103                      1- 2210     	MOVIA	0x03
     007D 04rr                      1- 2211     	SUBAR	_chrgStep,W
     007E 0C03                      1- 2212     	BTRSC	STATUS,0
                                    1- 2213     	MGOTO	_00519_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2214     	.line	701, "main.c"; 	chrgStep = 2;
     0080 2102                      1- 2215     	MOVIA	0x02
     0081 00rr                      1- 2216     	MOVAR	_chrgStep
                                    1- 2217     	.line	702, "main.c"; 	PWM1DUTY = 15;
     0082 210F                      1- 2218     	MOVIA	0x0f
     0083 00rr                      1- 2219     	SFUN	_PWM1DUTY
                                    1- 2220     	MGOTO	_00519_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2221     ;;unsigned compare: left < lit (0x96=150), size=2
     0085                           1- 2222     _00501_DS_:
                                    1- 2223     	.line	705, "main.c"; 	else if(R_AIN2_DATA < 150)
     0085 2100                      1- 2224     	MOVIA	0x00
     0086 04rr                      1- 2225     	SUBAR	(_R_AIN2_DATA + 1),W
     0087 0903                      1- 2226     	BTRSS	STATUS,2
                                    1- 2227     	MGOTO	_00637_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
     0089 2196                      1- 2228     	MOVIA	0x96
     008A 04rr                      1- 2229     	SUBAR	_R_AIN2_DATA,W
     008B                           1- 2230     _00637_DS_:
     008B 0C03                      1- 2231     	BTRSC	STATUS,0
                                    1- 2232     	MGOTO	_00498_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2233     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2234     ;;unsigned compare: left >= lit (0x4=4), size=1
                                    1- 2235     	.line	707, "main.c"; 	if(chrgStep <= 3)
     008D 2104                      1- 2236     	MOVIA	0x04
     008E 04rr                      1- 2237     	SUBAR	_chrgStep,W
     008F 0C03                      1- 2238     	BTRSC	STATUS,0
                                    1- 2239     	MGOTO	_00519_DS_
     0090 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2240     	.line	709, "main.c"; 	chrgStep = 3;
     0091 2103                      1- 2241     	MOVIA	0x03
     0092 00rr                      1- 2242     	MOVAR	_chrgStep
                                    1- 2243     	.line	710, "main.c"; 	PWM1DUTY = 18;
     0093 2112                      1- 2244     	MOVIA	0x12
     0094 00rr                      1- 2245     	SFUN	_PWM1DUTY
                                    1- 2246     	MGOTO	_00519_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2247     ;;unsigned compare: left < lit (0xBE=190), size=2
     0096                           1- 2248     _00498_DS_:
                                    1- 2249     	.line	713, "main.c"; 	else if(R_AIN2_DATA < 190)
     0096 2100                      1- 2250     	MOVIA	0x00
     0097 04rr                      1- 2251     	SUBAR	(_R_AIN2_DATA + 1),W
     0098 0903                      1- 2252     	BTRSS	STATUS,2
                                    1- 2253     	MGOTO	_00639_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
     009A 21BE                      1- 2254     	MOVIA	0xbe
     009B 04rr                      1- 2255     	SUBAR	_R_AIN2_DATA,W
     009C                           1- 2256     _00639_DS_:
     009C 0C03                      1- 2257     	BTRSC	STATUS,0
                                    1- 2258     	MGOTO	_00495_DS_
     009D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2259     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2260     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 2261     	.line	715, "main.c"; 	if(chrgStep <= 4)
     009E 2105                      1- 2262     	MOVIA	0x05
     009F 04rr                      1- 2263     	SUBAR	_chrgStep,W
     00A0 0C03                      1- 2264     	BTRSC	STATUS,0
                                    1- 2265     	MGOTO	_00519_DS_
     00A1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2266     	.line	717, "main.c"; 	chrgStep = 4;
     00A2 2104                      1- 2267     	MOVIA	0x04
     00A3 00rr                      1- 2268     	MOVAR	_chrgStep
                                    1- 2269     	.line	718, "main.c"; 	PWM1DUTY = 19;
     00A4 2113                      1- 2270     	MOVIA	0x13
     00A5 00rr                      1- 2271     	SFUN	_PWM1DUTY
                                    1- 2272     	MGOTO	_00519_DS_
     00A6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2273     ;;unsigned compare: left < lit (0x104=260), size=2
     00A7                           1- 2274     _00495_DS_:
                                    1- 2275     	.line	721, "main.c"; 	else if(R_AIN2_DATA < 260)
     00A7 2101                      1- 2276     	MOVIA	0x01
     00A8 04rr                      1- 2277     	SUBAR	(_R_AIN2_DATA + 1),W
     00A9 0903                      1- 2278     	BTRSS	STATUS,2
                                    1- 2279     	MGOTO	_00641_DS_
     00AA 3rrr                      3-   63 m1      LGOTO rom_address
     00AB 2104                      1- 2280     	MOVIA	0x04
     00AC 04rr                      1- 2281     	SUBAR	_R_AIN2_DATA,W
     00AD                           1- 2282     _00641_DS_:
     00AD 0C03                      1- 2283     	BTRSC	STATUS,0
                                    1- 2284     	MGOTO	_00492_DS_
     00AE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2285     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2286     ;;unsigned compare: left >= lit (0x6=6), size=1
                                    1- 2287     	.line	723, "main.c"; 	if(chrgStep <= 5)
     00AF 2106                      1- 2288     	MOVIA	0x06
     00B0 04rr                      1- 2289     	SUBAR	_chrgStep,W
     00B1 0C03                      1- 2290     	BTRSC	STATUS,0
                                    1- 2291     	MGOTO	_00519_DS_
     00B2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2292     	.line	725, "main.c"; 	chrgStep = 5;
     00B3 2105                      1- 2293     	MOVIA	0x05
     00B4 00rr                      1- 2294     	MOVAR	_chrgStep
                                    1- 2295     	.line	726, "main.c"; 	PWM1DUTY = 20;
     00B5 2114                      1- 2296     	MOVIA	0x14
     00B6 00rr                      1- 2297     	SFUN	_PWM1DUTY
                                    1- 2298     	MGOTO	_00519_DS_
     00B7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2299     ;;unsigned compare: left < lit (0x136=310), size=2
     00B8                           1- 2300     _00492_DS_:
                                    1- 2301     	.line	729, "main.c"; 	else if(R_AIN2_DATA < 310)
     00B8 2101                      1- 2302     	MOVIA	0x01
     00B9 04rr                      1- 2303     	SUBAR	(_R_AIN2_DATA + 1),W
     00BA 0903                      1- 2304     	BTRSS	STATUS,2
                                    1- 2305     	MGOTO	_00643_DS_
     00BB 3rrr                      3-   63 m1      LGOTO rom_address
     00BC 2136                      1- 2306     	MOVIA	0x36
     00BD 04rr                      1- 2307     	SUBAR	_R_AIN2_DATA,W
     00BE                           1- 2308     _00643_DS_:
     00BE 0C03                      1- 2309     	BTRSC	STATUS,0
                                    1- 2310     	MGOTO	_00489_DS_
     00BF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2311     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2312     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 2313     	.line	731, "main.c"; 	if(chrgStep <= 6)
     00C0 2107                      1- 2314     	MOVIA	0x07
     00C1 04rr                      1- 2315     	SUBAR	_chrgStep,W
     00C2 0C03                      1- 2316     	BTRSC	STATUS,0
                                    1- 2317     	MGOTO	_00519_DS_
     00C3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2318     	.line	733, "main.c"; 	chrgStep = 6;
     00C4 2106                      1- 2319     	MOVIA	0x06
     00C5 00rr                      1- 2320     	MOVAR	_chrgStep
                                    1- 2321     	.line	734, "main.c"; 	PWM1DUTY = 21;
     00C6 2115                      1- 2322     	MOVIA	0x15
     00C7 00rr                      1- 2323     	SFUN	_PWM1DUTY
                                    1- 2324     	MGOTO	_00519_DS_
     00C8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2325     ;;unsigned compare: left < lit (0x154=340), size=2
     00C9                           1- 2326     _00489_DS_:
                                    1- 2327     	.line	737, "main.c"; 	else if(R_AIN2_DATA < 340)
     00C9 2101                      1- 2328     	MOVIA	0x01
     00CA 04rr                      1- 2329     	SUBAR	(_R_AIN2_DATA + 1),W
     00CB 0903                      1- 2330     	BTRSS	STATUS,2
                                    1- 2331     	MGOTO	_00645_DS_
     00CC 3rrr                      3-   63 m1      LGOTO rom_address
     00CD 2154                      1- 2332     	MOVIA	0x54
     00CE 04rr                      1- 2333     	SUBAR	_R_AIN2_DATA,W
     00CF                           1- 2334     _00645_DS_:
     00CF 0C03                      1- 2335     	BTRSC	STATUS,0
                                    1- 2336     	MGOTO	_00486_DS_
     00D0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2337     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2338     ;;unsigned compare: left >= lit (0x8=8), size=1
                                    1- 2339     	.line	739, "main.c"; 	if(chrgStep <= 7)
     00D1 2108                      1- 2340     	MOVIA	0x08
     00D2 04rr                      1- 2341     	SUBAR	_chrgStep,W
     00D3 0C03                      1- 2342     	BTRSC	STATUS,0
                                    1- 2343     	MGOTO	_00519_DS_
     00D4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2344     	.line	741, "main.c"; 	chrgStep = 7;
     00D5 2107                      1- 2345     	MOVIA	0x07
     00D6 00rr                      1- 2346     	MOVAR	_chrgStep
                                    1- 2347     	.line	742, "main.c"; 	PWM1DUTY = 22;
     00D7 2116                      1- 2348     	MOVIA	0x16
     00D8 00rr                      1- 2349     	SFUN	_PWM1DUTY
                                    1- 2350     	MGOTO	_00519_DS_
     00D9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2351     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2352     ;;unsigned compare: left >= lit (0x9=9), size=1
     00DA                           1- 2353     _00486_DS_:
                                    1- 2354     	.line	747, "main.c"; 	if(chrgStep <= 8)
     00DA 2109                      1- 2355     	MOVIA	0x09
     00DB 04rr                      1- 2356     	SUBAR	_chrgStep,W
     00DC 0C03                      1- 2357     	BTRSC	STATUS,0
                                    1- 2358     	MGOTO	_00519_DS_
     00DD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2359     	.line	749, "main.c"; 	chrgStep = 8;
     00DE 2108                      1- 2360     	MOVIA	0x08
     00DF 00rr                      1- 2361     	MOVAR	_chrgStep
                                    1- 2362     	.line	750, "main.c"; 	PWM1DUTY = 23;
     00E0 2117                      1- 2363     	MOVIA	0x17
     00E1 00rr                      1- 2364     	SFUN	_PWM1DUTY
                                    1- 2365     	MGOTO	_00519_DS_
     00E2 3rrr                      3-   63 m1      LGOTO rom_address
     00E3                           1- 2366     _00516_DS_:
                                    1- 2367     	.line	757, "main.c"; 	if(++currentChrgPWMDuty >= 11)
     00E3 05rr                      1- 2368     	INCR	_currentChrgPWMDuty,F
                                    1- 2369     ;;unsigned compare: left < lit (0xB=11), size=1
     00E4 210B                      1- 2370     	MOVIA	0x0b
     00E5 04rr                      1- 2371     	SUBAR	_currentChrgPWMDuty,W
     00E6 0803                      1- 2372     	BTRSS	STATUS,0
                                    1- 2373     	MGOTO	_00514_DS_
     00E7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2374     	.line	759, "main.c"; 	currentChrgPWMDuty = 11;
     00E8 210B                      1- 2375     	MOVIA	0x0b
     00E9 00rr                      1- 2376     	MOVAR	_currentChrgPWMDuty
                                    1- 2377     ;;unsigned compare: left < lit (0xC8=200), size=2
                                    1- 2378     	.line	760, "main.c"; 	if(R_AIN2_DATA < 200)
     00EA 2100                      1- 2379     	MOVIA	0x00
     00EB 04rr                      1- 2380     	SUBAR	(_R_AIN2_DATA + 1),W
     00EC 0903                      1- 2381     	BTRSS	STATUS,2
                                    1- 2382     	MGOTO	_00649_DS_
     00ED 3rrr                      3-   63 m1      LGOTO rom_address
     00EE 21C8                      1- 2383     	MOVIA	0xc8
     00EF 04rr                      1- 2384     	SUBAR	_R_AIN2_DATA,W
     00F0                           1- 2385     _00649_DS_:
     00F0 0C03                      1- 2386     	BTRSC	STATUS,0
                                    1- 2387     	MGOTO	_00511_DS_
     00F1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2388     	.line	762, "main.c"; 	if(++chrgDutyTime > 100)
     00F2 05rr                      1- 2389     	INCR	_chrgDutyTime,F
                                    1- 2390     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2391     ;;unsigned compare: left >= lit (0x65=101), size=1
     00F3 2165                      1- 2392     	MOVIA	0x65
     00F4 04rr                      1- 2393     	SUBAR	_chrgDutyTime,W
     00F5 0803                      1- 2394     	BTRSS	STATUS,0
                                    1- 2395     	MGOTO	_00514_DS_
     00F6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2396     	.line	763, "main.c"; 	chrgStep = 1;
     00F7 2101                      1- 2397     	MOVIA	0x01
     00F8 00rr                      1- 2398     	MOVAR	_chrgStep
                                    1- 2399     	MGOTO	_00514_DS_
     00F9 3rrr                      3-   63 m1      LGOTO rom_address
     00FA                           1- 2400     _00511_DS_:
                                    1- 2401     	.line	767, "main.c"; 	if(++chrgDutyTime > 20)
     00FA 05rr                      1- 2402     	INCR	_chrgDutyTime,F
                                    1- 2403     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2404     ;;unsigned compare: left >= lit (0x15=21), size=1
     00FB 2115                      1- 2405     	MOVIA	0x15
     00FC 04rr                      1- 2406     	SUBAR	_chrgDutyTime,W
     00FD 0803                      1- 2407     	BTRSS	STATUS,0
                                    1- 2408     	MGOTO	_00514_DS_
     00FE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2409     	.line	768, "main.c"; 	chrgStep = 1;
     00FF 2101                      1- 2410     	MOVIA	0x01
     0100 00rr                      1- 2411     	MOVAR	_chrgStep
     0101                           1- 2412     _00514_DS_:
                                    1- 2413     	.line	772, "main.c"; 	PWM1DUTY = currentChrgPWMDuty;
     0101 01rr                      1- 2414     	MOVR	_currentChrgPWMDuty,W
     0102 00rr                      1- 2415     	SFUN	_PWM1DUTY
     0103                           1- 2416     _00519_DS_:
                                    1- 2417     	.line	775, "main.c"; 	pwm1Init();
                                    1- 2418     	MCALL	_pwm1Init
     0103 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2419     	MGOTO	_00528_DS_
     0104 3rrr                      3-   63 m1      LGOTO rom_address
     0105                           1- 2420     _00526_DS_:
                                    1- 2421     	.line	781, "main.c"; 	currentChrgPWMDuty = 0;
     0105 02rr                      1- 2422     	CLRR	_currentChrgPWMDuty
                                    1- 2423     	.line	782, "main.c"; 	chrgStep = 0;
     0106 02rr                      1- 2424     	CLRR	_chrgStep
                                    1- 2425     	.line	783, "main.c"; 	chrgDutyTime = 0;
     0107 02rr                      1- 2426     	CLRR	_chrgDutyTime
                                    1- 2427     	.line	784, "main.c"; 	lockLedStep = 0;
     0108 02rr                      1- 2428     	CLRR	_lockLedStep
                                    1- 2429     	.line	785, "main.c"; 	chrgTime = 0;
     0109 02rr                      1- 2430     	CLRR	_chrgTime
     010A 02rr                      1- 2431     	CLRR	(_chrgTime + 1)
                                    1- 2432     	.line	786, "main.c"; 	pwm1Stop();
                                    1- 2433     	MCALL	_pwm1Stop
     010B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2434     	.line	787, "main.c"; 	if(workStep == 0)
     010C 01rr                      1- 2435     	MOVR	_workStep,W
     010D 0D03                      1- 2436     	BTRSC	STATUS,2
                                    1- 2437     	.line	788, "main.c"; 	ledStep = 0;
     010E 02rr                      1- 2438     	CLRR	_ledStep
                                    1- 2439     	.line	789, "main.c"; 	chrgFlag = 0;
     010F 1Drr                      1- 2440     	BCR	_Status,3
                                    1- 2441     	.line	790, "main.c"; 	chrgTime = 0;	//重置充电计数
     0110 02rr                      1- 2442     	CLRR	_chrgTime
     0111 02rr                      1- 2443     	CLRR	(_chrgTime + 1)
     0112                           1- 2444     _00528_DS_:
                                    1- 2445     	.line	793, "main.c"; 	}
                                    1- 2446     	RETURN	
     0112 0010                      3-   40 m1      ret
                                    1- 2447     ; exit point of _chrgCtr
                                    1- 2449     ;***
                                    1- 2450     ;  pBlock Stats: dbName = C
                                    1- 2451     ;***
                                    1- 2452     ;has an exit
                                    1- 2453     ;1 compiler assigned register :
                                    1- 2454     ;   r0x1055
                                    1- 2455     ;; Starting pCode block
                                    1- 2456     .segment "code"; module=main, function=_keyRead
                                    1- 2458     ;local variable name mapping:
     0000                           1- 2460     _keyRead:
                                    1- 2461     ; 2 exit points
                                    1- 2462     	.line	602, "main.c"; 	char keyRead(char keyStatus)	
     0000 00rr                      1- 2463     	MOVAR	r0x1055
                                    1- 2464     	.line	604, "main.c"; 	if(keyStatus)
     0001 01rr                      1- 2465     	MOVR	r0x1055,W
     0002 0D03                      1- 2466     	BTRSC	STATUS,2
                                    1- 2467     	MGOTO	_00447_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2468     	.line	606, "main.c"; 	keyCount++;
     0004 05rr                      1- 2469     	INCR	_keyCount,F
                                    1- 2470     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 2471     	.line	607, "main.c"; 	if(keyCount >= 100)
     0005 2164                      1- 2472     	MOVIA	0x64
     0006 04rr                      1- 2473     	SUBAR	_keyCount,W
     0007 0803                      1- 2474     	BTRSS	STATUS,0
                                    1- 2475     	MGOTO	_00448_DS_
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2476     	.line	609, "main.c"; 	keyCount = 100;
     0009 2164                      1- 2477     	MOVIA	0x64
     000A 00rr                      1- 2478     	MOVAR	_keyCount
                                    1- 2479     	.line	610, "main.c"; 	if(!longPressFlag)
     000B 0Crr                      1- 2480     	BTRSC	_Status,1
                                    1- 2481     	MGOTO	_00448_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2482     	.line	612, "main.c"; 	longPressFlag = 1;
     000D 18rr                      1- 2483     	BSR	_Status,1
                                    1- 2484     	.line	613, "main.c"; 	return 2;
     000E 2102                      1- 2485     	MOVIA	0x02
                                    1- 2486     	MGOTO	_00449_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2487     ;;unsigned compare: left < lit (0x64=100), size=1
     0010                           1- 2488     _00447_DS_:
                                    1- 2489     	.line	619, "main.c"; 	if(keyCount >= 100)
     0010 2164                      1- 2490     	MOVIA	0x64
     0011 04rr                      1- 2491     	SUBAR	_keyCount,W
     0012 0803                      1- 2492     	BTRSS	STATUS,0
                                    1- 2493     	MGOTO	_00444_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2494     	.line	621, "main.c"; 	keyCount = 0;
     0014 02rr                      1- 2495     	CLRR	_keyCount
                                    1- 2496     	.line	622, "main.c"; 	longPressFlag = 0;
     0015 1Crr                      1- 2497     	BCR	_Status,1
                                    1- 2498     	.line	623, "main.c"; 	return	0;
     0016 2100                      1- 2499     	MOVIA	0x00
                                    1- 2500     	MGOTO	_00449_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2501     ;;unsigned compare: left < lit (0x4=4), size=1
     0018                           1- 2502     _00444_DS_:
                                    1- 2503     	.line	625, "main.c"; 	else if(keyCount >= 4)
     0018 2104                      1- 2504     	MOVIA	0x04
     0019 04rr                      1- 2505     	SUBAR	_keyCount,W
     001A 0803                      1- 2506     	BTRSS	STATUS,0
                                    1- 2507     	MGOTO	_00445_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2508     	.line	627, "main.c"; 	keyCount = 0;
     001C 02rr                      1- 2509     	CLRR	_keyCount
                                    1- 2510     	.line	628, "main.c"; 	return	1;
     001D 2101                      1- 2511     	MOVIA	0x01
                                    1- 2512     	MGOTO	_00449_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
     001F                           1- 2513     _00445_DS_:
                                    1- 2514     	.line	630, "main.c"; 	keyCount = 0;
     001F 02rr                      1- 2515     	CLRR	_keyCount
     0020                           1- 2516     _00448_DS_:
                                    1- 2517     	.line	632, "main.c"; 	return 0;
     0020 2100                      1- 2518     	MOVIA	0x00
     0021                           1- 2519     _00449_DS_:
                                    1- 2520     	.line	633, "main.c"; 	}
                                    1- 2521     	RETURN	
     0021 0010                      3-   40 m1      ret
                                    1- 2522     ; exit point of _keyRead
                                    1- 2524     ;***
                                    1- 2525     ;  pBlock Stats: dbName = C
                                    1- 2526     ;***
                                    1- 2527     ;has an exit
                                    1- 2528     ;functions called:
                                    1- 2529     ;   _LedInput
                                    1- 2530     ;   _pwmStop
                                    1- 2531     ;   _pwm1Stop
                                    1- 2532     ;   _LedInput
                                    1- 2533     ;   _pwmStop
                                    1- 2534     ;   _pwm1Stop
                                    1- 2535     ;; Starting pCode block
                                    1- 2536     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2538     _gotoSleep:
                                    1- 2539     ; 2 exit points
                                    1- 2540     	.line	566, "main.c"; 	count900s = 0;
     0000 02rr                      1- 2541     	CLRR	_count900s
     0001 02rr                      1- 2542     	CLRR	(_count900s + 1)
                                    1- 2543     	.line	567, "main.c"; 	LedInput();
                                    1- 2544     	MCALL	_LedInput
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2545     	.line	568, "main.c"; 	sleepTime = 0;
     0003 02rr                      1- 2546     	CLRR	_sleepTime
     0004 02rr                      1- 2547     	CLRR	(_sleepTime + 1)
                                    1- 2548     	.line	570, "main.c"; 	pwmStop();
                                    1- 2549     	MCALL	_pwmStop
     0005 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2550     	.line	571, "main.c"; 	pwm1Stop();
                                    1- 2551     	MCALL	_pwm1Stop
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2552     	.line	572, "main.c"; 	IOSTA = C_PA7_Input | C_PA3_Input;
     0007 2188                      1- 2553     	MOVIA	0x88
     0008 000r                      1- 2554     	IOST	_IOSTA
                                    1- 2555     	.line	573, "main.c"; 	IOSTB = 0X00;
     0009 0200                      1- 2556     	CLRA	
     000A 000r                      1- 2557     	IOST	_IOSTB
                                    1- 2558     	.line	574, "main.c"; 	PORTA = 0x00;
     000B 02rr                      1- 2559     	CLRR	_PORTA
                                    1- 2560     	.line	575, "main.c"; 	PORTB = 0x00;
     000C 02rr                      1- 2561     	CLRR	_PORTB
                                    1- 2562     	.line	576, "main.c"; 	workStep = 0;
     000D 02rr                      1- 2563     	CLRR	_workStep
                                    1- 2564     	.line	577, "main.c"; 	AWUCON = 0x88;
     000E 2188                      1- 2565     	MOVIA	0x88
     000F 00rr                      1- 2566     	MOVAR	_AWUCON
                                    1- 2567     	.line	578, "main.c"; 	BWUCON = 0x00;
     0010 02rr                      1- 2568     	CLRR	_BWUCON
                                    1- 2569     	.line	579, "main.c"; 	redLedFlag = 0;
     0011 1Drr                      1- 2570     	BCR	_Status,2
                                    1- 2571     	.line	582, "main.c"; 	INTE =  C_INT_PABKey;
     0012 2102                      1- 2572     	MOVIA	0x02
     0013 00rr                      1- 2573     	MOVAR	_INTE
                                    1- 2574     	.line	583, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0014 2118                      1- 2575     	MOVIA	0x18
     0015 00rr                      1- 2576     	MOVAR	_PCON
                                    1- 2577     	.line	584, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0016 02rr                      1- 2578     	CLRR	_INTF
                                    1- 2579     	.line	585, "main.c"; 	CLRWDT();
     0017 0002                      1- 2580     	clrwdt
                                    1- 2581     	.line	586, "main.c"; 	ENI();
     0018 0004                      1- 2582     	ENI
                                    1- 2583     	.line	587, "main.c"; 	SLEEP();
     0019 0001                      1- 2584     	sleep
                                    1- 2585     	.line	588, "main.c"; 	AWUCON = 0x00;
     001A 02rr                      1- 2586     	CLRR	_AWUCON
                                    1- 2587     	.line	589, "main.c"; 	IOSTA = C_PA7_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     001B 21BE                      1- 2588     	MOVIA	0xbe
     001C 000r                      1- 2589     	IOST	_IOSTA
                                    1- 2590     	.line	590, "main.c"; 	IOSTB = 0x00;
     001D 0200                      1- 2591     	CLRA	
     001E 000r                      1- 2592     	IOST	_IOSTB
                                    1- 2593     	.line	591, "main.c"; 	PORTA = 0x00;
     001F 02rr                      1- 2594     	CLRR	_PORTA
                                    1- 2595     	.line	592, "main.c"; 	APHCON = 0x7F;
     0020 217F                      1- 2596     	MOVIA	0x7f
     0021 000r                      1- 2597     	IOST	_APHCON
                                    1- 2598     	.line	593, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     0022 2101                      1- 2599     	MOVIA	0x01
     0023 00rr                      1- 2600     	MOVAR	_INTE
                                    1- 2601     	.line	594, "main.c"; 	INTF = 0;
     0024 02rr                      1- 2602     	CLRR	_INTF
                                    1- 2603     	.line	596, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0025 21B8                      1- 2604     	MOVIA	0xb8
     0026 00rr                      1- 2605     	MOVAR	_PCON
                                    1- 2606     	.line	599, "main.c"; 	}
                                    1- 2607     	RETURN	
     0027 0010                      3-   40 m1      ret
                                    1- 2608     ; exit point of _gotoSleep
                                    1- 2610     ;***
                                    1- 2611     ;  pBlock Stats: dbName = C
                                    1- 2612     ;***
                                    1- 2613     ;has an exit
                                    1- 2614     ;; Starting pCode block
                                    1- 2615     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2617     _pwmStop:
                                    1- 2618     ; 2 exit points
                                    1- 2619     	.line	559, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2620     	CLRA	
     0001 00rr                      1- 2621     	SFUN	_T2CR1
                                    1- 2622     	.line	560, "main.c"; 	}
                                    1- 2623     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2624     ; exit point of _pwmStop
                                    1- 2626     ;***
                                    1- 2627     ;  pBlock Stats: dbName = C
                                    1- 2628     ;***
                                    1- 2629     ;has an exit
                                    1- 2630     ;1 compiler assigned register :
                                    1- 2631     ;   r0x1057
                                    1- 2632     ;; Starting pCode block
                                    1- 2633     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2635     _pwmInit:
                                    1- 2636     ; 2 exit points
                                    1- 2637     	.line	547, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2638     	SFUNR	_T2CR1
     0001 00rr                      1- 2639     	MOVAR	r0x1057
     0002 0Frr                      1- 2640     	BTRSC	r0x1057,7
                                    1- 2641     	.line	548, "main.c"; 	return;
                                    1- 2642     	MGOTO	_00424_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2643     	.line	549, "main.c"; 	TMRH = 0x00;
     0004 02rr                      1- 2644     	CLRR	_TMRH
                                    1- 2645     	.line	550, "main.c"; 	TMR2 = 100;							//频率为110K
     0005 2164                      1- 2646     	MOVIA	0x64
     0006 00rr                      1- 2647     	SFUN	_TMR2
                                    1- 2648     	.line	553, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0007 2101                      1- 2649     	MOVIA	0x01
     0008 00rr                      1- 2650     	SFUN	_T2CR2
                                    1- 2651     	.line	554, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     0009 2183                      1- 2652     	MOVIA	0x83
     000A 00rr                      1- 2653     	SFUN	_T2CR1
     000B                           1- 2654     _00424_DS_:
                                    1- 2655     	.line	555, "main.c"; 	}
                                    1- 2656     	RETURN	
     000B 0010                      3-   40 m1      ret
                                    1- 2657     ; exit point of _pwmInit
                                    1- 2659     ;***
                                    1- 2660     ;  pBlock Stats: dbName = C
                                    1- 2661     ;***
                                    1- 2662     ;has an exit
                                    1- 2663     ;; Starting pCode block
                                    1- 2664     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2666     _pwm1Stop:
                                    1- 2667     ; 2 exit points
                                    1- 2668     	.line	540, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2669     	CLRA	
     0001 00rr                      1- 2670     	SFUN	_T1CR1
                                    1- 2671     	.line	541, "main.c"; 	}
                                    1- 2672     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2673     ; exit point of _pwm1Stop
                                    1- 2675     ;***
                                    1- 2676     ;  pBlock Stats: dbName = C
                                    1- 2677     ;***
                                    1- 2678     ;has an exit
                                    1- 2679     ;1 compiler assigned register :
                                    1- 2680     ;   r0x104F
                                    1- 2681     ;; Starting pCode block
                                    1- 2682     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2684     _pwm1Init:
                                    1- 2685     ; 2 exit points
                                    1- 2686     	.line	527, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2687     	SFUNR	_T1CR1
     0001 00rr                      1- 2688     	MOVAR	r0x104F
     0002 0Frr                      1- 2689     	BTRSC	r0x104F,7
                                    1- 2690     	.line	528, "main.c"; 	return;
                                    1- 2691     	MGOTO	_00413_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2692     	.line	529, "main.c"; 	TMRH = 0x00;
     0004 02rr                      1- 2693     	CLRR	_TMRH
                                    1- 2694     	.line	530, "main.c"; 	TMR1 = 48;							//频率为110K
     0005 2130                      1- 2695     	MOVIA	0x30
     0006 00rr                      1- 2696     	SFUN	_TMR1
                                    1- 2697     	.line	533, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0007 0200                      1- 2698     	CLRA	
     0008 00rr                      1- 2699     	SFUN	_T1CR2
                                    1- 2700     	.line	534, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Dis;
     0009 2108                      1- 2701     	MOVIA	0x08
     000A 00rr                      1- 2702     	SFUN	_T1CR2
                                    1- 2703     	.line	535, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000B 2183                      1- 2704     	MOVIA	0x83
     000C 00rr                      1- 2705     	SFUN	_T1CR1
     000D                           1- 2706     _00413_DS_:
                                    1- 2707     	.line	536, "main.c"; 	}
                                    1- 2708     	RETURN	
     000D 0010                      3-   40 m1      ret
                                    1- 2709     ; exit point of _pwm1Init
                                    1- 2711     ;***
                                    1- 2712     ;  pBlock Stats: dbName = C
                                    1- 2713     ;***
                                    1- 2714     ;has an exit
                                    1- 2715     ;functions called:
                                    1- 2716     ;   _delay
                                    1- 2717     ;   _LedInput
                                    1- 2718     ;   _delay
                                    1- 2719     ;   _LedInput
                                    1- 2720     ;1 compiler assigned register :
                                    1- 2721     ;   r0x1058
                                    1- 2722     ;; Starting pCode block
                                    1- 2723     .segment "code"; module=main, function=_LED6ON
     0000                           1- 2725     _LED6ON:
                                    1- 2726     ; 2 exit points
                                    1- 2727     	.line	517, "main.c"; 	L2OUT;
     0000 001r                      1- 2728     	IOSTR	_IOSTA
     0001 00rr                      1- 2729     	MOVAR	r0x1058
     0002 1Crr                      1- 2730     	BCR	r0x1058,0
     0003 01rr                      1- 2731     	MOVR	r0x1058,W
     0004 000r                      1- 2732     	IOST	_IOSTA
                                    1- 2733     	.line	518, "main.c"; 	L1OUT;
     0005 001r                      1- 2734     	IOSTR	_IOSTB
     0006 00rr                      1- 2735     	MOVAR	r0x1058
     0007 1Crr                      1- 2736     	BCR	r0x1058,1
     0008 01rr                      1- 2737     	MOVR	r0x1058,W
     0009 000r                      1- 2738     	IOST	_IOSTB
                                    1- 2739     	.line	519, "main.c"; 	L1H;
     000A 18rr                      1- 2740     	BSR	_PORTB,1
                                    1- 2741     	.line	520, "main.c"; 	L2L;
     000B 1Crr                      1- 2742     	BCR	_PORTA,0
                                    1- 2743     	.line	521, "main.c"; 	delay(100);
     000C 2164                      1- 2744     	MOVIA	0x64
                                    1- 2745     	MCALL	_delay
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2746     	.line	522, "main.c"; 	LedInput();
                                    1- 2747     	MCALL	_LedInput
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2748     	.line	523, "main.c"; 	}
                                    1- 2749     	RETURN	
     000F 0010                      3-   40 m1      ret
                                    1- 2750     ; exit point of _LED6ON
                                    1- 2752     ;***
                                    1- 2753     ;  pBlock Stats: dbName = C
                                    1- 2754     ;***
                                    1- 2755     ;has an exit
                                    1- 2756     ;functions called:
                                    1- 2757     ;   _delay
                                    1- 2758     ;   _LedInput
                                    1- 2759     ;   _delay
                                    1- 2760     ;   _LedInput
                                    1- 2761     ;1 compiler assigned register :
                                    1- 2762     ;   r0x1059
                                    1- 2763     ;; Starting pCode block
                                    1- 2764     .segment "code"; module=main, function=_LED5ON
     0000                           1- 2766     _LED5ON:
                                    1- 2767     ; 2 exit points
                                    1- 2768     	.line	506, "main.c"; 	L2OUT;
     0000 001r                      1- 2769     	IOSTR	_IOSTA
     0001 00rr                      1- 2770     	MOVAR	r0x1059
     0002 1Crr                      1- 2771     	BCR	r0x1059,0
     0003 01rr                      1- 2772     	MOVR	r0x1059,W
     0004 000r                      1- 2773     	IOST	_IOSTA
                                    1- 2774     	.line	507, "main.c"; 	L1OUT;
     0005 001r                      1- 2775     	IOSTR	_IOSTB
     0006 00rr                      1- 2776     	MOVAR	r0x1059
     0007 1Crr                      1- 2777     	BCR	r0x1059,1
     0008 01rr                      1- 2778     	MOVR	r0x1059,W
     0009 000r                      1- 2779     	IOST	_IOSTB
                                    1- 2780     	.line	508, "main.c"; 	L2H;
     000A 18rr                      1- 2781     	BSR	_PORTA,0
                                    1- 2782     	.line	509, "main.c"; 	L1L;
     000B 1Crr                      1- 2783     	BCR	_PORTB,1
                                    1- 2784     	.line	510, "main.c"; 	delay(100);
     000C 2164                      1- 2785     	MOVIA	0x64
                                    1- 2786     	MCALL	_delay
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2787     	.line	511, "main.c"; 	LedInput();
                                    1- 2788     	MCALL	_LedInput
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2789     	.line	512, "main.c"; 	}
                                    1- 2790     	RETURN	
     000F 0010                      3-   40 m1      ret
                                    1- 2791     ; exit point of _LED5ON
                                    1- 2793     ;***
                                    1- 2794     ;  pBlock Stats: dbName = C
                                    1- 2795     ;***
                                    1- 2796     ;has an exit
                                    1- 2797     ;functions called:
                                    1- 2798     ;   _delay
                                    1- 2799     ;   _LedInput
                                    1- 2800     ;   _delay
                                    1- 2801     ;   _LedInput
                                    1- 2802     ;1 compiler assigned register :
                                    1- 2803     ;   r0x105A
                                    1- 2804     ;; Starting pCode block
                                    1- 2805     .segment "code"; module=main, function=_LED4ON
     0000                           1- 2807     _LED4ON:
                                    1- 2808     ; 2 exit points
                                    1- 2809     	.line	496, "main.c"; 	L3OUT;
     0000 001r                      1- 2810     	IOSTR	_IOSTB
     0001 00rr                      1- 2811     	MOVAR	r0x105A
     0002 1Crr                      1- 2812     	BCR	r0x105A,0
     0003 01rr                      1- 2813     	MOVR	r0x105A,W
     0004 000r                      1- 2814     	IOST	_IOSTB
                                    1- 2815     	.line	497, "main.c"; 	L2OUT;
     0005 001r                      1- 2816     	IOSTR	_IOSTA
     0006 00rr                      1- 2817     	MOVAR	r0x105A
     0007 1Crr                      1- 2818     	BCR	r0x105A,0
     0008 01rr                      1- 2819     	MOVR	r0x105A,W
     0009 000r                      1- 2820     	IOST	_IOSTA
                                    1- 2821     	.line	498, "main.c"; 	L3H;
     000A 18rr                      1- 2822     	BSR	_PORTB,0
                                    1- 2823     	.line	499, "main.c"; 	L2L;
     000B 1Crr                      1- 2824     	BCR	_PORTA,0
                                    1- 2825     	.line	500, "main.c"; 	delay(100);
     000C 2164                      1- 2826     	MOVIA	0x64
                                    1- 2827     	MCALL	_delay
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2828     	.line	501, "main.c"; 	LedInput();
                                    1- 2829     	MCALL	_LedInput
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2830     	.line	502, "main.c"; 	}
                                    1- 2831     	RETURN	
     000F 0010                      3-   40 m1      ret
                                    1- 2832     ; exit point of _LED4ON
                                    1- 2834     ;***
                                    1- 2835     ;  pBlock Stats: dbName = C
                                    1- 2836     ;***
                                    1- 2837     ;has an exit
                                    1- 2838     ;functions called:
                                    1- 2839     ;   _delay
                                    1- 2840     ;   _LedInput
                                    1- 2841     ;   _delay
                                    1- 2842     ;   _LedInput
                                    1- 2843     ;1 compiler assigned register :
                                    1- 2844     ;   r0x105B
                                    1- 2845     ;; Starting pCode block
                                    1- 2846     .segment "code"; module=main, function=_LED3ON
     0000                           1- 2848     _LED3ON:
                                    1- 2849     ; 2 exit points
                                    1- 2850     	.line	486, "main.c"; 	L3OUT;
     0000 001r                      1- 2851     	IOSTR	_IOSTB
     0001 00rr                      1- 2852     	MOVAR	r0x105B
     0002 1Crr                      1- 2853     	BCR	r0x105B,0
     0003 01rr                      1- 2854     	MOVR	r0x105B,W
     0004 000r                      1- 2855     	IOST	_IOSTB
                                    1- 2856     	.line	487, "main.c"; 	L1OUT;
     0005 001r                      1- 2857     	IOSTR	_IOSTB
     0006 00rr                      1- 2858     	MOVAR	r0x105B
     0007 1Crr                      1- 2859     	BCR	r0x105B,1
     0008 01rr                      1- 2860     	MOVR	r0x105B,W
     0009 000r                      1- 2861     	IOST	_IOSTB
                                    1- 2862     	.line	488, "main.c"; 	L1H;
     000A 18rr                      1- 2863     	BSR	_PORTB,1
                                    1- 2864     	.line	489, "main.c"; 	L3L;
     000B 1Crr                      1- 2865     	BCR	_PORTB,0
                                    1- 2866     	.line	490, "main.c"; 	delay(100);
     000C 2164                      1- 2867     	MOVIA	0x64
                                    1- 2868     	MCALL	_delay
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2869     	.line	491, "main.c"; 	LedInput();
                                    1- 2870     	MCALL	_LedInput
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2871     	.line	492, "main.c"; 	}
                                    1- 2872     	RETURN	
     000F 0010                      3-   40 m1      ret
                                    1- 2873     ; exit point of _LED3ON
                                    1- 2875     ;***
                                    1- 2876     ;  pBlock Stats: dbName = C
                                    1- 2877     ;***
                                    1- 2878     ;has an exit
                                    1- 2879     ;functions called:
                                    1- 2880     ;   _delay
                                    1- 2881     ;   _LedInput
                                    1- 2882     ;   _delay
                                    1- 2883     ;   _LedInput
                                    1- 2884     ;1 compiler assigned register :
                                    1- 2885     ;   r0x105C
                                    1- 2886     ;; Starting pCode block
                                    1- 2887     .segment "code"; module=main, function=_LED2ON
     0000                           1- 2889     _LED2ON:
                                    1- 2890     ; 2 exit points
                                    1- 2891     	.line	476, "main.c"; 	L2OUT;
     0000 001r                      1- 2892     	IOSTR	_IOSTA
     0001 00rr                      1- 2893     	MOVAR	r0x105C
     0002 1Crr                      1- 2894     	BCR	r0x105C,0
     0003 01rr                      1- 2895     	MOVR	r0x105C,W
     0004 000r                      1- 2896     	IOST	_IOSTA
                                    1- 2897     	.line	477, "main.c"; 	L3OUT;
     0005 001r                      1- 2898     	IOSTR	_IOSTB
     0006 00rr                      1- 2899     	MOVAR	r0x105C
     0007 1Crr                      1- 2900     	BCR	r0x105C,0
     0008 01rr                      1- 2901     	MOVR	r0x105C,W
     0009 000r                      1- 2902     	IOST	_IOSTB
                                    1- 2903     	.line	478, "main.c"; 	L2H;
     000A 18rr                      1- 2904     	BSR	_PORTA,0
                                    1- 2905     	.line	479, "main.c"; 	L3L;
     000B 1Crr                      1- 2906     	BCR	_PORTB,0
                                    1- 2907     	.line	480, "main.c"; 	delay(100);
     000C 2164                      1- 2908     	MOVIA	0x64
                                    1- 2909     	MCALL	_delay
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2910     	.line	481, "main.c"; 	LedInput();
                                    1- 2911     	MCALL	_LedInput
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2912     	.line	482, "main.c"; 	}
                                    1- 2913     	RETURN	
     000F 0010                      3-   40 m1      ret
                                    1- 2914     ; exit point of _LED2ON
                                    1- 2916     ;***
                                    1- 2917     ;  pBlock Stats: dbName = C
                                    1- 2918     ;***
                                    1- 2919     ;has an exit
                                    1- 2920     ;functions called:
                                    1- 2921     ;   _delay
                                    1- 2922     ;   _LedInput
                                    1- 2923     ;   _delay
                                    1- 2924     ;   _LedInput
                                    1- 2925     ;1 compiler assigned register :
                                    1- 2926     ;   r0x105D
                                    1- 2927     ;; Starting pCode block
                                    1- 2928     .segment "code"; module=main, function=_LED1ON
     0000                           1- 2930     _LED1ON:
                                    1- 2931     ; 2 exit points
                                    1- 2932     	.line	466, "main.c"; 	L3OUT;
     0000 001r                      1- 2933     	IOSTR	_IOSTB
     0001 00rr                      1- 2934     	MOVAR	r0x105D
     0002 1Crr                      1- 2935     	BCR	r0x105D,0
     0003 01rr                      1- 2936     	MOVR	r0x105D,W
     0004 000r                      1- 2937     	IOST	_IOSTB
                                    1- 2938     	.line	467, "main.c"; 	L1OUT;
     0005 001r                      1- 2939     	IOSTR	_IOSTB
     0006 00rr                      1- 2940     	MOVAR	r0x105D
     0007 1Crr                      1- 2941     	BCR	r0x105D,1
     0008 01rr                      1- 2942     	MOVR	r0x105D,W
     0009 000r                      1- 2943     	IOST	_IOSTB
                                    1- 2944     	.line	468, "main.c"; 	L3H;
     000A 18rr                      1- 2945     	BSR	_PORTB,0
                                    1- 2946     	.line	469, "main.c"; 	L1L;
     000B 1Crr                      1- 2947     	BCR	_PORTB,1
                                    1- 2948     	.line	470, "main.c"; 	delay(100);
     000C 2164                      1- 2949     	MOVIA	0x64
                                    1- 2950     	MCALL	_delay
     000D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2951     	.line	471, "main.c"; 	LedInput();
                                    1- 2952     	MCALL	_LedInput
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2953     	.line	472, "main.c"; 	}
                                    1- 2954     	RETURN	
     000F 0010                      3-   40 m1      ret
                                    1- 2955     ; exit point of _LED1ON
                                    1- 2957     ;***
                                    1- 2958     ;  pBlock Stats: dbName = C
                                    1- 2959     ;***
                                    1- 2960     ;has an exit
                                    1- 2961     ;1 compiler assigned register :
                                    1- 2962     ;   r0x1056
                                    1- 2963     ;; Starting pCode block
                                    1- 2964     .segment "code"; module=main, function=_LedInput
     0000                           1- 2966     _LedInput:
                                    1- 2967     ; 2 exit points
                                    1- 2968     	.line	458, "main.c"; 	IOSTA |= 0x01;
     0000 001r                      1- 2969     	IOSTR	_IOSTA
     0001 00rr                      1- 2970     	MOVAR	r0x1056
     0002 18rr                      1- 2971     	BSR	r0x1056,0
     0003 01rr                      1- 2972     	MOVR	r0x1056,W
     0004 000r                      1- 2973     	IOST	_IOSTA
                                    1- 2974     	.line	459, "main.c"; 	IOSTB |= 0x03;
     0005 001r                      1- 2975     	IOSTR	_IOSTB
     0006 00rr                      1- 2976     	MOVAR	r0x1056
     0007 2103                      1- 2977     	MOVIA	0x03
     0008 11rr                      1- 2978     	IORAR	r0x1056,F
     0009 01rr                      1- 2979     	MOVR	r0x1056,W
     000A 000r                      1- 2980     	IOST	_IOSTB
                                    1- 2981     	.line	460, "main.c"; 	PORTA &= 0xFE;
     000B 1Crr                      1- 2982     	BCR	_PORTA,0
                                    1- 2983     	.line	461, "main.c"; 	PORTB &= 0xFC;
     000C 21FC                      1- 2984     	MOVIA	0xfc
     000D 10rr                      1- 2985     	ANDAR	_PORTB,F
                                    1- 2986     	.line	462, "main.c"; 	}
                                    1- 2987     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2988     ; exit point of _LedInput
                                    1- 2990     ;***
                                    1- 2991     ;  pBlock Stats: dbName = C
                                    1- 2992     ;***
                                    1- 2993     ;has an exit
                                    1- 2994     ;functions called:
                                    1- 2995     ;   _LedInput
                                    1- 2996     ;   _LedInput
                                    1- 2997     ;   _LED6ON
                                    1- 2998     ;   _LED5ON
                                    1- 2999     ;   _LED4ON
                                    1- 3000     ;   _LED3ON
                                    1- 3001     ;   _LED2ON
                                    1- 3002     ;   _LED1ON
                                    1- 3003     ;   _LedInput
                                    1- 3004     ;   _LedInput
                                    1- 3005     ;   _LED6ON
                                    1- 3006     ;   _LED5ON
                                    1- 3007     ;   _LED4ON
                                    1- 3008     ;   _LED3ON
                                    1- 3009     ;   _LED2ON
                                    1- 3010     ;   _LED1ON
                                    1- 3011     ;; Starting pCode block
                                    1- 3012     .segment "code"; module=main, function=_ledShow
     0000                           1- 3014     _ledShow:
                                    1- 3015     ; 2 exit points
                                    1- 3016     	.line	393, "main.c"; 	if(ledDeadTime > 0 && workStep == 0)
     0000 01rr                      1- 3017     	MOVR	_ledDeadTime,W
     0001 0D03                      1- 3018     	BTRSC	STATUS,2
                                    1- 3019     	MGOTO	_00310_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
     0003 01rr                      1- 3020     	MOVR	_workStep,W
     0004 0903                      1- 3021     	BTRSS	STATUS,2
                                    1- 3022     	MGOTO	_00310_DS_
     0005 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3023     	.line	395, "main.c"; 	if(ledDeadTime % 2 == 0)
     0006 0Crr                      1- 3024     	BTRSC	_ledDeadTime,0
                                    1- 3025     	MGOTO	_00307_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3026     	.line	397, "main.c"; 	ledStep = 0;
     0008 02rr                      1- 3027     	CLRR	_ledStep
                                    1- 3028     	MGOTO	_00310_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
     000A                           1- 3029     _00307_DS_:
                                    1- 3030     	.line	401, "main.c"; 	ledStep = tempLedStep;
     000A 01rr                      1- 3031     	MOVR	_tempLedStep,W
     000B 00rr                      1- 3032     	MOVAR	_ledStep
     000C                           1- 3033     _00310_DS_:
                                    1- 3034     	.line	412, "main.c"; 	if(ledLightTime > 0 && pwStep > 0)
     000C 01rr                      1- 3035     	MOVR	_ledLightTime,W
     000D 0D03                      1- 3036     	BTRSC	STATUS,2
                                    1- 3037     	MGOTO	_00318_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
     000F 01rr                      1- 3038     	MOVR	_pwStep,W
     0010 0D03                      1- 3039     	BTRSC	STATUS,2
                                    1- 3040     	MGOTO	_00318_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3041     	.line	414, "main.c"; 	if(ledLightTime > 0)
     0012 01rr                      1- 3042     	MOVR	_ledLightTime,W
     0013 0D03                      1- 3043     	BTRSC	STATUS,2
                                    1- 3044     	MGOTO	_00318_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3045     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3046     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 3047     	.line	416, "main.c"; 	if(pwStep > 6 )
     0015 2107                      1- 3048     	MOVIA	0x07
     0016 04rr                      1- 3049     	SUBAR	_pwStep,W
     0017 0803                      1- 3050     	BTRSS	STATUS,0
                                    1- 3051     	MGOTO	_00313_DS_
     0018 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3052     	.line	417, "main.c"; 	ledStep = 6;
     0019 2106                      1- 3053     	MOVIA	0x06
     001A 00rr                      1- 3054     	MOVAR	_ledStep
                                    1- 3055     	MGOTO	_00318_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
     001C                           1- 3056     _00313_DS_:
                                    1- 3057     	.line	419, "main.c"; 	ledStep = pwStep;
     001C 01rr                      1- 3058     	MOVR	_pwStep,W
     001D 00rr                      1- 3059     	MOVAR	_ledStep
     001E                           1- 3060     _00318_DS_:
                                    1- 3061     	.line	422, "main.c"; 	if(shanshuoTime > 0 && workStep > 0 && pwStep == 0)
     001E 01rr                      1- 3062     	MOVR	_shanshuoTime,W
     001F 0D03                      1- 3063     	BTRSC	STATUS,2
                                    1- 3064     	MGOTO	_00324_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
     0021 01rr                      1- 3065     	MOVR	_workStep,W
     0022 0D03                      1- 3066     	BTRSC	STATUS,2
                                    1- 3067     	MGOTO	_00324_DS_
     0023 3rrr                      3-   63 m1      LGOTO rom_address
     0024 01rr                      1- 3068     	MOVR	_pwStep,W
     0025 0903                      1- 3069     	BTRSS	STATUS,2
                                    1- 3070     	MGOTO	_00324_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3071     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 3072     	.line	424, "main.c"; 	if(count1s < 50)
     0027 2132                      1- 3073     	MOVIA	0x32
     0028 04rr                      1- 3074     	SUBAR	_count1s,W
     0029 0C03                      1- 3075     	BTRSC	STATUS,0
                                    1- 3076     	MGOTO	_00321_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3077     	.line	425, "main.c"; 	ledStep = workStep;
     002B 01rr                      1- 3078     	MOVR	_workStep,W
     002C 00rr                      1- 3079     	MOVAR	_ledStep
                                    1- 3080     	MGOTO	_00324_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
     002E                           1- 3081     _00321_DS_:
                                    1- 3082     	.line	427, "main.c"; 	ledStep = 0;
     002E 02rr                      1- 3083     	CLRR	_ledStep
     002F                           1- 3084     _00324_DS_:
                                    1- 3085     	.line	430, "main.c"; 	LedInput();
                                    1- 3086     	MCALL	_LedInput
     002F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3087     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3088     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 3089     	.line	431, "main.c"; 	switch(ledStep)
     0030 2109                      1- 3090     	MOVIA	0x09
     0031 04rr                      1- 3091     	SUBAR	_ledStep,W
     0032 0C03                      1- 3092     	BTRSC	STATUS,0
                                    1- 3093     	MGOTO	_00337_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
     0034 21rr                      1- 3094     	MOVIA	((_00378_DS_ >> 8) & 0xff)
     0035 008A                      1- 3095     	MOVAR	PCHBUF
     0036 01rr                      1- 3096     	MOVR	_ledStep,W
     0037 25rr                      1- 3097     	ADDIA	_00378_DS_
     0038 0C03                      1- 3098     	BTRSC	STATUS,0
     0039 058A                      1- 3099     	INCR	PCHBUF,F
     003A 0082                      1- 3100     	MOVAR	PCL
     003B                           1- 3101     _00378_DS_:
                                    1- 3102     	MGOTO	_00327_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3103     	MGOTO	_00335_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3104     	MGOTO	_00334_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3105     	MGOTO	_00333_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3106     	MGOTO	_00332_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3107     	MGOTO	_00331_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3108     	MGOTO	_00330_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3109     	MGOTO	_00330_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3110     	MGOTO	_00330_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
     0044                           1- 3111     _00327_DS_:
                                    1- 3112     	.line	434, "main.c"; 	LedInput();
                                    1- 3113     	MCALL	_LedInput
     0044 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3114     	.line	435, "main.c"; 	break;
                                    1- 3115     	MGOTO	_00337_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
     0046                           1- 3116     _00330_DS_:
                                    1- 3117     	.line	439, "main.c"; 	LED6ON();
                                    1- 3118     	MCALL	_LED6ON
     0046 2rrr                      3-   66 m1      LCALL rom_address
     0047                           1- 3119     _00331_DS_:
                                    1- 3120     	.line	441, "main.c"; 	LED5ON();
                                    1- 3121     	MCALL	_LED5ON
     0047 2rrr                      3-   66 m1      LCALL rom_address
     0048                           1- 3122     _00332_DS_:
                                    1- 3123     	.line	443, "main.c"; 	LED4ON();
                                    1- 3124     	MCALL	_LED4ON
     0048 2rrr                      3-   66 m1      LCALL rom_address
     0049                           1- 3125     _00333_DS_:
                                    1- 3126     	.line	445, "main.c"; 	LED3ON();
                                    1- 3127     	MCALL	_LED3ON
     0049 2rrr                      3-   66 m1      LCALL rom_address
     004A                           1- 3128     _00334_DS_:
                                    1- 3129     	.line	447, "main.c"; 	LED2ON();
                                    1- 3130     	MCALL	_LED2ON
     004A 2rrr                      3-   66 m1      LCALL rom_address
     004B                           1- 3131     _00335_DS_:
                                    1- 3132     	.line	449, "main.c"; 	LED1ON();
                                    1- 3133     	MCALL	_LED1ON
     004B 2rrr                      3-   66 m1      LCALL rom_address
     004C                           1- 3134     _00337_DS_:
                                    1- 3135     	.line	452, "main.c"; 	}
                                    1- 3136     	RETURN	
     004C 0010                      3-   40 m1      ret
                                    1- 3137     ; exit point of _ledShow
                                    1- 3139     ;***
                                    1- 3140     ;  pBlock Stats: dbName = C
                                    1- 3141     ;***
                                    1- 3142     ;has an exit
                                    1- 3143     ;functions called:
                                    1- 3144     ;   _LedInput
                                    1- 3145     ;   _LedInput
                                    1- 3146     ;; Starting pCode block
                                    1- 3147     .segment "code"; module=main, function=_initSys
     0000                           1- 3149     _initSys:
                                    1- 3150     ; 2 exit points
                                    1- 3151     	.line	361, "main.c"; 	DISI();
     0000 0013                      1- 3152     	DISI
                                    1- 3153     	.line	362, "main.c"; 	IOSTA = C_PA7_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0001 21BE                      1- 3154     	MOVIA	0xbe
     0002 000r                      1- 3155     	IOST	_IOSTA
                                    1- 3156     	.line	363, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 3157     	CLRA	
     0004 000r                      1- 3158     	IOST	_IOSTB
                                    1- 3159     	.line	364, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 3160     	CLRR	_PORTB
                                    1- 3161     	.line	365, "main.c"; 	PORTA = 0x00;
     0006 02rr                      1- 3162     	CLRR	_PORTA
                                    1- 3163     	.line	366, "main.c"; 	LedInput();
                                    1- 3164     	MCALL	_LedInput
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3165     	.line	367, "main.c"; 	APHCON = 0x7F;
     0008 217F                      1- 3166     	MOVIA	0x7f
     0009 000r                      1- 3167     	IOST	_APHCON
                                    1- 3168     	.line	368, "main.c"; 	BPHCON = 0xFF;
     000A 21FF                      1- 3169     	MOVIA	0xff
     000B 00rr                      1- 3170     	MOVAR	_BPHCON
                                    1- 3171     	.line	369, "main.c"; 	ABPLCON = 0xFF;
     000C 00rr                      1- 3172     	MOVAR	_ABPLCON
                                    1- 3173     	.line	371, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000D 2101                      1- 3174     	MOVIA	0x01
     000E 00rr                      1- 3175     	MOVAR	_INTE
                                    1- 3176     	.line	373, "main.c"; 	PCON1 = C_TMR0_Dis;
     000F 0200                      1- 3177     	CLRA	
     0010 000r                      1- 3178     	IOST	_PCON1
                                    1- 3179     	.line	375, "main.c"; 	TMR0 = 55;
     0011 2137                      1- 3180     	MOVIA	0x37
     0012 00rr                      1- 3181     	MOVAR	_TMR0
                                    1- 3182     	.line	376, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0013 2101                      1- 3183     	MOVIA	0x01
     0014 0003                      1- 3184     	T0MD	
                                    1- 3185     	.line	378, "main.c"; 	PCON1 = C_TMR0_En;
     0015 000r                      1- 3186     	IOST	_PCON1
                                    1- 3187     	.line	381, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0016 2198                      1- 3188     	MOVIA	0x98
     0017 00rr                      1- 3189     	MOVAR	_PCON
                                    1- 3190     	.line	384, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0018 2101                      1- 3191     	MOVIA	0x01
     0019 000r                      1- 3192     	IOST	_PCON1
                                    1- 3193     	.line	385, "main.c"; 	ENI();
     001A 0004                      1- 3194     	ENI
                                    1- 3195     	.line	386, "main.c"; 	}
                                    1- 3196     	RETURN	
     001B 0010                      3-   40 m1      ret
                                    1- 3197     ; exit point of _initSys
                                    1- 3199     ;***
                                    1- 3200     ;  pBlock Stats: dbName = C
                                    1- 3201     ;***
                                    1- 3202     ;has an exit
                                    1- 3203     ;functions called:
                                    1- 3204     ;   _pwmStop
                                    1- 3205     ;   _pwmStop
                                    1- 3206     ;; Starting pCode block
                                    1- 3207     .segment "code"; module=main, function=_powerOff
     0000                           1- 3209     _powerOff:
                                    1- 3210     ; 2 exit points
                                    1- 3211     	.line	351, "main.c"; 	workStep = 0;
     0000 02rr                      1- 3212     	CLRR	_workStep
                                    1- 3213     	.line	352, "main.c"; 	ledStep = 0;
     0001 02rr                      1- 3214     	CLRR	_ledStep
                                    1- 3215     	.line	353, "main.c"; 	pwmStop();
                                    1- 3216     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3217     	.line	355, "main.c"; 	}
                                    1- 3218     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 3219     ; exit point of _powerOff
                                    1- 3221     ;***
                                    1- 3222     ;  pBlock Stats: dbName = C
                                    1- 3223     ;***
                                    1- 3224     ;has an exit
                                    1- 3225     ;functions called:
                                    1- 3226     ;   _keyRead
                                    1- 3227     ;   _powerOff
                                    1- 3228     ;   _powerOff
                                    1- 3229     ;   _pwmInit
                                    1- 3230     ;   _pwmInit
                                    1- 3231     ;   _powerOff
                                    1- 3232     ;   _powerOff
                                    1- 3233     ;   _pwmInit
                                    1- 3234     ;   _keyRead
                                    1- 3235     ;   _powerOff
                                    1- 3236     ;   _powerOff
                                    1- 3237     ;   _pwmInit
                                    1- 3238     ;   _pwmInit
                                    1- 3239     ;   _powerOff
                                    1- 3240     ;   _powerOff
                                    1- 3241     ;   _pwmInit
                                    1- 3242     ;1 compiler assigned register :
                                    1- 3243     ;   r0x105E
                                    1- 3244     ;; Starting pCode block
                                    1- 3245     .segment "code"; module=main, function=_keyCtr
                                    1- 3247     ;local variable name mapping:
     0000                           1- 3249     _keyCtr:
                                    1- 3250     ; 2 exit points
                                    1- 3251     	.line	277, "main.c"; 	char kclick = keyRead(0x80 & (~PORTA));
     0000 07rr                      1- 3252     	COMR	_PORTA,W
     0001 00rr                      1- 3253     	MOVAR	r0x105E
     0002 2180                      1- 3254     	MOVIA	0x80
     0003 10rr                      1- 3255     	ANDAR	r0x105E,F
     0004 01rr                      1- 3256     	MOVR	r0x105E,W
                                    1- 3257     	MCALL	_keyRead
     0005 2rrr                      3-   66 m1      LCALL rom_address
     0006 00rr                      1- 3258     	MOVAR	r0x105E
                                    1- 3259     	.line	278, "main.c"; 	if(kclick == 1)
     0007 2401                      1- 3260     	XORIA	0x01
     0008 0903                      1- 3261     	BTRSS	STATUS,2
                                    1- 3262     	MGOTO	_00291_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3263     	.line	280, "main.c"; 	count500ms = 0;
     000A 02rr                      1- 3264     	CLRR	_count500ms
                                    1- 3265     	.line	281, "main.c"; 	ledLightTime = 0;
     000B 02rr                      1- 3266     	CLRR	_ledLightTime
                                    1- 3267     	.line	282, "main.c"; 	if(pwStep == 0)
     000C 01rr                      1- 3268     	MOVR	_pwStep,W
     000D 0903                      1- 3269     	BTRSS	STATUS,2
                                    1- 3270     	MGOTO	_00259_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3271     	.line	284, "main.c"; 	sleepTime = 0;
     000F 02rr                      1- 3272     	CLRR	_sleepTime
     0010 02rr                      1- 3273     	CLRR	(_sleepTime + 1)
                                    1- 3274     	.line	285, "main.c"; 	powerOff();
                                    1- 3275     	MCALL	_powerOff
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3276     	.line	286, "main.c"; 	return;
                                    1- 3277     	MGOTO	_00293_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
     0013                           1- 3278     _00259_DS_:
                                    1- 3279     	.line	288, "main.c"; 	ledTime = 0;
     0013 02rr                      1- 3280     	CLRR	_ledTime
                                    1- 3281     	.line	289, "main.c"; 	if(++workStep > 6)
     0014 05rr                      1- 3282     	INCR	_workStep,F
                                    1- 3283     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3284     ;;unsigned compare: left >= lit (0x7=7), size=1
     0015 2107                      1- 3285     	MOVIA	0x07
     0016 04rr                      1- 3286     	SUBAR	_workStep,W
     0017 0C03                      1- 3287     	BTRSC	STATUS,0
                                    1- 3288     	.line	290, "main.c"; 	workStep = 0;
     0018 02rr                      1- 3289     	CLRR	_workStep
                                    1- 3290     	.line	291, "main.c"; 	if(workStep == 0)
     0019 01rr                      1- 3291     	MOVR	_workStep,W
     001A 0D03                      1- 3292     	BTRSC	STATUS,2
                                    1- 3293     	.line	292, "main.c"; 	powerOff();;
                                    1- 3294     	MCALL	_powerOff
     001B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3295     	.line	293, "main.c"; 	if(workStep == 1)
     001C 01rr                      1- 3296     	MOVR	_workStep,W
     001D 2401                      1- 3297     	XORIA	0x01
     001E 0903                      1- 3298     	BTRSS	STATUS,2
                                    1- 3299     	MGOTO	_00279_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3300     	.line	295, "main.c"; 	ledStep = 1;
     0020 2101                      1- 3301     	MOVIA	0x01
     0021 00rr                      1- 3302     	MOVAR	_ledStep
                                    1- 3303     	.line	296, "main.c"; 	ledLightTime = 0;
     0022 02rr                      1- 3304     	CLRR	_ledLightTime
                                    1- 3305     	.line	297, "main.c"; 	PWM2DUTY = 85;
     0023 2155                      1- 3306     	MOVIA	0x55
     0024 00rr                      1- 3307     	SFUN	_PWM2DUTY
                                    1- 3308     	.line	298, "main.c"; 	currentDuty = 85;
     0025 00rr                      1- 3309     	MOVAR	_currentDuty
                                    1- 3310     	.line	299, "main.c"; 	maxDuty = 77;
     0026 214D                      1- 3311     	MOVIA	0x4d
     0027 00rr                      1- 3312     	MOVAR	_maxDuty
                                    1- 3313     	.line	300, "main.c"; 	pwmInit();
                                    1- 3314     	MCALL	_pwmInit
     0028 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3315     	MGOTO	_00280_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
     002A                           1- 3316     _00279_DS_:
                                    1- 3317     	.line	302, "main.c"; 	else if(workStep == 2)
     002A 01rr                      1- 3318     	MOVR	_workStep,W
     002B 2402                      1- 3319     	XORIA	0x02
     002C 0903                      1- 3320     	BTRSS	STATUS,2
                                    1- 3321     	MGOTO	_00276_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3322     	.line	303, "main.c"; 	maxDuty = 81;
     002E 2151                      1- 3323     	MOVIA	0x51
     002F 00rr                      1- 3324     	MOVAR	_maxDuty
                                    1- 3325     	MGOTO	_00280_DS_
     0030 3rrr                      3-   63 m1      LGOTO rom_address
     0031                           1- 3326     _00276_DS_:
                                    1- 3327     	.line	304, "main.c"; 	else if(workStep == 3)
     0031 01rr                      1- 3328     	MOVR	_workStep,W
     0032 2403                      1- 3329     	XORIA	0x03
     0033 0903                      1- 3330     	BTRSS	STATUS,2
                                    1- 3331     	MGOTO	_00273_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3332     	.line	305, "main.c"; 	maxDuty = 85;
     0035 2155                      1- 3333     	MOVIA	0x55
     0036 00rr                      1- 3334     	MOVAR	_maxDuty
                                    1- 3335     	MGOTO	_00280_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
     0038                           1- 3336     _00273_DS_:
                                    1- 3337     	.line	306, "main.c"; 	else if(workStep == 4)
     0038 01rr                      1- 3338     	MOVR	_workStep,W
     0039 2404                      1- 3339     	XORIA	0x04
     003A 0903                      1- 3340     	BTRSS	STATUS,2
                                    1- 3341     	MGOTO	_00270_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3342     	.line	307, "main.c"; 	maxDuty = 90;
     003C 215A                      1- 3343     	MOVIA	0x5a
     003D 00rr                      1- 3344     	MOVAR	_maxDuty
                                    1- 3345     	MGOTO	_00280_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
     003F                           1- 3346     _00270_DS_:
                                    1- 3347     	.line	308, "main.c"; 	else if(workStep == 5)
     003F 01rr                      1- 3348     	MOVR	_workStep,W
     0040 2405                      1- 3349     	XORIA	0x05
     0041 0903                      1- 3350     	BTRSS	STATUS,2
                                    1- 3351     	MGOTO	_00267_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3352     	.line	309, "main.c"; 	maxDuty = 93;
     0043 215D                      1- 3353     	MOVIA	0x5d
     0044 00rr                      1- 3354     	MOVAR	_maxDuty
                                    1- 3355     	MGOTO	_00280_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
     0046                           1- 3356     _00267_DS_:
                                    1- 3357     	.line	310, "main.c"; 	else if(workStep == 6)
     0046 01rr                      1- 3358     	MOVR	_workStep,W
     0047 2406                      1- 3359     	XORIA	0x06
     0048 0903                      1- 3360     	BTRSS	STATUS,2
                                    1- 3361     	MGOTO	_00280_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3362     	.line	311, "main.c"; 	maxDuty = 97;
     004A 2161                      1- 3363     	MOVIA	0x61
     004B 00rr                      1- 3364     	MOVAR	_maxDuty
                                    1- 3365     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3366     ;;unsigned compare: left >= lit (0x2=2), size=1
     004C                           1- 3367     _00280_DS_:
                                    1- 3368     	.line	312, "main.c"; 	if(workStep > 1)
     004C 2102                      1- 3369     	MOVIA	0x02
     004D 04rr                      1- 3370     	SUBAR	_workStep,W
     004E 0803                      1- 3371     	BTRSS	STATUS,0
                                    1- 3372     	MGOTO	_00282_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3373     	.line	314, "main.c"; 	PWM2DUTY = maxDuty;
     0050 01rr                      1- 3374     	MOVR	_maxDuty,W
     0051 00rr                      1- 3375     	SFUN	_PWM2DUTY
                                    1- 3376     	.line	315, "main.c"; 	pwmInit();
                                    1- 3377     	MCALL	_pwmInit
     0052 2rrr                      3-   66 m1      LCALL rom_address
     0053                           1- 3378     _00282_DS_:
                                    1- 3379     	.line	317, "main.c"; 	ledStep = workStep;
     0053 01rr                      1- 3380     	MOVR	_workStep,W
     0054 00rr                      1- 3381     	MOVAR	_ledStep
                                    1- 3382     	MGOTO	_00293_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
     0056                           1- 3383     _00291_DS_:
                                    1- 3384     	.line	319, "main.c"; 	else if(kclick == 2)
     0056 01rr                      1- 3385     	MOVR	r0x105E,W
     0057 2402                      1- 3386     	XORIA	0x02
     0058 0903                      1- 3387     	BTRSS	STATUS,2
                                    1- 3388     	MGOTO	_00293_DS_
     0059 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3389     	.line	321, "main.c"; 	if(workStep > 0)
     005A 01rr                      1- 3390     	MOVR	_workStep,W
     005B 0D03                      1- 3391     	BTRSC	STATUS,2
                                    1- 3392     	MGOTO	_00286_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3393     	.line	323, "main.c"; 	powerOff();
                                    1- 3394     	MCALL	_powerOff
     005D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3395     	MGOTO	_00287_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
     005F                           1- 3396     _00286_DS_:
                                    1- 3397     	.line	327, "main.c"; 	if(pwStep == 0)
     005F 01rr                      1- 3398     	MOVR	_pwStep,W
     0060 0903                      1- 3399     	BTRSS	STATUS,2
                                    1- 3400     	MGOTO	_00284_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3401     	.line	329, "main.c"; 	sleepTime = 0;
     0062 02rr                      1- 3402     	CLRR	_sleepTime
     0063 02rr                      1- 3403     	CLRR	(_sleepTime + 1)
                                    1- 3404     	.line	330, "main.c"; 	powerOff();
                                    1- 3405     	MCALL	_powerOff
     0064 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3406     	.line	331, "main.c"; 	return;
                                    1- 3407     	MGOTO	_00293_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
     0066                           1- 3408     _00284_DS_:
                                    1- 3409     	.line	333, "main.c"; 	ledLightTime = 0;
     0066 02rr                      1- 3410     	CLRR	_ledLightTime
                                    1- 3411     	.line	334, "main.c"; 	ledStep = 1;
     0067 2101                      1- 3412     	MOVIA	0x01
     0068 00rr                      1- 3413     	MOVAR	_ledStep
                                    1- 3414     	.line	335, "main.c"; 	workStep = 1;
     0069 00rr                      1- 3415     	MOVAR	_workStep
                                    1- 3416     	.line	336, "main.c"; 	PWM2DUTY = 85;
     006A 2155                      1- 3417     	MOVIA	0x55
     006B 00rr                      1- 3418     	SFUN	_PWM2DUTY
                                    1- 3419     	.line	337, "main.c"; 	currentDuty = 85;
     006C 00rr                      1- 3420     	MOVAR	_currentDuty
                                    1- 3421     	.line	338, "main.c"; 	maxDuty = 77;
     006D 214D                      1- 3422     	MOVIA	0x4d
     006E 00rr                      1- 3423     	MOVAR	_maxDuty
                                    1- 3424     	.line	339, "main.c"; 	pwmInit();
                                    1- 3425     	MCALL	_pwmInit
     006F 2rrr                      3-   66 m1      LCALL rom_address
     0070                           1- 3426     _00287_DS_:
                                    1- 3427     	.line	344, "main.c"; 	ledStep = workStep;
     0070 01rr                      1- 3428     	MOVR	_workStep,W
     0071 00rr                      1- 3429     	MOVAR	_ledStep
     0072                           1- 3430     _00293_DS_:
                                    1- 3431     	.line	346, "main.c"; 	}
                                    1- 3432     	RETURN	
     0072 0010                      3-   40 m1      ret
                                    1- 3433     ; exit point of _keyCtr
                                    1- 3436     ;	code size estimation:
                                    1- 3437     ;	 1529+    0 =  1529 instructions ( 3058 byte)
                                    1- 3439     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810613
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000000
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b061d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B061D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000005FF
DATA ROM     = 0x00000000 - 0x000005FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
