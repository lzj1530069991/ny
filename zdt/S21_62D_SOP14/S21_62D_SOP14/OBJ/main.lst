
                    Nyquest Technology Co., Ltd.

NYASM 2.28

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_fgCtr
                                    1-   18     	extern	_LedCtr2
                                    1-   19     	extern	_checkInAD
                                    1-   20     	extern	_PORTAbits
                                    1-   21     	extern	_PORTBbits
                                    1-   22     	extern	_PCONbits
                                    1-   23     	extern	_BWUCONbits
                                    1-   24     	extern	_ABPLCONbits
                                    1-   25     	extern	_BPHCONbits
                                    1-   26     	extern	_INTEbits
                                    1-   27     	extern	_INTFbits
                                    1-   28     	extern	_ADMDbits
                                    1-   29     	extern	_ADRbits
                                    1-   30     	extern	_ADVREFHbits
                                    1-   31     	extern	_ADCRbits
                                    1-   32     	extern	_AWUCONbits
                                    1-   33     	extern	_PACONbits
                                    1-   34     	extern	_INTEDGbits
                                    1-   35     	extern	_ANAENbits
                                    1-   36     	extern	_RFCbits
                                    1-   37     	extern	_INTE2bits
                                    1-   38     	extern	_INDF
                                    1-   39     	extern	_TMR0
                                    1-   40     	extern	_PCL
                                    1-   41     	extern	_STATUS
                                    1-   42     	extern	_FSR
                                    1-   43     	extern	_PORTA
                                    1-   44     	extern	_PORTB
                                    1-   45     	extern	_PCON
                                    1-   46     	extern	_BWUCON
                                    1-   47     	extern	_PCHBUF
                                    1-   48     	extern	_ABPLCON
                                    1-   49     	extern	_BPHCON
                                    1-   50     	extern	_INTE
                                    1-   51     	extern	_INTF
                                    1-   52     	extern	_ADMD
                                    1-   53     	extern	_ADR
                                    1-   54     	extern	_ADD
                                    1-   55     	extern	_ADVREFH
                                    1-   56     	extern	_ADCR
                                    1-   57     	extern	_AWUCON
                                    1-   58     	extern	_PACON
                                    1-   59     	extern	_INTEDG
                                    1-   60     	extern	_TMRH
                                    1-   61     	extern	_ANAEN
                                    1-   62     	extern	_RFC
                                    1-   63     	extern	_TM3RH
                                    1-   64     	extern	_INTE2
                                    1-   65     	extern	_TMR1
                                    1-   66     	extern	_T1CR1
                                    1-   67     	extern	_T1CR2
                                    1-   68     	extern	_PWM1DUTY
                                    1-   69     	extern	_PS1CV
                                    1-   70     	extern	_BZ1CR
                                    1-   71     	extern	_IRCR
                                    1-   72     	extern	_TBHP
                                    1-   73     	extern	_TBHD
                                    1-   74     	extern	_TMR2
                                    1-   75     	extern	_T2CR1
                                    1-   76     	extern	_T2CR2
                                    1-   77     	extern	_PWM2DUTY
                                    1-   78     	extern	_PS2CV
                                    1-   79     	extern	_BZ2CR
                                    1-   80     	extern	_OSCCR
                                    1-   81     	extern	_TMR3
                                    1-   82     	extern	_T3CR1
                                    1-   83     	extern	_T3CR2
                                    1-   84     	extern	_PWM3DUTY
                                    1-   85     	extern	_PS3CV
                                    1-   86     	extern	_BZ3CR
                                    1-   87     	extern	_IOSTA
                                    1-   88     	extern	_IOSTB
                                    1-   89     	extern	_APHCON
                                    1-   90     	extern	_PS0CV
                                    1-   91     	extern	_BODCON
                                    1-   92     	extern	_CMPCR
                                    1-   93     	extern	_PCON1
                                    1-   94     	extern	_T0MD
                                    1-   95     	extern	___sdcc_saved_fsr
                                    1-   96     	extern	___sdcc_saved_stk00
                                    1-   97     	extern	___sdcc_saved_stk01
                                    1-   98     	extern	__nyc_ny8_startup
                                    1-   99     ;--------------------------------------------------------
                                    1-  100     ; global declarations
                                    1-  101     ;--------------------------------------------------------
                                    1-  102     	extern	_F_wait_eoc
                                    1-  103     	extern	_F_AIN2_Convert
                                    1-  104     	extern	_F_AIN3_Convert
                                    1-  105     	extern	_F_AIN4_Convert
                                    1-  106     	extern	_checkChrgV
                                    1-  107     	extern	_checkBatAD
                                    1-  108     	extern	_initAD
                                    1-  109     	extern	_delay
                                    1-  110     	extern	_chrgCtr
                                    1-  111     	extern	_keyRead
                                    1-  112     	extern	_gotoSleep
                                    1-  113     	extern	_pwmStop
                                    1-  114     	extern	_pwmInit
                                    1-  115     	extern	_pwm1Stop
                                    1-  116     	extern	_pwm1Init
                                    1-  117     	extern	_LED6ON
                                    1-  118     	extern	_LED5ON
                                    1-  119     	extern	_LED4ON
                                    1-  120     	extern	_LED3ON
                                    1-  121     	extern	_LED2ON
                                    1-  122     	extern	_LED1ON
                                    1-  123     	extern	_LedInput
                                    1-  124     	extern	_ledShow
                                    1-  125     	extern	_initSys
                                    1-  126     	extern	_powerOff
                                    1-  127     	extern	_keyCtr
                                    1-  128     	extern	_isr
                                    1-  129     	extern	_main
                                    1-  130     	extern	_Status
                                    1-  131     	extern	_duty
                                    1-  132     	extern	_intCount
                                    1-  133     	extern	_count500ms
                                    1-  134     	extern	_keyCount
                                    1-  135     	extern	_workStep
                                    1-  136     	extern	_ledStep
                                    1-  137     	extern	_fgCount
                                    1-  138     	extern	_fgPRD
                                    1-  139     	extern	_preFG
                                    1-  140     	extern	_maxDuty
                                    1-  141     	extern	_pwStep
                                    1-  142     	extern	_R_AIN4_DATA
                                    1-  143     	extern	_R_AIN4_DATA_LB
                                    1-  144     	extern	_R_AIN3_DATA
                                    1-  145     	extern	_R_AIN3_DATA_LB
                                    1-  146     	extern	_R_AIN2_DATA
                                    1-  147     	extern	_R_AIN2_DATA_LB
                                    1-  148     	extern	_chrgTime
                                    1-  149     	extern	_startStep
                                    1-  150     	extern	_sleepTime
                                    1-  151     	extern	_count200ms
                                    1-  152     	extern	_count1s
                                    1-  153     	extern	_count900s
                                    1-  154     	extern	_lowBatTime
                                    1-  155     	extern	_ledTime
                                    1-  156     	extern	_overCount
                                    1-  157     	extern	_chrgCount
                                    1-  158     	extern	_ledLightTime
                                    1-  159     	extern	_currentDuty
                                    1-  160     	extern	_fullCount
                                    1-  161     	extern	_shanshuoTime
                                    1-  162     	extern	_firstTime
                                    1-  163     	extern	_tempDuty
                                    1-  164     	extern	_lowCount
                                    1-  165     	extern	_cDuty
                                    1-  166     	extern	_tempLedStep
                                    1-  167     	extern	_count5S
                                    1-  168     	extern	_ledDeadTime
                                    1-  169     	extern	_lockLedStep
                                    1-  170     	extern	_closeCount
                                    1-  171     	extern	_chrgStep
                                    1-  172     	extern	_prePwStep
                                    1-  173     	extern	_debug
                                    1-  175     	extern PSAVE
                                    1-  176     	extern SSAVE
                                    1-  177     	extern WSAVE
                                    1-  178     	extern STK04
                                    1-  179     	extern STK03
                                    1-  180     	extern STK02
                                    1-  181     	extern STK01
                                    1-  182     	extern STK00
                                    1-  184     .segment "uninit", 0x20000040
 20000040                           1-  185     PSAVE:
                                    1-  186     	.res 1
 20000041                           1-  187     SSAVE:
                                    1-  188     	.res 1
 20000042                           1-  189     WSAVE:
                                    1-  190     	.res 1
 20000043                           1-  191     STK04:
                                    1-  192     	.res 1
 20000044                           1-  193     STK03:
                                    1-  194     	.res 1
 20000045                           1-  195     STK02:
                                    1-  196     	.res 1
 20000046                           1-  197     STK01:
                                    1-  198     	.res 1
 20000047                           1-  199     STK00:
                                    1-  200     	.res 1
                                    1-  202     ;--------------------------------------------------------
                                    1-  203     ; global definitions
                                    1-  204     ;--------------------------------------------------------
                                    1-  205     .segment "uninit"
     0000                           1-  206     _R_AIN4_DATA:
                                    1-  207     	.res	2
                                    1-  210     .segment "uninit"
     0000                           1-  211     _R_AIN4_DATA_LB:
                                    1-  212     	.res	1
                                    1-  215     .segment "uninit"
     0000                           1-  216     _R_AIN3_DATA:
                                    1-  217     	.res	2
                                    1-  220     .segment "uninit"
     0000                           1-  221     _R_AIN3_DATA_LB:
                                    1-  222     	.res	1
                                    1-  225     .segment "uninit"
     0000                           1-  226     _R_AIN2_DATA:
                                    1-  227     	.res	2
                                    1-  230     .segment "uninit"
     0000                           1-  231     _R_AIN2_DATA_LB:
                                    1-  232     	.res	1
                                    1-  235     ;--------------------------------------------------------
                                    1-  236     ; absolute symbol definitions
                                    1-  237     ;--------------------------------------------------------
                                    1-  238     ;--------------------------------------------------------
                                    1-  239     ; compiler-defined variables
                                    1-  240     ;--------------------------------------------------------
                                    1-  241     .segment "uninit"
     0000                           1-  242     r0x105F:
                                    1-  243     	.res	1
                                    1-  244     .segment "uninit"
     0000                           1-  245     r0x1057:
                                    1-  246     	.res	1
                                    1-  247     .segment "uninit"
     0000                           1-  248     r0x105E:
                                    1-  249     	.res	1
                                    1-  250     .segment "uninit"
     0000                           1-  251     r0x105D:
                                    1-  252     	.res	1
                                    1-  253     .segment "uninit"
     0000                           1-  254     r0x105C:
                                    1-  255     	.res	1
                                    1-  256     .segment "uninit"
     0000                           1-  257     r0x105B:
                                    1-  258     	.res	1
                                    1-  259     .segment "uninit"
     0000                           1-  260     r0x105A:
                                    1-  261     	.res	1
                                    1-  262     .segment "uninit"
     0000                           1-  263     r0x1059:
                                    1-  264     	.res	1
                                    1-  265     .segment "uninit"
     0000                           1-  266     r0x1050:
                                    1-  267     	.res	1
                                    1-  268     .segment "uninit"
     0000                           1-  269     r0x1058:
                                    1-  270     	.res	1
                                    1-  271     .segment "uninit"
     0000                           1-  272     r0x1056:
                                    1-  273     	.res	1
                                    1-  274     .segment "uninit"
     0000                           1-  275     r0x1051:
                                    1-  276     	.res	1
                                    1-  277     .segment "uninit"
     0000                           1-  278     r0x1052:
                                    1-  279     	.res	1
                                    1-  280     .segment "uninit"
     0000                           1-  281     r0x1053:
                                    1-  282     	.res	1
                                    1-  283     .segment "uninit"
     0000                           1-  284     r0x1055:
                                    1-  285     	.res	1
                                    1-  286     .segment "uninit"
     0000                           1-  287     r0x1034:
                                    1-  288     	.res	1
                                    1-  289     .segment "uninit"
     0000                           1-  290     r0x1035:
                                    1-  291     	.res	1
                                    1-  292     .segment "uninit"
     0000                           1-  293     r0x104E:
                                    1-  294     	.res	1
                                    1-  295     .segment "uninit"
     0000                           1-  296     r0x104F:
                                    1-  297     	.res	1
                                    1-  298     .segment "uninit"
     0000                           1-  299     r0x104A:
                                    1-  300     	.res	1
                                    1-  301     .segment "uninit"
     0000                           1-  302     r0x104B:
                                    1-  303     	.res	1
                                    1-  304     .segment "uninit"
     0000                           1-  305     r0x1042:
                                    1-  306     	.res	1
                                    1-  307     .segment "uninit"
     0000                           1-  308     r0x1043:
                                    1-  309     	.res	1
                                    1-  310     .segment "uninit"
     0000                           1-  311     r0x1044:
                                    1-  312     	.res	1
                                    1-  313     .segment "uninit"
     0000                           1-  314     r0x1047:
                                    1-  315     	.res	1
                                    1-  316     .segment "uninit"
     0000                           1-  317     r0x103C:
                                    1-  318     	.res	1
                                    1-  319     .segment "uninit"
     0000                           1-  320     r0x103D:
                                    1-  321     	.res	1
                                    1-  322     .segment "uninit"
     0000                           1-  323     r0x103E:
                                    1-  324     	.res	1
                                    1-  325     .segment "uninit"
     0000                           1-  326     r0x1041:
                                    1-  327     	.res	1
                                    1-  328     .segment "uninit"
     0000                           1-  329     r0x1036:
                                    1-  330     	.res	1
                                    1-  331     .segment "uninit"
     0000                           1-  332     r0x1037:
                                    1-  333     	.res	1
                                    1-  334     .segment "uninit"
     0000                           1-  335     r0x1038:
                                    1-  336     	.res	1
                                    1-  337     .segment "uninit"
     0000                           1-  338     r0x103B:
                                    1-  339     	.res	1
                                    1-  340     ;--------------------------------------------------------
                                    1-  341     ; initialized data
                                    1-  342     ;--------------------------------------------------------
                                    1-  344     .segment "idata"
     0000                           1-  345     _Status:
     0000 0000                      1-  346     	dw	0x00
                                    1-  350     .segment "idata"
     0000                           1-  351     _duty:
     0000 0000 0000                 1-  352     	dw	0x00, 0x00
                                    1-  356     .segment "idata"
     0000                           1-  357     _intCount:
     0000 0000                      1-  358     	dw	0x00
                                    1-  362     .segment "idata"
     0000                           1-  363     _count500ms:
     0000 0000                      1-  364     	dw	0x00
                                    1-  368     .segment "idata"
     0000                           1-  369     _keyCount:
     0000 0000                      1-  370     	dw	0x00
                                    1-  374     .segment "idata"
     0000                           1-  375     _workStep:
     0000 0000                      1-  376     	dw	0x00
                                    1-  380     .segment "idata"
     0000                           1-  381     _ledStep:
     0000 0000                      1-  382     	dw	0x00
                                    1-  386     .segment "idata"
     0000                           1-  387     _fgCount:
     0000 0000 0000                 1-  388     	dw	0x00, 0x00
                                    1-  392     .segment "idata"
     0000                           1-  393     _fgPRD:
     0000 0000 0000                 1-  394     	dw	0x00, 0x00
                                    1-  398     .segment "idata"
     0000                           1-  399     _preFG:
     0000 0000                      1-  400     	dw	0x00
                                    1-  404     .segment "idata"
     0000                           1-  405     _maxDuty:
     0000 0000                      1-  406     	dw	0x00
                                    1-  410     .segment "idata"
     0000                           1-  411     _pwStep:
     0000 0000                      1-  412     	dw	0x00
                                    1-  416     .segment "idata"
     0000                           1-  417     _chrgTime:
     0000 0000 0000                 1-  418     	dw	0x00, 0x00
                                    1-  422     .segment "idata"
     0000                           1-  423     _startStep:
     0000 0000                      1-  424     	dw	0x00
                                    1-  428     .segment "idata"
     0000                           1-  429     _sleepTime:
     0000 0000 0000                 1-  430     	dw	0x00, 0x00
                                    1-  434     .segment "idata"
     0000                           1-  435     _count200ms:
     0000 0000                      1-  436     	dw	0x00
                                    1-  440     .segment "idata"
     0000                           1-  441     _count1s:
     0000 0000                      1-  442     	dw	0x00
                                    1-  446     .segment "idata"
     0000                           1-  447     _count900s:
     0000 0000 0000                 1-  448     	dw	0x00, 0x00
                                    1-  452     .segment "idata"
     0000                           1-  453     _lowBatTime:
     0000 0000                      1-  454     	dw	0x00
                                    1-  458     .segment "idata"
     0000                           1-  459     _ledTime:
     0000 0000                      1-  460     	dw	0x00
                                    1-  464     .segment "idata"
     0000                           1-  465     _overCount:
     0000 0000                      1-  466     	dw	0x00
                                    1-  470     .segment "idata"
     0000                           1-  471     _chrgCount:
     0000 0000                      1-  472     	dw	0x00
                                    1-  476     .segment "idata"
     0000                           1-  477     _ledLightTime:
     0000 0000                      1-  478     	dw	0x00
                                    1-  482     .segment "idata"
     0000                           1-  483     _currentDuty:
     0000 0000                      1-  484     	dw	0x00
                                    1-  488     .segment "idata"
     0000                           1-  489     _fullCount:
     0000 0000 0000                 1-  490     	dw	0x00, 0x00
                                    1-  494     .segment "idata"
     0000                           1-  495     _shanshuoTime:
     0000 0000                      1-  496     	dw	0x00
                                    1-  500     .segment "idata"
     0000                           1-  501     _firstTime:
     0000 0000                      1-  502     	dw	0x00
                                    1-  506     .segment "idata"
     0000                           1-  507     _tempDuty:
     0000 0000                      1-  508     	dw	0x00
                                    1-  512     .segment "idata"
     0000                           1-  513     _lowCount:
     0000 0000                      1-  514     	dw	0x00
                                    1-  518     .segment "idata"
     0000                           1-  519     _cDuty:
     0000 0000                      1-  520     	dw	0x00
                                    1-  524     .segment "idata"
     0000                           1-  525     _tempLedStep:
     0000 0000                      1-  526     	dw	0x00
                                    1-  530     .segment "idata"
     0000                           1-  531     _count5S:
     0000 0000 0000                 1-  532     	dw	0x00, 0x00
                                    1-  536     .segment "idata"
     0000                           1-  537     _ledDeadTime:
     0000 0000                      1-  538     	dw	0x00
                                    1-  542     .segment "idata"
     0000                           1-  543     _lockLedStep:
     0000 0000                      1-  544     	dw	0x00
                                    1-  548     .segment "idata"
     0000                           1-  549     _closeCount:
     0000 0000 0000                 1-  550     	dw	0x00, 0x00
                                    1-  554     .segment "idata"
     0000                           1-  555     _chrgStep:
     0000 0000                      1-  556     	dw	0x00
                                    1-  560     .segment "idata"
     0000                           1-  561     _prePwStep:
     0000 0000                      1-  562     	dw	0x00
                                    1-  566     .segment "idata"
     0000                           1-  567     _debug:
     0000 0000                      1-  568     	dw	0x00
                                    1-  571     ;--------------------------------------------------------
                                    1-  572     ; overlayable items in internal ram 
                                    1-  573     ;--------------------------------------------------------
                                    1-  574     ;	udata_ovr
                                    1-  575     ;--------------------------------------------------------
                                    1-  576     ; reset vector 
                                    1-  577     ;--------------------------------------------------------
                                    1-  578     ORG	0x0000
     0000 3rrr                      1-  579     	LGOTO	__nyc_ny8_startup
                                    1-  580     ;--------------------------------------------------------
                                    1-  581     ; interrupt and initialization code
                                    1-  582     ;--------------------------------------------------------
                                    1-  583     ORG 0x0008
                                    1-  584     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  586     .segment "code"
     0000                           1-  587     __sdcc_interrupt:
                                    1-  588     ;***
                                    1-  589     ;  pBlock Stats: dbName = I
                                    1-  590     ;***
                                    1-  591     ;2 compiler assigned registers:
                                    1-  592     ;   STK00
                                    1-  593     ;   STK01
                                    1-  594     ;; Starting pCode block
     0000                           1-  595     _isr:
                                    1-  596     ; 0 exit points
                                    1-  597     	.line	129, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  598     	MOVAR	WSAVE
     0001 1503                      1-  599     	SWAPR	STATUS,W
     0002 0283                      1-  600     	CLRR	STATUS
     0003 00rr                      1-  601     	MOVAR	SSAVE
     0004 010A                      1-  602     	MOVR	PCHBUF,W
     0005 028A                      1-  603     	CLRR	PCHBUF
     0006 00rr                      1-  604     	MOVAR	PSAVE
     0007 0104                      1-  605     	MOVR	FSR,W
                                    1-  606     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  607     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  608     	MOVR	STK00,W
                                    1-  609     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  610     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  611     	MOVR	STK01,W
                                    1-  612     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  613     	MOVAR	___sdcc_saved_stk01
                                    1-  614     	.line	131, "main.c"; 	if(INTFbits.T0IF)
     0010 08rr                      1-  615     	BTRSS	_INTFbits,0
                                    1-  616     	MGOTO	_00128_DS_
     0011 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  617     	.line	133, "main.c"; 	TMR0 += 55;
     0012 2137                      1-  618     	MOVIA	0x37
     0013 03rr                      1-  619     	ADDAR	_TMR0,F
                                    1-  620     	.line	135, "main.c"; 	if(++intCount >= 100)
                                    1-  621     	BANKSEL	_intCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 05rr                      1-  622     	INCR	_intCount,F
                                    1-  623     ;;unsigned compare: left < lit (0x64=100), size=1
     0016 2164                      1-  624     	MOVIA	0x64
     0017 04rr                      1-  625     	SUBAR	_intCount,W
     0018 0803                      1-  626     	BTRSS	STATUS,0
                                    1-  627     	MGOTO	_00128_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  628     	.line	137, "main.c"; 	IntFlag = 1;
                                    1-  629     	BANKSEL	_Status
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 18rr                      1-  630     	BSR	_Status,0
                                    1-  631     	.line	138, "main.c"; 	intCount = 0;
                                    1-  632     	BANKSEL	_intCount
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 02rr                      1-  633     	CLRR	_intCount
                                    1-  634     	.line	139, "main.c"; 	if(workStep)
                                    1-  635     	BANKSEL	_workStep
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 01rr                      1-  636     	MOVR	_workStep,W
     0020 0D03                      1-  637     	BTRSC	STATUS,2
                                    1-  638     	MGOTO	_00106_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  639     	.line	140, "main.c"; 	++fgCount;
                                    1-  640     	BANKSEL	_fgCount
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 05rr                      1-  641     	INCR	_fgCount,F
     0024 0D03                      1-  642     	BTRSC	STATUS,2
     0025 05rr                      1-  643     	INCR	(_fgCount + 1),F
     0026                           1-  644     _00106_DS_:
                                    1-  645     	.line	141, "main.c"; 	if(++count500ms >= 40)
                                    1-  646     	BANKSEL	_count500ms
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 05rr                      1-  647     	INCR	_count500ms,F
                                    1-  648     ;;unsigned compare: left < lit (0x28=40), size=1
     0028 2128                      1-  649     	MOVIA	0x28
     0029 04rr                      1-  650     	SUBAR	_count500ms,W
     002A 0C03                      1-  651     	BTRSC	STATUS,0
                                    1-  652     	.line	142, "main.c"; 	count500ms = 0;
     002B 02rr                      1-  653     	CLRR	_count500ms
                                    1-  654     	.line	143, "main.c"; 	if(++count200ms >= 20)
                                    1-  655     	BANKSEL	_count200ms
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1-  656     	INCR	_count200ms,F
     002E 2114                      1-  657     	MOVIA	0x14
     002F 04rr                      1-  658     	SUBAR	_count200ms,W
     0030 0803                      1-  659     	BTRSS	STATUS,0
                                    1-  660     	MGOTO	_00112_DS_
     0031 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  661     	.line	145, "main.c"; 	count200ms = 0;
     0032 02rr                      1-  662     	CLRR	_count200ms
                                    1-  663     	.line	146, "main.c"; 	if(ledDeadTime > 0)
                                    1-  664     	BANKSEL	_ledDeadTime
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1-  665     	MOVR	_ledDeadTime,W
     0035 0903                      1-  666     	BTRSS	STATUS,2
                                    1-  667     	.line	147, "main.c"; 	--ledDeadTime;
     0036 06rr                      1-  668     	DECR	_ledDeadTime,F
     0037                           1-  669     _00112_DS_:
                                    1-  670     	.line	149, "main.c"; 	if(++count1s >= 100)
                                    1-  671     	BANKSEL	_count1s
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 05rr                      1-  672     	INCR	_count1s,F
     0039 2164                      1-  673     	MOVIA	0x64
     003A 04rr                      1-  674     	SUBAR	_count1s,W
     003B 0803                      1-  675     	BTRSS	STATUS,0
                                    1-  676     	MGOTO	_00128_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  677     	.line	151, "main.c"; 	count1s = 0;
     003D 02rr                      1-  678     	CLRR	_count1s
                                    1-  679     	.line	152, "main.c"; 	if(chrgFlag == 1 && pwStep == 6)
                                    1-  680     	BANKSEL	_Status
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 09rr                      1-  681     	BTRSS	_Status,3
                                    1-  682     	MGOTO	_00114_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  683     	BANKSEL	_pwStep
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 01rr                      1-  684     	MOVR	_pwStep,W
     0043 2406                      1-  685     	XORIA	0x06
     0044 0903                      1-  686     	BTRSS	STATUS,2
                                    1-  687     	MGOTO	_00114_DS_
     0045 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  688     	.line	154, "main.c"; 	++chrgTime;
                                    1-  689     	BANKSEL	_chrgTime
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 05rr                      1-  690     	INCR	_chrgTime,F
     0048 0D03                      1-  691     	BTRSC	STATUS,2
     0049 05rr                      1-  692     	INCR	(_chrgTime + 1),F
     004A                           1-  693     _00114_DS_:
                                    1-  694     	.line	157, "main.c"; 	if(ledLightTime > 0)
                                    1-  695     	BANKSEL	_ledLightTime
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 01rr                      1-  696     	MOVR	_ledLightTime,W
     004C 0903                      1-  697     	BTRSS	STATUS,2
                                    1-  698     	.line	158, "main.c"; 	--ledLightTime;
     004D 06rr                      1-  699     	DECR	_ledLightTime,F
                                    1-  700     	.line	159, "main.c"; 	if(shanshuoTime > 0)
                                    1-  701     	BANKSEL	_shanshuoTime
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 01rr                      1-  702     	MOVR	_shanshuoTime,W
     0050 0903                      1-  703     	BTRSS	STATUS,2
                                    1-  704     	.line	160, "main.c"; 	--shanshuoTime;
     0051 06rr                      1-  705     	DECR	_shanshuoTime,F
                                    1-  706     	.line	161, "main.c"; 	if(workStep)
                                    1-  707     	BANKSEL	_workStep
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1-  708     	MOVR	_workStep,W
     0054 0D03                      1-  709     	BTRSC	STATUS,2
                                    1-  710     	MGOTO	_00121_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  711     	.line	163, "main.c"; 	++count900s;
                                    1-  712     	BANKSEL	_count900s
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 05rr                      1-  713     	INCR	_count900s,F
     0058 0D03                      1-  714     	BTRSC	STATUS,2
     0059 05rr                      1-  715     	INCR	(_count900s + 1),F
                                    1-  716     	MGOTO	_00128_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B                           1-  717     _00121_DS_:
                                    1-  718     	.line	167, "main.c"; 	count900s = 0;
                                    1-  719     	BANKSEL	_count900s
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 02rr                      1-  720     	CLRR	_count900s
     005D 02rr                      1-  721     	CLRR	(_count900s + 1)
     005E                           1-  722     _00128_DS_:
                                    1-  723     	.line	176, "main.c"; 	if(INTFbits.PABIF)
     005E 08rr                      1-  724     	BTRSS	_INTFbits,1
                                    1-  725     	MGOTO	_00130_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  726     	.line	178, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     0060 21FD                      1-  727     	MOVIA	0xfd
     0061 00rr                      1-  728     	MOVAR	_INTF
     0062                           1-  729     _00130_DS_:
                                    1-  730     	.line	181, "main.c"; 	INTF = 0;
     0062 02rr                      1-  731     	CLRR	_INTF
                                    1-  732     	.line	183, "main.c"; 	}
                                    1-  733     	BANKSEL	___sdcc_saved_stk01
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 01rr                      1-  734     	MOVR	___sdcc_saved_stk01,W
     0065 00rr                      1-  735     	MOVAR	STK01
                                    1-  736     	BANKSEL	___sdcc_saved_stk00
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 01rr                      1-  737     	MOVR	___sdcc_saved_stk00,W
     0068 00rr                      1-  738     	MOVAR	STK00
                                    1-  739     	BANKSEL	___sdcc_saved_fsr
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 01rr                      1-  740     	MOVR	___sdcc_saved_fsr,W
     006B 0084                      1-  741     	MOVAR	FSR
     006C 01rr                      1-  742     	MOVR	PSAVE,W
     006D 008A                      1-  743     	MOVAR	PCHBUF
     006E 0283                      1-  744     	CLRR	STATUS
     006F 15rr                      1-  745     	SWAPR	SSAVE,W
     0070 0083                      1-  746     	MOVAR	STATUS
     0071 15rr                      1-  747     	SWAPR	WSAVE,F
     0072 15rr                      1-  748     	SWAPR	WSAVE,W
     0073                           1-  749     END_OF_INTERRUPT:
     0073 0011                      1-  750     	RETIE	
                                    1-  752     ;--------------------------------------------------------
                                    1-  753     ; code
                                    1-  754     ;--------------------------------------------------------
                                    1-  755     ;***
                                    1-  756     ;  pBlock Stats: dbName = M
                                    1-  757     ;***
                                    1-  758     ;has an exit
                                    1-  759     ;functions called:
                                    1-  760     ;   _initSys
                                    1-  761     ;   _initAD
                                    1-  762     ;   _ledShow
                                    1-  763     ;   _pwmStop
                                    1-  764     ;   _powerOff
                                    1-  765     ;   _keyCtr
                                    1-  766     ;   _checkBatAD
                                    1-  767     ;   _checkChrgV
                                    1-  768     ;   _chrgCtr
                                    1-  769     ;   _gotoSleep
                                    1-  770     ;   _powerOff
                                    1-  771     ;   _initSys
                                    1-  772     ;   _initAD
                                    1-  773     ;   _ledShow
                                    1-  774     ;   _pwmStop
                                    1-  775     ;   _powerOff
                                    1-  776     ;   _keyCtr
                                    1-  777     ;   _checkBatAD
                                    1-  778     ;   _checkChrgV
                                    1-  779     ;   _chrgCtr
                                    1-  780     ;   _gotoSleep
                                    1-  781     ;   _powerOff
                                    1-  782     ;; Starting pCode block
                                    1-  783     .segment "code"; module=main, function=_main
     0000                           1-  785     _main:
                                    1-  786     ; 2 exit points
                                    1-  787     	.line	187, "main.c"; 	initSys();
                                    1-  788     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  789     	.line	188, "main.c"; 	initAD();
                                    1-  790     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  791     _00180_DS_:
                                    1-  792     	.line	191, "main.c"; 	CLRWDT();
     0002 0002                      1-  793     	clrwdt
                                    1-  794     	.line	192, "main.c"; 	ledShow();
                                    1-  795     	MCALL	_ledShow
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  796     	.line	193, "main.c"; 	if(workStep > 0 && tempDuty >= 77)
                                    1-  797     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  798     	MOVR	_workStep,W
     0006 0D03                      1-  799     	BTRSC	STATUS,2
                                    1-  800     	MGOTO	_00141_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  801     ;;unsigned compare: left < lit (0x4D=77), size=1
     0008 214D                      1-  802     	MOVIA	0x4d
                                    1-  803     	BANKSEL	_tempDuty
     0009 rrrr                      3-  110 m1      .banksel ram_address
     000A 04rr                      1-  804     	SUBAR	_tempDuty,W
     000B 0803                      1-  805     	BTRSS	STATUS,0
                                    1-  806     	MGOTO	_00141_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  807     	.line	195, "main.c"; 	if(cDuty > tempDuty)
                                    1-  808     	BANKSEL	_cDuty
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 01rr                      1-  809     	MOVR	_cDuty,W
                                    1-  810     	BANKSEL	_tempDuty
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 04rr                      1-  811     	SUBAR	_tempDuty,W
     0011 0C03                      1-  812     	BTRSC	STATUS,0
                                    1-  813     	MGOTO	_00138_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  814     	.line	197, "main.c"; 	cDuty--;
                                    1-  815     	BANKSEL	_cDuty
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 06rr                      1-  816     	DECR	_cDuty,F
                                    1-  817     	.line	198, "main.c"; 	PWM2DUTY = cDuty;
     0015 01rr                      1-  818     	MOVR	_cDuty,W
     0016 00rr                      1-  819     	SFUN	_PWM2DUTY
                                    1-  820     	MGOTO	_00141_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
     0018                           1-  821     _00138_DS_:
                                    1-  822     	.line	200, "main.c"; 	else if(cDuty < tempDuty)
                                    1-  823     	BANKSEL	_tempDuty
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 01rr                      1-  824     	MOVR	_tempDuty,W
                                    1-  825     	BANKSEL	_cDuty
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 04rr                      1-  826     	SUBAR	_cDuty,W
     001C 0C03                      1-  827     	BTRSC	STATUS,0
                                    1-  828     	MGOTO	_00141_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  829     	.line	202, "main.c"; 	cDuty++;
     001E 05rr                      1-  830     	INCR	_cDuty,F
                                    1-  831     	.line	203, "main.c"; 	PWM2DUTY = cDuty;
     001F 01rr                      1-  832     	MOVR	_cDuty,W
     0020 00rr                      1-  833     	SFUN	_PWM2DUTY
     0021                           1-  834     _00141_DS_:
                                    1-  835     	.line	206, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  836     	BANKSEL	_workStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1-  837     	MOVR	_workStep,W
     0023 0D03                      1-  838     	BTRSC	STATUS,2
                                    1-  839     	MGOTO	_00144_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  840     	BANKSEL	_currentDuty
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 01rr                      1-  841     	MOVR	_currentDuty,W
                                    1-  842     	BANKSEL	_maxDuty
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 04rr                      1-  843     	SUBAR	_maxDuty,W
     0029 0C03                      1-  844     	BTRSC	STATUS,0
                                    1-  845     	MGOTO	_00144_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  846     	.line	208, "main.c"; 	currentDuty = currentDuty - 1;
                                    1-  847     	BANKSEL	_currentDuty
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 06rr                      1-  848     	DECR	_currentDuty,F
                                    1-  849     	.line	209, "main.c"; 	PWM2DUTY = currentDuty;
     002D 01rr                      1-  850     	MOVR	_currentDuty,W
     002E 00rr                      1-  851     	SFUN	_PWM2DUTY
                                    1-  852     	.line	210, "main.c"; 	cDuty = currentDuty;
     002F 01rr                      1-  853     	MOVR	_currentDuty,W
                                    1-  854     	BANKSEL	_cDuty
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 00rr                      1-  855     	MOVAR	_cDuty
     0032                           1-  856     _00144_DS_:
                                    1-  857     	.line	212, "main.c"; 	if(!IntFlag)
                                    1-  858     	BANKSEL	_Status
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 08rr                      1-  859     	BTRSS	_Status,0
                                    1-  860     	MGOTO	_00180_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  861     	.line	214, "main.c"; 	IntFlag = 0;
     0035 1Crr                      1-  862     	BCR	_Status,0
                                    1-  863     	.line	216, "main.c"; 	if(shanshuoTime == 0 && pwStep == 0 && workStep > 0)
                                    1-  864     	BANKSEL	_shanshuoTime
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 01rr                      1-  865     	MOVR	_shanshuoTime,W
     0038 0903                      1-  866     	BTRSS	STATUS,2
                                    1-  867     	MGOTO	_00151_DS_
     0039 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  868     	BANKSEL	_pwStep
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1-  869     	MOVR	_pwStep,W
     003C 0903                      1-  870     	BTRSS	STATUS,2
                                    1-  871     	MGOTO	_00151_DS_
     003D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  872     	BANKSEL	_workStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 01rr                      1-  873     	MOVR	_workStep,W
     0040 0D03                      1-  874     	BTRSC	STATUS,2
                                    1-  875     	MGOTO	_00151_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  876     	.line	218, "main.c"; 	if(++closeCount >= 6000)
                                    1-  877     	BANKSEL	_closeCount
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 05rr                      1-  878     	INCR	_closeCount,F
     0044 0D03                      1-  879     	BTRSC	STATUS,2
     0045 05rr                      1-  880     	INCR	(_closeCount + 1),F
                                    1-  881     ;;unsigned compare: left < lit (0x1770=6000), size=2
     0046 2117                      1-  882     	MOVIA	0x17
     0047 04rr                      1-  883     	SUBAR	(_closeCount + 1),W
     0048 0903                      1-  884     	BTRSS	STATUS,2
                                    1-  885     	MGOTO	_00266_DS_
     0049 3rrr                      3-   63 m1      LGOTO rom_address
     004A 2170                      1-  886     	MOVIA	0x70
     004B 04rr                      1-  887     	SUBAR	_closeCount,W
     004C                           1-  888     _00266_DS_:
     004C 0803                      1-  889     	BTRSS	STATUS,0
                                    1-  890     	MGOTO	_00152_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  891     	.line	220, "main.c"; 	closeCount = 0;
                                    1-  892     	BANKSEL	_closeCount
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 02rr                      1-  893     	CLRR	_closeCount
     0050 02rr                      1-  894     	CLRR	(_closeCount + 1)
                                    1-  895     	.line	221, "main.c"; 	workStep = 0;
                                    1-  896     	BANKSEL	_workStep
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 02rr                      1-  897     	CLRR	_workStep
                                    1-  898     	.line	222, "main.c"; 	ledStep = 0;
                                    1-  899     	BANKSEL	_ledStep
     0053 rrrr                      3-  110 m1      .banksel ram_address
     0054 02rr                      1-  900     	CLRR	_ledStep
                                    1-  901     	.line	223, "main.c"; 	pwmStop();
                                    1-  902     	MCALL	_pwmStop
     0055 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  903     	MGOTO	_00152_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
     0057                           1-  904     _00151_DS_:
                                    1-  905     	.line	228, "main.c"; 	closeCount = 0;
                                    1-  906     	BANKSEL	_closeCount
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 02rr                      1-  907     	CLRR	_closeCount
     0059 02rr                      1-  908     	CLRR	(_closeCount + 1)
                                    1-  909     ;;unsigned compare: left < lit (0x5=5), size=1
     005A                           1-  910     _00152_DS_:
                                    1-  911     	.line	231, "main.c"; 	if(overCount >= 5 && workStep > 0)
     005A 2105                      1-  912     	MOVIA	0x05
                                    1-  913     	BANKSEL	_overCount
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 04rr                      1-  914     	SUBAR	_overCount,W
     005D 0803                      1-  915     	BTRSS	STATUS,0
                                    1-  916     	MGOTO	_00158_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  917     	BANKSEL	_workStep
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 01rr                      1-  918     	MOVR	_workStep,W
     0061 0D03                      1-  919     	BTRSC	STATUS,2
                                    1-  920     	MGOTO	_00158_DS_
     0062 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  921     	.line	233, "main.c"; 	if(++count5S > 500)
                                    1-  922     	BANKSEL	_count5S
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 05rr                      1-  923     	INCR	_count5S,F
     0065 0D03                      1-  924     	BTRSC	STATUS,2
     0066 05rr                      1-  925     	INCR	(_count5S + 1),F
                                    1-  926     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  927     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     0067 2101                      1-  928     	MOVIA	0x01
     0068 04rr                      1-  929     	SUBAR	(_count5S + 1),W
     0069 0903                      1-  930     	BTRSS	STATUS,2
                                    1-  931     	MGOTO	_00268_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
     006B 21F5                      1-  932     	MOVIA	0xf5
     006C 04rr                      1-  933     	SUBAR	_count5S,W
     006D                           1-  934     _00268_DS_:
     006D 0803                      1-  935     	BTRSS	STATUS,0
                                    1-  936     	MGOTO	_00159_DS_
     006E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  937     	.line	235, "main.c"; 	overCount = 0;
                                    1-  938     	BANKSEL	_overCount
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 02rr                      1-  939     	CLRR	_overCount
                                    1-  940     	.line	236, "main.c"; 	count5S = 0;
                                    1-  941     	BANKSEL	_count5S
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 02rr                      1-  942     	CLRR	_count5S
     0073 02rr                      1-  943     	CLRR	(_count5S + 1)
                                    1-  944     	.line	237, "main.c"; 	ledDeadTime = 25;
     0074 2119                      1-  945     	MOVIA	0x19
                                    1-  946     	BANKSEL	_ledDeadTime
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 00rr                      1-  947     	MOVAR	_ledDeadTime
                                    1-  948     	.line	238, "main.c"; 	powerOff();
                                    1-  949     	MCALL	_powerOff
     0077 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  950     	MGOTO	_00159_DS_
     0078 3rrr                      3-   63 m1      LGOTO rom_address
     0079                           1-  951     _00158_DS_:
                                    1-  952     	.line	243, "main.c"; 	count5S = 0;
                                    1-  953     	BANKSEL	_count5S
     0079 rrrr                      3-  110 m1      .banksel ram_address
     007A 02rr                      1-  954     	CLRR	_count5S
     007B 02rr                      1-  955     	CLRR	(_count5S + 1)
     007C                           1-  956     _00159_DS_:
                                    1-  957     	.line	245, "main.c"; 	if(chrgFlag == 0)
                                    1-  958     	BANKSEL	_Status
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 09rr                      1-  959     	BTRSS	_Status,3
                                    1-  960     	.line	246, "main.c"; 	keyCtr();
                                    1-  961     	MCALL	_keyCtr
     007E 2rrr                      3-   66 m1      LCALL rom_address
     007F                           1-  962     _00162_DS_:
                                    1-  963     	.line	247, "main.c"; 	if(count200ms < 11)
     007F 210B                      1-  964     	MOVIA	0x0b
                                    1-  965     	BANKSEL	_count200ms
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 04rr                      1-  966     	SUBAR	_count200ms,W
     0082 0C03                      1-  967     	BTRSC	STATUS,0
                                    1-  968     	MGOTO	_00167_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  969     	.line	249, "main.c"; 	checkBatAD();
                                    1-  970     	MCALL	_checkBatAD
     0084 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  971     	MGOTO	_00168_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  972     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  973     ;;unsigned compare: left >= lit (0xE=14), size=1
     0086                           1-  974     _00167_DS_:
                                    1-  975     	.line	251, "main.c"; 	else if(count200ms > 13 && count200ms < 16)
     0086 210E                      1-  976     	MOVIA	0x0e
                                    1-  977     	BANKSEL	_count200ms
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 04rr                      1-  978     	SUBAR	_count200ms,W
     0089 0803                      1-  979     	BTRSS	STATUS,0
                                    1-  980     	MGOTO	_00168_DS_
     008A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  981     ;;unsigned compare: left < lit (0x10=16), size=1
     008B 2110                      1-  982     	MOVIA	0x10
     008C 04rr                      1-  983     	SUBAR	_count200ms,W
     008D 0803                      1-  984     	BTRSS	STATUS,0
                                    1-  985     	.line	253, "main.c"; 	checkChrgV();
                                    1-  986     	MCALL	_checkChrgV
     008E 2rrr                      3-   66 m1      LCALL rom_address
     008F                           1-  987     _00168_DS_:
                                    1-  988     	.line	256, "main.c"; 	chrgCtr();
                                    1-  989     	MCALL	_chrgCtr
     008F 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  990     	.line	259, "main.c"; 	if(workStep == 0 && keyCount == 0 && (PORTA & 0x08) == 0 && ledLightTime == 0 && ledDeadTime == 0)
                                    1-  991     	BANKSEL	_workStep
     0090 rrrr                      3-  110 m1      .banksel ram_address
     0091 01rr                      1-  992     	MOVR	_workStep,W
     0092 0903                      1-  993     	BTRSS	STATUS,2
                                    1-  994     	MGOTO	_00172_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  995     	BANKSEL	_keyCount
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 01rr                      1-  996     	MOVR	_keyCount,W
     0096 0903                      1-  997     	BTRSS	STATUS,2
                                    1-  998     	MGOTO	_00172_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  999     	BANKSEL	_PORTA
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 0Drr                      1- 1000     	BTRSC	_PORTA,3
                                    1- 1001     	MGOTO	_00172_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1002     	BANKSEL	_ledLightTime
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 01rr                      1- 1003     	MOVR	_ledLightTime,W
     009D 0903                      1- 1004     	BTRSS	STATUS,2
                                    1- 1005     	MGOTO	_00172_DS_
     009E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1006     	BANKSEL	_ledDeadTime
     009F rrrr                      3-  110 m1      .banksel ram_address
     00A0 01rr                      1- 1007     	MOVR	_ledDeadTime,W
     00A1 0903                      1- 1008     	BTRSS	STATUS,2
                                    1- 1009     	MGOTO	_00172_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1010     	.line	261, "main.c"; 	if(++sleepTime > 20)
                                    1- 1011     	BANKSEL	_sleepTime
     00A3 rrrr                      3-  110 m1      .banksel ram_address
     00A4 05rr                      1- 1012     	INCR	_sleepTime,F
     00A5 0D03                      1- 1013     	BTRSC	STATUS,2
     00A6 05rr                      1- 1014     	INCR	(_sleepTime + 1),F
                                    1- 1015     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1016     ;;unsigned compare: left >= lit (0x15=21), size=2
     00A7 2100                      1- 1017     	MOVIA	0x00
     00A8 04rr                      1- 1018     	SUBAR	(_sleepTime + 1),W
     00A9 0903                      1- 1019     	BTRSS	STATUS,2
                                    1- 1020     	MGOTO	_00272_DS_
     00AA 3rrr                      3-   63 m1      LGOTO rom_address
     00AB 2115                      1- 1021     	MOVIA	0x15
     00AC 04rr                      1- 1022     	SUBAR	_sleepTime,W
     00AD                           1- 1023     _00272_DS_:
     00AD 0803                      1- 1024     	BTRSS	STATUS,0
                                    1- 1025     	MGOTO	_00172_DS_
     00AE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1026     	.line	263, "main.c"; 	gotoSleep();
                                    1- 1027     	MCALL	_gotoSleep
     00AF 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1028     ;;unsigned compare: left < lit (0x384=900), size=2
     00B0                           1- 1029     _00172_DS_:
                                    1- 1030     	.line	267, "main.c"; 	if(count900s >= 900)
     00B0 2103                      1- 1031     	MOVIA	0x03
                                    1- 1032     	BANKSEL	_count900s
     00B1 rrrr                      3-  110 m1      .banksel ram_address
     00B2 04rr                      1- 1033     	SUBAR	(_count900s + 1),W
     00B3 0903                      1- 1034     	BTRSS	STATUS,2
                                    1- 1035     	MGOTO	_00273_DS_
     00B4 3rrr                      3-   63 m1      LGOTO rom_address
     00B5 2184                      1- 1036     	MOVIA	0x84
     00B6 04rr                      1- 1037     	SUBAR	_count900s,W
     00B7                           1- 1038     _00273_DS_:
     00B7 0803                      1- 1039     	BTRSS	STATUS,0
                                    1- 1040     	MGOTO	_00180_DS_
     00B8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1041     	.line	269, "main.c"; 	powerOff();
                                    1- 1042     	MCALL	_powerOff
     00B9 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1043     	MGOTO	_00180_DS_
     00BA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1044     	.line	273, "main.c"; 	}
                                    1- 1045     	RETURN	
     00BB 0010                      3-   40 m1      ret
                                    1- 1046     ; exit point of _main
                                    1- 1048     ;***
                                    1- 1049     ;  pBlock Stats: dbName = C
                                    1- 1050     ;***
                                    1- 1051     ;has an exit
                                    1- 1052     ;; Starting pCode block
                                    1- 1053     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1055     _F_wait_eoc:
                                    1- 1056     ; 2 exit points
     0000                           1- 1057     _00879_DS_:
                                    1- 1058     	.line	995, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1059     	BTRSS	_ADMDbits,5
                                    1- 1060     	MGOTO	_00879_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1061     	.line	997, "main.c"; 	}
                                    1- 1062     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1063     ; exit point of _F_wait_eoc
                                    1- 1065     ;***
                                    1- 1066     ;  pBlock Stats: dbName = C
                                    1- 1067     ;***
                                    1- 1068     ;has an exit
                                    1- 1069     ;functions called:
                                    1- 1070     ;   _delay
                                    1- 1071     ;   _F_wait_eoc
                                    1- 1072     ;   _delay
                                    1- 1073     ;   _F_wait_eoc
                                    1- 1074     ;6 compiler assigned registers:
                                    1- 1075     ;   r0x1036
                                    1- 1076     ;   r0x1037
                                    1- 1077     ;   r0x1038
                                    1- 1078     ;   r0x1039
                                    1- 1079     ;   r0x103A
                                    1- 1080     ;   r0x103B
                                    1- 1081     ;; Starting pCode block
                                    1- 1082     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1084     ;local variable name mapping:
     0000                           1- 1087     _F_AIN2_Convert:
                                    1- 1088     ; 2 exit points
                                    1- 1089     	.line	978, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1090     	BANKSEL	r0x1036
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1091     	MOVAR	r0x1036
                                    1- 1092     	.line	980, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1093     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1094     	CLRR	_R_AIN2_DATA_LB
                                    1- 1095     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1096     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1097     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1098     	.line	982, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1099     	MOVIA	0x92
     0008 00rr                      1- 1100     	MOVAR	_ADMD
                                    1- 1101     	.line	983, "main.c"; 	delay(200);	
     0009 21C8                      1- 1102     	MOVIA	0xc8
                                    1- 1103     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1104     	.line	984, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1105     	MOVIA	0x01
                                    1- 1106     	BANKSEL	r0x1037
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1107     	MOVAR	r0x1037
     000E                           1- 1108     _00872_DS_:
                                    1- 1109     	BANKSEL	r0x1037
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1110     	MOVR	r0x1037,W
                                    1- 1111     	BANKSEL	r0x1036
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1112     	SUBAR	r0x1036,W
     0012 0803                      1- 1113     	BTRSS	STATUS,0
                                    1- 1114     	MGOTO	_00874_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1115     	.line	986, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1116     	BSR	_ADMDbits,6
                                    1- 1117     	.line	987, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1118     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1119     	.line	988, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1120     	MOVIA	0x0f
     0017 10rr                      1- 1121     	ANDAR	_ADR,W
                                    1- 1122     ;;3	MOVAR	r0x1038
                                    1- 1123     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1124     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1125     	.line	989, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1- 1126     	MOVR	_ADD,W
                                    1- 1127     	BANKSEL	r0x1038
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1128     	MOVAR	r0x1038
                                    1- 1129     ;;1	CLRR	r0x1039
                                    1- 1130     ;;109	MOVR	r0x1038,W
                                    1- 1131     ;;107	MOVAR	r0x103A
     001D 2100                      1- 1132     	MOVIA	0x00
                                    1- 1133     	BANKSEL	r0x103B
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1134     	MOVAR	r0x103B
                                    1- 1135     ;;108	MOVR	r0x103A,W
                                    1- 1136     	BANKSEL	r0x1038
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1137     	MOVR	r0x1038,W
                                    1- 1138     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1139     	ADDAR	_R_AIN2_DATA,F
                                    1- 1140     	BANKSEL	r0x103B
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1141     	MOVR	r0x103B,W
     0026 0C03                      1- 1142     	BTRSC	STATUS,0
     0027 05rr                      1- 1143     	INCR	r0x103B,W
     0028 0D03                      1- 1144     	BTRSC	STATUS,2
                                    1- 1145     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1146     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1147     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1- 1148     _00001_DS_:
                                    1- 1149     	.line	984, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1150     	BANKSEL	r0x1037
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1151     	INCR	r0x1037,F
                                    1- 1152     	MGOTO	_00872_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1153     _00874_DS_:
                                    1- 1154     	.line	991, "main.c"; 	}
                                    1- 1155     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1156     ; exit point of _F_AIN2_Convert
                                    1- 1158     ;***
                                    1- 1159     ;  pBlock Stats: dbName = C
                                    1- 1160     ;***
                                    1- 1161     ;has an exit
                                    1- 1162     ;functions called:
                                    1- 1163     ;   _delay
                                    1- 1164     ;   _F_wait_eoc
                                    1- 1165     ;   _delay
                                    1- 1166     ;   _F_wait_eoc
                                    1- 1167     ;6 compiler assigned registers:
                                    1- 1168     ;   r0x103C
                                    1- 1169     ;   r0x103D
                                    1- 1170     ;   r0x103E
                                    1- 1171     ;   r0x103F
                                    1- 1172     ;   r0x1040
                                    1- 1173     ;   r0x1041
                                    1- 1174     ;; Starting pCode block
                                    1- 1175     .segment "code"; module=main, function=_F_AIN3_Convert
                                    1- 1177     ;local variable name mapping:
     0000                           1- 1180     _F_AIN3_Convert:
                                    1- 1181     ; 2 exit points
                                    1- 1182     	.line	963, "main.c"; 	void F_AIN3_Convert(char count)
                                    1- 1183     	BANKSEL	r0x103C
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1184     	MOVAR	r0x103C
                                    1- 1185     	.line	965, "main.c"; 	R_AIN3_DATA=R_AIN3_DATA_LB=0x00;   
                                    1- 1186     	BANKSEL	_R_AIN3_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1187     	CLRR	_R_AIN3_DATA_LB
                                    1- 1188     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1189     	CLRR	_R_AIN3_DATA
     0006 02rr                      1- 1190     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1191     	.line	967, "main.c"; 	ADMD  = 0x90 | C_ADC_PA3;				// Select AIN6(PB1) pad as ADC input
     0007 2193                      1- 1192     	MOVIA	0x93
     0008 00rr                      1- 1193     	MOVAR	_ADMD
                                    1- 1194     	.line	968, "main.c"; 	delay(200);	
     0009 21C8                      1- 1195     	MOVIA	0xc8
                                    1- 1196     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1197     	.line	969, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1198     	MOVIA	0x01
                                    1- 1199     	BANKSEL	r0x103D
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1200     	MOVAR	r0x103D
     000E                           1- 1201     _00863_DS_:
                                    1- 1202     	BANKSEL	r0x103D
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1203     	MOVR	r0x103D,W
                                    1- 1204     	BANKSEL	r0x103C
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1205     	SUBAR	r0x103C,W
     0012 0803                      1- 1206     	BTRSS	STATUS,0
                                    1- 1207     	MGOTO	_00865_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1208     	.line	971, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1209     	BSR	_ADMDbits,6
                                    1- 1210     	.line	972, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1211     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1212     	.line	973, "main.c"; 	R_AIN3_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1213     	MOVIA	0x0f
     0017 10rr                      1- 1214     	ANDAR	_ADR,W
                                    1- 1215     ;;3	MOVAR	r0x103E
                                    1- 1216     	BANKSEL	_R_AIN3_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1217     	ADDAR	_R_AIN3_DATA_LB,F
                                    1- 1218     	.line	974, "main.c"; 	R_AIN3_DATA    += ADD; 
     001A 01rr                      1- 1219     	MOVR	_ADD,W
                                    1- 1220     	BANKSEL	r0x103E
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1221     	MOVAR	r0x103E
                                    1- 1222     ;;1	CLRR	r0x103F
                                    1- 1223     ;;106	MOVR	r0x103E,W
                                    1- 1224     ;;104	MOVAR	r0x1040
     001D 2100                      1- 1225     	MOVIA	0x00
                                    1- 1226     	BANKSEL	r0x1041
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1227     	MOVAR	r0x1041
                                    1- 1228     ;;105	MOVR	r0x1040,W
                                    1- 1229     	BANKSEL	r0x103E
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1230     	MOVR	r0x103E,W
                                    1- 1231     	BANKSEL	_R_AIN3_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1232     	ADDAR	_R_AIN3_DATA,F
                                    1- 1233     	BANKSEL	r0x1041
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1234     	MOVR	r0x1041,W
     0026 0C03                      1- 1235     	BTRSC	STATUS,0
     0027 05rr                      1- 1236     	INCR	r0x1041,W
     0028 0D03                      1- 1237     	BTRSC	STATUS,2
                                    1- 1238     	MGOTO	_00002_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1239     	BANKSEL	_R_AIN3_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1240     	ADDAR	(_R_AIN3_DATA + 1),F
     002C                           1- 1241     _00002_DS_:
                                    1- 1242     	.line	969, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1243     	BANKSEL	r0x103D
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1244     	INCR	r0x103D,F
                                    1- 1245     	MGOTO	_00863_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1246     _00865_DS_:
                                    1- 1247     	.line	976, "main.c"; 	}
                                    1- 1248     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1249     ; exit point of _F_AIN3_Convert
                                    1- 1251     ;***
                                    1- 1252     ;  pBlock Stats: dbName = C
                                    1- 1253     ;***
                                    1- 1254     ;has an exit
                                    1- 1255     ;functions called:
                                    1- 1256     ;   _delay
                                    1- 1257     ;   _F_wait_eoc
                                    1- 1258     ;   _delay
                                    1- 1259     ;   _F_wait_eoc
                                    1- 1260     ;6 compiler assigned registers:
                                    1- 1261     ;   r0x1042
                                    1- 1262     ;   r0x1043
                                    1- 1263     ;   r0x1044
                                    1- 1264     ;   r0x1045
                                    1- 1265     ;   r0x1046
                                    1- 1266     ;   r0x1047
                                    1- 1267     ;; Starting pCode block
                                    1- 1268     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1270     ;local variable name mapping:
     0000                           1- 1273     _F_AIN4_Convert:
                                    1- 1274     ; 2 exit points
                                    1- 1275     	.line	948, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1276     	BANKSEL	r0x1042
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1277     	MOVAR	r0x1042
                                    1- 1278     	.line	950, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1279     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1280     	CLRR	_R_AIN4_DATA_LB
                                    1- 1281     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1282     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1283     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1284     	.line	952, "main.c"; 	ADMD  = 0x90 | C_ADC_PA4;				// Select AIN6(PB1) pad as ADC input
     0007 2194                      1- 1285     	MOVIA	0x94
     0008 00rr                      1- 1286     	MOVAR	_ADMD
                                    1- 1287     	.line	953, "main.c"; 	delay(200);	
     0009 21C8                      1- 1288     	MOVIA	0xc8
                                    1- 1289     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1290     	.line	954, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1291     	MOVIA	0x01
                                    1- 1292     	BANKSEL	r0x1043
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1293     	MOVAR	r0x1043
     000E                           1- 1294     _00854_DS_:
                                    1- 1295     	BANKSEL	r0x1043
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1296     	MOVR	r0x1043,W
                                    1- 1297     	BANKSEL	r0x1042
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1298     	SUBAR	r0x1042,W
     0012 0803                      1- 1299     	BTRSS	STATUS,0
                                    1- 1300     	MGOTO	_00856_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1301     	.line	956, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1302     	BSR	_ADMDbits,6
                                    1- 1303     	.line	957, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1304     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1305     	.line	958, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1306     	MOVIA	0x0f
     0017 10rr                      1- 1307     	ANDAR	_ADR,W
                                    1- 1308     ;;3	MOVAR	r0x1044
                                    1- 1309     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1310     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1311     	.line	959, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1312     	MOVR	_ADD,W
                                    1- 1313     	BANKSEL	r0x1044
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1314     	MOVAR	r0x1044
                                    1- 1315     ;;1	CLRR	r0x1045
                                    1- 1316     ;;103	MOVR	r0x1044,W
                                    1- 1317     ;;101	MOVAR	r0x1046
     001D 2100                      1- 1318     	MOVIA	0x00
                                    1- 1319     	BANKSEL	r0x1047
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1320     	MOVAR	r0x1047
                                    1- 1321     ;;102	MOVR	r0x1046,W
                                    1- 1322     	BANKSEL	r0x1044
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1323     	MOVR	r0x1044,W
                                    1- 1324     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1325     	ADDAR	_R_AIN4_DATA,F
                                    1- 1326     	BANKSEL	r0x1047
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1327     	MOVR	r0x1047,W
     0026 0C03                      1- 1328     	BTRSC	STATUS,0
     0027 05rr                      1- 1329     	INCR	r0x1047,W
     0028 0D03                      1- 1330     	BTRSC	STATUS,2
                                    1- 1331     	MGOTO	_00003_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1332     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1333     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1334     _00003_DS_:
                                    1- 1335     	.line	954, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1336     	BANKSEL	r0x1043
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1337     	INCR	r0x1043,F
                                    1- 1338     	MGOTO	_00854_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1339     _00856_DS_:
                                    1- 1340     	.line	961, "main.c"; 	}
                                    1- 1341     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1342     ; exit point of _F_AIN4_Convert
                                    1- 1344     ;***
                                    1- 1345     ;  pBlock Stats: dbName = C
                                    1- 1346     ;***
                                    1- 1347     ;has an exit
                                    1- 1348     ;functions called:
                                    1- 1349     ;   _F_AIN3_Convert
                                    1- 1350     ;   _F_AIN3_Convert
                                    1- 1351     ;4 compiler assigned registers:
                                    1- 1352     ;   r0x1048
                                    1- 1353     ;   r0x1049
                                    1- 1354     ;   r0x104A
                                    1- 1355     ;   r0x104B
                                    1- 1356     ;; Starting pCode block
                                    1- 1357     .segment "code"; module=main, function=_checkChrgV
     0000                           1- 1359     _checkChrgV:
                                    1- 1360     ; 2 exit points
                                    1- 1361     	.line	933, "main.c"; 	R_AIN3_DATA = R_AIN3_DATA_LB = 0x00;
                                    1- 1362     	BANKSEL	_R_AIN3_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1363     	CLRR	_R_AIN3_DATA_LB
                                    1- 1364     	BANKSEL	_R_AIN3_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1365     	CLRR	_R_AIN3_DATA
     0004 02rr                      1- 1366     	CLRR	(_R_AIN3_DATA + 1)
                                    1- 1367     	.line	934, "main.c"; 	F_AIN3_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1368     	MOVIA	0x08
                                    1- 1369     	MCALL	_F_AIN3_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1370     	.line	935, "main.c"; 	R_AIN3_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1371     	BANKSEL	_R_AIN3_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1372     	SWAPR	(_R_AIN3_DATA + 1),W
     0009 22F0                      1- 1373     	ANDIA	0xf0
     000A 00rr                      1- 1374     	MOVAR	(_R_AIN3_DATA + 1)
     000B 15rr                      1- 1375     	SWAPR	_R_AIN3_DATA,W
     000C 00rr                      1- 1376     	MOVAR	_R_AIN3_DATA
     000D 220F                      1- 1377     	ANDIA	0x0f
     000E 11rr                      1- 1378     	IORAR	(_R_AIN3_DATA + 1),F
     000F 12rr                      1- 1379     	XORAR	_R_AIN3_DATA,F
                                    1- 1380     	.line	936, "main.c"; 	R_AIN3_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1381     	MOVIA	0xf0
                                    1- 1382     	BANKSEL	_R_AIN3_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1383     	ANDAR	_R_AIN3_DATA_LB,F
                                    1- 1384     	.line	937, "main.c"; 	R_AIN3_DATA += R_AIN3_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1385     	MOVR	_R_AIN3_DATA_LB,W
                                    1- 1386     	BANKSEL	r0x104A
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1387     	MOVAR	r0x104A
                                    1- 1388     ;;1	MOVAR	r0x1048
                                    1- 1389     ;;1	CLRR	r0x1049
                                    1- 1390     ;;100	MOVR	r0x1048,W
     0016 2100                      1- 1391     	MOVIA	0x00
                                    1- 1392     	BANKSEL	r0x104B
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1393     	MOVAR	r0x104B
                                    1- 1394     	BANKSEL	r0x104A
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1395     	MOVR	r0x104A,W
                                    1- 1396     	BANKSEL	_R_AIN3_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1397     	ADDAR	_R_AIN3_DATA,F
                                    1- 1398     	BANKSEL	r0x104B
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1399     	MOVR	r0x104B,W
     001F 0C03                      1- 1400     	BTRSC	STATUS,0
     0020 05rr                      1- 1401     	INCR	r0x104B,W
     0021 0D03                      1- 1402     	BTRSC	STATUS,2
                                    1- 1403     	MGOTO	_00004_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1404     	BANKSEL	_R_AIN3_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1405     	ADDAR	(_R_AIN3_DATA + 1),F
                                    1- 1406     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1407     _00004_DS_:
                                    1- 1408     	.line	938, "main.c"; 	R_AIN3_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1409     	BCR	STATUS,0
                                    1- 1410     	BANKSEL	_R_AIN3_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1411     	RRR	(_R_AIN3_DATA + 1),F
     0028 13rr                      1- 1412     	RRR	_R_AIN3_DATA,F
                                    1- 1413     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1414     	BCR	STATUS,0
     002A 13rr                      1- 1415     	RRR	(_R_AIN3_DATA + 1),F
     002B 13rr                      1- 1416     	RRR	_R_AIN3_DATA,F
                                    1- 1417     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1418     	BCR	STATUS,0
     002D 13rr                      1- 1419     	RRR	(_R_AIN3_DATA + 1),F
     002E 13rr                      1- 1420     	RRR	_R_AIN3_DATA,F
                                    1- 1421     	.line	939, "main.c"; 	}
                                    1- 1422     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1423     ; exit point of _checkChrgV
                                    1- 1425     ;***
                                    1- 1426     ;  pBlock Stats: dbName = C
                                    1- 1427     ;***
                                    1- 1428     ;has an exit
                                    1- 1429     ;functions called:
                                    1- 1430     ;   _F_AIN2_Convert
                                    1- 1431     ;   _F_AIN2_Convert
                                    1- 1432     ;4 compiler assigned registers:
                                    1- 1433     ;   r0x104C
                                    1- 1434     ;   r0x104D
                                    1- 1435     ;   r0x104E
                                    1- 1436     ;   r0x104F
                                    1- 1437     ;; Starting pCode block
                                    1- 1438     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1440     _checkBatAD:
                                    1- 1441     ; 2 exit points
                                    1- 1442     	.line	770, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1443     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1444     	CLRR	_R_AIN2_DATA_LB
                                    1- 1445     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1446     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1447     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1448     	.line	771, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1449     	MOVIA	0x08
                                    1- 1450     	MCALL	_F_AIN2_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1451     	.line	772, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1452     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1453     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1454     	ANDIA	0xf0
     000A 00rr                      1- 1455     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1456     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1457     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1458     	ANDIA	0x0f
     000E 11rr                      1- 1459     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1460     	XORAR	_R_AIN2_DATA,F
                                    1- 1461     	.line	773, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1462     	MOVIA	0xf0
                                    1- 1463     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1464     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1465     	.line	774, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1466     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1467     	BANKSEL	r0x104E
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1468     	MOVAR	r0x104E
                                    1- 1469     ;;1	MOVAR	r0x104C
                                    1- 1470     ;;1	CLRR	r0x104D
                                    1- 1471     ;;99	MOVR	r0x104C,W
     0016 2100                      1- 1472     	MOVIA	0x00
                                    1- 1473     	BANKSEL	r0x104F
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1474     	MOVAR	r0x104F
                                    1- 1475     	BANKSEL	r0x104E
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1476     	MOVR	r0x104E,W
                                    1- 1477     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1478     	ADDAR	_R_AIN2_DATA,F
                                    1- 1479     	BANKSEL	r0x104F
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1480     	MOVR	r0x104F,W
     001F 0C03                      1- 1481     	BTRSC	STATUS,0
     0020 05rr                      1- 1482     	INCR	r0x104F,W
     0021 0D03                      1- 1483     	BTRSC	STATUS,2
                                    1- 1484     	MGOTO	_00005_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1485     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1486     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1487     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1488     _00005_DS_:
                                    1- 1489     	.line	775, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0025 1C03                      1- 1490     	BCR	STATUS,0
                                    1- 1491     	BANKSEL	_R_AIN2_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1492     	RRR	(_R_AIN2_DATA + 1),F
     0028 13rr                      1- 1493     	RRR	_R_AIN2_DATA,F
                                    1- 1494     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1495     	BCR	STATUS,0
     002A 13rr                      1- 1496     	RRR	(_R_AIN2_DATA + 1),F
     002B 13rr                      1- 1497     	RRR	_R_AIN2_DATA,F
                                    1- 1498     ;;shiftRight_Left2ResultLit:5590: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1499     	BCR	STATUS,0
     002D 13rr                      1- 1500     	RRR	(_R_AIN2_DATA + 1),F
     002E 13rr                      1- 1501     	RRR	_R_AIN2_DATA,F
                                    1- 1502     	.line	776, "main.c"; 	if(debug)
                                    1- 1503     	BANKSEL	_debug
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1504     	MOVR	_debug,W
     0031 0D03                      1- 1505     	BTRSC	STATUS,2
                                    1- 1506     	MGOTO	_00597_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1507     	.line	777, "main.c"; 	R_AIN2_DATA = BATTLE;
     0033 210E                      1- 1508     	MOVIA	0x0e
                                    1- 1509     	BANKSEL	_R_AIN2_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1510     	MOVAR	_R_AIN2_DATA
     0036 2106                      1- 1511     	MOVIA	0x06
     0037 00rr                      1- 1512     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1513     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1514     ;;unsigned compare: left >= lit (0x60F=1551), size=2
     0038                           1- 1515     _00597_DS_:
                                    1- 1516     	.line	779, "main.c"; 	if(R_AIN2_DATA > 1550)
     0038 2106                      1- 1517     	MOVIA	0x06
                                    1- 1518     	BANKSEL	_R_AIN2_DATA
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1519     	SUBAR	(_R_AIN2_DATA + 1),W
     003B 0903                      1- 1520     	BTRSS	STATUS,2
                                    1- 1521     	MGOTO	_00815_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 210F                      1- 1522     	MOVIA	0x0f
     003E 04rr                      1- 1523     	SUBAR	_R_AIN2_DATA,W
     003F                           1- 1524     _00815_DS_:
     003F 0803                      1- 1525     	BTRSS	STATUS,0
                                    1- 1526     	MGOTO	_00604_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1527     	.line	782, "main.c"; 	lowCount = 0;
                                    1- 1528     	BANKSEL	_lowCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 1529     	CLRR	_lowCount
                                    1- 1530     	.line	782, "main.c"; 	}
                                    1- 1531     	MGOTO	_00605_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1532     ;;unsigned compare: left < lit (0x47E=1150), size=2
     0044                           1- 1533     _00604_DS_:
                                    1- 1534     	.line	784, "main.c"; 	else if(R_AIN2_DATA < 1150)
     0044 2104                      1- 1535     	MOVIA	0x04
                                    1- 1536     	BANKSEL	_R_AIN2_DATA
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 04rr                      1- 1537     	SUBAR	(_R_AIN2_DATA + 1),W
     0047 0903                      1- 1538     	BTRSS	STATUS,2
                                    1- 1539     	MGOTO	_00816_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 217E                      1- 1540     	MOVIA	0x7e
     004A 04rr                      1- 1541     	SUBAR	_R_AIN2_DATA,W
     004B                           1- 1542     _00816_DS_:
     004B 0C03                      1- 1543     	BTRSC	STATUS,0
                                    1- 1544     	MGOTO	_00601_DS_
     004C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1545     	.line	786, "main.c"; 	if(++lowCount < 10)
                                    1- 1546     	BANKSEL	_lowCount
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 05rr                      1- 1547     	INCR	_lowCount,F
                                    1- 1548     ;;unsigned compare: left < lit (0xA=10), size=1
     004F 210A                      1- 1549     	MOVIA	0x0a
     0050 04rr                      1- 1550     	SUBAR	_lowCount,W
     0051 0803                      1- 1551     	BTRSS	STATUS,0
                                    1- 1552     	.line	787, "main.c"; 	return;
                                    1- 1553     	MGOTO	_00690_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1554     	.line	788, "main.c"; 	lowCount = 10;
     0053 210A                      1- 1555     	MOVIA	0x0a
     0054 00rr                      1- 1556     	MOVAR	_lowCount
                                    1- 1557     	.line	789, "main.c"; 	pwStep = 0;
                                    1- 1558     	BANKSEL	_pwStep
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 02rr                      1- 1559     	CLRR	_pwStep
                                    1- 1560     	.line	790, "main.c"; 	R_AIN2_DATA = 1150;
     0057 217E                      1- 1561     	MOVIA	0x7e
                                    1- 1562     	BANKSEL	_R_AIN2_DATA
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 00rr                      1- 1563     	MOVAR	_R_AIN2_DATA
     005A 2104                      1- 1564     	MOVIA	0x04
     005B 00rr                      1- 1565     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1566     	.line	790, "main.c"; 	R_AIN2_DATA = 1150;
                                    1- 1567     	MGOTO	_00605_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
     005D                           1- 1568     _00601_DS_:
                                    1- 1569     	.line	802, "main.c"; 	lowCount = 0;
                                    1- 1570     	BANKSEL	_lowCount
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 02rr                      1- 1571     	CLRR	_lowCount
                                    1- 1572     	.line	803, "main.c"; 	firstTime = 0;
                                    1- 1573     	BANKSEL	_firstTime
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 02rr                      1- 1574     	CLRR	_firstTime
     0061                           1- 1575     _00605_DS_:
                                    1- 1576     	.line	806, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA - 1150;
     0061 2182                      1- 1577     	MOVIA	0x82
                                    1- 1578     	BANKSEL	_R_AIN2_DATA
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 03rr                      1- 1579     	ADDAR	_R_AIN2_DATA,F
     0064 21FB                      1- 1580     	MOVIA	0xfb
     0065 0C03                      1- 1581     	BTRSC	STATUS,0
     0066 21FC                      1- 1582     	MOVIA	0xfc
     0067 03rr                      1- 1583     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1584     ;;unsigned compare: left < lit (0x195=405), size=2
                                    1- 1585     	.line	807, "main.c"; 	if(R_AIN2_DATA >= 405)
     0068 2101                      1- 1586     	MOVIA	0x01
     0069 04rr                      1- 1587     	SUBAR	(_R_AIN2_DATA + 1),W
     006A 0903                      1- 1588     	BTRSS	STATUS,2
                                    1- 1589     	MGOTO	_00818_DS_
     006B 3rrr                      3-   63 m1      LGOTO rom_address
     006C 2195                      1- 1590     	MOVIA	0x95
     006D 04rr                      1- 1591     	SUBAR	_R_AIN2_DATA,W
     006E                           1- 1592     _00818_DS_:
     006E 0803                      1- 1593     	BTRSS	STATUS,0
                                    1- 1594     	MGOTO	_00607_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1595     	.line	809, "main.c"; 	pwStep = 7;
     0070 2107                      1- 1596     	MOVIA	0x07
                                    1- 1597     	BANKSEL	_pwStep
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 00rr                      1- 1598     	MOVAR	_pwStep
                                    1- 1599     ;;unsigned compare: left < lit (0x19A=410), size=2
     0073                           1- 1600     _00607_DS_:
                                    1- 1601     	.line	811, "main.c"; 	if(R_AIN2_DATA >= 410)
     0073 2101                      1- 1602     	MOVIA	0x01
                                    1- 1603     	BANKSEL	_R_AIN2_DATA
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 04rr                      1- 1604     	SUBAR	(_R_AIN2_DATA + 1),W
     0076 0903                      1- 1605     	BTRSS	STATUS,2
                                    1- 1606     	MGOTO	_00819_DS_
     0077 3rrr                      3-   63 m1      LGOTO rom_address
     0078 219A                      1- 1607     	MOVIA	0x9a
     0079 04rr                      1- 1608     	SUBAR	_R_AIN2_DATA,W
     007A                           1- 1609     _00819_DS_:
     007A 0803                      1- 1610     	BTRSS	STATUS,0
                                    1- 1611     	MGOTO	_00679_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1612     	.line	813, "main.c"; 	pwStep = 8;
     007C 2108                      1- 1613     	MOVIA	0x08
                                    1- 1614     	BANKSEL	_pwStep
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 00rr                      1- 1615     	MOVAR	_pwStep
                                    1- 1616     	MGOTO	_00680_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1617     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1618     ;;unsigned compare: left >= lit (0x15F=351), size=2
     0080                           1- 1619     _00679_DS_:
                                    1- 1620     	.line	815, "main.c"; 	else if(R_AIN2_DATA > 350)
     0080 2101                      1- 1621     	MOVIA	0x01
                                    1- 1622     	BANKSEL	_R_AIN2_DATA
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 04rr                      1- 1623     	SUBAR	(_R_AIN2_DATA + 1),W
     0083 0903                      1- 1624     	BTRSS	STATUS,2
                                    1- 1625     	MGOTO	_00820_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
     0085 215F                      1- 1626     	MOVIA	0x5f
     0086 04rr                      1- 1627     	SUBAR	_R_AIN2_DATA,W
     0087                           1- 1628     _00820_DS_:
     0087 0803                      1- 1629     	BTRSS	STATUS,0
                                    1- 1630     	MGOTO	_00676_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1631     ;;unsigned compare: left < lit (0x6=6), size=1
                                    1- 1632     	.line	818, "main.c"; 	if(pwStep < 6)
     0089 2106                      1- 1633     	MOVIA	0x06
                                    1- 1634     	BANKSEL	_pwStep
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 04rr                      1- 1635     	SUBAR	_pwStep,W
     008C 0C03                      1- 1636     	BTRSC	STATUS,0
                                    1- 1637     	MGOTO	_00614_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1638     	.line	820, "main.c"; 	fullCount = 0;
                                    1- 1639     	BANKSEL	_fullCount
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 02rr                      1- 1640     	CLRR	_fullCount
     0090 02rr                      1- 1641     	CLRR	(_fullCount + 1)
                                    1- 1642     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1643     ;;unsigned compare: left >= lit (0x164=356), size=2
                                    1- 1644     	.line	821, "main.c"; 	if(R_AIN2_DATA > 355)
     0091 2101                      1- 1645     	MOVIA	0x01
                                    1- 1646     	BANKSEL	_R_AIN2_DATA
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 04rr                      1- 1647     	SUBAR	(_R_AIN2_DATA + 1),W
     0094 0903                      1- 1648     	BTRSS	STATUS,2
                                    1- 1649     	MGOTO	_00822_DS_
     0095 3rrr                      3-   63 m1      LGOTO rom_address
     0096 2164                      1- 1650     	MOVIA	0x64
     0097 04rr                      1- 1651     	SUBAR	_R_AIN2_DATA,W
     0098                           1- 1652     _00822_DS_:
     0098 0803                      1- 1653     	BTRSS	STATUS,0
                                    1- 1654     	MGOTO	_00615_DS_
     0099 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1655     	.line	822, "main.c"; 	pwStep = 6;
     009A 2106                      1- 1656     	MOVIA	0x06
                                    1- 1657     	BANKSEL	_pwStep
     009B rrrr                      3-  110 m1      .banksel ram_address
     009C 00rr                      1- 1658     	MOVAR	_pwStep
                                    1- 1659     	MGOTO	_00615_DS_
     009D 3rrr                      3-   63 m1      LGOTO rom_address
     009E                           1- 1660     _00614_DS_:
                                    1- 1661     	.line	824, "main.c"; 	else if(chrgTime == 0 && R_AIN2_DATA < 396)
                                    1- 1662     	BANKSEL	_chrgTime
     009E rrrr                      3-  110 m1      .banksel ram_address
     009F 01rr                      1- 1663     	MOVR	_chrgTime,W
     00A0 11rr                      1- 1664     	IORAR	(_chrgTime + 1),W
     00A1 0903                      1- 1665     	BTRSS	STATUS,2
                                    1- 1666     	MGOTO	_00615_DS_
     00A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1667     ;;unsigned compare: left < lit (0x18C=396), size=2
     00A3 2101                      1- 1668     	MOVIA	0x01
                                    1- 1669     	BANKSEL	_R_AIN2_DATA
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 04rr                      1- 1670     	SUBAR	(_R_AIN2_DATA + 1),W
     00A6 0903                      1- 1671     	BTRSS	STATUS,2
                                    1- 1672     	MGOTO	_00823_DS_
     00A7 3rrr                      3-   63 m1      LGOTO rom_address
     00A8 218C                      1- 1673     	MOVIA	0x8c
     00A9 04rr                      1- 1674     	SUBAR	_R_AIN2_DATA,W
     00AA                           1- 1675     _00823_DS_:
     00AA 0C03                      1- 1676     	BTRSC	STATUS,0
                                    1- 1677     	MGOTO	_00615_DS_
     00AB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1678     	.line	826, "main.c"; 	pwStep = 6;
     00AC 2106                      1- 1679     	MOVIA	0x06
                                    1- 1680     	BANKSEL	_pwStep
     00AD rrrr                      3-  110 m1      .banksel ram_address
     00AE 00rr                      1- 1681     	MOVAR	_pwStep
                                    1- 1682     	.line	827, "main.c"; 	fullCount = 0;
                                    1- 1683     	BANKSEL	_fullCount
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 02rr                      1- 1684     	CLRR	_fullCount
     00B1 02rr                      1- 1685     	CLRR	(_fullCount + 1)
     00B2                           1- 1686     _00615_DS_:
                                    1- 1687     	.line	831, "main.c"; 	if(chrgTime > 0 && R_AIN2_DATA > 395 && chrgTime > 600)
                                    1- 1688     	BANKSEL	_chrgTime
     00B2 rrrr                      3-  110 m1      .banksel ram_address
     00B3 01rr                      1- 1689     	MOVR	_chrgTime,W
     00B4 11rr                      1- 1690     	IORAR	(_chrgTime + 1),W
     00B5 0D03                      1- 1691     	BTRSC	STATUS,2
                                    1- 1692     	MGOTO	_00680_DS_
     00B6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1693     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1694     ;;unsigned compare: left >= lit (0x18C=396), size=2
     00B7 2101                      1- 1695     	MOVIA	0x01
                                    1- 1696     	BANKSEL	_R_AIN2_DATA
     00B8 rrrr                      3-  110 m1      .banksel ram_address
     00B9 04rr                      1- 1697     	SUBAR	(_R_AIN2_DATA + 1),W
     00BA 0903                      1- 1698     	BTRSS	STATUS,2
                                    1- 1699     	MGOTO	_00824_DS_
     00BB 3rrr                      3-   63 m1      LGOTO rom_address
     00BC 218C                      1- 1700     	MOVIA	0x8c
     00BD 04rr                      1- 1701     	SUBAR	_R_AIN2_DATA,W
     00BE                           1- 1702     _00824_DS_:
     00BE 0803                      1- 1703     	BTRSS	STATUS,0
                                    1- 1704     	MGOTO	_00680_DS_
     00BF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1705     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1706     ;;unsigned compare: left >= lit (0x259=601), size=2
     00C0 2102                      1- 1707     	MOVIA	0x02
                                    1- 1708     	BANKSEL	_chrgTime
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 04rr                      1- 1709     	SUBAR	(_chrgTime + 1),W
     00C3 0903                      1- 1710     	BTRSS	STATUS,2
                                    1- 1711     	MGOTO	_00825_DS_
     00C4 3rrr                      3-   63 m1      LGOTO rom_address
     00C5 2159                      1- 1712     	MOVIA	0x59
     00C6 04rr                      1- 1713     	SUBAR	_chrgTime,W
     00C7                           1- 1714     _00825_DS_:
     00C7 0803                      1- 1715     	BTRSS	STATUS,0
                                    1- 1716     	MGOTO	_00680_DS_
     00C8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1717     	.line	833, "main.c"; 	chrgTime = 600;
     00C9 2158                      1- 1718     	MOVIA	0x58
                                    1- 1719     	BANKSEL	_chrgTime
     00CA rrrr                      3-  110 m1      .banksel ram_address
     00CB 00rr                      1- 1720     	MOVAR	_chrgTime
     00CC 2102                      1- 1721     	MOVIA	0x02
     00CD 00rr                      1- 1722     	MOVAR	(_chrgTime + 1)
                                    1- 1723     	.line	834, "main.c"; 	pwStep = 7;
     00CE 2107                      1- 1724     	MOVIA	0x07
                                    1- 1725     	BANKSEL	_pwStep
     00CF rrrr                      3-  110 m1      .banksel ram_address
     00D0 00rr                      1- 1726     	MOVAR	_pwStep
                                    1- 1727     	MGOTO	_00680_DS_
     00D1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1728     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1729     ;;unsigned compare: left >= lit (0x146=326), size=2
     00D2                           1- 1730     _00676_DS_:
                                    1- 1731     	.line	837, "main.c"; 	else if(R_AIN2_DATA > 325)
     00D2 2101                      1- 1732     	MOVIA	0x01
                                    1- 1733     	BANKSEL	_R_AIN2_DATA
     00D3 rrrr                      3-  110 m1      .banksel ram_address
     00D4 04rr                      1- 1734     	SUBAR	(_R_AIN2_DATA + 1),W
     00D5 0903                      1- 1735     	BTRSS	STATUS,2
                                    1- 1736     	MGOTO	_00826_DS_
     00D6 3rrr                      3-   63 m1      LGOTO rom_address
     00D7 2146                      1- 1737     	MOVIA	0x46
     00D8 04rr                      1- 1738     	SUBAR	_R_AIN2_DATA,W
     00D9                           1- 1739     _00826_DS_:
     00D9 0803                      1- 1740     	BTRSS	STATUS,0
                                    1- 1741     	MGOTO	_00673_DS_
     00DA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1742     	.line	840, "main.c"; 	if(pwStep == 4)
                                    1- 1743     	BANKSEL	_pwStep
     00DB rrrr                      3-  110 m1      .banksel ram_address
     00DC 01rr                      1- 1744     	MOVR	_pwStep,W
     00DD 2404                      1- 1745     	XORIA	0x04
     00DE 0903                      1- 1746     	BTRSS	STATUS,2
                                    1- 1747     	MGOTO	_00623_DS_
     00DF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1748     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1749     ;;unsigned compare: left >= lit (0x14B=331), size=2
                                    1- 1750     	.line	842, "main.c"; 	if(R_AIN2_DATA > 330)
     00E0 2101                      1- 1751     	MOVIA	0x01
                                    1- 1752     	BANKSEL	_R_AIN2_DATA
     00E1 rrrr                      3-  110 m1      .banksel ram_address
     00E2 04rr                      1- 1753     	SUBAR	(_R_AIN2_DATA + 1),W
     00E3 0903                      1- 1754     	BTRSS	STATUS,2
                                    1- 1755     	MGOTO	_00827_DS_
     00E4 3rrr                      3-   63 m1      LGOTO rom_address
     00E5 214B                      1- 1756     	MOVIA	0x4b
     00E6 04rr                      1- 1757     	SUBAR	_R_AIN2_DATA,W
     00E7                           1- 1758     _00827_DS_:
     00E7 0803                      1- 1759     	BTRSS	STATUS,0
                                    1- 1760     	MGOTO	_00623_DS_
     00E8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1761     	.line	843, "main.c"; 	pwStep = 5;
     00E9 2105                      1- 1762     	MOVIA	0x05
                                    1- 1763     	BANKSEL	_pwStep
     00EA rrrr                      3-  110 m1      .banksel ram_address
     00EB 00rr                      1- 1764     	MOVAR	_pwStep
                                    1- 1765     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1766     ;;unsigned compare: left >= lit (0x6=6), size=1
     00EC                           1- 1767     _00623_DS_:
                                    1- 1768     	.line	845, "main.c"; 	if(pwStep > 5)
     00EC 2106                      1- 1769     	MOVIA	0x06
                                    1- 1770     	BANKSEL	_pwStep
     00ED rrrr                      3-  110 m1      .banksel ram_address
     00EE 04rr                      1- 1771     	SUBAR	_pwStep,W
     00EF 0803                      1- 1772     	BTRSS	STATUS,0
                                    1- 1773     	MGOTO	_00627_DS_
     00F0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1774     ;;unsigned compare: left < lit (0x16D=365), size=2
                                    1- 1775     	.line	847, "main.c"; 	if(R_AIN2_DATA < 365)
     00F1 2101                      1- 1776     	MOVIA	0x01
                                    1- 1777     	BANKSEL	_R_AIN2_DATA
     00F2 rrrr                      3-  110 m1      .banksel ram_address
     00F3 04rr                      1- 1778     	SUBAR	(_R_AIN2_DATA + 1),W
     00F4 0903                      1- 1779     	BTRSS	STATUS,2
                                    1- 1780     	MGOTO	_00829_DS_
     00F5 3rrr                      3-   63 m1      LGOTO rom_address
     00F6 216D                      1- 1781     	MOVIA	0x6d
     00F7 04rr                      1- 1782     	SUBAR	_R_AIN2_DATA,W
     00F8                           1- 1783     _00829_DS_:
     00F8 0C03                      1- 1784     	BTRSC	STATUS,0
                                    1- 1785     	MGOTO	_00628_DS_
     00F9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1786     	.line	848, "main.c"; 	pwStep = 5;
     00FA 2105                      1- 1787     	MOVIA	0x05
                                    1- 1788     	BANKSEL	_pwStep
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 00rr                      1- 1789     	MOVAR	_pwStep
                                    1- 1790     	MGOTO	_00628_DS_
     00FD 3rrr                      3-   63 m1      LGOTO rom_address
     00FE                           1- 1791     _00627_DS_:
                                    1- 1792     	.line	851, "main.c"; 	pwStep = 5;
     00FE 2105                      1- 1793     	MOVIA	0x05
                                    1- 1794     	BANKSEL	_pwStep
     00FF rrrr                      3-  110 m1      .banksel ram_address
     0100 00rr                      1- 1795     	MOVAR	_pwStep
     0101                           1- 1796     _00628_DS_:
                                    1- 1797     	.line	852, "main.c"; 	chrgTime = 0;
                                    1- 1798     	BANKSEL	_chrgTime
     0101 rrrr                      3-  110 m1      .banksel ram_address
     0102 02rr                      1- 1799     	CLRR	_chrgTime
     0103 02rr                      1- 1800     	CLRR	(_chrgTime + 1)
                                    1- 1801     	MGOTO	_00680_DS_
     0104 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1802     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1803     ;;unsigned compare: left >= lit (0x105=261), size=2
     0105                           1- 1804     _00673_DS_:
                                    1- 1805     	.line	854, "main.c"; 	else if(R_AIN2_DATA > 260)
     0105 2101                      1- 1806     	MOVIA	0x01
                                    1- 1807     	BANKSEL	_R_AIN2_DATA
     0106 rrrr                      3-  110 m1      .banksel ram_address
     0107 04rr                      1- 1808     	SUBAR	(_R_AIN2_DATA + 1),W
     0108 0903                      1- 1809     	BTRSS	STATUS,2
                                    1- 1810     	MGOTO	_00830_DS_
     0109 3rrr                      3-   63 m1      LGOTO rom_address
     010A 2105                      1- 1811     	MOVIA	0x05
     010B 04rr                      1- 1812     	SUBAR	_R_AIN2_DATA,W
     010C                           1- 1813     _00830_DS_:
     010C 0803                      1- 1814     	BTRSS	STATUS,0
                                    1- 1815     	MGOTO	_00670_DS_
     010D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1816     	.line	856, "main.c"; 	if(pwStep == 3)
                                    1- 1817     	BANKSEL	_pwStep
     010E rrrr                      3-  110 m1      .banksel ram_address
     010F 01rr                      1- 1818     	MOVR	_pwStep,W
     0110 2403                      1- 1819     	XORIA	0x03
     0111 0903                      1- 1820     	BTRSS	STATUS,2
                                    1- 1821     	MGOTO	_00632_DS_
     0112 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1822     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1823     ;;unsigned compare: left >= lit (0x10A=266), size=2
                                    1- 1824     	.line	858, "main.c"; 	if(R_AIN2_DATA > 265)
     0113 2101                      1- 1825     	MOVIA	0x01
                                    1- 1826     	BANKSEL	_R_AIN2_DATA
     0114 rrrr                      3-  110 m1      .banksel ram_address
     0115 04rr                      1- 1827     	SUBAR	(_R_AIN2_DATA + 1),W
     0116 0903                      1- 1828     	BTRSS	STATUS,2
                                    1- 1829     	MGOTO	_00831_DS_
     0117 3rrr                      3-   63 m1      LGOTO rom_address
     0118 210A                      1- 1830     	MOVIA	0x0a
     0119 04rr                      1- 1831     	SUBAR	_R_AIN2_DATA,W
     011A                           1- 1832     _00831_DS_:
     011A 0803                      1- 1833     	BTRSS	STATUS,0
                                    1- 1834     	MGOTO	_00632_DS_
     011B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1835     	.line	859, "main.c"; 	pwStep = 4;
     011C 2104                      1- 1836     	MOVIA	0x04
                                    1- 1837     	BANKSEL	_pwStep
     011D rrrr                      3-  110 m1      .banksel ram_address
     011E 00rr                      1- 1838     	MOVAR	_pwStep
                                    1- 1839     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1840     ;;unsigned compare: left >= lit (0x5=5), size=1
     011F                           1- 1841     _00632_DS_:
                                    1- 1842     	.line	861, "main.c"; 	if(pwStep > 4)
     011F 2105                      1- 1843     	MOVIA	0x05
                                    1- 1844     	BANKSEL	_pwStep
     0120 rrrr                      3-  110 m1      .banksel ram_address
     0121 04rr                      1- 1845     	SUBAR	_pwStep,W
     0122 0803                      1- 1846     	BTRSS	STATUS,0
                                    1- 1847     	MGOTO	_00636_DS_
     0123 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1848     ;;unsigned compare: left < lit (0x140=320), size=2
                                    1- 1849     	.line	863, "main.c"; 	if(R_AIN2_DATA < 320)
     0124 2101                      1- 1850     	MOVIA	0x01
                                    1- 1851     	BANKSEL	_R_AIN2_DATA
     0125 rrrr                      3-  110 m1      .banksel ram_address
     0126 04rr                      1- 1852     	SUBAR	(_R_AIN2_DATA + 1),W
     0127 0903                      1- 1853     	BTRSS	STATUS,2
                                    1- 1854     	MGOTO	_00833_DS_
     0128 3rrr                      3-   63 m1      LGOTO rom_address
     0129 2140                      1- 1855     	MOVIA	0x40
     012A 04rr                      1- 1856     	SUBAR	_R_AIN2_DATA,W
     012B                           1- 1857     _00833_DS_:
     012B 0C03                      1- 1858     	BTRSC	STATUS,0
                                    1- 1859     	MGOTO	_00637_DS_
     012C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1860     	.line	864, "main.c"; 	pwStep = 4;
     012D 2104                      1- 1861     	MOVIA	0x04
                                    1- 1862     	BANKSEL	_pwStep
     012E rrrr                      3-  110 m1      .banksel ram_address
     012F 00rr                      1- 1863     	MOVAR	_pwStep
                                    1- 1864     	MGOTO	_00637_DS_
     0130 3rrr                      3-   63 m1      LGOTO rom_address
     0131                           1- 1865     _00636_DS_:
                                    1- 1866     	.line	867, "main.c"; 	pwStep = 4;
     0131 2104                      1- 1867     	MOVIA	0x04
                                    1- 1868     	BANKSEL	_pwStep
     0132 rrrr                      3-  110 m1      .banksel ram_address
     0133 00rr                      1- 1869     	MOVAR	_pwStep
     0134                           1- 1870     _00637_DS_:
                                    1- 1871     	.line	868, "main.c"; 	chrgTime = 0;
                                    1- 1872     	BANKSEL	_chrgTime
     0134 rrrr                      3-  110 m1      .banksel ram_address
     0135 02rr                      1- 1873     	CLRR	_chrgTime
     0136 02rr                      1- 1874     	CLRR	(_chrgTime + 1)
                                    1- 1875     	MGOTO	_00680_DS_
     0137 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1876     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1877     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0138                           1- 1878     _00670_DS_:
                                    1- 1879     	.line	870, "main.c"; 	else if(R_AIN2_DATA > 200)
     0138 2100                      1- 1880     	MOVIA	0x00
                                    1- 1881     	BANKSEL	_R_AIN2_DATA
     0139 rrrr                      3-  110 m1      .banksel ram_address
     013A 04rr                      1- 1882     	SUBAR	(_R_AIN2_DATA + 1),W
     013B 0903                      1- 1883     	BTRSS	STATUS,2
                                    1- 1884     	MGOTO	_00834_DS_
     013C 3rrr                      3-   63 m1      LGOTO rom_address
     013D 21C9                      1- 1885     	MOVIA	0xc9
     013E 04rr                      1- 1886     	SUBAR	_R_AIN2_DATA,W
     013F                           1- 1887     _00834_DS_:
     013F 0803                      1- 1888     	BTRSS	STATUS,0
                                    1- 1889     	MGOTO	_00667_DS_
     0140 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1890     	.line	872, "main.c"; 	if(pwStep == 2)
                                    1- 1891     	BANKSEL	_pwStep
     0141 rrrr                      3-  110 m1      .banksel ram_address
     0142 01rr                      1- 1892     	MOVR	_pwStep,W
     0143 2402                      1- 1893     	XORIA	0x02
     0144 0903                      1- 1894     	BTRSS	STATUS,2
                                    1- 1895     	MGOTO	_00641_DS_
     0145 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1896     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1897     ;;unsigned compare: left >= lit (0xD3=211), size=2
                                    1- 1898     	.line	874, "main.c"; 	if(R_AIN2_DATA > 210)
     0146 2100                      1- 1899     	MOVIA	0x00
                                    1- 1900     	BANKSEL	_R_AIN2_DATA
     0147 rrrr                      3-  110 m1      .banksel ram_address
     0148 04rr                      1- 1901     	SUBAR	(_R_AIN2_DATA + 1),W
     0149 0903                      1- 1902     	BTRSS	STATUS,2
                                    1- 1903     	MGOTO	_00835_DS_
     014A 3rrr                      3-   63 m1      LGOTO rom_address
     014B 21D3                      1- 1904     	MOVIA	0xd3
     014C 04rr                      1- 1905     	SUBAR	_R_AIN2_DATA,W
     014D                           1- 1906     _00835_DS_:
     014D 0803                      1- 1907     	BTRSS	STATUS,0
                                    1- 1908     	MGOTO	_00641_DS_
     014E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1909     	.line	875, "main.c"; 	pwStep = 3;
     014F 2103                      1- 1910     	MOVIA	0x03
                                    1- 1911     	BANKSEL	_pwStep
     0150 rrrr                      3-  110 m1      .banksel ram_address
     0151 00rr                      1- 1912     	MOVAR	_pwStep
                                    1- 1913     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1914     ;;unsigned compare: left >= lit (0x4=4), size=1
     0152                           1- 1915     _00641_DS_:
                                    1- 1916     	.line	877, "main.c"; 	if(pwStep > 3)
     0152 2104                      1- 1917     	MOVIA	0x04
                                    1- 1918     	BANKSEL	_pwStep
     0153 rrrr                      3-  110 m1      .banksel ram_address
     0154 04rr                      1- 1919     	SUBAR	_pwStep,W
     0155 0803                      1- 1920     	BTRSS	STATUS,0
                                    1- 1921     	MGOTO	_00645_DS_
     0156 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1922     ;;unsigned compare: left < lit (0x104=260), size=2
                                    1- 1923     	.line	879, "main.c"; 	if(R_AIN2_DATA < 260)
     0157 2101                      1- 1924     	MOVIA	0x01
                                    1- 1925     	BANKSEL	_R_AIN2_DATA
     0158 rrrr                      3-  110 m1      .banksel ram_address
     0159 04rr                      1- 1926     	SUBAR	(_R_AIN2_DATA + 1),W
     015A 0903                      1- 1927     	BTRSS	STATUS,2
                                    1- 1928     	MGOTO	_00837_DS_
     015B 3rrr                      3-   63 m1      LGOTO rom_address
     015C 2104                      1- 1929     	MOVIA	0x04
     015D 04rr                      1- 1930     	SUBAR	_R_AIN2_DATA,W
     015E                           1- 1931     _00837_DS_:
     015E 0C03                      1- 1932     	BTRSC	STATUS,0
                                    1- 1933     	MGOTO	_00646_DS_
     015F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1934     	.line	880, "main.c"; 	pwStep = 3;
     0160 2103                      1- 1935     	MOVIA	0x03
                                    1- 1936     	BANKSEL	_pwStep
     0161 rrrr                      3-  110 m1      .banksel ram_address
     0162 00rr                      1- 1937     	MOVAR	_pwStep
                                    1- 1938     	MGOTO	_00646_DS_
     0163 3rrr                      3-   63 m1      LGOTO rom_address
     0164                           1- 1939     _00645_DS_:
                                    1- 1940     	.line	883, "main.c"; 	pwStep = 3;
     0164 2103                      1- 1941     	MOVIA	0x03
                                    1- 1942     	BANKSEL	_pwStep
     0165 rrrr                      3-  110 m1      .banksel ram_address
     0166 00rr                      1- 1943     	MOVAR	_pwStep
     0167                           1- 1944     _00646_DS_:
                                    1- 1945     	.line	884, "main.c"; 	chrgTime = 0;
                                    1- 1946     	BANKSEL	_chrgTime
     0167 rrrr                      3-  110 m1      .banksel ram_address
     0168 02rr                      1- 1947     	CLRR	_chrgTime
     0169 02rr                      1- 1948     	CLRR	(_chrgTime + 1)
                                    1- 1949     	MGOTO	_00680_DS_
     016A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1950     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1951     ;;unsigned compare: left >= lit (0x65=101), size=2
     016B                           1- 1952     _00667_DS_:
                                    1- 1953     	.line	886, "main.c"; 	else if(R_AIN2_DATA > 100)
     016B 2100                      1- 1954     	MOVIA	0x00
                                    1- 1955     	BANKSEL	_R_AIN2_DATA
     016C rrrr                      3-  110 m1      .banksel ram_address
     016D 04rr                      1- 1956     	SUBAR	(_R_AIN2_DATA + 1),W
     016E 0903                      1- 1957     	BTRSS	STATUS,2
                                    1- 1958     	MGOTO	_00838_DS_
     016F 3rrr                      3-   63 m1      LGOTO rom_address
     0170 2165                      1- 1959     	MOVIA	0x65
     0171 04rr                      1- 1960     	SUBAR	_R_AIN2_DATA,W
     0172                           1- 1961     _00838_DS_:
     0172 0803                      1- 1962     	BTRSS	STATUS,0
                                    1- 1963     	MGOTO	_00664_DS_
     0173 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1964     	.line	889, "main.c"; 	if(pwStep == 1)
                                    1- 1965     	BANKSEL	_pwStep
     0174 rrrr                      3-  110 m1      .banksel ram_address
     0175 01rr                      1- 1966     	MOVR	_pwStep,W
     0176 2401                      1- 1967     	XORIA	0x01
     0177 0903                      1- 1968     	BTRSS	STATUS,2
                                    1- 1969     	MGOTO	_00650_DS_
     0178 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1970     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1971     ;;unsigned compare: left >= lit (0x6F=111), size=2
                                    1- 1972     	.line	891, "main.c"; 	if(R_AIN2_DATA > 110)
     0179 2100                      1- 1973     	MOVIA	0x00
                                    1- 1974     	BANKSEL	_R_AIN2_DATA
     017A rrrr                      3-  110 m1      .banksel ram_address
     017B 04rr                      1- 1975     	SUBAR	(_R_AIN2_DATA + 1),W
     017C 0903                      1- 1976     	BTRSS	STATUS,2
                                    1- 1977     	MGOTO	_00839_DS_
     017D 3rrr                      3-   63 m1      LGOTO rom_address
     017E 216F                      1- 1978     	MOVIA	0x6f
     017F 04rr                      1- 1979     	SUBAR	_R_AIN2_DATA,W
     0180                           1- 1980     _00839_DS_:
     0180 0803                      1- 1981     	BTRSS	STATUS,0
                                    1- 1982     	MGOTO	_00650_DS_
     0181 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1983     	.line	892, "main.c"; 	pwStep = 2;
     0182 2102                      1- 1984     	MOVIA	0x02
                                    1- 1985     	BANKSEL	_pwStep
     0183 rrrr                      3-  110 m1      .banksel ram_address
     0184 00rr                      1- 1986     	MOVAR	_pwStep
                                    1- 1987     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1988     ;;unsigned compare: left >= lit (0x3=3), size=1
     0185                           1- 1989     _00650_DS_:
                                    1- 1990     	.line	894, "main.c"; 	if(pwStep > 2)
     0185 2103                      1- 1991     	MOVIA	0x03
                                    1- 1992     	BANKSEL	_pwStep
     0186 rrrr                      3-  110 m1      .banksel ram_address
     0187 04rr                      1- 1993     	SUBAR	_pwStep,W
     0188 0803                      1- 1994     	BTRSS	STATUS,0
                                    1- 1995     	MGOTO	_00654_DS_
     0189 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1996     ;;unsigned compare: left < lit (0xBE=190), size=2
                                    1- 1997     	.line	896, "main.c"; 	if(R_AIN2_DATA < 190)
     018A 2100                      1- 1998     	MOVIA	0x00
                                    1- 1999     	BANKSEL	_R_AIN2_DATA
     018B rrrr                      3-  110 m1      .banksel ram_address
     018C 04rr                      1- 2000     	SUBAR	(_R_AIN2_DATA + 1),W
     018D 0903                      1- 2001     	BTRSS	STATUS,2
                                    1- 2002     	MGOTO	_00841_DS_
     018E 3rrr                      3-   63 m1      LGOTO rom_address
     018F 21BE                      1- 2003     	MOVIA	0xbe
     0190 04rr                      1- 2004     	SUBAR	_R_AIN2_DATA,W
     0191                           1- 2005     _00841_DS_:
     0191 0C03                      1- 2006     	BTRSC	STATUS,0
                                    1- 2007     	MGOTO	_00655_DS_
     0192 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2008     	.line	897, "main.c"; 	pwStep = 2;
     0193 2102                      1- 2009     	MOVIA	0x02
                                    1- 2010     	BANKSEL	_pwStep
     0194 rrrr                      3-  110 m1      .banksel ram_address
     0195 00rr                      1- 2011     	MOVAR	_pwStep
                                    1- 2012     	MGOTO	_00655_DS_
     0196 3rrr                      3-   63 m1      LGOTO rom_address
     0197                           1- 2013     _00654_DS_:
                                    1- 2014     	.line	900, "main.c"; 	pwStep = 2;
     0197 2102                      1- 2015     	MOVIA	0x02
                                    1- 2016     	BANKSEL	_pwStep
     0198 rrrr                      3-  110 m1      .banksel ram_address
     0199 00rr                      1- 2017     	MOVAR	_pwStep
     019A                           1- 2018     _00655_DS_:
                                    1- 2019     	.line	901, "main.c"; 	chrgTime = 0;
                                    1- 2020     	BANKSEL	_chrgTime
     019A rrrr                      3-  110 m1      .banksel ram_address
     019B 02rr                      1- 2021     	CLRR	_chrgTime
     019C 02rr                      1- 2022     	CLRR	(_chrgTime + 1)
                                    1- 2023     	MGOTO	_00680_DS_
     019D 3rrr                      3-   63 m1      LGOTO rom_address
     019E                           1- 2024     _00664_DS_:
                                    1- 2025     	.line	903, "main.c"; 	else  if(R_AIN2_DATA > 0)
                                    1- 2026     	BANKSEL	_R_AIN2_DATA
     019E rrrr                      3-  110 m1      .banksel ram_address
     019F 01rr                      1- 2027     	MOVR	_R_AIN2_DATA,W
     01A0 11rr                      1- 2028     	IORAR	(_R_AIN2_DATA + 1),W
     01A1 0D03                      1- 2029     	BTRSC	STATUS,2
                                    1- 2030     	MGOTO	_00680_DS_
     01A2 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2031     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2032     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 2033     	.line	906, "main.c"; 	if(pwStep > 1)
     01A3 2102                      1- 2034     	MOVIA	0x02
                                    1- 2035     	BANKSEL	_pwStep
     01A4 rrrr                      3-  110 m1      .banksel ram_address
     01A5 04rr                      1- 2036     	SUBAR	_pwStep,W
     01A6 0803                      1- 2037     	BTRSS	STATUS,0
                                    1- 2038     	MGOTO	_00659_DS_
     01A7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2039     ;;unsigned compare: left < lit (0x5A=90), size=2
                                    1- 2040     	.line	908, "main.c"; 	if(R_AIN2_DATA < 90)
     01A8 2100                      1- 2041     	MOVIA	0x00
                                    1- 2042     	BANKSEL	_R_AIN2_DATA
     01A9 rrrr                      3-  110 m1      .banksel ram_address
     01AA 04rr                      1- 2043     	SUBAR	(_R_AIN2_DATA + 1),W
     01AB 0903                      1- 2044     	BTRSS	STATUS,2
                                    1- 2045     	MGOTO	_00843_DS_
     01AC 3rrr                      3-   63 m1      LGOTO rom_address
     01AD 215A                      1- 2046     	MOVIA	0x5a
     01AE 04rr                      1- 2047     	SUBAR	_R_AIN2_DATA,W
     01AF                           1- 2048     _00843_DS_:
     01AF 0C03                      1- 2049     	BTRSC	STATUS,0
                                    1- 2050     	MGOTO	_00660_DS_
     01B0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2051     	.line	909, "main.c"; 	pwStep = 1;
     01B1 2101                      1- 2052     	MOVIA	0x01
                                    1- 2053     	BANKSEL	_pwStep
     01B2 rrrr                      3-  110 m1      .banksel ram_address
     01B3 00rr                      1- 2054     	MOVAR	_pwStep
                                    1- 2055     	MGOTO	_00660_DS_
     01B4 3rrr                      3-   63 m1      LGOTO rom_address
     01B5                           1- 2056     _00659_DS_:
                                    1- 2057     	.line	912, "main.c"; 	pwStep = 1;
     01B5 2101                      1- 2058     	MOVIA	0x01
                                    1- 2059     	BANKSEL	_pwStep
     01B6 rrrr                      3-  110 m1      .banksel ram_address
     01B7 00rr                      1- 2060     	MOVAR	_pwStep
     01B8                           1- 2061     _00660_DS_:
                                    1- 2062     	.line	913, "main.c"; 	chrgTime = 0;
                                    1- 2063     	BANKSEL	_chrgTime
     01B8 rrrr                      3-  110 m1      .banksel ram_address
     01B9 02rr                      1- 2064     	CLRR	_chrgTime
     01BA 02rr                      1- 2065     	CLRR	(_chrgTime + 1)
     01BB                           1- 2066     _00680_DS_:
                                    1- 2067     	.line	915, "main.c"; 	if(PORTA & 0x08)
                                    1- 2068     	BANKSEL	_PORTA
     01BB rrrr                      3-  110 m1      .banksel ram_address
     01BC 09rr                      1- 2069     	BTRSS	_PORTA,3
                                    1- 2070     	MGOTO	_00686_DS_
     01BD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2071     	.line	917, "main.c"; 	if(pwStep > prePwStep)
                                    1- 2072     	BANKSEL	_pwStep
     01BE rrrr                      3-  110 m1      .banksel ram_address
     01BF 01rr                      1- 2073     	MOVR	_pwStep,W
                                    1- 2074     	BANKSEL	_prePwStep
     01C0 rrrr                      3-  110 m1      .banksel ram_address
     01C1 04rr                      1- 2075     	SUBAR	_prePwStep,W
     01C2 0C03                      1- 2076     	BTRSC	STATUS,0
                                    1- 2077     	MGOTO	_00687_DS_
     01C3 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2078     	.line	918, "main.c"; 	prePwStep = pwStep;
                                    1- 2079     	BANKSEL	_pwStep
     01C4 rrrr                      3-  110 m1      .banksel ram_address
     01C5 01rr                      1- 2080     	MOVR	_pwStep,W
                                    1- 2081     	BANKSEL	_prePwStep
     01C6 rrrr                      3-  110 m1      .banksel ram_address
     01C7 00rr                      1- 2082     	MOVAR	_prePwStep
                                    1- 2083     	MGOTO	_00687_DS_
     01C8 3rrr                      3-   63 m1      LGOTO rom_address
     01C9                           1- 2084     _00686_DS_:
                                    1- 2085     	.line	922, "main.c"; 	if(pwStep < prePwStep)
                                    1- 2086     	BANKSEL	_prePwStep
     01C9 rrrr                      3-  110 m1      .banksel ram_address
     01CA 01rr                      1- 2087     	MOVR	_prePwStep,W
                                    1- 2088     	BANKSEL	_pwStep
     01CB rrrr                      3-  110 m1      .banksel ram_address
     01CC 04rr                      1- 2089     	SUBAR	_pwStep,W
     01CD 0C03                      1- 2090     	BTRSC	STATUS,0
                                    1- 2091     	MGOTO	_00687_DS_
     01CE 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2092     	.line	923, "main.c"; 	prePwStep = pwStep;
     01CF 01rr                      1- 2093     	MOVR	_pwStep,W
                                    1- 2094     	BANKSEL	_prePwStep
     01D0 rrrr                      3-  110 m1      .banksel ram_address
     01D1 00rr                      1- 2095     	MOVAR	_prePwStep
     01D2                           1- 2096     _00687_DS_:
                                    1- 2097     	.line	925, "main.c"; 	if(prePwStep > 0)
                                    1- 2098     	BANKSEL	_prePwStep
     01D2 rrrr                      3-  110 m1      .banksel ram_address
     01D3 01rr                      1- 2099     	MOVR	_prePwStep,W
     01D4 0D03                      1- 2100     	BTRSC	STATUS,2
                                    1- 2101     	MGOTO	_00690_DS_
     01D5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2102     	.line	926, "main.c"; 	pwStep = prePwStep;
     01D6 01rr                      1- 2103     	MOVR	_prePwStep,W
                                    1- 2104     	BANKSEL	_pwStep
     01D7 rrrr                      3-  110 m1      .banksel ram_address
     01D8 00rr                      1- 2105     	MOVAR	_pwStep
     01D9                           1- 2106     _00690_DS_:
                                    1- 2107     	.line	928, "main.c"; 	}
                                    1- 2108     	RETURN	
     01D9 0010                      3-   40 m1      ret
                                    1- 2109     ; exit point of _checkBatAD
                                    1- 2111     ;***
                                    1- 2112     ;  pBlock Stats: dbName = C
                                    1- 2113     ;***
                                    1- 2114     ;has an exit
                                    1- 2115     ;functions called:
                                    1- 2116     ;   _delay
                                    1- 2117     ;   _delay
                                    1- 2118     ;; Starting pCode block
                                    1- 2119     .segment "code"; module=main, function=_initAD
     0000                           1- 2121     _initAD:
                                    1- 2122     ; 2 exit points
                                    1- 2123     	.line	746, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 2124     	MOVIA	0x84
     0001 00rr                      1- 2125     	MOVAR	_ADMD
                                    1- 2126     	.line	751, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 2127     	CLRR	_ADVREFH
                                    1- 2128     	.line	756, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 2129     	MOVIA	0x10
     0004 00rr                      1- 2130     	MOVAR	_ADR
                                    1- 2131     	.line	758, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 2132     	MOVIA	0x03
     0006 00rr                      1- 2133     	MOVAR	_ADCR
                                    1- 2134     	.line	761, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 2135     	BSR	_ADMDbits,4
                                    1- 2136     	.line	762, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 2137     	MOVIA	0x64
                                    1- 2138     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2139     	.line	765, "main.c"; 	}
                                    1- 2140     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 2141     ; exit point of _initAD
                                    1- 2143     ;***
                                    1- 2144     ;  pBlock Stats: dbName = C
                                    1- 2145     ;***
                                    1- 2146     ;has an exit
                                    1- 2147     ;2 compiler assigned registers:
                                    1- 2148     ;   r0x1034
                                    1- 2149     ;   r0x1035
                                    1- 2150     ;; Starting pCode block
                                    1- 2151     .segment "code"; module=main, function=_delay
                                    1- 2153     ;local variable name mapping:
     0000                           1- 2156     _delay:
                                    1- 2157     ; 2 exit points
                                    1- 2158     	.line	736, "main.c"; 	void delay(u8t time)
                                    1- 2159     	BANKSEL	r0x1034
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2160     	MOVAR	r0x1034
                                    1- 2161     	.line	738, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2162     	BANKSEL	r0x1035
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 2163     	CLRR	r0x1035
     0004                           1- 2164     _00585_DS_:
                                    1- 2165     	BANKSEL	r0x1034
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 2166     	MOVR	r0x1034,W
                                    1- 2167     	BANKSEL	r0x1035
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1- 2168     	SUBAR	r0x1035,W
     0008 0C03                      1- 2169     	BTRSC	STATUS,0
                                    1- 2170     	MGOTO	_00587_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2171     	.line	739, "main.c"; 	NOP();
     000A 0000                      1- 2172     	nop
                                    1- 2173     	.line	738, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 2174     	BANKSEL	r0x1035
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 2175     	INCR	r0x1035,F
                                    1- 2176     	MGOTO	_00585_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 2177     _00587_DS_:
                                    1- 2178     	.line	740, "main.c"; 	}
                                    1- 2179     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2180     ; exit point of _delay
                                    1- 2182     ;***
                                    1- 2183     ;  pBlock Stats: dbName = C
                                    1- 2184     ;***
                                    1- 2185     ;has an exit
                                    1- 2186     ;functions called:
                                    1- 2187     ;   _pwmStop
                                    1- 2188     ;   _pwm1Stop
                                    1- 2189     ;   _pwm1Init
                                    1- 2190     ;   _pwm1Stop
                                    1- 2191     ;   _pwmStop
                                    1- 2192     ;   _pwm1Stop
                                    1- 2193     ;   _pwm1Init
                                    1- 2194     ;   _pwm1Stop
                                    1- 2195     ;5 compiler assigned registers:
                                    1- 2196     ;   r0x1051
                                    1- 2197     ;   r0x1052
                                    1- 2198     ;   r0x1053
                                    1- 2199     ;   r0x1054
                                    1- 2200     ;   r0x1055
                                    1- 2201     ;; Starting pCode block
                                    1- 2202     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 2204     _chrgCtr:
                                    1- 2205     ; 2 exit points
                                    1- 2206     	.line	641, "main.c"; 	if(PORTA & 0x08 || R_AIN3_DATA > 200)
                                    1- 2207     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 0Drr                      1- 2208     	BTRSC	_PORTA,3
                                    1- 2209     	MGOTO	_00510_DS_
     0002 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2210     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2211     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0003 2100                      1- 2212     	MOVIA	0x00
                                    1- 2213     	BANKSEL	_R_AIN3_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 04rr                      1- 2214     	SUBAR	(_R_AIN3_DATA + 1),W
     0006 0903                      1- 2215     	BTRSS	STATUS,2
                                    1- 2216     	MGOTO	_00573_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
     0008 21C9                      1- 2217     	MOVIA	0xc9
     0009 04rr                      1- 2218     	SUBAR	_R_AIN3_DATA,W
     000A                           1- 2219     _00573_DS_:
     000A 0803                      1- 2220     	BTRSS	STATUS,0
                                    1- 2221     	MGOTO	_00511_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
     000C                           1- 2222     _00510_DS_:
                                    1- 2223     	.line	644, "main.c"; 	chrgFlag = 1;
                                    1- 2224     	BANKSEL	_Status
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 19rr                      1- 2225     	BSR	_Status,3
                                    1- 2226     	.line	645, "main.c"; 	workStep = 0;
                                    1- 2227     	BANKSEL	_workStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1- 2228     	CLRR	_workStep
                                    1- 2229     	.line	646, "main.c"; 	ledLightTime = 0;
                                    1- 2230     	BANKSEL	_ledLightTime
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 02rr                      1- 2231     	CLRR	_ledLightTime
                                    1- 2232     	.line	647, "main.c"; 	pwmStop();
                                    1- 2233     	MCALL	_pwmStop
     0012 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2234     ;;unsigned compare: left < lit (0x7=7), size=1
                                    1- 2235     	.line	649, "main.c"; 	if(pwStep >= 7)
     0013 2107                      1- 2236     	MOVIA	0x07
                                    1- 2237     	BANKSEL	_pwStep
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 2238     	SUBAR	_pwStep,W
     0016 0803                      1- 2239     	BTRSS	STATUS,0
                                    1- 2240     	MGOTO	_00506_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2241     	.line	651, "main.c"; 	chrgStep = 6;
     0018 2106                      1- 2242     	MOVIA	0x06
                                    1- 2243     	BANKSEL	_chrgStep
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 00rr                      1- 2244     	MOVAR	_chrgStep
                                    1- 2245     	.line	653, "main.c"; 	ledStep = 6;
                                    1- 2246     	BANKSEL	_ledStep
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 2247     	MOVAR	_ledStep
                                    1- 2248     	.line	654, "main.c"; 	if(pwStep == 8 && ++fullCount >= 100)
                                    1- 2249     	BANKSEL	_pwStep
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 2250     	MOVR	_pwStep,W
     001F 2408                      1- 2251     	XORIA	0x08
     0020 0903                      1- 2252     	BTRSS	STATUS,2
                                    1- 2253     	MGOTO	_00514_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2254     	BANKSEL	_fullCount
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 05rr                      1- 2255     	INCR	_fullCount,F
     0024 0D03                      1- 2256     	BTRSC	STATUS,2
     0025 05rr                      1- 2257     	INCR	(_fullCount + 1),F
                                    1- 2258     ;;unsigned compare: left < lit (0x64=100), size=2
     0026 2100                      1- 2259     	MOVIA	0x00
     0027 04rr                      1- 2260     	SUBAR	(_fullCount + 1),W
     0028 0903                      1- 2261     	BTRSS	STATUS,2
                                    1- 2262     	MGOTO	_00575_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
     002A 2164                      1- 2263     	MOVIA	0x64
     002B 04rr                      1- 2264     	SUBAR	_fullCount,W
     002C                           1- 2265     _00575_DS_:
     002C 0803                      1- 2266     	BTRSS	STATUS,0
                                    1- 2267     	MGOTO	_00514_DS_
     002D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2268     	.line	656, "main.c"; 	fullCount = 100;
     002E 2164                      1- 2269     	MOVIA	0x64
                                    1- 2270     	BANKSEL	_fullCount
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 00rr                      1- 2271     	MOVAR	_fullCount
     0031 02rr                      1- 2272     	CLRR	(_fullCount + 1)
                                    1- 2273     	.line	657, "main.c"; 	pwm1Stop();
                                    1- 2274     	MCALL	_pwm1Stop
     0032 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2275     	.line	658, "main.c"; 	PORTB &= 0xF7;
     0033 1Drr                      1- 2276     	BCR	_PORTB,3
                                    1- 2277     	MGOTO	_00514_DS_
     0034 3rrr                      3-   63 m1      LGOTO rom_address
     0035                           1- 2278     _00506_DS_:
                                    1- 2279     	.line	667, "main.c"; 	IOSTB &= 0xF7;
     0035 001r                      1- 2280     	IOSTR	_IOSTB
                                    1- 2281     	BANKSEL	r0x1051
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 00rr                      1- 2282     	MOVAR	r0x1051
     0038 1Drr                      1- 2283     	BCR	r0x1051,3
     0039 01rr                      1- 2284     	MOVR	r0x1051,W
     003A 000r                      1- 2285     	IOST	_IOSTB
                                    1- 2286     	.line	669, "main.c"; 	if(count500ms == 0 && pwStep < 7 && chrgStep < 6)
                                    1- 2287     	BANKSEL	_count500ms
     003B rrrr                      3-  110 m1      .banksel ram_address
     003C 01rr                      1- 2288     	MOVR	_count500ms,W
     003D 0903                      1- 2289     	BTRSS	STATUS,2
                                    1- 2290     	MGOTO	_00480_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2291     ;;unsigned compare: left < lit (0x7=7), size=1
     003F 2107                      1- 2292     	MOVIA	0x07
                                    1- 2293     	BANKSEL	_pwStep
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 04rr                      1- 2294     	SUBAR	_pwStep,W
     0042 0C03                      1- 2295     	BTRSC	STATUS,0
                                    1- 2296     	MGOTO	_00480_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2297     ;;unsigned compare: left < lit (0x6=6), size=1
     0044 2106                      1- 2298     	MOVIA	0x06
                                    1- 2299     	BANKSEL	_chrgStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 04rr                      1- 2300     	SUBAR	_chrgStep,W
     0047 0C03                      1- 2301     	BTRSC	STATUS,0
                                    1- 2302     	MGOTO	_00480_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2303     	.line	671, "main.c"; 	if(lockLedStep < pwStep - 1)
                                    1- 2304     	BANKSEL	_pwStep
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 01rr                      1- 2305     	MOVR	_pwStep,W
                                    1- 2306     	BANKSEL	r0x1051
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 00rr                      1- 2307     	MOVAR	r0x1051
                                    1- 2308     	BANKSEL	r0x1052
     004D rrrr                      3-  110 m1      .banksel ram_address
     004E 02rr                      1- 2309     	CLRR	r0x1052
     004F 21FF                      1- 2310     	MOVIA	0xff
                                    1- 2311     	BANKSEL	r0x1051
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 03rr                      1- 2312     	ADDAR	r0x1051,F
     0052 0C03                      1- 2313     	BTRSC	STATUS,0
                                    1- 2314     	MGOTO	_00006_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2315     	BANKSEL	r0x1052
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 06rr                      1- 2316     	DECR	r0x1052,F
     0056                           1- 2317     _00006_DS_:
                                    1- 2318     	BANKSEL	_lockLedStep
     0056 rrrr                      3-  110 m1      .banksel ram_address
     0057 01rr                      1- 2319     	MOVR	_lockLedStep,W
                                    1- 2320     	BANKSEL	r0x1053
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 00rr                      1- 2321     	MOVAR	r0x1053
                                    1- 2322     ;;1	CLRR	r0x1054
     005A 2100                      1- 2323     	MOVIA	0x00
     005B 2580                      1- 2324     	ADDIA	0x80
                                    1- 2325     	BANKSEL	r0x1055
     005C rrrr                      3-  110 m1      .banksel ram_address
     005D 00rr                      1- 2326     	MOVAR	r0x1055
                                    1- 2327     	BANKSEL	r0x1052
     005E rrrr                      3-  110 m1      .banksel ram_address
     005F 01rr                      1- 2328     	MOVR	r0x1052,W
     0060 2580                      1- 2329     	ADDIA	0x80
                                    1- 2330     	BANKSEL	r0x1055
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 04rr                      1- 2331     	SUBAR	r0x1055,W
     0063 0903                      1- 2332     	BTRSS	STATUS,2
                                    1- 2333     	MGOTO	_00578_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2334     	BANKSEL	r0x1051
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 01rr                      1- 2335     	MOVR	r0x1051,W
                                    1- 2336     	BANKSEL	r0x1053
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 04rr                      1- 2337     	SUBAR	r0x1053,W
     0069                           1- 2338     _00578_DS_:
     0069 0C03                      1- 2339     	BTRSC	STATUS,0
                                    1- 2340     	MGOTO	_00476_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2341     	.line	672, "main.c"; 	lockLedStep = pwStep - 1;
                                    1- 2342     	BANKSEL	_pwStep
     006B rrrr                      3-  110 m1      .banksel ram_address
     006C 06rr                      1- 2343     	DECR	_pwStep,W
                                    1- 2344     	BANKSEL	_lockLedStep
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 00rr                      1- 2345     	MOVAR	_lockLedStep
     006F                           1- 2346     _00476_DS_:
                                    1- 2347     	.line	673, "main.c"; 	if(++ledStep > 6)
                                    1- 2348     	BANKSEL	_ledStep
     006F rrrr                      3-  110 m1      .banksel ram_address
     0070 05rr                      1- 2349     	INCR	_ledStep,F
                                    1- 2350     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2351     ;;unsigned compare: left >= lit (0x7=7), size=1
     0071 2107                      1- 2352     	MOVIA	0x07
     0072 04rr                      1- 2353     	SUBAR	_ledStep,W
     0073 0803                      1- 2354     	BTRSS	STATUS,0
                                    1- 2355     	MGOTO	_00480_DS_
     0074 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2356     	.line	674, "main.c"; 	ledStep = lockLedStep;
                                    1- 2357     	BANKSEL	_lockLedStep
     0075 rrrr                      3-  110 m1      .banksel ram_address
     0076 01rr                      1- 2358     	MOVR	_lockLedStep,W
                                    1- 2359     	BANKSEL	_ledStep
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 00rr                      1- 2360     	MOVAR	_ledStep
                                    1- 2361     ;;unsigned compare: left < lit (0x1=1), size=1
     0079                           1- 2362     _00480_DS_:
                                    1- 2363     	.line	677, "main.c"; 	if(pwStep < 1)
     0079 2101                      1- 2364     	MOVIA	0x01
                                    1- 2365     	BANKSEL	_pwStep
     007A rrrr                      3-  110 m1      .banksel ram_address
     007B 04rr                      1- 2366     	SUBAR	_pwStep,W
     007C 0C03                      1- 2367     	BTRSC	STATUS,0
                                    1- 2368     	MGOTO	_00503_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2369     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2370     ;;unsigned compare: left >= lit (0x2=2), size=1
                                    1- 2371     	.line	679, "main.c"; 	if(chrgStep <= 1)
     007E 2102                      1- 2372     	MOVIA	0x02
                                    1- 2373     	BANKSEL	_chrgStep
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 04rr                      1- 2374     	SUBAR	_chrgStep,W
     0081 0C03                      1- 2375     	BTRSC	STATUS,0
                                    1- 2376     	MGOTO	_00504_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2377     	.line	681, "main.c"; 	PWM1DUTY = 9;
     0083 2109                      1- 2378     	MOVIA	0x09
     0084 00rr                      1- 2379     	SFUN	_PWM1DUTY
                                    1- 2380     	.line	682, "main.c"; 	chrgStep = 1;
     0085 2101                      1- 2381     	MOVIA	0x01
     0086 00rr                      1- 2382     	MOVAR	_chrgStep
                                    1- 2383     	MGOTO	_00504_DS_
     0087 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2384     ;;unsigned compare: left < lit (0x2=2), size=1
     0088                           1- 2385     _00503_DS_:
                                    1- 2386     	.line	685, "main.c"; 	else if(pwStep < 2)
     0088 2102                      1- 2387     	MOVIA	0x02
                                    1- 2388     	BANKSEL	_pwStep
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 04rr                      1- 2389     	SUBAR	_pwStep,W
     008B 0C03                      1- 2390     	BTRSC	STATUS,0
                                    1- 2391     	MGOTO	_00500_DS_
     008C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2392     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2393     ;;unsigned compare: left >= lit (0x3=3), size=1
                                    1- 2394     	.line	687, "main.c"; 	if(chrgStep <= 2)
     008D 2103                      1- 2395     	MOVIA	0x03
                                    1- 2396     	BANKSEL	_chrgStep
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 04rr                      1- 2397     	SUBAR	_chrgStep,W
     0090 0C03                      1- 2398     	BTRSC	STATUS,0
                                    1- 2399     	MGOTO	_00504_DS_
     0091 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2400     	.line	689, "main.c"; 	chrgStep = 2;
     0092 2102                      1- 2401     	MOVIA	0x02
     0093 00rr                      1- 2402     	MOVAR	_chrgStep
                                    1- 2403     	.line	690, "main.c"; 	PWM1DUTY = 10;
     0094 210A                      1- 2404     	MOVIA	0x0a
     0095 00rr                      1- 2405     	SFUN	_PWM1DUTY
                                    1- 2406     	MGOTO	_00504_DS_
     0096 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2407     ;;unsigned compare: left < lit (0x3=3), size=1
     0097                           1- 2408     _00500_DS_:
                                    1- 2409     	.line	693, "main.c"; 	else if(pwStep < 3)
     0097 2103                      1- 2410     	MOVIA	0x03
                                    1- 2411     	BANKSEL	_pwStep
     0098 rrrr                      3-  110 m1      .banksel ram_address
     0099 04rr                      1- 2412     	SUBAR	_pwStep,W
     009A 0C03                      1- 2413     	BTRSC	STATUS,0
                                    1- 2414     	MGOTO	_00497_DS_
     009B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2415     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2416     ;;unsigned compare: left >= lit (0x4=4), size=1
                                    1- 2417     	.line	695, "main.c"; 	if(chrgStep <= 3)
     009C 2104                      1- 2418     	MOVIA	0x04
                                    1- 2419     	BANKSEL	_chrgStep
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 04rr                      1- 2420     	SUBAR	_chrgStep,W
     009F 0C03                      1- 2421     	BTRSC	STATUS,0
                                    1- 2422     	MGOTO	_00504_DS_
     00A0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2423     	.line	697, "main.c"; 	chrgStep = 3;
     00A1 2103                      1- 2424     	MOVIA	0x03
     00A2 00rr                      1- 2425     	MOVAR	_chrgStep
                                    1- 2426     	.line	698, "main.c"; 	PWM1DUTY = 11;
     00A3 210B                      1- 2427     	MOVIA	0x0b
     00A4 00rr                      1- 2428     	SFUN	_PWM1DUTY
                                    1- 2429     	MGOTO	_00504_DS_
     00A5 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2430     ;;unsigned compare: left < lit (0x5=5), size=1
     00A6                           1- 2431     _00497_DS_:
                                    1- 2432     	.line	701, "main.c"; 	else if(pwStep < 5)
     00A6 2105                      1- 2433     	MOVIA	0x05
                                    1- 2434     	BANKSEL	_pwStep
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 04rr                      1- 2435     	SUBAR	_pwStep,W
     00A9 0C03                      1- 2436     	BTRSC	STATUS,0
                                    1- 2437     	MGOTO	_00494_DS_
     00AA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2438     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2439     ;;unsigned compare: left >= lit (0x5=5), size=1
                                    1- 2440     	.line	703, "main.c"; 	if(chrgStep <= 4)
     00AB 2105                      1- 2441     	MOVIA	0x05
                                    1- 2442     	BANKSEL	_chrgStep
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 04rr                      1- 2443     	SUBAR	_chrgStep,W
     00AE 0C03                      1- 2444     	BTRSC	STATUS,0
                                    1- 2445     	MGOTO	_00504_DS_
     00AF 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2446     	.line	705, "main.c"; 	chrgStep = 4;
     00B0 2104                      1- 2447     	MOVIA	0x04
     00B1 00rr                      1- 2448     	MOVAR	_chrgStep
                                    1- 2449     	.line	706, "main.c"; 	PWM1DUTY = 12;
     00B2 210C                      1- 2450     	MOVIA	0x0c
     00B3 00rr                      1- 2451     	SFUN	_PWM1DUTY
                                    1- 2452     	MGOTO	_00504_DS_
     00B4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2453     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2454     ;;unsigned compare: left >= lit (0x6=6), size=1
     00B5                           1- 2455     _00494_DS_:
                                    1- 2456     	.line	711, "main.c"; 	if(chrgStep <= 5)
     00B5 2106                      1- 2457     	MOVIA	0x06
                                    1- 2458     	BANKSEL	_chrgStep
     00B6 rrrr                      3-  110 m1      .banksel ram_address
     00B7 04rr                      1- 2459     	SUBAR	_chrgStep,W
     00B8 0C03                      1- 2460     	BTRSC	STATUS,0
                                    1- 2461     	MGOTO	_00504_DS_
     00B9 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2462     	.line	713, "main.c"; 	PWM1DUTY = 13;
     00BA 210D                      1- 2463     	MOVIA	0x0d
     00BB 00rr                      1- 2464     	SFUN	_PWM1DUTY
                                    1- 2465     	.line	714, "main.c"; 	chrgStep = 5;
     00BC 2105                      1- 2466     	MOVIA	0x05
     00BD 00rr                      1- 2467     	MOVAR	_chrgStep
     00BE                           1- 2468     _00504_DS_:
                                    1- 2469     	.line	717, "main.c"; 	pwm1Init();
                                    1- 2470     	MCALL	_pwm1Init
     00BE 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2471     	MGOTO	_00514_DS_
     00BF 3rrr                      3-   63 m1      LGOTO rom_address
     00C0                           1- 2472     _00511_DS_:
                                    1- 2473     	.line	723, "main.c"; 	chrgStep = 0;
                                    1- 2474     	BANKSEL	_chrgStep
     00C0 rrrr                      3-  110 m1      .banksel ram_address
     00C1 02rr                      1- 2475     	CLRR	_chrgStep
                                    1- 2476     	.line	724, "main.c"; 	lockLedStep = 0;
                                    1- 2477     	BANKSEL	_lockLedStep
     00C2 rrrr                      3-  110 m1      .banksel ram_address
     00C3 02rr                      1- 2478     	CLRR	_lockLedStep
                                    1- 2479     	.line	725, "main.c"; 	chrgTime = 0;
                                    1- 2480     	BANKSEL	_chrgTime
     00C4 rrrr                      3-  110 m1      .banksel ram_address
     00C5 02rr                      1- 2481     	CLRR	_chrgTime
     00C6 02rr                      1- 2482     	CLRR	(_chrgTime + 1)
                                    1- 2483     	.line	726, "main.c"; 	pwm1Stop();
                                    1- 2484     	MCALL	_pwm1Stop
     00C7 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2485     	.line	727, "main.c"; 	if(workStep == 0)
                                    1- 2486     	BANKSEL	_workStep
     00C8 rrrr                      3-  110 m1      .banksel ram_address
     00C9 01rr                      1- 2487     	MOVR	_workStep,W
     00CA 0903                      1- 2488     	BTRSS	STATUS,2
                                    1- 2489     	MGOTO	_00007_DS_
     00CB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2490     	.line	728, "main.c"; 	ledStep = 0;
                                    1- 2491     	BANKSEL	_ledStep
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 02rr                      1- 2492     	CLRR	_ledStep
     00CE                           1- 2493     _00007_DS_:
                                    1- 2494     	.line	729, "main.c"; 	chrgFlag = 0;
                                    1- 2495     	BANKSEL	_Status
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 1Drr                      1- 2496     	BCR	_Status,3
                                    1- 2497     	.line	730, "main.c"; 	chrgTime = 0;	//重置充电计数
                                    1- 2498     	BANKSEL	_chrgTime
     00D0 rrrr                      3-  110 m1      .banksel ram_address
     00D1 02rr                      1- 2499     	CLRR	_chrgTime
     00D2 02rr                      1- 2500     	CLRR	(_chrgTime + 1)
     00D3                           1- 2501     _00514_DS_:
                                    1- 2502     	.line	733, "main.c"; 	}
                                    1- 2503     	RETURN	
     00D3 0010                      3-   40 m1      ret
                                    1- 2504     ; exit point of _chrgCtr
                                    1- 2506     ;***
                                    1- 2507     ;  pBlock Stats: dbName = C
                                    1- 2508     ;***
                                    1- 2509     ;has an exit
                                    1- 2510     ;1 compiler assigned register :
                                    1- 2511     ;   r0x1056
                                    1- 2512     ;; Starting pCode block
                                    1- 2513     .segment "code"; module=main, function=_keyRead
                                    1- 2515     ;local variable name mapping:
     0000                           1- 2517     _keyRead:
                                    1- 2518     ; 2 exit points
                                    1- 2519     	.line	604, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2520     	BANKSEL	r0x1056
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2521     	MOVAR	r0x1056
                                    1- 2522     	.line	606, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2523     	MOVR	r0x1056,W
     0003 0D03                      1- 2524     	BTRSC	STATUS,2
                                    1- 2525     	MGOTO	_00465_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2526     	.line	608, "main.c"; 	keyCount++;
                                    1- 2527     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2528     	INCR	_keyCount,F
                                    1- 2529     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 2530     	.line	609, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 2531     	MOVIA	0x64
     0008 04rr                      1- 2532     	SUBAR	_keyCount,W
     0009 0803                      1- 2533     	BTRSS	STATUS,0
                                    1- 2534     	MGOTO	_00466_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2535     	.line	611, "main.c"; 	keyCount = 100;
     000B 2164                      1- 2536     	MOVIA	0x64
     000C 00rr                      1- 2537     	MOVAR	_keyCount
                                    1- 2538     	.line	612, "main.c"; 	if(!longPressFlag)
                                    1- 2539     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Crr                      1- 2540     	BTRSC	_Status,1
                                    1- 2541     	MGOTO	_00466_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2542     	.line	614, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 2543     	BSR	_Status,1
                                    1- 2544     	.line	615, "main.c"; 	return 2;
     0011 2102                      1- 2545     	MOVIA	0x02
                                    1- 2546     	MGOTO	_00467_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2547     ;;unsigned compare: left < lit (0x64=100), size=1
     0013                           1- 2548     _00465_DS_:
                                    1- 2549     	.line	621, "main.c"; 	if(keyCount >= 100)
     0013 2164                      1- 2550     	MOVIA	0x64
                                    1- 2551     	BANKSEL	_keyCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 2552     	SUBAR	_keyCount,W
     0016 0803                      1- 2553     	BTRSS	STATUS,0
                                    1- 2554     	MGOTO	_00462_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2555     	.line	623, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 2556     	CLRR	_keyCount
                                    1- 2557     	.line	624, "main.c"; 	longPressFlag = 0;
                                    1- 2558     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Crr                      1- 2559     	BCR	_Status,1
                                    1- 2560     	.line	625, "main.c"; 	return	0;
     001B 2100                      1- 2561     	MOVIA	0x00
                                    1- 2562     	MGOTO	_00467_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2563     ;;unsigned compare: left < lit (0x4=4), size=1
     001D                           1- 2564     _00462_DS_:
                                    1- 2565     	.line	627, "main.c"; 	else if(keyCount >= 4)
     001D 2104                      1- 2566     	MOVIA	0x04
                                    1- 2567     	BANKSEL	_keyCount
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 2568     	SUBAR	_keyCount,W
     0020 0803                      1- 2569     	BTRSS	STATUS,0
                                    1- 2570     	MGOTO	_00463_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2571     	.line	629, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 2572     	CLRR	_keyCount
                                    1- 2573     	.line	630, "main.c"; 	return	1;
     0023 2101                      1- 2574     	MOVIA	0x01
                                    1- 2575     	MGOTO	_00467_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 2576     _00463_DS_:
                                    1- 2577     	.line	632, "main.c"; 	keyCount = 0;
                                    1- 2578     	BANKSEL	_keyCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 2579     	CLRR	_keyCount
     0027                           1- 2580     _00466_DS_:
                                    1- 2581     	.line	634, "main.c"; 	return 0;
     0027 2100                      1- 2582     	MOVIA	0x00
     0028                           1- 2583     _00467_DS_:
                                    1- 2584     	.line	635, "main.c"; 	}
                                    1- 2585     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 2586     ; exit point of _keyRead
                                    1- 2588     ;***
                                    1- 2589     ;  pBlock Stats: dbName = C
                                    1- 2590     ;***
                                    1- 2591     ;has an exit
                                    1- 2592     ;functions called:
                                    1- 2593     ;   _LedInput
                                    1- 2594     ;   _pwmStop
                                    1- 2595     ;   _pwm1Stop
                                    1- 2596     ;   _LedInput
                                    1- 2597     ;   _pwmStop
                                    1- 2598     ;   _pwm1Stop
                                    1- 2599     ;; Starting pCode block
                                    1- 2600     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2602     _gotoSleep:
                                    1- 2603     ; 2 exit points
                                    1- 2604     	.line	566, "main.c"; 	count900s = 0;
                                    1- 2605     	BANKSEL	_count900s
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 2606     	CLRR	_count900s
     0002 02rr                      1- 2607     	CLRR	(_count900s + 1)
                                    1- 2608     	.line	567, "main.c"; 	LedInput();
                                    1- 2609     	MCALL	_LedInput
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2610     	.line	568, "main.c"; 	sleepTime = 0;
                                    1- 2611     	BANKSEL	_sleepTime
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 2612     	CLRR	_sleepTime
     0006 02rr                      1- 2613     	CLRR	(_sleepTime + 1)
                                    1- 2614     	.line	570, "main.c"; 	pwmStop();
                                    1- 2615     	MCALL	_pwmStop
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2616     	.line	571, "main.c"; 	pwm1Stop();
                                    1- 2617     	MCALL	_pwm1Stop
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2618     	.line	572, "main.c"; 	IOSTA = C_PA7_Input | C_PA3_Input;
     0009 2188                      1- 2619     	MOVIA	0x88
     000A 000r                      1- 2620     	IOST	_IOSTA
                                    1- 2621     	.line	573, "main.c"; 	IOSTB = 0X00;
     000B 0200                      1- 2622     	CLRA	
     000C 000r                      1- 2623     	IOST	_IOSTB
                                    1- 2624     	.line	574, "main.c"; 	PORTA = 0x00;
                                    1- 2625     	BANKSEL	_PORTA
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 2626     	CLRR	_PORTA
                                    1- 2627     	.line	575, "main.c"; 	PORTB = 0x00;
     000F 02rr                      1- 2628     	CLRR	_PORTB
                                    1- 2629     	.line	576, "main.c"; 	workStep = 0;
                                    1- 2630     	BANKSEL	_workStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 02rr                      1- 2631     	CLRR	_workStep
                                    1- 2632     	.line	577, "main.c"; 	AWUCON = 0x88;
     0012 2188                      1- 2633     	MOVIA	0x88
     0013 00rr                      1- 2634     	MOVAR	_AWUCON
                                    1- 2635     	.line	578, "main.c"; 	BWUCON = 0x00;
     0014 02rr                      1- 2636     	CLRR	_BWUCON
                                    1- 2637     	.line	579, "main.c"; 	fgPRD = 0;
                                    1- 2638     	BANKSEL	_fgPRD
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 2639     	CLRR	_fgPRD
     0017 02rr                      1- 2640     	CLRR	(_fgPRD + 1)
                                    1- 2641     	.line	580, "main.c"; 	fgCount = 0;
                                    1- 2642     	BANKSEL	_fgCount
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 02rr                      1- 2643     	CLRR	_fgCount
     001A 02rr                      1- 2644     	CLRR	(_fgCount + 1)
                                    1- 2645     	.line	581, "main.c"; 	redLedFlag = 0;
                                    1- 2646     	BANKSEL	_Status
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 1Drr                      1- 2647     	BCR	_Status,2
                                    1- 2648     	.line	584, "main.c"; 	INTE =  C_INT_PABKey;
     001D 2102                      1- 2649     	MOVIA	0x02
     001E 00rr                      1- 2650     	MOVAR	_INTE
                                    1- 2651     	.line	585, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     001F 2118                      1- 2652     	MOVIA	0x18
     0020 00rr                      1- 2653     	MOVAR	_PCON
                                    1- 2654     	.line	586, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0021 02rr                      1- 2655     	CLRR	_INTF
                                    1- 2656     	.line	587, "main.c"; 	CLRWDT();
     0022 0002                      1- 2657     	clrwdt
                                    1- 2658     	.line	588, "main.c"; 	ENI();
     0023 0004                      1- 2659     	ENI
                                    1- 2660     	.line	589, "main.c"; 	SLEEP();
     0024 0001                      1- 2661     	sleep
                                    1- 2662     	.line	590, "main.c"; 	AWUCON = 0x00;
     0025 02rr                      1- 2663     	CLRR	_AWUCON
                                    1- 2664     	.line	591, "main.c"; 	IOSTA = C_PA7_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0026 21BE                      1- 2665     	MOVIA	0xbe
     0027 000r                      1- 2666     	IOST	_IOSTA
                                    1- 2667     	.line	592, "main.c"; 	IOSTB = 0x00;
     0028 0200                      1- 2668     	CLRA	
     0029 000r                      1- 2669     	IOST	_IOSTB
                                    1- 2670     	.line	593, "main.c"; 	PORTA = 0x00;
                                    1- 2671     	BANKSEL	_PORTA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 02rr                      1- 2672     	CLRR	_PORTA
                                    1- 2673     	.line	594, "main.c"; 	APHCON = 0x7F;
     002C 217F                      1- 2674     	MOVIA	0x7f
     002D 000r                      1- 2675     	IOST	_APHCON
                                    1- 2676     	.line	595, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     002E 2101                      1- 2677     	MOVIA	0x01
     002F 00rr                      1- 2678     	MOVAR	_INTE
                                    1- 2679     	.line	596, "main.c"; 	INTF = 0;
     0030 02rr                      1- 2680     	CLRR	_INTF
                                    1- 2681     	.line	598, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0031 21B8                      1- 2682     	MOVIA	0xb8
     0032 00rr                      1- 2683     	MOVAR	_PCON
                                    1- 2684     	.line	601, "main.c"; 	}
                                    1- 2685     	RETURN	
     0033 0010                      3-   40 m1      ret
                                    1- 2686     ; exit point of _gotoSleep
                                    1- 2688     ;***
                                    1- 2689     ;  pBlock Stats: dbName = C
                                    1- 2690     ;***
                                    1- 2691     ;has an exit
                                    1- 2692     ;; Starting pCode block
                                    1- 2693     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2695     _pwmStop:
                                    1- 2696     ; 2 exit points
                                    1- 2697     	.line	559, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2698     	CLRA	
     0001 00rr                      1- 2699     	SFUN	_T2CR1
                                    1- 2700     	.line	560, "main.c"; 	}
                                    1- 2701     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2702     ; exit point of _pwmStop
                                    1- 2704     ;***
                                    1- 2705     ;  pBlock Stats: dbName = C
                                    1- 2706     ;***
                                    1- 2707     ;has an exit
                                    1- 2708     ;1 compiler assigned register :
                                    1- 2709     ;   r0x1058
                                    1- 2710     ;; Starting pCode block
                                    1- 2711     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2713     _pwmInit:
                                    1- 2714     ; 2 exit points
                                    1- 2715     	.line	547, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2716     	SFUNR	_T2CR1
                                    1- 2717     	BANKSEL	r0x1058
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2718     	MOVAR	r0x1058
     0003 0Frr                      1- 2719     	BTRSC	r0x1058,7
                                    1- 2720     	.line	548, "main.c"; 	return;
                                    1- 2721     	MGOTO	_00442_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2722     	.line	549, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2723     	CLRR	_TMRH
                                    1- 2724     	.line	550, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 2725     	MOVIA	0x64
     0007 00rr                      1- 2726     	SFUN	_TMR2
                                    1- 2727     	.line	553, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2101                      1- 2728     	MOVIA	0x01
     0009 00rr                      1- 2729     	SFUN	_T2CR2
                                    1- 2730     	.line	554, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2731     	MOVIA	0x83
     000B 00rr                      1- 2732     	SFUN	_T2CR1
     000C                           1- 2733     _00442_DS_:
                                    1- 2734     	.line	555, "main.c"; 	}
                                    1- 2735     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2736     ; exit point of _pwmInit
                                    1- 2738     ;***
                                    1- 2739     ;  pBlock Stats: dbName = C
                                    1- 2740     ;***
                                    1- 2741     ;has an exit
                                    1- 2742     ;; Starting pCode block
                                    1- 2743     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2745     _pwm1Stop:
                                    1- 2746     ; 2 exit points
                                    1- 2747     	.line	540, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2748     	CLRA	
     0001 00rr                      1- 2749     	SFUN	_T1CR1
                                    1- 2750     	.line	541, "main.c"; 	}
                                    1- 2751     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2752     ; exit point of _pwm1Stop
                                    1- 2754     ;***
                                    1- 2755     ;  pBlock Stats: dbName = C
                                    1- 2756     ;***
                                    1- 2757     ;has an exit
                                    1- 2758     ;1 compiler assigned register :
                                    1- 2759     ;   r0x1050
                                    1- 2760     ;; Starting pCode block
                                    1- 2761     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2763     _pwm1Init:
                                    1- 2764     ; 2 exit points
                                    1- 2765     	.line	528, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2766     	SFUNR	_T1CR1
                                    1- 2767     	BANKSEL	r0x1050
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2768     	MOVAR	r0x1050
     0003 0Frr                      1- 2769     	BTRSC	r0x1050,7
                                    1- 2770     	.line	529, "main.c"; 	return;
                                    1- 2771     	MGOTO	_00431_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2772     	.line	530, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2773     	CLRR	_TMRH
                                    1- 2774     	.line	531, "main.c"; 	TMR1 = 24;							//频率为110K
     0006 2118                      1- 2775     	MOVIA	0x18
     0007 00rr                      1- 2776     	SFUN	_TMR1
                                    1- 2777     	.line	534, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2778     	CLRA	
     0009 00rr                      1- 2779     	SFUN	_T1CR2
                                    1- 2780     	.line	535, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2781     	MOVIA	0x83
     000B 00rr                      1- 2782     	SFUN	_T1CR1
     000C                           1- 2783     _00431_DS_:
                                    1- 2784     	.line	536, "main.c"; 	}
                                    1- 2785     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2786     ; exit point of _pwm1Init
                                    1- 2788     ;***
                                    1- 2789     ;  pBlock Stats: dbName = C
                                    1- 2790     ;***
                                    1- 2791     ;has an exit
                                    1- 2792     ;functions called:
                                    1- 2793     ;   _delay
                                    1- 2794     ;   _LedInput
                                    1- 2795     ;   _delay
                                    1- 2796     ;   _LedInput
                                    1- 2797     ;1 compiler assigned register :
                                    1- 2798     ;   r0x1059
                                    1- 2799     ;; Starting pCode block
                                    1- 2800     .segment "code"; module=main, function=_LED6ON
     0000                           1- 2802     _LED6ON:
                                    1- 2803     ; 2 exit points
                                    1- 2804     	.line	518, "main.c"; 	L2OUT;
     0000 001r                      1- 2805     	IOSTR	_IOSTA
                                    1- 2806     	BANKSEL	r0x1059
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2807     	MOVAR	r0x1059
     0003 1Crr                      1- 2808     	BCR	r0x1059,0
     0004 01rr                      1- 2809     	MOVR	r0x1059,W
     0005 000r                      1- 2810     	IOST	_IOSTA
                                    1- 2811     	.line	519, "main.c"; 	L1OUT;
     0006 001r                      1- 2812     	IOSTR	_IOSTB
     0007 00rr                      1- 2813     	MOVAR	r0x1059
     0008 1Crr                      1- 2814     	BCR	r0x1059,1
     0009 01rr                      1- 2815     	MOVR	r0x1059,W
     000A 000r                      1- 2816     	IOST	_IOSTB
                                    1- 2817     	.line	520, "main.c"; 	L1H;
     000B 18rr                      1- 2818     	BSR	_PORTB,1
                                    1- 2819     	.line	521, "main.c"; 	L2L;
                                    1- 2820     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Crr                      1- 2821     	BCR	_PORTA,0
                                    1- 2822     	.line	522, "main.c"; 	delay(100);
     000E 2164                      1- 2823     	MOVIA	0x64
                                    1- 2824     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2825     	.line	523, "main.c"; 	LedInput();
                                    1- 2826     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2827     	.line	524, "main.c"; 	}
                                    1- 2828     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2829     ; exit point of _LED6ON
                                    1- 2831     ;***
                                    1- 2832     ;  pBlock Stats: dbName = C
                                    1- 2833     ;***
                                    1- 2834     ;has an exit
                                    1- 2835     ;functions called:
                                    1- 2836     ;   _delay
                                    1- 2837     ;   _LedInput
                                    1- 2838     ;   _delay
                                    1- 2839     ;   _LedInput
                                    1- 2840     ;1 compiler assigned register :
                                    1- 2841     ;   r0x105A
                                    1- 2842     ;; Starting pCode block
                                    1- 2843     .segment "code"; module=main, function=_LED5ON
     0000                           1- 2845     _LED5ON:
                                    1- 2846     ; 2 exit points
                                    1- 2847     	.line	507, "main.c"; 	L2OUT;
     0000 001r                      1- 2848     	IOSTR	_IOSTA
                                    1- 2849     	BANKSEL	r0x105A
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2850     	MOVAR	r0x105A
     0003 1Crr                      1- 2851     	BCR	r0x105A,0
     0004 01rr                      1- 2852     	MOVR	r0x105A,W
     0005 000r                      1- 2853     	IOST	_IOSTA
                                    1- 2854     	.line	508, "main.c"; 	L1OUT;
     0006 001r                      1- 2855     	IOSTR	_IOSTB
     0007 00rr                      1- 2856     	MOVAR	r0x105A
     0008 1Crr                      1- 2857     	BCR	r0x105A,1
     0009 01rr                      1- 2858     	MOVR	r0x105A,W
     000A 000r                      1- 2859     	IOST	_IOSTB
                                    1- 2860     	.line	509, "main.c"; 	L2H;
                                    1- 2861     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 18rr                      1- 2862     	BSR	_PORTA,0
                                    1- 2863     	.line	510, "main.c"; 	L1L;
     000D 1Crr                      1- 2864     	BCR	_PORTB,1
                                    1- 2865     	.line	511, "main.c"; 	delay(100);
     000E 2164                      1- 2866     	MOVIA	0x64
                                    1- 2867     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2868     	.line	512, "main.c"; 	LedInput();
                                    1- 2869     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2870     	.line	513, "main.c"; 	}
                                    1- 2871     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2872     ; exit point of _LED5ON
                                    1- 2874     ;***
                                    1- 2875     ;  pBlock Stats: dbName = C
                                    1- 2876     ;***
                                    1- 2877     ;has an exit
                                    1- 2878     ;functions called:
                                    1- 2879     ;   _delay
                                    1- 2880     ;   _LedInput
                                    1- 2881     ;   _delay
                                    1- 2882     ;   _LedInput
                                    1- 2883     ;1 compiler assigned register :
                                    1- 2884     ;   r0x105B
                                    1- 2885     ;; Starting pCode block
                                    1- 2886     .segment "code"; module=main, function=_LED4ON
     0000                           1- 2888     _LED4ON:
                                    1- 2889     ; 2 exit points
                                    1- 2890     	.line	497, "main.c"; 	L3OUT;
     0000 001r                      1- 2891     	IOSTR	_IOSTB
                                    1- 2892     	BANKSEL	r0x105B
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2893     	MOVAR	r0x105B
     0003 1Crr                      1- 2894     	BCR	r0x105B,0
     0004 01rr                      1- 2895     	MOVR	r0x105B,W
     0005 000r                      1- 2896     	IOST	_IOSTB
                                    1- 2897     	.line	498, "main.c"; 	L2OUT;
     0006 001r                      1- 2898     	IOSTR	_IOSTA
     0007 00rr                      1- 2899     	MOVAR	r0x105B
     0008 1Crr                      1- 2900     	BCR	r0x105B,0
     0009 01rr                      1- 2901     	MOVR	r0x105B,W
     000A 000r                      1- 2902     	IOST	_IOSTA
                                    1- 2903     	.line	499, "main.c"; 	L3H;
     000B 18rr                      1- 2904     	BSR	_PORTB,0
                                    1- 2905     	.line	500, "main.c"; 	L2L;
                                    1- 2906     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Crr                      1- 2907     	BCR	_PORTA,0
                                    1- 2908     	.line	501, "main.c"; 	delay(100);
     000E 2164                      1- 2909     	MOVIA	0x64
                                    1- 2910     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2911     	.line	502, "main.c"; 	LedInput();
                                    1- 2912     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2913     	.line	503, "main.c"; 	}
                                    1- 2914     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 2915     ; exit point of _LED4ON
                                    1- 2917     ;***
                                    1- 2918     ;  pBlock Stats: dbName = C
                                    1- 2919     ;***
                                    1- 2920     ;has an exit
                                    1- 2921     ;functions called:
                                    1- 2922     ;   _delay
                                    1- 2923     ;   _LedInput
                                    1- 2924     ;   _delay
                                    1- 2925     ;   _LedInput
                                    1- 2926     ;1 compiler assigned register :
                                    1- 2927     ;   r0x105C
                                    1- 2928     ;; Starting pCode block
                                    1- 2929     .segment "code"; module=main, function=_LED3ON
     0000                           1- 2931     _LED3ON:
                                    1- 2932     ; 2 exit points
                                    1- 2933     	.line	487, "main.c"; 	L3OUT;
     0000 001r                      1- 2934     	IOSTR	_IOSTB
                                    1- 2935     	BANKSEL	r0x105C
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2936     	MOVAR	r0x105C
     0003 1Crr                      1- 2937     	BCR	r0x105C,0
     0004 01rr                      1- 2938     	MOVR	r0x105C,W
     0005 000r                      1- 2939     	IOST	_IOSTB
                                    1- 2940     	.line	488, "main.c"; 	L1OUT;
     0006 001r                      1- 2941     	IOSTR	_IOSTB
     0007 00rr                      1- 2942     	MOVAR	r0x105C
     0008 1Crr                      1- 2943     	BCR	r0x105C,1
     0009 01rr                      1- 2944     	MOVR	r0x105C,W
     000A 000r                      1- 2945     	IOST	_IOSTB
                                    1- 2946     	.line	489, "main.c"; 	L1H;
     000B 18rr                      1- 2947     	BSR	_PORTB,1
                                    1- 2948     	.line	490, "main.c"; 	L3L;
     000C 1Crr                      1- 2949     	BCR	_PORTB,0
                                    1- 2950     	.line	491, "main.c"; 	delay(100);
     000D 2164                      1- 2951     	MOVIA	0x64
                                    1- 2952     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2953     	.line	492, "main.c"; 	LedInput();
                                    1- 2954     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2955     	.line	493, "main.c"; 	}
                                    1- 2956     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2957     ; exit point of _LED3ON
                                    1- 2959     ;***
                                    1- 2960     ;  pBlock Stats: dbName = C
                                    1- 2961     ;***
                                    1- 2962     ;has an exit
                                    1- 2963     ;functions called:
                                    1- 2964     ;   _delay
                                    1- 2965     ;   _LedInput
                                    1- 2966     ;   _delay
                                    1- 2967     ;   _LedInput
                                    1- 2968     ;1 compiler assigned register :
                                    1- 2969     ;   r0x105D
                                    1- 2970     ;; Starting pCode block
                                    1- 2971     .segment "code"; module=main, function=_LED2ON
     0000                           1- 2973     _LED2ON:
                                    1- 2974     ; 2 exit points
                                    1- 2975     	.line	477, "main.c"; 	L2OUT;
     0000 001r                      1- 2976     	IOSTR	_IOSTA
                                    1- 2977     	BANKSEL	r0x105D
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2978     	MOVAR	r0x105D
     0003 1Crr                      1- 2979     	BCR	r0x105D,0
     0004 01rr                      1- 2980     	MOVR	r0x105D,W
     0005 000r                      1- 2981     	IOST	_IOSTA
                                    1- 2982     	.line	478, "main.c"; 	L3OUT;
     0006 001r                      1- 2983     	IOSTR	_IOSTB
     0007 00rr                      1- 2984     	MOVAR	r0x105D
     0008 1Crr                      1- 2985     	BCR	r0x105D,0
     0009 01rr                      1- 2986     	MOVR	r0x105D,W
     000A 000r                      1- 2987     	IOST	_IOSTB
                                    1- 2988     	.line	479, "main.c"; 	L2H;
                                    1- 2989     	BANKSEL	_PORTA
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 18rr                      1- 2990     	BSR	_PORTA,0
                                    1- 2991     	.line	480, "main.c"; 	L3L;
     000D 1Crr                      1- 2992     	BCR	_PORTB,0
                                    1- 2993     	.line	481, "main.c"; 	delay(100);
     000E 2164                      1- 2994     	MOVIA	0x64
                                    1- 2995     	MCALL	_delay
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2996     	.line	482, "main.c"; 	LedInput();
                                    1- 2997     	MCALL	_LedInput
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2998     	.line	483, "main.c"; 	}
                                    1- 2999     	RETURN	
     0011 0010                      3-   40 m1      ret
                                    1- 3000     ; exit point of _LED2ON
                                    1- 3002     ;***
                                    1- 3003     ;  pBlock Stats: dbName = C
                                    1- 3004     ;***
                                    1- 3005     ;has an exit
                                    1- 3006     ;functions called:
                                    1- 3007     ;   _delay
                                    1- 3008     ;   _LedInput
                                    1- 3009     ;   _delay
                                    1- 3010     ;   _LedInput
                                    1- 3011     ;1 compiler assigned register :
                                    1- 3012     ;   r0x105E
                                    1- 3013     ;; Starting pCode block
                                    1- 3014     .segment "code"; module=main, function=_LED1ON
     0000                           1- 3016     _LED1ON:
                                    1- 3017     ; 2 exit points
                                    1- 3018     	.line	467, "main.c"; 	L3OUT;
     0000 001r                      1- 3019     	IOSTR	_IOSTB
                                    1- 3020     	BANKSEL	r0x105E
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3021     	MOVAR	r0x105E
     0003 1Crr                      1- 3022     	BCR	r0x105E,0
     0004 01rr                      1- 3023     	MOVR	r0x105E,W
     0005 000r                      1- 3024     	IOST	_IOSTB
                                    1- 3025     	.line	468, "main.c"; 	L1OUT;
     0006 001r                      1- 3026     	IOSTR	_IOSTB
     0007 00rr                      1- 3027     	MOVAR	r0x105E
     0008 1Crr                      1- 3028     	BCR	r0x105E,1
     0009 01rr                      1- 3029     	MOVR	r0x105E,W
     000A 000r                      1- 3030     	IOST	_IOSTB
                                    1- 3031     	.line	469, "main.c"; 	L3H;
     000B 18rr                      1- 3032     	BSR	_PORTB,0
                                    1- 3033     	.line	470, "main.c"; 	L1L;
     000C 1Crr                      1- 3034     	BCR	_PORTB,1
                                    1- 3035     	.line	471, "main.c"; 	delay(100);
     000D 2164                      1- 3036     	MOVIA	0x64
                                    1- 3037     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3038     	.line	472, "main.c"; 	LedInput();
                                    1- 3039     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3040     	.line	473, "main.c"; 	}
                                    1- 3041     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3042     ; exit point of _LED1ON
                                    1- 3044     ;***
                                    1- 3045     ;  pBlock Stats: dbName = C
                                    1- 3046     ;***
                                    1- 3047     ;has an exit
                                    1- 3048     ;1 compiler assigned register :
                                    1- 3049     ;   r0x1057
                                    1- 3050     ;; Starting pCode block
                                    1- 3051     .segment "code"; module=main, function=_LedInput
     0000                           1- 3053     _LedInput:
                                    1- 3054     ; 2 exit points
                                    1- 3055     	.line	459, "main.c"; 	IOSTA |= 0x01;
     0000 001r                      1- 3056     	IOSTR	_IOSTA
                                    1- 3057     	BANKSEL	r0x1057
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3058     	MOVAR	r0x1057
     0003 18rr                      1- 3059     	BSR	r0x1057,0
     0004 01rr                      1- 3060     	MOVR	r0x1057,W
     0005 000r                      1- 3061     	IOST	_IOSTA
                                    1- 3062     	.line	460, "main.c"; 	IOSTB |= 0x03;
     0006 001r                      1- 3063     	IOSTR	_IOSTB
     0007 00rr                      1- 3064     	MOVAR	r0x1057
     0008 2103                      1- 3065     	MOVIA	0x03
     0009 11rr                      1- 3066     	IORAR	r0x1057,F
     000A 01rr                      1- 3067     	MOVR	r0x1057,W
     000B 000r                      1- 3068     	IOST	_IOSTB
                                    1- 3069     	.line	461, "main.c"; 	PORTA &= 0xFE;
                                    1- 3070     	BANKSEL	_PORTA
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 1Crr                      1- 3071     	BCR	_PORTA,0
                                    1- 3072     	.line	462, "main.c"; 	PORTB &= 0xFC;
     000E 21FC                      1- 3073     	MOVIA	0xfc
     000F 10rr                      1- 3074     	ANDAR	_PORTB,F
                                    1- 3075     	.line	463, "main.c"; 	}
                                    1- 3076     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 3077     ; exit point of _LedInput
                                    1- 3079     ;***
                                    1- 3080     ;  pBlock Stats: dbName = C
                                    1- 3081     ;***
                                    1- 3082     ;has an exit
                                    1- 3083     ;functions called:
                                    1- 3084     ;   _LedInput
                                    1- 3085     ;   _LedInput
                                    1- 3086     ;   _LED6ON
                                    1- 3087     ;   _LED5ON
                                    1- 3088     ;   _LED4ON
                                    1- 3089     ;   _LED3ON
                                    1- 3090     ;   _LED2ON
                                    1- 3091     ;   _LED1ON
                                    1- 3092     ;   _LedInput
                                    1- 3093     ;   _LedInput
                                    1- 3094     ;   _LED6ON
                                    1- 3095     ;   _LED5ON
                                    1- 3096     ;   _LED4ON
                                    1- 3097     ;   _LED3ON
                                    1- 3098     ;   _LED2ON
                                    1- 3099     ;   _LED1ON
                                    1- 3100     ;; Starting pCode block
                                    1- 3101     .segment "code"; module=main, function=_ledShow
     0000                           1- 3103     _ledShow:
                                    1- 3104     ; 2 exit points
                                    1- 3105     	.line	394, "main.c"; 	if(ledDeadTime > 0 && workStep == 0)
                                    1- 3106     	BANKSEL	_ledDeadTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 3107     	MOVR	_ledDeadTime,W
     0002 0D03                      1- 3108     	BTRSC	STATUS,2
                                    1- 3109     	MGOTO	_00328_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3110     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 3111     	MOVR	_workStep,W
     0006 0903                      1- 3112     	BTRSS	STATUS,2
                                    1- 3113     	MGOTO	_00328_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3114     	.line	396, "main.c"; 	if(ledDeadTime % 2 == 0)
                                    1- 3115     	BANKSEL	_ledDeadTime
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 0Crr                      1- 3116     	BTRSC	_ledDeadTime,0
                                    1- 3117     	MGOTO	_00325_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3118     	.line	398, "main.c"; 	ledStep = 0;
                                    1- 3119     	BANKSEL	_ledStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 02rr                      1- 3120     	CLRR	_ledStep
                                    1- 3121     	MGOTO	_00328_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 3122     _00325_DS_:
                                    1- 3123     	.line	402, "main.c"; 	ledStep = tempLedStep;
                                    1- 3124     	BANKSEL	_tempLedStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 3125     	MOVR	_tempLedStep,W
                                    1- 3126     	BANKSEL	_ledStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 3127     	MOVAR	_ledStep
     0012                           1- 3128     _00328_DS_:
                                    1- 3129     	.line	413, "main.c"; 	if(ledLightTime > 0 && pwStep > 0)
                                    1- 3130     	BANKSEL	_ledLightTime
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 3131     	MOVR	_ledLightTime,W
     0014 0D03                      1- 3132     	BTRSC	STATUS,2
                                    1- 3133     	MGOTO	_00336_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3134     	BANKSEL	_pwStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 3135     	MOVR	_pwStep,W
     0018 0D03                      1- 3136     	BTRSC	STATUS,2
                                    1- 3137     	MGOTO	_00336_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3138     	.line	415, "main.c"; 	if(ledLightTime > 0)
                                    1- 3139     	BANKSEL	_ledLightTime
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 01rr                      1- 3140     	MOVR	_ledLightTime,W
     001C 0D03                      1- 3141     	BTRSC	STATUS,2
                                    1- 3142     	MGOTO	_00336_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3143     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3144     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 3145     	.line	417, "main.c"; 	if(pwStep > 6 )
     001E 2107                      1- 3146     	MOVIA	0x07
                                    1- 3147     	BANKSEL	_pwStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 04rr                      1- 3148     	SUBAR	_pwStep,W
     0021 0803                      1- 3149     	BTRSS	STATUS,0
                                    1- 3150     	MGOTO	_00331_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3151     	.line	418, "main.c"; 	ledStep = 6;
     0023 2106                      1- 3152     	MOVIA	0x06
                                    1- 3153     	BANKSEL	_ledStep
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 00rr                      1- 3154     	MOVAR	_ledStep
                                    1- 3155     	MGOTO	_00336_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 3156     _00331_DS_:
                                    1- 3157     	.line	420, "main.c"; 	ledStep = pwStep;
                                    1- 3158     	BANKSEL	_pwStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 3159     	MOVR	_pwStep,W
                                    1- 3160     	BANKSEL	_ledStep
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 3161     	MOVAR	_ledStep
     002B                           1- 3162     _00336_DS_:
                                    1- 3163     	.line	423, "main.c"; 	if(shanshuoTime > 0 && workStep > 0 && pwStep == 0)
                                    1- 3164     	BANKSEL	_shanshuoTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1- 3165     	MOVR	_shanshuoTime,W
     002D 0D03                      1- 3166     	BTRSC	STATUS,2
                                    1- 3167     	MGOTO	_00342_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3168     	BANKSEL	_workStep
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 3169     	MOVR	_workStep,W
     0031 0D03                      1- 3170     	BTRSC	STATUS,2
                                    1- 3171     	MGOTO	_00342_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3172     	BANKSEL	_pwStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 3173     	MOVR	_pwStep,W
     0035 0903                      1- 3174     	BTRSS	STATUS,2
                                    1- 3175     	MGOTO	_00342_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3176     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 3177     	.line	425, "main.c"; 	if(count1s < 50)
     0037 2132                      1- 3178     	MOVIA	0x32
                                    1- 3179     	BANKSEL	_count1s
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 04rr                      1- 3180     	SUBAR	_count1s,W
     003A 0C03                      1- 3181     	BTRSC	STATUS,0
                                    1- 3182     	MGOTO	_00339_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3183     	.line	426, "main.c"; 	ledStep = workStep;
                                    1- 3184     	BANKSEL	_workStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 3185     	MOVR	_workStep,W
                                    1- 3186     	BANKSEL	_ledStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 00rr                      1- 3187     	MOVAR	_ledStep
                                    1- 3188     	MGOTO	_00342_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041                           1- 3189     _00339_DS_:
                                    1- 3190     	.line	428, "main.c"; 	ledStep = 0;
                                    1- 3191     	BANKSEL	_ledStep
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 3192     	CLRR	_ledStep
     0043                           1- 3193     _00342_DS_:
                                    1- 3194     	.line	431, "main.c"; 	LedInput();
                                    1- 3195     	MCALL	_LedInput
     0043 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3196     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3197     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 3198     	.line	432, "main.c"; 	switch(ledStep)
     0044 2109                      1- 3199     	MOVIA	0x09
                                    1- 3200     	BANKSEL	_ledStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 04rr                      1- 3201     	SUBAR	_ledStep,W
     0047 0C03                      1- 3202     	BTRSC	STATUS,0
                                    1- 3203     	MGOTO	_00355_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 21rr                      1- 3204     	MOVIA	((_00396_DS_ >> 8) & 0xff)
     004A 008A                      1- 3205     	MOVAR	PCHBUF
     004B 01rr                      1- 3206     	MOVR	_ledStep,W
     004C 25rr                      1- 3207     	ADDIA	_00396_DS_
     004D 0C03                      1- 3208     	BTRSC	STATUS,0
     004E 058A                      1- 3209     	INCR	PCHBUF,F
     004F 0082                      1- 3210     	MOVAR	PCL
     0050                           1- 3211     _00396_DS_:
                                    1- 3212     	MGOTO	_00345_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3213     	MGOTO	_00353_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3214     	MGOTO	_00352_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3215     	MGOTO	_00351_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3216     	MGOTO	_00350_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3217     	MGOTO	_00349_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3218     	MGOTO	_00348_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3219     	MGOTO	_00348_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3220     	MGOTO	_00348_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
     0059                           1- 3221     _00345_DS_:
                                    1- 3222     	.line	435, "main.c"; 	LedInput();
                                    1- 3223     	MCALL	_LedInput
     0059 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3224     	.line	436, "main.c"; 	break;
                                    1- 3225     	MGOTO	_00355_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B                           1- 3226     _00348_DS_:
                                    1- 3227     	.line	440, "main.c"; 	LED6ON();
                                    1- 3228     	MCALL	_LED6ON
     005B 2rrr                      3-   66 m1      LCALL rom_address
     005C                           1- 3229     _00349_DS_:
                                    1- 3230     	.line	442, "main.c"; 	LED5ON();
                                    1- 3231     	MCALL	_LED5ON
     005C 2rrr                      3-   66 m1      LCALL rom_address
     005D                           1- 3232     _00350_DS_:
                                    1- 3233     	.line	444, "main.c"; 	LED4ON();
                                    1- 3234     	MCALL	_LED4ON
     005D 2rrr                      3-   66 m1      LCALL rom_address
     005E                           1- 3235     _00351_DS_:
                                    1- 3236     	.line	446, "main.c"; 	LED3ON();
                                    1- 3237     	MCALL	_LED3ON
     005E 2rrr                      3-   66 m1      LCALL rom_address
     005F                           1- 3238     _00352_DS_:
                                    1- 3239     	.line	448, "main.c"; 	LED2ON();
                                    1- 3240     	MCALL	_LED2ON
     005F 2rrr                      3-   66 m1      LCALL rom_address
     0060                           1- 3241     _00353_DS_:
                                    1- 3242     	.line	450, "main.c"; 	LED1ON();
                                    1- 3243     	MCALL	_LED1ON
     0060 2rrr                      3-   66 m1      LCALL rom_address
     0061                           1- 3244     _00355_DS_:
                                    1- 3245     	.line	453, "main.c"; 	}
                                    1- 3246     	RETURN	
     0061 0010                      3-   40 m1      ret
                                    1- 3247     ; exit point of _ledShow
                                    1- 3249     ;***
                                    1- 3250     ;  pBlock Stats: dbName = C
                                    1- 3251     ;***
                                    1- 3252     ;has an exit
                                    1- 3253     ;functions called:
                                    1- 3254     ;   _LedInput
                                    1- 3255     ;   _LedInput
                                    1- 3256     ;; Starting pCode block
                                    1- 3257     .segment "code"; module=main, function=_initSys
     0000                           1- 3259     _initSys:
                                    1- 3260     ; 2 exit points
                                    1- 3261     	.line	362, "main.c"; 	DISI();
     0000 0013                      1- 3262     	DISI
                                    1- 3263     	.line	363, "main.c"; 	IOSTA = C_PA7_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0001 21BE                      1- 3264     	MOVIA	0xbe
     0002 000r                      1- 3265     	IOST	_IOSTA
                                    1- 3266     	.line	364, "main.c"; 	IOSTB = 0x00;
     0003 0200                      1- 3267     	CLRA	
     0004 000r                      1- 3268     	IOST	_IOSTB
                                    1- 3269     	.line	365, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 3270     	CLRR	_PORTB
                                    1- 3271     	.line	366, "main.c"; 	PORTA = 0x00;
                                    1- 3272     	BANKSEL	_PORTA
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 02rr                      1- 3273     	CLRR	_PORTA
                                    1- 3274     	.line	367, "main.c"; 	LedInput();
                                    1- 3275     	MCALL	_LedInput
     0008 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3276     	.line	368, "main.c"; 	APHCON = 0x7F;
     0009 217F                      1- 3277     	MOVIA	0x7f
     000A 000r                      1- 3278     	IOST	_APHCON
                                    1- 3279     	.line	369, "main.c"; 	BPHCON = 0xFF;
     000B 21FF                      1- 3280     	MOVIA	0xff
     000C 00rr                      1- 3281     	MOVAR	_BPHCON
                                    1- 3282     	.line	370, "main.c"; 	ABPLCON = 0xFF;
     000D 00rr                      1- 3283     	MOVAR	_ABPLCON
                                    1- 3284     	.line	372, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000E 2101                      1- 3285     	MOVIA	0x01
     000F 00rr                      1- 3286     	MOVAR	_INTE
                                    1- 3287     	.line	374, "main.c"; 	PCON1 = C_TMR0_Dis;
     0010 0200                      1- 3288     	CLRA	
     0011 000r                      1- 3289     	IOST	_PCON1
                                    1- 3290     	.line	376, "main.c"; 	TMR0 = 55;
     0012 2137                      1- 3291     	MOVIA	0x37
     0013 00rr                      1- 3292     	MOVAR	_TMR0
                                    1- 3293     	.line	377, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0014 2101                      1- 3294     	MOVIA	0x01
     0015 0003                      1- 3295     	T0MD	
                                    1- 3296     	.line	379, "main.c"; 	PCON1 = C_TMR0_En;
     0016 000r                      1- 3297     	IOST	_PCON1
                                    1- 3298     	.line	382, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0017 2198                      1- 3299     	MOVIA	0x98
     0018 00rr                      1- 3300     	MOVAR	_PCON
                                    1- 3301     	.line	385, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0019 2101                      1- 3302     	MOVIA	0x01
     001A 000r                      1- 3303     	IOST	_PCON1
                                    1- 3304     	.line	386, "main.c"; 	ENI();
     001B 0004                      1- 3305     	ENI
                                    1- 3306     	.line	387, "main.c"; 	}
                                    1- 3307     	RETURN	
     001C 0010                      3-   40 m1      ret
                                    1- 3308     ; exit point of _initSys
                                    1- 3310     ;***
                                    1- 3311     ;  pBlock Stats: dbName = C
                                    1- 3312     ;***
                                    1- 3313     ;has an exit
                                    1- 3314     ;functions called:
                                    1- 3315     ;   _pwmStop
                                    1- 3316     ;   _pwmStop
                                    1- 3317     ;; Starting pCode block
                                    1- 3318     .segment "code"; module=main, function=_powerOff
     0000                           1- 3320     _powerOff:
                                    1- 3321     ; 2 exit points
                                    1- 3322     	.line	352, "main.c"; 	workStep = 0;
                                    1- 3323     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 3324     	CLRR	_workStep
                                    1- 3325     	.line	353, "main.c"; 	ledStep = 0;
                                    1- 3326     	BANKSEL	_ledStep
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 3327     	CLRR	_ledStep
                                    1- 3328     	.line	354, "main.c"; 	pwmStop();
                                    1- 3329     	MCALL	_pwmStop
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3330     	.line	356, "main.c"; 	}
                                    1- 3331     	RETURN	
     0005 0010                      3-   40 m1      ret
                                    1- 3332     ; exit point of _powerOff
                                    1- 3334     ;***
                                    1- 3335     ;  pBlock Stats: dbName = C
                                    1- 3336     ;***
                                    1- 3337     ;has an exit
                                    1- 3338     ;functions called:
                                    1- 3339     ;   _keyRead
                                    1- 3340     ;   _powerOff
                                    1- 3341     ;   _pwmInit
                                    1- 3342     ;   _pwmInit
                                    1- 3343     ;   _powerOff
                                    1- 3344     ;   _powerOff
                                    1- 3345     ;   _pwmInit
                                    1- 3346     ;   _keyRead
                                    1- 3347     ;   _powerOff
                                    1- 3348     ;   _pwmInit
                                    1- 3349     ;   _pwmInit
                                    1- 3350     ;   _powerOff
                                    1- 3351     ;   _powerOff
                                    1- 3352     ;   _pwmInit
                                    1- 3353     ;1 compiler assigned register :
                                    1- 3354     ;   r0x105F
                                    1- 3355     ;; Starting pCode block
                                    1- 3356     .segment "code"; module=main, function=_keyCtr
                                    1- 3358     ;local variable name mapping:
     0000                           1- 3360     _keyCtr:
                                    1- 3361     ; 2 exit points
                                    1- 3362     	.line	278, "main.c"; 	char kclick = keyRead(0x80 & (~PORTA));
                                    1- 3363     	BANKSEL	_PORTA
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 07rr                      1- 3364     	COMR	_PORTA,W
                                    1- 3365     	BANKSEL	r0x105F
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 00rr                      1- 3366     	MOVAR	r0x105F
     0004 2180                      1- 3367     	MOVIA	0x80
     0005 10rr                      1- 3368     	ANDAR	r0x105F,F
     0006 01rr                      1- 3369     	MOVR	r0x105F,W
                                    1- 3370     	MCALL	_keyRead
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3371     	BANKSEL	r0x105F
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1- 3372     	MOVAR	r0x105F
                                    1- 3373     	.line	279, "main.c"; 	if(kclick == 1)
     000A 2401                      1- 3374     	XORIA	0x01
     000B 0903                      1- 3375     	BTRSS	STATUS,2
                                    1- 3376     	MGOTO	_00309_DS_
     000C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3377     	.line	281, "main.c"; 	count500ms = 0;
                                    1- 3378     	BANKSEL	_count500ms
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 3379     	CLRR	_count500ms
                                    1- 3380     	.line	282, "main.c"; 	ledLightTime = 0;
                                    1- 3381     	BANKSEL	_ledLightTime
     000F rrrr                      3-  110 m1      .banksel ram_address
     0010 02rr                      1- 3382     	CLRR	_ledLightTime
                                    1- 3383     	.line	283, "main.c"; 	if(pwStep == 0)
                                    1- 3384     	BANKSEL	_pwStep
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 01rr                      1- 3385     	MOVR	_pwStep,W
     0013 0903                      1- 3386     	BTRSS	STATUS,2
                                    1- 3387     	MGOTO	_00279_DS_
     0014 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3388     	.line	285, "main.c"; 	sleepTime = 0;
                                    1- 3389     	BANKSEL	_sleepTime
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 02rr                      1- 3390     	CLRR	_sleepTime
     0017 02rr                      1- 3391     	CLRR	(_sleepTime + 1)
                                    1- 3392     	.line	286, "main.c"; 	powerOff();
                                    1- 3393     	MCALL	_powerOff
     0018 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3394     	.line	287, "main.c"; 	return;
                                    1- 3395     	MGOTO	_00311_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
     001A                           1- 3396     _00279_DS_:
                                    1- 3397     	.line	289, "main.c"; 	ledTime = 0;
                                    1- 3398     	BANKSEL	_ledTime
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 02rr                      1- 3399     	CLRR	_ledTime
                                    1- 3400     	.line	290, "main.c"; 	if(++workStep > 6)
                                    1- 3401     	BANKSEL	_workStep
     001C rrrr                      3-  110 m1      .banksel ram_address
     001D 05rr                      1- 3402     	INCR	_workStep,F
                                    1- 3403     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3404     ;;unsigned compare: left >= lit (0x7=7), size=1
     001E 2107                      1- 3405     	MOVIA	0x07
     001F 04rr                      1- 3406     	SUBAR	_workStep,W
     0020 0803                      1- 3407     	BTRSS	STATUS,0
                                    1- 3408     	MGOTO	_00281_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3409     	.line	291, "main.c"; 	workStep = 1;
     0022 2101                      1- 3410     	MOVIA	0x01
     0023 00rr                      1- 3411     	MOVAR	_workStep
     0024                           1- 3412     _00281_DS_:
                                    1- 3413     	.line	294, "main.c"; 	if(workStep == 1)
                                    1- 3414     	BANKSEL	_workStep
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 3415     	MOVR	_workStep,W
     0026 2401                      1- 3416     	XORIA	0x01
     0027 0903                      1- 3417     	BTRSS	STATUS,2
                                    1- 3418     	MGOTO	_00297_DS_
     0028 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3419     	.line	296, "main.c"; 	ledStep = 1;
     0029 2101                      1- 3420     	MOVIA	0x01
                                    1- 3421     	BANKSEL	_ledStep
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 00rr                      1- 3422     	MOVAR	_ledStep
                                    1- 3423     	.line	297, "main.c"; 	ledLightTime = 0;
                                    1- 3424     	BANKSEL	_ledLightTime
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 02rr                      1- 3425     	CLRR	_ledLightTime
                                    1- 3426     	.line	298, "main.c"; 	PWM2DUTY = 85;
     002E 2155                      1- 3427     	MOVIA	0x55
     002F 00rr                      1- 3428     	SFUN	_PWM2DUTY
                                    1- 3429     	.line	299, "main.c"; 	currentDuty = 85;
                                    1- 3430     	BANKSEL	_currentDuty
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 00rr                      1- 3431     	MOVAR	_currentDuty
                                    1- 3432     	.line	300, "main.c"; 	maxDuty = 77;
     0032 214D                      1- 3433     	MOVIA	0x4d
                                    1- 3434     	BANKSEL	_maxDuty
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 00rr                      1- 3435     	MOVAR	_maxDuty
                                    1- 3436     	.line	301, "main.c"; 	pwmInit();
                                    1- 3437     	MCALL	_pwmInit
     0035 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3438     	MGOTO	_00298_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
     0037                           1- 3439     _00297_DS_:
                                    1- 3440     	.line	303, "main.c"; 	else if(workStep == 2)
                                    1- 3441     	BANKSEL	_workStep
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 01rr                      1- 3442     	MOVR	_workStep,W
     0039 2402                      1- 3443     	XORIA	0x02
     003A 0903                      1- 3444     	BTRSS	STATUS,2
                                    1- 3445     	MGOTO	_00294_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3446     	.line	304, "main.c"; 	maxDuty = 81;
     003C 2151                      1- 3447     	MOVIA	0x51
                                    1- 3448     	BANKSEL	_maxDuty
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 00rr                      1- 3449     	MOVAR	_maxDuty
                                    1- 3450     	MGOTO	_00298_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
     0040                           1- 3451     _00294_DS_:
                                    1- 3452     	.line	305, "main.c"; 	else if(workStep == 3)
                                    1- 3453     	BANKSEL	_workStep
     0040 rrrr                      3-  110 m1      .banksel ram_address
     0041 01rr                      1- 3454     	MOVR	_workStep,W
     0042 2403                      1- 3455     	XORIA	0x03
     0043 0903                      1- 3456     	BTRSS	STATUS,2
                                    1- 3457     	MGOTO	_00291_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3458     	.line	306, "main.c"; 	maxDuty = 85;
     0045 2155                      1- 3459     	MOVIA	0x55
                                    1- 3460     	BANKSEL	_maxDuty
     0046 rrrr                      3-  110 m1      .banksel ram_address
     0047 00rr                      1- 3461     	MOVAR	_maxDuty
                                    1- 3462     	MGOTO	_00298_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049                           1- 3463     _00291_DS_:
                                    1- 3464     	.line	307, "main.c"; 	else if(workStep == 4)
                                    1- 3465     	BANKSEL	_workStep
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 01rr                      1- 3466     	MOVR	_workStep,W
     004B 2404                      1- 3467     	XORIA	0x04
     004C 0903                      1- 3468     	BTRSS	STATUS,2
                                    1- 3469     	MGOTO	_00288_DS_
     004D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3470     	.line	308, "main.c"; 	maxDuty = 90;
     004E 215A                      1- 3471     	MOVIA	0x5a
                                    1- 3472     	BANKSEL	_maxDuty
     004F rrrr                      3-  110 m1      .banksel ram_address
     0050 00rr                      1- 3473     	MOVAR	_maxDuty
                                    1- 3474     	MGOTO	_00298_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
     0052                           1- 3475     _00288_DS_:
                                    1- 3476     	.line	309, "main.c"; 	else if(workStep == 5)
                                    1- 3477     	BANKSEL	_workStep
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 01rr                      1- 3478     	MOVR	_workStep,W
     0054 2405                      1- 3479     	XORIA	0x05
     0055 0903                      1- 3480     	BTRSS	STATUS,2
                                    1- 3481     	MGOTO	_00285_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3482     	.line	310, "main.c"; 	maxDuty = 93;
     0057 215D                      1- 3483     	MOVIA	0x5d
                                    1- 3484     	BANKSEL	_maxDuty
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 00rr                      1- 3485     	MOVAR	_maxDuty
                                    1- 3486     	MGOTO	_00298_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B                           1- 3487     _00285_DS_:
                                    1- 3488     	.line	311, "main.c"; 	else if(workStep == 6)
                                    1- 3489     	BANKSEL	_workStep
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 01rr                      1- 3490     	MOVR	_workStep,W
     005D 2406                      1- 3491     	XORIA	0x06
     005E 0903                      1- 3492     	BTRSS	STATUS,2
                                    1- 3493     	MGOTO	_00298_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3494     	.line	312, "main.c"; 	maxDuty = 97;
     0060 2161                      1- 3495     	MOVIA	0x61
                                    1- 3496     	BANKSEL	_maxDuty
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 00rr                      1- 3497     	MOVAR	_maxDuty
                                    1- 3498     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3499     ;;unsigned compare: left >= lit (0x2=2), size=1
     0063                           1- 3500     _00298_DS_:
                                    1- 3501     	.line	313, "main.c"; 	if(workStep > 1)
     0063 2102                      1- 3502     	MOVIA	0x02
                                    1- 3503     	BANKSEL	_workStep
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 04rr                      1- 3504     	SUBAR	_workStep,W
     0066 0803                      1- 3505     	BTRSS	STATUS,0
                                    1- 3506     	MGOTO	_00300_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3507     	.line	315, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 3508     	BANKSEL	_maxDuty
     0068 rrrr                      3-  110 m1      .banksel ram_address
     0069 01rr                      1- 3509     	MOVR	_maxDuty,W
     006A 00rr                      1- 3510     	SFUN	_PWM2DUTY
                                    1- 3511     	.line	316, "main.c"; 	pwmInit();
                                    1- 3512     	MCALL	_pwmInit
     006B 2rrr                      3-   66 m1      LCALL rom_address
     006C                           1- 3513     _00300_DS_:
                                    1- 3514     	.line	318, "main.c"; 	ledStep = workStep;
                                    1- 3515     	BANKSEL	_workStep
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 01rr                      1- 3516     	MOVR	_workStep,W
                                    1- 3517     	BANKSEL	_ledStep
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 00rr                      1- 3518     	MOVAR	_ledStep
                                    1- 3519     	MGOTO	_00311_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
     0071                           1- 3520     _00309_DS_:
                                    1- 3521     	.line	320, "main.c"; 	else if(kclick == 2)
                                    1- 3522     	BANKSEL	r0x105F
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 01rr                      1- 3523     	MOVR	r0x105F,W
     0073 2402                      1- 3524     	XORIA	0x02
     0074 0903                      1- 3525     	BTRSS	STATUS,2
                                    1- 3526     	MGOTO	_00311_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3527     	.line	322, "main.c"; 	if(workStep > 0)
                                    1- 3528     	BANKSEL	_workStep
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 01rr                      1- 3529     	MOVR	_workStep,W
     0078 0D03                      1- 3530     	BTRSC	STATUS,2
                                    1- 3531     	MGOTO	_00304_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3532     	.line	324, "main.c"; 	powerOff();
                                    1- 3533     	MCALL	_powerOff
     007A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3534     	MGOTO	_00305_DS_
     007B 3rrr                      3-   63 m1      LGOTO rom_address
     007C                           1- 3535     _00304_DS_:
                                    1- 3536     	.line	328, "main.c"; 	if(pwStep == 0)
                                    1- 3537     	BANKSEL	_pwStep
     007C rrrr                      3-  110 m1      .banksel ram_address
     007D 01rr                      1- 3538     	MOVR	_pwStep,W
     007E 0903                      1- 3539     	BTRSS	STATUS,2
                                    1- 3540     	MGOTO	_00302_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3541     	.line	330, "main.c"; 	sleepTime = 0;
                                    1- 3542     	BANKSEL	_sleepTime
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 02rr                      1- 3543     	CLRR	_sleepTime
     0082 02rr                      1- 3544     	CLRR	(_sleepTime + 1)
                                    1- 3545     	.line	331, "main.c"; 	powerOff();
                                    1- 3546     	MCALL	_powerOff
     0083 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3547     	.line	332, "main.c"; 	return;
                                    1- 3548     	MGOTO	_00311_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
     0085                           1- 3549     _00302_DS_:
                                    1- 3550     	.line	334, "main.c"; 	ledLightTime = 0;
                                    1- 3551     	BANKSEL	_ledLightTime
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 02rr                      1- 3552     	CLRR	_ledLightTime
                                    1- 3553     	.line	335, "main.c"; 	ledStep = 1;
     0087 2101                      1- 3554     	MOVIA	0x01
                                    1- 3555     	BANKSEL	_ledStep
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 00rr                      1- 3556     	MOVAR	_ledStep
                                    1- 3557     	.line	336, "main.c"; 	workStep = 1;
                                    1- 3558     	BANKSEL	_workStep
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 00rr                      1- 3559     	MOVAR	_workStep
                                    1- 3560     	.line	337, "main.c"; 	PWM2DUTY = 85;
     008C 2155                      1- 3561     	MOVIA	0x55
     008D 00rr                      1- 3562     	SFUN	_PWM2DUTY
                                    1- 3563     	.line	338, "main.c"; 	currentDuty = 85;
                                    1- 3564     	BANKSEL	_currentDuty
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 00rr                      1- 3565     	MOVAR	_currentDuty
                                    1- 3566     	.line	339, "main.c"; 	maxDuty = 77;
     0090 214D                      1- 3567     	MOVIA	0x4d
                                    1- 3568     	BANKSEL	_maxDuty
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 00rr                      1- 3569     	MOVAR	_maxDuty
                                    1- 3570     	.line	340, "main.c"; 	pwmInit();
                                    1- 3571     	MCALL	_pwmInit
     0093 2rrr                      3-   66 m1      LCALL rom_address
     0094                           1- 3572     _00305_DS_:
                                    1- 3573     	.line	345, "main.c"; 	ledStep = workStep;
                                    1- 3574     	BANKSEL	_workStep
     0094 rrrr                      3-  110 m1      .banksel ram_address
     0095 01rr                      1- 3575     	MOVR	_workStep,W
                                    1- 3576     	BANKSEL	_ledStep
     0096 rrrr                      3-  110 m1      .banksel ram_address
     0097 00rr                      1- 3577     	MOVAR	_ledStep
     0098                           1- 3578     _00311_DS_:
                                    1- 3579     	.line	347, "main.c"; 	}
                                    1- 3580     	RETURN	
     0098 0010                      3-   40 m1      ret
                                    1- 3581     ; exit point of _keyCtr
                                    1- 3584     ;	code size estimation:
                                    1- 3585     ;	 1388+  350 =  1738 instructions ( 4176 byte)
                                    1- 3587     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
