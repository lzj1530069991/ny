
                    Nyquest Technology Co., Ltd.

NYASM 2.30

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ANSI-C Compiler
                                    1-    3     ; Version 3.7.1 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"main.c"
                                    1-    8     	list	p=NY8B062D,c=on
                                    1-    9     	#include "ny8b062d.inc"
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_IO_Init
                                    1-   15     	extern	_ledCtr
                                    1-   16     	extern	_workCtr
                                    1-   17     	extern	_fgCtr
                                    1-   18     	extern	_LedCtr2
                                    1-   19     	extern	_checkInAD
                                    1-   20     	extern	_F_AIN3_Convert
                                    1-   21     	extern	__divuint
                                    1-   22     	extern	_PORTAbits
                                    1-   23     	extern	_PORTBbits
                                    1-   24     	extern	_PCONbits
                                    1-   25     	extern	_BWUCONbits
                                    1-   26     	extern	_ABPLCONbits
                                    1-   27     	extern	_BPHCONbits
                                    1-   28     	extern	_INTEbits
                                    1-   29     	extern	_INTFbits
                                    1-   30     	extern	_ADMDbits
                                    1-   31     	extern	_ADRbits
                                    1-   32     	extern	_ADVREFHbits
                                    1-   33     	extern	_ADCRbits
                                    1-   34     	extern	_AWUCONbits
                                    1-   35     	extern	_PACONbits
                                    1-   36     	extern	_INTEDGbits
                                    1-   37     	extern	_ANAENbits
                                    1-   38     	extern	_RFCbits
                                    1-   39     	extern	_INTE2bits
                                    1-   40     	extern	_INDF
                                    1-   41     	extern	_TMR0
                                    1-   42     	extern	_PCL
                                    1-   43     	extern	_STATUS
                                    1-   44     	extern	_FSR
                                    1-   45     	extern	_PORTA
                                    1-   46     	extern	_PORTB
                                    1-   47     	extern	_PCON
                                    1-   48     	extern	_BWUCON
                                    1-   49     	extern	_PCHBUF
                                    1-   50     	extern	_ABPLCON
                                    1-   51     	extern	_BPHCON
                                    1-   52     	extern	_INTE
                                    1-   53     	extern	_INTF
                                    1-   54     	extern	_ADMD
                                    1-   55     	extern	_ADR
                                    1-   56     	extern	_ADD
                                    1-   57     	extern	_ADVREFH
                                    1-   58     	extern	_ADCR
                                    1-   59     	extern	_AWUCON
                                    1-   60     	extern	_PACON
                                    1-   61     	extern	_INTEDG
                                    1-   62     	extern	_TMRH
                                    1-   63     	extern	_ANAEN
                                    1-   64     	extern	_RFC
                                    1-   65     	extern	_TM3RH
                                    1-   66     	extern	_INTE2
                                    1-   67     	extern	_TMR1
                                    1-   68     	extern	_T1CR1
                                    1-   69     	extern	_T1CR2
                                    1-   70     	extern	_PWM1DUTY
                                    1-   71     	extern	_PS1CV
                                    1-   72     	extern	_BZ1CR
                                    1-   73     	extern	_IRCR
                                    1-   74     	extern	_TBHP
                                    1-   75     	extern	_TBHD
                                    1-   76     	extern	_TMR2
                                    1-   77     	extern	_T2CR1
                                    1-   78     	extern	_T2CR2
                                    1-   79     	extern	_PWM2DUTY
                                    1-   80     	extern	_PS2CV
                                    1-   81     	extern	_BZ2CR
                                    1-   82     	extern	_OSCCR
                                    1-   83     	extern	_TMR3
                                    1-   84     	extern	_T3CR1
                                    1-   85     	extern	_T3CR2
                                    1-   86     	extern	_PWM3DUTY
                                    1-   87     	extern	_PS3CV
                                    1-   88     	extern	_BZ3CR
                                    1-   89     	extern	_IOSTA
                                    1-   90     	extern	_IOSTB
                                    1-   91     	extern	_APHCON
                                    1-   92     	extern	_PS0CV
                                    1-   93     	extern	_BODCON
                                    1-   94     	extern	_CMPCR
                                    1-   95     	extern	_PCON1
                                    1-   96     	extern	_T0MD
                                    1-   97     	extern	___sdcc_saved_fsr
                                    1-   98     	extern	___sdcc_saved_stk00
                                    1-   99     	extern	___sdcc_saved_stk01
                                    1-  100     	extern	___sdcc_saved_stk02
                                    1-  101     	extern	___sdcc_saved_stk03
                                    1-  102     	extern	__nyc_ny8_startup
                                    1-  103     ;--------------------------------------------------------
                                    1-  104     ; global declarations
                                    1-  105     ;--------------------------------------------------------
                                    1-  106     	extern	_F_wait_eoc
                                    1-  107     	extern	_F_AIN2_Convert
                                    1-  108     	extern	_F_AIN4_Convert
                                    1-  109     	extern	_checkOutA
                                    1-  110     	extern	_checkBatAD
                                    1-  111     	extern	_initAD
                                    1-  112     	extern	_delay
                                    1-  113     	extern	_chrgCtr
                                    1-  114     	extern	_keyRead
                                    1-  115     	extern	_gotoSleep
                                    1-  116     	extern	_pwmStop
                                    1-  117     	extern	_pwmInit
                                    1-  118     	extern	_pwm1Stop
                                    1-  119     	extern	_pwm1Init
                                    1-  120     	extern	_LED6ON
                                    1-  121     	extern	_LED5ON
                                    1-  122     	extern	_LED4ON
                                    1-  123     	extern	_LED3ON
                                    1-  124     	extern	_LED2ON
                                    1-  125     	extern	_LED1ON
                                    1-  126     	extern	_LedInput
                                    1-  127     	extern	_ledShow
                                    1-  128     	extern	_initSys
                                    1-  129     	extern	_powerOff
                                    1-  130     	extern	_keyCtr
                                    1-  131     	extern	_isr
                                    1-  132     	extern	_main
                                    1-  133     	extern	_Status
                                    1-  134     	extern	_intCount
                                    1-  135     	extern	_count500ms
                                    1-  136     	extern	_keyCount
                                    1-  137     	extern	_workStep
                                    1-  138     	extern	_ledStep
                                    1-  139     	extern	_maxDuty
                                    1-  140     	extern	_pwStep
                                    1-  141     	extern	_R_AIN4_DATA
                                    1-  142     	extern	_R_AIN4_DATA_LB
                                    1-  143     	extern	_R_AIN2_DATA
                                    1-  144     	extern	_R_AIN2_DATA_LB
                                    1-  145     	extern	_chrgTime
                                    1-  146     	extern	_startStep
                                    1-  147     	extern	_sleepTime
                                    1-  148     	extern	_count200ms
                                    1-  149     	extern	_count1s
                                    1-  150     	extern	_count900s
                                    1-  151     	extern	_lowBatTime
                                    1-  152     	extern	_ledTime
                                    1-  153     	extern	_overCount
                                    1-  154     	extern	_chrgCount
                                    1-  155     	extern	_ledLightTime
                                    1-  156     	extern	_currentDuty
                                    1-  157     	extern	_fullCount
                                    1-  158     	extern	_shanshuoTime
                                    1-  159     	extern	_firstTime
                                    1-  160     	extern	_tempDuty
                                    1-  161     	extern	_lowCount
                                    1-  162     	extern	_cDuty
                                    1-  163     	extern	_tempLedStep
                                    1-  164     	extern	_count5S
                                    1-  165     	extern	_ledDeadTime
                                    1-  166     	extern	_lockLedStep
                                    1-  167     	extern	_closeCount
                                    1-  168     	extern	_chrgStep
                                    1-  169     	extern	_prePwStep
                                    1-  170     	extern	_chrgduty
                                    1-  171     	extern	_maxduty
                                    1-  172     	extern	_count50ms
                                    1-  173     	extern	_chrgFullFlag
                                    1-  174     	extern	_ledCount
                                    1-  175     	extern	_addTime
                                    1-  176     	extern	_subTime
                                    1-  177     	extern	_subMin
                                    1-  178     	extern	_chrgWaitTime
                                    1-  179     	extern	_tempSum
                                    1-  180     	extern	_count100
                                    1-  181     	extern	_tempResult
                                    1-  182     	extern	_chrgmaxduty
                                    1-  183     	extern	_chrgLedFull
                                    1-  184     	extern	_debug
                                    1-  186     	extern PSAVE
                                    1-  187     	extern SSAVE
                                    1-  188     	extern WSAVE
                                    1-  189     	extern STK12
                                    1-  190     	extern STK11
                                    1-  191     	extern STK10
                                    1-  192     	extern STK09
                                    1-  193     	extern STK08
                                    1-  194     	extern STK07
                                    1-  195     	extern STK06
                                    1-  196     	extern STK05
                                    1-  197     	extern STK04
                                    1-  198     	extern STK03
                                    1-  199     	extern STK02
                                    1-  200     	extern STK01
                                    1-  201     	extern STK00
                                    1-  203     .segment "uninit", 0x20000040
 20000040                           1-  204     PSAVE:
                                    1-  205     	.res 1
 20000041                           1-  206     SSAVE:
                                    1-  207     	.res 1
 20000042                           1-  208     WSAVE:
                                    1-  209     	.res 1
 20000043                           1-  210     STK12:
                                    1-  211     	.res 1
 20000044                           1-  212     STK11:
                                    1-  213     	.res 1
 20000045                           1-  214     STK10:
                                    1-  215     	.res 1
 20000046                           1-  216     STK09:
                                    1-  217     	.res 1
 20000047                           1-  218     STK08:
                                    1-  219     	.res 1
 20000048                           1-  220     STK07:
                                    1-  221     	.res 1
 20000049                           1-  222     STK06:
                                    1-  223     	.res 1
 2000004A                           1-  224     STK05:
                                    1-  225     	.res 1
 2000004B                           1-  226     STK04:
                                    1-  227     	.res 1
 2000004C                           1-  228     STK03:
                                    1-  229     	.res 1
 2000004D                           1-  230     STK02:
                                    1-  231     	.res 1
 2000004E                           1-  232     STK01:
                                    1-  233     	.res 1
 2000004F                           1-  234     STK00:
                                    1-  235     	.res 1
                                    1-  237     ;--------------------------------------------------------
                                    1-  238     ; global definitions
                                    1-  239     ;--------------------------------------------------------
                                    1-  240     .segment "uninit"
     0000                           1-  241     _R_AIN4_DATA:
                                    1-  242     	.res	2
                                    1-  245     .segment "uninit"
     0000                           1-  246     _R_AIN4_DATA_LB:
                                    1-  247     	.res	1
                                    1-  250     .segment "uninit"
     0000                           1-  251     _R_AIN2_DATA:
                                    1-  252     	.res	2
                                    1-  255     .segment "uninit"
     0000                           1-  256     _R_AIN2_DATA_LB:
                                    1-  257     	.res	1
                                    1-  260     ;--------------------------------------------------------
                                    1-  261     ; absolute symbol definitions
                                    1-  262     ;--------------------------------------------------------
                                    1-  263     ;--------------------------------------------------------
                                    1-  264     ; compiler-defined variables
                                    1-  265     ;--------------------------------------------------------
                                    1-  266     .segment "uninit"
     0000                           1-  267     r0x1063:
                                    1-  268     	.res	1
                                    1-  269     .segment "uninit"
     0000                           1-  270     r0x105B:
                                    1-  271     	.res	1
                                    1-  272     .segment "uninit"
     0000                           1-  273     r0x1062:
                                    1-  274     	.res	1
                                    1-  275     .segment "uninit"
     0000                           1-  276     r0x1061:
                                    1-  277     	.res	1
                                    1-  278     .segment "uninit"
     0000                           1-  279     r0x1060:
                                    1-  280     	.res	1
                                    1-  281     .segment "uninit"
     0000                           1-  282     r0x105F:
                                    1-  283     	.res	1
                                    1-  284     .segment "uninit"
     0000                           1-  285     r0x105E:
                                    1-  286     	.res	1
                                    1-  287     .segment "uninit"
     0000                           1-  288     r0x105D:
                                    1-  289     	.res	1
                                    1-  290     .segment "uninit"
     0000                           1-  291     r0x1054:
                                    1-  292     	.res	1
                                    1-  293     .segment "uninit"
     0000                           1-  294     r0x105C:
                                    1-  295     	.res	1
                                    1-  296     .segment "uninit"
     0000                           1-  297     r0x105A:
                                    1-  298     	.res	1
                                    1-  299     .segment "uninit"
     0000                           1-  300     r0x1055:
                                    1-  301     	.res	1
                                    1-  302     .segment "uninit"
     0000                           1-  303     r0x1056:
                                    1-  304     	.res	1
                                    1-  305     .segment "uninit"
     0000                           1-  306     r0x1057:
                                    1-  307     	.res	1
                                    1-  308     .segment "uninit"
     0000                           1-  309     r0x1059:
                                    1-  310     	.res	1
                                    1-  311     .segment "uninit"
     0000                           1-  312     r0x103E:
                                    1-  313     	.res	1
                                    1-  314     .segment "uninit"
     0000                           1-  315     r0x103F:
                                    1-  316     	.res	1
                                    1-  317     .segment "uninit"
     0000                           1-  318     r0x1052:
                                    1-  319     	.res	1
                                    1-  320     .segment "uninit"
     0000                           1-  321     r0x1053:
                                    1-  322     	.res	1
                                    1-  323     .segment "uninit"
     0000                           1-  324     r0x104E:
                                    1-  325     	.res	1
                                    1-  326     .segment "uninit"
     0000                           1-  327     r0x104F:
                                    1-  328     	.res	1
                                    1-  329     .segment "uninit"
     0000                           1-  330     r0x1046:
                                    1-  331     	.res	1
                                    1-  332     .segment "uninit"
     0000                           1-  333     r0x1047:
                                    1-  334     	.res	1
                                    1-  335     .segment "uninit"
     0000                           1-  336     r0x1048:
                                    1-  337     	.res	1
                                    1-  338     .segment "uninit"
     0000                           1-  339     r0x104B:
                                    1-  340     	.res	1
                                    1-  341     .segment "uninit"
     0000                           1-  342     r0x1040:
                                    1-  343     	.res	1
                                    1-  344     .segment "uninit"
     0000                           1-  345     r0x1041:
                                    1-  346     	.res	1
                                    1-  347     .segment "uninit"
     0000                           1-  348     r0x1042:
                                    1-  349     	.res	1
                                    1-  350     .segment "uninit"
     0000                           1-  351     r0x1045:
                                    1-  352     	.res	1
                                    1-  353     ;--------------------------------------------------------
                                    1-  354     ; initialized data
                                    1-  355     ;--------------------------------------------------------
                                    1-  357     .segment "idata"
     0000                           1-  358     _Status:
     0000 0000                      1-  359     	dw	0x00
                                    1-  363     .segment "idata"
     0000                           1-  364     _intCount:
     0000 0000                      1-  365     	dw	0x00
                                    1-  369     .segment "idata"
     0000                           1-  370     _count500ms:
     0000 0000                      1-  371     	dw	0x00
                                    1-  375     .segment "idata"
     0000                           1-  376     _keyCount:
     0000 0000                      1-  377     	dw	0x00
                                    1-  381     .segment "idata"
     0000                           1-  382     _workStep:
     0000 0000                      1-  383     	dw	0x00
                                    1-  387     .segment "idata"
     0000                           1-  388     _ledStep:
     0000 0000                      1-  389     	dw	0x00
                                    1-  393     .segment "idata"
     0000                           1-  394     _maxDuty:
     0000 0000                      1-  395     	dw	0x00
                                    1-  399     .segment "idata"
     0000                           1-  400     _pwStep:
     0000 0000                      1-  401     	dw	0x00
                                    1-  405     .segment "idata"
     0000                           1-  406     _chrgTime:
     0000 0000 0000                 1-  407     	dw	0x00, 0x00
                                    1-  411     .segment "idata"
     0000                           1-  412     _startStep:
     0000 0000                      1-  413     	dw	0x00
                                    1-  417     .segment "idata"
     0000                           1-  418     _sleepTime:
     0000 0000 0000                 1-  419     	dw	0x00, 0x00
                                    1-  423     .segment "idata"
     0000                           1-  424     _count200ms:
     0000 0000                      1-  425     	dw	0x00
                                    1-  429     .segment "idata"
     0000                           1-  430     _count1s:
     0000 0000                      1-  431     	dw	0x00
                                    1-  435     .segment "idata"
     0000                           1-  436     _count900s:
     0000 0000 0000                 1-  437     	dw	0x00, 0x00
                                    1-  441     .segment "idata"
     0000                           1-  442     _lowBatTime:
     0000 0000                      1-  443     	dw	0x00
                                    1-  447     .segment "idata"
     0000                           1-  448     _ledTime:
     0000 0000                      1-  449     	dw	0x00
                                    1-  453     .segment "idata"
     0000                           1-  454     _overCount:
     0000 0000                      1-  455     	dw	0x00
                                    1-  459     .segment "idata"
     0000                           1-  460     _chrgCount:
     0000 0000                      1-  461     	dw	0x00
                                    1-  465     .segment "idata"
     0000                           1-  466     _ledLightTime:
     0000 0000                      1-  467     	dw	0x00
                                    1-  471     .segment "idata"
     0000                           1-  472     _currentDuty:
     0000 0000                      1-  473     	dw	0x00
                                    1-  477     .segment "idata"
     0000                           1-  478     _fullCount:
     0000 0000 0000                 1-  479     	dw	0x00, 0x00
                                    1-  483     .segment "idata"
     0000                           1-  484     _shanshuoTime:
     0000 0000                      1-  485     	dw	0x00
                                    1-  489     .segment "idata"
     0000                           1-  490     _firstTime:
     0000 0000                      1-  491     	dw	0x00
                                    1-  495     .segment "idata"
     0000                           1-  496     _tempDuty:
     0000 0000                      1-  497     	dw	0x00
                                    1-  501     .segment "idata"
     0000                           1-  502     _lowCount:
     0000 0000                      1-  503     	dw	0x00
                                    1-  507     .segment "idata"
     0000                           1-  508     _cDuty:
     0000 0000                      1-  509     	dw	0x00
                                    1-  513     .segment "idata"
     0000                           1-  514     _tempLedStep:
     0000 0000                      1-  515     	dw	0x00
                                    1-  519     .segment "idata"
     0000                           1-  520     _count5S:
     0000 0000 0000                 1-  521     	dw	0x00, 0x00
                                    1-  525     .segment "idata"
     0000                           1-  526     _ledDeadTime:
     0000 0000                      1-  527     	dw	0x00
                                    1-  531     .segment "idata"
     0000                           1-  532     _lockLedStep:
     0000 0000                      1-  533     	dw	0x00
                                    1-  537     .segment "idata"
     0000                           1-  538     _closeCount:
     0000 0000 0000                 1-  539     	dw	0x00, 0x00
                                    1-  543     .segment "idata"
     0000                           1-  544     _chrgStep:
     0000 0000                      1-  545     	dw	0x00
                                    1-  549     .segment "idata"
     0000                           1-  550     _prePwStep:
     0000 0000                      1-  551     	dw	0x00
                                    1-  555     .segment "idata"
     0000                           1-  556     _chrgduty:
     0000 0000                      1-  557     	dw	0x00
                                    1-  561     .segment "idata"
     0000                           1-  562     _maxduty:
     0000 0000                      1-  563     	dw	0x00
                                    1-  567     .segment "idata"
     0000                           1-  568     _count50ms:
     0000 0000                      1-  569     	dw	0x00
                                    1-  573     .segment "idata"
     0000                           1-  574     _chrgFullFlag:
     0000 0000                      1-  575     	dw	0x00
                                    1-  579     .segment "idata"
     0000                           1-  580     _ledCount:
     0000 0000 0000                 1-  581     	dw	0x00, 0x00
                                    1-  585     .segment "idata"
     0000                           1-  586     _addTime:
     0000 0000                      1-  587     	dw	0x00
                                    1-  591     .segment "idata"
     0000                           1-  592     _subTime:
     0000 0000                      1-  593     	dw	0x00
                                    1-  597     .segment "idata"
     0000                           1-  598     _subMin:
     0000 0000                      1-  599     	dw	0x00
                                    1-  603     .segment "idata"
     0000                           1-  604     _chrgWaitTime:
     0000 0000                      1-  605     	dw	0x00
                                    1-  609     .segment "idata"
     0000                           1-  610     _tempSum:
     0000 0000 0000                 1-  611     	dw	0x00, 0x00
                                    1-  615     .segment "idata"
     0000                           1-  616     _count100:
     0000 0000                      1-  617     	dw	0x00
                                    1-  621     .segment "idata"
     0000                           1-  622     _tempResult:
     0000 0000 0000                 1-  623     	dw	0x00, 0x00
                                    1-  627     .segment "idata"
     0000                           1-  628     _chrgmaxduty:
     0000 0000                      1-  629     	dw	0x00
                                    1-  633     .segment "idata"
     0000                           1-  634     _chrgLedFull:
     0000 0000                      1-  635     	dw	0x00
                                    1-  639     .segment "idata"
     0000                           1-  640     _debug:
     0000 0000                      1-  641     	dw	0x00
                                    1-  644     ;--------------------------------------------------------
                                    1-  645     ; overlayable items in internal ram 
                                    1-  646     ;--------------------------------------------------------
                                    1-  647     ;	udata_ovr
                                    1-  648     ;--------------------------------------------------------
                                    1-  649     ; reset vector 
                                    1-  650     ;--------------------------------------------------------
                                    1-  651     ORG	0x0000
     0000 3rrr                      1-  652     	LGOTO	__nyc_ny8_startup
                                    1-  653     ;--------------------------------------------------------
                                    1-  654     ; interrupt and initialization code
                                    1-  655     ;--------------------------------------------------------
                                    1-  656     ORG 0x0008
                                    1-  657     	MGOTO	__sdcc_interrupt
     0008 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  659     .segment "code"
     0000                           1-  660     __sdcc_interrupt:
                                    1-  661     ;***
                                    1-  662     ;  pBlock Stats: dbName = I
                                    1-  663     ;***
                                    1-  664     ;4 compiler assigned registers:
                                    1-  665     ;   STK00
                                    1-  666     ;   STK01
                                    1-  667     ;   STK02
                                    1-  668     ;   STK03
                                    1-  669     ;; Starting pCode block
     0000                           1-  670     _isr:
                                    1-  671     ; 0 exit points
                                    1-  672     	.line	122, "main.c"; 	void isr(void) __interrupt(0)
     0000 00rr                      1-  673     	MOVAR	WSAVE
     0001 1503                      1-  674     	SWAPR	STATUS,W
     0002 0283                      1-  675     	CLRR	STATUS
     0003 00rr                      1-  676     	MOVAR	SSAVE
     0004 010A                      1-  677     	MOVR	PCHBUF,W
     0005 028A                      1-  678     	CLRR	PCHBUF
     0006 00rr                      1-  679     	MOVAR	PSAVE
     0007 0104                      1-  680     	MOVR	FSR,W
                                    1-  681     	BANKSEL	___sdcc_saved_fsr
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 00rr                      1-  682     	MOVAR	___sdcc_saved_fsr
     000A 01rr                      1-  683     	MOVR	STK00,W
                                    1-  684     	BANKSEL	___sdcc_saved_stk00
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 00rr                      1-  685     	MOVAR	___sdcc_saved_stk00
     000D 01rr                      1-  686     	MOVR	STK01,W
                                    1-  687     	BANKSEL	___sdcc_saved_stk01
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 00rr                      1-  688     	MOVAR	___sdcc_saved_stk01
     0010 01rr                      1-  689     	MOVR	STK02,W
                                    1-  690     	BANKSEL	___sdcc_saved_stk02
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 00rr                      1-  691     	MOVAR	___sdcc_saved_stk02
     0013 01rr                      1-  692     	MOVR	STK03,W
                                    1-  693     	BANKSEL	___sdcc_saved_stk03
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1-  694     	MOVAR	___sdcc_saved_stk03
                                    1-  695     	.line	124, "main.c"; 	if(INTFbits.T0IF)
     0016 08rr                      1-  696     	BTRSS	_INTFbits,0
                                    1-  697     	MGOTO	_00126_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  698     	.line	126, "main.c"; 	TMR0 += 55;
     0018 2137                      1-  699     	MOVIA	0x37
     0019 03rr                      1-  700     	ADDAR	_TMR0,F
                                    1-  701     	.line	128, "main.c"; 	if(++intCount >= 100)
                                    1-  702     	BANKSEL	_intCount
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 05rr                      1-  703     	INCR	_intCount,F
                                    1-  704     ;;unsigned compare: left < lit (0x64=100), size=1
     001C 2164                      1-  705     	MOVIA	0x64
     001D 04rr                      1-  706     	SUBAR	_intCount,W
     001E 0803                      1-  707     	BTRSS	STATUS,0
                                    1-  708     	MGOTO	_00126_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  709     	.line	130, "main.c"; 	IntFlag = 1;
                                    1-  710     	BANKSEL	_Status
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 18rr                      1-  711     	BSR	_Status,0
                                    1-  712     	.line	131, "main.c"; 	intCount = 0;
                                    1-  713     	BANKSEL	_intCount
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 02rr                      1-  714     	CLRR	_intCount
                                    1-  715     	.line	132, "main.c"; 	if(++count500ms >= 40)
                                    1-  716     	BANKSEL	_count500ms
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 05rr                      1-  717     	INCR	_count500ms,F
                                    1-  718     ;;unsigned compare: left < lit (0x28=40), size=1
     0026 2128                      1-  719     	MOVIA	0x28
     0027 04rr                      1-  720     	SUBAR	_count500ms,W
     0028 0C03                      1-  721     	BTRSC	STATUS,0
                                    1-  722     	.line	133, "main.c"; 	count500ms = 0;
     0029 02rr                      1-  723     	CLRR	_count500ms
                                    1-  724     	.line	134, "main.c"; 	if(++count200ms >= 20)
                                    1-  725     	BANKSEL	_count200ms
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 05rr                      1-  726     	INCR	_count200ms,F
     002C 2114                      1-  727     	MOVIA	0x14
     002D 04rr                      1-  728     	SUBAR	_count200ms,W
     002E 0803                      1-  729     	BTRSS	STATUS,0
                                    1-  730     	MGOTO	_00110_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  731     	.line	136, "main.c"; 	count200ms = 0;
     0030 02rr                      1-  732     	CLRR	_count200ms
                                    1-  733     	.line	137, "main.c"; 	if(ledDeadTime > 0)
                                    1-  734     	BANKSEL	_ledDeadTime
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 01rr                      1-  735     	MOVR	_ledDeadTime,W
     0033 0903                      1-  736     	BTRSS	STATUS,2
                                    1-  737     	.line	138, "main.c"; 	--ledDeadTime;
     0034 06rr                      1-  738     	DECR	_ledDeadTime,F
     0035                           1-  739     _00110_DS_:
                                    1-  740     	.line	140, "main.c"; 	if(++count1s >= 100)
                                    1-  741     	BANKSEL	_count1s
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 05rr                      1-  742     	INCR	_count1s,F
     0037 2164                      1-  743     	MOVIA	0x64
     0038 04rr                      1-  744     	SUBAR	_count1s,W
     0039 0803                      1-  745     	BTRSS	STATUS,0
                                    1-  746     	MGOTO	_00126_DS_
     003A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  747     	.line	142, "main.c"; 	count1s = 0;
     003B 02rr                      1-  748     	CLRR	_count1s
                                    1-  749     	.line	143, "main.c"; 	if(chrgFlag == 1 && pwStep == 6)
                                    1-  750     	BANKSEL	_Status
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 09rr                      1-  751     	BTRSS	_Status,3
                                    1-  752     	MGOTO	_00112_DS_
     003E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  753     	BANKSEL	_pwStep
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 01rr                      1-  754     	MOVR	_pwStep,W
     0041 2406                      1-  755     	XORIA	0x06
     0042 0903                      1-  756     	BTRSS	STATUS,2
                                    1-  757     	MGOTO	_00112_DS_
     0043 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  758     	.line	145, "main.c"; 	++chrgTime;
                                    1-  759     	BANKSEL	_chrgTime
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 05rr                      1-  760     	INCR	_chrgTime,F
     0046 0D03                      1-  761     	BTRSC	STATUS,2
     0047 05rr                      1-  762     	INCR	(_chrgTime + 1),F
     0048                           1-  763     _00112_DS_:
                                    1-  764     	.line	148, "main.c"; 	if(ledLightTime > 0)
                                    1-  765     	BANKSEL	_ledLightTime
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 01rr                      1-  766     	MOVR	_ledLightTime,W
     004A 0903                      1-  767     	BTRSS	STATUS,2
                                    1-  768     	.line	149, "main.c"; 	--ledLightTime;
     004B 06rr                      1-  769     	DECR	_ledLightTime,F
                                    1-  770     	.line	150, "main.c"; 	if(shanshuoTime > 0)
                                    1-  771     	BANKSEL	_shanshuoTime
     004C rrrr                      3-  110 m1      .banksel ram_address
     004D 01rr                      1-  772     	MOVR	_shanshuoTime,W
     004E 0903                      1-  773     	BTRSS	STATUS,2
                                    1-  774     	.line	151, "main.c"; 	--shanshuoTime;
     004F 06rr                      1-  775     	DECR	_shanshuoTime,F
                                    1-  776     	.line	152, "main.c"; 	if(workStep)
                                    1-  777     	BANKSEL	_workStep
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 01rr                      1-  778     	MOVR	_workStep,W
     0052 0D03                      1-  779     	BTRSC	STATUS,2
                                    1-  780     	MGOTO	_00119_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  781     	.line	154, "main.c"; 	++count900s;
                                    1-  782     	BANKSEL	_count900s
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 05rr                      1-  783     	INCR	_count900s,F
     0056 0D03                      1-  784     	BTRSC	STATUS,2
     0057 05rr                      1-  785     	INCR	(_count900s + 1),F
                                    1-  786     	MGOTO	_00126_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
     0059                           1-  787     _00119_DS_:
                                    1-  788     	.line	158, "main.c"; 	count900s = 0;
                                    1-  789     	BANKSEL	_count900s
     0059 rrrr                      3-  110 m1      .banksel ram_address
     005A 02rr                      1-  790     	CLRR	_count900s
     005B 02rr                      1-  791     	CLRR	(_count900s + 1)
     005C                           1-  792     _00126_DS_:
                                    1-  793     	.line	167, "main.c"; 	if(INTFbits.PABIF)
     005C 08rr                      1-  794     	BTRSS	_INTFbits,1
                                    1-  795     	MGOTO	_00128_DS_
     005D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  796     	.line	169, "main.c"; 	INTF= (unsigned char)~(C_INT_PABKey);	// Clear PABIF(PortB input change interrupt flag bit)
     005E 21FD                      1-  797     	MOVIA	0xfd
     005F 00rr                      1-  798     	MOVAR	_INTF
     0060                           1-  799     _00128_DS_:
                                    1-  800     	.line	172, "main.c"; 	INTF = 0;
     0060 02rr                      1-  801     	CLRR	_INTF
                                    1-  802     	.line	174, "main.c"; 	}
                                    1-  803     	BANKSEL	___sdcc_saved_stk03
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 01rr                      1-  804     	MOVR	___sdcc_saved_stk03,W
     0063 00rr                      1-  805     	MOVAR	STK03
                                    1-  806     	BANKSEL	___sdcc_saved_stk02
     0064 rrrr                      3-  110 m1      .banksel ram_address
     0065 01rr                      1-  807     	MOVR	___sdcc_saved_stk02,W
     0066 00rr                      1-  808     	MOVAR	STK02
                                    1-  809     	BANKSEL	___sdcc_saved_stk01
     0067 rrrr                      3-  110 m1      .banksel ram_address
     0068 01rr                      1-  810     	MOVR	___sdcc_saved_stk01,W
     0069 00rr                      1-  811     	MOVAR	STK01
                                    1-  812     	BANKSEL	___sdcc_saved_stk00
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 01rr                      1-  813     	MOVR	___sdcc_saved_stk00,W
     006C 00rr                      1-  814     	MOVAR	STK00
                                    1-  815     	BANKSEL	___sdcc_saved_fsr
     006D rrrr                      3-  110 m1      .banksel ram_address
     006E 01rr                      1-  816     	MOVR	___sdcc_saved_fsr,W
     006F 0084                      1-  817     	MOVAR	FSR
     0070 01rr                      1-  818     	MOVR	PSAVE,W
     0071 008A                      1-  819     	MOVAR	PCHBUF
     0072 0283                      1-  820     	CLRR	STATUS
     0073 15rr                      1-  821     	SWAPR	SSAVE,W
     0074 0083                      1-  822     	MOVAR	STATUS
     0075 15rr                      1-  823     	SWAPR	WSAVE,F
     0076 15rr                      1-  824     	SWAPR	WSAVE,W
     0077                           1-  825     END_OF_INTERRUPT:
     0077 0011                      1-  826     	RETIE	
                                    1-  828     ;--------------------------------------------------------
                                    1-  829     ; code
                                    1-  830     ;--------------------------------------------------------
                                    1-  831     ;***
                                    1-  832     ;  pBlock Stats: dbName = M
                                    1-  833     ;***
                                    1-  834     ;has an exit
                                    1-  835     ;functions called:
                                    1-  836     ;   _initSys
                                    1-  837     ;   _initAD
                                    1-  838     ;   _ledShow
                                    1-  839     ;   _pwmStop
                                    1-  840     ;   _powerOff
                                    1-  841     ;   _keyCtr
                                    1-  842     ;   _checkBatAD
                                    1-  843     ;   _checkOutA
                                    1-  844     ;   _chrgCtr
                                    1-  845     ;   _gotoSleep
                                    1-  846     ;   _powerOff
                                    1-  847     ;   _initSys
                                    1-  848     ;   _initAD
                                    1-  849     ;   _ledShow
                                    1-  850     ;   _pwmStop
                                    1-  851     ;   _powerOff
                                    1-  852     ;   _keyCtr
                                    1-  853     ;   _checkBatAD
                                    1-  854     ;   _checkOutA
                                    1-  855     ;   _chrgCtr
                                    1-  856     ;   _gotoSleep
                                    1-  857     ;   _powerOff
                                    1-  858     ;; Starting pCode block
                                    1-  859     .segment "code"; module=main, function=_main
     0000                           1-  861     _main:
                                    1-  862     ; 2 exit points
                                    1-  863     	.line	178, "main.c"; 	initSys();
                                    1-  864     	MCALL	_initSys
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  865     	.line	179, "main.c"; 	initAD();
                                    1-  866     	MCALL	_initAD
     0001 2rrr                      3-   66 m1      LCALL rom_address
     0002                           1-  867     _00168_DS_:
                                    1-  868     	.line	182, "main.c"; 	CLRWDT();
     0002 0002                      1-  869     	clrwdt
                                    1-  870     	.line	183, "main.c"; 	ledShow();
                                    1-  871     	MCALL	_ledShow
     0003 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  872     	.line	184, "main.c"; 	if(workStep > 0 && currentDuty > maxDuty)
                                    1-  873     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1-  874     	MOVR	_workStep,W
     0006 0D03                      1-  875     	BTRSC	STATUS,2
                                    1-  876     	MGOTO	_00134_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  877     	BANKSEL	_currentDuty
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 01rr                      1-  878     	MOVR	_currentDuty,W
                                    1-  879     	BANKSEL	_maxDuty
     000A rrrr                      3-  110 m1      .banksel ram_address
     000B 04rr                      1-  880     	SUBAR	_maxDuty,W
     000C 0C03                      1-  881     	BTRSC	STATUS,0
                                    1-  882     	MGOTO	_00134_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  883     	.line	186, "main.c"; 	currentDuty = currentDuty - 1;
                                    1-  884     	BANKSEL	_currentDuty
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 06rr                      1-  885     	DECR	_currentDuty,F
                                    1-  886     	.line	187, "main.c"; 	PWM2DUTY = currentDuty;
     0010 01rr                      1-  887     	MOVR	_currentDuty,W
     0011 00rr                      1-  888     	SFUN	_PWM2DUTY
                                    1-  889     	.line	188, "main.c"; 	cDuty = currentDuty;
     0012 01rr                      1-  890     	MOVR	_currentDuty,W
                                    1-  891     	BANKSEL	_cDuty
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 00rr                      1-  892     	MOVAR	_cDuty
     0015                           1-  893     _00134_DS_:
                                    1-  894     	.line	190, "main.c"; 	if(!IntFlag)
                                    1-  895     	BANKSEL	_Status
     0015 rrrr                      3-  110 m1      .banksel ram_address
     0016 08rr                      1-  896     	BTRSS	_Status,0
                                    1-  897     	MGOTO	_00168_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  898     	.line	192, "main.c"; 	IntFlag = 0;
     0018 1Crr                      1-  899     	BCR	_Status,0
                                    1-  900     	.line	194, "main.c"; 	if(shanshuoTime == 0 && pwStep == 0 && workStep > 0 && chrgFlag == 0)
                                    1-  901     	BANKSEL	_shanshuoTime
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1-  902     	MOVR	_shanshuoTime,W
     001B 0903                      1-  903     	BTRSS	STATUS,2
                                    1-  904     	MGOTO	_00141_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  905     	BANKSEL	_pwStep
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1-  906     	MOVR	_pwStep,W
     001F 0903                      1-  907     	BTRSS	STATUS,2
                                    1-  908     	MGOTO	_00141_DS_
     0020 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  909     	BANKSEL	_workStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 01rr                      1-  910     	MOVR	_workStep,W
     0023 0D03                      1-  911     	BTRSC	STATUS,2
                                    1-  912     	MGOTO	_00141_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  913     	BANKSEL	_Status
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 0Drr                      1-  914     	BTRSC	_Status,3
                                    1-  915     	MGOTO	_00141_DS_
     0027 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  916     	.line	196, "main.c"; 	if(++closeCount >= 1000)
                                    1-  917     	BANKSEL	_closeCount
     0028 rrrr                      3-  110 m1      .banksel ram_address
     0029 05rr                      1-  918     	INCR	_closeCount,F
     002A 0D03                      1-  919     	BTRSC	STATUS,2
     002B 05rr                      1-  920     	INCR	(_closeCount + 1),F
                                    1-  921     ;;unsigned compare: left < lit (0x3E8=1000), size=2
     002C 2103                      1-  922     	MOVIA	0x03
     002D 04rr                      1-  923     	SUBAR	(_closeCount + 1),W
     002E 0903                      1-  924     	BTRSS	STATUS,2
                                    1-  925     	MGOTO	_00239_DS_
     002F 3rrr                      3-   63 m1      LGOTO rom_address
     0030 21E8                      1-  926     	MOVIA	0xe8
     0031 04rr                      1-  927     	SUBAR	_closeCount,W
     0032                           1-  928     _00239_DS_:
     0032 0803                      1-  929     	BTRSS	STATUS,0
                                    1-  930     	MGOTO	_00142_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  931     	.line	198, "main.c"; 	closeCount = 0;
                                    1-  932     	BANKSEL	_closeCount
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 02rr                      1-  933     	CLRR	_closeCount
     0036 02rr                      1-  934     	CLRR	(_closeCount + 1)
                                    1-  935     	.line	199, "main.c"; 	workStep = 0;
                                    1-  936     	BANKSEL	_workStep
     0037 rrrr                      3-  110 m1      .banksel ram_address
     0038 02rr                      1-  937     	CLRR	_workStep
                                    1-  938     	.line	200, "main.c"; 	ledStep = 0;
                                    1-  939     	BANKSEL	_ledStep
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 02rr                      1-  940     	CLRR	_ledStep
                                    1-  941     	.line	201, "main.c"; 	pwmStop();
                                    1-  942     	MCALL	_pwmStop
     003B 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  943     	MGOTO	_00142_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D                           1-  944     _00141_DS_:
                                    1-  945     	.line	206, "main.c"; 	closeCount = 0;
                                    1-  946     	BANKSEL	_closeCount
     003D rrrr                      3-  110 m1      .banksel ram_address
     003E 02rr                      1-  947     	CLRR	_closeCount
     003F 02rr                      1-  948     	CLRR	(_closeCount + 1)
                                    1-  949     ;;unsigned compare: left < lit (0x5=5), size=1
     0040                           1-  950     _00142_DS_:
                                    1-  951     	.line	209, "main.c"; 	if(overCount >= 5 && workStep > 0)
     0040 2105                      1-  952     	MOVIA	0x05
                                    1-  953     	BANKSEL	_overCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 04rr                      1-  954     	SUBAR	_overCount,W
     0043 0803                      1-  955     	BTRSS	STATUS,0
                                    1-  956     	MGOTO	_00149_DS_
     0044 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  957     	BANKSEL	_workStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1-  958     	MOVR	_workStep,W
     0047 0D03                      1-  959     	BTRSC	STATUS,2
                                    1-  960     	MGOTO	_00149_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  961     	.line	211, "main.c"; 	if(++count5S > 500)
                                    1-  962     	BANKSEL	_count5S
     0049 rrrr                      3-  110 m1      .banksel ram_address
     004A 05rr                      1-  963     	INCR	_count5S,F
     004B 0D03                      1-  964     	BTRSC	STATUS,2
     004C 05rr                      1-  965     	INCR	(_count5S + 1),F
                                    1-  966     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  967     ;;unsigned compare: left >= lit (0x1F5=501), size=2
     004D 2101                      1-  968     	MOVIA	0x01
     004E 04rr                      1-  969     	SUBAR	(_count5S + 1),W
     004F 0903                      1-  970     	BTRSS	STATUS,2
                                    1-  971     	MGOTO	_00241_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
     0051 21F5                      1-  972     	MOVIA	0xf5
     0052 04rr                      1-  973     	SUBAR	_count5S,W
     0053                           1-  974     _00241_DS_:
     0053 0803                      1-  975     	BTRSS	STATUS,0
                                    1-  976     	MGOTO	_00150_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1-  977     	.line	213, "main.c"; 	overCount = 0;
                                    1-  978     	BANKSEL	_overCount
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 02rr                      1-  979     	CLRR	_overCount
                                    1-  980     	.line	214, "main.c"; 	count5S = 0;
                                    1-  981     	BANKSEL	_count5S
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 02rr                      1-  982     	CLRR	_count5S
     0059 02rr                      1-  983     	CLRR	(_count5S + 1)
                                    1-  984     	.line	215, "main.c"; 	ledDeadTime = 25;
     005A 2119                      1-  985     	MOVIA	0x19
                                    1-  986     	BANKSEL	_ledDeadTime
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 00rr                      1-  987     	MOVAR	_ledDeadTime
                                    1-  988     	.line	216, "main.c"; 	powerOff();
                                    1-  989     	MCALL	_powerOff
     005D 2rrr                      3-   66 m1      LCALL rom_address
                                    1-  990     	MGOTO	_00150_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
     005F                           1-  991     _00149_DS_:
                                    1-  992     	.line	221, "main.c"; 	count5S = 0;
                                    1-  993     	BANKSEL	_count5S
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 02rr                      1-  994     	CLRR	_count5S
     0061 02rr                      1-  995     	CLRR	(_count5S + 1)
     0062                           1-  996     _00150_DS_:
                                    1-  997     	.line	223, "main.c"; 	if(chrgFlag == 0)
                                    1-  998     	BANKSEL	_Status
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 09rr                      1-  999     	BTRSS	_Status,3
                                    1- 1000     	.line	224, "main.c"; 	keyCtr();
                                    1- 1001     	MCALL	_keyCtr
     0064 2rrr                      3-   66 m1      LCALL rom_address
     0065                           1- 1002     _00153_DS_:
                                    1- 1003     	.line	225, "main.c"; 	if(count200ms < 3)
     0065 2103                      1- 1004     	MOVIA	0x03
                                    1- 1005     	BANKSEL	_count200ms
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 04rr                      1- 1006     	SUBAR	_count200ms,W
     0068 0803                      1- 1007     	BTRSS	STATUS,0
                                    1- 1008     	.line	227, "main.c"; 	checkBatAD();
                                    1- 1009     	MCALL	_checkBatAD
     0069 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1010     	.line	229, "main.c"; 	checkOutA();
                                    1- 1011     	MCALL	_checkOutA
     006A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1012     	.line	230, "main.c"; 	chrgCtr();
                                    1- 1013     	MCALL	_chrgCtr
     006B 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1014     	.line	233, "main.c"; 	if(workStep == 0 && keyCount == 0 && chrgFlag == 0 && ledLightTime == 0 && ledDeadTime == 0 && shanshuoTime == 0)
                                    1- 1015     	BANKSEL	_workStep
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 01rr                      1- 1016     	MOVR	_workStep,W
     006E 0903                      1- 1017     	BTRSS	STATUS,2
                                    1- 1018     	MGOTO	_00159_DS_
     006F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1019     	BANKSEL	_keyCount
     0070 rrrr                      3-  110 m1      .banksel ram_address
     0071 01rr                      1- 1020     	MOVR	_keyCount,W
     0072 0903                      1- 1021     	BTRSS	STATUS,2
                                    1- 1022     	MGOTO	_00159_DS_
     0073 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1023     	BANKSEL	_Status
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 0Drr                      1- 1024     	BTRSC	_Status,3
                                    1- 1025     	MGOTO	_00159_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1026     	BANKSEL	_ledLightTime
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 01rr                      1- 1027     	MOVR	_ledLightTime,W
     0079 0903                      1- 1028     	BTRSS	STATUS,2
                                    1- 1029     	MGOTO	_00159_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1030     	BANKSEL	_ledDeadTime
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 01rr                      1- 1031     	MOVR	_ledDeadTime,W
     007D 0903                      1- 1032     	BTRSS	STATUS,2
                                    1- 1033     	MGOTO	_00159_DS_
     007E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1034     	BANKSEL	_shanshuoTime
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 01rr                      1- 1035     	MOVR	_shanshuoTime,W
     0081 0903                      1- 1036     	BTRSS	STATUS,2
                                    1- 1037     	MGOTO	_00159_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1038     	.line	235, "main.c"; 	if(++sleepTime > 20)
                                    1- 1039     	BANKSEL	_sleepTime
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 05rr                      1- 1040     	INCR	_sleepTime,F
     0085 0D03                      1- 1041     	BTRSC	STATUS,2
     0086 05rr                      1- 1042     	INCR	(_sleepTime + 1),F
                                    1- 1043     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1044     ;;unsigned compare: left >= lit (0x15=21), size=2
     0087 2100                      1- 1045     	MOVIA	0x00
     0088 04rr                      1- 1046     	SUBAR	(_sleepTime + 1),W
     0089 0903                      1- 1047     	BTRSS	STATUS,2
                                    1- 1048     	MGOTO	_00243_DS_
     008A 3rrr                      3-   63 m1      LGOTO rom_address
     008B 2115                      1- 1049     	MOVIA	0x15
     008C 04rr                      1- 1050     	SUBAR	_sleepTime,W
     008D                           1- 1051     _00243_DS_:
     008D 0803                      1- 1052     	BTRSS	STATUS,0
                                    1- 1053     	MGOTO	_00159_DS_
     008E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1054     	.line	237, "main.c"; 	gotoSleep();
                                    1- 1055     	MCALL	_gotoSleep
     008F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1056     ;;unsigned compare: left < lit (0x384=900), size=2
     0090                           1- 1057     _00159_DS_:
                                    1- 1058     	.line	241, "main.c"; 	if(count900s >= 900)
     0090 2103                      1- 1059     	MOVIA	0x03
                                    1- 1060     	BANKSEL	_count900s
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 04rr                      1- 1061     	SUBAR	(_count900s + 1),W
     0093 0903                      1- 1062     	BTRSS	STATUS,2
                                    1- 1063     	MGOTO	_00244_DS_
     0094 3rrr                      3-   63 m1      LGOTO rom_address
     0095 2184                      1- 1064     	MOVIA	0x84
     0096 04rr                      1- 1065     	SUBAR	_count900s,W
     0097                           1- 1066     _00244_DS_:
     0097 0803                      1- 1067     	BTRSS	STATUS,0
                                    1- 1068     	MGOTO	_00168_DS_
     0098 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1069     	.line	243, "main.c"; 	powerOff();
                                    1- 1070     	MCALL	_powerOff
     0099 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1071     	MGOTO	_00168_DS_
     009A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1072     	.line	247, "main.c"; 	}
                                    1- 1073     	RETURN	
     009B 0010                      3-   40 m1      ret
                                    1- 1074     ; exit point of _main
                                    1- 1076     ;***
                                    1- 1077     ;  pBlock Stats: dbName = C
                                    1- 1078     ;***
                                    1- 1079     ;has an exit
                                    1- 1080     ;; Starting pCode block
                                    1- 1081     .segment "code"; module=main, function=_F_wait_eoc
     0000                           1- 1083     _F_wait_eoc:
                                    1- 1084     ; 2 exit points
     0000                           1- 1085     _00777_DS_:
                                    1- 1086     	.line	926, "main.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1087     	BTRSS	_ADMDbits,5
                                    1- 1088     	MGOTO	_00777_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1089     	.line	928, "main.c"; 	}
                                    1- 1090     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 1091     ; exit point of _F_wait_eoc
                                    1- 1093     ;***
                                    1- 1094     ;  pBlock Stats: dbName = C
                                    1- 1095     ;***
                                    1- 1096     ;has an exit
                                    1- 1097     ;functions called:
                                    1- 1098     ;   _delay
                                    1- 1099     ;   _F_wait_eoc
                                    1- 1100     ;   _delay
                                    1- 1101     ;   _F_wait_eoc
                                    1- 1102     ;6 compiler assigned registers:
                                    1- 1103     ;   r0x1040
                                    1- 1104     ;   r0x1041
                                    1- 1105     ;   r0x1042
                                    1- 1106     ;   r0x1043
                                    1- 1107     ;   r0x1044
                                    1- 1108     ;   r0x1045
                                    1- 1109     ;; Starting pCode block
                                    1- 1110     .segment "code"; module=main, function=_F_AIN2_Convert
                                    1- 1112     ;local variable name mapping:
     0000                           1- 1115     _F_AIN2_Convert:
                                    1- 1116     ; 2 exit points
                                    1- 1117     	.line	909, "main.c"; 	void F_AIN2_Convert(char count)
                                    1- 1118     	BANKSEL	r0x1040
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1119     	MOVAR	r0x1040
                                    1- 1120     	.line	911, "main.c"; 	R_AIN2_DATA=R_AIN2_DATA_LB=0x00;   
                                    1- 1121     	BANKSEL	_R_AIN2_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1122     	CLRR	_R_AIN2_DATA_LB
                                    1- 1123     	BANKSEL	_R_AIN2_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1124     	CLRR	_R_AIN2_DATA
     0006 02rr                      1- 1125     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1126     	.line	913, "main.c"; 	ADMD  = 0x90 | C_ADC_PA2;				// Select AIN6(PB1) pad as ADC input
     0007 2192                      1- 1127     	MOVIA	0x92
     0008 00rr                      1- 1128     	MOVAR	_ADMD
                                    1- 1129     	.line	914, "main.c"; 	delay(200);	
     0009 21C8                      1- 1130     	MOVIA	0xc8
                                    1- 1131     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1132     	.line	915, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1133     	MOVIA	0x01
                                    1- 1134     	BANKSEL	r0x1041
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1135     	MOVAR	r0x1041
     000E                           1- 1136     _00770_DS_:
                                    1- 1137     	BANKSEL	r0x1041
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1138     	MOVR	r0x1041,W
                                    1- 1139     	BANKSEL	r0x1040
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1140     	SUBAR	r0x1040,W
     0012 0803                      1- 1141     	BTRSS	STATUS,0
                                    1- 1142     	MGOTO	_00772_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1143     	.line	917, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1144     	BSR	_ADMDbits,6
                                    1- 1145     	.line	918, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1146     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1147     	.line	919, "main.c"; 	R_AIN2_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1148     	MOVIA	0x0f
     0017 10rr                      1- 1149     	ANDAR	_ADR,W
                                    1- 1150     ;;3	MOVAR	r0x1042
                                    1- 1151     	BANKSEL	_R_AIN2_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1152     	ADDAR	_R_AIN2_DATA_LB,F
                                    1- 1153     	.line	920, "main.c"; 	R_AIN2_DATA    += ADD; 
     001A 01rr                      1- 1154     	MOVR	_ADD,W
                                    1- 1155     	BANKSEL	r0x1042
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1156     	MOVAR	r0x1042
                                    1- 1157     ;;1	CLRR	r0x1043
                                    1- 1158     ;;106	MOVR	r0x1042,W
                                    1- 1159     ;;104	MOVAR	r0x1044
     001D 2100                      1- 1160     	MOVIA	0x00
                                    1- 1161     	BANKSEL	r0x1045
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1162     	MOVAR	r0x1045
                                    1- 1163     ;;105	MOVR	r0x1044,W
                                    1- 1164     	BANKSEL	r0x1042
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1165     	MOVR	r0x1042,W
                                    1- 1166     	BANKSEL	_R_AIN2_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1167     	ADDAR	_R_AIN2_DATA,F
                                    1- 1168     	BANKSEL	r0x1045
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1169     	MOVR	r0x1045,W
     0026 0C03                      1- 1170     	BTRSC	STATUS,0
     0027 05rr                      1- 1171     	INCR	r0x1045,W
     0028 0D03                      1- 1172     	BTRSC	STATUS,2
                                    1- 1173     	MGOTO	_00001_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1174     	BANKSEL	_R_AIN2_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1175     	ADDAR	(_R_AIN2_DATA + 1),F
     002C                           1- 1176     _00001_DS_:
                                    1- 1177     	.line	915, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1178     	BANKSEL	r0x1041
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1179     	INCR	r0x1041,F
                                    1- 1180     	MGOTO	_00770_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1181     _00772_DS_:
                                    1- 1182     	.line	922, "main.c"; 	}
                                    1- 1183     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1184     ; exit point of _F_AIN2_Convert
                                    1- 1186     ;***
                                    1- 1187     ;  pBlock Stats: dbName = C
                                    1- 1188     ;***
                                    1- 1189     ;has an exit
                                    1- 1190     ;functions called:
                                    1- 1191     ;   _delay
                                    1- 1192     ;   _F_wait_eoc
                                    1- 1193     ;   _delay
                                    1- 1194     ;   _F_wait_eoc
                                    1- 1195     ;6 compiler assigned registers:
                                    1- 1196     ;   r0x1046
                                    1- 1197     ;   r0x1047
                                    1- 1198     ;   r0x1048
                                    1- 1199     ;   r0x1049
                                    1- 1200     ;   r0x104A
                                    1- 1201     ;   r0x104B
                                    1- 1202     ;; Starting pCode block
                                    1- 1203     .segment "code"; module=main, function=_F_AIN4_Convert
                                    1- 1205     ;local variable name mapping:
     0000                           1- 1208     _F_AIN4_Convert:
                                    1- 1209     ; 2 exit points
                                    1- 1210     	.line	894, "main.c"; 	void F_AIN4_Convert(char count)
                                    1- 1211     	BANKSEL	r0x1046
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1212     	MOVAR	r0x1046
                                    1- 1213     	.line	896, "main.c"; 	R_AIN4_DATA=R_AIN4_DATA_LB=0x00;   
                                    1- 1214     	BANKSEL	_R_AIN4_DATA_LB
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1215     	CLRR	_R_AIN4_DATA_LB
                                    1- 1216     	BANKSEL	_R_AIN4_DATA
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 02rr                      1- 1217     	CLRR	_R_AIN4_DATA
     0006 02rr                      1- 1218     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1219     	.line	898, "main.c"; 	ADMD  = 0x90 | C_ADC_PA1;				// Select AIN6(PB1) pad as ADC input
     0007 2191                      1- 1220     	MOVIA	0x91
     0008 00rr                      1- 1221     	MOVAR	_ADMD
                                    1- 1222     	.line	899, "main.c"; 	delay(200);	
     0009 21C8                      1- 1223     	MOVIA	0xc8
                                    1- 1224     	MCALL	_delay
     000A 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1225     	.line	900, "main.c"; 	for(i=1;i<=count;i++)
     000B 2101                      1- 1226     	MOVIA	0x01
                                    1- 1227     	BANKSEL	r0x1047
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 00rr                      1- 1228     	MOVAR	r0x1047
     000E                           1- 1229     _00761_DS_:
                                    1- 1230     	BANKSEL	r0x1047
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 1231     	MOVR	r0x1047,W
                                    1- 1232     	BANKSEL	r0x1046
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 04rr                      1- 1233     	SUBAR	r0x1046,W
     0012 0803                      1- 1234     	BTRSS	STATUS,0
                                    1- 1235     	MGOTO	_00763_DS_
     0013 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1236     	.line	902, "main.c"; 	ADMDbits.START = 1;					// Start a ADC conversion session
     0014 1Brr                      1- 1237     	BSR	_ADMDbits,6
                                    1- 1238     	.line	903, "main.c"; 	F_wait_eoc();							// Wait for ADC conversion complete
                                    1- 1239     	MCALL	_F_wait_eoc
     0015 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1240     	.line	904, "main.c"; 	R_AIN4_DATA_LB += ( 0x0F & ADR); 
     0016 210F                      1- 1241     	MOVIA	0x0f
     0017 10rr                      1- 1242     	ANDAR	_ADR,W
                                    1- 1243     ;;3	MOVAR	r0x1048
                                    1- 1244     	BANKSEL	_R_AIN4_DATA_LB
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 03rr                      1- 1245     	ADDAR	_R_AIN4_DATA_LB,F
                                    1- 1246     	.line	905, "main.c"; 	R_AIN4_DATA    += ADD; 
     001A 01rr                      1- 1247     	MOVR	_ADD,W
                                    1- 1248     	BANKSEL	r0x1048
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 00rr                      1- 1249     	MOVAR	r0x1048
                                    1- 1250     ;;1	CLRR	r0x1049
                                    1- 1251     ;;103	MOVR	r0x1048,W
                                    1- 1252     ;;101	MOVAR	r0x104A
     001D 2100                      1- 1253     	MOVIA	0x00
                                    1- 1254     	BANKSEL	r0x104B
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 00rr                      1- 1255     	MOVAR	r0x104B
                                    1- 1256     ;;102	MOVR	r0x104A,W
                                    1- 1257     	BANKSEL	r0x1048
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 01rr                      1- 1258     	MOVR	r0x1048,W
                                    1- 1259     	BANKSEL	_R_AIN4_DATA
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 03rr                      1- 1260     	ADDAR	_R_AIN4_DATA,F
                                    1- 1261     	BANKSEL	r0x104B
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 01rr                      1- 1262     	MOVR	r0x104B,W
     0026 0C03                      1- 1263     	BTRSC	STATUS,0
     0027 05rr                      1- 1264     	INCR	r0x104B,W
     0028 0D03                      1- 1265     	BTRSC	STATUS,2
                                    1- 1266     	MGOTO	_00002_DS_
     0029 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1267     	BANKSEL	_R_AIN4_DATA
     002A rrrr                      3-  110 m1      .banksel ram_address
     002B 03rr                      1- 1268     	ADDAR	(_R_AIN4_DATA + 1),F
     002C                           1- 1269     _00002_DS_:
                                    1- 1270     	.line	900, "main.c"; 	for(i=1;i<=count;i++)
                                    1- 1271     	BANKSEL	r0x1047
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 05rr                      1- 1272     	INCR	r0x1047,F
                                    1- 1273     	MGOTO	_00761_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
     002F                           1- 1274     _00763_DS_:
                                    1- 1275     	.line	907, "main.c"; 	}
                                    1- 1276     	RETURN	
     002F 0010                      3-   40 m1      ret
                                    1- 1277     ; exit point of _F_AIN4_Convert
                                    1- 1279     ;***
                                    1- 1280     ;  pBlock Stats: dbName = C
                                    1- 1281     ;***
                                    1- 1282     ;has an exit
                                    1- 1283     ;functions called:
                                    1- 1284     ;   _F_AIN4_Convert
                                    1- 1285     ;   __divuint
                                    1- 1286     ;   _F_AIN4_Convert
                                    1- 1287     ;   __divuint
                                    1- 1288     ;7 compiler assigned registers:
                                    1- 1289     ;   r0x104C
                                    1- 1290     ;   r0x104D
                                    1- 1291     ;   r0x104E
                                    1- 1292     ;   r0x104F
                                    1- 1293     ;   STK02
                                    1- 1294     ;   STK01
                                    1- 1295     ;   STK00
                                    1- 1296     ;; Starting pCode block
                                    1- 1297     .segment "code"; module=main, function=_checkOutA
     0000                           1- 1299     _checkOutA:
                                    1- 1300     ; 2 exit points
                                    1- 1301     	.line	831, "main.c"; 	R_AIN4_DATA = R_AIN4_DATA_LB = 0x00;
                                    1- 1302     	BANKSEL	_R_AIN4_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1303     	CLRR	_R_AIN4_DATA_LB
                                    1- 1304     	BANKSEL	_R_AIN4_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1305     	CLRR	_R_AIN4_DATA
     0004 02rr                      1- 1306     	CLRR	(_R_AIN4_DATA + 1)
                                    1- 1307     	.line	832, "main.c"; 	F_AIN4_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1308     	MOVIA	0x08
                                    1- 1309     	MCALL	_F_AIN4_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1310     	.line	833, "main.c"; 	R_AIN4_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1311     	BANKSEL	_R_AIN4_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1312     	SWAPR	(_R_AIN4_DATA + 1),W
     0009 22F0                      1- 1313     	ANDIA	0xf0
     000A 00rr                      1- 1314     	MOVAR	(_R_AIN4_DATA + 1)
     000B 15rr                      1- 1315     	SWAPR	_R_AIN4_DATA,W
     000C 00rr                      1- 1316     	MOVAR	_R_AIN4_DATA
     000D 220F                      1- 1317     	ANDIA	0x0f
     000E 11rr                      1- 1318     	IORAR	(_R_AIN4_DATA + 1),F
     000F 12rr                      1- 1319     	XORAR	_R_AIN4_DATA,F
                                    1- 1320     	.line	834, "main.c"; 	R_AIN4_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1321     	MOVIA	0xf0
                                    1- 1322     	BANKSEL	_R_AIN4_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1323     	ANDAR	_R_AIN4_DATA_LB,F
                                    1- 1324     	.line	835, "main.c"; 	R_AIN4_DATA += R_AIN4_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1325     	MOVR	_R_AIN4_DATA_LB,W
                                    1- 1326     	BANKSEL	r0x104E
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1327     	MOVAR	r0x104E
                                    1- 1328     ;;1	MOVAR	r0x104C
                                    1- 1329     ;;1	CLRR	r0x104D
                                    1- 1330     ;;100	MOVR	r0x104C,W
     0016 2100                      1- 1331     	MOVIA	0x00
                                    1- 1332     	BANKSEL	r0x104F
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1333     	MOVAR	r0x104F
                                    1- 1334     	BANKSEL	r0x104E
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1335     	MOVR	r0x104E,W
                                    1- 1336     	BANKSEL	_R_AIN4_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1337     	ADDAR	_R_AIN4_DATA,F
                                    1- 1338     	BANKSEL	r0x104F
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1339     	MOVR	r0x104F,W
     001F 0C03                      1- 1340     	BTRSC	STATUS,0
     0020 05rr                      1- 1341     	INCR	r0x104F,W
     0021 0D03                      1- 1342     	BTRSC	STATUS,2
                                    1- 1343     	MGOTO	_00003_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1344     	BANKSEL	_R_AIN4_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1345     	ADDAR	(_R_AIN4_DATA + 1),F
                                    1- 1346     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1347     _00003_DS_:
                                    1- 1348     	.line	836, "main.c"; 	R_AIN4_DATA >>=3;					// R_AIN0_DATA divided 8
     0025 1C03                      1- 1349     	BCR	STATUS,0
                                    1- 1350     	BANKSEL	_R_AIN4_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1351     	RRR	(_R_AIN4_DATA + 1),F
     0028 13rr                      1- 1352     	RRR	_R_AIN4_DATA,F
                                    1- 1353     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1354     	BCR	STATUS,0
     002A 13rr                      1- 1355     	RRR	(_R_AIN4_DATA + 1),F
     002B 13rr                      1- 1356     	RRR	_R_AIN4_DATA,F
                                    1- 1357     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1358     	BCR	STATUS,0
     002D 13rr                      1- 1359     	RRR	(_R_AIN4_DATA + 1),F
     002E 13rr                      1- 1360     	RRR	_R_AIN4_DATA,F
                                    1- 1361     	.line	837, "main.c"; 	tempSum += R_AIN4_DATA;
     002F 01rr                      1- 1362     	MOVR	_R_AIN4_DATA,W
                                    1- 1363     	BANKSEL	_tempSum
     0030 rrrr                      3-  110 m1      .banksel ram_address
     0031 03rr                      1- 1364     	ADDAR	_tempSum,F
                                    1- 1365     	BANKSEL	_R_AIN4_DATA
     0032 rrrr                      3-  110 m1      .banksel ram_address
     0033 01rr                      1- 1366     	MOVR	(_R_AIN4_DATA + 1),W
     0034 0C03                      1- 1367     	BTRSC	STATUS,0
     0035 05rr                      1- 1368     	INCR	(_R_AIN4_DATA + 1),W
     0036 0D03                      1- 1369     	BTRSC	STATUS,2
                                    1- 1370     	MGOTO	_00004_DS_
     0037 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1371     	BANKSEL	_tempSum
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 03rr                      1- 1372     	ADDAR	(_tempSum + 1),F
     003A                           1- 1373     _00004_DS_:
                                    1- 1374     	.line	838, "main.c"; 	if(++count100 >= 10)
                                    1- 1375     	BANKSEL	_count100
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 05rr                      1- 1376     	INCR	_count100,F
                                    1- 1377     ;;unsigned compare: left < lit (0xA=10), size=1
     003C 210A                      1- 1378     	MOVIA	0x0a
     003D 04rr                      1- 1379     	SUBAR	_count100,W
     003E 0803                      1- 1380     	BTRSS	STATUS,0
                                    1- 1381     	MGOTO	_00695_DS_
     003F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1382     	.line	840, "main.c"; 	count100 = 0;
     0040 02rr                      1- 1383     	CLRR	_count100
                                    1- 1384     	.line	841, "main.c"; 	tempResult = tempSum/10;
     0041 210A                      1- 1385     	MOVIA	0x0a
     0042 00rr                      1- 1386     	MOVAR	STK02
     0043 2100                      1- 1387     	MOVIA	0x00
     0044 00rr                      1- 1388     	MOVAR	STK01
                                    1- 1389     	BANKSEL	_tempSum
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 01rr                      1- 1390     	MOVR	_tempSum,W
     0047 00rr                      1- 1391     	MOVAR	STK00
     0048 01rr                      1- 1392     	MOVR	(_tempSum + 1),W
                                    1- 1393     	MCALL	__divuint
     0049 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1394     	BANKSEL	_tempResult
     004A rrrr                      3-  110 m1      .banksel ram_address
     004B 00rr                      1- 1395     	MOVAR	(_tempResult + 1)
     004C 01rr                      1- 1396     	MOVR	STK00,W
     004D 00rr                      1- 1397     	MOVAR	_tempResult
                                    1- 1398     	.line	842, "main.c"; 	tempSum = 0;
                                    1- 1399     	BANKSEL	_tempSum
     004E rrrr                      3-  110 m1      .banksel ram_address
     004F 02rr                      1- 1400     	CLRR	_tempSum
     0050 02rr                      1- 1401     	CLRR	(_tempSum + 1)
                                    1- 1402     ;;unsigned compare: left < lit (0x6=6), size=1
     0051                           1- 1403     _00695_DS_:
                                    1- 1404     	.line	845, "main.c"; 	if(workStep < 6 && tempResult > 200)
     0051 2106                      1- 1405     	MOVIA	0x06
                                    1- 1406     	BANKSEL	_workStep
     0052 rrrr                      3-  110 m1      .banksel ram_address
     0053 04rr                      1- 1407     	SUBAR	_workStep,W
     0054 0C03                      1- 1408     	BTRSC	STATUS,0
                                    1- 1409     	MGOTO	_00711_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1410     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1411     ;;unsigned compare: left >= lit (0xC9=201), size=2
     0056 2100                      1- 1412     	MOVIA	0x00
                                    1- 1413     	BANKSEL	_tempResult
     0057 rrrr                      3-  110 m1      .banksel ram_address
     0058 04rr                      1- 1414     	SUBAR	(_tempResult + 1),W
     0059 0903                      1- 1415     	BTRSS	STATUS,2
                                    1- 1416     	MGOTO	_00750_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B 21C9                      1- 1417     	MOVIA	0xc9
     005C 04rr                      1- 1418     	SUBAR	_tempResult,W
     005D                           1- 1419     _00750_DS_:
     005D 0803                      1- 1420     	BTRSS	STATUS,0
                                    1- 1421     	MGOTO	_00711_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1422     	.line	847, "main.c"; 	if(++overCount > 5)
                                    1- 1423     	BANKSEL	_overCount
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 05rr                      1- 1424     	INCR	_overCount,F
                                    1- 1425     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1426     ;;unsigned compare: left >= lit (0x6=6), size=1
     0061 2106                      1- 1427     	MOVIA	0x06
     0062 04rr                      1- 1428     	SUBAR	_overCount,W
     0063 0803                      1- 1429     	BTRSS	STATUS,0
                                    1- 1430     	MGOTO	_00712_DS_
     0064 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1431     	.line	849, "main.c"; 	overCount = 5;
     0065 2105                      1- 1432     	MOVIA	0x05
     0066 00rr                      1- 1433     	MOVAR	_overCount
                                    1- 1434     	MGOTO	_00712_DS_
     0067 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1435     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1436     ;;unsigned compare: left >= lit (0x191=401), size=2
     0068                           1- 1437     _00711_DS_:
                                    1- 1438     	.line	852, "main.c"; 	else if(tempResult > 400)
     0068 2101                      1- 1439     	MOVIA	0x01
                                    1- 1440     	BANKSEL	_tempResult
     0069 rrrr                      3-  110 m1      .banksel ram_address
     006A 04rr                      1- 1441     	SUBAR	(_tempResult + 1),W
     006B 0903                      1- 1442     	BTRSS	STATUS,2
                                    1- 1443     	MGOTO	_00752_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
     006D 2191                      1- 1444     	MOVIA	0x91
     006E 04rr                      1- 1445     	SUBAR	_tempResult,W
     006F                           1- 1446     _00752_DS_:
     006F 0803                      1- 1447     	BTRSS	STATUS,0
                                    1- 1448     	MGOTO	_00708_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1449     	.line	854, "main.c"; 	if(++overCount > 5)
                                    1- 1450     	BANKSEL	_overCount
     0071 rrrr                      3-  110 m1      .banksel ram_address
     0072 05rr                      1- 1451     	INCR	_overCount,F
                                    1- 1452     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1453     ;;unsigned compare: left >= lit (0x6=6), size=1
     0073 2106                      1- 1454     	MOVIA	0x06
     0074 04rr                      1- 1455     	SUBAR	_overCount,W
     0075 0803                      1- 1456     	BTRSS	STATUS,0
                                    1- 1457     	MGOTO	_00712_DS_
     0076 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1458     	.line	856, "main.c"; 	overCount = 5;
     0077 2105                      1- 1459     	MOVIA	0x05
     0078 00rr                      1- 1460     	MOVAR	_overCount
                                    1- 1461     	MGOTO	_00712_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1462     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1463     ;;unsigned compare: left >= lit (0x4E=78), size=2
     007A                           1- 1464     _00708_DS_:
                                    1- 1465     	.line	864, "main.c"; 	else if(tempResult > 77)
     007A 2100                      1- 1466     	MOVIA	0x00
                                    1- 1467     	BANKSEL	_tempResult
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 04rr                      1- 1468     	SUBAR	(_tempResult + 1),W
     007D 0903                      1- 1469     	BTRSS	STATUS,2
                                    1- 1470     	MGOTO	_00754_DS_
     007E 3rrr                      3-   63 m1      LGOTO rom_address
     007F 214E                      1- 1471     	MOVIA	0x4e
     0080 04rr                      1- 1472     	SUBAR	_tempResult,W
     0081                           1- 1473     _00754_DS_:
     0081 0803                      1- 1474     	BTRSS	STATUS,0
                                    1- 1475     	MGOTO	_00705_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1476     	.line	866, "main.c"; 	if(overCount > 0)
                                    1- 1477     	BANKSEL	_overCount
     0083 rrrr                      3-  110 m1      .banksel ram_address
     0084 01rr                      1- 1478     	MOVR	_overCount,W
     0085 0D03                      1- 1479     	BTRSC	STATUS,2
                                    1- 1480     	MGOTO	_00712_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1481     	.line	868, "main.c"; 	overCount--;
     0087 06rr                      1- 1482     	DECR	_overCount,F
                                    1- 1483     	MGOTO	_00712_DS_
     0088 3rrr                      3-   63 m1      LGOTO rom_address
     0089                           1- 1484     _00705_DS_:
                                    1- 1485     	.line	876, "main.c"; 	if(overCount > 0)
                                    1- 1486     	BANKSEL	_overCount
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 01rr                      1- 1487     	MOVR	_overCount,W
     008B 0903                      1- 1488     	BTRSS	STATUS,2
                                    1- 1489     	.line	878, "main.c"; 	overCount--;
     008C 06rr                      1- 1490     	DECR	_overCount,F
     008D                           1- 1491     _00712_DS_:
                                    1- 1492     	.line	882, "main.c"; 	if(workStep > 0)
                                    1- 1493     	BANKSEL	_workStep
     008D rrrr                      3-  110 m1      .banksel ram_address
     008E 01rr                      1- 1494     	MOVR	_workStep,W
     008F 0D03                      1- 1495     	BTRSC	STATUS,2
                                    1- 1496     	MGOTO	_00716_DS_
     0090 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1497     	.line	883, "main.c"; 	ledStep = workStep;
     0091 01rr                      1- 1498     	MOVR	_workStep,W
                                    1- 1499     	BANKSEL	_ledStep
     0092 rrrr                      3-  110 m1      .banksel ram_address
     0093 00rr                      1- 1500     	MOVAR	_ledStep
     0094                           1- 1501     _00716_DS_:
                                    1- 1502     	.line	887, "main.c"; 	}
                                    1- 1503     	RETURN	
     0094 0010                      3-   40 m1      ret
                                    1- 1504     ; exit point of _checkOutA
                                    1- 1506     ;***
                                    1- 1507     ;  pBlock Stats: dbName = C
                                    1- 1508     ;***
                                    1- 1509     ;has an exit
                                    1- 1510     ;functions called:
                                    1- 1511     ;   _F_AIN2_Convert
                                    1- 1512     ;   _F_AIN2_Convert
                                    1- 1513     ;4 compiler assigned registers:
                                    1- 1514     ;   r0x1050
                                    1- 1515     ;   r0x1051
                                    1- 1516     ;   r0x1052
                                    1- 1517     ;   r0x1053
                                    1- 1518     ;; Starting pCode block
                                    1- 1519     .segment "code"; module=main, function=_checkBatAD
     0000                           1- 1521     _checkBatAD:
                                    1- 1522     ; 2 exit points
                                    1- 1523     	.line	775, "main.c"; 	R_AIN2_DATA = R_AIN2_DATA_LB = 0x00;
                                    1- 1524     	BANKSEL	_R_AIN2_DATA_LB
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 1525     	CLRR	_R_AIN2_DATA_LB
                                    1- 1526     	BANKSEL	_R_AIN2_DATA
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1527     	CLRR	_R_AIN2_DATA
     0004 02rr                      1- 1528     	CLRR	(_R_AIN2_DATA + 1)
                                    1- 1529     	.line	776, "main.c"; 	F_AIN2_Convert(8);					// execute AIN0 ADC converting 8 times
     0005 2108                      1- 1530     	MOVIA	0x08
                                    1- 1531     	MCALL	_F_AIN2_Convert
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1532     	.line	777, "main.c"; 	R_AIN2_DATA <<= 4;					// R_AIN0_DATA shift left 4 bit
                                    1- 1533     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 15rr                      1- 1534     	SWAPR	(_R_AIN2_DATA + 1),W
     0009 22F0                      1- 1535     	ANDIA	0xf0
     000A 00rr                      1- 1536     	MOVAR	(_R_AIN2_DATA + 1)
     000B 15rr                      1- 1537     	SWAPR	_R_AIN2_DATA,W
     000C 00rr                      1- 1538     	MOVAR	_R_AIN2_DATA
     000D 220F                      1- 1539     	ANDIA	0x0f
     000E 11rr                      1- 1540     	IORAR	(_R_AIN2_DATA + 1),F
     000F 12rr                      1- 1541     	XORAR	_R_AIN2_DATA,F
                                    1- 1542     	.line	778, "main.c"; 	R_AIN2_DATA_LB &= 0xF0;				// Only get Bit7~4
     0010 21F0                      1- 1543     	MOVIA	0xf0
                                    1- 1544     	BANKSEL	_R_AIN2_DATA_LB
     0011 rrrr                      3-  110 m1      .banksel ram_address
     0012 10rr                      1- 1545     	ANDAR	_R_AIN2_DATA_LB,F
                                    1- 1546     	.line	779, "main.c"; 	R_AIN2_DATA += R_AIN2_DATA_LB;		// R_AIN0_DATA + R_AIN0_DATA_LB
     0013 01rr                      1- 1547     	MOVR	_R_AIN2_DATA_LB,W
                                    1- 1548     	BANKSEL	r0x1052
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 00rr                      1- 1549     	MOVAR	r0x1052
                                    1- 1550     ;;1	MOVAR	r0x1050
                                    1- 1551     ;;1	CLRR	r0x1051
                                    1- 1552     ;;99	MOVR	r0x1050,W
     0016 2100                      1- 1553     	MOVIA	0x00
                                    1- 1554     	BANKSEL	r0x1053
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 00rr                      1- 1555     	MOVAR	r0x1053
                                    1- 1556     	BANKSEL	r0x1052
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 01rr                      1- 1557     	MOVR	r0x1052,W
                                    1- 1558     	BANKSEL	_R_AIN2_DATA
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 03rr                      1- 1559     	ADDAR	_R_AIN2_DATA,F
                                    1- 1560     	BANKSEL	r0x1053
     001D rrrr                      3-  110 m1      .banksel ram_address
     001E 01rr                      1- 1561     	MOVR	r0x1053,W
     001F 0C03                      1- 1562     	BTRSC	STATUS,0
     0020 05rr                      1- 1563     	INCR	r0x1053,W
     0021 0D03                      1- 1564     	BTRSC	STATUS,2
                                    1- 1565     	MGOTO	_00005_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1566     	BANKSEL	_R_AIN2_DATA
     0023 rrrr                      3-  110 m1      .banksel ram_address
     0024 03rr                      1- 1567     	ADDAR	(_R_AIN2_DATA + 1),F
                                    1- 1568     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0025                           1- 1569     _00005_DS_:
                                    1- 1570     	.line	780, "main.c"; 	R_AIN2_DATA >>=3;					// R_AIN0_DATA divided 
     0025 1C03                      1- 1571     	BCR	STATUS,0
                                    1- 1572     	BANKSEL	_R_AIN2_DATA
     0026 rrrr                      3-  110 m1      .banksel ram_address
     0027 13rr                      1- 1573     	RRR	(_R_AIN2_DATA + 1),F
     0028 13rr                      1- 1574     	RRR	_R_AIN2_DATA,F
                                    1- 1575     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     0029 1C03                      1- 1576     	BCR	STATUS,0
     002A 13rr                      1- 1577     	RRR	(_R_AIN2_DATA + 1),F
     002B 13rr                      1- 1578     	RRR	_R_AIN2_DATA,F
                                    1- 1579     ;;shiftRight_Left2ResultLit:5673: shCount=1, size=2, sign=0, same=1, offr=0
     002C 1C03                      1- 1580     	BCR	STATUS,0
     002D 13rr                      1- 1581     	RRR	(_R_AIN2_DATA + 1),F
     002E 13rr                      1- 1582     	RRR	_R_AIN2_DATA,F
                                    1- 1583     	.line	781, "main.c"; 	if(debug)
                                    1- 1584     	BANKSEL	_debug
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 1585     	MOVR	_debug,W
     0031 0D03                      1- 1586     	BTRSC	STATUS,2
                                    1- 1587     	MGOTO	_00607_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1588     	.line	782, "main.c"; 	R_AIN2_DATA = BATTLE;
     0033 210E                      1- 1589     	MOVIA	0x0e
                                    1- 1590     	BANKSEL	_R_AIN2_DATA
     0034 rrrr                      3-  110 m1      .banksel ram_address
     0035 00rr                      1- 1591     	MOVAR	_R_AIN2_DATA
     0036 2106                      1- 1592     	MOVIA	0x06
     0037 00rr                      1- 1593     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1594     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1595     ;;unsigned compare: left >= lit (0x60A=1546), size=2
     0038                           1- 1596     _00607_DS_:
                                    1- 1597     	.line	784, "main.c"; 	if(R_AIN2_DATA > 1545)
     0038 2106                      1- 1598     	MOVIA	0x06
                                    1- 1599     	BANKSEL	_R_AIN2_DATA
     0039 rrrr                      3-  110 m1      .banksel ram_address
     003A 04rr                      1- 1600     	SUBAR	(_R_AIN2_DATA + 1),W
     003B 0903                      1- 1601     	BTRSS	STATUS,2
                                    1- 1602     	MGOTO	_00681_DS_
     003C 3rrr                      3-   63 m1      LGOTO rom_address
     003D 210A                      1- 1603     	MOVIA	0x0a
     003E 04rr                      1- 1604     	SUBAR	_R_AIN2_DATA,W
     003F                           1- 1605     _00681_DS_:
     003F 0803                      1- 1606     	BTRSS	STATUS,0
                                    1- 1607     	MGOTO	_00632_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1608     	.line	787, "main.c"; 	lowCount = 0;
                                    1- 1609     	BANKSEL	_lowCount
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 1610     	CLRR	_lowCount
                                    1- 1611     	.line	788, "main.c"; 	pwStep = 8;
     0043 2108                      1- 1612     	MOVIA	0x08
                                    1- 1613     	BANKSEL	_pwStep
     0044 rrrr                      3-  110 m1      .banksel ram_address
     0045 00rr                      1- 1614     	MOVAR	_pwStep
                                    1- 1615     	MGOTO	_00633_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1616     ;;unsigned compare: left < lit (0x47E=1150), size=2
     0047                           1- 1617     _00632_DS_:
                                    1- 1618     	.line	790, "main.c"; 	else if(R_AIN2_DATA < 1150)
     0047 2104                      1- 1619     	MOVIA	0x04
                                    1- 1620     	BANKSEL	_R_AIN2_DATA
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 04rr                      1- 1621     	SUBAR	(_R_AIN2_DATA + 1),W
     004A 0903                      1- 1622     	BTRSS	STATUS,2
                                    1- 1623     	MGOTO	_00682_DS_
     004B 3rrr                      3-   63 m1      LGOTO rom_address
     004C 217E                      1- 1624     	MOVIA	0x7e
     004D 04rr                      1- 1625     	SUBAR	_R_AIN2_DATA,W
     004E                           1- 1626     _00682_DS_:
     004E 0C03                      1- 1627     	BTRSC	STATUS,0
                                    1- 1628     	MGOTO	_00629_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1629     	.line	792, "main.c"; 	if(++lowCount < 10)
                                    1- 1630     	BANKSEL	_lowCount
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 05rr                      1- 1631     	INCR	_lowCount,F
                                    1- 1632     ;;unsigned compare: left < lit (0xA=10), size=1
     0052 210A                      1- 1633     	MOVIA	0x0a
     0053 04rr                      1- 1634     	SUBAR	_lowCount,W
     0054 0803                      1- 1635     	BTRSS	STATUS,0
                                    1- 1636     	.line	793, "main.c"; 	return;
                                    1- 1637     	MGOTO	_00640_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1638     	.line	794, "main.c"; 	lowCount = 10;
     0056 210A                      1- 1639     	MOVIA	0x0a
     0057 00rr                      1- 1640     	MOVAR	_lowCount
                                    1- 1641     	.line	795, "main.c"; 	pwStep = 0;
                                    1- 1642     	BANKSEL	_pwStep
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 02rr                      1- 1643     	CLRR	_pwStep
                                    1- 1644     	.line	796, "main.c"; 	R_AIN2_DATA = 1150;
     005A 217E                      1- 1645     	MOVIA	0x7e
                                    1- 1646     	BANKSEL	_R_AIN2_DATA
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 00rr                      1- 1647     	MOVAR	_R_AIN2_DATA
     005D 2104                      1- 1648     	MOVIA	0x04
     005E 00rr                      1- 1649     	MOVAR	(_R_AIN2_DATA + 1)
                                    1- 1650     	MGOTO	_00633_DS_
     005F 3rrr                      3-   63 m1      LGOTO rom_address
     0060                           1- 1651     _00629_DS_:
                                    1- 1652     	.line	801, "main.c"; 	lowCount = 0;
                                    1- 1653     	BANKSEL	_lowCount
     0060 rrrr                      3-  110 m1      .banksel ram_address
     0061 02rr                      1- 1654     	CLRR	_lowCount
                                    1- 1655     	.line	802, "main.c"; 	firstTime = 0;
                                    1- 1656     	BANKSEL	_firstTime
     0062 rrrr                      3-  110 m1      .banksel ram_address
     0063 02rr                      1- 1657     	CLRR	_firstTime
                                    1- 1658     ;;unsigned compare: left < lit (0x4F6=1270), size=2
                                    1- 1659     	.line	803, "main.c"; 	if(R_AIN2_DATA < 1270)
     0064 2104                      1- 1660     	MOVIA	0x04
                                    1- 1661     	BANKSEL	_R_AIN2_DATA
     0065 rrrr                      3-  110 m1      .banksel ram_address
     0066 04rr                      1- 1662     	SUBAR	(_R_AIN2_DATA + 1),W
     0067 0903                      1- 1663     	BTRSS	STATUS,2
                                    1- 1664     	MGOTO	_00684_DS_
     0068 3rrr                      3-   63 m1      LGOTO rom_address
     0069 21F6                      1- 1665     	MOVIA	0xf6
     006A 04rr                      1- 1666     	SUBAR	_R_AIN2_DATA,W
     006B                           1- 1667     _00684_DS_:
     006B 0C03                      1- 1668     	BTRSC	STATUS,0
                                    1- 1669     	MGOTO	_00626_DS_
     006C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1670     	.line	804, "main.c"; 	pwStep = 1;
     006D 2101                      1- 1671     	MOVIA	0x01
                                    1- 1672     	BANKSEL	_pwStep
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 00rr                      1- 1673     	MOVAR	_pwStep
                                    1- 1674     	MGOTO	_00633_DS_
     0070 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1675     ;;unsigned compare: left < lit (0x53C=1340), size=2
     0071                           1- 1676     _00626_DS_:
                                    1- 1677     	.line	805, "main.c"; 	else if(R_AIN2_DATA < 1340)
     0071 2105                      1- 1678     	MOVIA	0x05
                                    1- 1679     	BANKSEL	_R_AIN2_DATA
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 04rr                      1- 1680     	SUBAR	(_R_AIN2_DATA + 1),W
     0074 0903                      1- 1681     	BTRSS	STATUS,2
                                    1- 1682     	MGOTO	_00685_DS_
     0075 3rrr                      3-   63 m1      LGOTO rom_address
     0076 213C                      1- 1683     	MOVIA	0x3c
     0077 04rr                      1- 1684     	SUBAR	_R_AIN2_DATA,W
     0078                           1- 1685     _00685_DS_:
     0078 0C03                      1- 1686     	BTRSC	STATUS,0
                                    1- 1687     	MGOTO	_00623_DS_
     0079 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1688     	.line	806, "main.c"; 	pwStep = 2;
     007A 2102                      1- 1689     	MOVIA	0x02
                                    1- 1690     	BANKSEL	_pwStep
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 00rr                      1- 1691     	MOVAR	_pwStep
                                    1- 1692     	MGOTO	_00633_DS_
     007D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1693     ;;unsigned compare: left < lit (0x56E=1390), size=2
     007E                           1- 1694     _00623_DS_:
                                    1- 1695     	.line	807, "main.c"; 	else if(R_AIN2_DATA < 1390)
     007E 2105                      1- 1696     	MOVIA	0x05
                                    1- 1697     	BANKSEL	_R_AIN2_DATA
     007F rrrr                      3-  110 m1      .banksel ram_address
     0080 04rr                      1- 1698     	SUBAR	(_R_AIN2_DATA + 1),W
     0081 0903                      1- 1699     	BTRSS	STATUS,2
                                    1- 1700     	MGOTO	_00686_DS_
     0082 3rrr                      3-   63 m1      LGOTO rom_address
     0083 216E                      1- 1701     	MOVIA	0x6e
     0084 04rr                      1- 1702     	SUBAR	_R_AIN2_DATA,W
     0085                           1- 1703     _00686_DS_:
     0085 0C03                      1- 1704     	BTRSC	STATUS,0
                                    1- 1705     	MGOTO	_00620_DS_
     0086 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1706     	.line	808, "main.c"; 	pwStep = 3;
     0087 2103                      1- 1707     	MOVIA	0x03
                                    1- 1708     	BANKSEL	_pwStep
     0088 rrrr                      3-  110 m1      .banksel ram_address
     0089 00rr                      1- 1709     	MOVAR	_pwStep
                                    1- 1710     	MGOTO	_00633_DS_
     008A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1711     ;;unsigned compare: left < lit (0x5AA=1450), size=2
     008B                           1- 1712     _00620_DS_:
                                    1- 1713     	.line	809, "main.c"; 	else if(R_AIN2_DATA < 1450)
     008B 2105                      1- 1714     	MOVIA	0x05
                                    1- 1715     	BANKSEL	_R_AIN2_DATA
     008C rrrr                      3-  110 m1      .banksel ram_address
     008D 04rr                      1- 1716     	SUBAR	(_R_AIN2_DATA + 1),W
     008E 0903                      1- 1717     	BTRSS	STATUS,2
                                    1- 1718     	MGOTO	_00687_DS_
     008F 3rrr                      3-   63 m1      LGOTO rom_address
     0090 21AA                      1- 1719     	MOVIA	0xaa
     0091 04rr                      1- 1720     	SUBAR	_R_AIN2_DATA,W
     0092                           1- 1721     _00687_DS_:
     0092 0C03                      1- 1722     	BTRSC	STATUS,0
                                    1- 1723     	MGOTO	_00617_DS_
     0093 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1724     	.line	810, "main.c"; 	pwStep = 4;
     0094 2104                      1- 1725     	MOVIA	0x04
                                    1- 1726     	BANKSEL	_pwStep
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 00rr                      1- 1727     	MOVAR	_pwStep
                                    1- 1728     	MGOTO	_00633_DS_
     0097 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1729     ;;unsigned compare: left < lit (0x5E6=1510), size=2
     0098                           1- 1730     _00617_DS_:
                                    1- 1731     	.line	811, "main.c"; 	else if(R_AIN2_DATA < 1510)
     0098 2105                      1- 1732     	MOVIA	0x05
                                    1- 1733     	BANKSEL	_R_AIN2_DATA
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 04rr                      1- 1734     	SUBAR	(_R_AIN2_DATA + 1),W
     009B 0903                      1- 1735     	BTRSS	STATUS,2
                                    1- 1736     	MGOTO	_00688_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
     009D 21E6                      1- 1737     	MOVIA	0xe6
     009E 04rr                      1- 1738     	SUBAR	_R_AIN2_DATA,W
     009F                           1- 1739     _00688_DS_:
     009F 0C03                      1- 1740     	BTRSC	STATUS,0
                                    1- 1741     	MGOTO	_00614_DS_
     00A0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1742     	.line	812, "main.c"; 	pwStep = 5;
     00A1 2105                      1- 1743     	MOVIA	0x05
                                    1- 1744     	BANKSEL	_pwStep
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 00rr                      1- 1745     	MOVAR	_pwStep
                                    1- 1746     	MGOTO	_00633_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1747     ;;unsigned compare: left < lit (0x5FA=1530), size=2
     00A5                           1- 1748     _00614_DS_:
                                    1- 1749     	.line	813, "main.c"; 	else if(R_AIN2_DATA < 1530)
     00A5 2105                      1- 1750     	MOVIA	0x05
                                    1- 1751     	BANKSEL	_R_AIN2_DATA
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 04rr                      1- 1752     	SUBAR	(_R_AIN2_DATA + 1),W
     00A8 0903                      1- 1753     	BTRSS	STATUS,2
                                    1- 1754     	MGOTO	_00689_DS_
     00A9 3rrr                      3-   63 m1      LGOTO rom_address
     00AA 21FA                      1- 1755     	MOVIA	0xfa
     00AB 04rr                      1- 1756     	SUBAR	_R_AIN2_DATA,W
     00AC                           1- 1757     _00689_DS_:
     00AC 0C03                      1- 1758     	BTRSC	STATUS,0
                                    1- 1759     	MGOTO	_00611_DS_
     00AD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1760     	.line	814, "main.c"; 	pwStep = 6;
     00AE 2106                      1- 1761     	MOVIA	0x06
                                    1- 1762     	BANKSEL	_pwStep
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 00rr                      1- 1763     	MOVAR	_pwStep
                                    1- 1764     	MGOTO	_00633_DS_
     00B1 3rrr                      3-   63 m1      LGOTO rom_address
     00B2                           1- 1765     _00611_DS_:
                                    1- 1766     	.line	816, "main.c"; 	pwStep = 7;
     00B2 2107                      1- 1767     	MOVIA	0x07
                                    1- 1768     	BANKSEL	_pwStep
     00B3 rrrr                      3-  110 m1      .banksel ram_address
     00B4 00rr                      1- 1769     	MOVAR	_pwStep
     00B5                           1- 1770     _00633_DS_:
                                    1- 1771     	.line	819, "main.c"; 	if(prePwStep == 0 || prePwStep < pwStep)
                                    1- 1772     	BANKSEL	_prePwStep
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 01rr                      1- 1773     	MOVR	_prePwStep,W
     00B7 0D03                      1- 1774     	BTRSC	STATUS,2
                                    1- 1775     	MGOTO	_00634_DS_
     00B8 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1776     	BANKSEL	_pwStep
     00B9 rrrr                      3-  110 m1      .banksel ram_address
     00BA 01rr                      1- 1777     	MOVR	_pwStep,W
                                    1- 1778     	BANKSEL	_prePwStep
     00BB rrrr                      3-  110 m1      .banksel ram_address
     00BC 04rr                      1- 1779     	SUBAR	_prePwStep,W
     00BD 0C03                      1- 1780     	BTRSC	STATUS,0
                                    1- 1781     	MGOTO	_00635_DS_
     00BE 3rrr                      3-   63 m1      LGOTO rom_address
     00BF                           1- 1782     _00634_DS_:
                                    1- 1783     	.line	820, "main.c"; 	prePwStep = pwStep;
                                    1- 1784     	BANKSEL	_pwStep
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 01rr                      1- 1785     	MOVR	_pwStep,W
                                    1- 1786     	BANKSEL	_prePwStep
     00C1 rrrr                      3-  110 m1      .banksel ram_address
     00C2 00rr                      1- 1787     	MOVAR	_prePwStep
     00C3                           1- 1788     _00635_DS_:
                                    1- 1789     	.line	822, "main.c"; 	if(ledLightTime > 0 && prePwStep > 0)
                                    1- 1790     	BANKSEL	_ledLightTime
     00C3 rrrr                      3-  110 m1      .banksel ram_address
     00C4 01rr                      1- 1791     	MOVR	_ledLightTime,W
     00C5 0D03                      1- 1792     	BTRSC	STATUS,2
                                    1- 1793     	MGOTO	_00640_DS_
     00C6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1794     	BANKSEL	_prePwStep
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 01rr                      1- 1795     	MOVR	_prePwStep,W
     00C9 0D03                      1- 1796     	BTRSC	STATUS,2
                                    1- 1797     	MGOTO	_00640_DS_
     00CA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1798     	.line	823, "main.c"; 	pwStep = prePwStep;
     00CB 01rr                      1- 1799     	MOVR	_prePwStep,W
                                    1- 1800     	BANKSEL	_pwStep
     00CC rrrr                      3-  110 m1      .banksel ram_address
     00CD 00rr                      1- 1801     	MOVAR	_pwStep
     00CE                           1- 1802     _00640_DS_:
                                    1- 1803     	.line	825, "main.c"; 	}
                                    1- 1804     	RETURN	
     00CE 0010                      3-   40 m1      ret
                                    1- 1805     ; exit point of _checkBatAD
                                    1- 1807     ;***
                                    1- 1808     ;  pBlock Stats: dbName = C
                                    1- 1809     ;***
                                    1- 1810     ;has an exit
                                    1- 1811     ;functions called:
                                    1- 1812     ;   _delay
                                    1- 1813     ;   _delay
                                    1- 1814     ;; Starting pCode block
                                    1- 1815     .segment "code"; module=main, function=_initAD
     0000                           1- 1817     _initAD:
                                    1- 1818     ; 2 exit points
                                    1- 1819     	.line	751, "main.c"; 	ADMD  = C_ADC_En | C_ADC_CH_Dis | C_ADC_PA4 ;	// Enable ADC power, Disable global ADC input channel, Select PA0 pad as ADC input (SFR "ADMD")
     0000 2184                      1- 1820     	MOVIA	0x84
     0001 00rr                      1- 1821     	MOVAR	_ADMD
                                    1- 1822     	.line	756, "main.c"; 	ADVREFH = C_Vrefh_2V;					// ADC reference high voltage is supplied by internal 2V  (Note: ADC clock freq. must be equal or less than 250KHz)
     0002 02rr                      1- 1823     	CLRR	_ADVREFH
                                    1- 1824     	.line	761, "main.c"; 	ADR	  = C_Ckl_Div8;						// ADC clock=Fcpu/8, Clear ADIF, disable ADC interrupt	
     0003 2110                      1- 1825     	MOVIA	0x10
     0004 00rr                      1- 1826     	MOVAR	_ADR
                                    1- 1827     	.line	763, "main.c"; 	ADCR  = C_Sample_1clk | C_12BIT;
     0005 2103                      1- 1828     	MOVIA	0x03
     0006 00rr                      1- 1829     	MOVAR	_ADCR
                                    1- 1830     	.line	766, "main.c"; 	ADMDbits.GCHS = 1;						// Enable global ADC channel	(SFR "ADMD")
     0007 1Arr                      1- 1831     	BSR	_ADMDbits,4
                                    1- 1832     	.line	767, "main.c"; 	delay(100);								// Delay 0.56ms(Instruction clock=4MHz/2T) for waiting ADC stable 
     0008 2164                      1- 1833     	MOVIA	0x64
                                    1- 1834     	MCALL	_delay
     0009 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1835     	.line	770, "main.c"; 	}
                                    1- 1836     	RETURN	
     000A 0010                      3-   40 m1      ret
                                    1- 1837     ; exit point of _initAD
                                    1- 1839     ;***
                                    1- 1840     ;  pBlock Stats: dbName = C
                                    1- 1841     ;***
                                    1- 1842     ;has an exit
                                    1- 1843     ;2 compiler assigned registers:
                                    1- 1844     ;   r0x103E
                                    1- 1845     ;   r0x103F
                                    1- 1846     ;; Starting pCode block
                                    1- 1847     .segment "code"; module=main, function=_delay
                                    1- 1849     ;local variable name mapping:
     0000                           1- 1852     _delay:
                                    1- 1853     ; 2 exit points
                                    1- 1854     	.line	741, "main.c"; 	void delay(u8t time)
                                    1- 1855     	BANKSEL	r0x103E
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 1856     	MOVAR	r0x103E
                                    1- 1857     	.line	743, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1858     	BANKSEL	r0x103F
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 02rr                      1- 1859     	CLRR	r0x103F
     0004                           1- 1860     _00595_DS_:
                                    1- 1861     	BANKSEL	r0x103E
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 1862     	MOVR	r0x103E,W
                                    1- 1863     	BANKSEL	r0x103F
     0006 rrrr                      3-  110 m1      .banksel ram_address
     0007 04rr                      1- 1864     	SUBAR	r0x103F,W
     0008 0C03                      1- 1865     	BTRSC	STATUS,0
                                    1- 1866     	MGOTO	_00597_DS_
     0009 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1867     	.line	744, "main.c"; 	NOP();
     000A 0000                      1- 1868     	nop
                                    1- 1869     	.line	743, "main.c"; 	for(u8t i=0;i<time;i++)
                                    1- 1870     	BANKSEL	r0x103F
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 05rr                      1- 1871     	INCR	r0x103F,F
                                    1- 1872     	MGOTO	_00595_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 1873     _00597_DS_:
                                    1- 1874     	.line	745, "main.c"; 	}
                                    1- 1875     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 1876     ; exit point of _delay
                                    1- 1878     ;***
                                    1- 1879     ;  pBlock Stats: dbName = C
                                    1- 1880     ;***
                                    1- 1881     ;has an exit
                                    1- 1882     ;functions called:
                                    1- 1883     ;   _pwmStop
                                    1- 1884     ;   _pwm1Stop
                                    1- 1885     ;   _pwm1Init
                                    1- 1886     ;   _pwm1Stop
                                    1- 1887     ;   _pwmStop
                                    1- 1888     ;   _pwm1Stop
                                    1- 1889     ;   _pwm1Init
                                    1- 1890     ;   _pwm1Stop
                                    1- 1891     ;5 compiler assigned registers:
                                    1- 1892     ;   r0x1055
                                    1- 1893     ;   r0x1056
                                    1- 1894     ;   r0x1057
                                    1- 1895     ;   r0x1058
                                    1- 1896     ;   r0x1059
                                    1- 1897     ;; Starting pCode block
                                    1- 1898     .segment "code"; module=main, function=_chrgCtr
     0000                           1- 1900     _chrgCtr:
                                    1- 1901     ; 2 exit points
                                    1- 1902     	.line	605, "main.c"; 	if(PORTA & 0x08)
     0000 09rr                      1- 1903     	BTRSS	_PORTA,3
                                    1- 1904     	MGOTO	_00499_DS_
     0001 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1905     	.line	608, "main.c"; 	if(chrgFlag == 0)
                                    1- 1906     	BANKSEL	_Status
     0002 rrrr                      3-  110 m1      .banksel ram_address
     0003 0Drr                      1- 1907     	BTRSC	_Status,3
                                    1- 1908     	MGOTO	_00451_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1909     	.line	610, "main.c"; 	chrgFlag = 1;
     0005 19rr                      1- 1910     	BSR	_Status,3
                                    1- 1911     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1912     ;;unsigned compare: left >= lit (0x605=1541), size=2
                                    1- 1913     	.line	611, "main.c"; 	if(R_AIN2_DATA > 1540)
     0006 2106                      1- 1914     	MOVIA	0x06
                                    1- 1915     	BANKSEL	_R_AIN2_DATA
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 04rr                      1- 1916     	SUBAR	(_R_AIN2_DATA + 1),W
     0009 0903                      1- 1917     	BTRSS	STATUS,2
                                    1- 1918     	MGOTO	_00575_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
     000B 2105                      1- 1919     	MOVIA	0x05
     000C 04rr                      1- 1920     	SUBAR	_R_AIN2_DATA,W
     000D                           1- 1921     _00575_DS_:
     000D 0803                      1- 1922     	BTRSS	STATUS,0
                                    1- 1923     	MGOTO	_00451_DS_
     000E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1924     	.line	612, "main.c"; 	chrgFullFlag = 1;
     000F 2101                      1- 1925     	MOVIA	0x01
                                    1- 1926     	BANKSEL	_chrgFullFlag
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 1927     	MOVAR	_chrgFullFlag
     0012                           1- 1928     _00451_DS_:
                                    1- 1929     	.line	614, "main.c"; 	workStep = 0;
                                    1- 1930     	BANKSEL	_workStep
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 02rr                      1- 1931     	CLRR	_workStep
                                    1- 1932     	.line	615, "main.c"; 	ledLightTime = 0;
                                    1- 1933     	BANKSEL	_ledLightTime
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 02rr                      1- 1934     	CLRR	_ledLightTime
                                    1- 1935     	.line	616, "main.c"; 	pwmStop();
                                    1- 1936     	MCALL	_pwmStop
     0016 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1937     ;;unsigned compare: left < lit (0x5F0=1520), size=2
                                    1- 1938     	.line	617, "main.c"; 	if(R_AIN2_DATA < 1520)
     0017 2105                      1- 1939     	MOVIA	0x05
                                    1- 1940     	BANKSEL	_R_AIN2_DATA
     0018 rrrr                      3-  110 m1      .banksel ram_address
     0019 04rr                      1- 1941     	SUBAR	(_R_AIN2_DATA + 1),W
     001A 0903                      1- 1942     	BTRSS	STATUS,2
                                    1- 1943     	MGOTO	_00576_DS_
     001B 3rrr                      3-   63 m1      LGOTO rom_address
     001C 21F0                      1- 1944     	MOVIA	0xf0
     001D 04rr                      1- 1945     	SUBAR	_R_AIN2_DATA,W
     001E                           1- 1946     _00576_DS_:
     001E 0C03                      1- 1947     	BTRSC	STATUS,0
                                    1- 1948     	MGOTO	_00453_DS_
     001F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1949     	.line	618, "main.c"; 	chrgFullFlag = 0;
                                    1- 1950     	BANKSEL	_chrgFullFlag
     0020 rrrr                      3-  110 m1      .banksel ram_address
     0021 02rr                      1- 1951     	CLRR	_chrgFullFlag
     0022                           1- 1952     _00453_DS_:
                                    1- 1953     	.line	619, "main.c"; 	if(chrgFullFlag)
                                    1- 1954     	BANKSEL	_chrgFullFlag
     0022 rrrr                      3-  110 m1      .banksel ram_address
     0023 01rr                      1- 1955     	MOVR	_chrgFullFlag,W
     0024 0D03                      1- 1956     	BTRSC	STATUS,2
                                    1- 1957     	MGOTO	_00494_DS_
     0025 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1958     	.line	621, "main.c"; 	chrgStep = 6;
     0026 2106                      1- 1959     	MOVIA	0x06
                                    1- 1960     	BANKSEL	_chrgStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 00rr                      1- 1961     	MOVAR	_chrgStep
                                    1- 1962     	.line	623, "main.c"; 	ledStep = 6;
                                    1- 1963     	BANKSEL	_ledStep
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 1964     	MOVAR	_ledStep
                                    1- 1965     	.line	624, "main.c"; 	chrgFullFlag = 1;
     002B 2101                      1- 1966     	MOVIA	0x01
                                    1- 1967     	BANKSEL	_chrgFullFlag
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1- 1968     	MOVAR	_chrgFullFlag
                                    1- 1969     	.line	625, "main.c"; 	pwm1Stop();
                                    1- 1970     	MCALL	_pwm1Stop
     002E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1971     	.line	626, "main.c"; 	PORTB &= 0xF7;
     002F 1Drr                      1- 1972     	BCR	_PORTB,3
                                    1- 1973     	.line	627, "main.c"; 	chrgLedFull = 1;
     0030 2101                      1- 1974     	MOVIA	0x01
                                    1- 1975     	BANKSEL	_chrgLedFull
     0031 rrrr                      3-  110 m1      .banksel ram_address
     0032 00rr                      1- 1976     	MOVAR	_chrgLedFull
                                    1- 1977     	MGOTO	_00501_DS_
     0033 3rrr                      3-   63 m1      LGOTO rom_address
     0034                           1- 1978     _00494_DS_:
                                    1- 1979     	.line	632, "main.c"; 	IOSTB &= 0xF7;
     0034 001r                      1- 1980     	IOSTR	_IOSTB
                                    1- 1981     	BANKSEL	r0x1055
     0035 rrrr                      3-  110 m1      .banksel ram_address
     0036 00rr                      1- 1982     	MOVAR	r0x1055
     0037 1Drr                      1- 1983     	BCR	r0x1055,3
     0038 01rr                      1- 1984     	MOVR	r0x1055,W
     0039 000r                      1- 1985     	IOST	_IOSTB
                                    1- 1986     	.line	633, "main.c"; 	PWM1DUTY = chrgmaxduty;
                                    1- 1987     	BANKSEL	_chrgmaxduty
     003A rrrr                      3-  110 m1      .banksel ram_address
     003B 01rr                      1- 1988     	MOVR	_chrgmaxduty,W
     003C 00rr                      1- 1989     	SFUN	_PWM1DUTY
                                    1- 1990     	.line	634, "main.c"; 	pwm1Init();
                                    1- 1991     	MCALL	_pwm1Init
     003D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 1992     ;;unsigned compare: left < lit (0x8=8), size=1
                                    1- 1993     	.line	635, "main.c"; 	if(pwStep >= 8)
     003E 2108                      1- 1994     	MOVIA	0x08
                                    1- 1995     	BANKSEL	_pwStep
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 04rr                      1- 1996     	SUBAR	_pwStep,W
     0041 0803                      1- 1997     	BTRSS	STATUS,0
                                    1- 1998     	MGOTO	_00457_DS_
     0042 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 1999     	.line	638, "main.c"; 	if(++fullCount >= 2000)
                                    1- 2000     	BANKSEL	_fullCount
     0043 rrrr                      3-  110 m1      .banksel ram_address
     0044 05rr                      1- 2001     	INCR	_fullCount,F
     0045 0D03                      1- 2002     	BTRSC	STATUS,2
     0046 05rr                      1- 2003     	INCR	(_fullCount + 1),F
                                    1- 2004     ;;unsigned compare: left < lit (0x7D0=2000), size=2
     0047 2107                      1- 2005     	MOVIA	0x07
     0048 04rr                      1- 2006     	SUBAR	(_fullCount + 1),W
     0049 0903                      1- 2007     	BTRSS	STATUS,2
                                    1- 2008     	MGOTO	_00578_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
     004B 21D0                      1- 2009     	MOVIA	0xd0
     004C 04rr                      1- 2010     	SUBAR	_fullCount,W
     004D                           1- 2011     _00578_DS_:
     004D 0803                      1- 2012     	BTRSS	STATUS,0
                                    1- 2013     	MGOTO	_00458_DS_
     004E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2014     	.line	640, "main.c"; 	fullCount = 2000;
     004F 21D0                      1- 2015     	MOVIA	0xd0
                                    1- 2016     	BANKSEL	_fullCount
     0050 rrrr                      3-  110 m1      .banksel ram_address
     0051 00rr                      1- 2017     	MOVAR	_fullCount
     0052 2107                      1- 2018     	MOVIA	0x07
     0053 00rr                      1- 2019     	MOVAR	(_fullCount + 1)
                                    1- 2020     	.line	641, "main.c"; 	chrgFullFlag = 1;
     0054 2101                      1- 2021     	MOVIA	0x01
                                    1- 2022     	BANKSEL	_chrgFullFlag
     0055 rrrr                      3-  110 m1      .banksel ram_address
     0056 00rr                      1- 2023     	MOVAR	_chrgFullFlag
                                    1- 2024     	MGOTO	_00458_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
     0058                           1- 2025     _00457_DS_:
                                    1- 2026     	.line	647, "main.c"; 	fullCount = 0;
                                    1- 2027     	BANKSEL	_fullCount
     0058 rrrr                      3-  110 m1      .banksel ram_address
     0059 02rr                      1- 2028     	CLRR	_fullCount
     005A 02rr                      1- 2029     	CLRR	(_fullCount + 1)
     005B                           1- 2030     _00458_DS_:
                                    1- 2031     	.line	649, "main.c"; 	if(count500ms == 0)
                                    1- 2032     	BANKSEL	_count500ms
     005B rrrr                      3-  110 m1      .banksel ram_address
     005C 01rr                      1- 2033     	MOVR	_count500ms,W
     005D 0903                      1- 2034     	BTRSS	STATUS,2
                                    1- 2035     	MGOTO	_00474_DS_
     005E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2036     	.line	652, "main.c"; 	if(lockLedStep < pwStep - 1)
                                    1- 2037     	BANKSEL	_pwStep
     005F rrrr                      3-  110 m1      .banksel ram_address
     0060 01rr                      1- 2038     	MOVR	_pwStep,W
                                    1- 2039     	BANKSEL	r0x1055
     0061 rrrr                      3-  110 m1      .banksel ram_address
     0062 00rr                      1- 2040     	MOVAR	r0x1055
                                    1- 2041     	BANKSEL	r0x1056
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 02rr                      1- 2042     	CLRR	r0x1056
     0065 21FF                      1- 2043     	MOVIA	0xff
                                    1- 2044     	BANKSEL	r0x1055
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 03rr                      1- 2045     	ADDAR	r0x1055,F
     0068 0C03                      1- 2046     	BTRSC	STATUS,0
                                    1- 2047     	MGOTO	_00006_DS_
     0069 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2048     	BANKSEL	r0x1056
     006A rrrr                      3-  110 m1      .banksel ram_address
     006B 06rr                      1- 2049     	DECR	r0x1056,F
     006C                           1- 2050     _00006_DS_:
                                    1- 2051     	BANKSEL	_lockLedStep
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 01rr                      1- 2052     	MOVR	_lockLedStep,W
                                    1- 2053     	BANKSEL	r0x1057
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 00rr                      1- 2054     	MOVAR	r0x1057
                                    1- 2055     ;;1	CLRR	r0x1058
     0070 2100                      1- 2056     	MOVIA	0x00
     0071 2580                      1- 2057     	ADDIA	0x80
                                    1- 2058     	BANKSEL	r0x1059
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 00rr                      1- 2059     	MOVAR	r0x1059
                                    1- 2060     	BANKSEL	r0x1056
     0074 rrrr                      3-  110 m1      .banksel ram_address
     0075 01rr                      1- 2061     	MOVR	r0x1056,W
     0076 2580                      1- 2062     	ADDIA	0x80
                                    1- 2063     	BANKSEL	r0x1059
     0077 rrrr                      3-  110 m1      .banksel ram_address
     0078 04rr                      1- 2064     	SUBAR	r0x1059,W
     0079 0903                      1- 2065     	BTRSS	STATUS,2
                                    1- 2066     	MGOTO	_00579_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2067     	BANKSEL	r0x1055
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 01rr                      1- 2068     	MOVR	r0x1055,W
                                    1- 2069     	BANKSEL	r0x1057
     007D rrrr                      3-  110 m1      .banksel ram_address
     007E 04rr                      1- 2070     	SUBAR	r0x1057,W
     007F                           1- 2071     _00579_DS_:
     007F 0C03                      1- 2072     	BTRSC	STATUS,0
                                    1- 2073     	MGOTO	_00464_DS_
     0080 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2074     	.line	654, "main.c"; 	if(lockLedStep == 0)
                                    1- 2075     	BANKSEL	_lockLedStep
     0081 rrrr                      3-  110 m1      .banksel ram_address
     0082 01rr                      1- 2076     	MOVR	_lockLedStep,W
     0083 0903                      1- 2077     	BTRSS	STATUS,2
                                    1- 2078     	MGOTO	_00460_DS_
     0084 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2079     	.line	655, "main.c"; 	lockLedStep = pwStep - 1;
                                    1- 2080     	BANKSEL	_pwStep
     0085 rrrr                      3-  110 m1      .banksel ram_address
     0086 06rr                      1- 2081     	DECR	_pwStep,W
                                    1- 2082     	BANKSEL	_lockLedStep
     0087 rrrr                      3-  110 m1      .banksel ram_address
     0088 00rr                      1- 2083     	MOVAR	_lockLedStep
     0089                           1- 2084     _00460_DS_:
                                    1- 2085     	.line	656, "main.c"; 	if(++ledCount > 2000)
                                    1- 2086     	BANKSEL	_ledCount
     0089 rrrr                      3-  110 m1      .banksel ram_address
     008A 05rr                      1- 2087     	INCR	_ledCount,F
     008B 0D03                      1- 2088     	BTRSC	STATUS,2
     008C 05rr                      1- 2089     	INCR	(_ledCount + 1),F
                                    1- 2090     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2091     ;;unsigned compare: left >= lit (0x7D1=2001), size=2
     008D 2107                      1- 2092     	MOVIA	0x07
     008E 04rr                      1- 2093     	SUBAR	(_ledCount + 1),W
     008F 0903                      1- 2094     	BTRSS	STATUS,2
                                    1- 2095     	MGOTO	_00580_DS_
     0090 3rrr                      3-   63 m1      LGOTO rom_address
     0091 21D1                      1- 2096     	MOVIA	0xd1
     0092 04rr                      1- 2097     	SUBAR	_ledCount,W
     0093                           1- 2098     _00580_DS_:
     0093 0803                      1- 2099     	BTRSS	STATUS,0
                                    1- 2100     	MGOTO	_00465_DS_
     0094 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2101     	.line	658, "main.c"; 	lockLedStep = pwStep - 1;
                                    1- 2102     	BANKSEL	_pwStep
     0095 rrrr                      3-  110 m1      .banksel ram_address
     0096 06rr                      1- 2103     	DECR	_pwStep,W
                                    1- 2104     	BANKSEL	_lockLedStep
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 00rr                      1- 2105     	MOVAR	_lockLedStep
                                    1- 2106     	.line	659, "main.c"; 	ledCount = 0;
                                    1- 2107     	BANKSEL	_ledCount
     0099 rrrr                      3-  110 m1      .banksel ram_address
     009A 02rr                      1- 2108     	CLRR	_ledCount
     009B 02rr                      1- 2109     	CLRR	(_ledCount + 1)
                                    1- 2110     	MGOTO	_00465_DS_
     009C 3rrr                      3-   63 m1      LGOTO rom_address
     009D                           1- 2111     _00464_DS_:
                                    1- 2112     	.line	665, "main.c"; 	ledCount = 0;
                                    1- 2113     	BANKSEL	_ledCount
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 02rr                      1- 2114     	CLRR	_ledCount
     009F 02rr                      1- 2115     	CLRR	(_ledCount + 1)
                                    1- 2116     ;;unsigned compare: left < lit (0x6=6), size=1
     00A0                           1- 2117     _00465_DS_:
                                    1- 2118     	.line	667, "main.c"; 	if(lockLedStep >= 6)
     00A0 2106                      1- 2119     	MOVIA	0x06
                                    1- 2120     	BANKSEL	_lockLedStep
     00A1 rrrr                      3-  110 m1      .banksel ram_address
     00A2 04rr                      1- 2121     	SUBAR	_lockLedStep,W
     00A3 0803                      1- 2122     	BTRSS	STATUS,0
                                    1- 2123     	MGOTO	_00467_DS_
     00A4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2124     	.line	669, "main.c"; 	lockLedStep = 5;	//继续充电
     00A5 2105                      1- 2125     	MOVIA	0x05
     00A6 00rr                      1- 2126     	MOVAR	_lockLedStep
     00A7                           1- 2127     _00467_DS_:
                                    1- 2128     	.line	671, "main.c"; 	if(chrgLedFull)
                                    1- 2129     	BANKSEL	_chrgLedFull
     00A7 rrrr                      3-  110 m1      .banksel ram_address
     00A8 01rr                      1- 2130     	MOVR	_chrgLedFull,W
     00A9 0D03                      1- 2131     	BTRSC	STATUS,2
                                    1- 2132     	MGOTO	_00471_DS_
     00AA 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2133     	.line	673, "main.c"; 	ledStep = 6;
     00AB 2106                      1- 2134     	MOVIA	0x06
                                    1- 2135     	BANKSEL	_ledStep
     00AC rrrr                      3-  110 m1      .banksel ram_address
     00AD 00rr                      1- 2136     	MOVAR	_ledStep
                                    1- 2137     	MGOTO	_00474_DS_
     00AE 3rrr                      3-   63 m1      LGOTO rom_address
     00AF                           1- 2138     _00471_DS_:
                                    1- 2139     	.line	677, "main.c"; 	if(++ledStep > 6)
                                    1- 2140     	BANKSEL	_ledStep
     00AF rrrr                      3-  110 m1      .banksel ram_address
     00B0 05rr                      1- 2141     	INCR	_ledStep,F
                                    1- 2142     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2143     ;;unsigned compare: left >= lit (0x7=7), size=1
     00B1 2107                      1- 2144     	MOVIA	0x07
     00B2 04rr                      1- 2145     	SUBAR	_ledStep,W
     00B3 0803                      1- 2146     	BTRSS	STATUS,0
                                    1- 2147     	MGOTO	_00474_DS_
     00B4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2148     	.line	678, "main.c"; 	ledStep = lockLedStep;
                                    1- 2149     	BANKSEL	_lockLedStep
     00B5 rrrr                      3-  110 m1      .banksel ram_address
     00B6 01rr                      1- 2150     	MOVR	_lockLedStep,W
                                    1- 2151     	BANKSEL	_ledStep
     00B7 rrrr                      3-  110 m1      .banksel ram_address
     00B8 00rr                      1- 2152     	MOVAR	_ledStep
                                    1- 2153     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2154     ;;unsigned compare: left >= lit (0x6=6), size=1
     00B9                           1- 2155     _00474_DS_:
                                    1- 2156     	.line	682, "main.c"; 	if(count200ms > 5)
     00B9 2106                      1- 2157     	MOVIA	0x06
                                    1- 2158     	BANKSEL	_count200ms
     00BA rrrr                      3-  110 m1      .banksel ram_address
     00BB 04rr                      1- 2159     	SUBAR	_count200ms,W
     00BC 0803                      1- 2160     	BTRSS	STATUS,0
                                    1- 2161     	MGOTO	_00501_DS_
     00BD 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2162     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2163     ;;unsigned compare: left >= lit (0x42=66), size=2
                                    1- 2164     	.line	684, "main.c"; 	if(R_AIN4_DATA <= 65 && R_AIN4_DATA >=subMin)
     00BE 2100                      1- 2165     	MOVIA	0x00
                                    1- 2166     	BANKSEL	_R_AIN4_DATA
     00BF rrrr                      3-  110 m1      .banksel ram_address
     00C0 04rr                      1- 2167     	SUBAR	(_R_AIN4_DATA + 1),W
     00C1 0903                      1- 2168     	BTRSS	STATUS,2
                                    1- 2169     	MGOTO	_00584_DS_
     00C2 3rrr                      3-   63 m1      LGOTO rom_address
     00C3 2142                      1- 2170     	MOVIA	0x42
     00C4 04rr                      1- 2171     	SUBAR	_R_AIN4_DATA,W
     00C5                           1- 2172     _00584_DS_:
     00C5 0C03                      1- 2173     	BTRSC	STATUS,0
                                    1- 2174     	MGOTO	_00476_DS_
     00C6 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2175     	BANKSEL	_subMin
     00C7 rrrr                      3-  110 m1      .banksel ram_address
     00C8 01rr                      1- 2176     	MOVR	_subMin,W
                                    1- 2177     	BANKSEL	r0x1055
     00C9 rrrr                      3-  110 m1      .banksel ram_address
     00CA 00rr                      1- 2178     	MOVAR	r0x1055
                                    1- 2179     	BANKSEL	r0x1056
     00CB rrrr                      3-  110 m1      .banksel ram_address
     00CC 02rr                      1- 2180     	CLRR	r0x1056
     00CD 2100                      1- 2181     	MOVIA	0x00
                                    1- 2182     	BANKSEL	_R_AIN4_DATA
     00CE rrrr                      3-  110 m1      .banksel ram_address
     00CF 04rr                      1- 2183     	SUBAR	(_R_AIN4_DATA + 1),W
     00D0 0903                      1- 2184     	BTRSS	STATUS,2
                                    1- 2185     	MGOTO	_00585_DS_
     00D1 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2186     	BANKSEL	r0x1055
     00D2 rrrr                      3-  110 m1      .banksel ram_address
     00D3 01rr                      1- 2187     	MOVR	r0x1055,W
                                    1- 2188     	BANKSEL	_R_AIN4_DATA
     00D4 rrrr                      3-  110 m1      .banksel ram_address
     00D5 04rr                      1- 2189     	SUBAR	_R_AIN4_DATA,W
     00D6                           1- 2190     _00585_DS_:
     00D6 0803                      1- 2191     	BTRSS	STATUS,0
                                    1- 2192     	MGOTO	_00476_DS_
     00D7 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2193     	.line	686, "main.c"; 	addTime = subTime = 0;
                                    1- 2194     	BANKSEL	_subTime
     00D8 rrrr                      3-  110 m1      .banksel ram_address
     00D9 02rr                      1- 2195     	CLRR	_subTime
                                    1- 2196     	BANKSEL	_addTime
     00DA rrrr                      3-  110 m1      .banksel ram_address
     00DB 02rr                      1- 2197     	CLRR	_addTime
                                    1- 2198     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2199     ;;unsigned compare: left >= lit (0x42=66), size=2
     00DC                           1- 2200     _00476_DS_:
                                    1- 2201     	.line	688, "main.c"; 	if(R_AIN4_DATA > 65)
     00DC 2100                      1- 2202     	MOVIA	0x00
                                    1- 2203     	BANKSEL	_R_AIN4_DATA
     00DD rrrr                      3-  110 m1      .banksel ram_address
     00DE 04rr                      1- 2204     	SUBAR	(_R_AIN4_DATA + 1),W
     00DF 0903                      1- 2205     	BTRSS	STATUS,2
                                    1- 2206     	MGOTO	_00586_DS_
     00E0 3rrr                      3-   63 m1      LGOTO rom_address
     00E1 2142                      1- 2207     	MOVIA	0x42
     00E2 04rr                      1- 2208     	SUBAR	_R_AIN4_DATA,W
     00E3                           1- 2209     _00586_DS_:
     00E3 0803                      1- 2210     	BTRSS	STATUS,0
                                    1- 2211     	MGOTO	_00485_DS_
     00E4 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2212     	.line	690, "main.c"; 	if(++subTime > chrgWaitTime)
                                    1- 2213     	BANKSEL	_subTime
     00E5 rrrr                      3-  110 m1      .banksel ram_address
     00E6 05rr                      1- 2214     	INCR	_subTime,F
     00E7 01rr                      1- 2215     	MOVR	_subTime,W
                                    1- 2216     	BANKSEL	_chrgWaitTime
     00E8 rrrr                      3-  110 m1      .banksel ram_address
     00E9 04rr                      1- 2217     	SUBAR	_chrgWaitTime,W
     00EA 0C03                      1- 2218     	BTRSC	STATUS,0
                                    1- 2219     	MGOTO	_00479_DS_
     00EB 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2220     	.line	692, "main.c"; 	chrgmaxduty = chrgmaxduty - 1;
                                    1- 2221     	BANKSEL	_chrgmaxduty
     00EC rrrr                      3-  110 m1      .banksel ram_address
     00ED 06rr                      1- 2222     	DECR	_chrgmaxduty,F
                                    1- 2223     	.line	693, "main.c"; 	subTime = 0;
                                    1- 2224     	BANKSEL	_subTime
     00EE rrrr                      3-  110 m1      .banksel ram_address
     00EF 02rr                      1- 2225     	CLRR	_subTime
                                    1- 2226     	.line	694, "main.c"; 	subMin = 60;
     00F0 213C                      1- 2227     	MOVIA	0x3c
                                    1- 2228     	BANKSEL	_subMin
     00F1 rrrr                      3-  110 m1      .banksel ram_address
     00F2 00rr                      1- 2229     	MOVAR	_subMin
                                    1- 2230     	.line	695, "main.c"; 	chrgWaitTime = 250;
     00F3 21FA                      1- 2231     	MOVIA	0xfa
                                    1- 2232     	BANKSEL	_chrgWaitTime
     00F4 rrrr                      3-  110 m1      .banksel ram_address
     00F5 00rr                      1- 2233     	MOVAR	_chrgWaitTime
     00F6                           1- 2234     _00479_DS_:
                                    1- 2235     	.line	697, "main.c"; 	addTime = 0;
                                    1- 2236     	BANKSEL	_addTime
     00F6 rrrr                      3-  110 m1      .banksel ram_address
     00F7 02rr                      1- 2237     	CLRR	_addTime
                                    1- 2238     	MGOTO	_00486_DS_
     00F8 3rrr                      3-   63 m1      LGOTO rom_address
     00F9                           1- 2239     _00485_DS_:
                                    1- 2240     	.line	699, "main.c"; 	else if(R_AIN4_DATA < subMin)
                                    1- 2241     	BANKSEL	_subMin
     00F9 rrrr                      3-  110 m1      .banksel ram_address
     00FA 01rr                      1- 2242     	MOVR	_subMin,W
                                    1- 2243     	BANKSEL	r0x1055
     00FB rrrr                      3-  110 m1      .banksel ram_address
     00FC 00rr                      1- 2244     	MOVAR	r0x1055
                                    1- 2245     	BANKSEL	r0x1056
     00FD rrrr                      3-  110 m1      .banksel ram_address
     00FE 02rr                      1- 2246     	CLRR	r0x1056
     00FF 2100                      1- 2247     	MOVIA	0x00
                                    1- 2248     	BANKSEL	_R_AIN4_DATA
     0100 rrrr                      3-  110 m1      .banksel ram_address
     0101 04rr                      1- 2249     	SUBAR	(_R_AIN4_DATA + 1),W
     0102 0903                      1- 2250     	BTRSS	STATUS,2
                                    1- 2251     	MGOTO	_00588_DS_
     0103 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2252     	BANKSEL	r0x1055
     0104 rrrr                      3-  110 m1      .banksel ram_address
     0105 01rr                      1- 2253     	MOVR	r0x1055,W
                                    1- 2254     	BANKSEL	_R_AIN4_DATA
     0106 rrrr                      3-  110 m1      .banksel ram_address
     0107 04rr                      1- 2255     	SUBAR	_R_AIN4_DATA,W
     0108                           1- 2256     _00588_DS_:
     0108 0C03                      1- 2257     	BTRSC	STATUS,0
                                    1- 2258     	MGOTO	_00486_DS_
     0109 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2259     	.line	701, "main.c"; 	if(++addTime > chrgWaitTime)
                                    1- 2260     	BANKSEL	_addTime
     010A rrrr                      3-  110 m1      .banksel ram_address
     010B 05rr                      1- 2261     	INCR	_addTime,F
     010C 01rr                      1- 2262     	MOVR	_addTime,W
                                    1- 2263     	BANKSEL	_chrgWaitTime
     010D rrrr                      3-  110 m1      .banksel ram_address
     010E 04rr                      1- 2264     	SUBAR	_chrgWaitTime,W
     010F 0C03                      1- 2265     	BTRSC	STATUS,0
                                    1- 2266     	MGOTO	_00481_DS_
     0110 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2267     	.line	703, "main.c"; 	chrgmaxduty = chrgmaxduty + 1;
                                    1- 2268     	BANKSEL	_chrgmaxduty
     0111 rrrr                      3-  110 m1      .banksel ram_address
     0112 05rr                      1- 2269     	INCR	_chrgmaxduty,F
                                    1- 2270     	.line	704, "main.c"; 	addTime = 0;
                                    1- 2271     	BANKSEL	_addTime
     0113 rrrr                      3-  110 m1      .banksel ram_address
     0114 02rr                      1- 2272     	CLRR	_addTime
     0115                           1- 2273     _00481_DS_:
                                    1- 2274     	.line	706, "main.c"; 	subTime = 0;
                                    1- 2275     	BANKSEL	_subTime
     0115 rrrr                      3-  110 m1      .banksel ram_address
     0116 02rr                      1- 2276     	CLRR	_subTime
                                    1- 2277     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2278     ;;unsigned compare: left >= lit (0x21=33), size=1
     0117                           1- 2279     _00486_DS_:
                                    1- 2280     	.line	709, "main.c"; 	if(chrgmaxduty > 32)
     0117 2121                      1- 2281     	MOVIA	0x21
                                    1- 2282     	BANKSEL	_chrgmaxduty
     0118 rrrr                      3-  110 m1      .banksel ram_address
     0119 04rr                      1- 2283     	SUBAR	_chrgmaxduty,W
     011A 0803                      1- 2284     	BTRSS	STATUS,0
                                    1- 2285     	MGOTO	_00488_DS_
     011B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2286     	.line	710, "main.c"; 	chrgmaxduty = 32;
     011C 2120                      1- 2287     	MOVIA	0x20
     011D 00rr                      1- 2288     	MOVAR	_chrgmaxduty
                                    1- 2289     ;;unsigned compare: left < lit (0xA=10), size=1
     011E                           1- 2290     _00488_DS_:
                                    1- 2291     	.line	711, "main.c"; 	if(chrgmaxduty < 10)
     011E 210A                      1- 2292     	MOVIA	0x0a
                                    1- 2293     	BANKSEL	_chrgmaxduty
     011F rrrr                      3-  110 m1      .banksel ram_address
     0120 04rr                      1- 2294     	SUBAR	_chrgmaxduty,W
     0121 0C03                      1- 2295     	BTRSC	STATUS,0
                                    1- 2296     	MGOTO	_00501_DS_
     0122 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2297     	.line	712, "main.c"; 	chrgmaxduty = 10;
     0123 210A                      1- 2298     	MOVIA	0x0a
     0124 00rr                      1- 2299     	MOVAR	_chrgmaxduty
                                    1- 2300     	MGOTO	_00501_DS_
     0125 3rrr                      3-   63 m1      LGOTO rom_address
     0126                           1- 2301     _00499_DS_:
                                    1- 2302     	.line	721, "main.c"; 	chrgLedFull = 0;
                                    1- 2303     	BANKSEL	_chrgLedFull
     0126 rrrr                      3-  110 m1      .banksel ram_address
     0127 02rr                      1- 2304     	CLRR	_chrgLedFull
                                    1- 2305     	.line	722, "main.c"; 	chrgmaxduty = 0;
                                    1- 2306     	BANKSEL	_chrgmaxduty
     0128 rrrr                      3-  110 m1      .banksel ram_address
     0129 02rr                      1- 2307     	CLRR	_chrgmaxduty
                                    1- 2308     	.line	723, "main.c"; 	chrgWaitTime = 5;
     012A 2105                      1- 2309     	MOVIA	0x05
                                    1- 2310     	BANKSEL	_chrgWaitTime
     012B rrrr                      3-  110 m1      .banksel ram_address
     012C 00rr                      1- 2311     	MOVAR	_chrgWaitTime
                                    1- 2312     	.line	724, "main.c"; 	subMin = 60;
     012D 213C                      1- 2313     	MOVIA	0x3c
                                    1- 2314     	BANKSEL	_subMin
     012E rrrr                      3-  110 m1      .banksel ram_address
     012F 00rr                      1- 2315     	MOVAR	_subMin
                                    1- 2316     	.line	725, "main.c"; 	chrgFullFlag = 0;
                                    1- 2317     	BANKSEL	_chrgFullFlag
     0130 rrrr                      3-  110 m1      .banksel ram_address
     0131 02rr                      1- 2318     	CLRR	_chrgFullFlag
                                    1- 2319     	.line	726, "main.c"; 	chrgduty = 0;
                                    1- 2320     	BANKSEL	_chrgduty
     0132 rrrr                      3-  110 m1      .banksel ram_address
     0133 02rr                      1- 2321     	CLRR	_chrgduty
                                    1- 2322     	.line	727, "main.c"; 	maxduty = 0;
                                    1- 2323     	BANKSEL	_maxduty
     0134 rrrr                      3-  110 m1      .banksel ram_address
     0135 02rr                      1- 2324     	CLRR	_maxduty
                                    1- 2325     	.line	728, "main.c"; 	chrgStep = 0;
                                    1- 2326     	BANKSEL	_chrgStep
     0136 rrrr                      3-  110 m1      .banksel ram_address
     0137 02rr                      1- 2327     	CLRR	_chrgStep
                                    1- 2328     	.line	729, "main.c"; 	lockLedStep = 0;
                                    1- 2329     	BANKSEL	_lockLedStep
     0138 rrrr                      3-  110 m1      .banksel ram_address
     0139 02rr                      1- 2330     	CLRR	_lockLedStep
                                    1- 2331     	.line	730, "main.c"; 	chrgTime = 0;
                                    1- 2332     	BANKSEL	_chrgTime
     013A rrrr                      3-  110 m1      .banksel ram_address
     013B 02rr                      1- 2333     	CLRR	_chrgTime
     013C 02rr                      1- 2334     	CLRR	(_chrgTime + 1)
                                    1- 2335     	.line	731, "main.c"; 	pwm1Stop();
                                    1- 2336     	MCALL	_pwm1Stop
     013D 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2337     	.line	732, "main.c"; 	if(workStep == 0)
                                    1- 2338     	BANKSEL	_workStep
     013E rrrr                      3-  110 m1      .banksel ram_address
     013F 01rr                      1- 2339     	MOVR	_workStep,W
     0140 0903                      1- 2340     	BTRSS	STATUS,2
                                    1- 2341     	MGOTO	_00007_DS_
     0141 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2342     	.line	733, "main.c"; 	ledStep = 0;
                                    1- 2343     	BANKSEL	_ledStep
     0142 rrrr                      3-  110 m1      .banksel ram_address
     0143 02rr                      1- 2344     	CLRR	_ledStep
     0144                           1- 2345     _00007_DS_:
                                    1- 2346     	.line	734, "main.c"; 	chrgFlag = 0;
                                    1- 2347     	BANKSEL	_Status
     0144 rrrr                      3-  110 m1      .banksel ram_address
     0145 1Drr                      1- 2348     	BCR	_Status,3
                                    1- 2349     	.line	735, "main.c"; 	chrgTime = 0;	//重置充电计数
                                    1- 2350     	BANKSEL	_chrgTime
     0146 rrrr                      3-  110 m1      .banksel ram_address
     0147 02rr                      1- 2351     	CLRR	_chrgTime
     0148 02rr                      1- 2352     	CLRR	(_chrgTime + 1)
     0149                           1- 2353     _00501_DS_:
                                    1- 2354     	.line	738, "main.c"; 	}
                                    1- 2355     	RETURN	
     0149 0010                      3-   40 m1      ret
                                    1- 2356     ; exit point of _chrgCtr
                                    1- 2358     ;***
                                    1- 2359     ;  pBlock Stats: dbName = C
                                    1- 2360     ;***
                                    1- 2361     ;has an exit
                                    1- 2362     ;1 compiler assigned register :
                                    1- 2363     ;   r0x105A
                                    1- 2364     ;; Starting pCode block
                                    1- 2365     .segment "code"; module=main, function=_keyRead
                                    1- 2367     ;local variable name mapping:
     0000                           1- 2369     _keyRead:
                                    1- 2370     ; 2 exit points
                                    1- 2371     	.line	568, "main.c"; 	char keyRead(char keyStatus)	
                                    1- 2372     	BANKSEL	r0x105A
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 00rr                      1- 2373     	MOVAR	r0x105A
                                    1- 2374     	.line	570, "main.c"; 	if(keyStatus)
     0002 01rr                      1- 2375     	MOVR	r0x105A,W
     0003 0D03                      1- 2376     	BTRSC	STATUS,2
                                    1- 2377     	MGOTO	_00441_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2378     	.line	572, "main.c"; 	keyCount++;
                                    1- 2379     	BANKSEL	_keyCount
     0005 rrrr                      3-  110 m1      .banksel ram_address
     0006 05rr                      1- 2380     	INCR	_keyCount,F
                                    1- 2381     ;;unsigned compare: left < lit (0x64=100), size=1
                                    1- 2382     	.line	573, "main.c"; 	if(keyCount >= 100)
     0007 2164                      1- 2383     	MOVIA	0x64
     0008 04rr                      1- 2384     	SUBAR	_keyCount,W
     0009 0803                      1- 2385     	BTRSS	STATUS,0
                                    1- 2386     	MGOTO	_00442_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2387     	.line	575, "main.c"; 	keyCount = 100;
     000B 2164                      1- 2388     	MOVIA	0x64
     000C 00rr                      1- 2389     	MOVAR	_keyCount
                                    1- 2390     	.line	576, "main.c"; 	if(!longPressFlag)
                                    1- 2391     	BANKSEL	_Status
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 0Crr                      1- 2392     	BTRSC	_Status,1
                                    1- 2393     	MGOTO	_00442_DS_
     000F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2394     	.line	578, "main.c"; 	longPressFlag = 1;
     0010 18rr                      1- 2395     	BSR	_Status,1
                                    1- 2396     	.line	579, "main.c"; 	return 2;
     0011 2102                      1- 2397     	MOVIA	0x02
                                    1- 2398     	MGOTO	_00443_DS_
     0012 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2399     ;;unsigned compare: left < lit (0x64=100), size=1
     0013                           1- 2400     _00441_DS_:
                                    1- 2401     	.line	585, "main.c"; 	if(keyCount >= 100)
     0013 2164                      1- 2402     	MOVIA	0x64
                                    1- 2403     	BANKSEL	_keyCount
     0014 rrrr                      3-  110 m1      .banksel ram_address
     0015 04rr                      1- 2404     	SUBAR	_keyCount,W
     0016 0803                      1- 2405     	BTRSS	STATUS,0
                                    1- 2406     	MGOTO	_00438_DS_
     0017 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2407     	.line	587, "main.c"; 	keyCount = 0;
     0018 02rr                      1- 2408     	CLRR	_keyCount
                                    1- 2409     	.line	588, "main.c"; 	longPressFlag = 0;
                                    1- 2410     	BANKSEL	_Status
     0019 rrrr                      3-  110 m1      .banksel ram_address
     001A 1Crr                      1- 2411     	BCR	_Status,1
                                    1- 2412     	.line	589, "main.c"; 	return	0;
     001B 2100                      1- 2413     	MOVIA	0x00
                                    1- 2414     	MGOTO	_00443_DS_
     001C 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2415     ;;unsigned compare: left < lit (0x4=4), size=1
     001D                           1- 2416     _00438_DS_:
                                    1- 2417     	.line	591, "main.c"; 	else if(keyCount >= 4)
     001D 2104                      1- 2418     	MOVIA	0x04
                                    1- 2419     	BANKSEL	_keyCount
     001E rrrr                      3-  110 m1      .banksel ram_address
     001F 04rr                      1- 2420     	SUBAR	_keyCount,W
     0020 0803                      1- 2421     	BTRSS	STATUS,0
                                    1- 2422     	MGOTO	_00439_DS_
     0021 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2423     	.line	593, "main.c"; 	keyCount = 0;
     0022 02rr                      1- 2424     	CLRR	_keyCount
                                    1- 2425     	.line	594, "main.c"; 	return	1;
     0023 2101                      1- 2426     	MOVIA	0x01
                                    1- 2427     	MGOTO	_00443_DS_
     0024 3rrr                      3-   63 m1      LGOTO rom_address
     0025                           1- 2428     _00439_DS_:
                                    1- 2429     	.line	596, "main.c"; 	keyCount = 0;
                                    1- 2430     	BANKSEL	_keyCount
     0025 rrrr                      3-  110 m1      .banksel ram_address
     0026 02rr                      1- 2431     	CLRR	_keyCount
     0027                           1- 2432     _00442_DS_:
                                    1- 2433     	.line	598, "main.c"; 	return 0;
     0027 2100                      1- 2434     	MOVIA	0x00
     0028                           1- 2435     _00443_DS_:
                                    1- 2436     	.line	599, "main.c"; 	}
                                    1- 2437     	RETURN	
     0028 0010                      3-   40 m1      ret
                                    1- 2438     ; exit point of _keyRead
                                    1- 2440     ;***
                                    1- 2441     ;  pBlock Stats: dbName = C
                                    1- 2442     ;***
                                    1- 2443     ;has an exit
                                    1- 2444     ;functions called:
                                    1- 2445     ;   _LedInput
                                    1- 2446     ;   _pwmStop
                                    1- 2447     ;   _pwm1Stop
                                    1- 2448     ;   _LedInput
                                    1- 2449     ;   _pwmStop
                                    1- 2450     ;   _pwm1Stop
                                    1- 2451     ;; Starting pCode block
                                    1- 2452     .segment "code"; module=main, function=_gotoSleep
     0000                           1- 2454     _gotoSleep:
                                    1- 2455     ; 2 exit points
                                    1- 2456     	.line	533, "main.c"; 	LedInput();
                                    1- 2457     	MCALL	_LedInput
     0000 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2458     	.line	534, "main.c"; 	sleepTime = 0;
                                    1- 2459     	BANKSEL	_sleepTime
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 02rr                      1- 2460     	CLRR	_sleepTime
     0003 02rr                      1- 2461     	CLRR	(_sleepTime + 1)
                                    1- 2462     	.line	536, "main.c"; 	pwmStop();
                                    1- 2463     	MCALL	_pwmStop
     0004 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2464     	.line	537, "main.c"; 	pwm1Stop();
                                    1- 2465     	MCALL	_pwm1Stop
     0005 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2466     	.line	538, "main.c"; 	IOSTA = 0xC8;
     0006 21C8                      1- 2467     	MOVIA	0xc8
     0007 000r                      1- 2468     	IOST	_IOSTA
                                    1- 2469     	.line	539, "main.c"; 	PORTA = 0x46;
     0008 2146                      1- 2470     	MOVIA	0x46
     0009 00rr                      1- 2471     	MOVAR	_PORTA
                                    1- 2472     	.line	540, "main.c"; 	APHCON = 0x3F;
     000A 213F                      1- 2473     	MOVIA	0x3f
     000B 000r                      1- 2474     	IOST	_APHCON
                                    1- 2475     	.line	541, "main.c"; 	PORTB = 0x00;
     000C 02rr                      1- 2476     	CLRR	_PORTB
                                    1- 2477     	.line	542, "main.c"; 	workStep = 0;
                                    1- 2478     	BANKSEL	_workStep
     000D rrrr                      3-  110 m1      .banksel ram_address
     000E 02rr                      1- 2479     	CLRR	_workStep
                                    1- 2480     	.line	543, "main.c"; 	AWUCON = 0x88;
     000F 2188                      1- 2481     	MOVIA	0x88
     0010 00rr                      1- 2482     	MOVAR	_AWUCON
                                    1- 2483     	.line	544, "main.c"; 	BWUCON = 0x00;
     0011 02rr                      1- 2484     	CLRR	_BWUCON
                                    1- 2485     	.line	545, "main.c"; 	redLedFlag = 0;
                                    1- 2486     	BANKSEL	_Status
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 1Drr                      1- 2487     	BCR	_Status,2
                                    1- 2488     	.line	548, "main.c"; 	INTE =  C_INT_PABKey;
     0014 2102                      1- 2489     	MOVIA	0x02
     0015 00rr                      1- 2490     	MOVAR	_INTE
                                    1- 2491     	.line	549, "main.c"; 	PCON =  C_LVR_En | 0x10;	
     0016 2118                      1- 2492     	MOVIA	0x18
     0017 00rr                      1- 2493     	MOVAR	_PCON
                                    1- 2494     	.line	550, "main.c"; 	INTF = 0;								// Clear all interrupt flags
     0018 02rr                      1- 2495     	CLRR	_INTF
                                    1- 2496     	.line	551, "main.c"; 	CLRWDT();
     0019 0002                      1- 2497     	clrwdt
                                    1- 2498     	.line	552, "main.c"; 	ENI();
     001A 0004                      1- 2499     	ENI
                                    1- 2500     	.line	553, "main.c"; 	SLEEP();
     001B 0001                      1- 2501     	sleep
                                    1- 2502     	.line	554, "main.c"; 	AWUCON = 0x00;
     001C 02rr                      1- 2503     	CLRR	_AWUCON
                                    1- 2504     	.line	555, "main.c"; 	IOSTA = C_PA7_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     001D 21BE                      1- 2505     	MOVIA	0xbe
     001E 000r                      1- 2506     	IOST	_IOSTA
                                    1- 2507     	.line	556, "main.c"; 	IOSTB = 0x00;
     001F 0200                      1- 2508     	CLRA	
     0020 000r                      1- 2509     	IOST	_IOSTB
                                    1- 2510     	.line	557, "main.c"; 	PORTA = 0x00;
     0021 02rr                      1- 2511     	CLRR	_PORTA
                                    1- 2512     	.line	558, "main.c"; 	APHCON = 0x7F;
     0022 217F                      1- 2513     	MOVIA	0x7f
     0023 000r                      1- 2514     	IOST	_APHCON
                                    1- 2515     	.line	559, "main.c"; 	INTE =  C_INT_TMR0;	// Enable Timer0、Timer1、WDT overflow interrupt
     0024 2101                      1- 2516     	MOVIA	0x01
     0025 00rr                      1- 2517     	MOVAR	_INTE
                                    1- 2518     	.line	560, "main.c"; 	INTF = 0;
     0026 02rr                      1- 2519     	CLRR	_INTF
                                    1- 2520     	.line	562, "main.c"; 	PCON = C_WDT_En | C_LVR_En | C_LVD_En | 0x10;				// Enable WDT ,  Enable LVR
     0027 21B8                      1- 2521     	MOVIA	0xb8
     0028 00rr                      1- 2522     	MOVAR	_PCON
                                    1- 2523     	.line	565, "main.c"; 	}
                                    1- 2524     	RETURN	
     0029 0010                      3-   40 m1      ret
                                    1- 2525     ; exit point of _gotoSleep
                                    1- 2527     ;***
                                    1- 2528     ;  pBlock Stats: dbName = C
                                    1- 2529     ;***
                                    1- 2530     ;has an exit
                                    1- 2531     ;; Starting pCode block
                                    1- 2532     .segment "code"; module=main, function=_pwmStop
     0000                           1- 2534     _pwmStop:
                                    1- 2535     ; 2 exit points
                                    1- 2536     	.line	525, "main.c"; 	T2CR1 = C_TMR2_Dis;
     0000 0200                      1- 2537     	CLRA	
     0001 00rr                      1- 2538     	SFUN	_T2CR1
                                    1- 2539     	.line	526, "main.c"; 	}
                                    1- 2540     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2541     ; exit point of _pwmStop
                                    1- 2543     ;***
                                    1- 2544     ;  pBlock Stats: dbName = C
                                    1- 2545     ;***
                                    1- 2546     ;has an exit
                                    1- 2547     ;1 compiler assigned register :
                                    1- 2548     ;   r0x105C
                                    1- 2549     ;; Starting pCode block
                                    1- 2550     .segment "code"; module=main, function=_pwmInit
     0000                           1- 2552     _pwmInit:
                                    1- 2553     ; 2 exit points
                                    1- 2554     	.line	513, "main.c"; 	if(0x80&T2CR1)
     0000 00rr                      1- 2555     	SFUNR	_T2CR1
                                    1- 2556     	BANKSEL	r0x105C
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2557     	MOVAR	r0x105C
     0003 0Frr                      1- 2558     	BTRSC	r0x105C,7
                                    1- 2559     	.line	514, "main.c"; 	return;
                                    1- 2560     	MGOTO	_00418_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2561     	.line	515, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2562     	CLRR	_TMRH
                                    1- 2563     	.line	516, "main.c"; 	TMR2 = 100;							//频率为110K
     0006 2164                      1- 2564     	MOVIA	0x64
     0007 00rr                      1- 2565     	SFUN	_TMR2
                                    1- 2566     	.line	519, "main.c"; 	T2CR2 = C_TMR2_ClkSrc_Inst | C_PS2_Div4;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 2101                      1- 2567     	MOVIA	0x01
     0009 00rr                      1- 2568     	SFUN	_T2CR2
                                    1- 2569     	.line	520, "main.c"; 	T2CR1 = C_PWM2_En | C_TMR2_Reload | C_TMR2_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000A 2183                      1- 2570     	MOVIA	0x83
     000B 00rr                      1- 2571     	SFUN	_T2CR1
     000C                           1- 2572     _00418_DS_:
                                    1- 2573     	.line	521, "main.c"; 	}
                                    1- 2574     	RETURN	
     000C 0010                      3-   40 m1      ret
                                    1- 2575     ; exit point of _pwmInit
                                    1- 2577     ;***
                                    1- 2578     ;  pBlock Stats: dbName = C
                                    1- 2579     ;***
                                    1- 2580     ;has an exit
                                    1- 2581     ;; Starting pCode block
                                    1- 2582     .segment "code"; module=main, function=_pwm1Stop
     0000                           1- 2584     _pwm1Stop:
                                    1- 2585     ; 2 exit points
                                    1- 2586     	.line	506, "main.c"; 	T1CR1 = C_TMR1_Dis;
     0000 0200                      1- 2587     	CLRA	
     0001 00rr                      1- 2588     	SFUN	_T1CR1
                                    1- 2589     	.line	507, "main.c"; 	}
                                    1- 2590     	RETURN	
     0002 0010                      3-   40 m1      ret
                                    1- 2591     ; exit point of _pwm1Stop
                                    1- 2593     ;***
                                    1- 2594     ;  pBlock Stats: dbName = C
                                    1- 2595     ;***
                                    1- 2596     ;has an exit
                                    1- 2597     ;1 compiler assigned register :
                                    1- 2598     ;   r0x1054
                                    1- 2599     ;; Starting pCode block
                                    1- 2600     .segment "code"; module=main, function=_pwm1Init
     0000                           1- 2602     _pwm1Init:
                                    1- 2603     ; 2 exit points
                                    1- 2604     	.line	493, "main.c"; 	if(0x80&T1CR1)
     0000 00rr                      1- 2605     	SFUNR	_T1CR1
                                    1- 2606     	BANKSEL	r0x1054
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2607     	MOVAR	r0x1054
     0003 0Frr                      1- 2608     	BTRSC	r0x1054,7
                                    1- 2609     	.line	494, "main.c"; 	return;
                                    1- 2610     	MGOTO	_00407_DS_
     0004 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2611     	.line	495, "main.c"; 	TMRH = 0x00;
     0005 02rr                      1- 2612     	CLRR	_TMRH
                                    1- 2613     	.line	496, "main.c"; 	TMR1 = 48;							//频率为110K
     0006 2130                      1- 2614     	MOVIA	0x30
     0007 00rr                      1- 2615     	SFUN	_TMR1
                                    1- 2616     	.line	499, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Div2;	// Enable Prescaler1, Prescaler1 dividing rate = 1:2, Timer1 clock source is instruction clock 
     0008 0200                      1- 2617     	CLRA	
     0009 00rr                      1- 2618     	SFUN	_T1CR2
                                    1- 2619     	.line	500, "main.c"; 	T1CR2 = C_TMR1_ClkSrc_Inst | C_PS1_Dis;
     000A 2108                      1- 2620     	MOVIA	0x08
     000B 00rr                      1- 2621     	SFUN	_T1CR2
                                    1- 2622     	.line	501, "main.c"; 	T1CR1 = C_PWM1_En | C_TMR1_Reload | C_TMR1_En;	// PWM1 output will be present on PB6 , PWM1 output is active high, reloaded from TMR1, non-stop mode
     000C 2183                      1- 2623     	MOVIA	0x83
     000D 00rr                      1- 2624     	SFUN	_T1CR1
     000E                           1- 2625     _00407_DS_:
                                    1- 2626     	.line	502, "main.c"; 	}
                                    1- 2627     	RETURN	
     000E 0010                      3-   40 m1      ret
                                    1- 2628     ; exit point of _pwm1Init
                                    1- 2630     ;***
                                    1- 2631     ;  pBlock Stats: dbName = C
                                    1- 2632     ;***
                                    1- 2633     ;has an exit
                                    1- 2634     ;functions called:
                                    1- 2635     ;   _delay
                                    1- 2636     ;   _LedInput
                                    1- 2637     ;   _delay
                                    1- 2638     ;   _LedInput
                                    1- 2639     ;1 compiler assigned register :
                                    1- 2640     ;   r0x105D
                                    1- 2641     ;; Starting pCode block
                                    1- 2642     .segment "code"; module=main, function=_LED6ON
     0000                           1- 2644     _LED6ON:
                                    1- 2645     ; 2 exit points
                                    1- 2646     	.line	483, "main.c"; 	L2OUT;
     0000 001r                      1- 2647     	IOSTR	_IOSTA
                                    1- 2648     	BANKSEL	r0x105D
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2649     	MOVAR	r0x105D
     0003 1Crr                      1- 2650     	BCR	r0x105D,0
     0004 01rr                      1- 2651     	MOVR	r0x105D,W
     0005 000r                      1- 2652     	IOST	_IOSTA
                                    1- 2653     	.line	484, "main.c"; 	L1OUT;
     0006 001r                      1- 2654     	IOSTR	_IOSTB
     0007 00rr                      1- 2655     	MOVAR	r0x105D
     0008 1Crr                      1- 2656     	BCR	r0x105D,1
     0009 01rr                      1- 2657     	MOVR	r0x105D,W
     000A 000r                      1- 2658     	IOST	_IOSTB
                                    1- 2659     	.line	485, "main.c"; 	L1H;
     000B 18rr                      1- 2660     	BSR	_PORTB,1
                                    1- 2661     	.line	486, "main.c"; 	L2L;
     000C 1Crr                      1- 2662     	BCR	_PORTA,0
                                    1- 2663     	.line	487, "main.c"; 	delay(100);
     000D 2164                      1- 2664     	MOVIA	0x64
                                    1- 2665     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2666     	.line	488, "main.c"; 	LedInput();
                                    1- 2667     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2668     	.line	489, "main.c"; 	}
                                    1- 2669     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2670     ; exit point of _LED6ON
                                    1- 2672     ;***
                                    1- 2673     ;  pBlock Stats: dbName = C
                                    1- 2674     ;***
                                    1- 2675     ;has an exit
                                    1- 2676     ;functions called:
                                    1- 2677     ;   _delay
                                    1- 2678     ;   _LedInput
                                    1- 2679     ;   _delay
                                    1- 2680     ;   _LedInput
                                    1- 2681     ;1 compiler assigned register :
                                    1- 2682     ;   r0x105E
                                    1- 2683     ;; Starting pCode block
                                    1- 2684     .segment "code"; module=main, function=_LED5ON
     0000                           1- 2686     _LED5ON:
                                    1- 2687     ; 2 exit points
                                    1- 2688     	.line	472, "main.c"; 	L2OUT;
     0000 001r                      1- 2689     	IOSTR	_IOSTA
                                    1- 2690     	BANKSEL	r0x105E
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2691     	MOVAR	r0x105E
     0003 1Crr                      1- 2692     	BCR	r0x105E,0
     0004 01rr                      1- 2693     	MOVR	r0x105E,W
     0005 000r                      1- 2694     	IOST	_IOSTA
                                    1- 2695     	.line	473, "main.c"; 	L1OUT;
     0006 001r                      1- 2696     	IOSTR	_IOSTB
     0007 00rr                      1- 2697     	MOVAR	r0x105E
     0008 1Crr                      1- 2698     	BCR	r0x105E,1
     0009 01rr                      1- 2699     	MOVR	r0x105E,W
     000A 000r                      1- 2700     	IOST	_IOSTB
                                    1- 2701     	.line	474, "main.c"; 	L2H;
     000B 18rr                      1- 2702     	BSR	_PORTA,0
                                    1- 2703     	.line	475, "main.c"; 	L1L;
     000C 1Crr                      1- 2704     	BCR	_PORTB,1
                                    1- 2705     	.line	476, "main.c"; 	delay(100);
     000D 2164                      1- 2706     	MOVIA	0x64
                                    1- 2707     	MCALL	_delay
     000E 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2708     	.line	477, "main.c"; 	LedInput();
                                    1- 2709     	MCALL	_LedInput
     000F 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2710     	.line	478, "main.c"; 	}
                                    1- 2711     	RETURN	
     0010 0010                      3-   40 m1      ret
                                    1- 2712     ; exit point of _LED5ON
                                    1- 2714     ;***
                                    1- 2715     ;  pBlock Stats: dbName = C
                                    1- 2716     ;***
                                    1- 2717     ;has an exit
                                    1- 2718     ;functions called:
                                    1- 2719     ;   _delay
                                    1- 2720     ;   _LedInput
                                    1- 2721     ;   _delay
                                    1- 2722     ;   _LedInput
                                    1- 2723     ;1 compiler assigned register :
                                    1- 2724     ;   r0x105F
                                    1- 2725     ;; Starting pCode block
                                    1- 2726     .segment "code"; module=main, function=_LED4ON
     0000                           1- 2728     _LED4ON:
                                    1- 2729     ; 2 exit points
                                    1- 2730     	.line	462, "main.c"; 	L3OUT;
     0000 001r                      1- 2731     	IOSTR	_IOSTB
                                    1- 2732     	BANKSEL	r0x105F
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2733     	MOVAR	r0x105F
     0003 21DE                      1- 2734     	MOVIA	0xde
     0004 10rr                      1- 2735     	ANDAR	r0x105F,F
     0005 01rr                      1- 2736     	MOVR	r0x105F,W
     0006 000r                      1- 2737     	IOST	_IOSTB
                                    1- 2738     	.line	463, "main.c"; 	L2OUT;
     0007 001r                      1- 2739     	IOSTR	_IOSTA
     0008 00rr                      1- 2740     	MOVAR	r0x105F
     0009 1Crr                      1- 2741     	BCR	r0x105F,0
     000A 01rr                      1- 2742     	MOVR	r0x105F,W
     000B 000r                      1- 2743     	IOST	_IOSTA
                                    1- 2744     	.line	464, "main.c"; 	L3H;
     000C 2121                      1- 2745     	MOVIA	0x21
     000D 11rr                      1- 2746     	IORAR	_PORTB,F
                                    1- 2747     	.line	465, "main.c"; 	L2L;
     000E 1Crr                      1- 2748     	BCR	_PORTA,0
                                    1- 2749     	.line	466, "main.c"; 	delay(100);
     000F 2164                      1- 2750     	MOVIA	0x64
                                    1- 2751     	MCALL	_delay
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2752     	.line	467, "main.c"; 	LedInput();
                                    1- 2753     	MCALL	_LedInput
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2754     	.line	468, "main.c"; 	}
                                    1- 2755     	RETURN	
     0012 0010                      3-   40 m1      ret
                                    1- 2756     ; exit point of _LED4ON
                                    1- 2758     ;***
                                    1- 2759     ;  pBlock Stats: dbName = C
                                    1- 2760     ;***
                                    1- 2761     ;has an exit
                                    1- 2762     ;functions called:
                                    1- 2763     ;   _delay
                                    1- 2764     ;   _LedInput
                                    1- 2765     ;   _delay
                                    1- 2766     ;   _LedInput
                                    1- 2767     ;1 compiler assigned register :
                                    1- 2768     ;   r0x1060
                                    1- 2769     ;; Starting pCode block
                                    1- 2770     .segment "code"; module=main, function=_LED3ON
     0000                           1- 2772     _LED3ON:
                                    1- 2773     ; 2 exit points
                                    1- 2774     	.line	452, "main.c"; 	L3OUT;
     0000 001r                      1- 2775     	IOSTR	_IOSTB
                                    1- 2776     	BANKSEL	r0x1060
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2777     	MOVAR	r0x1060
     0003 21DE                      1- 2778     	MOVIA	0xde
     0004 10rr                      1- 2779     	ANDAR	r0x1060,F
     0005 01rr                      1- 2780     	MOVR	r0x1060,W
     0006 000r                      1- 2781     	IOST	_IOSTB
                                    1- 2782     	.line	453, "main.c"; 	L1OUT;
     0007 001r                      1- 2783     	IOSTR	_IOSTB
     0008 00rr                      1- 2784     	MOVAR	r0x1060
     0009 1Crr                      1- 2785     	BCR	r0x1060,1
     000A 01rr                      1- 2786     	MOVR	r0x1060,W
     000B 000r                      1- 2787     	IOST	_IOSTB
                                    1- 2788     	.line	454, "main.c"; 	L1H;
     000C 18rr                      1- 2789     	BSR	_PORTB,1
                                    1- 2790     	.line	455, "main.c"; 	L3L;
     000D 21DE                      1- 2791     	MOVIA	0xde
     000E 10rr                      1- 2792     	ANDAR	_PORTB,F
                                    1- 2793     	.line	456, "main.c"; 	delay(100);
     000F 2164                      1- 2794     	MOVIA	0x64
                                    1- 2795     	MCALL	_delay
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2796     	.line	457, "main.c"; 	LedInput();
                                    1- 2797     	MCALL	_LedInput
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2798     	.line	458, "main.c"; 	}
                                    1- 2799     	RETURN	
     0012 0010                      3-   40 m1      ret
                                    1- 2800     ; exit point of _LED3ON
                                    1- 2802     ;***
                                    1- 2803     ;  pBlock Stats: dbName = C
                                    1- 2804     ;***
                                    1- 2805     ;has an exit
                                    1- 2806     ;functions called:
                                    1- 2807     ;   _delay
                                    1- 2808     ;   _LedInput
                                    1- 2809     ;   _delay
                                    1- 2810     ;   _LedInput
                                    1- 2811     ;1 compiler assigned register :
                                    1- 2812     ;   r0x1061
                                    1- 2813     ;; Starting pCode block
                                    1- 2814     .segment "code"; module=main, function=_LED2ON
     0000                           1- 2816     _LED2ON:
                                    1- 2817     ; 2 exit points
                                    1- 2818     	.line	442, "main.c"; 	L2OUT;
     0000 001r                      1- 2819     	IOSTR	_IOSTA
                                    1- 2820     	BANKSEL	r0x1061
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2821     	MOVAR	r0x1061
     0003 1Crr                      1- 2822     	BCR	r0x1061,0
     0004 01rr                      1- 2823     	MOVR	r0x1061,W
     0005 000r                      1- 2824     	IOST	_IOSTA
                                    1- 2825     	.line	443, "main.c"; 	L3OUT;
     0006 001r                      1- 2826     	IOSTR	_IOSTB
     0007 00rr                      1- 2827     	MOVAR	r0x1061
     0008 21DE                      1- 2828     	MOVIA	0xde
     0009 10rr                      1- 2829     	ANDAR	r0x1061,F
     000A 01rr                      1- 2830     	MOVR	r0x1061,W
     000B 000r                      1- 2831     	IOST	_IOSTB
                                    1- 2832     	.line	444, "main.c"; 	L2H;
     000C 18rr                      1- 2833     	BSR	_PORTA,0
                                    1- 2834     	.line	445, "main.c"; 	L3L;
     000D 21DE                      1- 2835     	MOVIA	0xde
     000E 10rr                      1- 2836     	ANDAR	_PORTB,F
                                    1- 2837     	.line	446, "main.c"; 	delay(100);
     000F 2164                      1- 2838     	MOVIA	0x64
                                    1- 2839     	MCALL	_delay
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2840     	.line	447, "main.c"; 	LedInput();
                                    1- 2841     	MCALL	_LedInput
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2842     	.line	448, "main.c"; 	}
                                    1- 2843     	RETURN	
     0012 0010                      3-   40 m1      ret
                                    1- 2844     ; exit point of _LED2ON
                                    1- 2846     ;***
                                    1- 2847     ;  pBlock Stats: dbName = C
                                    1- 2848     ;***
                                    1- 2849     ;has an exit
                                    1- 2850     ;functions called:
                                    1- 2851     ;   _delay
                                    1- 2852     ;   _LedInput
                                    1- 2853     ;   _delay
                                    1- 2854     ;   _LedInput
                                    1- 2855     ;1 compiler assigned register :
                                    1- 2856     ;   r0x1062
                                    1- 2857     ;; Starting pCode block
                                    1- 2858     .segment "code"; module=main, function=_LED1ON
     0000                           1- 2860     _LED1ON:
                                    1- 2861     ; 2 exit points
                                    1- 2862     	.line	432, "main.c"; 	L3OUT;
     0000 001r                      1- 2863     	IOSTR	_IOSTB
                                    1- 2864     	BANKSEL	r0x1062
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2865     	MOVAR	r0x1062
     0003 21DE                      1- 2866     	MOVIA	0xde
     0004 10rr                      1- 2867     	ANDAR	r0x1062,F
     0005 01rr                      1- 2868     	MOVR	r0x1062,W
     0006 000r                      1- 2869     	IOST	_IOSTB
                                    1- 2870     	.line	433, "main.c"; 	L1OUT;
     0007 001r                      1- 2871     	IOSTR	_IOSTB
     0008 00rr                      1- 2872     	MOVAR	r0x1062
     0009 1Crr                      1- 2873     	BCR	r0x1062,1
     000A 01rr                      1- 2874     	MOVR	r0x1062,W
     000B 000r                      1- 2875     	IOST	_IOSTB
                                    1- 2876     	.line	434, "main.c"; 	L3H;
     000C 2121                      1- 2877     	MOVIA	0x21
     000D 11rr                      1- 2878     	IORAR	_PORTB,F
                                    1- 2879     	.line	435, "main.c"; 	L1L;
     000E 1Crr                      1- 2880     	BCR	_PORTB,1
                                    1- 2881     	.line	436, "main.c"; 	delay(100);
     000F 2164                      1- 2882     	MOVIA	0x64
                                    1- 2883     	MCALL	_delay
     0010 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2884     	.line	437, "main.c"; 	LedInput();
                                    1- 2885     	MCALL	_LedInput
     0011 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 2886     	.line	438, "main.c"; 	}
                                    1- 2887     	RETURN	
     0012 0010                      3-   40 m1      ret
                                    1- 2888     ; exit point of _LED1ON
                                    1- 2890     ;***
                                    1- 2891     ;  pBlock Stats: dbName = C
                                    1- 2892     ;***
                                    1- 2893     ;has an exit
                                    1- 2894     ;1 compiler assigned register :
                                    1- 2895     ;   r0x105B
                                    1- 2896     ;; Starting pCode block
                                    1- 2897     .segment "code"; module=main, function=_LedInput
     0000                           1- 2899     _LedInput:
                                    1- 2900     ; 2 exit points
                                    1- 2901     	.line	424, "main.c"; 	IOSTA |= 0x01;
     0000 001r                      1- 2902     	IOSTR	_IOSTA
                                    1- 2903     	BANKSEL	r0x105B
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 2904     	MOVAR	r0x105B
     0003 18rr                      1- 2905     	BSR	r0x105B,0
     0004 01rr                      1- 2906     	MOVR	r0x105B,W
     0005 000r                      1- 2907     	IOST	_IOSTA
                                    1- 2908     	.line	425, "main.c"; 	IOSTB |= 0x23;
     0006 001r                      1- 2909     	IOSTR	_IOSTB
     0007 00rr                      1- 2910     	MOVAR	r0x105B
     0008 2123                      1- 2911     	MOVIA	0x23
     0009 11rr                      1- 2912     	IORAR	r0x105B,F
     000A 01rr                      1- 2913     	MOVR	r0x105B,W
     000B 000r                      1- 2914     	IOST	_IOSTB
                                    1- 2915     	.line	426, "main.c"; 	PORTA &= 0xFE;
     000C 1Crr                      1- 2916     	BCR	_PORTA,0
                                    1- 2917     	.line	427, "main.c"; 	PORTB &= 0xDC;
     000D 21DC                      1- 2918     	MOVIA	0xdc
     000E 10rr                      1- 2919     	ANDAR	_PORTB,F
                                    1- 2920     	.line	428, "main.c"; 	}
                                    1- 2921     	RETURN	
     000F 0010                      3-   40 m1      ret
                                    1- 2922     ; exit point of _LedInput
                                    1- 2924     ;***
                                    1- 2925     ;  pBlock Stats: dbName = C
                                    1- 2926     ;***
                                    1- 2927     ;has an exit
                                    1- 2928     ;functions called:
                                    1- 2929     ;   _LedInput
                                    1- 2930     ;   _LedInput
                                    1- 2931     ;   _LED6ON
                                    1- 2932     ;   _LED5ON
                                    1- 2933     ;   _LED4ON
                                    1- 2934     ;   _LED3ON
                                    1- 2935     ;   _LED2ON
                                    1- 2936     ;   _LED1ON
                                    1- 2937     ;   _LedInput
                                    1- 2938     ;   _LedInput
                                    1- 2939     ;   _LED6ON
                                    1- 2940     ;   _LED5ON
                                    1- 2941     ;   _LED4ON
                                    1- 2942     ;   _LED3ON
                                    1- 2943     ;   _LED2ON
                                    1- 2944     ;   _LED1ON
                                    1- 2945     ;; Starting pCode block
                                    1- 2946     .segment "code"; module=main, function=_ledShow
     0000                           1- 2948     _ledShow:
                                    1- 2949     ; 2 exit points
                                    1- 2950     	.line	366, "main.c"; 	if(ledDeadTime > 0 && workStep == 0)
                                    1- 2951     	BANKSEL	_ledDeadTime
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 01rr                      1- 2952     	MOVR	_ledDeadTime,W
     0002 0D03                      1- 2953     	BTRSC	STATUS,2
                                    1- 2954     	MGOTO	_00304_DS_
     0003 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2955     	BANKSEL	_workStep
     0004 rrrr                      3-  110 m1      .banksel ram_address
     0005 01rr                      1- 2956     	MOVR	_workStep,W
     0006 0903                      1- 2957     	BTRSS	STATUS,2
                                    1- 2958     	MGOTO	_00304_DS_
     0007 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2959     	.line	368, "main.c"; 	if(ledDeadTime % 2 == 0)
                                    1- 2960     	BANKSEL	_ledDeadTime
     0008 rrrr                      3-  110 m1      .banksel ram_address
     0009 0Crr                      1- 2961     	BTRSC	_ledDeadTime,0
                                    1- 2962     	MGOTO	_00301_DS_
     000A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2963     	.line	370, "main.c"; 	ledStep = 0;
                                    1- 2964     	BANKSEL	_ledStep
     000B rrrr                      3-  110 m1      .banksel ram_address
     000C 02rr                      1- 2965     	CLRR	_ledStep
                                    1- 2966     	MGOTO	_00304_DS_
     000D 3rrr                      3-   63 m1      LGOTO rom_address
     000E                           1- 2967     _00301_DS_:
                                    1- 2968     	.line	374, "main.c"; 	ledStep = tempLedStep;
                                    1- 2969     	BANKSEL	_tempLedStep
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 01rr                      1- 2970     	MOVR	_tempLedStep,W
                                    1- 2971     	BANKSEL	_ledStep
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 00rr                      1- 2972     	MOVAR	_ledStep
     0012                           1- 2973     _00304_DS_:
                                    1- 2974     	.line	378, "main.c"; 	if(ledLightTime > 0 && pwStep > 0)
                                    1- 2975     	BANKSEL	_ledLightTime
     0012 rrrr                      3-  110 m1      .banksel ram_address
     0013 01rr                      1- 2976     	MOVR	_ledLightTime,W
     0014 0D03                      1- 2977     	BTRSC	STATUS,2
                                    1- 2978     	MGOTO	_00312_DS_
     0015 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2979     	BANKSEL	_pwStep
     0016 rrrr                      3-  110 m1      .banksel ram_address
     0017 01rr                      1- 2980     	MOVR	_pwStep,W
     0018 0D03                      1- 2981     	BTRSC	STATUS,2
                                    1- 2982     	MGOTO	_00312_DS_
     0019 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2983     	.line	380, "main.c"; 	if(ledLightTime > 0)
                                    1- 2984     	BANKSEL	_ledLightTime
     001A rrrr                      3-  110 m1      .banksel ram_address
     001B 01rr                      1- 2985     	MOVR	_ledLightTime,W
     001C 0D03                      1- 2986     	BTRSC	STATUS,2
                                    1- 2987     	MGOTO	_00312_DS_
     001D 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2988     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 2989     ;;unsigned compare: left >= lit (0x7=7), size=1
                                    1- 2990     	.line	382, "main.c"; 	if(pwStep > 6 )
     001E 2107                      1- 2991     	MOVIA	0x07
                                    1- 2992     	BANKSEL	_pwStep
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 04rr                      1- 2993     	SUBAR	_pwStep,W
     0021 0803                      1- 2994     	BTRSS	STATUS,0
                                    1- 2995     	MGOTO	_00307_DS_
     0022 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 2996     	.line	383, "main.c"; 	ledStep = 6;
     0023 2106                      1- 2997     	MOVIA	0x06
                                    1- 2998     	BANKSEL	_ledStep
     0024 rrrr                      3-  110 m1      .banksel ram_address
     0025 00rr                      1- 2999     	MOVAR	_ledStep
                                    1- 3000     	MGOTO	_00312_DS_
     0026 3rrr                      3-   63 m1      LGOTO rom_address
     0027                           1- 3001     _00307_DS_:
                                    1- 3002     	.line	385, "main.c"; 	ledStep = pwStep;
                                    1- 3003     	BANKSEL	_pwStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 3004     	MOVR	_pwStep,W
                                    1- 3005     	BANKSEL	_ledStep
     0029 rrrr                      3-  110 m1      .banksel ram_address
     002A 00rr                      1- 3006     	MOVAR	_ledStep
     002B                           1- 3007     _00312_DS_:
                                    1- 3008     	.line	388, "main.c"; 	if(shanshuoTime > 0 && workStep > 0 && pwStep == 0)
                                    1- 3009     	BANKSEL	_shanshuoTime
     002B rrrr                      3-  110 m1      .banksel ram_address
     002C 01rr                      1- 3010     	MOVR	_shanshuoTime,W
     002D 0D03                      1- 3011     	BTRSC	STATUS,2
                                    1- 3012     	MGOTO	_00318_DS_
     002E 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3013     	BANKSEL	_workStep
     002F rrrr                      3-  110 m1      .banksel ram_address
     0030 01rr                      1- 3014     	MOVR	_workStep,W
     0031 0D03                      1- 3015     	BTRSC	STATUS,2
                                    1- 3016     	MGOTO	_00318_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3017     	BANKSEL	_pwStep
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 01rr                      1- 3018     	MOVR	_pwStep,W
     0035 0903                      1- 3019     	BTRSS	STATUS,2
                                    1- 3020     	MGOTO	_00318_DS_
     0036 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3021     ;;unsigned compare: left < lit (0x32=50), size=1
                                    1- 3022     	.line	390, "main.c"; 	if(count1s < 50)
     0037 2132                      1- 3023     	MOVIA	0x32
                                    1- 3024     	BANKSEL	_count1s
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 04rr                      1- 3025     	SUBAR	_count1s,W
     003A 0C03                      1- 3026     	BTRSC	STATUS,0
                                    1- 3027     	MGOTO	_00315_DS_
     003B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3028     	.line	391, "main.c"; 	ledStep = workStep;
                                    1- 3029     	BANKSEL	_workStep
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 01rr                      1- 3030     	MOVR	_workStep,W
                                    1- 3031     	BANKSEL	_ledStep
     003E rrrr                      3-  110 m1      .banksel ram_address
     003F 00rr                      1- 3032     	MOVAR	_ledStep
                                    1- 3033     	MGOTO	_00318_DS_
     0040 3rrr                      3-   63 m1      LGOTO rom_address
     0041                           1- 3034     _00315_DS_:
                                    1- 3035     	.line	393, "main.c"; 	ledStep = 0;
                                    1- 3036     	BANKSEL	_ledStep
     0041 rrrr                      3-  110 m1      .banksel ram_address
     0042 02rr                      1- 3037     	CLRR	_ledStep
     0043                           1- 3038     _00318_DS_:
                                    1- 3039     	.line	396, "main.c"; 	LedInput();
                                    1- 3040     	MCALL	_LedInput
     0043 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3041     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3042     ;;unsigned compare: left >= lit (0x9=9), size=1
                                    1- 3043     	.line	397, "main.c"; 	switch(ledStep)
     0044 2109                      1- 3044     	MOVIA	0x09
                                    1- 3045     	BANKSEL	_ledStep
     0045 rrrr                      3-  110 m1      .banksel ram_address
     0046 04rr                      1- 3046     	SUBAR	_ledStep,W
     0047 0C03                      1- 3047     	BTRSC	STATUS,0
                                    1- 3048     	MGOTO	_00331_DS_
     0048 3rrr                      3-   63 m1      LGOTO rom_address
     0049 21rr                      1- 3049     	MOVIA	((_00372_DS_ >> 8) & 0xff)
     004A 008A                      1- 3050     	MOVAR	PCHBUF
     004B 01rr                      1- 3051     	MOVR	_ledStep,W
     004C 25rr                      1- 3052     	ADDIA	_00372_DS_
     004D 0C03                      1- 3053     	BTRSC	STATUS,0
     004E 058A                      1- 3054     	INCR	PCHBUF,F
     004F 0082                      1- 3055     	MOVAR	PCL
     0050                           1- 3056     _00372_DS_:
                                    1- 3057     	MGOTO	_00321_DS_
     0050 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3058     	MGOTO	_00329_DS_
     0051 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3059     	MGOTO	_00328_DS_
     0052 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3060     	MGOTO	_00327_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3061     	MGOTO	_00326_DS_
     0054 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3062     	MGOTO	_00325_DS_
     0055 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3063     	MGOTO	_00324_DS_
     0056 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3064     	MGOTO	_00324_DS_
     0057 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3065     	MGOTO	_00324_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
     0059                           1- 3066     _00321_DS_:
                                    1- 3067     	.line	400, "main.c"; 	LedInput();
                                    1- 3068     	MCALL	_LedInput
     0059 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3069     	.line	401, "main.c"; 	break;
                                    1- 3070     	MGOTO	_00331_DS_
     005A 3rrr                      3-   63 m1      LGOTO rom_address
     005B                           1- 3071     _00324_DS_:
                                    1- 3072     	.line	405, "main.c"; 	LED6ON();
                                    1- 3073     	MCALL	_LED6ON
     005B 2rrr                      3-   66 m1      LCALL rom_address
     005C                           1- 3074     _00325_DS_:
                                    1- 3075     	.line	407, "main.c"; 	LED5ON();
                                    1- 3076     	MCALL	_LED5ON
     005C 2rrr                      3-   66 m1      LCALL rom_address
     005D                           1- 3077     _00326_DS_:
                                    1- 3078     	.line	409, "main.c"; 	LED4ON();
                                    1- 3079     	MCALL	_LED4ON
     005D 2rrr                      3-   66 m1      LCALL rom_address
     005E                           1- 3080     _00327_DS_:
                                    1- 3081     	.line	411, "main.c"; 	LED3ON();
                                    1- 3082     	MCALL	_LED3ON
     005E 2rrr                      3-   66 m1      LCALL rom_address
     005F                           1- 3083     _00328_DS_:
                                    1- 3084     	.line	413, "main.c"; 	LED2ON();
                                    1- 3085     	MCALL	_LED2ON
     005F 2rrr                      3-   66 m1      LCALL rom_address
     0060                           1- 3086     _00329_DS_:
                                    1- 3087     	.line	415, "main.c"; 	LED1ON();
                                    1- 3088     	MCALL	_LED1ON
     0060 2rrr                      3-   66 m1      LCALL rom_address
     0061                           1- 3089     _00331_DS_:
                                    1- 3090     	.line	418, "main.c"; 	}
                                    1- 3091     	RETURN	
     0061 0010                      3-   40 m1      ret
                                    1- 3092     ; exit point of _ledShow
                                    1- 3094     ;***
                                    1- 3095     ;  pBlock Stats: dbName = C
                                    1- 3096     ;***
                                    1- 3097     ;has an exit
                                    1- 3098     ;functions called:
                                    1- 3099     ;   _LedInput
                                    1- 3100     ;   _LedInput
                                    1- 3101     ;; Starting pCode block
                                    1- 3102     .segment "code"; module=main, function=_initSys
     0000                           1- 3104     _initSys:
                                    1- 3105     ; 2 exit points
                                    1- 3106     	.line	334, "main.c"; 	DISI();
     0000 0013                      1- 3107     	DISI
                                    1- 3108     	.line	335, "main.c"; 	IOSTA = C_PA7_Input | C_PA5_Input | C_PA4_Input | C_PA3_Input | C_PA2_Input | C_PA1_Input;
     0001 21BE                      1- 3109     	MOVIA	0xbe
     0002 000r                      1- 3110     	IOST	_IOSTA
                                    1- 3111     	.line	336, "main.c"; 	IOSTB = C_PB3_Input;
     0003 2108                      1- 3112     	MOVIA	0x08
     0004 000r                      1- 3113     	IOST	_IOSTB
                                    1- 3114     	.line	337, "main.c"; 	PORTB = 0x00;
     0005 02rr                      1- 3115     	CLRR	_PORTB
                                    1- 3116     	.line	338, "main.c"; 	PORTA = 0x00;
     0006 02rr                      1- 3117     	CLRR	_PORTA
                                    1- 3118     	.line	339, "main.c"; 	LedInput();
                                    1- 3119     	MCALL	_LedInput
     0007 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3120     	.line	340, "main.c"; 	APHCON = 0x7F;
     0008 217F                      1- 3121     	MOVIA	0x7f
     0009 000r                      1- 3122     	IOST	_APHCON
                                    1- 3123     	.line	341, "main.c"; 	BPHCON = 0xFF;
     000A 21FF                      1- 3124     	MOVIA	0xff
     000B 00rr                      1- 3125     	MOVAR	_BPHCON
                                    1- 3126     	.line	342, "main.c"; 	ABPLCON = 0xFF;
     000C 00rr                      1- 3127     	MOVAR	_ABPLCON
                                    1- 3128     	.line	344, "main.c"; 	INTE =  C_INT_TMR0 ;	// Enable Timer0、Timer1、WDT overflow interrupt
     000D 2101                      1- 3129     	MOVIA	0x01
     000E 00rr                      1- 3130     	MOVAR	_INTE
                                    1- 3131     	.line	346, "main.c"; 	PCON1 = C_TMR0_Dis;
     000F 0200                      1- 3132     	CLRA	
     0010 000r                      1- 3133     	IOST	_PCON1
                                    1- 3134     	.line	348, "main.c"; 	TMR0 = 55;
     0011 2137                      1- 3135     	MOVIA	0x37
     0012 00rr                      1- 3136     	MOVAR	_TMR0
                                    1- 3137     	.line	349, "main.c"; 	T0MD =  C_PS0_TMR0 | C_PS0_Div4;
     0013 2101                      1- 3138     	MOVIA	0x01
     0014 0003                      1- 3139     	T0MD	
                                    1- 3140     	.line	351, "main.c"; 	PCON1 = C_TMR0_En;
     0015 000r                      1- 3141     	IOST	_PCON1
                                    1- 3142     	.line	354, "main.c"; 	PCON = C_WDT_En | C_LVR_En | 0x10;				// Enable WDT ,  Enable LVR
     0016 2198                      1- 3143     	MOVIA	0x98
     0017 00rr                      1- 3144     	MOVAR	_PCON
                                    1- 3145     	.line	357, "main.c"; 	PCON1 = C_TMR0_En;						// Enable Timer0
     0018 2101                      1- 3146     	MOVIA	0x01
     0019 000r                      1- 3147     	IOST	_PCON1
                                    1- 3148     	.line	358, "main.c"; 	ENI();
     001A 0004                      1- 3149     	ENI
                                    1- 3150     	.line	359, "main.c"; 	}
                                    1- 3151     	RETURN	
     001B 0010                      3-   40 m1      ret
                                    1- 3152     ; exit point of _initSys
                                    1- 3154     ;***
                                    1- 3155     ;  pBlock Stats: dbName = C
                                    1- 3156     ;***
                                    1- 3157     ;has an exit
                                    1- 3158     ;functions called:
                                    1- 3159     ;   _pwmStop
                                    1- 3160     ;   _pwmStop
                                    1- 3161     ;; Starting pCode block
                                    1- 3162     .segment "code"; module=main, function=_powerOff
     0000                           1- 3164     _powerOff:
                                    1- 3165     ; 2 exit points
                                    1- 3166     	.line	325, "main.c"; 	workStep = 0;
                                    1- 3167     	BANKSEL	_workStep
     0000 rrrr                      3-  110 m1      .banksel ram_address
     0001 02rr                      1- 3168     	CLRR	_workStep
                                    1- 3169     	.line	326, "main.c"; 	pwmStop();
                                    1- 3170     	MCALL	_pwmStop
     0002 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3171     	.line	328, "main.c"; 	}
                                    1- 3172     	RETURN	
     0003 0010                      3-   40 m1      ret
                                    1- 3173     ; exit point of _powerOff
                                    1- 3175     ;***
                                    1- 3176     ;  pBlock Stats: dbName = C
                                    1- 3177     ;***
                                    1- 3178     ;has an exit
                                    1- 3179     ;functions called:
                                    1- 3180     ;   _keyRead
                                    1- 3181     ;   _pwmInit
                                    1- 3182     ;   _powerOff
                                    1- 3183     ;   _pwmInit
                                    1- 3184     ;   _keyRead
                                    1- 3185     ;   _pwmInit
                                    1- 3186     ;   _powerOff
                                    1- 3187     ;   _pwmInit
                                    1- 3188     ;1 compiler assigned register :
                                    1- 3189     ;   r0x1063
                                    1- 3190     ;; Starting pCode block
                                    1- 3191     .segment "code"; module=main, function=_keyCtr
                                    1- 3193     ;local variable name mapping:
     0000                           1- 3195     _keyCtr:
                                    1- 3196     ; 2 exit points
                                    1- 3197     	.line	252, "main.c"; 	char kclick = keyRead(0x80 & (~PORTA));
     0000 07rr                      1- 3198     	COMR	_PORTA,W
                                    1- 3199     	BANKSEL	r0x1063
     0001 rrrr                      3-  110 m1      .banksel ram_address
     0002 00rr                      1- 3200     	MOVAR	r0x1063
     0003 2180                      1- 3201     	MOVIA	0x80
     0004 10rr                      1- 3202     	ANDAR	r0x1063,F
     0005 01rr                      1- 3203     	MOVR	r0x1063,W
                                    1- 3204     	MCALL	_keyRead
     0006 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3205     	BANKSEL	r0x1063
     0007 rrrr                      3-  110 m1      .banksel ram_address
     0008 00rr                      1- 3206     	MOVAR	r0x1063
                                    1- 3207     	.line	253, "main.c"; 	if(kclick == 1)
     0009 2401                      1- 3208     	XORIA	0x01
     000A 0903                      1- 3209     	BTRSS	STATUS,2
                                    1- 3210     	MGOTO	_00285_DS_
     000B 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3211     	.line	255, "main.c"; 	count500ms = 0;
                                    1- 3212     	BANKSEL	_count500ms
     000C rrrr                      3-  110 m1      .banksel ram_address
     000D 02rr                      1- 3213     	CLRR	_count500ms
                                    1- 3214     	.line	256, "main.c"; 	ledLightTime = 0;
                                    1- 3215     	BANKSEL	_ledLightTime
     000E rrrr                      3-  110 m1      .banksel ram_address
     000F 02rr                      1- 3216     	CLRR	_ledLightTime
                                    1- 3217     	.line	257, "main.c"; 	count900s = 0;
                                    1- 3218     	BANKSEL	_count900s
     0010 rrrr                      3-  110 m1      .banksel ram_address
     0011 02rr                      1- 3219     	CLRR	_count900s
     0012 02rr                      1- 3220     	CLRR	(_count900s + 1)
                                    1- 3221     	.line	258, "main.c"; 	if(pwStep == 0 && workStep == 0)
                                    1- 3222     	BANKSEL	_pwStep
     0013 rrrr                      3-  110 m1      .banksel ram_address
     0014 01rr                      1- 3223     	MOVR	_pwStep,W
     0015 0903                      1- 3224     	BTRSS	STATUS,2
                                    1- 3225     	MGOTO	_00250_DS_
     0016 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3226     	BANKSEL	_workStep
     0017 rrrr                      3-  110 m1      .banksel ram_address
     0018 01rr                      1- 3227     	MOVR	_workStep,W
     0019 0903                      1- 3228     	BTRSS	STATUS,2
                                    1- 3229     	MGOTO	_00250_DS_
     001A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3230     	.line	260, "main.c"; 	sleepTime = 0;
                                    1- 3231     	BANKSEL	_sleepTime
     001B rrrr                      3-  110 m1      .banksel ram_address
     001C 02rr                      1- 3232     	CLRR	_sleepTime
     001D 02rr                      1- 3233     	CLRR	(_sleepTime + 1)
                                    1- 3234     	.line	261, "main.c"; 	return;
                                    1- 3235     	MGOTO	_00287_DS_
     001E 3rrr                      3-   63 m1      LGOTO rom_address
     001F                           1- 3236     _00250_DS_:
                                    1- 3237     	.line	263, "main.c"; 	ledTime = 0;
                                    1- 3238     	BANKSEL	_ledTime
     001F rrrr                      3-  110 m1      .banksel ram_address
     0020 02rr                      1- 3239     	CLRR	_ledTime
                                    1- 3240     	.line	264, "main.c"; 	if(++workStep > 6)
                                    1- 3241     	BANKSEL	_workStep
     0021 rrrr                      3-  110 m1      .banksel ram_address
     0022 05rr                      1- 3242     	INCR	_workStep,F
                                    1- 3243     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 3244     ;;unsigned compare: left >= lit (0x7=7), size=1
     0023 2107                      1- 3245     	MOVIA	0x07
     0024 04rr                      1- 3246     	SUBAR	_workStep,W
     0025 0C03                      1- 3247     	BTRSC	STATUS,0
                                    1- 3248     	.line	265, "main.c"; 	workStep = 0;
     0026 02rr                      1- 3249     	CLRR	_workStep
                                    1- 3250     	.line	266, "main.c"; 	if(pwStep == 0)
                                    1- 3251     	BANKSEL	_pwStep
     0027 rrrr                      3-  110 m1      .banksel ram_address
     0028 01rr                      1- 3252     	MOVR	_pwStep,W
     0029 0903                      1- 3253     	BTRSS	STATUS,2
                                    1- 3254     	MGOTO	_00255_DS_
     002A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3255     	.line	267, "main.c"; 	shanshuoTime = 10;
     002B 210A                      1- 3256     	MOVIA	0x0a
                                    1- 3257     	BANKSEL	_shanshuoTime
     002C rrrr                      3-  110 m1      .banksel ram_address
     002D 00rr                      1- 3258     	MOVAR	_shanshuoTime
     002E                           1- 3259     _00255_DS_:
                                    1- 3260     	.line	268, "main.c"; 	if(workStep == 1)
                                    1- 3261     	BANKSEL	_workStep
     002E rrrr                      3-  110 m1      .banksel ram_address
     002F 01rr                      1- 3262     	MOVR	_workStep,W
     0030 2401                      1- 3263     	XORIA	0x01
     0031 0903                      1- 3264     	BTRSS	STATUS,2
                                    1- 3265     	MGOTO	_00271_DS_
     0032 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3266     	.line	270, "main.c"; 	ledLightTime = 0;
                                    1- 3267     	BANKSEL	_ledLightTime
     0033 rrrr                      3-  110 m1      .banksel ram_address
     0034 02rr                      1- 3268     	CLRR	_ledLightTime
                                    1- 3269     	.line	271, "main.c"; 	ledStep = 1;
     0035 2101                      1- 3270     	MOVIA	0x01
                                    1- 3271     	BANKSEL	_ledStep
     0036 rrrr                      3-  110 m1      .banksel ram_address
     0037 00rr                      1- 3272     	MOVAR	_ledStep
                                    1- 3273     	.line	272, "main.c"; 	workStep = 1;
                                    1- 3274     	BANKSEL	_workStep
     0038 rrrr                      3-  110 m1      .banksel ram_address
     0039 00rr                      1- 3275     	MOVAR	_workStep
                                    1- 3276     	.line	273, "main.c"; 	PWM2DUTY = 85;
     003A 2155                      1- 3277     	MOVIA	0x55
     003B 00rr                      1- 3278     	SFUN	_PWM2DUTY
                                    1- 3279     	.line	274, "main.c"; 	currentDuty = 85;
                                    1- 3280     	BANKSEL	_currentDuty
     003C rrrr                      3-  110 m1      .banksel ram_address
     003D 00rr                      1- 3281     	MOVAR	_currentDuty
                                    1- 3282     	.line	275, "main.c"; 	maxDuty = 77;
     003E 214D                      1- 3283     	MOVIA	0x4d
                                    1- 3284     	BANKSEL	_maxDuty
     003F rrrr                      3-  110 m1      .banksel ram_address
     0040 00rr                      1- 3285     	MOVAR	_maxDuty
                                    1- 3286     	MGOTO	_00272_DS_
     0041 3rrr                      3-   63 m1      LGOTO rom_address
     0042                           1- 3287     _00271_DS_:
                                    1- 3288     	.line	277, "main.c"; 	else if(workStep == 2)
                                    1- 3289     	BANKSEL	_workStep
     0042 rrrr                      3-  110 m1      .banksel ram_address
     0043 01rr                      1- 3290     	MOVR	_workStep,W
     0044 2402                      1- 3291     	XORIA	0x02
     0045 0903                      1- 3292     	BTRSS	STATUS,2
                                    1- 3293     	MGOTO	_00268_DS_
     0046 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3294     	.line	278, "main.c"; 	maxDuty = 81;
     0047 2151                      1- 3295     	MOVIA	0x51
                                    1- 3296     	BANKSEL	_maxDuty
     0048 rrrr                      3-  110 m1      .banksel ram_address
     0049 00rr                      1- 3297     	MOVAR	_maxDuty
                                    1- 3298     	MGOTO	_00272_DS_
     004A 3rrr                      3-   63 m1      LGOTO rom_address
     004B                           1- 3299     _00268_DS_:
                                    1- 3300     	.line	279, "main.c"; 	else if(workStep == 3)
                                    1- 3301     	BANKSEL	_workStep
     004B rrrr                      3-  110 m1      .banksel ram_address
     004C 01rr                      1- 3302     	MOVR	_workStep,W
     004D 2403                      1- 3303     	XORIA	0x03
     004E 0903                      1- 3304     	BTRSS	STATUS,2
                                    1- 3305     	MGOTO	_00265_DS_
     004F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3306     	.line	280, "main.c"; 	maxDuty = 85;
     0050 2155                      1- 3307     	MOVIA	0x55
                                    1- 3308     	BANKSEL	_maxDuty
     0051 rrrr                      3-  110 m1      .banksel ram_address
     0052 00rr                      1- 3309     	MOVAR	_maxDuty
                                    1- 3310     	MGOTO	_00272_DS_
     0053 3rrr                      3-   63 m1      LGOTO rom_address
     0054                           1- 3311     _00265_DS_:
                                    1- 3312     	.line	281, "main.c"; 	else if(workStep == 4)
                                    1- 3313     	BANKSEL	_workStep
     0054 rrrr                      3-  110 m1      .banksel ram_address
     0055 01rr                      1- 3314     	MOVR	_workStep,W
     0056 2404                      1- 3315     	XORIA	0x04
     0057 0903                      1- 3316     	BTRSS	STATUS,2
                                    1- 3317     	MGOTO	_00262_DS_
     0058 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3318     	.line	282, "main.c"; 	maxDuty = 90;
     0059 215A                      1- 3319     	MOVIA	0x5a
                                    1- 3320     	BANKSEL	_maxDuty
     005A rrrr                      3-  110 m1      .banksel ram_address
     005B 00rr                      1- 3321     	MOVAR	_maxDuty
                                    1- 3322     	MGOTO	_00272_DS_
     005C 3rrr                      3-   63 m1      LGOTO rom_address
     005D                           1- 3323     _00262_DS_:
                                    1- 3324     	.line	283, "main.c"; 	else if(workStep == 5)
                                    1- 3325     	BANKSEL	_workStep
     005D rrrr                      3-  110 m1      .banksel ram_address
     005E 01rr                      1- 3326     	MOVR	_workStep,W
     005F 2405                      1- 3327     	XORIA	0x05
     0060 0903                      1- 3328     	BTRSS	STATUS,2
                                    1- 3329     	MGOTO	_00259_DS_
     0061 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3330     	.line	284, "main.c"; 	maxDuty = 93;
     0062 215D                      1- 3331     	MOVIA	0x5d
                                    1- 3332     	BANKSEL	_maxDuty
     0063 rrrr                      3-  110 m1      .banksel ram_address
     0064 00rr                      1- 3333     	MOVAR	_maxDuty
                                    1- 3334     	MGOTO	_00272_DS_
     0065 3rrr                      3-   63 m1      LGOTO rom_address
     0066                           1- 3335     _00259_DS_:
                                    1- 3336     	.line	285, "main.c"; 	else if(workStep == 6)
                                    1- 3337     	BANKSEL	_workStep
     0066 rrrr                      3-  110 m1      .banksel ram_address
     0067 01rr                      1- 3338     	MOVR	_workStep,W
     0068 2406                      1- 3339     	XORIA	0x06
     0069 0903                      1- 3340     	BTRSS	STATUS,2
                                    1- 3341     	MGOTO	_00272_DS_
     006A 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3342     	.line	286, "main.c"; 	maxDuty = 97;
     006B 2161                      1- 3343     	MOVIA	0x61
                                    1- 3344     	BANKSEL	_maxDuty
     006C rrrr                      3-  110 m1      .banksel ram_address
     006D 00rr                      1- 3345     	MOVAR	_maxDuty
     006E                           1- 3346     _00272_DS_:
                                    1- 3347     	.line	287, "main.c"; 	if(workStep > 0)
                                    1- 3348     	BANKSEL	_workStep
     006E rrrr                      3-  110 m1      .banksel ram_address
     006F 01rr                      1- 3349     	MOVR	_workStep,W
     0070 0D03                      1- 3350     	BTRSC	STATUS,2
                                    1- 3351     	MGOTO	_00274_DS_
     0071 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3352     	.line	289, "main.c"; 	PWM2DUTY = maxDuty;
                                    1- 3353     	BANKSEL	_maxDuty
     0072 rrrr                      3-  110 m1      .banksel ram_address
     0073 01rr                      1- 3354     	MOVR	_maxDuty,W
     0074 00rr                      1- 3355     	SFUN	_PWM2DUTY
                                    1- 3356     	.line	290, "main.c"; 	pwmInit();
                                    1- 3357     	MCALL	_pwmInit
     0075 2rrr                      3-   66 m1      LCALL rom_address
     0076                           1- 3358     _00274_DS_:
                                    1- 3359     	.line	292, "main.c"; 	ledStep = workStep;
                                    1- 3360     	BANKSEL	_workStep
     0076 rrrr                      3-  110 m1      .banksel ram_address
     0077 01rr                      1- 3361     	MOVR	_workStep,W
                                    1- 3362     	BANKSEL	_ledStep
     0078 rrrr                      3-  110 m1      .banksel ram_address
     0079 00rr                      1- 3363     	MOVAR	_ledStep
                                    1- 3364     	MGOTO	_00287_DS_
     007A 3rrr                      3-   63 m1      LGOTO rom_address
     007B                           1- 3365     _00285_DS_:
                                    1- 3366     	.line	294, "main.c"; 	else if(kclick == 2)
                                    1- 3367     	BANKSEL	r0x1063
     007B rrrr                      3-  110 m1      .banksel ram_address
     007C 01rr                      1- 3368     	MOVR	r0x1063,W
     007D 2402                      1- 3369     	XORIA	0x02
     007E 0903                      1- 3370     	BTRSS	STATUS,2
                                    1- 3371     	MGOTO	_00287_DS_
     007F 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3372     	.line	296, "main.c"; 	if(workStep > 0)
                                    1- 3373     	BANKSEL	_workStep
     0080 rrrr                      3-  110 m1      .banksel ram_address
     0081 01rr                      1- 3374     	MOVR	_workStep,W
     0082 0D03                      1- 3375     	BTRSC	STATUS,2
                                    1- 3376     	MGOTO	_00280_DS_
     0083 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3377     	.line	298, "main.c"; 	powerOff();
                                    1- 3378     	MCALL	_powerOff
     0084 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3379     	MGOTO	_00281_DS_
     0085 3rrr                      3-   63 m1      LGOTO rom_address
     0086                           1- 3380     _00280_DS_:
                                    1- 3381     	.line	302, "main.c"; 	if(pwStep == 0)
                                    1- 3382     	BANKSEL	_pwStep
     0086 rrrr                      3-  110 m1      .banksel ram_address
     0087 01rr                      1- 3383     	MOVR	_pwStep,W
     0088 0903                      1- 3384     	BTRSS	STATUS,2
                                    1- 3385     	MGOTO	_00276_DS_
     0089 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3386     	.line	304, "main.c"; 	sleepTime = 0;
                                    1- 3387     	BANKSEL	_sleepTime
     008A rrrr                      3-  110 m1      .banksel ram_address
     008B 02rr                      1- 3388     	CLRR	_sleepTime
     008C 02rr                      1- 3389     	CLRR	(_sleepTime + 1)
                                    1- 3390     	.line	305, "main.c"; 	return;
                                    1- 3391     	MGOTO	_00287_DS_
     008D 3rrr                      3-   63 m1      LGOTO rom_address
     008E                           1- 3392     _00276_DS_:
                                    1- 3393     	.line	307, "main.c"; 	ledLightTime = 0;
                                    1- 3394     	BANKSEL	_ledLightTime
     008E rrrr                      3-  110 m1      .banksel ram_address
     008F 02rr                      1- 3395     	CLRR	_ledLightTime
                                    1- 3396     	.line	308, "main.c"; 	ledStep = 1;
     0090 2101                      1- 3397     	MOVIA	0x01
                                    1- 3398     	BANKSEL	_ledStep
     0091 rrrr                      3-  110 m1      .banksel ram_address
     0092 00rr                      1- 3399     	MOVAR	_ledStep
                                    1- 3400     	.line	309, "main.c"; 	workStep = 1;
                                    1- 3401     	BANKSEL	_workStep
     0093 rrrr                      3-  110 m1      .banksel ram_address
     0094 00rr                      1- 3402     	MOVAR	_workStep
                                    1- 3403     	.line	310, "main.c"; 	PWM2DUTY = 85;
     0095 2155                      1- 3404     	MOVIA	0x55
     0096 00rr                      1- 3405     	SFUN	_PWM2DUTY
                                    1- 3406     	.line	311, "main.c"; 	currentDuty = 85;
                                    1- 3407     	BANKSEL	_currentDuty
     0097 rrrr                      3-  110 m1      .banksel ram_address
     0098 00rr                      1- 3408     	MOVAR	_currentDuty
                                    1- 3409     	.line	312, "main.c"; 	maxDuty = 77;
     0099 214D                      1- 3410     	MOVIA	0x4d
                                    1- 3411     	BANKSEL	_maxDuty
     009A rrrr                      3-  110 m1      .banksel ram_address
     009B 00rr                      1- 3412     	MOVAR	_maxDuty
                                    1- 3413     	.line	313, "main.c"; 	pwmInit();
                                    1- 3414     	MCALL	_pwmInit
     009C 2rrr                      3-   66 m1      LCALL rom_address
                                    1- 3415     	.line	314, "main.c"; 	if(pwStep == 0)
                                    1- 3416     	BANKSEL	_pwStep
     009D rrrr                      3-  110 m1      .banksel ram_address
     009E 01rr                      1- 3417     	MOVR	_pwStep,W
     009F 0903                      1- 3418     	BTRSS	STATUS,2
                                    1- 3419     	MGOTO	_00281_DS_
     00A0 3rrr                      3-   63 m1      LGOTO rom_address
                                    1- 3420     	.line	315, "main.c"; 	shanshuoTime = 10;
     00A1 210A                      1- 3421     	MOVIA	0x0a
                                    1- 3422     	BANKSEL	_shanshuoTime
     00A2 rrrr                      3-  110 m1      .banksel ram_address
     00A3 00rr                      1- 3423     	MOVAR	_shanshuoTime
     00A4                           1- 3424     _00281_DS_:
                                    1- 3425     	.line	318, "main.c"; 	ledStep = workStep;
                                    1- 3426     	BANKSEL	_workStep
     00A4 rrrr                      3-  110 m1      .banksel ram_address
     00A5 01rr                      1- 3427     	MOVR	_workStep,W
                                    1- 3428     	BANKSEL	_ledStep
     00A6 rrrr                      3-  110 m1      .banksel ram_address
     00A7 00rr                      1- 3429     	MOVAR	_ledStep
     00A8                           1- 3430     _00287_DS_:
                                    1- 3431     	.line	320, "main.c"; 	}
                                    1- 3432     	RETURN	
     00A8 0010                      3-   40 m1      ret
                                    1- 3433     ; exit point of _keyCtr
                                    1- 3436     ;	code size estimation:
                                    1- 3437     ;	 1284+  338 =  1622 instructions ( 3920 byte)
                                    1- 3439     	end

SYMBOL TABLE            TYPE     VALUE
__PIN_COUNT__           Constant 0000000E
__PROCESSOR__           Constant 00810623
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/main.s
002 ny8b062d.inc
003 common.inc
004 main.c

PROCESSOR    = NY8B062D (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
